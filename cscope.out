cscope 15 /wg/cvshome/gnome_tempapplet               0003232435
	@gtempapplet.cpp

1 
	~<°dio.h
>

2 
	~<°rög.h
>

5 
	~<∑√l-≠∂ë.h
>

6 
	~<gtk/gtkœbñ.h
>

8 
	~"CMaöAµ.h
"

10 
CMaöAµ
 *
	gtheAµ
 = 
NULL
;

13 
gboﬁón


14 
	$myexam∂e_≠∂ë_fûl
 (
P™ñAµÀt
 *
≠∂ë
,

15 c⁄° 
gch¨
 *
iid
,

16 
gpoöãr
 
d©a
)

18 i‡(
	`°rcmp
 (
iid
, "OAFIID:FE_GNOME_Temp_Applet") != 0)

19  
FALSE
;

22 
theAµ
 = 
√w
 
	`CMaöAµ
–
≠∂ë
 );

25 
theAµ
->
	`showAŒ
();

28 
theAµ
->
	`°¨tBgTask
();

30  
TRUE
;

31 
	}
}

33 
PANEL_APPLET_BONOBO_FACTORY
 ("OAFIID:FE_GNOME_Temp_Applet_Factory",

34 
PANEL_TYPE_APPLET
,

37 
myexam∂e_≠∂ë_fûl
,

38 
NULL
)

	@/usr/include/gtk-2.0/gtk/gtklabel.h

26 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

30 #i‚de‡
__GTK_LABEL_H__


31 
	#__GTK_LABEL_H__


	)

34 
	~<gtk/gtkmisc.h
>

35 
	~<gtk/gtkwödow.h
>

36 
	~<gtk/gtkmíu.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_LABEL
 (
	`gtk_œbñ_gë_ty≥
 ())

	)

42 
	#GTK_LABEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_LABEL
, 
GtkLabñ
))

	)

43 
	#GTK_LABEL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_LABEL
, 
GtkLabñCœss
))

	)

44 
	#GTK_IS_LABEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_LABEL
))

	)

45 
	#GTK_IS_LABEL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_LABEL
))

	)

46 
	#GTK_LABEL_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_LABEL
, 
GtkLabñCœss
))

	)

49 
_GtkLabñ
 
	tGtkLabñ
;

50 
_GtkLabñCœss
 
	tGtkLabñCœss
;

52 
_GtkLabñSñe˘i⁄Info
 
	tGtkLabñSñe˘i⁄Info
;

54 
	s_GtkLabñ


56 
GtkMisc
 
	mmisc
;

59 
gch¨
 *
GSEAL
 (
œbñ
);

60 
guöt
 
GSEAL
 (
jty≥
) : 2;

61 
guöt
 
GSEAL
 (
wøp
) : 1;

62 
guöt
 
GSEAL
 (
u£_undîlöe
) : 1;

63 
guöt
 
GSEAL
 (
u£_m¨kup
) : 1;

64 
guöt
 
GSEAL
 (
ñlùsize
) : 3;

65 
guöt
 
GSEAL
 (
sögÀ_löe_mode
) : 1;

66 
guöt
 
GSEAL
 (
have_å™sf‹m
) : 1;

67 
guöt
 
GSEAL
 (
ö_˛ick
) : 1;

68 
guöt
 
GSEAL
 (
wøp_mode
) : 3;

69 
guöt
 
GSEAL
 (
∑âîn_£t
) : 1;

71 
guöt
 
GSEAL
 (
m√m⁄ic_keyvÆ
);

73 
gch¨
 *
GSEAL
 (
ãxt
);

74 
P™goAârLi°
 *
GSEAL
 (
©ås
);

75 
P™goAârLi°
 *
GSEAL
 (
ef„˘ive_©ås
);

77 
P™goLayout
 *
GSEAL
 (
œyout
);

79 
GtkWidgë
 *
GSEAL
 (
m√m⁄ic_widgë
);

80 
GtkWödow
 *
GSEAL
 (
m√m⁄ic_wödow
);

82 
GtkLabñSñe˘i⁄Info
 *
GSEAL
 (
£À˘_öfo
);

85 
	s_GtkLabñCœss


87 
GtkMiscCœss
 
	m∑ª¡_˛ass
;

89 (* 
	mmove_curs‹
Ë(
GtkLabñ
 *
	mœbñ
,

90 
GtkMovemítSãp
 
	m°ï
,

91 
göt
 
	mcou¡
,

92 
gboﬁón
 
	mexãnd_£À˘i⁄
);

93 (* 
	mc›y_˛ùbﬂrd
Ë(
GtkLabñ
 *
	mœbñ
);

96 (* 
	mp›uœã_p›up
Ë(
GtkLabñ
 *
	mœbñ
,

97 
GtkMíu
 *
	mmíu
);

100 (*
	m_gtk_ª£rved1
) ();

101 (*
	m_gtk_ª£rved2
) ();

102 (*
	m_gtk_ª£rved3
) ();

103 (*
	m_gtk_ª£rved4
) ();

106 
GTy≥
 
	$gtk_œbñ_gë_ty≥
 (Ë
G_GNUC_CONST
;

107 
GtkWidgë
* 
	`gtk_œbñ_√w
 (c⁄° 
gch¨
 *
°r
);

108 
GtkWidgë
* 
	`gtk_œbñ_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
°r
);

109 
	`gtk_œbñ_£t_ãxt
 (
GtkLabñ
 *
œbñ
,

110 c⁄° 
gch¨
 *
°r
);

111 
G_CONST_RETURN
 
gch¨
* 
	`gtk_œbñ_gë_ãxt
 (
GtkLabñ
 *
œbñ
);

112 
	`gtk_œbñ_£t_©åibuãs
 (
GtkLabñ
 *
œbñ
,

113 
P™goAârLi°
 *
©ås
);

114 
P™goAârLi°
 *
	`gtk_œbñ_gë_©åibuãs
 (
GtkLabñ
 *
œbñ
);

115 
	`gtk_œbñ_£t_œbñ
 (
GtkLabñ
 *
œbñ
,

116 c⁄° 
gch¨
 *
°r
);

117 
G_CONST_RETURN
 
gch¨
 *
	`gtk_œbñ_gë_œbñ
 (
GtkLabñ
 *
œbñ
);

118 
	`gtk_œbñ_£t_m¨kup
 (
GtkLabñ
 *
œbñ
,

119 c⁄° 
gch¨
 *
°r
);

120 
	`gtk_œbñ_£t_u£_m¨kup
 (
GtkLabñ
 *
œbñ
,

121 
gboﬁón
 
£âög
);

122 
gboﬁón
 
	`gtk_œbñ_gë_u£_m¨kup
 (
GtkLabñ
 *
œbñ
);

123 
	`gtk_œbñ_£t_u£_undîlöe
 (
GtkLabñ
 *
œbñ
,

124 
gboﬁón
 
£âög
);

125 
gboﬁón
 
	`gtk_œbñ_gë_u£_undîlöe
 (
GtkLabñ
 *
œbñ
);

127 
	`gtk_œbñ_£t_m¨kup_wôh_m√m⁄ic
 (
GtkLabñ
 *
œbñ
,

128 c⁄° 
gch¨
 *
°r
);

129 
guöt
 
	`gtk_œbñ_gë_m√m⁄ic_keyvÆ
 (
GtkLabñ
 *
œbñ
);

130 
	`gtk_œbñ_£t_m√m⁄ic_widgë
 (
GtkLabñ
 *
œbñ
,

131 
GtkWidgë
 *
widgë
);

132 
GtkWidgë
 *
	`gtk_œbñ_gë_m√m⁄ic_widgë
 (
GtkLabñ
 *
œbñ
);

133 
	`gtk_œbñ_£t_ãxt_wôh_m√m⁄ic
 (
GtkLabñ
 *
œbñ
,

134 c⁄° 
gch¨
 *
°r
);

135 
	`gtk_œbñ_£t_ju°ify
 (
GtkLabñ
 *
œbñ
,

136 
GtkJu°ifiˇti⁄
 
jty≥
);

137 
GtkJu°ifiˇti⁄
 
	`gtk_œbñ_gë_ju°ify
 (
GtkLabñ
 *
œbñ
);

138 
	`gtk_œbñ_£t_ñlùsize
 (
GtkLabñ
 *
œbñ
,

139 
P™goEŒùsizeMode
 
mode
);

140 
P™goEŒùsizeMode
 
	`gtk_œbñ_gë_ñlùsize
 (
GtkLabñ
 *
œbñ
);

141 
	`gtk_œbñ_£t_width_ch¨s
 (
GtkLabñ
 *
œbñ
,

142 
göt
 
n_ch¨s
);

143 
göt
 
	`gtk_œbñ_gë_width_ch¨s
 (
GtkLabñ
 *
œbñ
);

144 
	`gtk_œbñ_£t_max_width_ch¨s
 (
GtkLabñ
 *
œbñ
,

145 
göt
 
n_ch¨s
);

146 
göt
 
	`gtk_œbñ_gë_max_width_ch¨s
 (
GtkLabñ
 *
œbñ
);

147 
	`gtk_œbñ_£t_∑âîn
 (
GtkLabñ
 *
œbñ
,

148 c⁄° 
gch¨
 *
∑âîn
);

149 
	`gtk_œbñ_£t_löe_wøp
 (
GtkLabñ
 *
œbñ
,

150 
gboﬁón
 
wøp
);

151 
gboﬁón
 
	`gtk_œbñ_gë_löe_wøp
 (
GtkLabñ
 *
œbñ
);

152 
	`gtk_œbñ_£t_löe_wøp_mode
 (
GtkLabñ
 *
œbñ
,

153 
P™goWøpMode
 
wøp_mode
);

154 
P™goWøpMode
 
	`gtk_œbñ_gë_löe_wøp_mode
 (
GtkLabñ
 *
œbñ
);

155 
	`gtk_œbñ_£t_£À˘abÀ
 (
GtkLabñ
 *
œbñ
,

156 
gboﬁón
 
£âög
);

157 
gboﬁón
 
	`gtk_œbñ_gë_£À˘abÀ
 (
GtkLabñ
 *
œbñ
);

158 
	`gtk_œbñ_£t_™gÀ
 (
GtkLabñ
 *
œbñ
,

159 
gdoubÀ
 
™gÀ
);

160 
gdoubÀ
 
	`gtk_œbñ_gë_™gÀ
 (
GtkLabñ
 *
œbñ
);

161 
	`gtk_œbñ_£À˘_ªgi⁄
 (
GtkLabñ
 *
œbñ
,

162 
göt
 
°¨t_off£t
,

163 
göt
 
íd_off£t
);

164 
gboﬁón
 
	`gtk_œbñ_gë_£À˘i⁄_bounds
 (
GtkLabñ
 *
œbñ
,

165 
göt
 *
°¨t
,

166 
göt
 *
íd
);

168 
P™goLayout
 *
	`gtk_œbñ_gë_œyout
 (
GtkLabñ
 *
œbñ
);

169 
	`gtk_œbñ_gë_œyout_off£ts
 (
GtkLabñ
 *
œbñ
,

170 
göt
 *
x
,

171 
göt
 *
y
);

173 
	`gtk_œbñ_£t_sögÀ_löe_mode
 (
GtkLabñ
 *
œbñ
,

174 
gboﬁón
 
sögÀ_löe_mode
);

175 
gboﬁón
 
	`gtk_œbñ_gë_sögÀ_löe_mode
 (
GtkLabñ
 *
œbñ
);

177 #i‚de‡
GTK_DISABLE_DEPRECATED


179 
	#gtk_œbñ_£t
 
gtk_œbñ_£t_ãxt


	)

180 
	`gtk_œbñ_gë
 (
GtkLabñ
 *
œbñ
,

181 
gch¨
 **
°r
);

187 
guöt
 
	`gtk_œbñ_∑r£_ulöe
 (
GtkLabñ
 *
œbñ
,

188 c⁄° 
gch¨
 *
°rög
);

192 
G_END_DECLS


	@/usr/include/panel-2.0/panel-applet.h

25 #i‚de‡
__PANEL_APPLET_H__


26 
	#__PANEL_APPLET_H__


	)

28 
	~<glib.h
>

29 
	~<gtk/gtk.h
>

30 
	~<b⁄obo/b⁄obo-c⁄åﬁ.h
>

31 
	~<b⁄obo/b⁄obo-maö.h
>

32 
	~<b⁄obo/b⁄obo-ui-comp⁄ít.h
>

33 
	~<b⁄obo/b⁄obo-gíîic-Á˘‹y.h
>

35 
	~<GNOME_P™ñ.h
>

37 
G_BEGIN_DECLS


39 
GNOME_Vîtigo_P™ñOrõ¡
 
	tP™ñAµÀtOrõ¡
;

41 
	#PANEL_APPLET_ORIENT_UP
 
GNOME_Vîtigo_PANEL_ORIENT_UP


	)

42 
	#PANEL_APPLET_ORIENT_DOWN
 
GNOME_Vîtigo_PANEL_ORIENT_DOWN


	)

43 
	#PANEL_APPLET_ORIENT_LEFT
 
GNOME_Vîtigo_PANEL_ORIENT_LEFT


	)

44 
	#PANEL_APPLET_ORIENT_RIGHT
 
GNOME_Vîtigo_PANEL_ORIENT_RIGHT


	)

47 
	#PANEL_TYPE_APPLET
 (
	`∑√l_≠∂ë_gë_ty≥
 ())

	)

48 
	#PANEL_APPLET
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
PANEL_TYPE_APPLET
, 
P™ñAµÀt
))

	)

49 
	#PANEL_APPLET_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
PANEL_TYPE_APPLET
, 
P™ñAµÀtCœss
))

	)

50 
	#PANEL_IS_APPLET
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
PANEL_TYPE_APPLET
))

	)

51 
	#PANEL_IS_APPLET_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
PANEL_TYPE_APPLET
))

	)

52 
	#PANEL_APPLET_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
PANEL_TYPE_APPLET
, 
P™ñAµÀtCœss
))

	)

55 
	mPANEL_NO_BACKGROUND
,

56 
	mPANEL_COLOR_BACKGROUND
,

57 
	mPANEL_PIXMAP_BACKGROUND


58 } 
	tP™ñAµÀtBackgroundTy≥
;

61 
	mPANEL_APPLET_FLAGS_NONE
 = 0,

62 
	mPANEL_APPLET_EXPAND_MAJOR
 = 1 << 0,

63 
	mPANEL_APPLET_EXPAND_MINOR
 = 1 << 1,

64 
	mPANEL_APPLET_HAS_HANDLE
 = 1 << 2

65 } 
	tP™ñAµÀtFœgs
;

67 
_P™ñAµÀt
 
	tP™ñAµÀt
;

68 
_P™ñAµÀtCœss
 
	tP™ñAµÀtCœss
;

69 
_P™ñAµÀtPriv©e
 
	tP™ñAµÀtPriv©e
;

71 
	$gboﬁón
 (*
	tP™ñAµÀtFa˘‹yCÆlback
Ë(
	tP™ñAµÀt
 *
	t≠∂ë
,

72 c⁄° 
	tgch¨
 *
	tiid
,

73 
	tgpoöãr
 
	tu£r_d©a
);

75 
	s_P™ñAµÀt
 {

76 
GtkEvítBox
 
evít_box
;

78 
P™ñAµÀtPriv©e
 *
¥iv
;

81 
	s_P™ñAµÀtCœss
 {

82 
GtkEvítBoxCœss
 
evít_box_˛ass
;

84 (*
ch™ge_‹õ¡
Ë(
P™ñAµÀt
 *
≠∂ë
,

85 
P™ñAµÀtOrõ¡
 
‹õ¡
);

87 (*
ch™ge_size
Ë(
P™ñAµÀt
 *
≠∂ë
,

88 
guöt
 
size
);

90 (*
ch™ge_background
Ë(
P™ñAµÀt
 *
≠∂ë
,

91 
P™ñAµÀtBackgroundTy≥
 
ty≥
,

92 
GdkCﬁ‹
 *
cﬁ‹
,

93 
GdkPixm≠
 *
pixm≠
);

94 (*
move_focus_out_of_≠∂ë
Ë(
P™ñAµÀt
 *
‰ame
,

95 
GtkDúe˘i⁄Ty≥
 
dúe˘i⁄
);

98 
GTy≥
 
	$∑√l_≠∂ë_gë_ty≥
 (Ë
G_GNUC_CONST
;

100 
GtkWidgë
 *
	`∑√l_≠∂ë_√w
 ();

102 
P™ñAµÀtOrõ¡
 
	`∑√l_≠∂ë_gë_‹õ¡
 (
P™ñAµÀt
 *
≠∂ë
);

104 
guöt
 
	`∑√l_≠∂ë_gë_size
 (
P™ñAµÀt
 *
≠∂ë
);

106 
P™ñAµÀtBackgroundTy≥


107 
	`∑√l_≠∂ë_gë_background
 (
P™ñAµÀt
 *
≠∂ë
,

109 
GdkCﬁ‹
 *
cﬁ‹
,

110 
GdkPixm≠
 **
pixm≠
);

112 
	`∑√l_≠∂ë_£t_background_widgë
 (
P™ñAµÀt
 *
≠∂ë
,

113 
GtkWidgë
 *
widgë
);

115 
gch¨
 *
	`∑√l_≠∂ë_gë_¥e„ªn˚s_key
 (
P™ñAµÀt
 *
≠∂ë
);

117 
	`∑√l_≠∂ë_add_¥e„ªn˚s
 (
P™ñAµÀt
 *
≠∂ë
,

118 c⁄° 
gch¨
 *
schema_dú
,

119 
GEº‹
 **
›t_îr‹
);

121 
P™ñAµÀtFœgs
 
	`∑√l_≠∂ë_gë_Êags
 (
P™ñAµÀt
 *
≠∂ë
);

122 
	`∑√l_≠∂ë_£t_Êags
 (
P™ñAµÀt
 *
≠∂ë
,

123 
P™ñAµÀtFœgs
 
Êags
);

125 
	`∑√l_≠∂ë_£t_size_höts
 (
P™ñAµÀt
 *
≠∂ë
,

126 c⁄° *
size_höts
,

127 
n_ñemíts
,

128 
ba£_size
);

130 
gboﬁón
 
	`∑√l_≠∂ë_gë_locked_down
 (
P™ñAµÀt
 *
≠∂ë
);

132 
	`∑√l_≠∂ë_ªque°_focus
 (
P™ñAµÀt
 *
≠∂ë
,

133 
guöt32
 
time°amp
);

135 
B⁄oboC⁄åﬁ
 *
	`∑√l_≠∂ë_gë_c⁄åﬁ
 (
P™ñAµÀt
 *
≠∂ë
);

136 
B⁄oboUIComp⁄ít
 *
	`∑√l_≠∂ë_gë_p›up_comp⁄ít
 (
P™ñAµÀt
 *
≠∂ë
);

138 
	`∑√l_≠∂ë_£tup_míu
 (
P™ñAµÀt
 *
≠∂ë
,

139 c⁄° 
gch¨
 *
xml
,

140 c⁄° 
B⁄oboUIVîb
 *
vîb_li°
,

141 
gpoöãr
 
u£r_d©a
);

143 
	`∑√l_≠∂ë_£tup_míu_‰om_fûe
 (
P™ñAµÀt
 *
≠∂ë
,

144 c⁄° 
gch¨
 *
›t_d©adú
,

145 c⁄° 
gch¨
 *
fûe
,

146 c⁄° 
gch¨
 *
›t_≠p_«me
,

147 c⁄° 
B⁄oboUIVîb
 *
vîb_li°
,

148 
gpoöãr
 
u£r_d©a
);

151 
	`∑√l_≠∂ë_Á˘‹y_maö
 (c⁄° 
gch¨
 *
iid
,

152 
GTy≥
 
≠∂ë_ty≥
,

153 
P™ñAµÀtFa˘‹yCÆlback
 
ˇŒback
,

154 
gpoöãr
 
d©a
);

156 
	`∑√l_≠∂ë_Á˘‹y_maö_˛osuª
 (c⁄° 
gch¨
 *
iid
,

157 
GTy≥
 
≠∂ë_ty≥
,

158 
GClosuª
 *
˛osuª
);

160 
B⁄obo_Unknown
 
	`∑√l_≠∂ë_shlib_Á˘‹y
 (c⁄° *
iid
,

161 
GTy≥
 
≠∂ë_ty≥
,

162 
P‹èbÀSîvî_POA
 
pﬂ
,

163 
gpoöãr
 
im∂_±r
,

164 
P™ñAµÀtFa˘‹yCÆlback
 
ˇŒback
,

165 
gpoöãr
 
u£r_d©a
,

166 
CORBA_Envú⁄mít
 *
ev
);

168 
B⁄obo_Unknown
 
	`∑√l_≠∂ë_shlib_Á˘‹y_˛osuª
 (c⁄° *
iid
,

169 
GTy≥
 
≠∂ë_ty≥
,

170 
P‹èbÀSîvî_POA
 
pﬂ
,

171 
gpoöãr
 
im∂_±r
,

172 
GClosuª
 *
˛osuª
,

173 
CORBA_Envú⁄mít
 *
ev
);

183 #i‡!
	`deföed
(
ENABLE_NLS
)

184 
	#_PANEL_APPLET_SETUP_GETTEXT
(
ˇŒ_ãxtdomaö
) \

185 dÿ{ 
	}
} 0)

	)

187 
	~<liböé.h
>

188 
	#_PANEL_APPLET_SETUP_GETTEXT
(
ˇŒ_ãxtdomaö
) \

190 
	`bödãxtdomaö
 (
GETTEXT_PACKAGE
, 
GNOMELOCALEDIR
); \

191 
	`böd_ãxtdomaö_code£t
 (
GETTEXT_PACKAGE
, "UTF-8"); \

192 i‡(
ˇŒ_ãxtdomaö
) \

193 
	`ãxtdomaö
 (
GETTEXT_PACKAGE
); \

194 } 0)

	)

197 
	#PANEL_APPLET_BONOBO_FACTORY
(
iid
, 
ty≥
, 
«me
, 
vîsi⁄
, 
ˇŒback
, 
d©a
) \

198 
	`maö
 (
¨gc
, *
¨gv
 []) \

200 
GO±i⁄C⁄ãxt
 *
c⁄ãxt
; \

201 
GEº‹
 *
îr‹
; \

202 
ªtvÆ
; \

204 
	`_PANEL_APPLET_SETUP_GETTEXT
 (
TRUE
); \

206 
c⁄ãxt
 = 
	`g_›ti⁄_c⁄ãxt_√w
 (""); \

207 
	`g_›ti⁄_c⁄ãxt_add_group
 (
c⁄ãxt
, 
	`gtk_gë_›ti⁄_group
 (
TRUE
)); \

208 
	`g_›ti⁄_c⁄ãxt_add_group
 (
c⁄ãxt
, \

209 
	`b⁄obo_a˘iv©i⁄_gë_g›ti⁄_group
 ()); \

211 
îr‹
 = 
NULL
; \

212 i‡(!
	`g_›ti⁄_c⁄ãxt_∑r£
 (
c⁄ãxt
, &
¨gc
, &
¨gv
, &
îr‹
)) { \

213 i‡(
îr‹
) { \

214 
	`g_¥öãº
 ("CannotÖarseárguments: %s.\n", \

215 
îr‹
->
mesßge
); \

216 
	`g_îr‹_‰ì
 (
îr‹
); \

218 
	`g_¥öãº
 ("CannotÖarseárguments.\n"); \

219 
	`g_›ti⁄_c⁄ãxt_‰ì
 (
c⁄ãxt
); \

223 
	`gtk_öô
 (&
¨gc
, &
¨gv
); \

224 i‡(!
	`b⁄obo_öô
 (&
¨gc
, 
¨gv
)) { \

225 
	`g_¥öãº
 ("Cannot initialize bonobo.\n"); \

229 
ªtvÆ
 = 
	`∑√l_≠∂ë_Á˘‹y_maö
 (
iid
, 
ty≥
, 
ˇŒback
, 
d©a
); \

230 
	`g_›ti⁄_c⁄ãxt_‰ì
 (
c⁄ãxt
); \

232  
ªtvÆ
; \

233 }

	)

235 
	#PANEL_APPLET_BONOBO_SHLIB_FACTORY
(
iid
, 
ty≥
, 
des¸
, 
ˇŒback
, 
d©a
) \

236 
B⁄obo_Unknown
 \

237 
	`__∑√l_≠∂ë_shlib_Á˘‹y
 (
P‹èbÀSîvî_POA
 
pﬂ
, \

238 c⁄° *
ﬂfiid
, \

239 
gpoöãr
 
im∂_±r
, \

240 
CORBA_Envú⁄mít
 *
ev
) \

242 
	`_PANEL_APPLET_SETUP_GETTEXT
 (
FALSE
); \

243  
	`∑√l_≠∂ë_shlib_Á˘‹y
 ((
iid
), (
ty≥
), 
pﬂ
, 
im∂_±r
, \

244 (
ˇŒback
), (
d©a
), 
ev
); \

246 
B⁄oboA˘iv©i⁄PlugöObje˘
 
∂ugö_li°
[] = { \

247 { (
iid
), 
__∑√l_≠∂ë_shlib_Á˘‹y
 }, \

248 { 
NULL
 } \

250 c⁄° 
B⁄oboA˘iv©i⁄Plugö
 
B⁄obo_Plugö_öfo
 = { 
∂ugö_li°
, (
des¸
Ë};

	)

252 
	gG_END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

295 
__THROW
 
__wur
;

300 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

415 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

416 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

417 #ifde‡
__REDIRECT


421 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

422 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

423 
__isoc99_fsˇnf
Ë
__wur
;

424 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

425 
__isoc99_sˇnf
Ë
__wur
;

426 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

427 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

428 
__isoc99_ssˇnf
Ë
__THROW
;

430 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

432 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

435 
	#fsˇnf
 
__isoc99_fsˇnf


	)

436 
	#sˇnf
 
__isoc99_sˇnf


	)

437 
	#ssˇnf
 
__isoc99_ssˇnf


	)

441 
__END_NAMESPACE_STD


443 #ifdef 
__USE_ISOC99


444 
__BEGIN_NAMESPACE_C99


449 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

450 
_G_va_li°
 
__¨g
)

451 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

457 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

461 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

463 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

465 #i‡!
deföed
 
__USE_GNU
 \

466 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

467 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

468 #ifde‡
__REDIRECT


472 
	`__REDIRECT
 (
vfsˇnf
,

473 (
FILE
 *
__ª°ri˘
 
__s
,

474 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

475 
__isoc99_vfsˇnf
)

476 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

477 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

478 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

480 
	`__REDIRECT
 (
vssˇnf
,

481 (
__c⁄°
 *
__ª°ri˘
 
__s
,

482 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

483 
__isoc99_vssˇnf
)

484 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

486 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

487 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

488 
_G_va_li°
 
__¨g
Ë
__wur
;

489 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

490 
_G_va_li°
 
__¨g
Ë
__wur
;

491 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

493 
_G_va_li°
 
__¨g
Ë
__THROW
;

494 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

495 
	#vsˇnf
 
__isoc99_vsˇnf


	)

496 
	#vssˇnf
 
__isoc99_vssˇnf


	)

500 
__END_NAMESPACE_C99


504 
__BEGIN_NAMESPACE_STD


509 
	`fgëc
 (
FILE
 *
__°ªam
);

510 
	`gëc
 (
FILE
 *
__°ªam
);

516 
	`gëch¨
 ();

517 
__END_NAMESPACE_STD


521 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

523 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


528 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

529 
	`gëch¨_u∆ocked
 ();

532 #ifde‡
__USE_MISC


539 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

543 
__BEGIN_NAMESPACE_STD


551 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

552 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

558 
	`putch¨
 (
__c
);

559 
__END_NAMESPACE_STD


563 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

565 #ifde‡
__USE_MISC


572 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

575 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


580 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

581 
	`putch¨_u∆ocked
 (
__c
);

585 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

586 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

588 
	`gëw
 (
FILE
 *
__°ªam
);

591 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

595 
__BEGIN_NAMESPACE_STD


600 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

601 
__wur
;

608 *
	$gës
 (*
__s
Ë
__wur
;

609 
__END_NAMESPACE_STD


611 #ifde‡
__USE_GNU


618 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

619 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

623 #ifdef 
__USE_GNU


634 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

635 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

636 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

637 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

638 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

639 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

648 
size_t
 *
__ª°ri˘
 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 
__BEGIN_NAMESPACE_STD


658 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

664 
	`puts
 (
__c⁄°
 *
__s
);

671 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

678 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

679 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

685 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

686 
__END_NAMESPACE_STD


688 #ifde‡
__USE_GNU


695 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
);

699 #ifde‡
__USE_MISC


706 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

713 
__BEGIN_NAMESPACE_STD


718 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

723 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

728 
	`ªwöd
 (
FILE
 *
__°ªam
);

729 
__END_NAMESPACE_STD


736 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


737 #i‚de‡
__USE_FILE_OFFSET64


742 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

747 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

749 #ifde‡
__REDIRECT


750 
	`__REDIRECT
 (
f£eko
,

751 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

752 
f£eko64
);

753 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

755 
	#f£eko
 
f£eko64


	)

756 
	#·ñlo
 
·ñlo64


	)

761 
__BEGIN_NAMESPACE_STD


762 #i‚de‡
__USE_FILE_OFFSET64


767 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

772 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

774 #ifde‡
__REDIRECT


775 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

776 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

777 
	`__REDIRECT
 (
f£ços
,

778 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

780 
	#fgëpos
 
fgëpos64


	)

781 
	#f£ços
 
f£ços64


	)

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_LARGEFILE64


787 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

788 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

789 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

790 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

793 
__BEGIN_NAMESPACE_STD


795 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

797 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

799 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

800 
__END_NAMESPACE_STD


802 #ifde‡
__USE_MISC


804 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

805 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

806 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
__BEGIN_NAMESPACE_STD


815 
	`≥º‹
 (
__c⁄°
 *
__s
);

816 
__END_NAMESPACE_STD


822 
	~<bôs/sys_îæi°.h
>

825 #ifdef 
__USE_POSIX


827 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 #ifde‡
__USE_MISC


832 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

837 
deföed
 
__USE_MISC
)

842 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

848 
	`p˛o£
 (
FILE
 *
__°ªam
);

852 #ifdef 
__USE_POSIX


854 *
	$˘îmid
 (*
__s
Ë
__THROW
;

858 #ifde‡
__USE_XOPEN


860 *
	`cu£rid
 (*
__s
);

864 #ifdef 
__USE_GNU


865 
ob°ack
;

868 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

869 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

870 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

871 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

872 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

873 
_G_va_li°
 
__¨gs
)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

878 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


882 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

886 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

889 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

892 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


896 
	#__√ed_gë›t


	)

897 
	~<gë›t.h
>

902 #ifde‡
__USE_EXTERN_INLINES


903 
	~<bôs/°dio.h
>

905 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


906 
	~<bôs/°dio2.h
>

908 #ifde‡
__LDBL_COMPAT


909 
	~<bôs/°dio-ldbl.h
>

912 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@CMainApp.h

1 #i‚de‡
_MAINAPP_H_


2 
	#_MAINAPP_H_


	)

4 
	~<°rög
>

5 
	~<∑√l-≠∂ë.h
>

6 
	~<gtk/gtkœbñ.h
>

7 
	~"CPªfs.h
"

8 
	~"CTempRódî.h
"

11 ˛as†
	cCMaöAµ


13 
	mpublic
:

14 
CMaöAµ
–
P™ñAµÀt
 *
≠∂ë
);

15 
	mvútuÆ
 ~
CMaöAµ
();

17 
showAŒ
();

18 
°¨tBgTask
();

21 
	m¥iv©e
:

22 
upd©eTempLabñ
–
cuº_ãmp_vÆ
 );

23 * 
bgTaskFunc
();

24 * 
thªadfunc
 ( * 
d©a
 );

26 
CPªfs
 
	mm_globPªfs
;

27 
P™ñAµÀt
 *
	mm_maöAµÀt
;

28 
GtkWidgë
 *
	mm_maöWidgë
;

29 
±hªad_t
 
	mm_bgTaskId
;

31 
B⁄oboUIVîb
 *
	mm_míuC⁄ns
;

32 
	m°d
::
°rög
 *
m_c⁄ãxtMíuXml
;

34 
≠∂ë_de°royed
 (
GtkWidgë
 * 
widgë
, * 
d©a
);

35 
di•œyDülog_wøµî
–
B⁄oboUIComp⁄ít
 *
comp⁄ít
, 
gpoöãr
 
u£r_d©a
, c⁄° *
˙ame
);

36 
di•œyPr›Dülog
–
B⁄oboUIComp⁄ít
 *
comp⁄ít
, 
gpoöãr
 
u£r_d©a
, c⁄° *
˙ame
);

37 
di•œyAboutDülog
–
B⁄oboUIComp⁄ít
 *
comp⁄ít
, 
gpoöãr
 
u£r_d©a
, c⁄° *
˙ame
);

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡
_FORTIFY_SOURCE
 > 1

287 
	#__USE_FORTIFY_LEVEL
 2

	)

289 
	#__USE_FORTIFY_LEVEL
 1

	)

292 
	#__USE_FORTIFY_LEVEL
 0

	)

296 
	#__STDC_IEC_559__
 1

	)

297 
	#__STDC_IEC_559_COMPLEX__
 1

	)

300 
	#__STDC_ISO_10646__
 200009L

	)

308 #unde‡
__GNU_LIBRARY__


309 
	#__GNU_LIBRARY__
 6

	)

313 
	#__GLIBC__
 2

	)

314 
	#__GLIBC_MINOR__
 9

	)

316 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

317 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

320 #i‡
deföed
 
__GNUC__
 \

321 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

322 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

323 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

324 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

328 #i‚de‡
__ASSEMBLER__


329 #i‚de‡
_SYS_CDEFS_H


330 
	~<sys/cdefs.h
>

335 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


336 
	#__USE_LARGEFILE
 1

	)

337 
	#__USE_LARGEFILE64
 1

	)

343 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

344 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

345 && 
deföed
 
	g__exã∫_ölöe


346 
	#__USE_EXTERN_INLINES
 1

	)

354 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/glib-2.0/glib.h

27 #i‚de‡
__G_LIB_H__


28 
	#__G_LIB_H__


	)

30 
	#__GLIB_H_INSIDE__


	)

32 
	~<glib/gÆloˇ.h
>

33 
	~<glib/g¨øy.h
>

34 
	~<glib/gasyncqueue.h
>

35 
	~<glib/g©omic.h
>

36 
	~<glib/gbackåa˚.h
>

37 
	~<glib/gba£64.h
>

38 
	~<glib/gbookm¨kfûe.h
>

39 
	~<glib/gˇche.h
>

40 
	~<glib/gchecksum.h
>

41 
	~<glib/gcom∂ëi⁄.h
>

42 
	~<glib/gc⁄vît.h
>

43 
	~<glib/gd©a£t.h
>

44 
	~<glib/gd©e.h
>

45 
	~<glib/gdú.h
>

46 
	~<glib/gîr‹.h
>

47 
	~<glib/gfûeutûs.h
>

48 
	~<glib/ghash.h
>

49 
	~<glib/ghook.h
>

50 
	~<glib/gioch™√l.h
>

51 
	~<glib/gkeyfûe.h
>

52 
	~<glib/gli°.h
>

53 
	~<glib/gma¸os.h
>

54 
	~<glib/gmaö.h
>

55 
	~<glib/gm≠≥dfûe.h
>

56 
	~<glib/gm¨kup.h
>

57 
	~<glib/gmem.h
>

58 
	~<glib/gmesßges.h
>

59 
	~<glib/gnode.h
>

60 
	~<glib/g›ti⁄.h
>

61 
	~<glib/g∑âîn.h
>

62 
	~<glib/gpﬁl.h
>

63 
	~<glib/g¥imes.h
>

64 
	~<glib/gqs‹t.h
>

65 
	~<glib/gqu¨k.h
>

66 
	~<glib/gqueue.h
>

67 
	~<glib/gønd.h
>

68 
	~<glib/gªl.h
>

69 
	~<glib/gªgex.h
>

70 
	~<glib/gsˇ¬î.h
>

71 
	~<glib/g£quí˚.h
>

72 
	~<glib/gshñl.h
>

73 
	~<glib/g¶i˚.h
>

74 
	~<glib/g¶i°.h
>

75 
	~<glib/g•awn.h
>

76 
	~<glib/g°rfuncs.h
>

77 
	~<glib/g°rög.h
>

78 
	~<glib/gã°utûs.h
>

79 
	~<glib/gthªad.h
>

80 
	~<glib/gthªadpoﬁ.h
>

81 
	~<glib/gtimî.h
>

82 
	~<glib/gåì.h
>

83 
	~<glib/gty≥s.h
>

84 
	~<glib/gunicode.h
>

85 
	~<glib/gurifuncs.h
>

86 
	~<glib/gutûs.h
>

87 #ifde‡
G_PLATFORM_WIN32


88 
	~<glib/gwö32.h
>

91 #unde‡
__GLIB_H_INSIDE__


	@/usr/include/gtk-2.0/gtk/gtk.h

27 #i‚de‡
__GTK_H__


28 
	#__GTK_H__


	)

30 
	#__GTK_H_INSIDE__


	)

32 
	~<gdk/gdk.h
>

33 
	~<gtk/gtkaboutdülog.h
>

34 
	~<gtk/gtkac˚lgroup.h
>

35 
	~<gtk/gtkac˚Œabñ.h
>

36 
	~<gtk/gtkac˚lm≠.h
>

37 
	~<gtk/gtkac˚ssibÀ.h
>

38 
	~<gtk/gtka˘i⁄.h
>

39 
	~<gtk/gtka˘i⁄group.h
>

40 
	~<gtk/gtka˘iv©abÀ.h
>

41 
	~<gtk/gtkadju°mít.h
>

42 
	~<gtk/gtkÆignmít.h
>

43 
	~<gtk/gtk¨row.h
>

44 
	~<gtk/gtka•e˘‰ame.h
>

45 
	~<gtk/gtkassi°™t.h
>

46 
	~<gtk/gtkbbox.h
>

47 
	~<gtk/gtkbö.h
>

48 
	~<gtk/gtkbödögs.h
>

49 
	~<gtk/gtkbox.h
>

50 
	~<gtk/gtkbuûdabÀ.h
>

51 
	~<gtk/gtkbuûdî.h
>

52 
	~<gtk/gtkbuâ⁄.h
>

53 
	~<gtk/gtkˇÀnd¨.h
>

54 
	~<gtk/gtk˚ŒedôabÀ.h
>

55 
	~<gtk/gtk˚Œœyout.h
>

56 
	~<gtk/gtk˚Œªndîî.h
>

57 
	~<gtk/gtk˚Œªndîîac˚l.h
>

58 
	~<gtk/gtk˚Œªndîîcombo.h
>

59 
	~<gtk/gtk˚Œªndîîpixbuf.h
>

60 
	~<gtk/gtk˚Œªndîî¥ogªss.h
>

61 
	~<gtk/gtk˚Œªndîî•ö.h
>

62 
	~<gtk/gtk˚Œªndîîãxt.h
>

63 
	~<gtk/gtk˚ŒªndîîtoggÀ.h
>

64 
	~<gtk/gtk˚Œvõw.h
>

65 
	~<gtk/gtkcheckbuâ⁄.h
>

66 
	~<gtk/gtkcheckmíuôem.h
>

67 
	~<gtk/gtk˛ùbﬂrd.h
>

68 
	~<gtk/gtkcﬁ‹buâ⁄.h
>

69 
	~<gtk/gtkcﬁ‹£l.h
>

70 
	~<gtk/gtkcﬁ‹£ldülog.h
>

71 
	~<gtk/gtkcombobox.h
>

72 
	~<gtk/gtkcomboboxíåy.h
>

73 
	~<gtk/gtkc⁄èöî.h
>

74 
	~<gtk/gtkcurve.h
>

75 
	~<gtk/gtkdebug.h
>

76 
	~<gtk/gtkdülog.h
>

77 
	~<gtk/gtkdnd.h
>

78 
	~<gtk/gtkdøwög¨ó.h
>

79 
	~<gtk/gtkedôabÀ.h
>

80 
	~<gtk/gtkíåy.h
>

81 
	~<gtk/gtkíåycom∂ëi⁄.h
>

82 
	~<gtk/gtkíums.h
>

83 
	~<gtk/gtkevítbox.h
>

84 
	~<gtk/gtkex∑ndî.h
>

85 
	~<gtk/gtkfixed.h
>

86 
	~<gtk/gtkfûechoo£r.h
>

87 
	~<gtk/gtkfûechoo£rbuâ⁄.h
>

88 
	~<gtk/gtkfûechoo£rdülog.h
>

89 
	~<gtk/gtkfûechoo£rwidgë.h
>

90 
	~<gtk/gtkfûefûãr.h
>

91 
	~<gtk/gtkf⁄tbuâ⁄.h
>

92 
	~<gtk/gtkf⁄t£l.h
>

93 
	~<gtk/gtk‰ame.h
>

94 
	~<gtk/gtkgamma.h
>

95 
	~<gtk/gtkgc.h
>

96 
	~<gtk/gtkh™dÀbox.h
>

97 
	~<gtk/gtkhbbox.h
>

98 
	~<gtk/gtkhbox.h
>

99 
	~<gtk/gtkh∑√d.h
>

100 
	~<gtk/gtkhruÀr.h
>

101 
	~<gtk/gtkhsˇÀ.h
>

102 
	~<gtk/gtkhs¸ﬁlb¨.h
>

103 
	~<gtk/gtkh£∑øt‹.h
>

104 
	~<gtk/gtkhsv.h
>

105 
	~<gtk/gtkic⁄Á˘‹y.h
>

106 
	~<gtk/gtkic⁄theme.h
>

107 
	~<gtk/gtkic⁄võw.h
>

108 
	~<gtk/gtkimage.h
>

109 
	~<gtk/gtkimagemíuôem.h
>

110 
	~<gtk/gtkimc⁄ãxt.h
>

111 
	~<gtk/gtkimc⁄ãxtsim∂e.h
>

112 
	~<gtk/gtkimmu…ic⁄ãxt.h
>

113 
	~<gtk/gtköputdülog.h
>

114 
	~<gtk/gtkövisibÀ.h
>

115 
	~<gtk/gtkôem.h
>

116 
	~<gtk/gtkœbñ.h
>

117 
	~<gtk/gtkœyout.h
>

118 
	~<gtk/gtklökbuâ⁄.h
>

119 
	~<gtk/gtkli°°‹e.h
>

120 
	~<gtk/gtkmaö.h
>

121 
	~<gtk/gtkmíu.h
>

122 
	~<gtk/gtkmíub¨.h
>

123 
	~<gtk/gtkmíuôem.h
>

124 
	~<gtk/gtkmíushñl.h
>

125 
	~<gtk/gtkmíutoﬁbuâ⁄.h
>

126 
	~<gtk/gtkmesßgedülog.h
>

127 
	~<gtk/gtkmisc.h
>

128 
	~<gtk/gtkmoduÀs.h
>

129 
	~<gtk/gtkmou¡›î©i⁄.h
>

130 
	~<gtk/gtknŸebook.h
>

131 
	~<gtk/gtkobje˘.h
>

132 
	~<gtk/gtk‹õ¡abÀ.h
>

133 
	~<gtk/gtk∑ge£tup.h
>

134 
	~<gtk/gtk∑≥rsize.h
>

135 
	~<gtk/gtk∑√d.h
>

136 
	~<gtk/gtk∂ug.h
>

137 
	~<gtk/gtk¥ötc⁄ãxt.h
>

138 
	~<gtk/gtk¥öt›î©i⁄.h
>

139 
	~<gtk/gtk¥öt›î©i⁄¥evõw.h
>

140 
	~<gtk/gtk¥öt£âögs.h
>

141 
	~<gtk/gtk¥ogªssb¨.h
>

142 
	~<gtk/gtkødiﬂ˘i⁄.h
>

143 
	~<gtk/gtkødiobuâ⁄.h
>

144 
	~<gtk/gtkødiomíuôem.h
>

145 
	~<gtk/gtkødiŸoﬁbuâ⁄.h
>

146 
	~<gtk/gtkønge.h
>

147 
	~<gtk/gtkrc.h
>

148 
	~<gtk/gtkª˚¡a˘i⁄.h
>

149 
	~<gtk/gtkª˚¡choo£r.h
>

150 
	~<gtk/gtkª˚¡choo£rdülog.h
>

151 
	~<gtk/gtkª˚¡choo£rmíu.h
>

152 
	~<gtk/gtkª˚¡choo£rwidgë.h
>

153 
	~<gtk/gtkª˚¡fûãr.h
>

154 
	~<gtk/gtkª˚¡m™agî.h
>

155 
	~<gtk/gtkruÀr.h
>

156 
	~<gtk/gtksˇÀ.h
>

157 
	~<gtk/gtksˇÀbuâ⁄.h
>

158 
	~<gtk/gtks¸ﬁlb¨.h
>

159 
	~<gtk/gtks¸ﬁÀdwödow.h
>

160 
	~<gtk/gtk£À˘i⁄.h
>

161 
	~<gtk/gtk£∑øt‹.h
>

162 
	~<gtk/gtk£∑øt‹míuôem.h
>

163 
	~<gtk/gtk£∑øt‹toﬁôem.h
>

164 
	~<gtk/gtk£âögs.h
>

165 
	~<gtk/gtkshow.h
>

166 
	~<gtk/gtksizegroup.h
>

167 
	~<gtk/gtksockë.h
>

168 
	~<gtk/gtk•öbuâ⁄.h
>

169 
	~<gtk/gtk°©usb¨.h
>

170 
	~<gtk/gtk°©usic⁄.h
>

171 
	~<gtk/gtk°ock.h
>

172 
	~<gtk/gtk°yÀ.h
>

173 
	~<gtk/gtkèbÀ.h
>

174 
	~<gtk/gtkã¨offmíuôem.h
>

175 
	~<gtk/gtkãxtbuf„r.h
>

176 
	~<gtk/gtkãxtbuf„ºichãxt.h
>

177 
	~<gtk/gtkãxtchûd.h
>

178 
	~<gtk/gtkãxtôî.h
>

179 
	~<gtk/gtkãxtm¨k.h
>

180 
	~<gtk/gtkãxâag.h
>

181 
	~<gtk/gtkãxâagèbÀ.h
>

182 
	~<gtk/gtkãxtvõw.h
>

183 
	~<gtk/gtktoggÀa˘i⁄.h
>

184 
	~<gtk/gtktoggÀbuâ⁄.h
>

185 
	~<gtk/gtktoggÀtoﬁbuâ⁄.h
>

186 
	~<gtk/gtktoﬁb¨.h
>

187 
	~<gtk/gtktoﬁbuâ⁄.h
>

188 
	~<gtk/gtktoﬁôem.h
>

189 
	~<gtk/gtktoﬁshñl.h
>

190 
	~<gtk/gtktoﬁtù.h
>

191 
	~<gtk/gtkã°utûs.h
>

192 
	~<gtk/gtkåìdnd.h
>

193 
	~<gtk/gtkåìmodñ.h
>

194 
	~<gtk/gtkåìmodñfûãr.h
>

195 
	~<gtk/gtkåìmodñs‹t.h
>

196 
	~<gtk/gtkåì£À˘i⁄.h
>

197 
	~<gtk/gtkåìs‹èbÀ.h
>

198 
	~<gtk/gtkåì°‹e.h
>

199 
	~<gtk/gtkåìvõw.h
>

200 
	~<gtk/gtkåìvõwcﬁumn.h
>

201 
	~<gtk/gtkty≥utûs.h
>

202 
	~<gtk/gtkuim™agî.h
>

203 
	~<gtk/gtkvbbox.h
>

204 
	~<gtk/gtkvbox.h
>

205 
	~<gtk/gtkvîsi⁄.h
>

206 
	~<gtk/gtkvõwp‹t.h
>

207 
	~<gtk/gtkvﬁumebuâ⁄.h
>

208 
	~<gtk/gtkv∑√d.h
>

209 
	~<gtk/gtkvruÀr.h
>

210 
	~<gtk/gtkvsˇÀ.h
>

211 
	~<gtk/gtkvs¸ﬁlb¨.h
>

212 
	~<gtk/gtkv£∑øt‹.h
>

213 
	~<gtk/gtkwidgë.h
>

214 
	~<gtk/gtkwödow.h
>

217 
	~<gtk/gtkãxt.h
>

218 
	~<gtk/gtkåì.h
>

219 
	~<gtk/gtkåìôem.h
>

222 
	~<gtk/gtk˛i°.h
>

223 
	~<gtk/gtkcombo.h
>

224 
	~<gtk/gtk˘ªe.h
>

225 
	~<gtk/gtkfûe£l.h
>

226 
	~<gtk/gtkôemÁ˘‹y.h
>

227 
	~<gtk/gtkli°.h
>

228 
	~<gtk/gtkli°ôem.h
>

229 
	~<gtk/gtkﬁdedôabÀ.h
>

230 
	~<gtk/gtk›ti⁄míu.h
>

231 
	~<gtk/gtkpixm≠.h
>

232 
	~<gtk/gtk¥evõw.h
>

233 
	~<gtk/gtk¥ogªss.h
>

234 
	~<gtk/gtksig«l.h
>

235 
	~<gtk/gtktùsquîy.h
>

236 
	~<gtk/gtktoﬁtùs.h
>

238 #unde‡
__GTK_H_INSIDE__


	@/usr/include/gtk-2.0/gtk/gtkmenu.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MENU_H__


32 
	#__GTK_MENU_H__


	)

35 
	~<gtk/gtkac˚lgroup.h
>

36 
	~<gtk/gtkmíushñl.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_MENU
 (
	`gtk_míu_gë_ty≥
 ())

	)

42 
	#GTK_MENU
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_MENU
, 
GtkMíu
))

	)

43 
	#GTK_MENU_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_MENU
, 
GtkMíuCœss
))

	)

44 
	#GTK_IS_MENU
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_MENU
))

	)

45 
	#GTK_IS_MENU_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_MENU
))

	)

46 
	#GTK_MENU_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_MENU
, 
GtkMíuCœss
))

	)

49 
_GtkMíu
 
	tGtkMíu
;

50 
_GtkMíuCœss
 
	tGtkMíuCœss
;

52 (*
	tGtkMíuPosôi⁄Func
Ë(
	tGtkMíu
 *
	tmíu
,

53 
	tgöt
 *
	tx
,

54 
	tgöt
 *
	ty
,

55 
	tgboﬁón
 *
	tpush_ö
,

56 
	tgpoöãr
 
	tu£r_d©a
);

57 (*
	tGtkMíuDëachFunc
Ë(
	tGtkWidgë
 *
	t©èch_widgë
,

58 
	tGtkMíu
 *
	tmíu
);

60 
	s_GtkMíu


62 
GtkMíuShñl
 
	`GSEAL
 (
míu_shñl
);

64 
GtkWidgë
 *
	`GSEAL
 (
∑ª¡_míu_ôem
);

65 
GtkWidgë
 *
	`GSEAL
 (
ﬁd_a˘ive_míu_ôem
);

67 
GtkAc˚lGroup
 *
	`GSEAL
 (
ac˚l_group
);

68 
gch¨
 *
	`GSEAL
 (
ac˚l_∑th
);

69 
GtkMíuPosôi⁄Func
 
	`GSEAL
 (
posôi⁄_func
);

70 
gpoöãr
 
	`GSEAL
 (
posôi⁄_func_d©a
);

72 
guöt
 
	`GSEAL
 (
toggÀ_size
);

77 
GtkWidgë
 *
	`GSEAL
 (
t›Àvñ
);

79 
GtkWidgë
 *
	`GSEAL
 (
ã¨off_wödow
);

80 
GtkWidgë
 *
	`GSEAL
 (
ã¨off_hbox
);

81 
GtkWidgë
 *
	`GSEAL
 (
ã¨off_s¸ﬁlb¨
);

82 
GtkAdju°mít
 *
	`GSEAL
 (
ã¨off_adju°mít
);

84 
GdkWödow
 *
	`GSEAL
 (
võw_wödow
);

85 
GdkWödow
 *
	`GSEAL
 (
bö_wödow
);

87 
göt
 
	`GSEAL
 (
s¸ﬁl_off£t
);

88 
göt
 
	`GSEAL
 (
ßved_s¸ﬁl_off£t
);

89 
göt
 
	`GSEAL
 (
s¸ﬁl_°ï
);

90 
guöt
 
	`GSEAL
 (
timeout_id
);

95 
GdkRegi⁄
 *
	`GSEAL
 (
«vig©i⁄_ªgi⁄
);

96 
guöt
 
	`GSEAL
 (
«vig©i⁄_timeout
);

98 
guöt
 
	`GSEAL
 (
√eds_de°ru˘i⁄_ªf_cou¡
) : 1;

99 
guöt
 
	`GSEAL
 (
t‹n_off
) : 1;

103 
guöt
 
	`GSEAL
 (
ã¨off_a˘ive
) : 1;

105 
guöt
 
	`GSEAL
 (
s¸ﬁl_Á°
) : 1;

107 
guöt
 
	`GSEAL
 (
uµî_¨row_visibÀ
) : 1;

108 
guöt
 
	`GSEAL
 (
lowî_¨row_visibÀ
) : 1;

109 
guöt
 
	`GSEAL
 (
uµî_¨row_¥ñight
) : 1;

110 
guöt
 
	`GSEAL
 (
lowî_¨row_¥ñight
) : 1;

113 
	s_GtkMíuCœss


115 
GtkMíuShñlCœss
 
∑ª¡_˛ass
;

118 (*
_gtk_ª£rved1
) ();

119 (*
_gtk_ª£rved2
) ();

120 (*
_gtk_ª£rved3
) ();

121 (*
_gtk_ª£rved4
) ();

125 
GTy≥
 
	$gtk_míu_gë_ty≥
 (Ë
G_GNUC_CONST
;

126 
GtkWidgë
* 
	`gtk_míu_√w
 ();

129 
	`gtk_míu_p›up
 (
GtkMíu
 *
míu
,

130 
GtkWidgë
 *
∑ª¡_míu_shñl
,

131 
GtkWidgë
 *
∑ª¡_míu_ôem
,

132 
GtkMíuPosôi⁄Func
 
func
,

133 
gpoöãr
 
d©a
,

134 
guöt
 
buâ⁄
,

135 
guöt32
 
a˘iv©e_time
);

140 
	`gtk_míu_ªposôi⁄
 (
GtkMíu
 *
míu
);

142 
	`gtk_míu_p›down
 (
GtkMíu
 *
míu
);

147 
GtkWidgë
* 
	`gtk_míu_gë_a˘ive
 (
GtkMíu
 *
míu
);

148 
	`gtk_míu_£t_a˘ive
 (
GtkMíu
 *
míu
,

149 
guöt
 
ödex_
);

154 
	`gtk_míu_£t_ac˚l_group
 (
GtkMíu
 *
míu
,

155 
GtkAc˚lGroup
 *
ac˚l_group
);

156 
GtkAc˚lGroup
* 
	`gtk_míu_gë_ac˚l_group
 (
GtkMíu
 *
míu
);

157 
	`gtk_míu_£t_ac˚l_∑th
 (
GtkMíu
 *
míu
,

158 c⁄° 
gch¨
 *
ac˚l_∑th
);

159 c⁄° 
gch¨
* 
	`gtk_míu_gë_ac˚l_∑th
 (
GtkMíu
 *
míu
);

165 
	`gtk_míu_©èch_to_widgë
 (
GtkMíu
 *
míu
,

166 
GtkWidgë
 *
©èch_widgë
,

167 
GtkMíuDëachFunc
 
dëachî
);

168 
	`gtk_míu_dëach
 (
GtkMíu
 *
míu
);

174 
GtkWidgë
* 
	`gtk_míu_gë_©èch_widgë
 (
GtkMíu
 *
míu
);

176 
	`gtk_míu_£t_ã¨off_°©e
 (
GtkMíu
 *
míu
,

177 
gboﬁón
 
t‹n_off
);

178 
gboﬁón
 
	`gtk_míu_gë_ã¨off_°©e
 (
GtkMíu
 *
míu
);

183 
	`gtk_míu_£t_tôÀ
 (
GtkMíu
 *
míu
,

184 c⁄° 
gch¨
 *
tôÀ
);

185 
G_CONST_RETURN
 
gch¨
 *
	`gtk_míu_gë_tôÀ
 (
GtkMíu
 *
míu
);

187 
	`gtk_míu_ª‹dî_chûd
 (
GtkMíu
 *
míu
,

188 
GtkWidgë
 *
chûd
,

189 
göt
 
posôi⁄
);

191 
	`gtk_míu_£t_s¸ìn
 (
GtkMíu
 *
míu
,

192 
GdkS¸ìn
 *
s¸ìn
);

194 
	`gtk_míu_©èch
 (
GtkMíu
 *
míu
,

195 
GtkWidgë
 *
chûd
,

196 
guöt
 
À·_©èch
,

197 
guöt
 
right_©èch
,

198 
guöt
 
t›_©èch
,

199 
guöt
 
bŸtom_©èch
);

201 
	`gtk_míu_£t_m⁄ô‹
 (
GtkMíu
 *
míu
,

202 
göt
 
m⁄ô‹_num
);

203 
göt
 
	`gtk_míu_gë_m⁄ô‹
 (
GtkMíu
 *
míu
);

204 
GLi°
* 
	`gtk_míu_gë_f‹_©èch_widgë
 (
GtkWidgë
 *
widgë
);

206 #i‚de‡
GTK_DISABLE_DEPRECATED


207 
	#gtk_míu_≠≥nd
(
míu
,
chûd
Ë
	`gtk_míu_shñl_≠≥nd
 ((
GtkMíuShñl
 *)(míu),(chûd))

	)

208 
	#gtk_míu_¥ïíd
(
míu
,
chûd
Ë
	`gtk_míu_shñl_¥ïíd
 ((
GtkMíuShñl
 *)(míu),(chûd))

	)

209 
	#gtk_míu_ö£π
(
míu
,
chûd
,
pos
Ë
	`gtk_míu_shñl_ö£π
 ((
GtkMíuShñl
 *)(míu),(chûd),’os))

	)

212 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmisc.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MISC_H__


32 
	#__GTK_MISC_H__


	)

35 
	~<gtk/gtkwidgë.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_MISC
 (
	`gtk_misc_gë_ty≥
 ())

	)

41 
	#GTK_MISC
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_MISC
, 
GtkMisc
))

	)

42 
	#GTK_MISC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_MISC
, 
GtkMiscCœss
))

	)

43 
	#GTK_IS_MISC
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_MISC
))

	)

44 
	#GTK_IS_MISC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_MISC
))

	)

45 
	#GTK_MISC_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_MISC
, 
GtkMiscCœss
))

	)

48 
_GtkMisc
 
	tGtkMisc
;

49 
_GtkMiscCœss
 
	tGtkMiscCœss
;

51 
	s_GtkMisc


53 
GtkWidgë
 
	mwidgë
;

55 
gÊﬂt
 
GSEAL
 (
xÆign
);

56 
gÊﬂt
 
GSEAL
 (
yÆign
);

58 
guöt16
 
GSEAL
 (
x∑d
);

59 
guöt16
 
GSEAL
 (
y∑d
);

62 
	s_GtkMiscCœss


64 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

68 
GTy≥
 
	$gtk_misc_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
	`gtk_misc_£t_Æignmít
 (
GtkMisc
 *
misc
,

70 
gÊﬂt
 
xÆign
,

71 
gÊﬂt
 
yÆign
);

72 
	`gtk_misc_gë_Æignmít
 (
GtkMisc
 *
misc
,

73 
gÊﬂt
 *
xÆign
,

74 
gÊﬂt
 *
yÆign
);

75 
	`gtk_misc_£t_∑ddög
 (
GtkMisc
 *
misc
,

76 
göt
 
x∑d
,

77 
göt
 
y∑d
);

78 
	`gtk_misc_gë_∑ddög
 (
GtkMisc
 *
misc
,

79 
göt
 *
x∑d
,

80 
göt
 *
y∑d
);

83 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkwindow.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_WINDOW_H__


32 
	#__GTK_WINDOW_H__


	)

35 
	~<gtk/gtkac˚lgroup.h
>

36 
	~<gtk/gtkbö.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_WINDOW
 (
	`gtk_wödow_gë_ty≥
 ())

	)

42 
	#GTK_WINDOW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_WINDOW
, 
GtkWödow
))

	)

43 
	#GTK_WINDOW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_WINDOW
, 
GtkWödowCœss
))

	)

44 
	#GTK_IS_WINDOW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_WINDOW
))

	)

45 
	#GTK_IS_WINDOW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_WINDOW
))

	)

46 
	#GTK_WINDOW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_WINDOW
, 
GtkWödowCœss
))

	)

49 
_GtkWödowCœss
 
	tGtkWödowCœss
;

50 
_GtkWödowGeomëryInfo
 
	tGtkWödowGeomëryInfo
;

51 
_GtkWödowGroup
 
	tGtkWödowGroup
;

52 
_GtkWödowGroupCœss
 
	tGtkWödowGroupCœss
;

54 
	s_GtkWödow


56 
GtkBö
 
	mbö
;

58 
gch¨
 *
GSEAL
 (
tôÀ
);

59 
gch¨
 *
GSEAL
 (
wm˛ass_«me
);

60 
gch¨
 *
GSEAL
 (
wm˛ass_˛ass
);

61 
gch¨
 *
GSEAL
 (
wm_rﬁe
);

63 
GtkWidgë
 *
GSEAL
 (
focus_widgë
);

64 
GtkWidgë
 *
GSEAL
 (
deÁu…_widgë
);

65 
GtkWödow
 *
GSEAL
 (
å™sõ¡_∑ª¡
);

66 
GtkWödowGeomëryInfo
 *
GSEAL
 (
geomëry_öfo
);

67 
GdkWödow
 *
GSEAL
 (
‰ame
);

68 
GtkWödowGroup
 *
GSEAL
 (
group
);

70 
guöt16
 
GSEAL
 (
c⁄figuª_ªque°_cou¡
);

71 
guöt
 
GSEAL
 (
Ælow_shrök
) : 1;

72 
guöt
 
GSEAL
 (
Ælow_grow
) : 1;

73 
guöt
 
GSEAL
 (
c⁄figuª_nŸify_ª˚ived
) : 1;

80 
guöt
 
GSEAL
 (
√ed_deÁu…_posôi⁄
) : 1;

81 
guöt
 
GSEAL
 (
√ed_deÁu…_size
) : 1;

82 
guöt
 
GSEAL
 (
posôi⁄
) : 3;

83 
guöt
 
GSEAL
 (
ty≥
) : 4;

84 
guöt
 
GSEAL
 (
has_u£r_ªf_cou¡
) : 1;

85 
guöt
 
GSEAL
 (
has_focus
) : 1;

87 
guöt
 
GSEAL
 (
modÆ
) : 1;

88 
guöt
 
GSEAL
 (
de°roy_wôh_∑ª¡
) : 1;

90 
guöt
 
GSEAL
 (
has_‰ame
) : 1;

93 
guöt
 
GSEAL
 (
ic⁄ify_öôüŒy
) : 1;

94 
guöt
 
GSEAL
 (
°ick_öôüŒy
) : 1;

95 
guöt
 
GSEAL
 (
maximize_öôüŒy
) : 1;

96 
guöt
 
GSEAL
 (
dec‹©ed
) : 1;

98 
guöt
 
GSEAL
 (
ty≥_höt
) : 3;

101 
guöt
 
GSEAL
 (
gøvôy
) : 5;

103 
guöt
 
GSEAL
 (
is_a˘ive
) : 1;

104 
guöt
 
GSEAL
 (
has_t›Àvñ_focus
) : 1;

106 
guöt
 
GSEAL
 (
‰ame_À·
);

107 
guöt
 
GSEAL
 (
‰ame_t›
);

108 
guöt
 
GSEAL
 (
‰ame_right
);

109 
guöt
 
GSEAL
 (
‰ame_bŸtom
);

111 
guöt
 
GSEAL
 (
keys_ch™ged_h™dÀr
);

113 
GdkModifõrTy≥
 
GSEAL
 (
m√m⁄ic_modifõr
);

114 
GdkS¸ìn
 *
GSEAL
 (
s¸ìn
);

117 
	s_GtkWödowCœss


119 
GtkBöCœss
 
	m∑ª¡_˛ass
;

121 (* 
	m£t_focus
Ë(
GtkWödow
 *
	mwödow
,

122 
GtkWidgë
 *
	mfocus
);

123 
gboﬁón
 (* 
‰ame_evít
Ë(
GtkWödow
 *
	mwödow
,

124 
GdkEvít
 *
	mevít
);

128 (* 
	ma˘iv©e_focus
Ë(
GtkWödow
 *
	mwödow
);

129 (* 
	ma˘iv©e_deÁu…
Ë(
GtkWödow
 *
	mwödow
);

135 (* 
	mmove_focus
Ë(
GtkWödow
 *
	mwödow
,

136 
GtkDúe˘i⁄Ty≥
 
	mdúe˘i⁄
);

138 (*
	mkeys_ch™ged
Ë(
GtkWödow
 *
	mwödow
);

141 (*
	m_gtk_ª£rved1
) ();

142 (*
	m_gtk_ª£rved2
) ();

143 (*
	m_gtk_ª£rved3
) ();

144 (*
	m_gtk_ª£rved4
) ();

147 
	#GTK_TYPE_WINDOW_GROUP
 (
	`gtk_wödow_group_gë_ty≥
 ())

	)

148 
	#GTK_WINDOW_GROUP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_WINDOW_GROUP
, 
GtkWödowGroup
))

	)

149 
	#GTK_WINDOW_GROUP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_WINDOW_GROUP
, 
GtkWödowGroupCœss
))

	)

150 
	#GTK_IS_WINDOW_GROUP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_WINDOW_GROUP
))

	)

151 
	#GTK_IS_WINDOW_GROUP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_WINDOW_GROUP
))

	)

152 
	#GTK_WINDOW_GROUP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_WINDOW_GROUP
, 
GtkWödowGroupCœss
))

	)

154 
	s_GtkWödowGroup


156 
GObje˘
 
	m∑ª¡_ö°™˚
;

158 
GSLi°
 *
GSEAL
 (
gøbs
);

161 
	s_GtkWödowGroupCœss


163 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

166 (*
	m_gtk_ª£rved1
) ();

167 (*
	m_gtk_ª£rved2
) ();

168 (*
	m_gtk_ª£rved3
) ();

169 (*
	m_gtk_ª£rved4
) ();

172 #ifde‡
G_OS_WIN32


174 
	#gtk_wödow_£t_ic⁄_‰om_fûe
 
gtk_wödow_£t_ic⁄_‰om_fûe_utf8


	)

175 
	#gtk_wödow_£t_deÁu…_ic⁄_‰om_fûe
 
gtk_wödow_£t_deÁu…_ic⁄_‰om_fûe_utf8


	)

178 
GTy≥
 
	$gtk_wödow_gë_ty≥
 (Ë
G_GNUC_CONST
;

179 
GtkWidgë
* 
	`gtk_wödow_√w
 (
GtkWödowTy≥
 
ty≥
);

180 
	`gtk_wödow_£t_tôÀ
 (
GtkWödow
 *
wödow
,

181 c⁄° 
gch¨
 *
tôÀ
);

182 
G_CONST_RETURN
 
gch¨
 *
	`gtk_wödow_gë_tôÀ
 (
GtkWödow
 *
wödow
);

183 
	`gtk_wödow_£t_wm˛ass
 (
GtkWödow
 *
wödow
,

184 c⁄° 
gch¨
 *
wm˛ass_«me
,

185 c⁄° 
gch¨
 *
wm˛ass_˛ass
);

186 
	`gtk_wödow_£t_rﬁe
 (
GtkWödow
 *
wödow
,

187 c⁄° 
gch¨
 *
rﬁe
);

188 
	`gtk_wödow_£t_°¨tup_id
 (
GtkWödow
 *
wödow
,

189 c⁄° 
gch¨
 *
°¨tup_id
);

190 
G_CONST_RETURN
 
gch¨
 *
	`gtk_wödow_gë_rﬁe
 (
GtkWödow
 *
wödow
);

191 
	`gtk_wödow_add_ac˚l_group
 (
GtkWödow
 *
wödow
,

192 
GtkAc˚lGroup
 *
ac˚l_group
);

193 
	`gtk_wödow_ªmove_ac˚l_group
 (
GtkWödow
 *
wödow
,

194 
GtkAc˚lGroup
 *
ac˚l_group
);

195 
	`gtk_wödow_£t_posôi⁄
 (
GtkWödow
 *
wödow
,

196 
GtkWödowPosôi⁄
 
posôi⁄
);

197 
gboﬁón
 
	`gtk_wödow_a˘iv©e_focus
 (
GtkWödow
 *
wödow
);

198 
	`gtk_wödow_£t_focus
 (
GtkWödow
 *
wödow
,

199 
GtkWidgë
 *
focus
);

200 
GtkWidgë
 *
	`gtk_wödow_gë_focus
 (
GtkWödow
 *
wödow
);

201 
	`gtk_wödow_£t_deÁu…
 (
GtkWödow
 *
wödow
,

202 
GtkWidgë
 *
deÁu…_widgë
);

203 
GtkWidgë
 *
	`gtk_wödow_gë_deÁu…_widgë
 (
GtkWödow
 *
wödow
);

204 
gboﬁón
 
	`gtk_wödow_a˘iv©e_deÁu…
 (
GtkWödow
 *
wödow
);

206 
	`gtk_wödow_£t_å™sõ¡_f‹
 (
GtkWödow
 *
wödow
,

207 
GtkWödow
 *
∑ª¡
);

208 
GtkWödow
 *
	`gtk_wödow_gë_å™sõ¡_f‹
 (GtkWödow *
wödow
);

209 
	`gtk_wödow_£t_›acôy
 (
GtkWödow
 *
wödow
,

210 
gdoubÀ
 
›acôy
);

211 
gdoubÀ
 
	`gtk_wödow_gë_›acôy
 (
GtkWödow
 *
wödow
);

212 
	`gtk_wödow_£t_ty≥_höt
 (
GtkWödow
 *
wödow
,

213 
GdkWödowTy≥Höt
 
höt
);

214 
GdkWödowTy≥Höt
 
	`gtk_wödow_gë_ty≥_höt
 (
GtkWödow
 *
wödow
);

215 
	`gtk_wödow_£t_skù_èskb¨_höt
 (
GtkWödow
 *
wödow
,

216 
gboﬁón
 
£âög
);

217 
gboﬁón
 
	`gtk_wödow_gë_skù_èskb¨_höt
 (
GtkWödow
 *
wödow
);

218 
	`gtk_wödow_£t_skù_∑gî_höt
 (
GtkWödow
 *
wödow
,

219 
gboﬁón
 
£âög
);

220 
gboﬁón
 
	`gtk_wödow_gë_skù_∑gî_höt
 (
GtkWödow
 *
wödow
);

221 
	`gtk_wödow_£t_urgícy_höt
 (
GtkWödow
 *
wödow
,

222 
gboﬁón
 
£âög
);

223 
gboﬁón
 
	`gtk_wödow_gë_urgícy_höt
 (
GtkWödow
 *
wödow
);

224 
	`gtk_wödow_£t_ac˚±_focus
 (
GtkWödow
 *
wödow
,

225 
gboﬁón
 
£âög
);

226 
gboﬁón
 
	`gtk_wödow_gë_ac˚±_focus
 (
GtkWödow
 *
wödow
);

227 
	`gtk_wödow_£t_focus_⁄_m≠
 (
GtkWödow
 *
wödow
,

228 
gboﬁón
 
£âög
);

229 
gboﬁón
 
	`gtk_wödow_gë_focus_⁄_m≠
 (
GtkWödow
 *
wödow
);

230 
	`gtk_wödow_£t_de°roy_wôh_∑ª¡
 (
GtkWödow
 *
wödow
,

231 
gboﬁón
 
£âög
);

232 
gboﬁón
 
	`gtk_wödow_gë_de°roy_wôh_∑ª¡
 (
GtkWödow
 *
wödow
);

234 
	`gtk_wödow_£t_ªsizabÀ
 (
GtkWödow
 *
wödow
,

235 
gboﬁón
 
ªsizabÀ
);

236 
gboﬁón
 
	`gtk_wödow_gë_ªsizabÀ
 (
GtkWödow
 *
wödow
);

238 
	`gtk_wödow_£t_gøvôy
 (
GtkWödow
 *
wödow
,

239 
GdkGøvôy
 
gøvôy
);

240 
GdkGøvôy
 
	`gtk_wödow_gë_gøvôy
 (
GtkWödow
 *
wödow
);

243 
	`gtk_wödow_£t_geomëry_höts
 (
GtkWödow
 *
wödow
,

244 
GtkWidgë
 *
geomëry_widgë
,

245 
GdkGeomëry
 *
geomëry
,

246 
GdkWödowHöts
 
geom_mask
);

248 
	`gtk_wödow_£t_s¸ìn
 (
GtkWödow
 *
wödow
,

249 
GdkS¸ìn
 *
s¸ìn
);

250 
GdkS¸ìn
* 
	`gtk_wödow_gë_s¸ìn
 (
GtkWödow
 *
wödow
);

252 
gboﬁón
 
	`gtk_wödow_is_a˘ive
 (
GtkWödow
 *
wödow
);

253 
gboﬁón
 
	`gtk_wödow_has_t›Àvñ_focus
 (
GtkWödow
 *
wödow
);

258 
	`gtk_wödow_£t_has_‰ame
 (
GtkWödow
 *
wödow
,

259 
gboﬁón
 
£âög
);

260 
gboﬁón
 
	`gtk_wödow_gë_has_‰ame
 (
GtkWödow
 *
wödow
);

261 
	`gtk_wödow_£t_‰ame_dimísi⁄s
 (
GtkWödow
 *
wödow
,

262 
göt
 
À·
,

263 
göt
 
t›
,

264 
göt
 
right
,

265 
göt
 
bŸtom
);

266 
	`gtk_wödow_gë_‰ame_dimísi⁄s
 (
GtkWödow
 *
wödow
,

267 
göt
 *
À·
,

268 
göt
 *
t›
,

269 
göt
 *
right
,

270 
göt
 *
bŸtom
);

271 
	`gtk_wödow_£t_dec‹©ed
 (
GtkWödow
 *
wödow
,

272 
gboﬁón
 
£âög
);

273 
gboﬁón
 
	`gtk_wödow_gë_dec‹©ed
 (
GtkWödow
 *
wödow
);

274 
	`gtk_wödow_£t_dñëabÀ
 (
GtkWödow
 *
wödow
,

275 
gboﬁón
 
£âög
);

276 
gboﬁón
 
	`gtk_wödow_gë_dñëabÀ
 (
GtkWödow
 *
wödow
);

278 
	`gtk_wödow_£t_ic⁄_li°
 (
GtkWödow
 *
wödow
,

279 
GLi°
 *
li°
);

280 
GLi°
* 
	`gtk_wödow_gë_ic⁄_li°
 (
GtkWödow
 *
wödow
);

281 
	`gtk_wödow_£t_ic⁄
 (
GtkWödow
 *
wödow
,

282 
GdkPixbuf
 *
ic⁄
);

283 
	`gtk_wödow_£t_ic⁄_«me
 (
GtkWödow
 *
wödow
,

284 c⁄° 
gch¨
 *
«me
);

285 
gboﬁón
 
	`gtk_wödow_£t_ic⁄_‰om_fûe
 (
GtkWödow
 *
wödow
,

286 c⁄° 
gch¨
 *
fûíame
,

287 
GEº‹
 **
îr
);

288 
GdkPixbuf
* 
	`gtk_wödow_gë_ic⁄
 (
GtkWödow
 *
wödow
);

289 
G_CONST_RETURN


290 
gch¨
 *
	`gtk_wödow_gë_ic⁄_«me
 (
GtkWödow
 *
wödow
);

291 
	`gtk_wödow_£t_deÁu…_ic⁄_li°
 (
GLi°
 *
li°
);

292 
GLi°
* 
	`gtk_wödow_gë_deÁu…_ic⁄_li°
 ();

293 
	`gtk_wödow_£t_deÁu…_ic⁄
 (
GdkPixbuf
 *
ic⁄
);

294 
	`gtk_wödow_£t_deÁu…_ic⁄_«me
 (c⁄° 
gch¨
 *
«me
);

295 
G_CONST_RETURN


296 
gch¨
 *
	`gtk_wödow_gë_deÁu…_ic⁄_«me
 ();

297 
gboﬁón
 
	`gtk_wödow_£t_deÁu…_ic⁄_‰om_fûe
 (c⁄° 
gch¨
 *
fûíame
,

298 
GEº‹
 **
îr
);

300 
	`gtk_wödow_£t_auto_°¨tup_nŸifiˇti⁄
 (
gboﬁón
 
£âög
);

303 
	`gtk_wödow_£t_modÆ
 (
GtkWödow
 *
wödow
,

304 
gboﬁón
 
modÆ
);

305 
gboﬁón
 
	`gtk_wödow_gë_modÆ
 (
GtkWödow
 *
wödow
);

306 
GLi°
* 
	`gtk_wödow_li°_t›Àvñs
 ();

308 
	`gtk_wödow_add_m√m⁄ic
 (
GtkWödow
 *
wödow
,

309 
guöt
 
keyvÆ
,

310 
GtkWidgë
 *
èrgë
);

311 
	`gtk_wödow_ªmove_m√m⁄ic
 (
GtkWödow
 *
wödow
,

312 
guöt
 
keyvÆ
,

313 
GtkWidgë
 *
èrgë
);

314 
gboﬁón
 
	`gtk_wödow_m√m⁄ic_a˘iv©e
 (
GtkWödow
 *
wödow
,

315 
guöt
 
keyvÆ
,

316 
GdkModifõrTy≥
 
modifõr
);

317 
	`gtk_wödow_£t_m√m⁄ic_modifõr
 (
GtkWödow
 *
wödow
,

318 
GdkModifõrTy≥
 
modifõr
);

319 
GdkModifõrTy≥
 
	`gtk_wödow_gë_m√m⁄ic_modifõr
 (
GtkWödow
 *
wödow
);

321 
gboﬁón
 
	`gtk_wödow_a˘iv©e_key
 (
GtkWödow
 *
wödow
,

322 
GdkEvítKey
 *
evít
);

323 
gboﬁón
 
	`gtk_wödow_¥›ag©e_key_evít
 (
GtkWödow
 *
wödow
,

324 
GdkEvítKey
 *
evít
);

326 
	`gtk_wödow_¥e£¡
 (
GtkWödow
 *
wödow
);

327 
	`gtk_wödow_¥e£¡_wôh_time
 (
GtkWödow
 *
wödow
,

328 
guöt32
 
time°amp
);

329 
	`gtk_wödow_ic⁄ify
 (
GtkWödow
 *
wödow
);

330 
	`gtk_wödow_deic⁄ify
 (
GtkWödow
 *
wödow
);

331 
	`gtk_wödow_°ick
 (
GtkWödow
 *
wödow
);

332 
	`gtk_wödow_un°ick
 (
GtkWödow
 *
wödow
);

333 
	`gtk_wödow_maximize
 (
GtkWödow
 *
wödow
);

334 
	`gtk_wödow_unmaximize
 (
GtkWödow
 *
wödow
);

335 
	`gtk_wödow_fuŒs¸ìn
 (
GtkWödow
 *
wödow
);

336 
	`gtk_wödow_unfuŒs¸ìn
 (
GtkWödow
 *
wödow
);

337 
	`gtk_wödow_£t_kìp_above
 (
GtkWödow
 *
wödow
, 
gboﬁón
 
£âög
);

338 
	`gtk_wödow_£t_kìp_bñow
 (
GtkWödow
 *
wödow
, 
gboﬁón
 
£âög
);

340 
	`gtk_wödow_begö_ªsize_døg
 (
GtkWödow
 *
wödow
,

341 
GdkWödowEdge
 
edge
,

342 
göt
 
buâ⁄
,

343 
göt
 
roŸ_x
,

344 
göt
 
roŸ_y
,

345 
guöt32
 
time°amp
);

346 
	`gtk_wödow_begö_move_døg
 (
GtkWödow
 *
wödow
,

347 
göt
 
buâ⁄
,

348 
göt
 
roŸ_x
,

349 
göt
 
roŸ_y
,

350 
guöt32
 
time°amp
);

352 #i‚de‡
GTK_DISABLE_DEPRECATED


353 
	`gtk_wödow_£t_pﬁicy
 (
GtkWödow
 *
wödow
,

354 
göt
 
Ælow_shrök
,

355 
göt
 
Ælow_grow
,

356 
göt
 
auto_shrök
);

357 
	#gtk_wödow_posôi⁄
 
gtk_wödow_£t_posôi⁄


	)

363 
	`gtk_wödow_£t_deÁu…_size
 (
GtkWödow
 *
wödow
,

364 
göt
 
width
,

365 
göt
 
height
);

366 
	`gtk_wödow_gë_deÁu…_size
 (
GtkWödow
 *
wödow
,

367 
göt
 *
width
,

368 
göt
 *
height
);

369 
	`gtk_wödow_ªsize
 (
GtkWödow
 *
wödow
,

370 
göt
 
width
,

371 
göt
 
height
);

372 
	`gtk_wödow_gë_size
 (
GtkWödow
 *
wödow
,

373 
göt
 *
width
,

374 
göt
 *
height
);

375 
	`gtk_wödow_move
 (
GtkWödow
 *
wödow
,

376 
göt
 
x
,

377 
göt
 
y
);

378 
	`gtk_wödow_gë_posôi⁄
 (
GtkWödow
 *
wödow
,

379 
göt
 *
roŸ_x
,

380 
göt
 *
roŸ_y
);

381 
gboﬁón
 
	`gtk_wödow_∑r£_geomëry
 (
GtkWödow
 *
wödow
,

382 c⁄° 
gch¨
 *
geomëry
);

383 
GtkWödowGroup
 *
	`gtk_wödow_gë_group
 (
GtkWödow
 *
wödow
);

386 
	`gtk_wödow_ªshow_wôh_öôül_size
 (
GtkWödow
 *
wödow
);

390 
GTy≥
 
	$gtk_wödow_group_gë_ty≥
 (Ë
G_GNUC_CONST
;

392 
GtkWödowGroup
 * 
	`gtk_wödow_group_√w
 ();

393 
	`gtk_wödow_group_add_wödow
 (
GtkWödowGroup
 *
wödow_group
,

394 
GtkWödow
 *
wödow
);

395 
	`gtk_wödow_group_ªmove_wödow
 (
GtkWödowGroup
 *
wödow_group
,

396 
GtkWödow
 *
wödow
);

397 
GLi°
 * 
	`gtk_wödow_group_li°_wödows
 (
GtkWödowGroup
 *
wödow_group
);

401 
	`_gtk_wödow_öã∫Æ_£t_focus
 (
GtkWödow
 *
wödow
,

402 
GtkWidgë
 *
focus
);

403 
	`gtk_wödow_ªmove_embedded_xid
 (
GtkWödow
 *
wödow
,

404 
GdkN©iveWödow
 
xid
);

405 
	`gtk_wödow_add_embedded_xid
 (
GtkWödow
 *
wödow
,

406 
GdkN©iveWödow
 
xid
);

407 
	`_gtk_wödow_ªposôi⁄
 (
GtkWödow
 *
wödow
,

408 
göt
 
x
,

409 
göt
 
y
);

410 
	`_gtk_wödow_c⁄°øö_size
 (
GtkWödow
 *
wödow
,

411 
göt
 
width
,

412 
göt
 
height
,

413 
göt
 *
√w_width
,

414 
göt
 *
√w_height
);

415 
GtkWidgë
 *
	`_gtk_wödow_group_gë_cuºít_gøb
 (
GtkWödowGroup
 *
wödow_group
);

417 
	`_gtk_wödow_£t_has_t›Àvñ_focus
 (
GtkWödow
 *
wödow
,

418 
gboﬁón
 
has_t›Àvñ_focus
);

419 
	`_gtk_wödow_un£t_focus_™d_deÁu…
 (
GtkWödow
 *
wödow
,

420 
GtkWidgë
 *
widgë
);

422 
	`_gtk_wödow_£t_is_a˘ive
 (
GtkWödow
 *
wödow
,

423 
gboﬁón
 
is_a˘ive
);

425 
	`_gtk_wödow_£t_is_t›Àvñ
 (
GtkWödow
 *
wödow
,

426 
gboﬁón
 
is_t›Àvñ
);

428 (*
	tGtkWödowKeysF‹óchFunc
Ë(
	tGtkWödow
 *
	twödow
,

429 
	tguöt
 
	tkeyvÆ
,

430 
	tGdkModifõrTy≥
 
	tmodifõrs
,

431 
	tgboﬁón
 
	tis_m√m⁄ic
,

432 
	tgpoöãr
 
	td©a
);

434 
	`_gtk_wödow_keys_f‹óch
 (
GtkWödow
 *
wödow
,

435 
GtkWödowKeysF‹óchFunc
 
func
,

436 
gpoöãr
 
func_d©a
);

439 
gboﬁón
 
	`_gtk_wödow_quîy_n⁄ac˚ls
 (
GtkWödow
 *
wödow
,

440 
guöt
 
ac˚l_key
,

441 
GdkModifõrTy≥
 
ac˚l_mods
);

443 
G_END_DECLS


	@/usr/include/libbonobo-2.0/bonobo/bonobo-generic-factory.h

11 #i‚de‡
_BONOBO_GENERIC_FACTORY_H_


12 
	#_BONOBO_GENERIC_FACTORY_H_


	)

15 
	~<b⁄obo/b⁄obo-obje˘.h
>

16 
	~<b⁄obo/b⁄obo-i18n.h
>

18 
	gG_BEGIN_DECLS


20 
	#BONOBO_TYPE_GENERIC_FACTORY
 (
	`b⁄obo_gíîic_Á˘‹y_gë_ty≥
 ())

	)

21 
	#BONOBO_GENERIC_FACTORY_TYPE
 
BONOBO_TYPE_GENERIC_FACTORY


	)

22 
	#BONOBO_GENERIC_FACTORY
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
BONOBO_TYPE_GENERIC_FACTORY
, 
B⁄oboGíîicFa˘‹y
))

	)

23 
	#BONOBO_GENERIC_FACTORY_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
BONOBO_TYPE_GENERIC_FACTORY
, 
B⁄oboGíîicFa˘‹yCœss
))

	)

24 
	#BONOBO_IS_GENERIC_FACTORY
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
BONOBO_TYPE_GENERIC_FACTORY
))

	)

25 
	#BONOBO_IS_GENERIC_FACTORY_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
BONOBO_TYPE_GENERIC_FACTORY
))

	)

27 
_B⁄oboGíîicFa˘‹yPriv©e
 
	tB⁄oboGíîicFa˘‹yPriv©e
;

28 
_B⁄oboGíîicFa˘‹y
 
	tB⁄oboGíîicFa˘‹y
;

30 
	gB⁄oboObje˘
 * (*
	tB⁄oboFa˘‹yCÆlback
Ë(
	tB⁄oboGíîicFa˘‹y
 *
	tÁ˘‹y
,

31 c⁄° *
	tcomp⁄ít_id
,

32 
	tgpoöãr
 
	t˛osuª
);

34 
	s_B⁄oboGíîicFa˘‹y
 {

35 
B⁄oboObje˘
 
	mba£
;

37 
B⁄oboGíîicFa˘‹yPriv©e
 *
	m¥iv
;

41 
B⁄oboObje˘Cœss
 
	m∑ª¡_˛ass
;

43 
POA_B⁄obo_GíîicFa˘‹y__ïv
 
	mïv
;

45 
	mB⁄oboObje˘
 *(*
	m√w_gíîic
Ë(
B⁄oboGíîicFa˘‹y
 *
	mÁ˘‹y
,

46 c⁄° *
	ma˘_iid
);

48 } 
	tB⁄oboGíîicFa˘‹yCœss
;

50 
GTy≥
 
	$b⁄obo_gíîic_Á˘‹y_gë_ty≥
 (Ë
G_GNUC_CONST
;

52 
B⁄oboGíîicFa˘‹y
 *
	`b⁄obo_gíîic_Á˘‹y_√w
 (c⁄° *
a˘_iid
,

53 
B⁄oboFa˘‹yCÆlback
 
Á˘‹y_cb
,

54 
gpoöãr
 
u£r_d©a
);

56 
B⁄oboGíîicFa˘‹y
 *
	`b⁄obo_gíîic_Á˘‹y_√w_˛osuª
 (c⁄° *
a˘_iid
,

57 
GClosuª
 *
Á˘‹y_˛osuª
);

59 
B⁄oboGíîicFa˘‹y
 *
	`b⁄obo_gíîic_Á˘‹y_c⁄°ru˘
 (B⁄oboGíîicFa˘‹y *
Á˘‹y
,

60 c⁄° *
a˘_iid
,

61 
GClosuª
 *
Á˘‹y_˛osuª
);

63 
	`b⁄obo_gíîic_Á˘‹y_c⁄°ru˘_n‹eg
 (
B⁄oboGíîicFa˘‹y
 *
Á˘‹y
,

64 c⁄° *
a˘_iid
,

65 
GClosuª
 *
Á˘‹y_˛osuª
);

67 
	`b⁄obo_gíîic_Á˘‹y_maö
 (c⁄° *
a˘_iid
,

68 
B⁄oboFa˘‹yCÆlback
 
Á˘‹y_cb
,

69 
gpoöãr
 
u£r_d©a
);

70 
	`b⁄obo_gíîic_Á˘‹y_maö_timeout
 (c⁄° *
a˘_iid
,

71 
B⁄oboFa˘‹yCÆlback
 
Á˘‹y_cb
,

72 
gpoöãr
 
u£r_d©a
,

73 
guöt
 
quô_timeout
);

76 #i‡
	`deföed
 (
__BONOBO_UI_MAIN_H__
Ë|| deföed (
LIBBONOBOUI_H
)

77 
	#BONOBO_FACTORY_INIT
(
des¸
, 
vîsi⁄
, 
¨g˝
, 
¨gv
) \

78 i‡(!
	`b⁄obo_ui_öô
 (
des¸
, 
vîsi⁄
, 
¨g˝
, 
¨gv
)) \

79 
	`g_îr‹
 ("CouldÇŸ inôülizêB⁄obo");

	)

81 
	#BONOBO_FACTORY_INIT
(
desc
, 
vîsi⁄
, 
¨g˝
, 
¨gv
) \

82 i‡(!
	`b⁄obo_öô
 (
¨g˝
, 
¨gv
)) \

83 
	`g_îr‹
 ("CouldÇŸ inôülizêB⁄obo");

	)

86 
	#BONOBO_OAF_FACTORY
(
ﬂfiid
, 
des¸
, 
vîsi⁄
, 
ˇŒback
, 
d©a
) \

87 
	`BONOBO_ACTIVATION_FACTORY
(
ﬂfiid
, 
des¸
, 
vîsi⁄
, 
ˇŒback
, 
d©a
)

	)

88 
	#BONOBO_OAF_FACTORY_MULTI
(
ﬂfiid
, 
des¸
, 
vîsi⁄
, 
ˇŒback
, 
d©a
) \

89 
	`BONOBO_ACTIVATION_FACTORY
(
ﬂfiid
, 
des¸
, 
vîsi⁄
, 
ˇŒback
, 
d©a
)

	)

91 
	#BONOBO_ACTIVATION_FACTORY
(
ﬂfiid
, 
des¸
, 
vîsi⁄
, 
ˇŒback
, 
d©a
) \

92 
	`maö
 (
¨gc
, *
¨gv
 []) \

94 
	`g_thªad_öô
 (
NULL
); \

96 
	`BONOBO_FACTORY_INIT
 (
des¸
, 
vîsi⁄
, &
¨gc
, 
¨gv
); \

98  
	`b⁄obo_gíîic_Á˘‹y_maö
 (
ﬂfiid
, 
ˇŒback
, 
d©a
); \

99 
	}

	)
}

101 
	#BONOBO_ACTIVATION_FACTORY_TIMEOUT
(
ﬂfiid
, 
des¸
, 
vîsi⁄
, 
ˇŒback
, 
d©a
, 
quô_timeout
) \

102 
	`maö
 (
¨gc
, *
¨gv
 []) \

104 
	`g_thªad_öô
 (
NULL
); \

106 
	`BONOBO_FACTORY_INIT
 (
des¸
, 
vîsi⁄
, &
¨gc
, 
¨gv
); \

108  
	`b⁄obo_gíîic_Á˘‹y_maö_timeout
 (
ﬂfiid
, 
ˇŒback
, 
d©a
, 
quô_timeout
); \

109 }

	)

111 
	gG_END_DECLS


	@/usr/include/libbonobo-2.0/bonobo/bonobo-main.h

13 #i‚de‡
__LIBBONOBO_MAIN_H__


14 
	#__LIBBONOBO_MAIN_H__


	)

16 
	~<glib-obje˘.h
>

17 
	~<b⁄obo/B⁄obo.h
>

19 
G_BEGIN_DECLS


21 
gboﬁón
 
b⁄obo_is_öôülized
 ();

22 
gboﬁón
 
b⁄obo_öô
 (*
¨gc
,

23 **
¨gv
);

24 
gboﬁón
 
b⁄obo_öô_fuŒ
 (*
¨gc
,

25 **
¨gv
,

26 
CORBA_ORB
 
›t_‹b
,

27 
P‹èbÀSîvî_POA
 
›t_pﬂ
,

28 
P‹èbÀSîvî_POAM™agî
 
›t_m™agî
);

29 
b⁄obo_debug_shutdown
 ();

30 
b⁄obo_maö
 ();

31 
b⁄obo_maö_quô
 ();

32 
guöt
 
b⁄obo_maö_Àvñ
 ();

33 
gboﬁón
 
b⁄obo_a˘iv©e
 ();

34 
b⁄obo_£tup_x_îr‹_h™dÀr
 ();

36 
CORBA_ORB
 
b⁄obo_‹b
 ();

37 
P‹èbÀSîvî_POA
 
b⁄obo_pﬂ
 ();

38 
P‹èbÀSîvî_POAM™agî
 
b⁄obo_pﬂ_m™agî
 ();

39 
P‹èbÀSîvî_POA
 
b⁄obo_pﬂ_gë_thªaded
 (
ORBôThªadHöt
 
höt
,

41 
P‹èbÀSîvî_POA
 
b⁄obo_pﬂ_gë_thªadedv
 (
ORBôThªadHöt
 
höt
,

42 
va_li°
 
¨gs
);

43 
P‹èbÀSîvî_POA
 
b⁄obo_pﬂ_√w_‰om
 (P‹èbÀSîvî_POA 
tm∂
,

44 c⁄° *
«me
,

45 c⁄° 
CORBA_PﬁicyLi°
 *
›t_pﬁicõs
,

46 
CORBA_Envú⁄mít
 *
›t_ev
);

48 
	gG_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-control.h

11 #i‚de‡
_BONOBO_CONTROL_H_


12 
	#_BONOBO_CONTROL_H_


	)

14 
	~<glib.h
>

15 
	~<gtk/gtk.h
>

17 
_B⁄oboC⁄åﬁ
 
	tB⁄oboC⁄åﬁ
;

19 
	~<b⁄obo/b⁄obo-∂ug.h
>

20 
	~<b⁄obo/b⁄obo-obje˘.h
>

21 
	~<b⁄obo/b⁄obo-ui-c⁄èöî.h
>

22 
	~<b⁄obo/b⁄obo-ui-comp⁄ít.h
>

25 
	gG_BEGIN_DECLS


27 
	#BONOBO_TYPE_CONTROL
 (
	`b⁄obo_c⁄åﬁ_gë_ty≥
 ())

	)

28 
	#BONOBO_CONTROL
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
BONOBO_TYPE_CONTROL
, 
B⁄oboC⁄åﬁ
))

	)

29 
	#BONOBO_CONTROL_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((k), 
BONOBO_TYPE_CONTROL
, 
B⁄oboC⁄åﬁCœss
))

	)

30 
	#BONOBO_IS_CONTROL
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
BONOBO_TYPE_CONTROL
))

	)

31 
	#BONOBO_IS_CONTROL_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
BONOBO_TYPE_CONTROL
))

	)

33 
_B⁄oboC⁄åﬁPriv©e
 
	tB⁄oboC⁄åﬁPriv©e
;

35 
	s_B⁄oboC⁄åﬁ
 {

36 
B⁄oboObje˘
 
	mba£
;

38 
B⁄oboC⁄åﬁPriv©e
 *
	m¥iv
;

42 
B⁄oboObje˘Cœss
 
	m∑ª¡_˛ass
;

44 
POA_B⁄obo_C⁄åﬁ__ïv
 
	mïv
;

46 
gpoöãr
 
	mdummy
[2];

49 (*
	m∂ug_¸óãd
Ë(
B⁄oboC⁄åﬁ
 *
	mc⁄åﬁ
);

50 (*
	mdisc⁄√˘ed
Ë(
B⁄oboC⁄åﬁ
 *
	mc⁄åﬁ
);

51 (*
	m£t_‰ame
Ë(
B⁄oboC⁄åﬁ
 *
	mc⁄åﬁ
);

52 (*
	ma˘iv©e
Ë(
B⁄oboC⁄åﬁ
 *
	mc⁄åﬁ
, 
gboﬁón
 
	m°©e
);

53 } 
	tB⁄oboC⁄åﬁCœss
;

56 
B⁄oboC⁄åﬁ
 *
b⁄obo_c⁄åﬁ_√w
 (
GtkWidgë
 *
widgë
);

57 
GtkWidgë
 *
b⁄obo_c⁄åﬁ_gë_widgë
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

58 
b⁄obo_c⁄åﬁ_£t_automîge
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

59 
gboﬁón
 
automîge
);

60 
gboﬁón
 
b⁄obo_c⁄åﬁ_gë_automîge
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

62 
	$b⁄obo_c⁄åﬁ_£t_¥›îty
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

63 
CORBA_Envú⁄mít
 *
›t_ev
,

64 c⁄° *
fú°_¥›
,

65 ...Ë
G_GNUC_NULL_TERMINATED
;

66 
	$b⁄obo_c⁄åﬁ_gë_¥›îty
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

67 
CORBA_Envú⁄mít
 *
›t_ev
,

68 c⁄° *
fú°_¥›
,

69 ...Ë
G_GNUC_NULL_TERMINATED
;

71 
	`b⁄obo_c⁄åﬁ_£t_å™sõ¡_f‹
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

72 
GtkWödow
 *
wödow
,

73 
CORBA_Envú⁄mít
 *
›t_ev
);

74 
	`b⁄obo_c⁄åﬁ_un£t_å™sõ¡_f‹
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

75 
GtkWödow
 *
wödow
,

76 
CORBA_Envú⁄mít
 *
›t_ev
);

79 
GTy≥
 
	$b⁄obo_c⁄åﬁ_gë_ty≥
 (Ë
G_GNUC_CONST
;

80 
B⁄oboC⁄åﬁ
 *
	`b⁄obo_c⁄åﬁ_c⁄°ru˘
 (B⁄oboC⁄åﬁ *
c⁄åﬁ
,

81 
GtkWidgë
 *
widgë
);

82 
B⁄oboPlug
 *
	`b⁄obo_c⁄åﬁ_gë_∂ug
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

83 
B⁄oboUIComp⁄ít
 *
	`b⁄obo_c⁄åﬁ_gë_ui_comp⁄ít
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

84 
	`b⁄obo_c⁄åﬁ_£t_ui_comp⁄ít
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

85 
B⁄oboUIComp⁄ít
 *
comp⁄ít
);

86 
B⁄obo_UIC⁄èöî
 
	`b⁄obo_c⁄åﬁ_gë_ªmŸe_ui_c⁄èöî
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

87 
CORBA_Envú⁄mít
 *
›t_ev
);

88 
	`b⁄obo_c⁄åﬁ_£t_c⁄åﬁ_‰ame
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

89 
B⁄obo_C⁄åﬁFøme
 
c⁄åﬁ_‰ame
,

90 
CORBA_Envú⁄mít
 *
›t_ev
);

91 
B⁄obo_C⁄åﬁFøme
 
	`b⁄obo_c⁄åﬁ_gë_c⁄åﬁ_‰ame
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

92 
CORBA_Envú⁄mít
 *
›t_ev
);

93 
	`b⁄obo_c⁄åﬁ_£t_¥›îtõs
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

94 
B⁄obo_Pr›îtyBag
 
pb
,

95 
CORBA_Envú⁄mít
 *
›t_ev
);

96 
B⁄obo_Pr›îtyBag
 
	`b⁄obo_c⁄åﬁ_gë_¥›îtõs
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

97 
B⁄obo_Pr›îtyBag
 
	`b⁄obo_c⁄åﬁ_gë_ambõ¡_¥›îtõs
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

98 
CORBA_Envú⁄mít
 *
›t_ev
);

99 
	`b⁄obo_c⁄åﬁ_a˘iv©e_nŸify
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

100 
gboﬁón
 
a˘iv©ed
,

101 
CORBA_Envú⁄mít
 *
›t_ev
);

102 
B⁄obo_Gdk_WödowId
 
	`b⁄obo_c⁄åﬁ_wödow_id_‰om_x11
 (
guöt32
 
x11_id
);

103 
guöt32
 
	`b⁄obo_c⁄åﬁ_x11_‰om_wödow_id
 (c⁄° 
CORBA_ch¨
 *
id
);

104 
	#b⁄obo_c⁄åﬁ_wödowid_‰om_x11
(
a
) \

105 
	`b⁄obo_c⁄åﬁ_wödow_id_‰om_x11
(
a
)

	)

108 
	#BONOBO_CONTROL_POPUP_BUTTON1
 "/p›ups/buâ⁄1"

	)

109 
	#BONOBO_CONTROL_POPUP_BUTTON2
 "/p›ups/buâ⁄2"

	)

110 
	#BONOBO_CONTROL_POPUP_BUTTON3
 "/p›ups/buâ⁄3"

	)

112 
B⁄oboUIC⁄èöî
 *
	`b⁄obo_c⁄åﬁ_gë_p›up_ui_c⁄èöî
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

113 
B⁄oboUIComp⁄ít
 *
	`b⁄obo_c⁄åﬁ_gë_p›up_ui_comp⁄ít
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

114 
	`b⁄obo_c⁄åﬁ_£t_p›up_ui_c⁄èöî
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

115 
B⁄oboUIC⁄èöî
 *
ui_c⁄èöî
);

116 
gboﬁón
 
	`b⁄obo_c⁄åﬁ_do_p›up
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

117 
guöt
 
buâ⁄
,

118 
guöt32
 
a˘iv©e_time
);

119 
gboﬁón
 
	`b⁄obo_c⁄åﬁ_do_p›up_fuŒ
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

120 
GtkWidgë
 *
∑ª¡_míu_shñl
,

121 
GtkWidgë
 *
∑ª¡_míu_ôem
,

122 
GtkMíuPosôi⁄Func
 
func
,

123 
gpoöãr
 
d©a
,

124 
guöt
 
buâ⁄
,

125 
guöt32
 
a˘iv©e_time
);

126 
gboﬁón
 
	`b⁄obo_c⁄åﬁ_do_p›up_∑th
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
,

127 
GtkWidgë
 *
∑ª¡_míu_shñl
,

128 
GtkWidgë
 *
∑ª¡_míu_ôem
,

129 
GtkMíuPosôi⁄Func
 
func
,

130 
gpoöãr
 
d©a
,

131 
guöt
 
buâ⁄
,

132 c⁄° *
p›up_∑th
,

133 
guöt32
 
a˘iv©e_time
);

136 (*
	tB⁄oboC⁄åﬁLi„CÆlback
) ();

137 
	`b⁄obo_c⁄åﬁ_li„_£t_purge
 (
ms
);

138 
	`b⁄obo_c⁄åﬁ_li„_£t_ˇŒback
 (
B⁄oboC⁄åﬁLi„CÆlback
 
Æl_dód_ˇŒback
);

139 
	`b⁄obo_c⁄åﬁ_li„_ö°rumít
 (
B⁄oboC⁄åﬁ
 *
c⁄åﬁ
);

140 
	`b⁄obo_c⁄åﬁ_li„_gë_cou¡
 ();

142 
G_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-component.h

10 #i‚de‡
_BONOBO_UI_COMPONENT_H_


11 
	#_BONOBO_UI_COMPONENT_H_


	)

13 
	~<gtk/gtk.h
>

14 
	~<b⁄obo/b⁄obo-obje˘.h
>

15 
	~<b⁄obo/b⁄obo-ui-node.h
>

17 
	gG_BEGIN_DECLS


19 
	#BONOBO_TYPE_UI_COMPONENT
 (
	`b⁄obo_ui_comp⁄ít_gë_ty≥
 ())

	)

20 
	#BONOBO_UI_COMPONENT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
BONOBO_TYPE_UI_COMPONENT
, 
B⁄oboUIComp⁄ít
))

	)

21 
	#BONOBO_UI_COMPONENT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
BONOBO_TYPE_UI_COMPONENT
, 
B⁄oboUIComp⁄ítCœss
))

	)

22 
	#BONOBO_IS_UI_COMPONENT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
BONOBO_TYPE_UI_COMPONENT
))

	)

23 
	#BONOBO_IS_UI_COMPONENT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
BONOBO_TYPE_UI_COMPONENT
))

	)

25 
_B⁄oboUIComp⁄ít
 
	tB⁄oboUIComp⁄ít
;

26 
_B⁄oboUIComp⁄ítPriv©e
 
	tB⁄oboUIComp⁄ítPriv©e
;

28 (*
	tB⁄oboUILi°íîFn
Ë(
	tB⁄oboUIComp⁄ít
 *
	tcomp⁄ít
,

29 c⁄° *
	t∑th
,

30 
	tB⁄obo_UIComp⁄ít_EvítTy≥
 
	tty≥
,

31 c⁄° *
	t°©e
,

32 
	tgpoöãr
 
	tu£r_d©a
);

34 (*
	tB⁄oboUIVîbFn
Ë(
	tB⁄oboUIComp⁄ít
 *
	tcomp⁄ít
,

35 
	tgpoöãr
 
	tu£r_d©a
,

36 c⁄° *
	t˙ame
);

38 
	s_B⁄oboUIComp⁄ít
 {

39 
B⁄oboObje˘
 
obje˘
;

40 
B⁄oboUIComp⁄ítPriv©e
 *
¥iv
;

44 
B⁄oboObje˘Cœss
 
∑ª¡_˛ass
;

46 
POA_B⁄obo_UIComp⁄ít__ïv
 
ïv
;

48 
gpoöãr
 
dummy
[6];

51 (*
exec_vîb
Ë(
B⁄oboUIComp⁄ít
 *
comp
,

52 c⁄° *
˙ame
);

54 (*
ui_evít
Ë(
B⁄oboUIComp⁄ít
 *
comp
,

55 c⁄° *
∑th
,

56 
B⁄obo_UIComp⁄ít_EvítTy≥
 
ty≥
,

57 c⁄° *
°©e
);

59 (*
‰ìze
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

60 
CORBA_Envú⁄mít
 *
›t_ev
);

62 (*
thaw
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

63 
CORBA_Envú⁄mít
 *
›t_ev
);

65 (*
xml_£t
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

66 c⁄° *
∑th
,

67 c⁄° *
xml
,

68 
CORBA_Envú⁄mít
 *
ev
);

70 
CORBA_ch¨
 *(*
xml_gë
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

71 c⁄° *
∑th
,

72 
gboﬁón
 
ªcur£
,

73 
CORBA_Envú⁄mít
 *
ev
);

75 (*
xml_rm
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

76 c⁄° *
∑th
,

77 
CORBA_Envú⁄mít
 *
ev
);

79 (*
£t_¥›
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

80 c⁄° *
∑th
,

81 c⁄° *
¥›
,

82 c⁄° *
vÆue
,

83 
CORBA_Envú⁄mít
 *
›t_ev
);

85 
gch¨
 *(*
gë_¥›
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

86 c⁄° *
∑th
,

87 c⁄° *
¥›
,

88 
CORBA_Envú⁄mít
 *
›t_ev
);

90 
	`gboﬁón
 (*
exi°s
Ë(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

91 c⁄° *
∑th
,

92 
CORBA_Envú⁄mít
 *
ev
);

93 } 
	tB⁄oboUIComp⁄ítCœss
;

95 
GTy≥
 
	$b⁄obo_ui_comp⁄ít_gë_ty≥
 (Ë
G_GNUC_CONST
;

97 
B⁄oboUIComp⁄ít
 *
	`b⁄obo_ui_comp⁄ít_c⁄°ru˘
 (B⁄oboUIComp⁄íà*
comp⁄ít
,

98 c⁄° *
«me
);

100 
B⁄oboUIComp⁄ít
 *
	`b⁄obo_ui_comp⁄ít_√w
 (c⁄° *
«me
);

101 
B⁄oboUIComp⁄ít
 *
	`b⁄obo_ui_comp⁄ít_√w_deÁu…
 ();

103 
	`b⁄obo_ui_comp⁄ít_£t_«me
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

104 c⁄° *
«me
);

105 c⁄° *
	`b⁄obo_ui_comp⁄ít_gë_«me
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
);

107 
	`b⁄obo_ui_comp⁄ít_£t_c⁄èöî
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

108 
B⁄obo_UIC⁄èöî
 
c⁄èöî
,

109 
CORBA_Envú⁄mít
 *
›t_ev
);

110 
	`b⁄obo_ui_comp⁄ít_un£t_c⁄èöî
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

111 
CORBA_Envú⁄mít
 *
›t_ev
);

112 
B⁄obo_UIC⁄èöî
 
	`b⁄obo_ui_comp⁄ít_gë_c⁄èöî
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
);

114 
	`b⁄obo_ui_comp⁄ít_add_vîb
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

115 c⁄° *
˙ame
,

116 
B⁄oboUIVîbFn
 
‚
,

117 
gpoöãr
 
u£r_d©a
);

119 
	`b⁄obo_ui_comp⁄ít_add_vîb_fuŒ
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

120 c⁄° *
˙ame
,

121 
GClosuª
 *
˛osuª
);

123 
	`b⁄obo_ui_comp⁄ít_ªmove_vîb
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

124 c⁄° *
˙ame
);

126 
	`b⁄obo_ui_comp⁄ít_ªmove_vîb_by_˛osuª
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

127 
GClosuª
 *
˛osuª
);

129 
	`b⁄obo_ui_comp⁄ít_add_li°íî
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

130 c⁄° *
id
,

131 
B⁄oboUILi°íîFn
 
‚
,

132 
gpoöãr
 
u£r_d©a
);

134 
	`b⁄obo_ui_comp⁄ít_add_li°íî_fuŒ
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

135 c⁄° *
id
,

136 
GClosuª
 *
˛osuª
);

138 
	`b⁄obo_ui_comp⁄ít_ªmove_li°íî
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

139 c⁄° *
˙ame
);

141 
	`b⁄obo_ui_comp⁄ít_ªmove_li°íî_by_˛osuª
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

142 
GClosuª
 *
˛osuª
);

144 
	`b⁄obo_ui_comp⁄ít_£t
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

145 c⁄° *
∑th
,

146 c⁄° *
xml
,

147 
CORBA_Envú⁄mít
 *
›t_ev
);

149 
	`b⁄obo_ui_comp⁄ít_£t_å™¶©e
(
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

150 c⁄° *
∑th
,

151 c⁄° *
xml
,

152 
CORBA_Envú⁄mít
 *
›t_ev
);

154 
	`b⁄obo_ui_comp⁄ít_£t_åì
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

155 c⁄° *
∑th
,

156 
B⁄oboUINode
 *
node
,

157 
CORBA_Envú⁄mít
 *
ev
);

159 
	`b⁄obo_ui_comp⁄ít_rm
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

160 c⁄° *
∑th
,

161 
CORBA_Envú⁄mít
 *
ev
);

163 
gboﬁón
 
	`b⁄obo_ui_comp⁄ít_∑th_exi°s
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

164 c⁄° *
∑th
,

165 
CORBA_Envú⁄mít
 *
ev
);

167 
CORBA_ch¨
 *
	`b⁄obo_ui_comp⁄ít_gë
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

168 c⁄° *
∑th
,

169 
gboﬁón
 
ªcur£
,

170 
CORBA_Envú⁄mít
 *
›t_ev
);

172 
B⁄oboUINode
 *
	`b⁄obo_ui_comp⁄ít_gë_åì
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

173 c⁄° *
∑th
,

174 
gboﬁón
 
ªcur£
,

175 
CORBA_Envú⁄mít
 *
›t_ev
);

177 
	`b⁄obo_ui_comp⁄ít_obje˘_£t
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

178 c⁄° *
∑th
,

179 
B⁄obo_Unknown
 
c⁄åﬁ
,

180 
CORBA_Envú⁄mít
 *
›t_ev
);

182 
B⁄obo_Unknown
 
	`b⁄obo_ui_comp⁄ít_obje˘_gë
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

183 c⁄° *
∑th
,

184 
CORBA_Envú⁄mít
 *
›t_ev
);

186 
	`b⁄obo_ui_comp⁄ít_widgë_£t
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

187 c⁄° *
∑th
,

188 
GtkWidgë
 *
widgë
,

189 
CORBA_Envú⁄mít
 *
›t_ev
);

191 
	`b⁄obo_ui_comp⁄ít_‰ìze
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

192 
CORBA_Envú⁄mít
 *
›t_ev
);

194 
	`b⁄obo_ui_comp⁄ít_thaw
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

195 
CORBA_Envú⁄mít
 *
›t_ev
);

197 
	`b⁄obo_ui_comp⁄ít_£t_¥›
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

198 c⁄° *
∑th
,

199 c⁄° *
¥›
,

200 c⁄° *
vÆue
,

201 
CORBA_Envú⁄mít
 *
›t_ev
);

203 
gch¨
 *
	`b⁄obo_ui_comp⁄ít_gë_¥›
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

204 c⁄° *
∑th
,

205 c⁄° *
¥›
,

206 
CORBA_Envú⁄mít
 *
›t_ev
);

208 
	`b⁄obo_ui_comp⁄ít_£t_°©us
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

209 c⁄° *
ãxt
,

210 
CORBA_Envú⁄mít
 *
›t_ev
);

213 c⁄° *
˙ame
;

214 
B⁄oboUIVîbFn
 
cb
;

215 
gpoöãr
 
u£r_d©a
;

216 
gpoöãr
 
dummy
;

217 } 
	tB⁄oboUIVîb
;

219 
	#BONOBO_UI_VERB
(
«me
,
cb
Ë{ («me), (cb), 
NULL
 
	}

	)
}

220 
	#BONOBO_UI_VERB_DATA
(
«me
,
cb
,
d©a
Ë{ («me), (cb), (d©aË}

	)

221 
	#BONOBO_UI_UNSAFE_VERB
(
«me
,
cb
Ë{ («me), ((
B⁄oboUIVîbFn
)(cb)), 
NULL
 }

	)

222 
	#BONOBO_UI_UNSAFE_VERB_DATA
(
«me
,
cb
,
d©a
Ë{ («me), ((
B⁄oboUIVîbFn
)(cb)), (d©aË}

	)

223 
	#BONOBO_UI_VERB_END
 { 
NULL
, NULL, NULL }

	)

225 
b⁄obo_ui_comp⁄ít_add_vîb_li°
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

226 c⁄° 
B⁄oboUIVîb
 *
li°
);

227 
b⁄obo_ui_comp⁄ít_add_vîb_li°_wôh_d©a
 (
B⁄oboUIComp⁄ít
 *
comp⁄ít
,

228 c⁄° 
B⁄oboUIVîb
 *
li°
,

229 
gpoöãr
 
u£r_d©a
);

231 
	gG_END_DECLS


	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/panel-2.0/GNOME_Panel.h

5 #i‚de‡
GNOME_P™ñ_H


6 
	#GNOME_P™ñ_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_Unknown.h
>

18 #i‡!
deföed
(
_GNOME_Vîtigo_P™ñOrõ¡_deföed
)

19 
	#_GNOME_Vîtigo_P™ñOrõ¡_deföed
 1

	)

20 
CORBA_unsig√d_sh‹t
 
	tGNOME_Vîtigo_P™ñOrõ¡
;

21 
	#GNOME_Vîtigo_P™ñOrõ¡_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_sh‹t_m¨shÆ
((x),(y),(z))

	)

22 
	#GNOME_Vîtigo_P™ñOrõ¡_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

23 #i‡!
deföed
(
TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_0
)

24 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_0
 'G'

	)

25 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_1
 'N'

	)

26 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_2
 'O'

	)

27 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_3
 'M'

	)

28 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_4
 'E'

	)

29 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_5
 '_'

	)

30 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_6
 'P'

	)

31 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_7
 'a'

	)

32 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_8
 'n'

	)

33 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_9
 'e'

	)

34 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñOrõ¡_10
 'l'

	)

35 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


40 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GNOME_Vîtigo_P™ñOrõ¡_°ru˘
;

41 
	#TC_GNOME_Vîtigo_P™ñOrõ¡
 ((
CORBA_Ty≥Code
)&
TC_GNOME_Vîtigo_P™ñOrõ¡_°ru˘
)

	)

43 
	#GNOME_Vîtigo_P™ñOrõ¡__Æloc
(Ë((
GNOME_Vîtigo_P™ñOrõ¡
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_sh‹t
))

	)

44 
	#GNOME_Vîtigo_P™ñOrõ¡__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_sh‹t
,(m),(d))

	)

46 #i‚de‡
GNOME_Vîtigo_PANEL_ORIENT_UP


47 
	#GNOME_Vîtigo_PANEL_ORIENT_UP
 0U

	)

50 #i‚de‡
GNOME_Vîtigo_PANEL_ORIENT_DOWN


51 
	#GNOME_Vîtigo_PANEL_ORIENT_DOWN
 1U

	)

54 #i‚de‡
GNOME_Vîtigo_PANEL_ORIENT_LEFT


55 
	#GNOME_Vîtigo_PANEL_ORIENT_LEFT
 2U

	)

58 #i‚de‡
GNOME_Vîtigo_PANEL_ORIENT_RIGHT


59 
	#GNOME_Vîtigo_PANEL_ORIENT_RIGHT
 3U

	)

62 #i‡!
deföed
(
_GNOME_Vîtigo_P™ñSize_deföed
)

63 
	#_GNOME_Vîtigo_P™ñSize_deföed
 1

	)

64 
CORBA_unsig√d_sh‹t
 
	tGNOME_Vîtigo_P™ñSize
;

65 
	#GNOME_Vîtigo_P™ñSize_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_sh‹t_m¨shÆ
((x),(y),(z))

	)

66 
	#GNOME_Vîtigo_P™ñSize_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

67 #i‡!
deföed
(
TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_0
)

68 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_0
 'G'

	)

69 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_1
 'N'

	)

70 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_2
 'O'

	)

71 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_3
 'M'

	)

72 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_4
 'E'

	)

73 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_5
 '_'

	)

74 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_6
 'P'

	)

75 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_7
 'a'

	)

76 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_8
 'n'

	)

77 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_9
 'e'

	)

78 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñSize_10
 'l'

	)

79 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


84 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GNOME_Vîtigo_P™ñSize_°ru˘
;

85 
	#TC_GNOME_Vîtigo_P™ñSize
 ((
CORBA_Ty≥Code
)&
TC_GNOME_Vîtigo_P™ñSize_°ru˘
)

	)

87 
	#GNOME_Vîtigo_P™ñSize__Æloc
(Ë((
GNOME_Vîtigo_P™ñSize
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_sh‹t
))

	)

88 
	#GNOME_Vîtigo_P™ñSize__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_sh‹t
,(m),(d))

	)

90 #i‚de‡
GNOME_Vîtigo_PANEL_XX_SMALL


91 
	#GNOME_Vîtigo_PANEL_XX_SMALL
 12U

	)

94 #i‚de‡
GNOME_Vîtigo_PANEL_X_SMALL


95 
	#GNOME_Vîtigo_PANEL_X_SMALL
 24U

	)

98 #i‚de‡
GNOME_Vîtigo_PANEL_SMALL


99 
	#GNOME_Vîtigo_PANEL_SMALL
 36U

	)

102 #i‚de‡
GNOME_Vîtigo_PANEL_MEDIUM


103 
	#GNOME_Vîtigo_PANEL_MEDIUM
 48U

	)

106 #i‚de‡
GNOME_Vîtigo_PANEL_LARGE


107 
	#GNOME_Vîtigo_PANEL_LARGE
 64U

	)

110 #i‚de‡
GNOME_Vîtigo_PANEL_X_LARGE


111 
	#GNOME_Vîtigo_PANEL_X_LARGE
 80U

	)

114 #i‚de‡
GNOME_Vîtigo_PANEL_XX_LARGE


115 
	#GNOME_Vîtigo_PANEL_XX_LARGE
 128U

	)

118 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g
)

119 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g
 1

	)

120 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_0
 'G'

	)

121 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_1
 'N'

	)

122 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_2
 'O'

	)

123 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_3
 'M'

	)

124 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_4
 'E'

	)

125 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_5
 '_'

	)

126 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_6
 'P'

	)

127 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_7
 'a'

	)

128 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_8
 'n'

	)

129 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_9
 'e'

	)

130 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_10
 'l'

	)

131 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_l⁄g_deföed
)

132 
	#_CORBA_£quí˚_CORBA_l⁄g_deföed
 1

	)

133 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_l⁄g
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_l⁄g
;

135 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_0
)

136 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_0
 'G'

	)

137 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_1
 'N'

	)

138 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_2
 'O'

	)

139 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_3
 'M'

	)

140 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_4
 'E'

	)

141 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_5
 '_'

	)

142 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_6
 'P'

	)

143 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_7
 'a'

	)

144 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_8
 'n'

	)

145 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_9
 'e'

	)

146 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_10
 'l'

	)

147 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


152 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_l⁄g_°ru˘
;

153 
	#TC_CORBA_£quí˚_CORBA_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_l⁄g_°ru˘
)

	)

155 
	#CORBA_£quí˚_CORBA_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g
))

	)

156 
	#CORBA_£quí˚_CORBA_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g
,(m),(d))

	)

157 
	#CORBA_£quí˚_CORBA_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

158 
	#CORBA_£quí˚_CORBA_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

160 #i‡!
deföed
(
_GNOME_Vîtigo_SizeHötLi°_deföed
)

161 
	#_GNOME_Vîtigo_SizeHötLi°_deföed
 1

	)

162 
CORBA_£quí˚_CORBA_l⁄g
 
	tGNOME_Vîtigo_SizeHötLi°
;

163 
	#GNOME_Vîtigo_SizeHötLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

164 
	#GNOME_Vîtigo_SizeHötLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

165 #i‡!
deföed
(
TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_0
)

166 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_0
 'G'

	)

167 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_1
 'N'

	)

168 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_2
 'O'

	)

169 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_3
 'M'

	)

170 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_4
 'E'

	)

171 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_5
 '_'

	)

172 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_6
 'P'

	)

173 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_7
 'a'

	)

174 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_8
 'n'

	)

175 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_9
 'e'

	)

176 
	#TC_IMPL_TC_GNOME_Vîtigo_SizeHötLi°_10
 'l'

	)

177 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


182 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GNOME_Vîtigo_SizeHötLi°_°ru˘
;

183 
	#TC_GNOME_Vîtigo_SizeHötLi°
 ((
CORBA_Ty≥Code
)&
TC_GNOME_Vîtigo_SizeHötLi°_°ru˘
)

	)

185 
	#GNOME_Vîtigo_SizeHötLi°__Æloc
(Ë((
GNOME_Vîtigo_SizeHötLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g
))

	)

186 
	#GNOME_Vîtigo_SizeHötLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g
,(m),(d))

	)

187 
	#GNOME_Vîtigo_SizeHötLi°_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

189 #i‡!
deföed
(
_GNOME_Vîtigo_P™ñBackground_deföed
)

190 
	#_GNOME_Vîtigo_P™ñBackground_deföed
 1

	)

191 
CORBA_°rög
 
	tGNOME_Vîtigo_P™ñBackground
;

192 
	#GNOME_Vîtigo_P™ñBackground_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

193 
	#GNOME_Vîtigo_P™ñBackground_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

194 #i‡!
deföed
(
TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_0
)

195 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_0
 'G'

	)

196 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_1
 'N'

	)

197 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_2
 'O'

	)

198 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_3
 'M'

	)

199 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_4
 'E'

	)

200 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_5
 '_'

	)

201 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_6
 'P'

	)

202 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_7
 'a'

	)

203 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_8
 'n'

	)

204 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_9
 'e'

	)

205 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñBackground_10
 'l'

	)

206 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


211 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GNOME_Vîtigo_P™ñBackground_°ru˘
;

212 
	#TC_GNOME_Vîtigo_P™ñBackground
 ((
CORBA_Ty≥Code
)&
TC_GNOME_Vîtigo_P™ñBackground_°ru˘
)

	)

214 
	#GNOME_Vîtigo_P™ñBackground__Æloc
(Ë((
GNOME_Vîtigo_P™ñBackground
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

215 
	#GNOME_Vîtigo_P™ñBackground__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

217 #i‡!
deföed
(
ORBIT_DECL_GNOME_Vîtigo_P™ñAµÀtShñl
Ë&& !deföed(
_GNOME_Vîtigo_P™ñAµÀtShñl_deföed
)

218 
	#ORBIT_DECL_GNOME_Vîtigo_P™ñAµÀtShñl
 1

	)

219 
	#_GNOME_Vîtigo_P™ñAµÀtShñl_deföed
 1

	)

220 
	#GNOME_Vîtigo_P™ñAµÀtShñl__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

221 
CORBA_Obje˘
 
	tGNOME_Vîtigo_P™ñAµÀtShñl
;

222 
CORBA_unsig√d_l⁄g
 
GNOME_Vîtigo_P™ñAµÀtShñl__˛assid
;

223 #i‡!
deföed
(
TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_0
)

224 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_0
 'G'

	)

225 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_1
 'N'

	)

226 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_2
 'O'

	)

227 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_3
 'M'

	)

228 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_4
 'E'

	)

229 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_5
 '_'

	)

230 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_6
 'P'

	)

231 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_7
 'a'

	)

232 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_8
 'n'

	)

233 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_9
 'e'

	)

234 
	#TC_IMPL_TC_GNOME_Vîtigo_P™ñAµÀtShñl_10
 'l'

	)

235 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


240 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GNOME_Vîtigo_P™ñAµÀtShñl_°ru˘
;

241 
	#TC_GNOME_Vîtigo_P™ñAµÀtShñl
 ((
CORBA_Ty≥Code
)&
TC_GNOME_Vîtigo_P™ñAµÀtShñl_°ru˘
)

	)

246 #i‚de‡
_deföed_POA_GNOME_Vîtigo_P™ñAµÀtShñl


247 
	#_deföed_POA_GNOME_Vîtigo_P™ñAµÀtShñl
 1

	)

249 *
	g_¥iv©e
;

250 (*
	gp›up_míu
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_l⁄g
 
	gbuâ⁄
, c⁄° CORBA_l⁄g 
	gtime
, 
CORBA_Envú⁄mít
 *
	gev
);

251 } 
	tPOA_GNOME_Vîtigo_P™ñAµÀtShñl__ïv
;

253 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

254 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

255 
POA_GNOME_Vîtigo_P™ñAµÀtShñl__ïv
 *
	gGNOME_Vîtigo_P™ñAµÀtShñl_ïv
;

256 } 
	tPOA_GNOME_Vîtigo_P™ñAµÀtShñl__vïv
;

258 *
	g_¥iv©e
;

259 
POA_GNOME_Vîtigo_P™ñAµÀtShñl__vïv
 *
	gvïv
;

260 } 
	tPOA_GNOME_Vîtigo_P™ñAµÀtShñl
;

261 
POA_GNOME_Vîtigo_P™ñAµÀtShñl__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

262 
POA_GNOME_Vîtigo_P™ñAµÀtShñl__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

266 
_ORBIT_skñ_smÆl_GNOME_Vîtigo_P™ñAµÀtShñl_p›up_míu
(
POA_GNOME_Vîtigo_P™ñAµÀtShñl
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_p›up_míu
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_l⁄g
 
buâ⁄
, c⁄° CORBA_l⁄g 
time
, CORBA_Environment *ev));

269 
	#GNOME_Vîtigo_P™ñAµÀtShñl_ªf
 
B⁄obo_Unknown_ªf


	)

270 
	#GNOME_Vîtigo_P™ñAµÀtShñl_uƒef
 
B⁄obo_Unknown_uƒef


	)

271 
	#GNOME_Vîtigo_P™ñAµÀtShñl_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

272 
GNOME_Vîtigo_P™ñAµÀtShñl_p›up_míu
(
GNOME_Vîtigo_P™ñAµÀtShñl
 
_obj
, c⁄° 
CORBA_l⁄g
 
buâ⁄
, c⁄° CORBA_l⁄g 
time
, 
CORBA_Envú⁄mít
 *
ev
);

273 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

275 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


280 
ORBô_II¡îÁ˚
 
GNOME_Vîtigo_P™ñAµÀtShñl__iöãrÁ˚
;

281 
	#GNOME_Vîtigo_P™ñAµÀtShñl_IMETHODS_LEN
 1

	)

282 #ifde‡
ORBIT_IDL_C_IMODULE_GNOME_P™ñ


287 
ORBô_IMëhod
 
GNOME_Vîtigo_P™ñAµÀtShñl__imëhods
[
GNOME_Vîtigo_P™ñAµÀtShñl_IMETHODS_LEN
];

291 #i‚de‡
__GNOME_Vîtigo_P™ñAµÀtShñl__imëhods_ödex


292 
	#__GNOME_Vîtigo_P™ñAµÀtShñl__imëhods_ödex


	)

294 
	gGNOME_Vîtigo_P™ñAµÀtShñl_p›up_míu__imëhods_ödex


295 } 
	tGNOME_Vîtigo_P™ñAµÀtShñl__imëhods_ödex
;

298 #i‚de‡
__ORBIT_IMETHODS_INDEX


299 
	#__ORBIT_IMETHODS_INDEX


	)

300 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

303 #ifde‡
__˝lu•lus


307 #i‚de‡
EXCLUDE_ORBIT_H


308 
	~<‹bô/‹bô.h
>

312 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@CPrefs.h

1 #i‚de‡
_PREFS_H_


2 
	#_PREFS_H_


	)

5 ˛as†
	cCPªfs


7 
	mpublic
:

8 
CPªfs
();

9 
CPªfs
–c⁄° CPªf†&
§c
 );

10 
	mvútuÆ
 ~
CPªfs
();

12 
	$gëW©îm¨kHigh
()

14  
m_w©îm¨kHigh
;

17 
	$gëW©îm¨kLow
()

19  
m_w©îm¨kLow
;

20 
	}
};

22 
	$gëUpd©eI¡îvÆ
()

24  
m_upd©eI¡îvÆ
;

25 
	}
};

27 
	g¥iv©e
:

28 
m_w©îm¨kLow
;

29 
	gm_w©îm¨kHigh
;

30 
	gm_upd©eI¡îvÆ
;

	@CTempReader.h

2 #i‚de‡
_CTEMPREADER_H_


3 
	#_CTEMPREADER_H_


	)

5 
	~"CPªfs.h
"

7 ˛as†
	cCTempRódî


10 
	mpublic
:

11 
CTempRódî
();

12 
CTempRódî
–
CPªfs
& 
¥efs
 );

13 
	mvútuÆ
 ~
CTempRódî
();

15 
boﬁ
 
gëCuºTemp
–* c⁄° 
ãmpSå
 );

16 
boﬁ
 
gëCuºTemp
–* c⁄° 
ãmpFlﬂt
 );

18 
	m¥iv©e
:

19 
ãmpSåToFlﬂt
–c⁄° * 
ãmp_°r
 );

20 
CPªfs
 
	mm_¥efs
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bonobo-activation-2.0/bonobo-activation/Bonobo_Unknown.h

5 #i‚de‡
B⁄obo_Unknown_H


6 
	#B⁄obo_Unknown_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Unknown
Ë&& !deföed(
_B⁄obo_Unknown_deföed
)

18 
	#ORBIT_DECL_B⁄obo_Unknown
 1

	)

19 
	#_B⁄obo_Unknown_deföed
 1

	)

20 
	#B⁄obo_Unknown__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

21 
CORBA_Obje˘
 
	tB⁄obo_Unknown
;

22 
CORBA_unsig√d_l⁄g
 
B⁄obo_Unknown__˛assid
;

23 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Unknown_0
)

24 
	#TC_IMPL_TC_B⁄obo_Unknown_0
 'B'

	)

25 
	#TC_IMPL_TC_B⁄obo_Unknown_1
 'o'

	)

26 
	#TC_IMPL_TC_B⁄obo_Unknown_2
 'n'

	)

27 
	#TC_IMPL_TC_B⁄obo_Unknown_3
 'o'

	)

28 
	#TC_IMPL_TC_B⁄obo_Unknown_4
 'b'

	)

29 
	#TC_IMPL_TC_B⁄obo_Unknown_5
 'o'

	)

30 
	#TC_IMPL_TC_B⁄obo_Unknown_6
 '_'

	)

31 
	#TC_IMPL_TC_B⁄obo_Unknown_7
 'U'

	)

32 
	#TC_IMPL_TC_B⁄obo_Unknown_8
 'n'

	)

33 
	#TC_IMPL_TC_B⁄obo_Unknown_9
 'k'

	)

34 
	#TC_IMPL_TC_B⁄obo_Unknown_10
 'n'

	)

35 
	#TC_IMPL_TC_B⁄obo_Unknown_11
 'o'

	)

36 
	#TC_IMPL_TC_B⁄obo_Unknown_12
 'w'

	)

37 
	#TC_IMPL_TC_B⁄obo_Unknown_13
 'n'

	)

38 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_Unknown


43 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Unknown_°ru˘
;

44 
	#TC_B⁄obo_Unknown
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Unknown_°ru˘
)

	)

49 #i‚de‡
_deföed_POA_B⁄obo_Unknown


50 
	#_deföed_POA_B⁄obo_Unknown
 1

	)

52 *
	g_¥iv©e
;

53 (*
	gªf
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

54 (*
	guƒef
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

55 
B⁄obo_Unknown
 (*
quîyI¡îÁ˚
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gªpoid
, 
CORBA_Envú⁄mít
 *
	gev
);

56 } 
	tPOA_B⁄obo_Unknown__ïv
;

58 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

59 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

60 } 
	tPOA_B⁄obo_Unknown__vïv
;

62 *
	g_¥iv©e
;

63 
POA_B⁄obo_Unknown__vïv
 *
	gvïv
;

64 } 
	tPOA_B⁄obo_Unknown
;

65 
POA_B⁄obo_Unknown__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

66 
POA_B⁄obo_Unknown__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

70 
_ORBIT_skñ_smÆl_B⁄obo_Unknown_ªf
(
POA_B⁄obo_Unknown
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªf
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

71 
_ORBIT_skñ_smÆl_B⁄obo_Unknown_uƒef
(
POA_B⁄obo_Unknown
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_uƒef
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

72 
_ORBIT_skñ_smÆl_B⁄obo_Unknown_quîyI¡îÁ˚
(
POA_B⁄obo_Unknown
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_quîyI¡îÁ˚
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
ªpoid
, CORBA_Environment *ev));

75 
B⁄obo_Unknown_ªf
(
B⁄obo_Unknown
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

76 
B⁄obo_Unknown_uƒef
(
B⁄obo_Unknown
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

77 
B⁄obo_Unknown
 
B⁄obo_Unknown_quîyI¡îÁ˚
(B⁄obo_Unknow¿
_obj
, c⁄° 
CORBA_ch¨
 * 
ªpoid
, 
CORBA_Envú⁄mít
 *
ev
);

78 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

80 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_Unknown


85 
ORBô_II¡îÁ˚
 
B⁄obo_Unknown__iöãrÁ˚
;

86 
	#B⁄obo_Unknown_IMETHODS_LEN
 3

	)

87 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_Unknown


92 
ORBô_IMëhod
 
B⁄obo_Unknown__imëhods
[
B⁄obo_Unknown_IMETHODS_LEN
];

96 #i‚de‡
__B⁄obo_Unknown__imëhods_ödex


97 
	#__B⁄obo_Unknown__imëhods_ödex


	)

99 
	gB⁄obo_Unknown_ªf__imëhods_ödex
,

100 
	gB⁄obo_Unknown_uƒef__imëhods_ödex
,

101 
	gB⁄obo_Unknown_quîyI¡îÁ˚__imëhods_ödex


102 } 
	tB⁄obo_Unknown__imëhods_ödex
;

105 #i‚de‡
__ORBIT_IMETHODS_INDEX


106 
	#__ORBIT_IMETHODS_INDEX


	)

107 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

110 #ifde‡
__˝lu•lus


114 #i‚de‡
EXCLUDE_ORBIT_H


115 
	~<‹bô/‹bô.h
>

119 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/glib-2.0/glib-object.h

19 #i‚de‡
__GLIB_GOBJECT_H__


20 
	#__GLIB_GOBJECT_H__


	)

22 
	#__GLIB_GOBJECT_H_INSIDE__


	)

25 
	~<gobje˘/gboxed.h
>

26 
	~<gobje˘/gíums.h
>

27 
	~<gobje˘/gobje˘.h
>

28 
	~<gobje˘/g∑øm.h
>

29 
	~<gobje˘/g∑øm•ecs.h
>

30 
	~<gobje˘/gsig«l.h
>

31 
	~<gobje˘/gsour˚˛osuª.h
>

32 
	~<gobje˘/gty≥.h
>

33 
	~<gobje˘/gty≥moduÀ.h
>

34 
	~<gobje˘/gty≥∂ugö.h
>

35 
	~<gobje˘/gvÆue.h
>

36 
	~<gobje˘/gvÆuóºay.h
>

37 
	~<gobje˘/gvÆuëy≥s.h
>

39 #unde‡
__GLIB_GOBJECT_H_INSIDE__


	@/usr/include/glib-2.0/glib/galloca.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_ALLOCA_H__


32 
	#__G_ALLOCA_H__


	)

34 
	~<glib/gty≥s.h
>

36 #ifde‡ 
__GNUC__


38 #unde‡
Æloˇ


39 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

40 #ñi‡
deföed
 (
GLIB_HAVE_ALLOCA_H
)

42 
	~<Æloˇ.h
>

44 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__DMC__
)

45 
	~<mÆloc.h
>

46 
	#Æloˇ
 
_Æloˇ


	)

48 #ifde‡
_AIX


49 #¥agm®
Æloˇ


51 #i‚de‡
Æloˇ


52 
G_BEGIN_DECLS


53 *
Æloˇ
 ();

54 
	gG_END_DECLS


60 
	#g_Æloˇ
(
size
Ë
	`Æloˇ
 (size)

	)

61 
	#g_√wa
(
°ru˘_ty≥
, 
n_°ru˘s
Ë((°ru˘_ty≥*Ë
	`g_Æloˇ
 ( (°ru˘_ty≥Ë* (
gsize
Ë“_°ru˘s)))

	)

	@/usr/include/glib-2.0/glib/garray.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_ARRAY_H__


32 
	#__G_ARRAY_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


38 
_GAºay
 
	tGAºay
;

39 
_GByãAºay
 
	tGByãAºay
;

40 
_GPåAºay
 
	tGPåAºay
;

42 
	s_GAºay


44 
gch¨
 *
	md©a
;

45 
guöt
 
	mÀn
;

48 
	s_GByãAºay


50 
guöt8
 *
	md©a
;

51 
guöt
 
	mÀn
;

54 
	s_GPåAºay


56 
gpoöãr
 *
	mpd©a
;

57 
guöt
 
	mÀn
;

65 
	#g_¨øy_≠≥nd_vÆ
(
a
,
v
Ë
	`g_¨øy_≠≥nd_vÆs
 (a, &(v), 1)

	)

66 
	#g_¨øy_¥ïíd_vÆ
(
a
,
v
Ë
	`g_¨øy_¥ïíd_vÆs
 (a, &(v), 1)

	)

67 
	#g_¨øy_ö£π_vÆ
(
a
,
i
,
v
Ë
	`g_¨øy_ö£π_vÆs
 (a, i, &(v), 1)

	)

68 
	#g_¨øy_ödex
(
a
,
t
,
i
Ë((—*Ë(*Ë◊)->
d©a
Ë[(i)])

	)

70 
GAºay
* 
g_¨øy_√w
 (
gboﬁón
 
zîo_ãrmö©ed
,

71 
gboﬁón
 
˛ór_
,

72 
guöt
 
ñemít_size
);

73 
GAºay
* 
g_¨øy_sized_√w
 (
gboﬁón
 
zîo_ãrmö©ed
,

74 
gboﬁón
 
˛ór_
,

75 
guöt
 
ñemít_size
,

76 
guöt
 
ª£rved_size
);

77 
gch¨
* 
g_¨øy_‰ì
 (
GAºay
 *
¨øy
,

78 
gboﬁón
 
‰ì_£gmít
);

79 
GAºay
* 
g_¨øy_≠≥nd_vÆs
 (GAºay *
¨øy
,

80 
gc⁄°poöãr
 
d©a
,

81 
guöt
 
Àn
);

82 
GAºay
* 
g_¨øy_¥ïíd_vÆs
 (GAºay *
¨øy
,

83 
gc⁄°poöãr
 
d©a
,

84 
guöt
 
Àn
);

85 
GAºay
* 
g_¨øy_ö£π_vÆs
 (GAºay *
¨øy
,

86 
guöt
 
ödex_
,

87 
gc⁄°poöãr
 
d©a
,

88 
guöt
 
Àn
);

89 
GAºay
* 
g_¨øy_£t_size
 (GAºay *
¨øy
,

90 
guöt
 
Àngth
);

91 
GAºay
* 
g_¨øy_ªmove_ödex
 (GAºay *
¨øy
,

92 
guöt
 
ödex_
);

93 
GAºay
* 
g_¨øy_ªmove_ödex_Á°
 (GAºay *
¨øy
,

94 
guöt
 
ödex_
);

95 
GAºay
* 
g_¨øy_ªmove_ønge
 (GAºay *
¨øy
,

96 
guöt
 
ödex_
,

97 
guöt
 
Àngth
);

98 
g_¨øy_s‹t
 (
GAºay
 *
¨øy
,

99 
GCom∑ªFunc
 
com∑ª_func
);

100 
g_¨øy_s‹t_wôh_d©a
 (
GAºay
 *
¨øy
,

101 
GCom∑ªD©aFunc
 
com∑ª_func
,

102 
gpoöãr
 
u£r_d©a
);

108 
	#g_±r_¨øy_ödex
(
¨øy
,
ödex_
Ë(◊ºay)->
pd©a
)[ödex_]

	)

109 
GPåAºay
* 
g_±r_¨øy_√w
 ();

110 
GPåAºay
* 
g_±r_¨øy_sized_√w
 (
guöt
 
ª£rved_size
);

111 
gpoöãr
* 
g_±r_¨øy_‰ì
 (
GPåAºay
 *
¨øy
,

112 
gboﬁón
 
‰ì_£g
);

113 
g_±r_¨øy_£t_size
 (
GPåAºay
 *
¨øy
,

114 
göt
 
Àngth
);

115 
gpoöãr
 
g_±r_¨øy_ªmove_ödex
 (
GPåAºay
 *
¨øy
,

116 
guöt
 
ödex_
);

117 
gpoöãr
 
g_±r_¨øy_ªmove_ödex_Á°
 (
GPåAºay
 *
¨øy
,

118 
guöt
 
ödex_
);

119 
gboﬁón
 
g_±r_¨øy_ªmove
 (
GPåAºay
 *
¨øy
,

120 
gpoöãr
 
d©a
);

121 
gboﬁón
 
g_±r_¨øy_ªmove_Á°
 (
GPåAºay
 *
¨øy
,

122 
gpoöãr
 
d©a
);

123 
g_±r_¨øy_ªmove_ønge
 (
GPåAºay
 *
¨øy
,

124 
guöt
 
ödex_
,

125 
guöt
 
Àngth
);

126 
g_±r_¨øy_add
 (
GPåAºay
 *
¨øy
,

127 
gpoöãr
 
d©a
);

128 
g_±r_¨øy_s‹t
 (
GPåAºay
 *
¨øy
,

129 
GCom∑ªFunc
 
com∑ª_func
);

130 
g_±r_¨øy_s‹t_wôh_d©a
 (
GPåAºay
 *
¨øy
,

131 
GCom∑ªD©aFunc
 
com∑ª_func
,

132 
gpoöãr
 
u£r_d©a
);

133 
g_±r_¨øy_f‹óch
 (
GPåAºay
 *
¨øy
,

134 
GFunc
 
func
,

135 
gpoöãr
 
u£r_d©a
);

142 
GByãAºay
* 
g_byã_¨øy_√w
 ();

143 
GByãAºay
* 
g_byã_¨øy_sized_√w
 (
guöt
 
ª£rved_size
);

144 
guöt8
* 
g_byã_¨øy_‰ì
 (
GByãAºay
 *
¨øy
,

145 
gboﬁón
 
‰ì_£gmít
);

146 
GByãAºay
* 
g_byã_¨øy_≠≥nd
 (GByãAºay *
¨øy
,

147 c⁄° 
guöt8
 *
d©a
,

148 
guöt
 
Àn
);

149 
GByãAºay
* 
g_byã_¨øy_¥ïíd
 (GByãAºay *
¨øy
,

150 c⁄° 
guöt8
 *
d©a
,

151 
guöt
 
Àn
);

152 
GByãAºay
* 
g_byã_¨øy_£t_size
 (GByãAºay *
¨øy
,

153 
guöt
 
Àngth
);

154 
GByãAºay
* 
g_byã_¨øy_ªmove_ödex
 (GByãAºay *
¨øy
,

155 
guöt
 
ödex_
);

156 
GByãAºay
* 
g_byã_¨øy_ªmove_ödex_Á°
 (GByãAºay *
¨øy
,

157 
guöt
 
ödex_
);

158 
GByãAºay
* 
g_byã_¨øy_ªmove_ønge
 (GByãAºay *
¨øy
,

159 
guöt
 
ödex_
,

160 
guöt
 
Àngth
);

161 
g_byã_¨øy_s‹t
 (
GByãAºay
 *
¨øy
,

162 
GCom∑ªFunc
 
com∑ª_func
);

163 
g_byã_¨øy_s‹t_wôh_d©a
 (
GByãAºay
 *
¨øy
,

164 
GCom∑ªD©aFunc
 
com∑ª_func
,

165 
gpoöãr
 
u£r_d©a
);

167 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gasyncqueue.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_ASYNCQUEUE_H__


32 
	#__G_ASYNCQUEUE_H__


	)

34 
	~<glib/gthªad.h
>

36 
G_BEGIN_DECLS


38 
_GAsyncQueue
 
	tGAsyncQueue
;

43 
GAsyncQueue
* 
g_async_queue_√w
 ();

45 
GAsyncQueue
* 
g_async_queue_√w_fuŒ
 (
GDe°royNŸify
 
ôem_‰ì_func
);

51 
g_async_queue_lock
 (
GAsyncQueue
 *
queue
);

52 
g_async_queue_u∆ock
 (
GAsyncQueue
 *
queue
);

55 
GAsyncQueue
* 
g_async_queue_ªf
 (GAsyncQueuê*
queue
);

56 
g_async_queue_uƒef
 (
GAsyncQueue
 *
queue
);

58 #i‚de‡
G_DISABLE_DEPRECATED


60 
g_async_queue_ªf_u∆ocked
 (
GAsyncQueue
 *
queue
);

61 
g_async_queue_uƒef_™d_u∆ock
 (
GAsyncQueue
 *
queue
);

65 
g_async_queue_push
 (
GAsyncQueue
 *
queue
,

66 
gpoöãr
 
d©a
);

67 
g_async_queue_push_u∆ocked
 (
GAsyncQueue
 *
queue
,

68 
gpoöãr
 
d©a
);

70 
g_async_queue_push_s‹ãd
 (
GAsyncQueue
 *
queue
,

71 
gpoöãr
 
d©a
,

72 
GCom∑ªD©aFunc
 
func
,

73 
gpoöãr
 
u£r_d©a
);

74 
g_async_queue_push_s‹ãd_u∆ocked
 (
GAsyncQueue
 *
queue
,

75 
gpoöãr
 
d©a
,

76 
GCom∑ªD©aFunc
 
func
,

77 
gpoöãr
 
u£r_d©a
);

82 
gpoöãr
 
g_async_queue_p›
 (
GAsyncQueue
 *
queue
);

83 
gpoöãr
 
g_async_queue_p›_u∆ocked
 (
GAsyncQueue
 *
queue
);

86 
gpoöãr
 
g_async_queue_åy_p›
 (
GAsyncQueue
 *
queue
);

87 
gpoöãr
 
g_async_queue_åy_p›_u∆ocked
 (
GAsyncQueue
 *
queue
);

94 
gpoöãr
 
g_async_queue_timed_p›
 (
GAsyncQueue
 *
queue
,

95 
GTimeVÆ
 *
íd_time
);

96 
gpoöãr
 
g_async_queue_timed_p›_u∆ocked
 (
GAsyncQueue
 *
queue
,

97 
GTimeVÆ
 *
íd_time
);

106 
göt
 
g_async_queue_Àngth
 (
GAsyncQueue
 *
queue
);

107 
göt
 
g_async_queue_Àngth_u∆ocked
 (
GAsyncQueue
 *
queue
);

108 
g_async_queue_s‹t
 (
GAsyncQueue
 *
queue
,

109 
GCom∑ªD©aFunc
 
func
,

110 
gpoöãr
 
u£r_d©a
);

111 
g_async_queue_s‹t_u∆ocked
 (
GAsyncQueue
 *
queue
,

112 
GCom∑ªD©aFunc
 
func
,

113 
gpoöãr
 
u£r_d©a
);

116 
GMuãx
* 
_g_async_queue_gë_muãx
 (
GAsyncQueue
 *
queue
);

118 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gatomic.h

30 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

34 #i‚de‡
__G_ATOMIC_H__


35 
	#__G_ATOMIC_H__


	)

37 
	~<glib/gty≥s.h
>

39 
G_BEGIN_DECLS


41 
göt
 
g_©omic_öt_exch™ge_™d_add
 (vﬁ©ûêgöà
G_GNUC_MAY_ALIAS
 *
©omic
,

42 
göt
 
vÆ
);

43 
g_©omic_öt_add
 (vﬁ©ûê
göt
 
G_GNUC_MAY_ALIAS
 *
©omic
,

44 
göt
 
vÆ
);

45 
gboﬁón
 
g_©omic_öt_com∑ª_™d_exch™ge
 (vﬁ©ûê
göt
 
G_GNUC_MAY_ALIAS
 *
©omic
,

46 
göt
 
ﬁdvÆ
,

47 
göt
 
√wvÆ
);

48 
gboﬁón
 
g_©omic_poöãr_com∑ª_™d_exch™ge
 (vﬁ©ûê
gpoöãr
 
G_GNUC_MAY_ALIAS
 *
©omic
,

49 
gpoöãr
 
ﬁdvÆ
,

50 
gpoöãr
 
√wvÆ
);

52 
göt
 
g_©omic_öt_gë
 (vﬁ©ûêgöà
G_GNUC_MAY_ALIAS
 *
©omic
);

53 
g_©omic_öt_£t
 (vﬁ©ûê
göt
 
G_GNUC_MAY_ALIAS
 *
©omic
,

54 
göt
 
√wvÆ
);

55 
gpoöãr
 
g_©omic_poöãr_gë
 (vﬁ©ûêgpoöã∏
G_GNUC_MAY_ALIAS
 *
©omic
);

56 
g_©omic_poöãr_£t
 (vﬁ©ûê
gpoöãr
 
G_GNUC_MAY_ALIAS
 *
©omic
,

57 
gpoöãr
 
√wvÆ
);

59 #i‚de‡
G_ATOMIC_OP_MEMORY_BARRIER_NEEDED


60 
	#g_©omic_öt_gë
(
©omic
Ë((
göt
)*◊tomic))

	)

61 
	#g_©omic_öt_£t
(
©omic
, 
√wvÆ
Ë((Ë(*◊tomicË“ewvÆ)))

	)

62 
	#g_©omic_poöãr_gë
(
©omic
Ë((
gpoöãr
)*◊tomic))

	)

63 
	#g_©omic_poöãr_£t
(
©omic
, 
√wvÆ
Ë((Ë(*◊tomicË“ewvÆ)))

	)

65 
	#g_©omic_öt_gë
(
©omic
) \

66 ((Ë (
gch¨
 [ (*(
©omic
)Ë= (
göt
) ? 1 : -1]), \

67 (
g_©omic_öt_gë
Ë((vﬁ©ûê
göt
 
G_GNUC_MAY_ALIAS
 *Ë(*Ë(
©omic
)))

	)

68 
	#g_©omic_öt_£t
(
©omic
, 
√wvÆ
) \

69 ((Ë (
gch¨
 [ (*(
©omic
)Ë= (
göt
) ? 1 : -1]), \

70 (
g_©omic_öt_£t
Ë((vﬁ©ûê
göt
 
G_GNUC_MAY_ALIAS
 *Ë(*Ë(
©omic
), (
√wvÆ
)))

	)

71 
	#g_©omic_poöãr_gë
(
©omic
) \

72 ((Ë (
gch¨
 [ (*(
©omic
)Ë= (
gpoöãr
) ? 1 : -1]), \

73 (
g_©omic_poöãr_gë
Ë((vﬁ©ûê
gpoöãr
 
G_GNUC_MAY_ALIAS
 *Ë(*Ë(
©omic
)))

	)

74 
	#g_©omic_poöãr_£t
(
©omic
, 
√wvÆ
) \

75 ((Ë (
gch¨
 [ (*(
©omic
)Ë= (
gpoöãr
) ? 1 : -1]), \

76 (
g_©omic_poöãr_£t
Ë((vﬁ©ûê
gpoöãr
 
G_GNUC_MAY_ALIAS
 *Ë(*Ë(
©omic
), (
√wvÆ
)))

	)

79 
	#g_©omic_öt_öc
(
©omic
Ë(
	`g_©omic_öt_add
 (◊tomic), 1))

	)

80 
	#g_©omic_öt_dec_™d_ã°
(
©omic
) \

81 (
	`g_©omic_öt_exch™ge_™d_add
 ((
©omic
), -1Ë=1)

	)

83 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gbacktrace.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_BACKTRACE_H__


32 
	#__G_BACKTRACE_H__


	)

34 
	~<glib/gty≥s.h
>

35 
	~<sig«l.h
>

37 
G_BEGIN_DECLS


48 
g_⁄_îr‹_quîy
 (c⁄° 
gch¨
 *
¥g_«me
);

49 
g_⁄_îr‹_°ack_åa˚
 (c⁄° 
gch¨
 *
¥g_«me
);

54 #i‡(
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)Ë&& deföed (
__GNUC__
) && __GNUC__ >= 2

55 
	#G_BREAKPOINT
(Ë
G_STMT_START
{ 
__asm__
 
	`__vﬁ©ûe__
 ("öà$03"); }
G_STMT_END


	)

56 #ñi‡(
deföed
 (
_MSC_VER
Ë|| deföed (
__DMC__
)Ë&& deföed (
_M_IX86
)

57 
	#G_BREAKPOINT
(Ë
G_STMT_START
{ 
__asm
 3
h
 }
G_STMT_END


	)

58 #ñi‡
deföed
 (
_MSC_VER
)

59 
	#G_BREAKPOINT
(Ë
G_STMT_START
{ 
	`__debugbªak
(); }
G_STMT_END


	)

60 #ñi‡
deföed
 (
__Æpha__
Ë&& !deföed(
__osf__
Ë&& deföed (
__GNUC__
) && __GNUC__ >= 2

61 
	#G_BREAKPOINT
(Ë
G_STMT_START
{ 
__asm__
 
	`__vﬁ©ûe__
 ("b±"); }
G_STMT_END


	)

63 
	#G_BREAKPOINT
(Ë
G_STMT_START
{ 
	`øi£
 (
SIGTRAP
); }
G_STMT_END


	)

66 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gbase64.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_BASE64_H__


26 
	#__G_BASE64_H__


	)

28 
	~<glib/gty≥s.h
>

30 
G_BEGIN_DECLS


32 
gsize
 
g_ba£64_ícode_°ï
 (c⁄° 
guch¨
 *
ö
,

33 
gsize
 
Àn
,

34 
gboﬁón
 
bªak_löes
,

35 
gch¨
 *
out
,

36 
göt
 *
°©e
,

37 
göt
 *
ßve
);

38 
gsize
 
g_ba£64_ícode_˛o£
 (
gboﬁón
 
bªak_löes
,

39 
gch¨
 *
out
,

40 
göt
 *
°©e
,

41 
göt
 *
ßve
);

42 
gch¨
* 
	$g_ba£64_ícode
 (c⁄° 
guch¨
 *
d©a
,

43 
gsize
 
Àn
Ë
G_GNUC_MALLOC
;

44 
gsize
 
	`g_ba£64_decode_°ï
 (c⁄° 
gch¨
 *
ö
,

45 
gsize
 
Àn
,

46 
guch¨
 *
out
,

47 
göt
 *
°©e
,

48 
guöt
 *
ßve
);

49 
guch¨
 *
	$g_ba£64_decode
 (c⁄° 
gch¨
 *
ãxt
,

50 
gsize
 *
out_Àn
Ë
G_GNUC_MALLOC
;

51 
guch¨
 *
	`g_ba£64_decode_ö∂a˚
 (
gch¨
 *
ãxt
,

52 
gsize
 *
out_Àn
);

55 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gbookmarkfile.h

20 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

24 #i‚de‡
__G_BOOKMARK_FILE_H__


25 
	#__G_BOOKMARK_FILE_H__


	)

27 
	~<glib/gîr‹.h
>

28 
	~<time.h
>

30 
	gG_BEGIN_DECLS


34 
	#G_BOOKMARK_FILE_ERROR
 (
	`g_bookm¨k_fûe_îr‹_qu¨k
 ())

	)

38 
	mG_BOOKMARK_FILE_ERROR_INVALID_URI
,

39 
	mG_BOOKMARK_FILE_ERROR_INVALID_VALUE
,

40 
	mG_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED
,

41 
	mG_BOOKMARK_FILE_ERROR_URI_NOT_FOUND
,

42 
	mG_BOOKMARK_FILE_ERROR_READ
,

43 
	mG_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING
,

44 
	mG_BOOKMARK_FILE_ERROR_WRITE
,

45 
	mG_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND


46 } 
	tGBookm¨kFûeEº‹
;

48 
GQu¨k
 
g_bookm¨k_fûe_îr‹_qu¨k
 ();

53 
_GBookm¨kFûe
 
	tGBookm¨kFûe
;

55 
GBookm¨kFûe
 *
g_bookm¨k_fûe_√w
 ();

56 
g_bookm¨k_fûe_‰ì
 (
GBookm¨kFûe
 *
bookm¨k
);

58 
gboﬁón
 
g_bookm¨k_fûe_lﬂd_‰om_fûe
 (
GBookm¨kFûe
 *
bookm¨k
,

59 c⁄° 
gch¨
 *
fûíame
,

60 
GEº‹
 **
îr‹
);

61 
gboﬁón
 
g_bookm¨k_fûe_lﬂd_‰om_d©a
 (
GBookm¨kFûe
 *
bookm¨k
,

62 c⁄° 
gch¨
 *
d©a
,

63 
gsize
 
Àngth
,

64 
GEº‹
 **
îr‹
);

65 
gboﬁón
 
g_bookm¨k_fûe_lﬂd_‰om_d©a_dús
 (
GBookm¨kFûe
 *
bookm¨k
,

66 c⁄° 
gch¨
 *
fûe
,

67 
gch¨
 **
fuŒ_∑th
,

68 
GEº‹
 **
îr‹
);

69 
gch¨
 * 
	$g_bookm¨k_fûe_to_d©a
 (
GBookm¨kFûe
 *
bookm¨k
,

70 
gsize
 *
Àngth
,

71 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

72 
gboﬁón
 
	`g_bookm¨k_fûe_to_fûe
 (
GBookm¨kFûe
 *
bookm¨k
,

73 c⁄° 
gch¨
 *
fûíame
,

74 
GEº‹
 **
îr‹
);

76 
	`g_bookm¨k_fûe_£t_tôÀ
 (
GBookm¨kFûe
 *
bookm¨k
,

77 c⁄° 
gch¨
 *
uri
,

78 c⁄° 
gch¨
 *
tôÀ
);

79 
gch¨
 * 
	$g_bookm¨k_fûe_gë_tôÀ
 (
GBookm¨kFûe
 *
bookm¨k
,

80 c⁄° 
gch¨
 *
uri
,

81 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

82 
	`g_bookm¨k_fûe_£t_des¸ùti⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

83 c⁄° 
gch¨
 *
uri
,

84 c⁄° 
gch¨
 *
des¸ùti⁄
);

85 
gch¨
 * 
	$g_bookm¨k_fûe_gë_des¸ùti⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

86 c⁄° 
gch¨
 *
uri
,

87 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

88 
	`g_bookm¨k_fûe_£t_mime_ty≥
 (
GBookm¨kFûe
 *
bookm¨k
,

89 c⁄° 
gch¨
 *
uri
,

90 c⁄° 
gch¨
 *
mime_ty≥
);

91 
gch¨
 * 
	$g_bookm¨k_fûe_gë_mime_ty≥
 (
GBookm¨kFûe
 *
bookm¨k
,

92 c⁄° 
gch¨
 *
uri
,

93 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

94 
	`g_bookm¨k_fûe_£t_groups
 (
GBookm¨kFûe
 *
bookm¨k
,

95 c⁄° 
gch¨
 *
uri
,

96 c⁄° 
gch¨
 **
groups
,

97 
gsize
 
Àngth
);

98 
	`g_bookm¨k_fûe_add_group
 (
GBookm¨kFûe
 *
bookm¨k
,

99 c⁄° 
gch¨
 *
uri
,

100 c⁄° 
gch¨
 *
group
);

101 
gboﬁón
 
	`g_bookm¨k_fûe_has_group
 (
GBookm¨kFûe
 *
bookm¨k
,

102 c⁄° 
gch¨
 *
uri
,

103 c⁄° 
gch¨
 *
group
,

104 
GEº‹
 **
îr‹
);

105 
gch¨
 ** 
	$g_bookm¨k_fûe_gë_groups
 (
GBookm¨kFûe
 *
bookm¨k
,

106 c⁄° 
gch¨
 *
uri
,

107 
gsize
 *
Àngth
,

108 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

109 
	`g_bookm¨k_fûe_add_≠∂iˇti⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

110 c⁄° 
gch¨
 *
uri
,

111 c⁄° 
gch¨
 *
«me
,

112 c⁄° 
gch¨
 *
exec
);

113 
gboﬁón
 
	`g_bookm¨k_fûe_has_≠∂iˇti⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

114 c⁄° 
gch¨
 *
uri
,

115 c⁄° 
gch¨
 *
«me
,

116 
GEº‹
 **
îr‹
);

117 
gch¨
 ** 
	$g_bookm¨k_fûe_gë_≠∂iˇti⁄s
 (
GBookm¨kFûe
 *
bookm¨k
,

118 c⁄° 
gch¨
 *
uri
,

119 
gsize
 *
Àngth
,

120 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

121 
gboﬁón
 
	`g_bookm¨k_fûe_£t_≠p_öfo
 (
GBookm¨kFûe
 *
bookm¨k
,

122 c⁄° 
gch¨
 *
uri
,

123 c⁄° 
gch¨
 *
«me
,

124 c⁄° 
gch¨
 *
exec
,

125 
göt
 
cou¡
,

126 
time_t
 
°amp
,

127 
GEº‹
 **
îr‹
);

128 
gboﬁón
 
	`g_bookm¨k_fûe_gë_≠p_öfo
 (
GBookm¨kFûe
 *
bookm¨k
,

129 c⁄° 
gch¨
 *
uri
,

130 c⁄° 
gch¨
 *
«me
,

131 
gch¨
 **
exec
,

132 
guöt
 *
cou¡
,

133 
time_t
 *
°amp
,

134 
GEº‹
 **
îr‹
);

135 
	`g_bookm¨k_fûe_£t_is_¥iv©e
 (
GBookm¨kFûe
 *
bookm¨k
,

136 c⁄° 
gch¨
 *
uri
,

137 
gboﬁón
 
is_¥iv©e
);

138 
gboﬁón
 
	`g_bookm¨k_fûe_gë_is_¥iv©e
 (
GBookm¨kFûe
 *
bookm¨k
,

139 c⁄° 
gch¨
 *
uri
,

140 
GEº‹
 **
îr‹
);

141 
	`g_bookm¨k_fûe_£t_ic⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

142 c⁄° 
gch¨
 *
uri
,

143 c⁄° 
gch¨
 *
hªf
,

144 c⁄° 
gch¨
 *
mime_ty≥
);

145 
gboﬁón
 
	`g_bookm¨k_fûe_gë_ic⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

146 c⁄° 
gch¨
 *
uri
,

147 
gch¨
 **
hªf
,

148 
gch¨
 **
mime_ty≥
,

149 
GEº‹
 **
îr‹
);

150 
	`g_bookm¨k_fûe_£t_added
 (
GBookm¨kFûe
 *
bookm¨k
,

151 c⁄° 
gch¨
 *
uri
,

152 
time_t
 
added
);

153 
time_t
 
	`g_bookm¨k_fûe_gë_added
 (
GBookm¨kFûe
 *
bookm¨k
,

154 c⁄° 
gch¨
 *
uri
,

155 
GEº‹
 **
îr‹
);

156 
	`g_bookm¨k_fûe_£t_modifõd
 (
GBookm¨kFûe
 *
bookm¨k
,

157 c⁄° 
gch¨
 *
uri
,

158 
time_t
 
modifõd
);

159 
time_t
 
	`g_bookm¨k_fûe_gë_modifõd
 (
GBookm¨kFûe
 *
bookm¨k
,

160 c⁄° 
gch¨
 *
uri
,

161 
GEº‹
 **
îr‹
);

162 
	`g_bookm¨k_fûe_£t_visôed
 (
GBookm¨kFûe
 *
bookm¨k
,

163 c⁄° 
gch¨
 *
uri
,

164 
time_t
 
visôed
);

165 
time_t
 
	`g_bookm¨k_fûe_gë_visôed
 (
GBookm¨kFûe
 *
bookm¨k
,

166 c⁄° 
gch¨
 *
uri
,

167 
GEº‹
 **
îr‹
);

168 
gboﬁón
 
	`g_bookm¨k_fûe_has_ôem
 (
GBookm¨kFûe
 *
bookm¨k
,

169 c⁄° 
gch¨
 *
uri
);

170 
göt
 
	`g_bookm¨k_fûe_gë_size
 (
GBookm¨kFûe
 *
bookm¨k
);

171 
gch¨
 ** 
	$g_bookm¨k_fûe_gë_uris
 (
GBookm¨kFûe
 *
bookm¨k
,

172 
gsize
 *
Àngth
Ë
G_GNUC_MALLOC
;

173 
gboﬁón
 
	`g_bookm¨k_fûe_ªmove_group
 (
GBookm¨kFûe
 *
bookm¨k
,

174 c⁄° 
gch¨
 *
uri
,

175 c⁄° 
gch¨
 *
group
,

176 
GEº‹
 **
îr‹
);

177 
gboﬁón
 
	`g_bookm¨k_fûe_ªmove_≠∂iˇti⁄
 (
GBookm¨kFûe
 *
bookm¨k
,

178 c⁄° 
gch¨
 *
uri
,

179 c⁄° 
gch¨
 *
«me
,

180 
GEº‹
 **
îr‹
);

181 
gboﬁón
 
	`g_bookm¨k_fûe_ªmove_ôem
 (
GBookm¨kFûe
 *
bookm¨k
,

182 c⁄° 
gch¨
 *
uri
,

183 
GEº‹
 **
îr‹
);

184 
gboﬁón
 
	`g_bookm¨k_fûe_move_ôem
 (
GBookm¨kFûe
 *
bookm¨k
,

185 c⁄° 
gch¨
 *
ﬁd_uri
,

186 c⁄° 
gch¨
 *
√w_uri
,

187 
GEº‹
 **
îr‹
);

189 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gcache.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_CACHE_H__


32 
	#__G_CACHE_H__


	)

34 
	~<glib/gli°.h
>

36 
G_BEGIN_DECLS


38 
_GCache
 
	tGCache
;

40 
	$gpoöãr
 (*
	tGCacheNewFunc
Ë(
	tgpoöãr
 
	tkey
);

41 
	$gpoöãr
 (*
	tGCacheDupFunc
Ë(
	tgpoöãr
 
	tvÆue
);

42 (*
	tGCacheDe°royFunc
Ë(
	tgpoöãr
 
	tvÆue
);

46 
GCache
* 
	`g_ˇche_√w
 (
GCacheNewFunc
 
vÆue_√w_func
,

47 
GCacheDe°royFunc
 
vÆue_de°roy_func
,

48 
GCacheDupFunc
 
key_dup_func
,

49 
GCacheDe°royFunc
 
key_de°roy_func
,

50 
GHashFunc
 
hash_key_func
,

51 
GHashFunc
 
hash_vÆue_func
,

52 
GEquÆFunc
 
key_equÆ_func
);

53 
	`g_ˇche_de°roy
 (
GCache
 *
ˇche
);

54 
gpoöãr
 
	`g_ˇche_ö£π
 (
GCache
 *
ˇche
,

55 
gpoöãr
 
key
);

56 
	`g_ˇche_ªmove
 (
GCache
 *
ˇche
,

57 
gc⁄°poöãr
 
vÆue
);

58 
	`g_ˇche_key_f‹óch
 (
GCache
 *
ˇche
,

59 
GHFunc
 
func
,

60 
gpoöãr
 
u£r_d©a
);

61 #i‚de‡
G_DISABLE_DEPRECATED


62 
	`g_ˇche_vÆue_f‹óch
 (
GCache
 *
ˇche
,

63 
GHFunc
 
func
,

64 
gpoöãr
 
u£r_d©a
);

67 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gchecksum.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_CHECKSUM_H__


26 
	#__G_CHECKSUM_H__


	)

28 
	~<glib/gty≥s.h
>

30 
G_BEGIN_DECLS


47 
	mG_CHECKSUM_MD5
,

48 
	mG_CHECKSUM_SHA1
,

49 
	mG_CHECKSUM_SHA256


50 } 
	tGChecksumTy≥
;

61 
_GChecksum
 
	tGChecksum
;

63 
gssize
 
g_checksum_ty≥_gë_Àngth
 (
GChecksumTy≥
 
checksum_ty≥
);

65 
GChecksum
 * 
g_checksum_√w
 (
GChecksumTy≥
 
checksum_ty≥
);

66 
g_checksum_ª£t
 (
GChecksum
 *
checksum
);

67 
GChecksum
 * 
g_checksum_c›y
 (c⁄° GChecksum *
checksum
);

68 
g_checksum_‰ì
 (
GChecksum
 *
checksum
);

69 
g_checksum_upd©e
 (
GChecksum
 *
checksum
,

70 c⁄° 
guch¨
 *
d©a
,

71 
gssize
 
Àngth
);

72 
G_CONST_RETURN
 
gch¨
 *
g_checksum_gë_°rög
 (
GChecksum
 *
checksum
);

73 
g_checksum_gë_dige°
 (
GChecksum
 *
checksum
,

74 
guöt8
 *
buf„r
,

75 
gsize
 *
dige°_Àn
);

77 
gch¨
 *
g_compuã_checksum_f‹_d©a
 (
GChecksumTy≥
 
checksum_ty≥
,

78 c⁄° 
guch¨
 *
d©a
,

79 
gsize
 
Àngth
);

80 
gch¨
 *
g_compuã_checksum_f‹_°rög
 (
GChecksumTy≥
 
checksum_ty≥
,

81 c⁄° 
gch¨
 *
°r
,

82 
gssize
 
Àngth
);

84 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gcompletion.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_COMPLETION_H__


32 
	#__G_COMPLETION_H__


	)

34 
	~<glib/gli°.h
>

36 
G_BEGIN_DECLS


38 
_GCom∂ëi⁄
 
	tGCom∂ëi⁄
;

40 
	ggch¨
* (*
	tGCom∂ëi⁄Func
Ë(
	tgpoöãr
);

45 
	$göt
 (*
	tGCom∂ëi⁄SåncmpFunc
Ë(c⁄° 
	tgch¨
 *
	ts1
,

46 c⁄° 
	tgch¨
 *
	ts2
,

47 
	tgsize
 
	tn
);

49 
	s_GCom∂ëi⁄


51 
GLi°
* 
ôems
;

52 
GCom∂ëi⁄Func
 
func
;

54 
gch¨
* 
¥efix
;

55 
GLi°
* 
ˇche
;

56 
GCom∂ëi⁄SåncmpFunc
 
°∫cmp_func
;

59 
GCom∂ëi⁄
* 
	`g_com∂ëi⁄_√w
 (
GCom∂ëi⁄Func
 
func
);

60 
	`g_com∂ëi⁄_add_ôems
 (
GCom∂ëi⁄
* 
cmp
,

61 
GLi°
* 
ôems
);

62 
	`g_com∂ëi⁄_ªmove_ôems
 (
GCom∂ëi⁄
* 
cmp
,

63 
GLi°
* 
ôems
);

64 
	`g_com∂ëi⁄_˛ór_ôems
 (
GCom∂ëi⁄
* 
cmp
);

65 
GLi°
* 
	`g_com∂ëi⁄_com∂ëe
 (
GCom∂ëi⁄
* 
cmp
,

66 c⁄° 
gch¨
* 
¥efix
,

67 
gch¨
** 
√w_¥efix
);

68 
GLi°
* 
	`g_com∂ëi⁄_com∂ëe_utf8
 (
GCom∂ëi⁄
 *
cmp
,

69 c⁄° 
gch¨
* 
¥efix
,

70 
gch¨
** 
√w_¥efix
);

71 
	`g_com∂ëi⁄_£t_com∑ª
 (
GCom∂ëi⁄
 *
cmp
,

72 
GCom∂ëi⁄SåncmpFunc
 
°∫cmp_func
);

73 
	`g_com∂ëi⁄_‰ì
 (
GCom∂ëi⁄
* 
cmp
);

75 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gconvert.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_CONVERT_H__


32 
	#__G_CONVERT_H__


	)

34 
	~<glib/gîr‹.h
>

36 
G_BEGIN_DECLS


40 
	mG_CONVERT_ERROR_NO_CONVERSION
,

41 
	mG_CONVERT_ERROR_ILLEGAL_SEQUENCE
,

42 
	mG_CONVERT_ERROR_FAILED
,

43 
	mG_CONVERT_ERROR_PARTIAL_INPUT
,

44 
	mG_CONVERT_ERROR_BAD_URI
,

45 
	mG_CONVERT_ERROR_NOT_ABSOLUTE_PATH


46 } 
	tGC⁄vîtEº‹
;

48 
	#G_CONVERT_ERROR
 
	`g_c⁄vît_îr‹_qu¨k
()

	)

49 
GQu¨k
 
g_c⁄vît_îr‹_qu¨k
 ();

53 
_GIC⁄v
 *
	tGIC⁄v
;

55 
GIC⁄v
 
g_ic⁄v_›í
 (c⁄° 
gch¨
 *
to_code£t
,

56 c⁄° 
gch¨
 *
‰om_code£t
);

57 
gsize
 
g_ic⁄v
 (
GIC⁄v
 
c⁄vîãr
,

58 
gch¨
 **
öbuf
,

59 
gsize
 *
öbyãs_À·
,

60 
gch¨
 **
outbuf
,

61 
gsize
 *
outbyãs_À·
);

62 
göt
 
g_ic⁄v_˛o£
 (
GIC⁄v
 
c⁄vîãr
);

65 
gch¨
* 
	$g_c⁄vît
 (c⁄° 
gch¨
 *
°r
,

66 
gssize
 
Àn
,

67 c⁄° 
gch¨
 *
to_code£t
,

68 c⁄° 
gch¨
 *
‰om_code£t
,

69 
gsize
 *
byãs_ªad
,

70 
gsize
 *
byãs_wrôãn
,

71 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

72 
gch¨
* 
	$g_c⁄vît_wôh_ic⁄v
 (c⁄° 
gch¨
 *
°r
,

73 
gssize
 
Àn
,

74 
GIC⁄v
 
c⁄vîãr
,

75 
gsize
 *
byãs_ªad
,

76 
gsize
 *
byãs_wrôãn
,

77 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

78 
gch¨
* 
	$g_c⁄vît_wôh_ÁŒback
 (c⁄° 
gch¨
 *
°r
,

79 
gssize
 
Àn
,

80 c⁄° 
gch¨
 *
to_code£t
,

81 c⁄° 
gch¨
 *
‰om_code£t
,

82 
gch¨
 *
ÁŒback
,

83 
gsize
 *
byãs_ªad
,

84 
gsize
 *
byãs_wrôãn
,

85 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

90 
gch¨
* 
	$g_loˇÀ_to_utf8
 (c⁄° 
gch¨
 *
›sys°rög
,

91 
gssize
 
Àn
,

92 
gsize
 *
byãs_ªad
,

93 
gsize
 *
byãs_wrôãn
,

94 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

95 
gch¨
* 
	$g_loˇÀ_‰om_utf8
 (c⁄° 
gch¨
 *
utf8°rög
,

96 
gssize
 
Àn
,

97 
gsize
 *
byãs_ªad
,

98 
gsize
 *
byãs_wrôãn
,

99 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

104 #ifde‡
G_OS_WIN32


105 
	#g_fûíame_to_utf8
 
g_fûíame_to_utf8_utf8


	)

106 
	#g_fûíame_‰om_utf8
 
g_fûíame_‰om_utf8_utf8


	)

107 
	#g_fûíame_‰om_uri
 
g_fûíame_‰om_uri_utf8


	)

108 
	#g_fûíame_to_uri
 
g_fûíame_to_uri_utf8


	)

111 
gch¨
* 
	$g_fûíame_to_utf8
 (c⁄° 
gch¨
 *
›sys°rög
,

112 
gssize
 
Àn
,

113 
gsize
 *
byãs_ªad
,

114 
gsize
 *
byãs_wrôãn
,

115 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

116 
gch¨
* 
	$g_fûíame_‰om_utf8
 (c⁄° 
gch¨
 *
utf8°rög
,

117 
gssize
 
Àn
,

118 
gsize
 *
byãs_ªad
,

119 
gsize
 *
byãs_wrôãn
,

120 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

122 
gch¨
 *
	$g_fûíame_‰om_uri
 (c⁄° 
gch¨
 *
uri
,

123 
gch¨
 **
ho°«me
,

124 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

126 
gch¨
 *
	$g_fûíame_to_uri
 (c⁄° 
gch¨
 *
fûíame
,

127 c⁄° 
gch¨
 *
ho°«me
,

128 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

129 
gch¨
 *
	$g_fûíame_di•œy_«me
 (c⁄° 
gch¨
 *
fûíame
Ë
G_GNUC_MALLOC
;

130 
gboﬁón
 
	`g_gë_fûíame_ch¨£ts
 (
G_CONST_RETURN
 
gch¨
 ***
ch¨£ts
);

132 
gch¨
 *
	$g_fûíame_di•œy_ba£«me
 (c⁄° 
gch¨
 *
fûíame
Ë
G_GNUC_MALLOC
;

134 
gch¨
 **
	$g_uri_li°_exåa˘_uris
 (c⁄° 
gch¨
 *
uri_li°
Ë
G_GNUC_MALLOC
;

136 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gdataset.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_DATASET_H__


32 
	#__G_DATASET_H__


	)

34 
	~<glib/gqu¨k.h
>

36 
G_BEGIN_DECLS


38 
_GD©a
 
	tGD©a
;

40 (*
	tGD©aF‹óchFunc
Ë(
	tGQu¨k
 
	tkey_id
,

41 
	tgpoöãr
 
	td©a
,

42 
	tgpoöãr
 
	tu£r_d©a
);

46 
	`g_d©Æi°_öô
 (
GD©a
 **
d©Æi°
);

47 
	`g_d©Æi°_˛ór
 (
GD©a
 **
d©Æi°
);

48 
gpoöãr
 
	`g_d©Æi°_id_gë_d©a
 (
GD©a
 **
d©Æi°
,

49 
GQu¨k
 
key_id
);

50 
	`g_d©Æi°_id_£t_d©a_fuŒ
 (
GD©a
 **
d©Æi°
,

51 
GQu¨k
 
key_id
,

52 
gpoöãr
 
d©a
,

53 
GDe°royNŸify
 
de°roy_func
);

54 
gpoöãr
 
	`g_d©Æi°_id_ªmove_no_nŸify
 (
GD©a
 **
d©Æi°
,

55 
GQu¨k
 
key_id
);

56 
	`g_d©Æi°_f‹óch
 (
GD©a
 **
d©Æi°
,

57 
GD©aF‹óchFunc
 
func
,

58 
gpoöãr
 
u£r_d©a
);

67 
	#G_DATALIST_FLAGS_MASK
 0x3

	)

69 
	`g_d©Æi°_£t_Êags
 (
GD©a
 **
d©Æi°
,

70 
guöt
 
Êags
);

71 
	`g_d©Æi°_un£t_Êags
 (
GD©a
 **
d©Æi°
,

72 
guöt
 
Êags
);

73 
guöt
 
	`g_d©Æi°_gë_Êags
 (
GD©a
 **
d©Æi°
);

75 
	#g_d©Æi°_id_£t_d©a
(
dl
, 
q
, 
d
) \

76 
	`g_d©Æi°_id_£t_d©a_fuŒ
 ((
dl
), (
q
), (
d
), 
NULL
)

	)

77 
	#g_d©Æi°_id_ªmove_d©a
(
dl
, 
q
) \

78 
	`g_d©Æi°_id_£t_d©a
 ((
dl
), (
q
), 
NULL
)

	)

79 
	#g_d©Æi°_gë_d©a
(
dl
, 
k
) \

80 (
	`g_d©Æi°_id_gë_d©a
 ((
dl
), 
	`g_qu¨k_åy_°rög
 (
k
)))

	)

81 
	#g_d©Æi°_£t_d©a_fuŒ
(
dl
, 
k
, 
d
, 
f
) \

82 
	`g_d©Æi°_id_£t_d©a_fuŒ
 ((
dl
), 
	`g_qu¨k_‰om_°rög
 (
k
), (
d
), (
f
))

	)

83 
	#g_d©Æi°_ªmove_no_nŸify
(
dl
, 
k
) \

84 
	`g_d©Æi°_id_ªmove_no_nŸify
 ((
dl
), 
	`g_qu¨k_åy_°rög
 (
k
))

	)

85 
	#g_d©Æi°_£t_d©a
(
dl
, 
k
, 
d
) \

86 
	`g_d©Æi°_£t_d©a_fuŒ
 ((
dl
), (
k
), (
d
), 
NULL
)

	)

87 
	#g_d©Æi°_ªmove_d©a
(
dl
, 
k
) \

88 
	`g_d©Æi°_id_£t_d©a
 ((
dl
), 
	`g_qu¨k_åy_°rög
 (
k
), 
NULL
)

	)

93 
	`g_d©a£t_de°roy
 (
gc⁄°poöãr
 
d©a£t_loˇti⁄
);

94 
gpoöãr
 
	`g_d©a£t_id_gë_d©a
 (
gc⁄°poöãr
 
d©a£t_loˇti⁄
,

95 
GQu¨k
 
key_id
);

96 
	`g_d©a£t_id_£t_d©a_fuŒ
 (
gc⁄°poöãr
 
d©a£t_loˇti⁄
,

97 
GQu¨k
 
key_id
,

98 
gpoöãr
 
d©a
,

99 
GDe°royNŸify
 
de°roy_func
);

100 
gpoöãr
 
	`g_d©a£t_id_ªmove_no_nŸify
 (
gc⁄°poöãr
 
d©a£t_loˇti⁄
,

101 
GQu¨k
 
key_id
);

102 
	`g_d©a£t_f‹óch
 (
gc⁄°poöãr
 
d©a£t_loˇti⁄
,

103 
GD©aF‹óchFunc
 
func
,

104 
gpoöãr
 
u£r_d©a
);

105 
	#g_d©a£t_id_£t_d©a
(
l
, 
k
, 
d
) \

106 
	`g_d©a£t_id_£t_d©a_fuŒ
 ((
l
), (
k
), (
d
), 
NULL
)

	)

107 
	#g_d©a£t_id_ªmove_d©a
(
l
, 
k
) \

108 
	`g_d©a£t_id_£t_d©a
 ((
l
), (
k
), 
NULL
)

	)

109 
	#g_d©a£t_gë_d©a
(
l
, 
k
) \

110 (
	`g_d©a£t_id_gë_d©a
 ((
l
), 
	`g_qu¨k_åy_°rög
 (
k
)))

	)

111 
	#g_d©a£t_£t_d©a_fuŒ
(
l
, 
k
, 
d
, 
f
) \

112 
	`g_d©a£t_id_£t_d©a_fuŒ
 ((
l
), 
	`g_qu¨k_‰om_°rög
 (
k
), (
d
), (
f
))

	)

113 
	#g_d©a£t_ªmove_no_nŸify
(
l
, 
k
) \

114 
	`g_d©a£t_id_ªmove_no_nŸify
 ((
l
), 
	`g_qu¨k_åy_°rög
 (
k
))

	)

115 
	#g_d©a£t_£t_d©a
(
l
, 
k
, 
d
) \

116 
	`g_d©a£t_£t_d©a_fuŒ
 ((
l
), (
k
), (
d
), 
NULL
)

	)

117 
	#g_d©a£t_ªmove_d©a
(
l
, 
k
) \

118 
	`g_d©a£t_id_£t_d©a
 ((
l
), 
	`g_qu¨k_åy_°rög
 (
k
), 
NULL
)

	)

120 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gdate.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_DATE_H__


32 
	#__G_DATE_H__


	)

34 
	~<time.h
>

36 
	~<glib/gty≥s.h
>

37 
	~<glib/gqu¨k.h
>

39 
G_BEGIN_DECLS


50 
göt32
 
	tGTime
;

51 
guöt16
 
	tGD©eYór
;

52 
guöt8
 
	tGD©eDay
;

53 
_GD©e
 
	tGD©e
;

58 
	mG_DATE_DAY
 = 0,

59 
	mG_DATE_MONTH
 = 1,

60 
	mG_DATE_YEAR
 = 2

61 } 
	tGD©eDMY
;

66 
	mG_DATE_BAD_WEEKDAY
 = 0,

67 
	mG_DATE_MONDAY
 = 1,

68 
	mG_DATE_TUESDAY
 = 2,

69 
	mG_DATE_WEDNESDAY
 = 3,

70 
	mG_DATE_THURSDAY
 = 4,

71 
	mG_DATE_FRIDAY
 = 5,

72 
	mG_DATE_SATURDAY
 = 6,

73 
	mG_DATE_SUNDAY
 = 7

74 } 
	tGD©eWìkday
;

77 
	mG_DATE_BAD_MONTH
 = 0,

78 
	mG_DATE_JANUARY
 = 1,

79 
	mG_DATE_FEBRUARY
 = 2,

80 
	mG_DATE_MARCH
 = 3,

81 
	mG_DATE_APRIL
 = 4,

82 
	mG_DATE_MAY
 = 5,

83 
	mG_DATE_JUNE
 = 6,

84 
	mG_DATE_JULY
 = 7,

85 
	mG_DATE_AUGUST
 = 8,

86 
	mG_DATE_SEPTEMBER
 = 9,

87 
	mG_DATE_OCTOBER
 = 10,

88 
	mG_DATE_NOVEMBER
 = 11,

89 
	mG_DATE_DECEMBER
 = 12

90 } 
	tGD©eM⁄th
;

92 
	#G_DATE_BAD_JULIAN
 0U

	)

93 
	#G_DATE_BAD_DAY
 0U

	)

94 
	#G_DATE_BAD_YEAR
 0U

	)

101 
	s_GD©e


103 
guöt
 
	mjulün_days
 : 32;

109 
guöt
 
	mjulün
 : 1;

110 
guöt
 
	mdmy
 : 1;

113 
guöt
 
	mday
 : 6;

114 
guöt
 
	mm⁄th
 : 4;

115 
guöt
 
	myór
 : 16;

122 
GD©e
* 
g_d©e_√w
 ();

123 
GD©e
* 
g_d©e_√w_dmy
 (
GD©eDay
 
day
,

124 
GD©eM⁄th
 
m⁄th
,

125 
GD©eYór
 
yór
);

126 
GD©e
* 
g_d©e_√w_julün
 (
guöt32
 
julün_day
);

127 
g_d©e_‰ì
 (
GD©e
 *
d©e
);

134 
gboﬁón
 
g_d©e_vÆid
 (c⁄° 
GD©e
 *
d©e
);

135 
gboﬁón
 
	$g_d©e_vÆid_day
 (
GD©eDay
 
day
Ë
G_GNUC_CONST
;

136 
gboﬁón
 
	$g_d©e_vÆid_m⁄th
 (
GD©eM⁄th
 
m⁄th
Ë
G_GNUC_CONST
;

137 
gboﬁón
 
	$g_d©e_vÆid_yór
 (
GD©eYór
 
yór
Ë
G_GNUC_CONST
;

138 
gboﬁón
 
	$g_d©e_vÆid_wìkday
 (
GD©eWìkday
 
wìkday
Ë
G_GNUC_CONST
;

139 
gboﬁón
 
	$g_d©e_vÆid_julün
 (
guöt32
 
julün_d©e
Ë
G_GNUC_CONST
;

140 
gboﬁón
 
	$g_d©e_vÆid_dmy
 (
GD©eDay
 
day
,

141 
GD©eM⁄th
 
m⁄th
,

142 
GD©eYór
 
yór
Ë
G_GNUC_CONST
;

144 
GD©eWìkday
 
	`g_d©e_gë_wìkday
 (c⁄° 
GD©e
 *
d©e
);

145 
GD©eM⁄th
 
	`g_d©e_gë_m⁄th
 (c⁄° 
GD©e
 *
d©e
);

146 
GD©eYór
 
	`g_d©e_gë_yór
 (c⁄° 
GD©e
 *
d©e
);

147 
GD©eDay
 
	`g_d©e_gë_day
 (c⁄° 
GD©e
 *
d©e
);

148 
guöt32
 
	`g_d©e_gë_julün
 (c⁄° 
GD©e
 *
d©e
);

149 
guöt
 
	`g_d©e_gë_day_of_yór
 (c⁄° 
GD©e
 *
d©e
);

156 
guöt
 
	`g_d©e_gë_m⁄day_wìk_of_yór
 (c⁄° 
GD©e
 *
d©e
);

157 
guöt
 
	`g_d©e_gë_sunday_wìk_of_yór
 (c⁄° 
GD©e
 *
d©e
);

158 
guöt
 
	`g_d©e_gë_iso8601_wìk_of_yór
 (c⁄° 
GD©e
 *
d©e
);

164 
	`g_d©e_˛ór
 (
GD©e
 *
d©e
,

165 
guöt
 
n_d©es
);

171 
	`g_d©e_£t_∑r£
 (
GD©e
 *
d©e
,

172 c⁄° 
gch¨
 *
°r
);

173 
	`g_d©e_£t_time_t
 (
GD©e
 *
d©e
,

174 
time_t
 
timë
);

175 
	`g_d©e_£t_time_vÆ
 (
GD©e
 *
d©e
,

176 
GTimeVÆ
 *
timevÆ
);

177 #i‚de‡
G_DISABLE_DEPRECATED


178 
	`g_d©e_£t_time
 (
GD©e
 *
d©e
,

179 
GTime
 
time_
);

181 
	`g_d©e_£t_m⁄th
 (
GD©e
 *
d©e
,

182 
GD©eM⁄th
 
m⁄th
);

183 
	`g_d©e_£t_day
 (
GD©e
 *
d©e
,

184 
GD©eDay
 
day
);

185 
	`g_d©e_£t_yór
 (
GD©e
 *
d©e
,

186 
GD©eYór
 
yór
);

187 
	`g_d©e_£t_dmy
 (
GD©e
 *
d©e
,

188 
GD©eDay
 
day
,

189 
GD©eM⁄th
 
m⁄th
,

190 
GD©eYór
 
y
);

191 
	`g_d©e_£t_julün
 (
GD©e
 *
d©e
,

192 
guöt32
 
julün_d©e
);

193 
gboﬁón
 
	`g_d©e_is_fú°_of_m⁄th
 (c⁄° 
GD©e
 *
d©e
);

194 
gboﬁón
 
	`g_d©e_is_œ°_of_m⁄th
 (c⁄° 
GD©e
 *
d©e
);

197 
	`g_d©e_add_days
 (
GD©e
 *
d©e
,

198 
guöt
 
n_days
);

199 
	`g_d©e_subåa˘_days
 (
GD©e
 *
d©e
,

200 
guöt
 
n_days
);

203 
	`g_d©e_add_m⁄ths
 (
GD©e
 *
d©e
,

204 
guöt
 
n_m⁄ths
);

205 
	`g_d©e_subåa˘_m⁄ths
 (
GD©e
 *
d©e
,

206 
guöt
 
n_m⁄ths
);

209 
	`g_d©e_add_yórs
 (
GD©e
 *
d©e
,

210 
guöt
 
n_yórs
);

211 
	`g_d©e_subåa˘_yórs
 (
GD©e
 *
d©e
,

212 
guöt
 
n_yórs
);

213 
gboﬁón
 
	$g_d©e_is_À≠_yór
 (
GD©eYór
 
yór
Ë
G_GNUC_CONST
;

214 
guöt8
 
	$g_d©e_gë_days_ö_m⁄th
 (
GD©eM⁄th
 
m⁄th
,

215 
GD©eYór
 
yór
Ë
G_GNUC_CONST
;

216 
guöt8
 
	$g_d©e_gë_m⁄day_wìks_ö_yór
 (
GD©eYór
 
yór
Ë
G_GNUC_CONST
;

217 
guöt8
 
	$g_d©e_gë_sunday_wìks_ö_yór
 (
GD©eYór
 
yór
Ë
G_GNUC_CONST
;

221 
göt
 
	`g_d©e_days_bëwìn
 (c⁄° 
GD©e
 *
d©e1
,

222 c⁄° 
GD©e
 *
d©e2
);

225 
göt
 
	`g_d©e_com∑ª
 (c⁄° 
GD©e
 *
lhs
,

226 c⁄° 
GD©e
 *
rhs
);

227 
	`g_d©e_to_°ru˘_tm
 (c⁄° 
GD©e
 *
d©e
,

228 
tm
 *tm);

230 
	`g_d©e_˛amp
 (
GD©e
 *
d©e
,

231 c⁄° 
GD©e
 *
mö_d©e
,

232 c⁄° 
GD©e
 *
max_d©e
);

235 
	`g_d©e_‹dî
 (
GD©e
 *
d©e1
, GD©ê*
d©e2
);

240 
gsize
 
	`g_d©e_°r·ime
 (
gch¨
 *
s
,

241 
gsize
 
¶í
,

242 c⁄° 
gch¨
 *
f‹m©
,

243 c⁄° 
GD©e
 *
d©e
);

245 #i‚de‡
G_DISABLE_DEPRECATED


247 
	#g_d©e_wìkday
 
g_d©e_gë_wìkday


	)

248 
	#g_d©e_m⁄th
 
g_d©e_gë_m⁄th


	)

249 
	#g_d©e_yór
 
g_d©e_gë_yór


	)

250 
	#g_d©e_day
 
g_d©e_gë_day


	)

251 
	#g_d©e_julün
 
g_d©e_gë_julün


	)

252 
	#g_d©e_day_of_yór
 
g_d©e_gë_day_of_yór


	)

253 
	#g_d©e_m⁄day_wìk_of_yór
 
g_d©e_gë_m⁄day_wìk_of_yór


	)

254 
	#g_d©e_sunday_wìk_of_yór
 
g_d©e_gë_sunday_wìk_of_yór


	)

255 
	#g_d©e_days_ö_m⁄th
 
g_d©e_gë_days_ö_m⁄th


	)

256 
	#g_d©e_m⁄day_wìks_ö_yór
 
g_d©e_gë_m⁄day_wìks_ö_yór


	)

257 
	#g_d©e_sunday_wìks_ö_yór
 
g_d©e_gë_sunday_wìks_ö_yór


	)

261 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gdir.h

24 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

28 #i‚de‡
__G_DIR_H__


29 
	#__G_DIR_H__


	)

31 
	~<glib/gîr‹.h
>

33 
G_BEGIN_DECLS


35 
_GDú
 
	tGDú
;

37 #ifde‡
G_OS_WIN32


39 
	#g_dú_›í
 
g_dú_›í_utf8


	)

40 
	#g_dú_ªad_«me
 
g_dú_ªad_«me_utf8


	)

43 
GDú
 * 
g_dú_›í
 (c⁄° 
gch¨
 *
∑th
,

44 
guöt
 
Êags
,

45 
GEº‹
 **
îr‹
);

46 
G_CONST_RETURN
 
gch¨
 *
g_dú_ªad_«me
 (
GDú
 *
dú
);

47 
g_dú_ªwöd
 (
GDú
 *
dú
);

48 
g_dú_˛o£
 (
GDú
 *
dú
);

50 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gerror.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_ERROR_H__


26 
	#__G_ERROR_H__


	)

28 
	~<glib/gqu¨k.h
>

30 
G_BEGIN_DECLS


32 
_GEº‹
 
	tGEº‹
;

34 
	s_GEº‹


36 
GQu¨k
 
	mdomaö
;

37 
göt
 
	mcode
;

38 
gch¨
 *
	mmesßge
;

41 
GEº‹
* 
	$g_îr‹_√w
 (
GQu¨k
 
domaö
,

42 
göt
 
code
,

43 c⁄° 
gch¨
 *
f‹m©
,

44 ...Ë
	`G_GNUC_PRINTF
 (3, 4);

46 
GEº‹
* 
	`g_îr‹_√w_lôîÆ
 (
GQu¨k
 
domaö
,

47 
göt
 
code
,

48 c⁄° 
gch¨
 *
mesßge
);

50 
	`g_îr‹_‰ì
 (
GEº‹
 *
îr‹
);

51 
GEº‹
* 
	`g_îr‹_c›y
 (c⁄° GEº‹ *
îr‹
);

53 
gboﬁón
 
	`g_îr‹_m©ches
 (c⁄° 
GEº‹
 *
îr‹
,

54 
GQu¨k
 
domaö
,

55 
göt
 
code
);

60 
	$g_£t_îr‹
 (
GEº‹
 **
îr
,

61 
GQu¨k
 
domaö
,

62 
göt
 
code
,

63 c⁄° 
gch¨
 *
f‹m©
,

64 ...Ë
	`G_GNUC_PRINTF
 (4, 5);

66 
	`g_£t_îr‹_lôîÆ
 (
GEº‹
 **
îr
,

67 
GQu¨k
 
domaö
,

68 
göt
 
code
,

69 c⁄° 
gch¨
 *
mesßge
);

73 
	`g_¥›ag©e_îr‹
 (
GEº‹
 **
de°
,

74 
GEº‹
 *
§c
);

77 
	`g_˛ór_îr‹
 (
GEº‹
 **
îr
);

80 
	$g_¥efix_îr‹
 (
GEº‹
 **
îr
,

81 c⁄° 
gch¨
 *
f‹m©
,

82 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

85 
	$g_¥›ag©e_¥efixed_îr‹
 (
GEº‹
 **
de°
,

86 
GEº‹
 *
§c
,

87 c⁄° 
gch¨
 *
f‹m©
,

88 ...Ë
	`G_GNUC_PRINTF
 (3, 4);

90 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gfileutils.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_FILEUTILS_H__


26 
	#__G_FILEUTILS_H__


	)

28 
	~<glib/gîr‹.h
>

30 
	gG_BEGIN_DECLS


32 
	#G_FILE_ERROR
 
	`g_fûe_îr‹_qu¨k
 ()

	)

36 
	mG_FILE_ERROR_EXIST
,

37 
	mG_FILE_ERROR_ISDIR
,

38 
	mG_FILE_ERROR_ACCES
,

39 
	mG_FILE_ERROR_NAMETOOLONG
,

40 
	mG_FILE_ERROR_NOENT
,

41 
	mG_FILE_ERROR_NOTDIR
,

42 
	mG_FILE_ERROR_NXIO
,

43 
	mG_FILE_ERROR_NODEV
,

44 
	mG_FILE_ERROR_ROFS
,

45 
	mG_FILE_ERROR_TXTBSY
,

46 
	mG_FILE_ERROR_FAULT
,

47 
	mG_FILE_ERROR_LOOP
,

48 
	mG_FILE_ERROR_NOSPC
,

49 
	mG_FILE_ERROR_NOMEM
,

50 
	mG_FILE_ERROR_MFILE
,

51 
	mG_FILE_ERROR_NFILE
,

52 
	mG_FILE_ERROR_BADF
,

53 
	mG_FILE_ERROR_INVAL
,

54 
	mG_FILE_ERROR_PIPE
,

55 
	mG_FILE_ERROR_AGAIN
,

56 
	mG_FILE_ERROR_INTR
,

57 
	mG_FILE_ERROR_IO
,

58 
	mG_FILE_ERROR_PERM
,

59 
	mG_FILE_ERROR_NOSYS
,

60 
	mG_FILE_ERROR_FAILED


61 } 
	tGFûeEº‹
;

69 
	mG_FILE_TEST_IS_REGULAR
 = 1 << 0,

70 
	mG_FILE_TEST_IS_SYMLINK
 = 1 << 1,

71 
	mG_FILE_TEST_IS_DIR
 = 1 << 2,

72 
	mG_FILE_TEST_IS_EXECUTABLE
 = 1 << 3,

73 
	mG_FILE_TEST_EXISTS
 = 1 << 4

74 } 
	tGFûeTe°
;

76 
GQu¨k
 
g_fûe_îr‹_qu¨k
 ();

78 
GFûeEº‹
 
g_fûe_îr‹_‰om_î∫o
 (
göt
 
îr_no
);

80 #ifde‡
G_OS_WIN32


81 
	#g_fûe_ã°
 
g_fûe_ã°_utf8


	)

82 
	#g_fûe_gë_c⁄ã¡s
 
g_fûe_gë_c⁄ã¡s_utf8


	)

83 
	#g_mk°emp
 
g_mk°emp_utf8


	)

84 
	#g_fûe_›í_tmp
 
g_fûe_›í_tmp_utf8


	)

87 
gboﬁón
 
g_fûe_ã°
 (c⁄° 
gch¨
 *
fûíame
,

88 
GFûeTe°
 
ã°
);

89 
gboﬁón
 
g_fûe_gë_c⁄ã¡s
 (c⁄° 
gch¨
 *
fûíame
,

90 
gch¨
 **
c⁄ã¡s
,

91 
gsize
 *
Àngth
,

92 
GEº‹
 **
îr‹
);

93 
gboﬁón
 
g_fûe_£t_c⁄ã¡s
 (c⁄° 
gch¨
 *
fûíame
,

94 c⁄° 
gch¨
 *
c⁄ã¡s
,

95 
gssize
 
Àngth
,

96 
GEº‹
 **
îr‹
);

97 
gch¨
 *
g_fûe_ªad_lök
 (c⁄° gch¨ *
fûíame
,

98 
GEº‹
 **
îr‹
);

101 
göt
 
g_mk°emp
 (
gch¨
 *
tm∂
);

104 
göt
 
g_fûe_›í_tmp
 (c⁄° 
gch¨
 *
tm∂
,

105 
gch¨
 **
«me_u£d
,

106 
GEº‹
 **
îr‹
);

108 *
g_f‹m©_size_f‹_di•œy
 (
goff£t
 
size
);

110 
gch¨
 *
	$g_buûd_∑th
 (c⁄° 
gch¨
 *
£∑øt‹
,

111 c⁄° 
gch¨
 *
fú°_ñemít
,

112 ...Ë
G_GNUC_MALLOC
 
G_GNUC_NULL_TERMINATED
;

113 
gch¨
 *
	$g_buûd_∑thv
 (c⁄° 
gch¨
 *
£∑øt‹
,

114 
gch¨
 **
¨gs
Ë
G_GNUC_MALLOC
;

116 
gch¨
 *
	$g_buûd_fûíame
 (c⁄° 
gch¨
 *
fú°_ñemít
,

117 ...Ë
G_GNUC_MALLOC
 
G_GNUC_NULL_TERMINATED
;

118 
gch¨
 *
	$g_buûd_fûíamev
 (
gch¨
 **
¨gs
Ë
G_GNUC_MALLOC
;

120 
	`g_mkdú_wôh_∑ª¡s
 (c⁄° 
gch¨
 *
∑th«me
,

121 
mode
);

123 
G_END_DECLS


	@/usr/include/glib-2.0/glib/ghash.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_HASH_H__


32 
	#__G_HASH_H__


	)

34 
	~<glib/gty≥s.h
>

35 
	~<glib/gli°.h
>

37 
G_BEGIN_DECLS


39 
_GHashTabÀ
 
	tGHashTabÀ
;

41 
	$gboﬁón
 (*
	tGHRFunc
Ë(
	tgpoöãr
 
	tkey
,

42 
	tgpoöãr
 
	tvÆue
,

43 
	tgpoöãr
 
	tu£r_d©a
);

45 
_GHashTabÀIãr
 
	tGHashTabÀIãr
;

47 
	s_GHashTabÀIãr


50 
gpoöãr
 
dummy1
;

51 
gpoöãr
 
dummy2
;

52 
gpoöãr
 
dummy3
;

53 
dummy4
;

54 
gboﬁón
 
dummy5
;

55 
gpoöãr
 
dummy6
;

60 
GHashTabÀ
* 
	`g_hash_èbÀ_√w
 (
GHashFunc
 
hash_func
,

61 
GEquÆFunc
 
key_equÆ_func
);

62 
GHashTabÀ
* 
	`g_hash_èbÀ_√w_fuŒ
 (
GHashFunc
 
hash_func
,

63 
GEquÆFunc
 
key_equÆ_func
,

64 
GDe°royNŸify
 
key_de°roy_func
,

65 
GDe°royNŸify
 
vÆue_de°roy_func
);

66 
	`g_hash_èbÀ_de°roy
 (
GHashTabÀ
 *
hash_èbÀ
);

67 
	`g_hash_èbÀ_ö£π
 (
GHashTabÀ
 *
hash_èbÀ
,

68 
gpoöãr
 
key
,

69 
gpoöãr
 
vÆue
);

70 
	`g_hash_èbÀ_ª∂a˚
 (
GHashTabÀ
 *
hash_èbÀ
,

71 
gpoöãr
 
key
,

72 
gpoöãr
 
vÆue
);

73 
gboﬁón
 
	`g_hash_èbÀ_ªmove
 (
GHashTabÀ
 *
hash_èbÀ
,

74 
gc⁄°poöãr
 
key
);

75 
	`g_hash_èbÀ_ªmove_Æl
 (
GHashTabÀ
 *
hash_èbÀ
);

76 
gboﬁón
 
	`g_hash_èbÀ_°ól
 (
GHashTabÀ
 *
hash_èbÀ
,

77 
gc⁄°poöãr
 
key
);

78 
	`g_hash_èbÀ_°ól_Æl
 (
GHashTabÀ
 *
hash_èbÀ
);

79 
gpoöãr
 
	`g_hash_èbÀ_lookup
 (
GHashTabÀ
 *
hash_èbÀ
,

80 
gc⁄°poöãr
 
key
);

81 
gboﬁón
 
	`g_hash_èbÀ_lookup_exãnded
 (
GHashTabÀ
 *
hash_èbÀ
,

82 
gc⁄°poöãr
 
lookup_key
,

83 
gpoöãr
 *
‹ig_key
,

84 
gpoöãr
 *
vÆue
);

85 
	`g_hash_èbÀ_f‹óch
 (
GHashTabÀ
 *
hash_èbÀ
,

86 
GHFunc
 
func
,

87 
gpoöãr
 
u£r_d©a
);

88 
gpoöãr
 
	`g_hash_èbÀ_föd
 (
GHashTabÀ
 *
hash_èbÀ
,

89 
GHRFunc
 
¥ediˇã
,

90 
gpoöãr
 
u£r_d©a
);

91 
guöt
 
	`g_hash_èbÀ_f‹óch_ªmove
 (
GHashTabÀ
 *
hash_èbÀ
,

92 
GHRFunc
 
func
,

93 
gpoöãr
 
u£r_d©a
);

94 
guöt
 
	`g_hash_èbÀ_f‹óch_°ól
 (
GHashTabÀ
 *
hash_èbÀ
,

95 
GHRFunc
 
func
,

96 
gpoöãr
 
u£r_d©a
);

97 
guöt
 
	`g_hash_èbÀ_size
 (
GHashTabÀ
 *
hash_èbÀ
);

98 
GLi°
 * 
	`g_hash_èbÀ_gë_keys
 (
GHashTabÀ
 *
hash_èbÀ
);

99 
GLi°
 * 
	`g_hash_èbÀ_gë_vÆues
 (
GHashTabÀ
 *
hash_èbÀ
);

101 
	`g_hash_èbÀ_ôî_öô
 (
GHashTabÀIãr
 *
ôî
,

102 
GHashTabÀ
 *
hash_èbÀ
);

103 
gboﬁón
 
	`g_hash_èbÀ_ôî_√xt
 (
GHashTabÀIãr
 *
ôî
,

104 
gpoöãr
 *
key
,

105 
gpoöãr
 *
vÆue
);

106 
GHashTabÀ
* 
	`g_hash_èbÀ_ôî_gë_hash_èbÀ
 (
GHashTabÀIãr
 *
ôî
);

107 
	`g_hash_èbÀ_ôî_ªmove
 (
GHashTabÀIãr
 *
ôî
);

108 
	`g_hash_èbÀ_ôî_°ól
 (
GHashTabÀIãr
 *
ôî
);

111 
GHashTabÀ
* 
	`g_hash_èbÀ_ªf
 (GHashTabÀ *
hash_èbÀ
);

112 
	`g_hash_èbÀ_uƒef
 (
GHashTabÀ
 *
hash_èbÀ
);

114 #i‚de‡
G_DISABLE_DEPRECATED


118 
	#g_hash_èbÀ_‰ìze
(
hash_èbÀ
Ë(()0)

	)

119 
	#g_hash_èbÀ_thaw
(
hash_èbÀ
Ë(()0)

	)

125 
gboﬁón
 
	`g_°r_equÆ
 (
gc⁄°poöãr
 
v1
,

126 
gc⁄°poöãr
 
v2
);

127 
guöt
 
	`g_°r_hash
 (
gc⁄°poöãr
 
v
);

129 
gboﬁón
 
	`g_öt_equÆ
 (
gc⁄°poöãr
 
v1
,

130 
gc⁄°poöãr
 
v2
);

131 
guöt
 
	`g_öt_hash
 (
gc⁄°poöãr
 
v
);

139 
guöt
 
	$g_dúe˘_hash
 (
gc⁄°poöãr
 
v
Ë
G_GNUC_CONST
;

140 
gboﬁón
 
	$g_dúe˘_equÆ
 (
gc⁄°poöãr
 
v1
,

141 
gc⁄°poöãr
 
v2
Ë
G_GNUC_CONST
;

143 
G_END_DECLS


	@/usr/include/glib-2.0/glib/ghook.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_HOOK_H__


32 
	#__G_HOOK_H__


	)

34 
	~<glib/gmem.h
>

36 
G_BEGIN_DECLS


40 
_GHook
 
	tGHook
;

41 
_GHookLi°
 
	tGHookLi°
;

43 
	$göt
 (*
	tGHookCom∑ªFunc
Ë(
	tGHook
 *
	t√w_hook
,

44 
	tGHook
 *
	tsiblög
);

45 
	$gboﬁón
 (*
	tGHookFödFunc
Ë(
	tGHook
 *
	thook
,

46 
	tgpoöãr
 
	td©a
);

47 (*
	tGHookM¨shÆÀr
Ë(
	tGHook
 *
	thook
,

48 
	tgpoöãr
 
	tm¨shÆ_d©a
);

49 
	$gboﬁón
 (*
	tGHookCheckM¨shÆÀr
Ë(
	tGHook
 *
	thook
,

50 
	tgpoöãr
 
	tm¨shÆ_d©a
);

51 (*
	tGHookFunc
Ë(
	tgpoöãr
 
	td©a
);

52 
	$gboﬁón
 (*
	tGHookCheckFunc
Ë(
	tgpoöãr
 
	td©a
);

53 (*
	tGHookFöÆizeFunc
Ë(
	tGHookLi°
 *
	thook_li°
,

54 
	tGHook
 *
	thook
);

57 
G_HOOK_FLAG_ACTIVE
 = 1 << 0,

58 
G_HOOK_FLAG_IN_CALL
 = 1 << 1,

59 
G_HOOK_FLAG_MASK
 = 0x0f

60 } 
	tGHookFœgMask
;

61 
	#G_HOOK_FLAG_USER_SHIFT
 (4)

	)

65 
	s_GHookLi°


67 
gul⁄g
 
£q_id
;

68 
guöt
 
hook_size
 : 16;

69 
guöt
 
is_£tup
 : 1;

70 
GHook
 *
hooks
;

71 
gpoöãr
 
dummy3
;

72 
GHookFöÆizeFunc
 
föÆize_hook
;

73 
gpoöãr
 
dummy
[2];

75 
	s_GHook


77 
gpoöãr
 
d©a
;

78 
GHook
 *
√xt
;

79 
GHook
 *
¥ev
;

80 
guöt
 
ªf_cou¡
;

81 
gul⁄g
 
hook_id
;

82 
guöt
 
Êags
;

83 
gpoöãr
 
func
;

84 
GDe°royNŸify
 
de°roy
;

89 
	#G_HOOK
(
hook
Ë((
GHook
*Ë(hook))

	)

90 
	#G_HOOK_FLAGS
(
hook
Ë(
	`G_HOOK
 (hook)->
Êags
)

	)

91 
	#G_HOOK_ACTIVE
(
hook
Ë((
	`G_HOOK_FLAGS
 (hook) & \

92 
G_HOOK_FLAG_ACTIVE
Ë!0)

	)

93 
	#G_HOOK_IN_CALL
(
hook
Ë((
	`G_HOOK_FLAGS
 (hook) & \

94 
G_HOOK_FLAG_IN_CALL
Ë!0)

	)

95 
	#G_HOOK_IS_VALID
(
hook
Ë(
	`G_HOOK
 (hook)->
hook_id
 != 0 && \

96 (
	`G_HOOK_FLAGS
 (
hook
) & \

97 
G_HOOK_FLAG_ACTIVE
))

	)

98 
	#G_HOOK_IS_UNLINKED
(
hook
Ë(
	`G_HOOK
 (hook)->
√xt
 =
NULL
 && \

99 
	`G_HOOK
 (
hook
)->
¥ev
 =
NULL
 && \

100 
	`G_HOOK
 (
hook
)->
hook_id
 == 0 && \

101 
	`G_HOOK
 (
hook
)->
ªf_cou¡
 =0)

	)

106 
	`g_hook_li°_öô
 (
GHookLi°
 *
hook_li°
,

107 
guöt
 
hook_size
);

108 
	`g_hook_li°_˛ór
 (
GHookLi°
 *
hook_li°
);

109 
GHook
* 
	`g_hook_Æloc
 (
GHookLi°
 *
hook_li°
);

110 
	`g_hook_‰ì
 (
GHookLi°
 *
hook_li°
,

111 
GHook
 *
hook
);

112 
GHook
 * 
	`g_hook_ªf
 (
GHookLi°
 *
hook_li°
,

113 
GHook
 *
hook
);

114 
	`g_hook_uƒef
 (
GHookLi°
 *
hook_li°
,

115 
GHook
 *
hook
);

116 
gboﬁón
 
	`g_hook_de°roy
 (
GHookLi°
 *
hook_li°
,

117 
gul⁄g
 
hook_id
);

118 
	`g_hook_de°roy_lök
 (
GHookLi°
 *
hook_li°
,

119 
GHook
 *
hook
);

120 
	`g_hook_¥ïíd
 (
GHookLi°
 *
hook_li°
,

121 
GHook
 *
hook
);

122 
	`g_hook_ö£π_bef‹e
 (
GHookLi°
 *
hook_li°
,

123 
GHook
 *
siblög
,

124 
GHook
 *
hook
);

125 
	`g_hook_ö£π_s‹ãd
 (
GHookLi°
 *
hook_li°
,

126 
GHook
 *
hook
,

127 
GHookCom∑ªFunc
 
func
);

128 
GHook
* 
	`g_hook_gë
 (
GHookLi°
 *
hook_li°
,

129 
gul⁄g
 
hook_id
);

130 
GHook
* 
	`g_hook_föd
 (
GHookLi°
 *
hook_li°
,

131 
gboﬁón
 
√ed_vÆids
,

132 
GHookFödFunc
 
func
,

133 
gpoöãr
 
d©a
);

134 
GHook
* 
	`g_hook_föd_d©a
 (
GHookLi°
 *
hook_li°
,

135 
gboﬁón
 
√ed_vÆids
,

136 
gpoöãr
 
d©a
);

137 
GHook
* 
	`g_hook_föd_func
 (
GHookLi°
 *
hook_li°
,

138 
gboﬁón
 
√ed_vÆids
,

139 
gpoöãr
 
func
);

140 
GHook
* 
	`g_hook_föd_func_d©a
 (
GHookLi°
 *
hook_li°
,

141 
gboﬁón
 
√ed_vÆids
,

142 
gpoöãr
 
func
,

143 
gpoöãr
 
d©a
);

145 
GHook
* 
	`g_hook_fú°_vÆid
 (
GHookLi°
 *
hook_li°
,

146 
gboﬁón
 
may_be_ö_ˇŒ
);

150 
GHook
* 
	`g_hook_√xt_vÆid
 (
GHookLi°
 *
hook_li°
,

151 
GHook
 *
hook
,

152 
gboﬁón
 
may_be_ö_ˇŒ
);

154 
göt
 
	`g_hook_com∑ª_ids
 (
GHook
 *
√w_hook
,

155 
GHook
 *
siblög
);

157 
	#g_hook_≠≥nd
–
hook_li°
, 
hook
 ) \

158 
	`g_hook_ö£π_bef‹e
 ((
hook_li°
), 
NULL
, (
hook
))

	)

161 
	`g_hook_li°_övoke
 (
GHookLi°
 *
hook_li°
,

162 
gboﬁón
 
may_ªcur£
);

166 
	`g_hook_li°_övoke_check
 (
GHookLi°
 *
hook_li°
,

167 
gboﬁón
 
may_ªcur£
);

170 
	`g_hook_li°_m¨shÆ
 (
GHookLi°
 *
hook_li°
,

171 
gboﬁón
 
may_ªcur£
,

172 
GHookM¨shÆÀr
 
m¨shÆÀr
,

173 
gpoöãr
 
m¨shÆ_d©a
);

174 
	`g_hook_li°_m¨shÆ_check
 (
GHookLi°
 *
hook_li°
,

175 
gboﬁón
 
may_ªcur£
,

176 
GHookCheckM¨shÆÀr
 
m¨shÆÀr
,

177 
gpoöãr
 
m¨shÆ_d©a
);

179 
G_END_DECLS


	@/usr/include/glib-2.0/glib/giochannel.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_IOCHANNEL_H__


32 
	#__G_IOCHANNEL_H__


	)

34 
	~<glib/gc⁄vît.h
>

35 
	~<glib/gmaö.h
>

36 
	~<glib/g°rög.h
>

38 
G_BEGIN_DECLS


43 
_GIOCh™√l
 
	tGIOCh™√l
;

44 
_GIOFuncs
 
	tGIOFuncs
;

48 
	mG_IO_ERROR_NONE
,

49 
	mG_IO_ERROR_AGAIN
,

50 
	mG_IO_ERROR_INVAL
,

51 
	mG_IO_ERROR_UNKNOWN


52 } 
	tGIOEº‹
;

54 
	#G_IO_CHANNEL_ERROR
 
	`g_io_ch™√l_îr‹_qu¨k
()

	)

59 
	mG_IO_CHANNEL_ERROR_FBIG
,

60 
	mG_IO_CHANNEL_ERROR_INVAL
,

61 
	mG_IO_CHANNEL_ERROR_IO
,

62 
	mG_IO_CHANNEL_ERROR_ISDIR
,

63 
	mG_IO_CHANNEL_ERROR_NOSPC
,

64 
	mG_IO_CHANNEL_ERROR_NXIO
,

65 
	mG_IO_CHANNEL_ERROR_OVERFLOW
,

66 
	mG_IO_CHANNEL_ERROR_PIPE
,

68 
	mG_IO_CHANNEL_ERROR_FAILED


69 } 
	tGIOCh™√lEº‹
;

73 
	mG_IO_STATUS_ERROR
,

74 
	mG_IO_STATUS_NORMAL
,

75 
	mG_IO_STATUS_EOF
,

76 
	mG_IO_STATUS_AGAIN


77 } 
	tGIOSètus
;

81 
	mG_SEEK_CUR
,

82 
	mG_SEEK_SET
,

83 
	mG_SEEK_END


84 } 
	tGSìkTy≥
;

88 
G_IO_IN
 
	mGLIB_SYSDEF_POLLIN
,

89 
G_IO_OUT
 
	mGLIB_SYSDEF_POLLOUT
,

90 
G_IO_PRI
 
	mGLIB_SYSDEF_POLLPRI
,

91 
G_IO_ERR
 
	mGLIB_SYSDEF_POLLERR
,

92 
G_IO_HUP
 
	mGLIB_SYSDEF_POLLHUP
,

93 
G_IO_NVAL
 
	mGLIB_SYSDEF_POLLNVAL


94 } 
	tGIOC⁄dôi⁄
;

98 
	mG_IO_FLAG_APPEND
 = 1 << 0,

99 
	mG_IO_FLAG_NONBLOCK
 = 1 << 1,

100 
	mG_IO_FLAG_IS_READABLE
 = 1 << 2,

101 
	mG_IO_FLAG_IS_WRITEABLE
 = 1 << 3,

102 
	mG_IO_FLAG_IS_SEEKABLE
 = 1 << 4,

103 
	mG_IO_FLAG_MASK
 = (1 << 5) - 1,

104 
	mG_IO_FLAG_GET_MASK
 = 
G_IO_FLAG_MASK
,

105 
	mG_IO_FLAG_SET_MASK
 = 
G_IO_FLAG_APPEND
 | 
G_IO_FLAG_NONBLOCK


106 } 
	tGIOFœgs
;

108 
	s_GIOCh™√l


111 
göt
 
	mªf_cou¡
;

112 
GIOFuncs
 *
	mfuncs
;

114 
gch¨
 *
	mícodög
;

115 
GIC⁄v
 
	mªad_cd
;

116 
GIC⁄v
 
	mwrôe_cd
;

117 
gch¨
 *
	mlöe_ãrm
;

118 
guöt
 
	mlöe_ãrm_Àn
;

120 
gsize
 
	mbuf_size
;

121 
GSåög
 *
	mªad_buf
;

122 
GSåög
 *
	mícoded_ªad_buf
;

123 
GSåög
 *
	mwrôe_buf
;

124 
gch¨
 
	m∑πül_wrôe_buf
[6];

128 
guöt
 
	mu£_buf„r
 : 1;

129 
guöt
 
	mdo_ícode
 : 1;

130 
guöt
 
	m˛o£_⁄_uƒef
 : 1;

131 
guöt
 
	mis_ªadabÀ
 : 1;

132 
guöt
 
	mis_wrôóbÀ
 : 1;

133 
guöt
 
	mis_£ekabÀ
 : 1;

135 
gpoöãr
 
	mª£rved1
;

136 
gpoöãr
 
	mª£rved2
;

139 
	$gboﬁón
 (*
	tGIOFunc
Ë(
	tGIOCh™√l
 *
	tsour˚
,

140 
	tGIOC⁄dôi⁄
 
	tc⁄dôi⁄
,

141 
	tgpoöãr
 
	td©a
);

142 
	s_GIOFuncs


144 
	`GIOSètus
 (*
io_ªad
Ë(
GIOCh™√l
 *
ch™√l
,

145 
gch¨
 *
buf
,

146 
gsize
 
cou¡
,

147 
gsize
 *
byãs_ªad
,

148 
GEº‹
 **
îr
);

149 
	`GIOSètus
 (*
io_wrôe
Ë(
GIOCh™√l
 *
ch™√l
,

150 c⁄° 
gch¨
 *
buf
,

151 
gsize
 
cou¡
,

152 
gsize
 *
byãs_wrôãn
,

153 
GEº‹
 **
îr
);

154 
	`GIOSètus
 (*
io_£ek
Ë(
GIOCh™√l
 *
ch™√l
,

155 
göt64
 
off£t
,

156 
GSìkTy≥
 
ty≥
,

157 
GEº‹
 **
îr
);

158 
	`GIOSètus
 (*
io_˛o£
Ë(
GIOCh™√l
 *
ch™√l
,

159 
GEº‹
 **
îr
);

160 
GSour˚
* (*
io_¸óã_w©ch
Ë(
GIOCh™√l
 *
ch™√l
,

161 
GIOC⁄dôi⁄
 
c⁄dôi⁄
);

162 (*
io_‰ì
Ë(
GIOCh™√l
 *
ch™√l
);

163 
	`GIOSètus
 (*
io_£t_Êags
Ë(
GIOCh™√l
 *
ch™√l
,

164 
GIOFœgs
 
Êags
,

165 
GEº‹
 **
îr
);

166 
	`GIOFœgs
 (*
io_gë_Êags
Ë(
GIOCh™√l
 *
ch™√l
);

169 
	`g_io_ch™√l_öô
 (
GIOCh™√l
 *
ch™√l
);

170 
GIOCh™√l
 *
	`g_io_ch™√l_ªf
 (GIOCh™√»*
ch™√l
);

171 
	`g_io_ch™√l_uƒef
 (
GIOCh™√l
 *
ch™√l
);

173 #i‚de‡
G_DISABLE_DEPRECATED


174 
GIOEº‹
 
	`g_io_ch™√l_ªad
 (
GIOCh™√l
 *
ch™√l
,

175 
gch¨
 *
buf
,

176 
gsize
 
cou¡
,

177 
gsize
 *
byãs_ªad
);

178 
GIOEº‹
 
	`g_io_ch™√l_wrôe
 (
GIOCh™√l
 *
ch™√l
,

179 c⁄° 
gch¨
 *
buf
,

180 
gsize
 
cou¡
,

181 
gsize
 *
byãs_wrôãn
);

182 
GIOEº‹
 
	`g_io_ch™√l_£ek
 (
GIOCh™√l
 *
ch™√l
,

183 
göt64
 
off£t
,

184 
GSìkTy≥
 
ty≥
);

185 
	`g_io_ch™√l_˛o£
 (
GIOCh™√l
 *
ch™√l
);

188 
GIOSètus
 
	`g_io_ch™√l_shutdown
 (
GIOCh™√l
 *
ch™√l
,

189 
gboﬁón
 
Êush
,

190 
GEº‹
 **
îr
);

191 
guöt
 
	`g_io_add_w©ch_fuŒ
 (
GIOCh™√l
 *
ch™√l
,

192 
göt
 
¥i‹ôy
,

193 
GIOC⁄dôi⁄
 
c⁄dôi⁄
,

194 
GIOFunc
 
func
,

195 
gpoöãr
 
u£r_d©a
,

196 
GDe°royNŸify
 
nŸify
);

197 
GSour˚
 * 
	`g_io_¸óã_w©ch
 (
GIOCh™√l
 *
ch™√l
,

198 
GIOC⁄dôi⁄
 
c⁄dôi⁄
);

199 
guöt
 
	`g_io_add_w©ch
 (
GIOCh™√l
 *
ch™√l
,

200 
GIOC⁄dôi⁄
 
c⁄dôi⁄
,

201 
GIOFunc
 
func
,

202 
gpoöãr
 
u£r_d©a
);

207 
	`g_io_ch™√l_£t_buf„r_size
 (
GIOCh™√l
 *
ch™√l
,

208 
gsize
 
size
);

209 
gsize
 
	`g_io_ch™√l_gë_buf„r_size
 (
GIOCh™√l
 *
ch™√l
);

210 
GIOC⁄dôi⁄
 
	`g_io_ch™√l_gë_buf„r_c⁄dôi⁄
 (
GIOCh™√l
 *
ch™√l
);

211 
GIOSètus
 
	`g_io_ch™√l_£t_Êags
 (
GIOCh™√l
 *
ch™√l
,

212 
GIOFœgs
 
Êags
,

213 
GEº‹
 **
îr‹
);

214 
GIOFœgs
 
	`g_io_ch™√l_gë_Êags
 (
GIOCh™√l
 *
ch™√l
);

215 
	`g_io_ch™√l_£t_löe_ãrm
 (
GIOCh™√l
 *
ch™√l
,

216 c⁄° 
gch¨
 *
löe_ãrm
,

217 
göt
 
Àngth
);

218 
G_CONST_RETURN
 
gch¨
* 
	`g_io_ch™√l_gë_löe_ãrm
 (
GIOCh™√l
 *
ch™√l
,

219 
göt
 *
Àngth
);

220 
	`g_io_ch™√l_£t_buf„ªd
 (
GIOCh™√l
 *
ch™√l
,

221 
gboﬁón
 
buf„ªd
);

222 
gboﬁón
 
	`g_io_ch™√l_gë_buf„ªd
 (
GIOCh™√l
 *
ch™√l
);

223 
GIOSètus
 
	`g_io_ch™√l_£t_ícodög
 (
GIOCh™√l
 *
ch™√l
,

224 c⁄° 
gch¨
 *
ícodög
,

225 
GEº‹
 **
îr‹
);

226 
G_CONST_RETURN
 
gch¨
* 
	`g_io_ch™√l_gë_ícodög
 (
GIOCh™√l
 *
ch™√l
);

227 
	`g_io_ch™√l_£t_˛o£_⁄_uƒef
 (
GIOCh™√l
 *
ch™√l
,

228 
gboﬁón
 
do_˛o£
);

229 
gboﬁón
 
	`g_io_ch™√l_gë_˛o£_⁄_uƒef
 (
GIOCh™√l
 *
ch™√l
);

232 
GIOSètus
 
	`g_io_ch™√l_Êush
 (
GIOCh™√l
 *
ch™√l
,

233 
GEº‹
 **
îr‹
);

234 
GIOSètus
 
	`g_io_ch™√l_ªad_löe
 (
GIOCh™√l
 *
ch™√l
,

235 
gch¨
 **
°r_ªtu∫
,

236 
gsize
 *
Àngth
,

237 
gsize
 *
ãrmö©‹_pos
,

238 
GEº‹
 **
îr‹
);

239 
GIOSètus
 
	`g_io_ch™√l_ªad_löe_°rög
 (
GIOCh™√l
 *
ch™√l
,

240 
GSåög
 *
buf„r
,

241 
gsize
 *
ãrmö©‹_pos
,

242 
GEº‹
 **
îr‹
);

243 
GIOSètus
 
	`g_io_ch™√l_ªad_to_íd
 (
GIOCh™√l
 *
ch™√l
,

244 
gch¨
 **
°r_ªtu∫
,

245 
gsize
 *
Àngth
,

246 
GEº‹
 **
îr‹
);

247 
GIOSètus
 
	`g_io_ch™√l_ªad_ch¨s
 (
GIOCh™√l
 *
ch™√l
,

248 
gch¨
 *
buf
,

249 
gsize
 
cou¡
,

250 
gsize
 *
byãs_ªad
,

251 
GEº‹
 **
îr‹
);

252 
GIOSètus
 
	`g_io_ch™√l_ªad_unich¨
 (
GIOCh™√l
 *
ch™√l
,

253 
gunich¨
 *
thech¨
,

254 
GEº‹
 **
îr‹
);

255 
GIOSètus
 
	`g_io_ch™√l_wrôe_ch¨s
 (
GIOCh™√l
 *
ch™√l
,

256 c⁄° 
gch¨
 *
buf
,

257 
gssize
 
cou¡
,

258 
gsize
 *
byãs_wrôãn
,

259 
GEº‹
 **
îr‹
);

260 
GIOSètus
 
	`g_io_ch™√l_wrôe_unich¨
 (
GIOCh™√l
 *
ch™√l
,

261 
gunich¨
 
thech¨
,

262 
GEº‹
 **
îr‹
);

263 
GIOSètus
 
	`g_io_ch™√l_£ek_posôi⁄
 (
GIOCh™√l
 *
ch™√l
,

264 
göt64
 
off£t
,

265 
GSìkTy≥
 
ty≥
,

266 
GEº‹
 **
îr‹
);

267 #ifde‡
G_OS_WIN32


268 
	#g_io_ch™√l_√w_fûe
 
g_io_ch™√l_√w_fûe_utf8


	)

271 
GIOCh™√l
* 
	`g_io_ch™√l_√w_fûe
 (c⁄° 
gch¨
 *
fûíame
,

272 c⁄° 
gch¨
 *
mode
,

273 
GEº‹
 **
îr‹
);

277 
GQu¨k
 
	`g_io_ch™√l_îr‹_qu¨k
 ();

278 
GIOCh™√lEº‹
 
	`g_io_ch™√l_îr‹_‰om_î∫o
 (
göt
 
í
);

298 
GIOCh™√l
* 
	`g_io_ch™√l_unix_√w
 (
fd
);

299 
göt
 
	`g_io_ch™√l_unix_gë_fd
 (
GIOCh™√l
 *
ch™√l
);

303 
GLIB_VAR
 
GSour˚Funcs
 
g_io_w©ch_funcs
;

305 #ifde‡
G_OS_WIN32


311 
	#G_WIN32_MSG_HANDLE
 19981206

	)

319 
	`g_io_ch™√l_wö32_make_pﬁlfd
 (
GIOCh™√l
 *
ch™√l
,

320 
GIOC⁄dôi⁄
 
c⁄dôi⁄
,

321 
GPﬁlFD
 *
fd
);

326 
göt
 
	`g_io_ch™√l_wö32_pﬁl
 (
GPﬁlFD
 *
fds
,

327 
göt
 
n_fds
,

328 
göt
 
timeout_
);

331 #i‡
GLIB_SIZEOF_VOID_P
 == 8

336 
GIOCh™√l
 *
	`g_io_ch™√l_wö32_√w_mesßges
 (
gsize
 
hwnd
);

338 
GIOCh™√l
 *
	`g_io_ch™√l_wö32_√w_mesßges
 (
guöt
 
hwnd
);

350 
GIOCh™√l
* 
	`g_io_ch™√l_wö32_√w_fd
 (
göt
 
fd
);

353 
göt
 
	`g_io_ch™√l_wö32_gë_fd
 (
GIOCh™√l
 *
ch™√l
);

360 
GIOCh™√l
 *
	`g_io_ch™√l_wö32_√w_sockë
 (
göt
 
sockë
);

364 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gkeyfile.h

23 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

27 #i‚de‡
__G_KEY_FILE_H__


28 
	#__G_KEY_FILE_H__


	)

30 
	~<glib/gîr‹.h
>

32 
G_BEGIN_DECLS


36 
	mG_KEY_FILE_ERROR_UNKNOWN_ENCODING
,

37 
	mG_KEY_FILE_ERROR_PARSE
,

38 
	mG_KEY_FILE_ERROR_NOT_FOUND
,

39 
	mG_KEY_FILE_ERROR_KEY_NOT_FOUND
,

40 
	mG_KEY_FILE_ERROR_GROUP_NOT_FOUND
,

41 
	mG_KEY_FILE_ERROR_INVALID_VALUE


42 } 
	tGKeyFûeEº‹
;

44 
	#G_KEY_FILE_ERROR
 
	`g_key_fûe_îr‹_qu¨k
()

	)

46 
GQu¨k
 
g_key_fûe_îr‹_qu¨k
 ();

48 
_GKeyFûe
 
	tGKeyFûe
;

52 
	mG_KEY_FILE_NONE
 = 0,

53 
	mG_KEY_FILE_KEEP_COMMENTS
 = 1 << 0,

54 
	mG_KEY_FILE_KEEP_TRANSLATIONS
 = 1 << 1

55 } 
	tGKeyFûeFœgs
;

57 
GKeyFûe
 *
g_key_fûe_√w
 ();

58 
g_key_fûe_‰ì
 (
GKeyFûe
 *
key_fûe
);

59 
g_key_fûe_£t_li°_£∑øt‹
 (
GKeyFûe
 *
key_fûe
,

60 
gch¨
 
£∑øt‹
);

61 
gboﬁón
 
g_key_fûe_lﬂd_‰om_fûe
 (
GKeyFûe
 *
key_fûe
,

62 c⁄° 
gch¨
 *
fûe
,

63 
GKeyFûeFœgs
 
Êags
,

64 
GEº‹
 **
îr‹
);

65 
gboﬁón
 
g_key_fûe_lﬂd_‰om_d©a
 (
GKeyFûe
 *
key_fûe
,

66 c⁄° 
gch¨
 *
d©a
,

67 
gsize
 
Àngth
,

68 
GKeyFûeFœgs
 
Êags
,

69 
GEº‹
 **
îr‹
);

70 
gboﬁón
 
g_key_fûe_lﬂd_‰om_dús
 (
GKeyFûe
 *
key_fûe
,

71 c⁄° 
gch¨
 *
fûe
,

72 c⁄° 
gch¨
 **
£¨ch_dús
,

73 
gch¨
 **
fuŒ_∑th
,

74 
GKeyFûeFœgs
 
Êags
,

75 
GEº‹
 **
îr‹
);

76 
gboﬁón
 
g_key_fûe_lﬂd_‰om_d©a_dús
 (
GKeyFûe
 *
key_fûe
,

77 c⁄° 
gch¨
 *
fûe
,

78 
gch¨
 **
fuŒ_∑th
,

79 
GKeyFûeFœgs
 
Êags
,

80 
GEº‹
 **
îr‹
);

81 
gch¨
 *
	$g_key_fûe_to_d©a
 (
GKeyFûe
 *
key_fûe
,

82 
gsize
 *
Àngth
,

83 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

84 
gch¨
 *
	$g_key_fûe_gë_°¨t_group
 (
GKeyFûe
 *
key_fûe
Ë
G_GNUC_MALLOC
;

85 
gch¨
 **
	$g_key_fûe_gë_groups
 (
GKeyFûe
 *
key_fûe
,

86 
gsize
 *
Àngth
Ë
G_GNUC_MALLOC
;

87 
gch¨
 **
	$g_key_fûe_gë_keys
 (
GKeyFûe
 *
key_fûe
,

88 c⁄° 
gch¨
 *
group_«me
,

89 
gsize
 *
Àngth
,

90 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

91 
gboﬁón
 
	`g_key_fûe_has_group
 (
GKeyFûe
 *
key_fûe
,

92 c⁄° 
gch¨
 *
group_«me
);

93 
gboﬁón
 
	`g_key_fûe_has_key
 (
GKeyFûe
 *
key_fûe
,

94 c⁄° 
gch¨
 *
group_«me
,

95 c⁄° 
gch¨
 *
key
,

96 
GEº‹
 **
îr‹
);

97 
gch¨
 *
	$g_key_fûe_gë_vÆue
 (
GKeyFûe
 *
key_fûe
,

98 c⁄° 
gch¨
 *
group_«me
,

99 c⁄° 
gch¨
 *
key
,

100 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

101 
	`g_key_fûe_£t_vÆue
 (
GKeyFûe
 *
key_fûe
,

102 c⁄° 
gch¨
 *
group_«me
,

103 c⁄° 
gch¨
 *
key
,

104 c⁄° 
gch¨
 *
vÆue
);

105 
gch¨
 *
	$g_key_fûe_gë_°rög
 (
GKeyFûe
 *
key_fûe
,

106 c⁄° 
gch¨
 *
group_«me
,

107 c⁄° 
gch¨
 *
key
,

108 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

109 
	`g_key_fûe_£t_°rög
 (
GKeyFûe
 *
key_fûe
,

110 c⁄° 
gch¨
 *
group_«me
,

111 c⁄° 
gch¨
 *
key
,

112 c⁄° 
gch¨
 *
°rög
);

113 
gch¨
 *
	$g_key_fûe_gë_loˇÀ_°rög
 (
GKeyFûe
 *
key_fûe
,

114 c⁄° 
gch¨
 *
group_«me
,

115 c⁄° 
gch¨
 *
key
,

116 c⁄° 
gch¨
 *
loˇÀ
,

117 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

118 
	`g_key_fûe_£t_loˇÀ_°rög
 (
GKeyFûe
 *
key_fûe
,

119 c⁄° 
gch¨
 *
group_«me
,

120 c⁄° 
gch¨
 *
key
,

121 c⁄° 
gch¨
 *
loˇÀ
,

122 c⁄° 
gch¨
 *
°rög
);

123 
gboﬁón
 
	`g_key_fûe_gë_boﬁón
 (
GKeyFûe
 *
key_fûe
,

124 c⁄° 
gch¨
 *
group_«me
,

125 c⁄° 
gch¨
 *
key
,

126 
GEº‹
 **
îr‹
);

127 
	`g_key_fûe_£t_boﬁón
 (
GKeyFûe
 *
key_fûe
,

128 c⁄° 
gch¨
 *
group_«me
,

129 c⁄° 
gch¨
 *
key
,

130 
gboﬁón
 
vÆue
);

131 
göt
 
	`g_key_fûe_gë_öãgî
 (
GKeyFûe
 *
key_fûe
,

132 c⁄° 
gch¨
 *
group_«me
,

133 c⁄° 
gch¨
 *
key
,

134 
GEº‹
 **
îr‹
);

135 
	`g_key_fûe_£t_öãgî
 (
GKeyFûe
 *
key_fûe
,

136 c⁄° 
gch¨
 *
group_«me
,

137 c⁄° 
gch¨
 *
key
,

138 
göt
 
vÆue
);

139 
gdoubÀ
 
	`g_key_fûe_gë_doubÀ
 (
GKeyFûe
 *
key_fûe
,

140 c⁄° 
gch¨
 *
group_«me
,

141 c⁄° 
gch¨
 *
key
,

142 
GEº‹
 **
îr‹
);

143 
	`g_key_fûe_£t_doubÀ
 (
GKeyFûe
 *
key_fûe
,

144 c⁄° 
gch¨
 *
group_«me
,

145 c⁄° 
gch¨
 *
key
,

146 
gdoubÀ
 
vÆue
);

147 
gch¨
 **
	$g_key_fûe_gë_°rög_li°
 (
GKeyFûe
 *
key_fûe
,

148 c⁄° 
gch¨
 *
group_«me
,

149 c⁄° 
gch¨
 *
key
,

150 
gsize
 *
Àngth
,

151 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

152 
	`g_key_fûe_£t_°rög_li°
 (
GKeyFûe
 *
key_fûe
,

153 c⁄° 
gch¨
 *
group_«me
,

154 c⁄° 
gch¨
 *
key
,

155 c⁄° 
gch¨
 * c⁄° 
li°
[],

156 
gsize
 
Àngth
);

157 
gch¨
 **
	$g_key_fûe_gë_loˇÀ_°rög_li°
 (
GKeyFûe
 *
key_fûe
,

158 c⁄° 
gch¨
 *
group_«me
,

159 c⁄° 
gch¨
 *
key
,

160 c⁄° 
gch¨
 *
loˇÀ
,

161 
gsize
 *
Àngth
,

162 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

163 
	`g_key_fûe_£t_loˇÀ_°rög_li°
 (
GKeyFûe
 *
key_fûe
,

164 c⁄° 
gch¨
 *
group_«me
,

165 c⁄° 
gch¨
 *
key
,

166 c⁄° 
gch¨
 *
loˇÀ
,

167 c⁄° 
gch¨
 * c⁄° 
li°
[],

168 
gsize
 
Àngth
);

169 
gboﬁón
 *
	$g_key_fûe_gë_boﬁón_li°
 (
GKeyFûe
 *
key_fûe
,

170 c⁄° 
gch¨
 *
group_«me
,

171 c⁄° 
gch¨
 *
key
,

172 
gsize
 *
Àngth
,

173 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

174 
	`g_key_fûe_£t_boﬁón_li°
 (
GKeyFûe
 *
key_fûe
,

175 c⁄° 
gch¨
 *
group_«me
,

176 c⁄° 
gch¨
 *
key
,

177 
gboﬁón
 
li°
[],

178 
gsize
 
Àngth
);

179 
göt
 *
	$g_key_fûe_gë_öãgî_li°
 (
GKeyFûe
 *
key_fûe
,

180 c⁄° 
gch¨
 *
group_«me
,

181 c⁄° 
gch¨
 *
key
,

182 
gsize
 *
Àngth
,

183 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

184 
	`g_key_fûe_£t_doubÀ_li°
 (
GKeyFûe
 *
key_fûe
,

185 c⁄° 
gch¨
 *
group_«me
,

186 c⁄° 
gch¨
 *
key
,

187 
gdoubÀ
 
li°
[],

188 
gsize
 
Àngth
);

189 
gdoubÀ
 *
	$g_key_fûe_gë_doubÀ_li°
 (
GKeyFûe
 *
key_fûe
,

190 c⁄° 
gch¨
 *
group_«me
,

191 c⁄° 
gch¨
 *
key
,

192 
gsize
 *
Àngth
,

193 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

194 
	`g_key_fûe_£t_öãgî_li°
 (
GKeyFûe
 *
key_fûe
,

195 c⁄° 
gch¨
 *
group_«me
,

196 c⁄° 
gch¨
 *
key
,

197 
göt
 
li°
[],

198 
gsize
 
Àngth
);

199 
gboﬁón
 
	`g_key_fûe_£t_commít
 (
GKeyFûe
 *
key_fûe
,

200 c⁄° 
gch¨
 *
group_«me
,

201 c⁄° 
gch¨
 *
key
,

202 c⁄° 
gch¨
 *
commít
,

203 
GEº‹
 **
îr‹
);

204 
gch¨
 *
	$g_key_fûe_gë_commít
 (
GKeyFûe
 *
key_fûe
,

205 c⁄° 
gch¨
 *
group_«me
,

206 c⁄° 
gch¨
 *
key
,

207 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

209 
gboﬁón
 
	`g_key_fûe_ªmove_commít
 (
GKeyFûe
 *
key_fûe
,

210 c⁄° 
gch¨
 *
group_«me
,

211 c⁄° 
gch¨
 *
key
,

212 
GEº‹
 **
îr‹
);

213 
gboﬁón
 
	`g_key_fûe_ªmove_key
 (
GKeyFûe
 *
key_fûe
,

214 c⁄° 
gch¨
 *
group_«me
,

215 c⁄° 
gch¨
 *
key
,

216 
GEº‹
 **
îr‹
);

217 
gboﬁón
 
	`g_key_fûe_ªmove_group
 (
GKeyFûe
 *
key_fûe
,

218 c⁄° 
gch¨
 *
group_«me
,

219 
GEº‹
 **
îr‹
);

222 
	#G_KEY_FILE_DESKTOP_GROUP
 "Deskt› E¡ry"

	)

224 
	#G_KEY_FILE_DESKTOP_KEY_TYPE
 "Ty≥"

	)

225 
	#G_KEY_FILE_DESKTOP_KEY_VERSION
 "Vîsi⁄"

	)

226 
	#G_KEY_FILE_DESKTOP_KEY_NAME
 "Name"

	)

227 
	#G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME
 "GíîicName"

	)

228 
	#G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY
 "NoDi•œy"

	)

229 
	#G_KEY_FILE_DESKTOP_KEY_COMMENT
 "Commít"

	)

230 
	#G_KEY_FILE_DESKTOP_KEY_ICON
 "Ic⁄"

	)

231 
	#G_KEY_FILE_DESKTOP_KEY_HIDDEN
 "Hiddí"

	)

232 
	#G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN
 "O∆yShowIn"

	)

233 
	#G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN
 "NŸShowIn"

	)

234 
	#G_KEY_FILE_DESKTOP_KEY_TRY_EXEC
 "TryExec"

	)

235 
	#G_KEY_FILE_DESKTOP_KEY_EXEC
 "Exec"

	)

236 
	#G_KEY_FILE_DESKTOP_KEY_PATH
 "P©h"

	)

237 
	#G_KEY_FILE_DESKTOP_KEY_TERMINAL
 "TîmöÆ"

	)

238 
	#G_KEY_FILE_DESKTOP_KEY_MIME_TYPE
 "MimeTy≥"

	)

239 
	#G_KEY_FILE_DESKTOP_KEY_CATEGORIES
 "C©eg‹õs"

	)

240 
	#G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY
 "SèπupNŸify"

	)

241 
	#G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS
 "SèπupWMCœss"

	)

242 
	#G_KEY_FILE_DESKTOP_KEY_URL
 "URL"

	)

243 
	#G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN
 "X-GNOME-Gëãxt-Domaö"

	)

245 
	#G_KEY_FILE_DESKTOP_TYPE_APPLICATION
 "Aµliˇti⁄"

	)

246 
	#G_KEY_FILE_DESKTOP_TYPE_LINK
 "Lök"

	)

247 
	#G_KEY_FILE_DESKTOP_TYPE_DIRECTORY
 "Dúe˘‹y"

	)

249 
G_END_DECLS


	@/usr/include/glib-2.0/glib/glist.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_LIST_H__


32 
	#__G_LIST_H__


	)

34 
	~<glib/gmem.h
>

36 
G_BEGIN_DECLS


38 
_GLi°
 
	tGLi°
;

40 
	s_GLi°


42 
gpoöãr
 
	md©a
;

43 
GLi°
 *
	m√xt
;

44 
GLi°
 *
	m¥ev
;

49 
GLi°
* 
	$g_li°_Æloc
 (Ë
G_GNUC_WARN_UNUSED_RESULT
;

50 
	`g_li°_‰ì
 (
GLi°
 *
li°
);

51 
	`g_li°_‰ì_1
 (
GLi°
 *
li°
);

52 
	#g_li°_‰ì1
 
g_li°_‰ì_1


	)

53 
GLi°
* 
	$g_li°_≠≥nd
 (
GLi°
 *
li°
,

54 
gpoöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

55 
GLi°
* 
	$g_li°_¥ïíd
 (
GLi°
 *
li°
,

56 
gpoöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

57 
GLi°
* 
	$g_li°_ö£π
 (
GLi°
 *
li°
,

58 
gpoöãr
 
d©a
,

59 
göt
 
posôi⁄
Ë
G_GNUC_WARN_UNUSED_RESULT
;

60 
GLi°
* 
	$g_li°_ö£π_s‹ãd
 (
GLi°
 *
li°
,

61 
gpoöãr
 
d©a
,

62 
GCom∑ªFunc
 
func
Ë
G_GNUC_WARN_UNUSED_RESULT
;

63 
GLi°
* 
	$g_li°_ö£π_s‹ãd_wôh_d©a
 (
GLi°
 *
li°
,

64 
gpoöãr
 
d©a
,

65 
GCom∑ªD©aFunc
 
func
,

66 
gpoöãr
 
u£r_d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

67 
GLi°
* 
	$g_li°_ö£π_bef‹e
 (
GLi°
 *
li°
,

68 
GLi°
 *
siblög
,

69 
gpoöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

70 
GLi°
* 
	$g_li°_c⁄ˇt
 (
GLi°
 *
li°1
,

71 
GLi°
 *
li°2
Ë
G_GNUC_WARN_UNUSED_RESULT
;

72 
GLi°
* 
	$g_li°_ªmove
 (
GLi°
 *
li°
,

73 
gc⁄°poöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

74 
GLi°
* 
	$g_li°_ªmove_Æl
 (
GLi°
 *
li°
,

75 
gc⁄°poöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

76 
GLi°
* 
	$g_li°_ªmove_lök
 (
GLi°
 *
li°
,

77 
GLi°
 *
Œök
Ë
G_GNUC_WARN_UNUSED_RESULT
;

78 
GLi°
* 
	$g_li°_dñëe_lök
 (
GLi°
 *
li°
,

79 
GLi°
 *
lök_
Ë
G_GNUC_WARN_UNUSED_RESULT
;

80 
GLi°
* 
	$g_li°_ªvî£
 (
GLi°
 *
li°
Ë
G_GNUC_WARN_UNUSED_RESULT
;

81 
GLi°
* 
	$g_li°_c›y
 (
GLi°
 *
li°
Ë
G_GNUC_WARN_UNUSED_RESULT
;

82 
GLi°
* 
	`g_li°_¡h
 (GLi° *
li°
,

83 
guöt
 
n
);

84 
GLi°
* 
	`g_li°_¡h_¥ev
 (GLi° *
li°
,

85 
guöt
 
n
);

86 
GLi°
* 
	`g_li°_föd
 (GLi° *
li°
,

87 
gc⁄°poöãr
 
d©a
);

88 
GLi°
* 
	`g_li°_föd_cu°om
 (GLi° *
li°
,

89 
gc⁄°poöãr
 
d©a
,

90 
GCom∑ªFunc
 
func
);

91 
göt
 
	`g_li°_posôi⁄
 (
GLi°
 *
li°
,

92 
GLi°
 *
Œök
);

93 
göt
 
	`g_li°_ödex
 (
GLi°
 *
li°
,

94 
gc⁄°poöãr
 
d©a
);

95 
GLi°
* 
	`g_li°_œ°
 (GLi° *
li°
);

96 
GLi°
* 
	`g_li°_fú°
 (GLi° *
li°
);

97 
guöt
 
	`g_li°_Àngth
 (
GLi°
 *
li°
);

98 
	`g_li°_f‹óch
 (
GLi°
 *
li°
,

99 
GFunc
 
func
,

100 
gpoöãr
 
u£r_d©a
);

101 
GLi°
* 
	$g_li°_s‹t
 (
GLi°
 *
li°
,

102 
GCom∑ªFunc
 
com∑ª_func
Ë
G_GNUC_WARN_UNUSED_RESULT
;

103 
GLi°
* 
	$g_li°_s‹t_wôh_d©a
 (
GLi°
 *
li°
,

104 
GCom∑ªD©aFunc
 
com∑ª_func
,

105 
gpoöãr
 
u£r_d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

106 
gpoöãr
 
	`g_li°_¡h_d©a
 (
GLi°
 *
li°
,

107 
guöt
 
n
);

110 
	#g_li°_¥evious
(
li°
Ë(÷i°Ë? (((
GLi°
 *)÷i°))->
¥ev
Ë: 
NULL
)

	)

111 
	#g_li°_√xt
(
li°
Ë(÷i°Ë? (((
GLi°
 *)÷i°))->
√xt
Ë: 
NULL
)

	)

113 #i‚de‡
G_DISABLE_DEPRECATED


114 
	`g_li°_push_Æloˇt‹
 (
gpoöãr
 
Æloˇt‹
);

115 
	`g_li°_p›_Æloˇt‹
 ();

118 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gmacros.h

31 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

35 #i‚de‡
__G_MACROS_H__


36 
	#__G_MACROS_H__


	)

40 
	~<°ddef.h
>

46 #i‡ 
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8)

47 
	#G_GNUC_EXTENSION
 
__exãnsi⁄__


	)

49 
	#G_GNUC_EXTENSION


	)

54 #i‡ 
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96)

55 
	#G_GNUC_PURE
 \

56 
	`__©åibuã__
((
__puª__
))

	)

57 
	#G_GNUC_MALLOC
 \

58 
	`__©åibuã__
((
__mÆloc__
))

	)

60 
	#G_GNUC_PURE


	)

61 
	#G_GNUC_MALLOC


	)

64 #i‡ 
__GNUC__
 >= 4

65 
	#G_GNUC_NULL_TERMINATED
 
	`__©åibuã__
((
__£¡öñ__
))

	)

67 
	#G_GNUC_NULL_TERMINATED


	)

70 #i‡ (
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 3)

71 
	#G_GNUC_ALLOC_SIZE
(
x
Ë
	`__©åibuã__
((
	`__Æloc_size__
(x)))

	)

72 
	#G_GNUC_ALLOC_SIZE2
(
x
,
y
Ë
	`__©åibuã__
((
	`__Æloc_size__
(x,y)))

	)

74 
	#G_GNUC_ALLOC_SIZE
(
x
)

	)

75 
	#G_GNUC_ALLOC_SIZE2
(
x
,
y
)

	)

78 #i‡ 
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 > 4)

79 
	#G_GNUC_PRINTF
–
f‹m©_idx
, 
¨g_idx
 ) \

80 
	`__©åibuã__
((
	`__f‹m©__
 (
__¥ötf__
, 
f‹m©_idx
, 
¨g_idx
)))

	)

81 
	#G_GNUC_SCANF
–
f‹m©_idx
, 
¨g_idx
 ) \

82 
	`__©åibuã__
((
	`__f‹m©__
 (
__sˇnf__
, 
f‹m©_idx
, 
¨g_idx
)))

	)

83 
	#G_GNUC_FORMAT
–
¨g_idx
 ) \

84 
	`__©åibuã__
((
	`__f‹m©_¨g__
 (
¨g_idx
)))

	)

85 
	#G_GNUC_NORETURN
 \

86 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

87 
	#G_GNUC_CONST
 \

88 
	`__©åibuã__
((
__c⁄°__
))

	)

89 
	#G_GNUC_UNUSED
 \

90 
	`__©åibuã__
((
__unu£d__
))

	)

91 
	#G_GNUC_NO_INSTRUMENT
 \

92 
	`__©åibuã__
((
__no_ö°rumít_fun˘i⁄__
))

	)

94 
	#G_GNUC_PRINTF
–
f‹m©_idx
, 
¨g_idx
 )

	)

95 
	#G_GNUC_SCANF
–
f‹m©_idx
, 
¨g_idx
 )

	)

96 
	#G_GNUC_FORMAT
–
¨g_idx
 )

	)

97 
	#G_GNUC_NORETURN


	)

98 
	#G_GNUC_CONST


	)

99 
	#G_GNUC_UNUSED


	)

100 
	#G_GNUC_NO_INSTRUMENT


	)

103 #i‡ 
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)

104 
	#G_GNUC_DEPRECATED
 \

105 
	`__©åibuã__
((
__dïªˇãd__
))

	)

107 
	#G_GNUC_DEPRECATED


	)

110 #i‡ 
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 3)

111 
	#G_GNUC_MAY_ALIAS
 
	`__©åibuã__
((
may_Æüs
))

	)

113 
	#G_GNUC_MAY_ALIAS


	)

116 #i‡ 
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 4)

117 
	#G_GNUC_WARN_UNUSED_RESULT
 \

118 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

120 
	#G_GNUC_WARN_UNUSED_RESULT


	)

123 #i‚de‡
G_DISABLE_DEPRECATED


128 #i‡
deföed
 (
__GNUC__
) && (__GNUC__ < 3)

129 
	#G_GNUC_FUNCTION
 
__FUNCTION__


	)

130 
	#G_GNUC_PRETTY_FUNCTION
 
__PRETTY_FUNCTION__


	)

132 
	#G_GNUC_FUNCTION
 ""

	)

133 
	#G_GNUC_PRETTY_FUNCTION
 ""

	)

137 
	#G_STRINGIFY
(
ma¸o_‹_°rög
Ë
	`G_STRINGIFY_ARG
 (ma¸o_‹_°rög)

	)

138 
	#G_STRINGIFY_ARG
(
c⁄ã¡s
Ë#c⁄ã¡s

	)

140 
	#G_PASTE_ARGS
(
idítifõr1
,
idítifõr2
Ëidítifõr1 ## 
	)
identifier2

141 
	#G_PASTE
(
idítifõr1
,
idítifõr2
Ë
	`G_PASTE_ARGS
 (idítifõr1, idítifõr2)

	)

142 
	#G_STATIC_ASSERT
(
ex¥
Ë°ru˘ { 
Compûe_Time_As£πi⁄
[”x¥Ë? 1 : -1]; } 
	tG_PASTE
 (
	t_GSèticAs£π_
, 
	t__LINE__
)

	)

145 #i‡
	tdeföed
(
	t__GNUC__
Ë&& (__GNUC__ < 3Ë&& !deföed(
	t__˝lu•lus
)

146 
	tG_STRLOC
 
	t__FILE__
 ":" 
	tG_STRINGIFY
 (
	t__LINE__
Ë":" 
	t__PRETTY_FUNCTION__
 "()"

	)

148 
	tG_STRLOC
 
	t__FILE__
 ":" 
	tG_STRINGIFY
 (
	t__LINE__
)

	)

152 #i‡
	tdeföed
 (
	t__GNUC__
)

153 
	tG_STRFUNC
 ((c⁄° *Ë(
	t__PRETTY_FUNCTION__
))

	)

154 #ñi‡
	tdeföed
 (
	t__STDC_VERSION__
) && __STDC_VERSION__ >= 19901L

155 
	tG_STRFUNC
 ((c⁄° *Ë(
	t__func__
))

	)

157 
	tG_STRFUNC
 ((c⁄° *Ë("???"))

	)

161 #ifde‡ 
	t__˝lu•lus


162 
	tG_BEGIN_DECLS
 "C" {

	)

163 
	#G_END_DECLS
 }

	)

165 
	tG_BEGIN_DECLS


	)

166 
	tG_END_DECLS


	)

174 #i‚de‡
	tNULL


175 #ifde‡
	t__˝lu•lus


176 
	tNULL
 (0L)

	)

178 
	tNULL
 ((*Ë0)

	)

182 #i‚def 
	tFALSE


183 
	tFALSE
 (0)

	)

186 #i‚def 
	tTRUE


187 
	tTRUE
 (!
	tFALSE
)

	)

190 #unde‡
	tMAX


191 
	tMAX
(
	ta
, 
	tb
Ë((◊Ë> (b)Ë? (aË: (b))

	)

193 #unde‡
	tMIN


194 
	tMIN
(
	ta
, 
	tb
Ë((◊Ë< (b)Ë? (aË: (b))

	)

196 #unde‡
	tABS


197 
	tABS
(
	ta
Ë((◊Ë< 0Ë? -◊Ë: (a))

	)

199 #unde‡
	tCLAMP


200 
	tCLAMP
(
	tx
, 
	tlow
, 
	thigh
Ë(((xË> (high)Ë? (highË: (((xË< (low)Ë? (lowË: (x)))

	)

206 
	tG_N_ELEMENTS
(
	t¨r
Ë( (¨rË/  (◊º)[0]))

	)

210 
	tGPOINTER_TO_SIZE
(
	tp
Ë((
	tgsize
Ë’))

	)

211 
	tGSIZE_TO_POINTER
(
	ts
Ë((
	tgpoöãr
Ë(
	tgsize
Ë(s))

	)

217 #i‡
	tdeföed
(
	t__GNUC__
) && __GNUC__ >= 4

218 
	tG_STRUCT_OFFSET
(
	t°ru˘_ty≥
, 
	tmembî
) \

219 ((
	tgl⁄g
Ë
	toff£tof
 (
	t°ru˘_ty≥
, 
	tmembî
))

	)

221 
	tG_STRUCT_OFFSET
(
	t°ru˘_ty≥
, 
	tmembî
) \

222 ((
	tgl⁄g
Ë((
	tguöt8
*Ë&((
	t°ru˘_ty≥
*Ë0)->
	tmembî
))

	)

225 
	tG_STRUCT_MEMBER_P
(
	t°ru˘_p
, 
	t°ru˘_off£t
) \

226 ((
	tgpoöãr
Ë((
	tguöt8
*Ë(
	t°ru˘_p
Ë+ (
	tgl⁄g
Ë(
	t°ru˘_off£t
)))

	)

227 
	tG_STRUCT_MEMBER
(
	tmembî_ty≥
, 
	t°ru˘_p
, 
	t°ru˘_off£t
) \

228 (*(
	tmembî_ty≥
*Ë
	tG_STRUCT_MEMBER_P
 ((
	t°ru˘_p
), (
	t°ru˘_off£t
)))

	)

237 #i‡!(
	tdeföed
 (
	tG_STMT_START
Ë&& deföed (
	tG_STMT_END
))

238 
	tG_STMT_START
 do

	)

239 
	tG_STMT_END
 0)

	)

246 #ifde‡
	tG_DISABLE_CONST_RETURNS


247 
	tG_CONST_RETURN


	)

249 
	tG_CONST_RETURN
 c⁄°

	)

260 #i‡
	tdeföed
(
	t__GNUC__
Ë&& (__GNUC__ > 2Ë&& deföed(
	t__OPTIMIZE__
)

261 
	t_G_BOOLEAN_EXPR
(
	tex¥
) \

262 
	t__exãnsi⁄__
 ({ \

263 
_g_boﬁón_v¨_
; \

264 i‡(
ex¥
) \

265 
_g_boﬁón_v¨_
 = 1; \

267 
_g_boﬁón_v¨_
 = 0; \

268 
_g_boﬁón_v¨_
; \

269 })

	)

270 
	tG_LIKELY
(
	tex¥
Ë(
	t__buûtö_ex≥˘
 (
	t_G_BOOLEAN_EXPR
”x¥), 1))

	)

271 
	tG_UNLIKELY
(
	tex¥
Ë(
	t__buûtö_ex≥˘
 (
	t_G_BOOLEAN_EXPR
”x¥), 0))

	)

273 
	tG_LIKELY
(
	tex¥
Ë”x¥)

	)

274 
	tG_UNLIKELY
(
	tex¥
Ë”x¥)

	)

	@/usr/include/glib-2.0/glib/gmain.h

20 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

24 #i‚de‡
__G_MAIN_H__


25 
	#__G_MAIN_H__


	)

27 
	~<glib/gpﬁl.h
>

28 
	~<glib/g¶i°.h
>

29 
	~<glib/gthªad.h
>

31 
G_BEGIN_DECLS


33 
_GMaöC⁄ãxt
 
	tGMaöC⁄ãxt
;

34 
_GMaöLo›
 
	tGMaöLo›
;

35 
_GSour˚
 
	tGSour˚
;

36 
_GSour˚CÆlbackFuncs
 
	tGSour˚CÆlbackFuncs
;

37 
_GSour˚Funcs
 
	tGSour˚Funcs
;

39 
	$gboﬁón
 (*
	tGSour˚Func
Ë(
	tgpoöãr
 
	td©a
);

40 (*
	tGChûdW©chFunc
Ë(
	tGPid
 
	tpid
,

41 
	tgöt
 
	t°©us
,

42 
	tgpoöãr
 
	td©a
);

43 
	s_GSour˚


46 
gpoöãr
 
ˇŒback_d©a
;

47 
GSour˚CÆlbackFuncs
 *
ˇŒback_funcs
;

49 
GSour˚Funcs
 *
sour˚_funcs
;

50 
guöt
 
ªf_cou¡
;

52 
GMaöC⁄ãxt
 *
c⁄ãxt
;

54 
göt
 
¥i‹ôy
;

55 
guöt
 
Êags
;

56 
guöt
 
sour˚_id
;

58 
GSLi°
 *
pﬁl_fds
;

60 
GSour˚
 *
¥ev
;

61 
GSour˚
 *
√xt
;

63 
gpoöãr
 
ª£rved1
;

64 
gpoöãr
 
ª£rved2
;

67 
	s_GSour˚CÆlbackFuncs


69 (*
ªf
Ë(
gpoöãr
 
cb_d©a
);

70 (*
uƒef
Ë(
gpoöãr
 
cb_d©a
);

71 (*
gë
Ë(
gpoöãr
 
cb_d©a
,

72 
GSour˚
 *
sour˚
,

73 
GSour˚Func
 *
func
,

74 
gpoöãr
 *
d©a
);

77 (*
	tGSour˚DummyM¨shÆ
) ();

79 
	s_GSour˚Funcs


81 
	`gboﬁón
 (*
¥ï¨e
Ë(
GSour˚
 *
sour˚
,

82 
göt
 *
timeout_
);

83 
	`gboﬁón
 (*
check
Ë(
GSour˚
 *
sour˚
);

84 
	`gboﬁón
 (*
di•©ch
Ë(
GSour˚
 *
sour˚
,

85 
GSour˚Func
 
ˇŒback
,

86 
gpoöãr
 
u£r_d©a
);

87 (*
föÆize
Ë(
GSour˚
 *
sour˚
);

90 
GSour˚Func
 
˛osuª_ˇŒback
;

91 
GSour˚DummyM¨shÆ
 
˛osuª_m¨shÆ
;

96 
	#G_PRIORITY_HIGH
 -100

	)

97 
	#G_PRIORITY_DEFAULT
 0

	)

98 
	#G_PRIORITY_HIGH_IDLE
 100

	)

99 
	#G_PRIORITY_DEFAULT_IDLE
 200

	)

100 
	#G_PRIORITY_LOW
 300

	)

104 
GMaöC⁄ãxt
 *
	`g_maö_c⁄ãxt_√w
 ();

105 
GMaöC⁄ãxt
 *
	`g_maö_c⁄ãxt_ªf
 (GMaöC⁄ãxà*
c⁄ãxt
);

106 
	`g_maö_c⁄ãxt_uƒef
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

107 
GMaöC⁄ãxt
 *
	`g_maö_c⁄ãxt_deÁu…
 ();

109 
gboﬁón
 
	`g_maö_c⁄ãxt_ôî©i⁄
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

110 
gboﬁón
 
may_block
);

111 
gboﬁón
 
	`g_maö_c⁄ãxt_≥ndög
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

115 
GSour˚
 *
	`g_maö_c⁄ãxt_föd_sour˚_by_id
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

116 
guöt
 
sour˚_id
);

117 
GSour˚
 *
	`g_maö_c⁄ãxt_föd_sour˚_by_u£r_d©a
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

118 
gpoöãr
 
u£r_d©a
);

119 
GSour˚
 *
	`g_maö_c⁄ãxt_föd_sour˚_by_funcs_u£r_d©a
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

120 
GSour˚Funcs
 *
funcs
,

121 
gpoöãr
 
u£r_d©a
);

125 
	`g_maö_c⁄ãxt_wakeup
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

126 
gboﬁón
 
	`g_maö_c⁄ãxt_acquúe
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

127 
	`g_maö_c⁄ãxt_ªÀa£
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

128 
gboﬁón
 
	`g_maö_c⁄ãxt_is_ow√r
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

129 
gboﬁón
 
	`g_maö_c⁄ãxt_waô
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

130 
GC⁄d
 *
c⁄d
,

131 
GMuãx
 *
muãx
);

133 
gboﬁón
 
	`g_maö_c⁄ãxt_¥ï¨e
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

134 
göt
 *
¥i‹ôy
);

135 
göt
 
	`g_maö_c⁄ãxt_quîy
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

136 
göt
 
max_¥i‹ôy
,

137 
göt
 *
timeout_
,

138 
GPﬁlFD
 *
fds
,

139 
göt
 
n_fds
);

140 
göt
 
	`g_maö_c⁄ãxt_check
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

141 
göt
 
max_¥i‹ôy
,

142 
GPﬁlFD
 *
fds
,

143 
göt
 
n_fds
);

144 
	`g_maö_c⁄ãxt_di•©ch
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

146 
	`g_maö_c⁄ãxt_£t_pﬁl_func
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

147 
GPﬁlFunc
 
func
);

148 
GPﬁlFunc
 
	`g_maö_c⁄ãxt_gë_pﬁl_func
 (
GMaöC⁄ãxt
 *
c⁄ãxt
);

152 
	`g_maö_c⁄ãxt_add_pﬁl
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

153 
GPﬁlFD
 *
fd
,

154 
göt
 
¥i‹ôy
);

155 
	`g_maö_c⁄ãxt_ªmove_pﬁl
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

156 
GPﬁlFD
 *
fd
);

158 
göt
 
	`g_maö_dïth
 ();

159 
GSour˚
 *
	`g_maö_cuºít_sour˚
 ();

164 
GMaöLo›
 *
	`g_maö_lo›_√w
 (
GMaöC⁄ãxt
 *
c⁄ãxt
,

165 
gboﬁón
 
is_ru¬ög
);

166 
	`g_maö_lo›_run
 (
GMaöLo›
 *
lo›
);

167 
	`g_maö_lo›_quô
 (
GMaöLo›
 *
lo›
);

168 
GMaöLo›
 *
	`g_maö_lo›_ªf
 (GMaöLo› *
lo›
);

169 
	`g_maö_lo›_uƒef
 (
GMaöLo›
 *
lo›
);

170 
gboﬁón
 
	`g_maö_lo›_is_ru¬ög
 (
GMaöLo›
 *
lo›
);

171 
GMaöC⁄ãxt
 *
	`g_maö_lo›_gë_c⁄ãxt
 (
GMaöLo›
 *
lo›
);

175 
GSour˚
 *
	`g_sour˚_√w
 (
GSour˚Funcs
 *
sour˚_funcs
,

176 
guöt
 
°ru˘_size
);

177 
GSour˚
 *
	`g_sour˚_ªf
 (GSour˚ *
sour˚
);

178 
	`g_sour˚_uƒef
 (
GSour˚
 *
sour˚
);

180 
guöt
 
	`g_sour˚_©èch
 (
GSour˚
 *
sour˚
,

181 
GMaöC⁄ãxt
 *
c⁄ãxt
);

182 
	`g_sour˚_de°roy
 (
GSour˚
 *
sour˚
);

184 
	`g_sour˚_£t_¥i‹ôy
 (
GSour˚
 *
sour˚
,

185 
göt
 
¥i‹ôy
);

186 
göt
 
	`g_sour˚_gë_¥i‹ôy
 (
GSour˚
 *
sour˚
);

187 
	`g_sour˚_£t_ˇn_ªcur£
 (
GSour˚
 *
sour˚
,

188 
gboﬁón
 
ˇn_ªcur£
);

189 
gboﬁón
 
	`g_sour˚_gë_ˇn_ªcur£
 (
GSour˚
 *
sour˚
);

190 
guöt
 
	`g_sour˚_gë_id
 (
GSour˚
 *
sour˚
);

192 
GMaöC⁄ãxt
 *
	`g_sour˚_gë_c⁄ãxt
 (
GSour˚
 *
sour˚
);

194 
	`g_sour˚_£t_ˇŒback
 (
GSour˚
 *
sour˚
,

195 
GSour˚Func
 
func
,

196 
gpoöãr
 
d©a
,

197 
GDe°royNŸify
 
nŸify
);

199 
	`g_sour˚_£t_funcs
 (
GSour˚
 *
sour˚
,

200 
GSour˚Funcs
 *
funcs
);

201 
gboﬁón
 
	`g_sour˚_is_de°royed
 (
GSour˚
 *
sour˚
);

204 
	`g_sour˚_£t_ˇŒback_ödúe˘
 (
GSour˚
 *
sour˚
,

205 
gpoöãr
 
ˇŒback_d©a
,

206 
GSour˚CÆlbackFuncs
 *
ˇŒback_funcs
);

208 
	`g_sour˚_add_pﬁl
 (
GSour˚
 *
sour˚
,

209 
GPﬁlFD
 *
fd
);

210 
	`g_sour˚_ªmove_pﬁl
 (
GSour˚
 *
sour˚
,

211 
GPﬁlFD
 *
fd
);

213 
	`g_sour˚_gë_cuºít_time
 (
GSour˚
 *
sour˚
,

214 
GTimeVÆ
 *
timevÆ
);

222 
GSour˚
 *
	`g_idÀ_sour˚_√w
 ();

223 
GSour˚
 *
	`g_chûd_w©ch_sour˚_√w
 (
GPid
 
pid
);

224 
GSour˚
 *
	`g_timeout_sour˚_√w
 (
guöt
 
öãrvÆ
);

225 
GSour˚
 *
	`g_timeout_sour˚_√w_£c⁄ds
 (
guöt
 
öãrvÆ
);

229 
	`g_gë_cuºít_time
 (
GTimeVÆ
 *
ªsu…
);

233 #i‚de‡
G_DISABLE_DEPRECATED


237 
	#g_maö_√w
(
is_ru¬ög
Ë
	`g_maö_lo›_√w
 (
NULL
, is_ru¬ög);

	)

238 
	#g_maö_run
(
lo›
Ë
	`g_maö_lo›_run
÷o›)

	)

239 
	#g_maö_quô
(
lo›
Ë
	`g_maö_lo›_quô
÷o›)

	)

240 
	#g_maö_de°roy
(
lo›
Ë
	`g_maö_lo›_uƒef
÷o›)

	)

241 
	#g_maö_is_ru¬ög
(
lo›
Ë
	`g_maö_lo›_is_ru¬ög
÷o›)

	)

246 
	#g_maö_ôî©i⁄
(
may_block
Ë
	`g_maö_c⁄ãxt_ôî©i⁄
 (
NULL
, may_block)

	)

247 
	#g_maö_≥ndög
(Ë
	`g_maö_c⁄ãxt_≥ndög
 (
NULL
)

	)

249 
	#g_maö_£t_pﬁl_func
(
func
Ë
	`g_maö_c⁄ãxt_£t_pﬁl_func
 (
NULL
, func)

	)

254 
gboﬁón
 
	`g_sour˚_ªmove
 (
guöt
 
èg
);

255 
gboﬁón
 
	`g_sour˚_ªmove_by_u£r_d©a
 (
gpoöãr
 
u£r_d©a
);

256 
gboﬁón
 
	`g_sour˚_ªmove_by_funcs_u£r_d©a
 (
GSour˚Funcs
 *
funcs
,

257 
gpoöãr
 
u£r_d©a
);

260 
guöt
 
	`g_timeout_add_fuŒ
 (
göt
 
¥i‹ôy
,

261 
guöt
 
öãrvÆ
,

262 
GSour˚Func
 
fun˘i⁄
,

263 
gpoöãr
 
d©a
,

264 
GDe°royNŸify
 
nŸify
);

265 
guöt
 
	`g_timeout_add
 (guöà
öãrvÆ
,

266 
GSour˚Func
 
fun˘i⁄
,

267 
gpoöãr
 
d©a
);

268 
guöt
 
	`g_timeout_add_£c⁄ds_fuŒ
 (
göt
 
¥i‹ôy
,

269 
guöt
 
öãrvÆ
,

270 
GSour˚Func
 
fun˘i⁄
,

271 
gpoöãr
 
d©a
,

272 
GDe°royNŸify
 
nŸify
);

273 
guöt
 
	`g_timeout_add_£c⁄ds
 (guöà
öãrvÆ
,

274 
GSour˚Func
 
fun˘i⁄
,

275 
gpoöãr
 
d©a
);

276 
guöt
 
	`g_chûd_w©ch_add_fuŒ
 (
göt
 
¥i‹ôy
,

277 
GPid
 
pid
,

278 
GChûdW©chFunc
 
fun˘i⁄
,

279 
gpoöãr
 
d©a
,

280 
GDe°royNŸify
 
nŸify
);

281 
guöt
 
	`g_chûd_w©ch_add
 (
GPid
 
pid
,

282 
GChûdW©chFunc
 
fun˘i⁄
,

283 
gpoöãr
 
d©a
);

284 
guöt
 
	`g_idÀ_add
 (
GSour˚Func
 
fun˘i⁄
,

285 
gpoöãr
 
d©a
);

286 
guöt
 
	`g_idÀ_add_fuŒ
 (
göt
 
¥i‹ôy
,

287 
GSour˚Func
 
fun˘i⁄
,

288 
gpoöãr
 
d©a
,

289 
GDe°royNŸify
 
nŸify
);

290 
gboﬁón
 
	`g_idÀ_ªmove_by_d©a
 (
gpoöãr
 
d©a
);

293 
GLIB_VAR
 
GSour˚Funcs
 
g_timeout_funcs
;

294 
GLIB_VAR
 
GSour˚Funcs
 
g_chûd_w©ch_funcs
;

295 
GLIB_VAR
 
GSour˚Funcs
 
g_idÀ_funcs
;

297 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gmappedfile.h

22 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

26 #i‚de‡
__G_MAPPED_FILE_H__


27 
	#__G_MAPPED_FILE_H__


	)

29 
	~<glib/gîr‹.h
>

31 
G_BEGIN_DECLS


33 
_GM≠≥dFûe
 
	tGM≠≥dFûe
;

35 
GM≠≥dFûe
 *
	$g_m≠≥d_fûe_√w
 (c⁄° 
gch¨
 *
fûíame
,

36 
gboﬁón
 
wrôabÀ
,

37 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

38 
gsize
 
	`g_m≠≥d_fûe_gë_Àngth
 (
GM≠≥dFûe
 *
fûe
);

39 
gch¨
 *
	`g_m≠≥d_fûe_gë_c⁄ã¡s
 (
GM≠≥dFûe
 *
fûe
);

40 
	`g_m≠≥d_fûe_‰ì
 (
GM≠≥dFûe
 *
fûe
);

42 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gmarkup.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_MARKUP_H__


26 
	#__G_MARKUP_H__


	)

28 
	~<°d¨g.h
>

30 
	~<glib/gîr‹.h
>

31 
	~<glib/g¶i°.h
>

33 
G_BEGIN_DECLS


37 
	mG_MARKUP_ERROR_BAD_UTF8
,

38 
	mG_MARKUP_ERROR_EMPTY
,

39 
	mG_MARKUP_ERROR_PARSE
,

43 
	mG_MARKUP_ERROR_UNKNOWN_ELEMENT
,

44 
	mG_MARKUP_ERROR_UNKNOWN_ATTRIBUTE
,

45 
	mG_MARKUP_ERROR_INVALID_CONTENT
,

46 
	mG_MARKUP_ERROR_MISSING_ATTRIBUTE


47 } 
	tGM¨kupEº‹
;

49 
	#G_MARKUP_ERROR
 
	`g_m¨kup_îr‹_qu¨k
 ()

	)

51 
GQu¨k
 
g_m¨kup_îr‹_qu¨k
 ();

55 
	mG_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG
 = 1 << 0,

56 
	mG_MARKUP_TREAT_CDATA_AS_TEXT
 = 1 << 1,

57 
	mG_MARKUP_PREFIX_ERROR_POSITION
 = 1 << 2

58 } 
	tGM¨kupP¨£Fœgs
;

60 
_GM¨kupP¨£C⁄ãxt
 
	tGM¨kupP¨£C⁄ãxt
;

61 
_GM¨kupP¨£r
 
	tGM¨kupP¨£r
;

63 
	s_GM¨kupP¨£r


66 (*
	m°¨t_ñemít
Ë(
GM¨kupP¨£C⁄ãxt
 *
	mc⁄ãxt
,

67 c⁄° 
gch¨
 *
	mñemít_«me
,

68 c⁄° 
gch¨
 **
	m©åibuã_«mes
,

69 c⁄° 
gch¨
 **
	m©åibuã_vÆues
,

70 
gpoöãr
 
	mu£r_d©a
,

71 
GEº‹
 **
	mîr‹
);

74 (*
	míd_ñemít
Ë(
GM¨kupP¨£C⁄ãxt
 *
	mc⁄ãxt
,

75 c⁄° 
gch¨
 *
	mñemít_«me
,

76 
gpoöãr
 
	mu£r_d©a
,

77 
GEº‹
 **
	mîr‹
);

81 (*
	mãxt
Ë(
GM¨kupP¨£C⁄ãxt
 *
	mc⁄ãxt
,

82 c⁄° 
gch¨
 *
	mãxt
,

83 
gsize
 
	mãxt_Àn
,

84 
gpoöãr
 
	mu£r_d©a
,

85 
GEº‹
 **
	mîr‹
);

92 (*
	m∑s°hrough
Ë(
GM¨kupP¨£C⁄ãxt
 *
	mc⁄ãxt
,

93 c⁄° 
gch¨
 *
	m∑s°hrough_ãxt
,

94 
gsize
 
	mãxt_Àn
,

95 
gpoöãr
 
	mu£r_d©a
,

96 
GEº‹
 **
	mîr‹
);

101 (*
	mîr‹
Ë(
GM¨kupP¨£C⁄ãxt
 *
	mc⁄ãxt
,

102 
GEº‹
 *
	mîr‹
,

103 
gpoöãr
 
	mu£r_d©a
);

106 
GM¨kupP¨£C⁄ãxt
 *
g_m¨kup_∑r£_c⁄ãxt_√w
 (c⁄° 
GM¨kupP¨£r
 *
∑r£r
,

107 
GM¨kupP¨£Fœgs
 
Êags
,

108 
gpoöãr
 
u£r_d©a
,

109 
GDe°royNŸify
 
u£r_d©a_dnŸify
);

110 
g_m¨kup_∑r£_c⁄ãxt_‰ì
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
);

111 
gboﬁón
 
g_m¨kup_∑r£_c⁄ãxt_∑r£
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
,

112 c⁄° 
gch¨
 *
ãxt
,

113 
gssize
 
ãxt_Àn
,

114 
GEº‹
 **
îr‹
);

115 
g_m¨kup_∑r£_c⁄ãxt_push
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
,

116 
GM¨kupP¨£r
 *
∑r£r
,

117 
gpoöãr
 
u£r_d©a
);

118 
gpoöãr
 
g_m¨kup_∑r£_c⁄ãxt_p›
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
);

120 
gboﬁón
 
g_m¨kup_∑r£_c⁄ãxt_íd_∑r£
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
,

121 
GEº‹
 **
îr‹
);

122 
G_CONST_RETURN
 
gch¨
 *
g_m¨kup_∑r£_c⁄ãxt_gë_ñemít
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
);

123 
G_CONST_RETURN
 
GSLi°
 *
g_m¨kup_∑r£_c⁄ãxt_gë_ñemít_°ack
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
);

126 
g_m¨kup_∑r£_c⁄ãxt_gë_posôi⁄
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
,

127 
göt
 *
löe_numbî
,

128 
göt
 *
ch¨_numbî
);

129 
gpoöãr
 
g_m¨kup_∑r£_c⁄ãxt_gë_u£r_d©a
 (
GM¨kupP¨£C⁄ãxt
 *
c⁄ãxt
);

132 
gch¨
* 
g_m¨kup_esˇ≥_ãxt
 (c⁄° gch¨ *
ãxt
,

133 
gssize
 
Àngth
);

135 
gch¨
 *
	$g_m¨kup_¥ötf_esˇ≥d
 (c⁄° *
f‹m©
,

136 ...Ë
	`G_GNUC_PRINTF
 (1, 2);

137 
gch¨
 *
	`g_m¨kup_v¥ötf_esˇ≥d
 (c⁄° *
f‹m©
,

138 
va_li°
 
¨gs
);

142 
G_MARKUP_COLLECT_INVALID
,

143 
G_MARKUP_COLLECT_STRING
,

144 
G_MARKUP_COLLECT_STRDUP
,

145 
G_MARKUP_COLLECT_BOOLEAN
,

146 
G_MARKUP_COLLECT_TRISTATE
,

148 
G_MARKUP_COLLECT_OPTIONAL
 = (1 << 16)

149 } 
	tGM¨kupCﬁÀ˘Ty≥
;

153 
gboﬁón
 
	`g_m¨kup_cﬁÀ˘_©åibuãs
 (c⁄° 
gch¨
 *
ñemít_«me
,

154 c⁄° 
gch¨
 **
©åibuã_«mes
,

155 c⁄° 
gch¨
 **
©åibuã_vÆues
,

156 
GEº‹
 **
îr‹
,

157 
GM¨kupCﬁÀ˘Ty≥
 
fú°_ty≥
,

158 c⁄° 
gch¨
 *
fú°_©å
,

161 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gmem.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_MEM_H__


32 
	#__G_MEM_H__


	)

34 
	~<glib/g¶i˚.h
>

35 
	~<glib/gty≥s.h
>

37 
G_BEGIN_DECLS


39 
_GMemVTabÀ
 
	tGMemVTabÀ
;

42 #i‡
GLIB_SIZEOF_VOID_P
 > 
GLIB_SIZEOF_LONG


43 
	#G_MEM_ALIGN
 
GLIB_SIZEOF_VOID_P


	)

45 
	#G_MEM_ALIGN
 
GLIB_SIZEOF_LONG


	)

51 
gpoöãr
 
	$g_mÆloc
 (
gsize
 
n_byãs
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

52 
gpoöãr
 
	$g_mÆloc0
 (
gsize
 
n_byãs
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

53 
gpoöãr
 
	$g_ªÆloc
 (
gpoöãr
 
mem
,

54 
gsize
 
n_byãs
Ë
G_GNUC_WARN_UNUSED_RESULT
;

55 
	`g_‰ì
 (
gpoöãr
 
mem
);

56 
gpoöãr
 
	$g_åy_mÆloc
 (
gsize
 
n_byãs
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

57 
gpoöãr
 
	$g_åy_mÆloc0
 (
gsize
 
n_byãs
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

58 
gpoöãr
 
	$g_åy_ªÆloc
 (
gpoöãr
 
mem
,

59 
gsize
 
n_byãs
Ë
G_GNUC_WARN_UNUSED_RESULT
;

64 
	#g_√w
(
°ru˘_ty≥
, 
n_°ru˘s
) \

65 ((
°ru˘_ty≥
 *Ë
	`g_mÆloc
 (((
gsize
Ë (°ru˘_ty≥)Ë* ((gsizeË(
n_°ru˘s
))))

	)

66 
	#g_√w0
(
°ru˘_ty≥
, 
n_°ru˘s
) \

67 ((
°ru˘_ty≥
 *Ë
	`g_mÆloc0
 (((
gsize
Ë (°ru˘_ty≥)Ë* ((gsizeË(
n_°ru˘s
))))

	)

68 
	#g_ª√w
(
°ru˘_ty≥
, 
mem
, 
n_°ru˘s
) \

69 ((
°ru˘_ty≥
 *Ë
	`g_ªÆloc
 ((
mem
), ((
gsize
Ë (°ru˘_ty≥)Ë* ((gsizeË(
n_°ru˘s
))))

	)

71 
	#g_åy_√w
(
°ru˘_ty≥
, 
n_°ru˘s
) \

72 ((
°ru˘_ty≥
 *Ë
	`g_åy_mÆloc
 (((
gsize
Ë (°ru˘_ty≥)Ë* ((gsizeË(
n_°ru˘s
))))

	)

73 
	#g_åy_√w0
(
°ru˘_ty≥
, 
n_°ru˘s
) \

74 ((
°ru˘_ty≥
 *Ë
	`g_åy_mÆloc0
 (((
gsize
Ë (°ru˘_ty≥)Ë* ((gsizeË(
n_°ru˘s
))))

	)

75 
	#g_åy_ª√w
(
°ru˘_ty≥
, 
mem
, 
n_°ru˘s
) \

76 ((
°ru˘_ty≥
 *Ë
	`g_åy_ªÆloc
 ((
mem
), ((
gsize
Ë (°ru˘_ty≥)Ë* ((gsizeË(
n_°ru˘s
))))

	)

83 
	s_GMemVTabÀ


85 
	`gpoöãr
 (*
mÆloc
Ë(
gsize
 
n_byãs
);

86 
	`gpoöãr
 (*
ªÆloc
Ë(
gpoöãr
 
mem
,

87 
gsize
 
n_byãs
);

88 (*
‰ì
Ë(
gpoöãr
 
mem
);

90 
	`gpoöãr
 (*
ˇŒoc
Ë(
gsize
 
n_blocks
,

91 
gsize
 
n_block_byãs
);

92 
	`gpoöãr
 (*
åy_mÆloc
Ë(
gsize
 
n_byãs
);

93 
	`gpoöãr
 (*
åy_ªÆloc
Ë(
gpoöãr
 
mem
,

94 
gsize
 
n_byãs
);

96 
	`g_mem_£t_vèbÀ
 (
GMemVTabÀ
 *
vèbÀ
);

97 
gboﬁón
 
	`g_mem_is_sy°em_mÆloc
 ();

99 
GLIB_VAR
 
gboﬁón
 
g_mem_gc_‰õndly
;

103 
GLIB_VAR
 
GMemVTabÀ
 *
glib_mem_¥ofûî_èbÀ
;

104 
	`g_mem_¥ofûe
 ();

108 #i‡!
	`deföed
 (
G_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
Ë|| deföed (
GDK_COMPILATION
)

109 
_GAŒoˇt‹
 
	tGAŒoˇt‹
;

110 
_GMemChunk
 
	tGMemChunk
;

111 
	#g_mem_chunk_¸óã
(
ty≥
, 
¥e_Æloc
, 
Æloc_ty≥
) ( \

112 
	`g_mem_chunk_√w
 (#type " mem chunks (" #pre_alloc ")", \

113  (
ty≥
), \

114  (
ty≥
Ë* (
¥e_Æloc
), \

115 (
Æloc_ty≥
)) \

116 )

	)

117 
	#g_chunk_√w
(
ty≥
, 
chunk
) ( \

118 (
ty≥
 *Ë
	`g_mem_chunk_Æloc
 (
chunk
) \

119 )

	)

120 
	#g_chunk_√w0
(
ty≥
, 
chunk
) ( \

121 (
ty≥
 *Ë
	`g_mem_chunk_Æloc0
 (
chunk
) \

122 )

	)

123 
	#g_chunk_‰ì
(
mem
, 
mem_chunk
Ë
G_STMT_START
 { \

124 
	`g_mem_chunk_‰ì
 ((
mem_chunk
), (
mem
)); \

125 
	}
} 
G_STMT_END


	)

126 
	#G_ALLOC_ONLY
 1

	)

127 
	#G_ALLOC_AND_FREE
 2

	)

128 
GMemChunk
* 
g_mem_chunk_√w
 (c⁄° 
gch¨
 *
«me
,

129 
göt
 
©om_size
,

130 
gsize
 
¨ó_size
,

131 
göt
 
ty≥
);

132 
g_mem_chunk_de°roy
 (
GMemChunk
 *
mem_chunk
);

133 
gpoöãr
 
g_mem_chunk_Æloc
 (
GMemChunk
 *
mem_chunk
);

134 
gpoöãr
 
g_mem_chunk_Æloc0
 (
GMemChunk
 *
mem_chunk
);

135 
g_mem_chunk_‰ì
 (
GMemChunk
 *
mem_chunk
,

136 
gpoöãr
 
mem
);

137 
g_mem_chunk_˛ón
 (
GMemChunk
 *
mem_chunk
);

138 
g_mem_chunk_ª£t
 (
GMemChunk
 *
mem_chunk
);

139 
g_mem_chunk_¥öt
 (
GMemChunk
 *
mem_chunk
);

140 
g_mem_chunk_öfo
 ();

141 
g_blow_chunks
 ();

142 
GAŒoˇt‹
*
g_Æloˇt‹_√w
 (c⁄° 
gch¨
 *
«me
,

143 
guöt
 
n_¥óŒocs
);

144 
g_Æloˇt‹_‰ì
 (
GAŒoˇt‹
 *
Æloˇt‹
);

145 
	#G_ALLOCATOR_LIST
 (1)

	)

146 
	#G_ALLOCATOR_SLIST
 (2)

	)

147 
	#G_ALLOCATOR_NODE
 (3)

	)

150 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gmessages.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_MESSAGES_H__


32 
	#__G_MESSAGES_H__


	)

34 
	~<°d¨g.h
>

35 
	~<glib/gty≥s.h
>

36 
	~<glib/gma¸os.h
>

40 #i‡(
__GNUC__
 >3 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96))

41 #¥agm®
GCC
 
sy°em_hódî


44 
G_BEGIN_DECLS


48 
gsize
 
g_¥ötf_°rög_uµî_bound
 (c⁄° 
gch¨
* 
f‹m©
,

49 
va_li°
 
¨gs
);

54 
	#G_LOG_LEVEL_USER_SHIFT
 (8)

	)

61 
	mG_LOG_FLAG_RECURSION
 = 1 << 0,

62 
	mG_LOG_FLAG_FATAL
 = 1 << 1,

65 
	mG_LOG_LEVEL_ERROR
 = 1 << 2,

66 
	mG_LOG_LEVEL_CRITICAL
 = 1 << 3,

67 
	mG_LOG_LEVEL_WARNING
 = 1 << 4,

68 
	mG_LOG_LEVEL_MESSAGE
 = 1 << 5,

69 
	mG_LOG_LEVEL_INFO
 = 1 << 6,

70 
	mG_LOG_LEVEL_DEBUG
 = 1 << 7,

72 
	mG_LOG_LEVEL_MASK
 = ~(
G_LOG_FLAG_RECURSION
 | 
G_LOG_FLAG_FATAL
)

73 } 
	tGLogLevñFœgs
;

76 
	#G_LOG_FATAL_MASK
 (
G_LOG_FLAG_RECURSION
 | 
G_LOG_LEVEL_ERROR
)

	)

78 (*
	tGLogFunc
Ë(c⁄° 
	tgch¨
 *
	tlog_domaö
,

79 
	tGLogLevñFœgs
 
	tlog_Àvñ
,

80 c⁄° 
	tgch¨
 *
	tmesßge
,

81 
	tgpoöãr
 
	tu£r_d©a
);

85 
guöt
 
	`g_log_£t_h™dÀr
 (c⁄° 
gch¨
 *
log_domaö
,

86 
GLogLevñFœgs
 
log_Àvñs
,

87 
GLogFunc
 
log_func
,

88 
gpoöãr
 
u£r_d©a
);

89 
	`g_log_ªmove_h™dÀr
 (c⁄° 
gch¨
 *
log_domaö
,

90 
guöt
 
h™dÀr_id
);

91 
	`g_log_deÁu…_h™dÀr
 (c⁄° 
gch¨
 *
log_domaö
,

92 
GLogLevñFœgs
 
log_Àvñ
,

93 c⁄° 
gch¨
 *
mesßge
,

94 
gpoöãr
 
unu£d_d©a
);

95 
GLogFunc
 
	`g_log_£t_deÁu…_h™dÀr
 (GLogFun¯
log_func
,

96 
gpoöãr
 
u£r_d©a
);

97 
	$g_log
 (c⁄° 
gch¨
 *
log_domaö
,

98 
GLogLevñFœgs
 
log_Àvñ
,

99 c⁄° 
gch¨
 *
f‹m©
,

100 ...Ë
	`G_GNUC_PRINTF
 (3, 4);

101 
	`g_logv
 (c⁄° 
gch¨
 *
log_domaö
,

102 
GLogLevñFœgs
 
log_Àvñ
,

103 c⁄° 
gch¨
 *
f‹m©
,

104 
va_li°
 
¨gs
);

105 
GLogLevñFœgs
 
	`g_log_£t_Áèl_mask
 (c⁄° 
gch¨
 *
log_domaö
,

106 
GLogLevñFœgs
 
Áèl_mask
);

107 
GLogLevñFœgs
 
	`g_log_£t_Æways_Áèl
 (GLogLevñFœg†
Áèl_mask
);

110 
G_GNUC_INTERNAL
 
	`_g_log_ÁŒback_h™dÀr
 (c⁄° 
gch¨
 *
log_domaö
,

111 
GLogLevñFœgs
 
log_Àvñ
,

112 c⁄° 
gch¨
 *
mesßge
,

113 
gpoöãr
 
unu£d_d©a
);

116 
	`g_ªtu∫_if_Áû_w¨nög
 (c⁄° *
log_domaö
,

117 c⁄° *
¥ëty_fun˘i⁄
,

118 c⁄° *
ex¥essi⁄
);

119 
	`g_w¨n_mesßge
 (c⁄° *
domaö
,

120 c⁄° *
fûe
,

121 
löe
,

122 c⁄° *
func
,

123 c⁄° *
w¨√x¥
);

124 #i‚de‡
G_DISABLE_DEPRECATED


125 
	$g_as£π_w¨nög
 (c⁄° *
log_domaö
,

126 c⁄° *
fûe
,

127 c⁄° 
löe
,

128 c⁄° *
¥ëty_fun˘i⁄
,

129 c⁄° *
ex¥essi⁄
Ë
G_GNUC_NORETURN
;

133 #i‚de‡
G_LOG_DOMAIN


134 
	#G_LOG_DOMAIN
 ((
gch¨
*Ë0)

	)

136 #ifde‡
G_HAVE_ISO_VARARGS


138 
	#g_îr‹
(...Ë
G_STMT_START
 { \

139 
	`g_log
 (
G_LOG_DOMAIN
, \

140 
G_LOG_LEVEL_ERROR
, \

141 
__VA_ARGS__
); \

143 
	}
} 
G_STMT_END


	)

145 
	#g_mesßge
(...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

146 
G_LOG_LEVEL_MESSAGE
, \

147 
__VA_ARGS__
)

	)

148 
	#g_¸ôiˇl
(...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

149 
G_LOG_LEVEL_CRITICAL
, \

150 
__VA_ARGS__
)

	)

151 
	#g_w¨nög
(...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

152 
G_LOG_LEVEL_WARNING
, \

153 
__VA_ARGS__
)

	)

154 
	#g_debug
(...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

155 
G_LOG_LEVEL_DEBUG
, \

156 
__VA_ARGS__
)

	)

157 #ñi‡
deföed
(
G_HAVE_GNUC_VARARGS
)

158 
	#g_îr‹
(
f‹m©
...Ë
G_STMT_START
 { \

159 
	`g_log
 (
G_LOG_DOMAIN
, \

160 
G_LOG_LEVEL_ERROR
, \

161 
f‹m©
); \

163 } 
G_STMT_END


	)

165 
	#g_mesßge
(
f‹m©
...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

166 
G_LOG_LEVEL_MESSAGE
, \

167 
f‹m©
)

	)

168 
	#g_¸ôiˇl
(
f‹m©
...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

169 
G_LOG_LEVEL_CRITICAL
, \

170 
f‹m©
)

	)

171 
	#g_w¨nög
(
f‹m©
...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

172 
G_LOG_LEVEL_WARNING
, \

173 
f‹m©
)

	)

174 
	#g_debug
(
f‹m©
...Ë
	`g_log
 (
G_LOG_DOMAIN
, \

175 
G_LOG_LEVEL_DEBUG
, \

176 
f‹m©
)

	)

179 
	$g_îr‹
 (c⁄° 
gch¨
 *
f‹m©
,

182 
va_li°
 
¨gs
;

183 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

184 
	`g_logv
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_ERROR
, 
f‹m©
, 
¨gs
);

185 
	`va_íd
 (
¨gs
);

188 
	}
}

190 
	$g_mesßge
 (c⁄° 
gch¨
 *
f‹m©
,

193 
va_li°
 
¨gs
;

194 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

195 
	`g_logv
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_MESSAGE
, 
f‹m©
, 
¨gs
);

196 
	`va_íd
 (
¨gs
);

197 
	}
}

199 
	$g_¸ôiˇl
 (c⁄° 
gch¨
 *
f‹m©
,

202 
va_li°
 
¨gs
;

203 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

204 
	`g_logv
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_CRITICAL
, 
f‹m©
, 
¨gs
);

205 
	`va_íd
 (
¨gs
);

206 
	}
}

208 
	$g_w¨nög
 (c⁄° 
gch¨
 *
f‹m©
,

211 
va_li°
 
¨gs
;

212 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

213 
	`g_logv
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_WARNING
, 
f‹m©
, 
¨gs
);

214 
	`va_íd
 (
¨gs
);

215 
	}
}

217 
	$g_debug
 (c⁄° 
gch¨
 *
f‹m©
,

220 
va_li°
 
¨gs
;

221 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

222 
	`g_logv
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_DEBUG
, 
f‹m©
, 
¨gs
);

223 
	`va_íd
 (
¨gs
);

224 
	}
}

227 (*
	tGPrötFunc
Ë(c⁄° 
	tgch¨
 *
	t°rög
);

228 
	$g_¥öt
 (c⁄° 
gch¨
 *
f‹m©
,

229 ...Ë
	`G_GNUC_PRINTF
 (1, 2);

230 
GPrötFunc
 
	`g_£t_¥öt_h™dÀr
 (GPrötFun¯
func
);

231 
	$g_¥öãº
 (c⁄° 
gch¨
 *
f‹m©
,

232 ...Ë
	`G_GNUC_PRINTF
 (1, 2);

233 
GPrötFunc
 
	`g_£t_¥öãº_h™dÀr
 (GPrötFun¯
func
);

242 
	#g_w¨n_if_ªached
(Ëdÿ{ 
	`g_w¨n_mesßge
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 
NULL
); 
	}
} 0)

	)

243 
	#g_w¨n_if_Áû
(
ex¥
Ëdÿ{ 
	`G_LIKELY
 (expr) ; \

244 
	`g_w¨n_mesßge
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, #ex¥); } 0)

	)

246 #ifde‡
G_DISABLE_CHECKS


248 
	#g_ªtu∫_if_Áû
(
ex¥
Ë
G_STMT_START
{ ()0; }
G_STMT_END


	)

249 
	#g_ªtu∫_vÆ_if_Áû
(
ex¥
,
vÆ
Ë
G_STMT_START
{ ()0; }
G_STMT_END


	)

250 
	#g_ªtu∫_if_ªached
(Ë
G_STMT_START
{ ; }
G_STMT_END


	)

251 
	#g_ªtu∫_vÆ_if_ªached
(
vÆ
Ë
G_STMT_START
{  (vÆ); }
G_STMT_END


	)

255 #ifde‡
__GNUC__


257 
	#g_ªtu∫_if_Áû
(
ex¥
Ë
G_STMT_START
{ \

258 
	`G_LIKELY
(
ex¥
) { } \

260 
	`g_ªtu∫_if_Áû_w¨nög
 (
G_LOG_DOMAIN
, \

261 
__PRETTY_FUNCTION__
, \

264 }; }
G_STMT_END


	)

266 
	#g_ªtu∫_vÆ_if_Áû
(
ex¥
,
vÆ
Ë
G_STMT_START
{ \

267 
	`G_LIKELY
(
ex¥
) { } \

269 
	`g_ªtu∫_if_Áû_w¨nög
 (
G_LOG_DOMAIN
, \

270 
__PRETTY_FUNCTION__
, \

272  (
vÆ
); \

273 }; }
G_STMT_END


	)

275 
	#g_ªtu∫_if_ªached
(Ë
G_STMT_START
{ \

276 
	`g_log
 (
G_LOG_DOMAIN
, \

277 
G_LOG_LEVEL_CRITICAL
, \

279 
__FILE__
, \

280 
__LINE__
, \

281 
__PRETTY_FUNCTION__
); \

282 ; }
G_STMT_END


	)

284 
	#g_ªtu∫_vÆ_if_ªached
(
vÆ
Ë
G_STMT_START
{ \

285 
	`g_log
 (
G_LOG_DOMAIN
, \

286 
G_LOG_LEVEL_CRITICAL
, \

288 
__FILE__
, \

289 
__LINE__
, \

290 
__PRETTY_FUNCTION__
); \

291  (
vÆ
); }
G_STMT_END


	)

295 
	#g_ªtu∫_if_Áû
(
ex¥
Ë
G_STMT_START
{ \

296 i‡(
ex¥
) { } \

298 
	`g_log
 (
G_LOG_DOMAIN
, \

299 
G_LOG_LEVEL_CRITICAL
, \

301 
__FILE__
, \

302 
__LINE__
, \

305 }; }
G_STMT_END


	)

307 
	#g_ªtu∫_vÆ_if_Áû
(
ex¥
, 
vÆ
Ë
G_STMT_START
{ \

308 i‡(
ex¥
) { } \

310 
	`g_log
 (
G_LOG_DOMAIN
, \

311 
G_LOG_LEVEL_CRITICAL
, \

313 
__FILE__
, \

314 
__LINE__
, \

316  (
vÆ
); \

317 }; }
G_STMT_END


	)

319 
	#g_ªtu∫_if_ªached
(Ë
G_STMT_START
{ \

320 
	`g_log
 (
G_LOG_DOMAIN
, \

321 
G_LOG_LEVEL_CRITICAL
, \

323 
__FILE__
, \

324 
__LINE__
); \

325 ; }
G_STMT_END


	)

327 
	#g_ªtu∫_vÆ_if_ªached
(
vÆ
Ë
G_STMT_START
{ \

328 
	`g_log
 (
G_LOG_DOMAIN
, \

329 
G_LOG_LEVEL_CRITICAL
, \

331 
__FILE__
, \

332 
__LINE__
); \

333  (
vÆ
); }
G_STMT_END


	)

339 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gnode.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_NODE_H__


32 
	#__G_NODE_H__


	)

34 
	~<glib/gmem.h
>

36 
G_BEGIN_DECLS


38 
_GNode
 
	tGNode
;

43 
	mG_TRAVERSE_LEAVES
 = 1 << 0,

44 
	mG_TRAVERSE_NON_LEAVES
 = 1 << 1,

45 
	mG_TRAVERSE_ALL
 = 
G_TRAVERSE_LEAVES
 | 
G_TRAVERSE_NON_LEAVES
,

46 
	mG_TRAVERSE_MASK
 = 0x03,

47 
	mG_TRAVERSE_LEAFS
 = 
G_TRAVERSE_LEAVES
,

48 
	mG_TRAVERSE_NON_LEAFS
 = 
G_TRAVERSE_NON_LEAVES


49 } 
	tGTøvî£Fœgs
;

54 
	mG_IN_ORDER
,

55 
	mG_PRE_ORDER
,

56 
	mG_POST_ORDER
,

57 
	mG_LEVEL_ORDER


58 } 
	tGTøvî£Ty≥
;

60 
	$gboﬁón
 (*
	tGNodeTøvî£Func
Ë(
	tGNode
 *
	tnode
,

61 
	tgpoöãr
 
	td©a
);

62 (*
	tGNodeF‹óchFunc
Ë(
	tGNode
 *
	tnode
,

63 
	tgpoöãr
 
	td©a
);

77 
	$gpoöãr
 (*
	tGC›yFunc
Ë(
	tgc⁄°poöãr
 
	t§c
,

78 
	tgpoöãr
 
	td©a
);

82 
	s_GNode


84 
gpoöãr
 
d©a
;

85 
GNode
 *
√xt
;

86 
GNode
 *
¥ev
;

87 
GNode
 *
∑ª¡
;

88 
GNode
 *
chûdªn
;

100 
	#G_NODE_IS_ROOT
(
node
Ë(((
GNode
*Ë“ode))->
∑ª¡
 =
NULL
 && \

101 ((
GNode
*Ë(
node
))->
¥ev
 =
NULL
 && \

102 ((
GNode
*Ë(
node
))->
√xt
 =
NULL
)

	)

113 
	#G_NODE_IS_LEAF
(
node
Ë(((
GNode
*Ë“ode))->
chûdªn
 =
NULL
)

	)

115 
GNode
* 
	`g_node_√w
 (
gpoöãr
 
d©a
);

116 
	`g_node_de°roy
 (
GNode
 *
roŸ
);

117 
	`g_node_u∆ök
 (
GNode
 *
node
);

118 
GNode
* 
	`g_node_c›y_dìp
 (GNodê*
node
,

119 
GC›yFunc
 
c›y_func
,

120 
gpoöãr
 
d©a
);

121 
GNode
* 
	`g_node_c›y
 (GNodê*
node
);

122 
GNode
* 
	`g_node_ö£π
 (GNodê*
∑ª¡
,

123 
göt
 
posôi⁄
,

124 
GNode
 *
node
);

125 
GNode
* 
	`g_node_ö£π_bef‹e
 (GNodê*
∑ª¡
,

126 
GNode
 *
siblög
,

127 
GNode
 *
node
);

128 
GNode
* 
	`g_node_ö£π_a·î
 (GNodê*
∑ª¡
,

129 
GNode
 *
siblög
,

130 
GNode
 *
node
);

131 
GNode
* 
	`g_node_¥ïíd
 (GNodê*
∑ª¡
,

132 
GNode
 *
node
);

133 
guöt
 
	`g_node_n_nodes
 (
GNode
 *
roŸ
,

134 
GTøvî£Fœgs
 
Êags
);

135 
GNode
* 
	`g_node_gë_roŸ
 (GNodê*
node
);

136 
gboﬁón
 
	`g_node_is_™˚°‹
 (
GNode
 *
node
,

137 
GNode
 *
des˚nd™t
);

138 
guöt
 
	`g_node_dïth
 (
GNode
 *
node
);

139 
GNode
* 
	`g_node_föd
 (GNodê*
roŸ
,

140 
GTøvî£Ty≥
 
‹dî
,

141 
GTøvî£Fœgs
 
Êags
,

142 
gpoöãr
 
d©a
);

154 
	#g_node_≠≥nd
(
∑ª¡
, 
node
) \

155 
	`g_node_ö£π_bef‹e
 ((
∑ª¡
), 
NULL
, (
node
))

	)

168 
	#g_node_ö£π_d©a
(
∑ª¡
, 
posôi⁄
, 
d©a
) \

169 
	`g_node_ö£π
 ((
∑ª¡
), (
posôi⁄
), 
	`g_node_√w
 (
d©a
))

	)

181 
	#g_node_ö£π_d©a_bef‹e
(
∑ª¡
, 
siblög
, 
d©a
) \

182 
	`g_node_ö£π_bef‹e
 ((
∑ª¡
), (
siblög
), 
	`g_node_√w
 (
d©a
))

	)

193 
	#g_node_¥ïíd_d©a
(
∑ª¡
, 
d©a
) \

194 
	`g_node_¥ïíd
 ((
∑ª¡
), 
	`g_node_√w
 (
d©a
))

	)

205 
	#g_node_≠≥nd_d©a
(
∑ª¡
, 
d©a
) \

206 
	`g_node_ö£π_bef‹e
 ((
∑ª¡
), 
NULL
, 
	`g_node_√w
 (
d©a
))

	)

213 
	`g_node_åavî£
 (
GNode
 *
roŸ
,

214 
GTøvî£Ty≥
 
‹dî
,

215 
GTøvî£Fœgs
 
Êags
,

216 
göt
 
max_dïth
,

217 
GNodeTøvî£Func
 
func
,

218 
gpoöãr
 
d©a
);

225 
guöt
 
	`g_node_max_height
 (
GNode
 *
roŸ
);

227 
	`g_node_chûdªn_f‹óch
 (
GNode
 *
node
,

228 
GTøvî£Fœgs
 
Êags
,

229 
GNodeF‹óchFunc
 
func
,

230 
gpoöãr
 
d©a
);

231 
	`g_node_ªvî£_chûdªn
 (
GNode
 *
node
);

232 
guöt
 
	`g_node_n_chûdªn
 (
GNode
 *
node
);

233 
GNode
* 
	`g_node_¡h_chûd
 (GNodê*
node
,

234 
guöt
 
n
);

235 
GNode
* 
	`g_node_œ°_chûd
 (GNodê*
node
);

236 
GNode
* 
	`g_node_föd_chûd
 (GNodê*
node
,

237 
GTøvî£Fœgs
 
Êags
,

238 
gpoöãr
 
d©a
);

239 
göt
 
	`g_node_chûd_posôi⁄
 (
GNode
 *
node
,

240 
GNode
 *
chûd
);

241 
göt
 
	`g_node_chûd_ödex
 (
GNode
 *
node
,

242 
gpoöãr
 
d©a
);

244 
GNode
* 
	`g_node_fú°_siblög
 (GNodê*
node
);

245 
GNode
* 
	`g_node_œ°_siblög
 (GNodê*
node
);

255 
	#g_node_¥ev_siblög
(
node
) ((node) ? \

256 ((
GNode
*Ë(
node
))->
¥ev
 : 
NULL
)

	)

266 
	#g_node_√xt_siblög
(
node
) ((node) ? \

267 ((
GNode
*Ë(
node
))->
√xt
 : 
NULL
)

	)

278 
	#g_node_fú°_chûd
(
node
) ((node) ? \

279 ((
GNode
*Ë(
node
))->
chûdªn
 : 
NULL
)

	)

281 #i‚de‡
G_DISABLE_DEPRECATED


282 
	`g_node_push_Æloˇt‹
 (
gpoöãr
 
dummy
);

283 
	`g_node_p›_Æloˇt‹
 ();

286 
G_END_DECLS


	@/usr/include/glib-2.0/glib/goption.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_OPTION_H__


26 
	#__G_OPTION_H__


	)

28 
	~<glib/gîr‹.h
>

29 
	~<glib/gqu¨k.h
>

31 
G_BEGIN_DECLS


33 
_GO±i⁄C⁄ãxt
 
	tGO±i⁄C⁄ãxt
;

34 
_GO±i⁄Group
 
	tGO±i⁄Group
;

35 
_GO±i⁄E¡ry
 
	tGO±i⁄E¡ry
;

39 
	mG_OPTION_FLAG_HIDDEN
 = 1 << 0,

40 
	mG_OPTION_FLAG_IN_MAIN
 = 1 << 1,

41 
	mG_OPTION_FLAG_REVERSE
 = 1 << 2,

42 
	mG_OPTION_FLAG_NO_ARG
 = 1 << 3,

43 
	mG_OPTION_FLAG_FILENAME
 = 1 << 4,

44 
	mG_OPTION_FLAG_OPTIONAL_ARG
 = 1 << 5,

45 
	mG_OPTION_FLAG_NOALIAS
 = 1 << 6

46 } 
	tGO±i⁄Fœgs
;

50 
	mG_OPTION_ARG_NONE
,

51 
	mG_OPTION_ARG_STRING
,

52 
	mG_OPTION_ARG_INT
,

53 
	mG_OPTION_ARG_CALLBACK
,

54 
	mG_OPTION_ARG_FILENAME
,

55 
	mG_OPTION_ARG_STRING_ARRAY
,

56 
	mG_OPTION_ARG_FILENAME_ARRAY
,

57 
	mG_OPTION_ARG_DOUBLE
,

58 
	mG_OPTION_ARG_INT64


59 } 
	tGO±i⁄Arg
;

61 
	$gboﬁón
 (*
	tGO±i⁄ArgFunc
Ë(c⁄° 
	tgch¨
 *
	t›ti⁄_«me
,

62 c⁄° 
	tgch¨
 *
	tvÆue
,

63 
	tgpoöãr
 
	td©a
,

64 
	tGEº‹
 **
	tîr‹
);

66 
	$gboﬁón
 (*
	tGO±i⁄P¨£Func
Ë(
	tGO±i⁄C⁄ãxt
 *
	tc⁄ãxt
,

67 
	tGO±i⁄Group
 *
	tgroup
,

68 
	tgpoöãr
 
	td©a
,

69 
	tGEº‹
 **
	tîr‹
);

71 (*
	tGO±i⁄Eº‹Func
Ë(
	tGO±i⁄C⁄ãxt
 *
	tc⁄ãxt
,

72 
	tGO±i⁄Group
 *
	tgroup
,

73 
	tgpoöãr
 
	td©a
,

74 
	tGEº‹
 **
	tîr‹
);

76 
	#G_OPTION_ERROR
 (
	`g_›ti⁄_îr‹_qu¨k
 ())

	)

80 
G_OPTION_ERROR_UNKNOWN_OPTION
,

81 
G_OPTION_ERROR_BAD_VALUE
,

82 
G_OPTION_ERROR_FAILED


83 } 
	tGO±i⁄Eº‹
;

85 
GQu¨k
 
	`g_›ti⁄_îr‹_qu¨k
 ();

88 
	s_GO±i⁄E¡ry


90 c⁄° 
gch¨
 *
l⁄g_«me
;

91 
gch¨
 
sh‹t_«me
;

92 
göt
 
Êags
;

94 
GO±i⁄Arg
 
¨g
;

95 
gpoöãr
 
¨g_d©a
;

97 c⁄° 
gch¨
 *
des¸ùti⁄
;

98 c⁄° 
gch¨
 *
¨g_des¸ùti⁄
;

101 
	#G_OPTION_REMAINING
 ""

	)

103 
GO±i⁄C⁄ãxt
 *
	`g_›ti⁄_c⁄ãxt_√w
 (c⁄° 
gch¨
 *
∑ømëî_°rög
);

104 
	`g_›ti⁄_c⁄ãxt_£t_summ¨y
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

105 c⁄° 
gch¨
 *
summ¨y
);

106 
G_CONST_RETURN
 
gch¨
 *
	`g_›ti⁄_c⁄ãxt_gë_summ¨y
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
);

107 
	`g_›ti⁄_c⁄ãxt_£t_des¸ùti⁄
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

108 c⁄° 
gch¨
 *
des¸ùti⁄
);

109 
G_CONST_RETURN
 
gch¨
 *
	`g_›ti⁄_c⁄ãxt_gë_des¸ùti⁄
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
);

110 
	`g_›ti⁄_c⁄ãxt_‰ì
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
);

111 
	`g_›ti⁄_c⁄ãxt_£t_hñp_íabÀd
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

112 
gboﬁón
 
hñp_íabÀd
);

113 
gboﬁón
 
	`g_›ti⁄_c⁄ãxt_gë_hñp_íabÀd
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
);

114 
	`g_›ti⁄_c⁄ãxt_£t_ign‹e_unknown_›ti⁄s
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

115 
gboﬁón
 
ign‹e_unknown
);

116 
gboﬁón
 
	`g_›ti⁄_c⁄ãxt_gë_ign‹e_unknown_›ti⁄s
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
);

118 
	`g_›ti⁄_c⁄ãxt_add_maö_íåõs
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

119 c⁄° 
GO±i⁄E¡ry
 *
íåõs
,

120 c⁄° 
gch¨
 *
å™¶©i⁄_domaö
);

121 
gboﬁón
 
	`g_›ti⁄_c⁄ãxt_∑r£
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

122 
göt
 *
¨gc
,

123 
gch¨
 ***
¨gv
,

124 
GEº‹
 **
îr‹
);

125 
	`g_›ti⁄_c⁄ãxt_£t_å™¶©e_func
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

126 
GTøn¶©eFunc
 
func
,

127 
gpoöãr
 
d©a
,

128 
GDe°royNŸify
 
de°roy_nŸify
);

129 
	`g_›ti⁄_c⁄ãxt_£t_å™¶©i⁄_domaö
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

130 c⁄° 
gch¨
 *
domaö
);

132 
	`g_›ti⁄_c⁄ãxt_add_group
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

133 
GO±i⁄Group
 *
group
);

134 
	`g_›ti⁄_c⁄ãxt_£t_maö_group
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

135 
GO±i⁄Group
 *
group
);

136 
GO±i⁄Group
 *
	`g_›ti⁄_c⁄ãxt_gë_maö_group
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
);

137 
gch¨
 *
	`g_›ti⁄_c⁄ãxt_gë_hñp
 (
GO±i⁄C⁄ãxt
 *
c⁄ãxt
,

138 
gboﬁón
 
maö_hñp
,

139 
GO±i⁄Group
 *
group
);

141 
GO±i⁄Group
 *
	`g_›ti⁄_group_√w
 (c⁄° 
gch¨
 *
«me
,

142 c⁄° 
gch¨
 *
des¸ùti⁄
,

143 c⁄° 
gch¨
 *
hñp_des¸ùti⁄
,

144 
gpoöãr
 
u£r_d©a
,

145 
GDe°royNŸify
 
de°roy
);

146 
	`g_›ti⁄_group_£t_∑r£_hooks
 (
GO±i⁄Group
 *
group
,

147 
GO±i⁄P¨£Func
 
¥e_∑r£_func
,

148 
GO±i⁄P¨£Func
 
po°_∑r£_func
);

149 
	`g_›ti⁄_group_£t_îr‹_hook
 (
GO±i⁄Group
 *
group
,

150 
GO±i⁄Eº‹Func
 
îr‹_func
);

151 
	`g_›ti⁄_group_‰ì
 (
GO±i⁄Group
 *
group
);

152 
	`g_›ti⁄_group_add_íåõs
 (
GO±i⁄Group
 *
group
,

153 c⁄° 
GO±i⁄E¡ry
 *
íåõs
);

154 
	`g_›ti⁄_group_£t_å™¶©e_func
 (
GO±i⁄Group
 *
group
,

155 
GTøn¶©eFunc
 
func
,

156 
gpoöãr
 
d©a
,

157 
GDe°royNŸify
 
de°roy_nŸify
);

158 
	`g_›ti⁄_group_£t_å™¶©i⁄_domaö
 (
GO±i⁄Group
 *
group
,

159 c⁄° 
gch¨
 *
domaö
);

161 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gpattern.h

20 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

24 #i‚de‡
__G_PATTERN_H__


25 
	#__G_PATTERN_H__


	)

27 
	~<glib/gty≥s.h
>

29 
G_BEGIN_DECLS


32 
_GP©ã∫S≥c
 
	tGP©ã∫S≥c
;

34 
GP©ã∫S≥c
* 
g_∑âîn_•ec_√w
 (c⁄° 
gch¨
 *
∑âîn
);

35 
g_∑âîn_•ec_‰ì
 (
GP©ã∫S≥c
 *
p•ec
);

36 
gboﬁón
 
g_∑âîn_•ec_equÆ
 (
GP©ã∫S≥c
 *
p•ec1
,

37 
GP©ã∫S≥c
 *
p•ec2
);

38 
gboﬁón
 
g_∑âîn_m©ch
 (
GP©ã∫S≥c
 *
p•ec
,

39 
guöt
 
°rög_Àngth
,

40 c⁄° 
gch¨
 *
°rög
,

41 c⁄° 
gch¨
 *
°rög_ªvî£d
);

42 
gboﬁón
 
g_∑âîn_m©ch_°rög
 (
GP©ã∫S≥c
 *
p•ec
,

43 c⁄° 
gch¨
 *
°rög
);

44 
gboﬁón
 
g_∑âîn_m©ch_sim∂e
 (c⁄° 
gch¨
 *
∑âîn
,

45 c⁄° 
gch¨
 *
°rög
);

47 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gpoll.h

20 #i‡!
deföed
 (
__GLIB_H_INSIDE__
Ë&& !deföed (
__G_MAIN_H__
Ë&& !deföed (
GLIB_COMPILATION
)

24 #i‚de‡
__G_POLL_H__


25 
	#__G_POLL_H__


	)

27 
	~<glib/gty≥s.h
>

29 
G_BEGIN_DECLS


61 
_GPﬁlFD
 
	tGPﬁlFD
;

62 
	$göt
 (*
	tGPﬁlFunc
Ë(
	tGPﬁlFD
 *
	tufds
,

63 
	tguöt
 
	tnfsd
,

64 
	tgöt
 
	ttimeout_
);

66 
	s_GPﬁlFD


68 #i‡
	`deföed
 (
G_OS_WIN32
Ë&& 
GLIB_SIZEOF_VOID_P
 == 8

69 
göt64
 
fd
;

71 
göt
 
fd
;

73 
gush‹t
 
evíts
;

74 
gush‹t
 
ªvíts
;

77 #ifde‡
G_OS_WIN32


78 #i‡
GLIB_SIZEOF_VOID_P
 == 8

79 
	#G_POLLFD_FORMAT
 "%#I64x"

	)

81 
	#G_POLLFD_FORMAT
 "%#x"

	)

84 
	#G_POLLFD_FORMAT
 "%d"

	)

87 
göt
 
	`g_pﬁl
 (
GPﬁlFD
 *
fds
,

88 
guöt
 
nfds
,

89 
göt
 
timeout
);

91 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gprimes.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_PRIMES_H__


32 
	#__G_PRIMES_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


47 
guöt
 
	$g_•a˚d_¥imes_˛o£°
 (
guöt
 
num
Ë
G_GNUC_CONST
;

49 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gqsort.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_QSORT_H__


32 
	#__G_QSORT_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


38 
g_qs‹t_wôh_d©a
 (
gc⁄°poöãr
 
pba£
,

39 
göt
 
tŸÆ_ñems
,

40 
gsize
 
size
,

41 
GCom∑ªD©aFunc
 
com∑ª_func
,

42 
gpoöãr
 
u£r_d©a
);

44 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gquark.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_QUARK_H__


32 
	#__G_QUARK_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


38 
guöt32
 
	tGQu¨k
;

42 
GQu¨k
 
g_qu¨k_åy_°rög
 (c⁄° 
gch¨
 *
°rög
);

43 
GQu¨k
 
g_qu¨k_‰om_°©ic_°rög
 (c⁄° 
gch¨
 *
°rög
);

44 
GQu¨k
 
g_qu¨k_‰om_°rög
 (c⁄° 
gch¨
 *
°rög
);

45 
G_CONST_RETURN
 
gch¨
* 
	$g_qu¨k_to_°rög
 (
GQu¨k
 
qu¨k
Ë
G_GNUC_CONST
;

47 
G_CONST_RETURN
 
gch¨
* 
	`g_öã∫_°rög
 (c⁄° gch¨ *
°rög
);

48 
G_CONST_RETURN
 
gch¨
* 
	`g_öã∫_°©ic_°rög
 (c⁄° gch¨ *
°rög
);

50 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gqueue.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_QUEUE_H__


32 
	#__G_QUEUE_H__


	)

34 
	~<glib/gli°.h
>

36 
G_BEGIN_DECLS


38 
_GQueue
 
	tGQueue
;

40 
	s_GQueue


42 
GLi°
 *
	mhód
;

43 
GLi°
 *
	mèû
;

44 
guöt
 
	mÀngth
;

47 
	#G_QUEUE_INIT
 { 
NULL
, NULL, 0 }

	)

51 
GQueue
* 
g_queue_√w
 ();

52 
g_queue_‰ì
 (
GQueue
 *
queue
);

53 
g_queue_öô
 (
GQueue
 *
queue
);

54 
g_queue_˛ór
 (
GQueue
 *
queue
);

55 
gboﬁón
 
g_queue_is_em±y
 (
GQueue
 *
queue
);

56 
guöt
 
g_queue_gë_Àngth
 (
GQueue
 *
queue
);

57 
g_queue_ªvî£
 (
GQueue
 *
queue
);

58 
GQueue
 * 
g_queue_c›y
 (GQueuê*
queue
);

59 
g_queue_f‹óch
 (
GQueue
 *
queue
,

60 
GFunc
 
func
,

61 
gpoöãr
 
u£r_d©a
);

62 
GLi°
 * 
g_queue_föd
 (
GQueue
 *
queue
,

63 
gc⁄°poöãr
 
d©a
);

64 
GLi°
 * 
g_queue_föd_cu°om
 (
GQueue
 *
queue
,

65 
gc⁄°poöãr
 
d©a
,

66 
GCom∑ªFunc
 
func
);

67 
g_queue_s‹t
 (
GQueue
 *
queue
,

68 
GCom∑ªD©aFunc
 
com∑ª_func
,

69 
gpoöãr
 
u£r_d©a
);

71 
g_queue_push_hód
 (
GQueue
 *
queue
,

72 
gpoöãr
 
d©a
);

73 
g_queue_push_èû
 (
GQueue
 *
queue
,

74 
gpoöãr
 
d©a
);

75 
g_queue_push_¡h
 (
GQueue
 *
queue
,

76 
gpoöãr
 
d©a
,

77 
göt
 
n
);

78 
gpoöãr
 
g_queue_p›_hód
 (
GQueue
 *
queue
);

79 
gpoöãr
 
g_queue_p›_èû
 (
GQueue
 *
queue
);

80 
gpoöãr
 
g_queue_p›_¡h
 (
GQueue
 *
queue
,

81 
guöt
 
n
);

82 
gpoöãr
 
g_queue_≥ek_hód
 (
GQueue
 *
queue
);

83 
gpoöãr
 
g_queue_≥ek_èû
 (
GQueue
 *
queue
);

84 
gpoöãr
 
g_queue_≥ek_¡h
 (
GQueue
 *
queue
,

85 
guöt
 
n
);

86 
göt
 
g_queue_ödex
 (
GQueue
 *
queue
,

87 
gc⁄°poöãr
 
d©a
);

88 
g_queue_ªmove
 (
GQueue
 *
queue
,

89 
gc⁄°poöãr
 
d©a
);

90 
g_queue_ªmove_Æl
 (
GQueue
 *
queue
,

91 
gc⁄°poöãr
 
d©a
);

92 
g_queue_ö£π_bef‹e
 (
GQueue
 *
queue
,

93 
GLi°
 *
siblög
,

94 
gpoöãr
 
d©a
);

95 
g_queue_ö£π_a·î
 (
GQueue
 *
queue
,

96 
GLi°
 *
siblög
,

97 
gpoöãr
 
d©a
);

98 
g_queue_ö£π_s‹ãd
 (
GQueue
 *
queue
,

99 
gpoöãr
 
d©a
,

100 
GCom∑ªD©aFunc
 
func
,

101 
gpoöãr
 
u£r_d©a
);

103 
g_queue_push_hód_lök
 (
GQueue
 *
queue
,

104 
GLi°
 *
lök_
);

105 
g_queue_push_èû_lök
 (
GQueue
 *
queue
,

106 
GLi°
 *
lök_
);

107 
g_queue_push_¡h_lök
 (
GQueue
 *
queue
,

108 
göt
 
n
,

109 
GLi°
 *
lök_
);

110 
GLi°
* 
g_queue_p›_hód_lök
 (
GQueue
 *
queue
);

111 
GLi°
* 
g_queue_p›_èû_lök
 (
GQueue
 *
queue
);

112 
GLi°
* 
g_queue_p›_¡h_lök
 (
GQueue
 *
queue
,

113 
guöt
 
n
);

114 
GLi°
* 
g_queue_≥ek_hód_lök
 (
GQueue
 *
queue
);

115 
GLi°
* 
g_queue_≥ek_èû_lök
 (
GQueue
 *
queue
);

116 
GLi°
* 
g_queue_≥ek_¡h_lök
 (
GQueue
 *
queue
,

117 
guöt
 
n
);

118 
göt
 
g_queue_lök_ödex
 (
GQueue
 *
queue
,

119 
GLi°
 *
lök_
);

120 
g_queue_u∆ök
 (
GQueue
 *
queue
,

121 
GLi°
 *
lök_
);

122 
g_queue_dñëe_lök
 (
GQueue
 *
queue
,

123 
GLi°
 *
lök_
);

125 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/grand.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_RAND_H__


32 
	#__G_RAND_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


38 
_GR™d
 
	tGR™d
;

49 
GR™d
* 
g_ønd_√w_wôh_£ed
 (
guöt32
 
£ed
);

50 
GR™d
* 
g_ønd_√w_wôh_£ed_¨øy
 (c⁄° 
guöt32
 *
£ed
,

51 
guöt
 
£ed_Àngth
);

52 
GR™d
* 
g_ønd_√w
 ();

53 
g_ønd_‰ì
 (
GR™d
 *
ønd_
);

54 
GR™d
* 
g_ønd_c›y
 (GR™d *
ønd_
);

55 
g_ønd_£t_£ed
 (
GR™d
 *
ønd_
,

56 
guöt32
 
£ed
);

57 
g_ønd_£t_£ed_¨øy
 (
GR™d
 *
ønd_
,

58 c⁄° 
guöt32
 *
£ed
,

59 
guöt
 
£ed_Àngth
);

61 
	#g_ønd_boﬁón
(
ønd_
Ë((
	`g_ønd_öt
 (ønd_Ë& (1 << 15)Ë!0)

	)

63 
guöt32
 
g_ønd_öt
 (
GR™d
 *
ønd_
);

64 
göt32
 
g_ønd_öt_ønge
 (
GR™d
 *
ønd_
,

65 
göt32
 
begö
,

66 
göt32
 
íd
);

67 
gdoubÀ
 
g_ønd_doubÀ
 (
GR™d
 *
ønd_
);

68 
gdoubÀ
 
g_ønd_doubÀ_ønge
 (
GR™d
 *
ønd_
,

69 
gdoubÀ
 
begö
,

70 
gdoubÀ
 
íd
);

71 
g_øndom_£t_£ed
 (
guöt32
 
£ed
);

73 
	#g_øndom_boﬁón
(Ë((
	`g_øndom_öt
 (Ë& (1 << 15)Ë!0)

	)

75 
guöt32
 
g_øndom_öt
 ();

76 
göt32
 
g_øndom_öt_ønge
 (göt32 
begö
,

77 
göt32
 
íd
);

78 
gdoubÀ
 
g_øndom_doubÀ
 ();

79 
gdoubÀ
 
g_øndom_doubÀ_ønge
 (gdoubÀ 
begö
,

80 
gdoubÀ
 
íd
);

83 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gregex.h

22 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

26 #i‚de‡
__G_REGEX_H__


27 
	#__G_REGEX_H__


	)

29 
	~<glib/gîr‹.h
>

30 
	~<glib/g°rög.h
>

32 
G_BEGIN_DECLS


36 
	mG_REGEX_ERROR_COMPILE
,

37 
	mG_REGEX_ERROR_OPTIMIZE
,

38 
	mG_REGEX_ERROR_REPLACE
,

39 
	mG_REGEX_ERROR_MATCH
,

40 
	mG_REGEX_ERROR_INTERNAL
,

43 
	mG_REGEX_ERROR_STRAY_BACKSLASH
 = 101,

44 
	mG_REGEX_ERROR_MISSING_CONTROL_CHAR
 = 102,

45 
	mG_REGEX_ERROR_UNRECOGNIZED_ESCAPE
 = 103,

46 
	mG_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER
 = 104,

47 
	mG_REGEX_ERROR_QUANTIFIER_TOO_BIG
 = 105,

48 
	mG_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS
 = 106,

49 
	mG_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS
 = 107,

50 
	mG_REGEX_ERROR_RANGE_OUT_OF_ORDER
 = 108,

51 
	mG_REGEX_ERROR_NOTHING_TO_REPEAT
 = 109,

52 
	mG_REGEX_ERROR_UNRECOGNIZED_CHARACTER
 = 112,

53 
	mG_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS
 = 113,

54 
	mG_REGEX_ERROR_UNMATCHED_PARENTHESIS
 = 114,

55 
	mG_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE
 = 115,

56 
	mG_REGEX_ERROR_UNTERMINATED_COMMENT
 = 118,

57 
	mG_REGEX_ERROR_EXPRESSION_TOO_LARGE
 = 120,

58 
	mG_REGEX_ERROR_MEMORY_ERROR
 = 121,

59 
	mG_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND
 = 125,

60 
	mG_REGEX_ERROR_MALFORMED_CONDITION
 = 126,

61 
	mG_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES
 = 127,

62 
	mG_REGEX_ERROR_ASSERTION_EXPECTED
 = 128,

63 
	mG_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME
 = 130,

64 
	mG_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED
 = 131,

65 
	mG_REGEX_ERROR_HEX_CODE_TOO_LARGE
 = 134,

66 
	mG_REGEX_ERROR_INVALID_CONDITION
 = 135,

67 
	mG_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND
 = 136,

68 
	mG_REGEX_ERROR_INFINITE_LOOP
 = 140,

69 
	mG_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR
 = 142,

70 
	mG_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME
 = 143,

71 
	mG_REGEX_ERROR_MALFORMED_PROPERTY
 = 146,

72 
	mG_REGEX_ERROR_UNKNOWN_PROPERTY
 = 147,

73 
	mG_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG
 = 148,

74 
	mG_REGEX_ERROR_TOO_MANY_SUBPATTERNS
 = 149,

75 
	mG_REGEX_ERROR_INVALID_OCTAL_VALUE
 = 151,

76 
	mG_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE
 = 154,

77 
	mG_REGEX_ERROR_DEFINE_REPETION
 = 155,

78 
	mG_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS
 = 156,

79 
	mG_REGEX_ERROR_MISSING_BACK_REFERENCE
 = 157

80 } 
	tGRegexEº‹
;

82 
	#G_REGEX_ERROR
 
	`g_ªgex_îr‹_qu¨k
 ()

	)

84 
GQu¨k
 
g_ªgex_îr‹_qu¨k
 ();

90 
	mG_REGEX_CASELESS
 = 1 << 0,

91 
	mG_REGEX_MULTILINE
 = 1 << 1,

92 
	mG_REGEX_DOTALL
 = 1 << 2,

93 
	mG_REGEX_EXTENDED
 = 1 << 3,

94 
	mG_REGEX_ANCHORED
 = 1 << 4,

95 
	mG_REGEX_DOLLAR_ENDONLY
 = 1 << 5,

96 
	mG_REGEX_UNGREEDY
 = 1 << 9,

97 
	mG_REGEX_RAW
 = 1 << 11,

98 
	mG_REGEX_NO_AUTO_CAPTURE
 = 1 << 12,

99 
	mG_REGEX_OPTIMIZE
 = 1 << 13,

100 
	mG_REGEX_DUPNAMES
 = 1 << 19,

101 
	mG_REGEX_NEWLINE_CR
 = 1 << 20,

102 
	mG_REGEX_NEWLINE_LF
 = 1 << 21,

103 
	mG_REGEX_NEWLINE_CRLF
 = 
G_REGEX_NEWLINE_CR
 | 
G_REGEX_NEWLINE_LF


104 } 
	tGRegexCompûeFœgs
;

110 
	mG_REGEX_MATCH_ANCHORED
 = 1 << 4,

111 
	mG_REGEX_MATCH_NOTBOL
 = 1 << 7,

112 
	mG_REGEX_MATCH_NOTEOL
 = 1 << 8,

113 
	mG_REGEX_MATCH_NOTEMPTY
 = 1 << 10,

114 
	mG_REGEX_MATCH_PARTIAL
 = 1 << 15,

115 
	mG_REGEX_MATCH_NEWLINE_CR
 = 1 << 20,

116 
	mG_REGEX_MATCH_NEWLINE_LF
 = 1 << 21,

117 
	mG_REGEX_MATCH_NEWLINE_CRLF
 = 
G_REGEX_MATCH_NEWLINE_CR
 | 
G_REGEX_MATCH_NEWLINE_LF
,

118 
	mG_REGEX_MATCH_NEWLINE_ANY
 = 1 << 22

119 } 
	tGRegexM©chFœgs
;

121 
_GRegex
 
	tGRegex
;

122 
_GM©chInfo
 
	tGM©chInfo
;

124 
	$gboﬁón
 (*
	tGRegexEvÆCÆlback
Ë(c⁄° 
	tGM©chInfo
 *
	tm©ch_öfo
,

125 
	tGSåög
 *
	tªsu…
,

126 
	tgpoöãr
 
	tu£r_d©a
);

129 
GRegex
 *
	`g_ªgex_√w
 (c⁄° 
gch¨
 *
∑âîn
,

130 
GRegexCompûeFœgs
 
compûe_›ti⁄s
,

131 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

132 
GEº‹
 **
îr‹
);

133 
GRegex
 *
	`g_ªgex_ªf
 (GRegex *
ªgex
);

134 
	`g_ªgex_uƒef
 (
GRegex
 *
ªgex
);

135 c⁄° 
gch¨
 *
	`g_ªgex_gë_∑âîn
 (c⁄° 
GRegex
 *
ªgex
);

136 
göt
 
	`g_ªgex_gë_max_backªf
 (c⁄° 
GRegex
 *
ªgex
);

137 
göt
 
	`g_ªgex_gë_ˇ±uª_cou¡
 (c⁄° 
GRegex
 *
ªgex
);

138 
göt
 
	`g_ªgex_gë_°rög_numbî
 (c⁄° 
GRegex
 *
ªgex
,

139 c⁄° 
gch¨
 *
«me
);

140 
gch¨
 *
	`g_ªgex_esˇ≥_°rög
 (c⁄° gch¨ *
°rög
,

141 
göt
 
Àngth
);

144 
gboﬁón
 
	`g_ªgex_m©ch_sim∂e
 (c⁄° 
gch¨
 *
∑âîn
,

145 c⁄° 
gch¨
 *
°rög
,

146 
GRegexCompûeFœgs
 
compûe_›ti⁄s
,

147 
GRegexM©chFœgs
 
m©ch_›ti⁄s
);

148 
gboﬁón
 
	`g_ªgex_m©ch
 (c⁄° 
GRegex
 *
ªgex
,

149 c⁄° 
gch¨
 *
°rög
,

150 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

151 
GM©chInfo
 **
m©ch_öfo
);

152 
gboﬁón
 
	`g_ªgex_m©ch_fuŒ
 (c⁄° 
GRegex
 *
ªgex
,

153 c⁄° 
gch¨
 *
°rög
,

154 
gssize
 
°rög_Àn
,

155 
göt
 
°¨t_posôi⁄
,

156 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

157 
GM©chInfo
 **
m©ch_öfo
,

158 
GEº‹
 **
îr‹
);

159 
gboﬁón
 
	`g_ªgex_m©ch_Æl
 (c⁄° 
GRegex
 *
ªgex
,

160 c⁄° 
gch¨
 *
°rög
,

161 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

162 
GM©chInfo
 **
m©ch_öfo
);

163 
gboﬁón
 
	`g_ªgex_m©ch_Æl_fuŒ
 (c⁄° 
GRegex
 *
ªgex
,

164 c⁄° 
gch¨
 *
°rög
,

165 
gssize
 
°rög_Àn
,

166 
göt
 
°¨t_posôi⁄
,

167 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

168 
GM©chInfo
 **
m©ch_öfo
,

169 
GEº‹
 **
îr‹
);

172 
gch¨
 **
	`g_ªgex_•lô_sim∂e
 (c⁄° gch¨ *
∑âîn
,

173 c⁄° 
gch¨
 *
°rög
,

174 
GRegexCompûeFœgs
 
compûe_›ti⁄s
,

175 
GRegexM©chFœgs
 
m©ch_›ti⁄s
);

176 
gch¨
 **
	`g_ªgex_•lô
 (c⁄° 
GRegex
 *
ªgex
,

177 c⁄° 
gch¨
 *
°rög
,

178 
GRegexM©chFœgs
 
m©ch_›ti⁄s
);

179 
gch¨
 **
	`g_ªgex_•lô_fuŒ
 (c⁄° 
GRegex
 *
ªgex
,

180 c⁄° 
gch¨
 *
°rög
,

181 
gssize
 
°rög_Àn
,

182 
göt
 
°¨t_posôi⁄
,

183 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

184 
göt
 
max_tokís
,

185 
GEº‹
 **
îr‹
);

188 
gch¨
 *
	`g_ªgex_ª∂a˚
 (c⁄° 
GRegex
 *
ªgex
,

189 c⁄° 
gch¨
 *
°rög
,

190 
gssize
 
°rög_Àn
,

191 
göt
 
°¨t_posôi⁄
,

192 c⁄° 
gch¨
 *
ª∂a˚mít
,

193 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

194 
GEº‹
 **
îr‹
);

195 
gch¨
 *
	`g_ªgex_ª∂a˚_lôîÆ
 (c⁄° 
GRegex
 *
ªgex
,

196 c⁄° 
gch¨
 *
°rög
,

197 
gssize
 
°rög_Àn
,

198 
göt
 
°¨t_posôi⁄
,

199 c⁄° 
gch¨
 *
ª∂a˚mít
,

200 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

201 
GEº‹
 **
îr‹
);

202 
gch¨
 *
	`g_ªgex_ª∂a˚_evÆ
 (c⁄° 
GRegex
 *
ªgex
,

203 c⁄° 
gch¨
 *
°rög
,

204 
gssize
 
°rög_Àn
,

205 
göt
 
°¨t_posôi⁄
,

206 
GRegexM©chFœgs
 
m©ch_›ti⁄s
,

207 
GRegexEvÆCÆlback
 
evÆ
,

208 
gpoöãr
 
u£r_d©a
,

209 
GEº‹
 **
îr‹
);

210 
gboﬁón
 
	`g_ªgex_check_ª∂a˚mít
 (c⁄° 
gch¨
 *
ª∂a˚mít
,

211 
gboﬁón
 *
has_ª„ªn˚s
,

212 
GEº‹
 **
îr‹
);

215 
GRegex
 *
	`g_m©ch_öfo_gë_ªgex
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
);

216 c⁄° 
gch¨
 *
	`g_m©ch_öfo_gë_°rög
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
);

218 
	`g_m©ch_öfo_‰ì
 (
GM©chInfo
 *
m©ch_öfo
);

219 
gboﬁón
 
	`g_m©ch_öfo_√xt
 (
GM©chInfo
 *
m©ch_öfo
,

220 
GEº‹
 **
îr‹
);

221 
gboﬁón
 
	`g_m©ch_öfo_m©ches
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
);

222 
göt
 
	`g_m©ch_öfo_gë_m©ch_cou¡
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
);

223 
gboﬁón
 
	`g_m©ch_öfo_is_∑πül_m©ch
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
);

224 
gch¨
 *
	`g_m©ch_öfo_ex∑nd_ª„ªn˚s
(c⁄° 
GM©chInfo
 *
m©ch_öfo
,

225 c⁄° 
gch¨
 *
°rög_to_ex∑nd
,

226 
GEº‹
 **
îr‹
);

227 
gch¨
 *
	`g_m©ch_öfo_„tch
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
,

228 
göt
 
m©ch_num
);

229 
gboﬁón
 
	`g_m©ch_öfo_„tch_pos
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
,

230 
göt
 
m©ch_num
,

231 
göt
 *
°¨t_pos
,

232 
göt
 *
íd_pos
);

233 
gch¨
 *
	`g_m©ch_öfo_„tch_«med
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
,

234 c⁄° 
gch¨
 *
«me
);

235 
gboﬁón
 
	`g_m©ch_öfo_„tch_«med_pos
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
,

236 c⁄° 
gch¨
 *
«me
,

237 
göt
 *
°¨t_pos
,

238 
göt
 *
íd_pos
);

239 
gch¨
 **
	`g_m©ch_öfo_„tch_Æl
 (c⁄° 
GM©chInfo
 *
m©ch_öfo
);

241 
G_END_DECLS


	@/usr/include/glib-2.0/glib/grel.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_REL_H__


32 
	#__G_REL_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


38 
_GRñ©i⁄
 
	tGRñ©i⁄
;

39 
_GTu∂es
 
	tGTu∂es
;

41 
	s_GTu∂es


43 
guöt
 
	mÀn
;

69 
GRñ©i⁄
* 
g_ªœti⁄_√w
 (
göt
 
fõlds
);

70 
g_ªœti⁄_de°roy
 (
GRñ©i⁄
 *
ªœti⁄
);

71 
g_ªœti⁄_ödex
 (
GRñ©i⁄
 *
ªœti⁄
,

72 
göt
 
fõld
,

73 
GHashFunc
 
hash_func
,

74 
GEquÆFunc
 
key_equÆ_func
);

75 
g_ªœti⁄_ö£π
 (
GRñ©i⁄
 *
ªœti⁄
,

77 
göt
 
g_ªœti⁄_dñëe
 (
GRñ©i⁄
 *
ªœti⁄
,

78 
gc⁄°poöãr
 
key
,

79 
göt
 
fõld
);

80 
GTu∂es
* 
g_ªœti⁄_£À˘
 (
GRñ©i⁄
 *
ªœti⁄
,

81 
gc⁄°poöãr
 
key
,

82 
göt
 
fõld
);

83 
göt
 
g_ªœti⁄_cou¡
 (
GRñ©i⁄
 *
ªœti⁄
,

84 
gc⁄°poöãr
 
key
,

85 
göt
 
fõld
);

86 
gboﬁón
 
g_ªœti⁄_exi°s
 (
GRñ©i⁄
 *
ªœti⁄
,

88 
g_ªœti⁄_¥öt
 (
GRñ©i⁄
 *
ªœti⁄
);

90 
g_tu∂es_de°roy
 (
GTu∂es
 *
tu∂es
);

91 
gpoöãr
 
g_tu∂es_ödex
 (
GTu∂es
 *
tu∂es
,

92 
göt
 
ödex_
,

93 
göt
 
fõld
);

95 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gscanner.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_SCANNER_H__


32 
	#__G_SCANNER_H__


	)

34 
	~<glib/gd©a£t.h
>

35 
	~<glib/ghash.h
>

37 
G_BEGIN_DECLS


39 
_GSˇ¬î
 
	tGSˇ¬î
;

40 
_GSˇ¬îC⁄fig
 
	tGSˇ¬îC⁄fig
;

41 
_GTokíVÆue
 
	tGTokíVÆue
;

43 (*
	tGSˇ¬îMsgFunc
Ë(
	tGSˇ¬î
 *
	tsˇ¬î
,

44 
	tgch¨
 *
	tmesßge
,

45 
	tgboﬁón
 
	tîr‹
);

51 
	#G_CSET_A_2_Z
 "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

	)

52 
	#G_CSET_a_2_z
 "abcdefghijklmn›qr°uvwxyz"

	)

53 
	#G_CSET_DIGITS
 "0123456789"

	)

54 
	#G_CSET_LATINC
 "\300\301\302\303\304\305\306"\

57 "\330\331\332\333\334\335\336"

	)

58 
	#G_CSET_LATINS
 "\337\340\341\342\343\344\345\346"\

61 "\370\371\372\373\374\375\376\377"

	)

66 
G_ERR_UNKNOWN
,

67 
G_ERR_UNEXP_EOF
,

68 
G_ERR_UNEXP_EOF_IN_STRING
,

69 
G_ERR_UNEXP_EOF_IN_COMMENT
,

70 
G_ERR_NON_DIGIT_IN_CONST
,

71 
G_ERR_DIGIT_RADIX
,

72 
G_ERR_FLOAT_RADIX
,

73 
G_ERR_FLOAT_MALFORMED


74 } 
	tGEº‹Ty≥
;

79 
G_TOKEN_EOF
 = 0,

81 
G_TOKEN_LEFT_PAREN
 = '(',

82 
G_TOKEN_RIGHT_PAREN
 = ')',

83 
G_TOKEN_LEFT_CURLY
 = '{',

84 
G_TOKEN_RIGHT_CURLY
 = '}',

85 
G_TOKEN_LEFT_BRACE
 = '[',

86 
G_TOKEN_RIGHT_BRACE
 = ']',

87 
G_TOKEN_EQUAL_SIGN
 = '=',

88 
G_TOKEN_COMMA
 = ',',

90 
G_TOKEN_NONE
 = 256,

92 
G_TOKEN_ERROR
,

94 
G_TOKEN_CHAR
,

95 
G_TOKEN_BINARY
,

96 
G_TOKEN_OCTAL
,

97 
G_TOKEN_INT
,

98 
G_TOKEN_HEX
,

99 
G_TOKEN_FLOAT
,

100 
G_TOKEN_STRING
,

102 
G_TOKEN_SYMBOL
,

103 
G_TOKEN_IDENTIFIER
,

104 
G_TOKEN_IDENTIFIER_NULL
,

106 
G_TOKEN_COMMENT_SINGLE
,

107 
G_TOKEN_COMMENT_MULTI
,

108 
G_TOKEN_LAST


109 } 
	tGTokíTy≥
;

111 
	u_GTokíVÆue


113 
gpoöãr
 
v_symbﬁ
;

114 
gch¨
 *
v_idítifõr
;

115 
gul⁄g
 
v_bö¨y
;

116 
gul⁄g
 
v_o˘Æ
;

117 
gul⁄g
 
v_öt
;

118 
guöt64
 
v_öt64
;

119 
gdoubÀ
 
v_Êﬂt
;

120 
gul⁄g
 
v_hex
;

121 
gch¨
 *
v_°rög
;

122 
gch¨
 *
v_commít
;

123 
guch¨
 
v_ch¨
;

124 
guöt
 
v_îr‹
;

127 
	s_GSˇ¬îC⁄fig


131 
gch¨
 *
c£t_skù_ch¨a˘îs
;

132 
gch¨
 *
c£t_idítifõr_fú°
;

133 
gch¨
 *
c£t_idítifõr_¡h
;

134 
gch¨
 *
˝aú_commít_sögÀ
;

138 
guöt
 
ˇ£_£nsôive
 : 1;

143 
guöt
 
skù_commít_mu…i
 : 1;

144 
guöt
 
skù_commít_sögÀ
 : 1;

145 
guöt
 
sˇn_commít_mu…i
 : 1;

146 
guöt
 
sˇn_idítifõr
 : 1;

147 
guöt
 
sˇn_idítifõr_1ch¨
 : 1;

148 
guöt
 
sˇn_idítifõr_NULL
 : 1;

149 
guöt
 
sˇn_symbﬁs
 : 1;

150 
guöt
 
sˇn_bö¨y
 : 1;

151 
guöt
 
sˇn_o˘Æ
 : 1;

152 
guöt
 
sˇn_Êﬂt
 : 1;

153 
guöt
 
sˇn_hex
 : 1;

154 
guöt
 
sˇn_hex_dﬁœr
 : 1;

155 
guöt
 
sˇn_°rög_sq
 : 1;

156 
guöt
 
sˇn_°rög_dq
 : 1;

157 
guöt
 
numbîs_2_öt
 : 1;

158 
guöt
 
öt_2_Êﬂt
 : 1;

159 
guöt
 
idítifõr_2_°rög
 : 1;

160 
guöt
 
ch¨_2_tokí
 : 1;

161 
guöt
 
symbﬁ_2_tokí
 : 1;

162 
guöt
 
sc›e_0_ÁŒback
 : 1;

163 
guöt
 
°‹e_öt64
 : 1;

164 
guöt
 
∑ddög_dummy
;

167 
	s_GSˇ¬î


170 
gpoöãr
 
u£r_d©a
;

171 
guöt
 
max_∑r£_îr‹s
;

174 
guöt
 
∑r£_îr‹s
;

177 c⁄° 
gch¨
 *
öput_«me
;

180 
GD©a
 *
qd©a
;

183 
GSˇ¬îC⁄fig
 *
c⁄fig
;

186 
GTokíTy≥
 
tokí
;

187 
GTokíVÆue
 
vÆue
;

188 
guöt
 
löe
;

189 
guöt
 
posôi⁄
;

192 
GTokíTy≥
 
√xt_tokí
;

193 
GTokíVÆue
 
√xt_vÆue
;

194 
guöt
 
√xt_löe
;

195 
guöt
 
√xt_posôi⁄
;

198 
GHashTabÀ
 *
symbﬁ_èbÀ
;

199 
göt
 
öput_fd
;

200 c⁄° 
gch¨
 *
ãxt
;

201 c⁄° 
gch¨
 *
ãxt_íd
;

202 
gch¨
 *
buf„r
;

203 
guöt
 
sc›e_id
;

206 
GSˇ¬îMsgFunc
 
msg_h™dÀr
;

209 
GSˇ¬î
* 
	`g_sˇ¬î_√w
 (c⁄° 
GSˇ¬îC⁄fig
 *
c⁄fig_ãm∂
);

210 
	`g_sˇ¬î_de°roy
 (
GSˇ¬î
 *
sˇ¬î
);

211 
	`g_sˇ¬î_öput_fûe
 (
GSˇ¬î
 *
sˇ¬î
,

212 
göt
 
öput_fd
);

213 
	`g_sˇ¬î_sync_fûe_off£t
 (
GSˇ¬î
 *
sˇ¬î
);

214 
	`g_sˇ¬î_öput_ãxt
 (
GSˇ¬î
 *
sˇ¬î
,

215 c⁄° 
gch¨
 *
ãxt
,

216 
guöt
 
ãxt_Àn
);

217 
GTokíTy≥
 
	`g_sˇ¬î_gë_√xt_tokí
 (
GSˇ¬î
 *
sˇ¬î
);

218 
GTokíTy≥
 
	`g_sˇ¬î_≥ek_√xt_tokí
 (
GSˇ¬î
 *
sˇ¬î
);

219 
GTokíTy≥
 
	`g_sˇ¬î_cur_tokí
 (
GSˇ¬î
 *
sˇ¬î
);

220 
GTokíVÆue
 
	`g_sˇ¬î_cur_vÆue
 (
GSˇ¬î
 *
sˇ¬î
);

221 
guöt
 
	`g_sˇ¬î_cur_löe
 (
GSˇ¬î
 *
sˇ¬î
);

222 
guöt
 
	`g_sˇ¬î_cur_posôi⁄
 (
GSˇ¬î
 *
sˇ¬î
);

223 
gboﬁón
 
	`g_sˇ¬î_eof
 (
GSˇ¬î
 *
sˇ¬î
);

224 
guöt
 
	`g_sˇ¬î_£t_sc›e
 (
GSˇ¬î
 *
sˇ¬î
,

225 
guöt
 
sc›e_id
);

226 
	`g_sˇ¬î_sc›e_add_symbﬁ
 (
GSˇ¬î
 *
sˇ¬î
,

227 
guöt
 
sc›e_id
,

228 c⁄° 
gch¨
 *
symbﬁ
,

229 
gpoöãr
 
vÆue
);

230 
	`g_sˇ¬î_sc›e_ªmove_symbﬁ
 (
GSˇ¬î
 *
sˇ¬î
,

231 
guöt
 
sc›e_id
,

232 c⁄° 
gch¨
 *
symbﬁ
);

233 
gpoöãr
 
	`g_sˇ¬î_sc›e_lookup_symbﬁ
 (
GSˇ¬î
 *
sˇ¬î
,

234 
guöt
 
sc›e_id
,

235 c⁄° 
gch¨
 *
symbﬁ
);

236 
	`g_sˇ¬î_sc›e_f‹óch_symbﬁ
 (
GSˇ¬î
 *
sˇ¬î
,

237 
guöt
 
sc›e_id
,

238 
GHFunc
 
func
,

239 
gpoöãr
 
u£r_d©a
);

240 
gpoöãr
 
	`g_sˇ¬î_lookup_symbﬁ
 (
GSˇ¬î
 *
sˇ¬î
,

241 c⁄° 
gch¨
 *
symbﬁ
);

242 
	`g_sˇ¬î_u√xp_tokí
 (
GSˇ¬î
 *
sˇ¬î
,

243 
GTokíTy≥
 
ex≥˘ed_tokí
,

244 c⁄° 
gch¨
 *
idítifõr_•ec
,

245 c⁄° 
gch¨
 *
symbﬁ_•ec
,

246 c⁄° 
gch¨
 *
symbﬁ_«me
,

247 c⁄° 
gch¨
 *
mesßge
,

248 
göt
 
is_îr‹
);

249 
	$g_sˇ¬î_îr‹
 (
GSˇ¬î
 *
sˇ¬î
,

250 c⁄° 
gch¨
 *
f‹m©
,

251 ...Ë
	`G_GNUC_PRINTF
 (2,3);

252 
	$g_sˇ¬î_w¨n
 (
GSˇ¬î
 *
sˇ¬î
,

253 c⁄° 
gch¨
 *
f‹m©
,

254 ...Ë
	`G_GNUC_PRINTF
 (2,3);

256 #i‚de‡
G_DISABLE_DEPRECATED


259 
	#g_sˇ¬î_add_symbﬁ
–
sˇ¬î
, 
symbﬁ
, 
vÆue
 ) 
G_STMT_START
 { \

260 
	`g_sˇ¬î_sc›e_add_symbﬁ
 ((
sˇ¬î
), 0, (
symbﬁ
), (
vÆue
)); \

261 
	}
} 
G_STMT_END


	)

262 
	#g_sˇ¬î_ªmove_symbﬁ
–
sˇ¬î
, 
symbﬁ
 ) 
G_STMT_START
 { \

263 
	`g_sˇ¬î_sc›e_ªmove_symbﬁ
 ((
sˇ¬î
), 0, (
symbﬁ
)); \

264 } 
G_STMT_END


	)

265 
	#g_sˇ¬î_f‹óch_symbﬁ
–
sˇ¬î
, 
func
, 
d©a
 ) 
G_STMT_START
 { \

266 
	`g_sˇ¬î_sc›e_f‹óch_symbﬁ
 ((
sˇ¬î
), 0, (
func
), (
d©a
)); \

267 } 
G_STMT_END


	)

271 
	#g_sˇ¬î_‰ìze_symbﬁ_èbÀ
(
sˇ¬î
Ë(()0)

	)

272 
	#g_sˇ¬î_thaw_symbﬁ_èbÀ
(
sˇ¬î
Ë(()0)

	)

276 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gsequence.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_SEQUENCE_H__


26 
	#__G_SEQUENCE_H__


	)

28 
	~<glib/gty≥s.h
>

30 
G_BEGIN_DECLS


32 
_GSequí˚
 
	tGSequí˚
;

33 
_GSequí˚Node
 
	tGSequí˚Iãr
;

35 
	$göt
 (* 
	tGSequí˚IãrCom∑ªFunc
Ë(
	tGSequí˚Iãr
 *
	ta
,

36 
	tGSequí˚Iãr
 *
	tb
,

37 
	tgpoöãr
 
	td©a
);

41 
GSequí˚
 * 
	`g_£quí˚_√w
 (
GDe°royNŸify
 
d©a_de°roy
);

42 
	`g_£quí˚_‰ì
 (
GSequí˚
 *
£q
);

43 
göt
 
	`g_£quí˚_gë_Àngth
 (
GSequí˚
 *
£q
);

44 
	`g_£quí˚_f‹óch
 (
GSequí˚
 *
£q
,

45 
GFunc
 
func
,

46 
gpoöãr
 
u£r_d©a
);

47 
	`g_£quí˚_f‹óch_ønge
 (
GSequí˚Iãr
 *
begö
,

48 
GSequí˚Iãr
 *
íd
,

49 
GFunc
 
func
,

50 
gpoöãr
 
u£r_d©a
);

51 
	`g_£quí˚_s‹t
 (
GSequí˚
 *
£q
,

52 
GCom∑ªD©aFunc
 
cmp_func
,

53 
gpoöãr
 
cmp_d©a
);

54 
	`g_£quí˚_s‹t_ôî
 (
GSequí˚
 *
£q
,

55 
GSequí˚IãrCom∑ªFunc
 
cmp_func
,

56 
gpoöãr
 
cmp_d©a
);

60 
GSequí˚Iãr
 *
	`g_£quí˚_gë_begö_ôî
 (
GSequí˚
 *
£q
);

61 
GSequí˚Iãr
 *
	`g_£quí˚_gë_íd_ôî
 (
GSequí˚
 *
£q
);

62 
GSequí˚Iãr
 *
	`g_£quí˚_gë_ôî_©_pos
 (
GSequí˚
 *
£q
,

63 
göt
 
pos
);

64 
GSequí˚Iãr
 *
	`g_£quí˚_≠≥nd
 (
GSequí˚
 *
£q
,

65 
gpoöãr
 
d©a
);

66 
GSequí˚Iãr
 *
	`g_£quí˚_¥ïíd
 (
GSequí˚
 *
£q
,

67 
gpoöãr
 
d©a
);

68 
GSequí˚Iãr
 *
	`g_£quí˚_ö£π_bef‹e
 (GSequí˚Iã∏*
ôî
,

69 
gpoöãr
 
d©a
);

70 
	`g_£quí˚_move
 (
GSequí˚Iãr
 *
§c
,

71 
GSequí˚Iãr
 *
de°
);

72 
	`g_£quí˚_sw≠
 (
GSequí˚Iãr
 *
a
,

73 
GSequí˚Iãr
 *
b
);

74 
GSequí˚Iãr
 *
	`g_£quí˚_ö£π_s‹ãd
 (
GSequí˚
 *
£q
,

75 
gpoöãr
 
d©a
,

76 
GCom∑ªD©aFunc
 
cmp_func
,

77 
gpoöãr
 
cmp_d©a
);

78 
GSequí˚Iãr
 *
	`g_£quí˚_ö£π_s‹ãd_ôî
 (
GSequí˚
 *
£q
,

79 
gpoöãr
 
d©a
,

80 
GSequí˚IãrCom∑ªFunc
 
ôî_cmp
,

81 
gpoöãr
 
cmp_d©a
);

82 
	`g_£quí˚_s‹t_ch™ged
 (
GSequí˚Iãr
 *
ôî
,

83 
GCom∑ªD©aFunc
 
cmp_func
,

84 
gpoöãr
 
cmp_d©a
);

85 
	`g_£quí˚_s‹t_ch™ged_ôî
 (
GSequí˚Iãr
 *
ôî
,

86 
GSequí˚IãrCom∑ªFunc
 
ôî_cmp
,

87 
gpoöãr
 
cmp_d©a
);

88 
	`g_£quí˚_ªmove
 (
GSequí˚Iãr
 *
ôî
);

89 
	`g_£quí˚_ªmove_ønge
 (
GSequí˚Iãr
 *
begö
,

90 
GSequí˚Iãr
 *
íd
);

91 
	`g_£quí˚_move_ønge
 (
GSequí˚Iãr
 *
de°
,

92 
GSequí˚Iãr
 *
begö
,

93 
GSequí˚Iãr
 *
íd
);

94 
GSequí˚Iãr
 *
	`g_£quí˚_£¨ch
 (
GSequí˚
 *
£q
,

95 
gpoöãr
 
d©a
,

96 
GCom∑ªD©aFunc
 
cmp_func
,

97 
gpoöãr
 
cmp_d©a
);

98 
GSequí˚Iãr
 *
	`g_£quí˚_£¨ch_ôî
 (
GSequí˚
 *
£q
,

99 
gpoöãr
 
d©a
,

100 
GSequí˚IãrCom∑ªFunc
 
ôî_cmp
,

101 
gpoöãr
 
cmp_d©a
);

105 
gpoöãr
 
	`g_£quí˚_gë
 (
GSequí˚Iãr
 *
ôî
);

106 
	`g_£quí˚_£t
 (
GSequí˚Iãr
 *
ôî
,

107 
gpoöãr
 
d©a
);

110 
gboﬁón
 
	`g_£quí˚_ôî_is_begö
 (
GSequí˚Iãr
 *
ôî
);

111 
gboﬁón
 
	`g_£quí˚_ôî_is_íd
 (
GSequí˚Iãr
 *
ôî
);

112 
GSequí˚Iãr
 *
	`g_£quí˚_ôî_√xt
 (GSequí˚Iã∏*
ôî
);

113 
GSequí˚Iãr
 *
	`g_£quí˚_ôî_¥ev
 (GSequí˚Iã∏*
ôî
);

114 
göt
 
	`g_£quí˚_ôî_gë_posôi⁄
 (
GSequí˚Iãr
 *
ôî
);

115 
GSequí˚Iãr
 *
	`g_£quí˚_ôî_move
 (GSequí˚Iã∏*
ôî
,

116 
göt
 
dñè
);

117 
GSequí˚
 * 
	`g_£quí˚_ôî_gë_£quí˚
 (
GSequí˚Iãr
 *
ôî
);

121 
göt
 
	`g_£quí˚_ôî_com∑ª
 (
GSequí˚Iãr
 *
a
,

122 
GSequí˚Iãr
 *
b
);

123 
GSequí˚Iãr
 *
	`g_£quí˚_ønge_gë_midpoöt
 (GSequí˚Iã∏*
begö
,

124 
GSequí˚Iãr
 *
íd
);

126 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gshell.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_SHELL_H__


26 
	#__G_SHELL_H__


	)

28 
	~<glib/gîr‹.h
>

30 
	gG_BEGIN_DECLS


32 
	#G_SHELL_ERROR
 
	`g_shñl_îr‹_qu¨k
 ()

	)

37 
	mG_SHELL_ERROR_BAD_QUOTING
,

39 
	mG_SHELL_ERROR_EMPTY_STRING
,

40 
	mG_SHELL_ERROR_FAILED


41 } 
	tGShñlEº‹
;

43 
GQu¨k
 
g_shñl_îr‹_qu¨k
 ();

45 
gch¨
* 
g_shñl_quŸe
 (c⁄° gch¨ *
unquŸed_°rög
);

46 
gch¨
* 
g_shñl_unquŸe
 (c⁄° gch¨ *
quŸed_°rög
,

47 
GEº‹
 **
îr‹
);

48 
gboﬁón
 
g_shñl_∑r£_¨gv
 (c⁄° 
gch¨
 *
comm™d_löe
,

49 
göt
 *
¨g˝
,

50 
gch¨
 ***
¨gvp
,

51 
GEº‹
 **
îr‹
);

53 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gslice.h

20 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

24 #i‚de‡
__G_SLICE_H__


25 
	#__G_SLICE_H__


	)

27 #i‚de‡
__G_MEM_H__


28 #îr‹ 
In˛ude
 <
glib
.
h
> 
ö°ód
 
of
 <
g¶i˚
.h>

31 
	~<glib/gty≥s.h
>

33 
G_BEGIN_DECLS


37 
gpoöãr
 
	$g_¶i˚_Æloc
 (
gsize
 
block_size
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

38 
gpoöãr
 
	$g_¶i˚_Æloc0
 (
gsize
 
block_size
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

39 
gpoöãr
 
	$g_¶i˚_c›y
 (
gsize
 
block_size
,

40 
gc⁄°poöãr
 
mem_block
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(1);

41 
	`g_¶i˚_‰ì1
 (
gsize
 
block_size
,

42 
gpoöãr
 
mem_block
);

43 
	`g_¶i˚_‰ì_chaö_wôh_off£t
 (
gsize
 
block_size
,

44 
gpoöãr
 
mem_chaö
,

45 
gsize
 
√xt_off£t
);

46 
	#g_¶i˚_√w
(
ty≥
Ë(—y≥*Ë
	`g_¶i˚_Æloc
 ( (ty≥)))

	)

47 
	#g_¶i˚_√w0
(
ty≥
Ë(—y≥*Ë
	`g_¶i˚_Æloc0
 ( (ty≥)))

	)

61 
	#g_¶i˚_dup
(
ty≥
, 
mem
) \

62 (1 ? (
ty≥
*Ë
	`g_¶i˚_c›y
 ( (ty≥), (
mem
)) \

63 : ((Ë((
ty≥
*Ë0 =(
mem
)), (ty≥*Ë0))

	)

64 
	#g_¶i˚_‰ì
(
ty≥
, 
mem
) do { \

65 i‡(1Ë
	`g_¶i˚_‰ì1
 ( (
ty≥
), (
mem
)); \

66 (Ë((
ty≥
*Ë0 =(
mem
)); \

67 
	}
} 0)

	)

68 
	#g_¶i˚_‰ì_chaö
(
ty≥
, 
mem_chaö
, 
√xt
) do { \

69 i‡(1Ë
	`g_¶i˚_‰ì_chaö_wôh_off£t
 ( (
ty≥
), \

70 (
mem_chaö
), 
	`G_STRUCT_OFFSET
 (
ty≥
, 
√xt
)); \

71 (Ë((
ty≥
*Ë0 =(
mem_chaö
)); \

72 } 0)

	)

77 
	mG_SLICE_CONFIG_ALWAYS_MALLOC
 = 1,

78 
	mG_SLICE_CONFIG_BYPASS_MAGAZINES
,

79 
	mG_SLICE_CONFIG_WORKING_SET_MSECS
,

80 
	mG_SLICE_CONFIG_COLOR_INCREMENT
,

81 
	mG_SLICE_CONFIG_CHUNK_SIZES
,

82 
	mG_SLICE_CONFIG_CONTENTION_COUNTER


83 } 
	tGSli˚C⁄fig
;

84 
g_¶i˚_£t_c⁄fig
 (
GSli˚C⁄fig
 
ckey
, 
göt64
 
vÆue
);

85 
göt64
 
g_¶i˚_gë_c⁄fig
 (
GSli˚C⁄fig
 
ckey
);

86 
göt64
* 
g_¶i˚_gë_c⁄fig_°©e
 (
GSli˚C⁄fig
 
ckey
, göt64 
addªss
, 
guöt
 *
n_vÆues
);

88 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gslist.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_SLIST_H__


32 
	#__G_SLIST_H__


	)

34 
	~<glib/gmem.h
>

36 
G_BEGIN_DECLS


38 
_GSLi°
 
	tGSLi°
;

40 
	s_GSLi°


42 
gpoöãr
 
	md©a
;

43 
GSLi°
 *
	m√xt
;

48 
GSLi°
* 
	$g_¶i°_Æloc
 (Ë
G_GNUC_WARN_UNUSED_RESULT
;

49 
	`g_¶i°_‰ì
 (
GSLi°
 *
li°
);

50 
	`g_¶i°_‰ì_1
 (
GSLi°
 *
li°
);

51 
	#g_¶i°_‰ì1
 
g_¶i°_‰ì_1


	)

52 
GSLi°
* 
	$g_¶i°_≠≥nd
 (
GSLi°
 *
li°
,

53 
gpoöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

54 
GSLi°
* 
	$g_¶i°_¥ïíd
 (
GSLi°
 *
li°
,

55 
gpoöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

56 
GSLi°
* 
	$g_¶i°_ö£π
 (
GSLi°
 *
li°
,

57 
gpoöãr
 
d©a
,

58 
göt
 
posôi⁄
Ë
G_GNUC_WARN_UNUSED_RESULT
;

59 
GSLi°
* 
	$g_¶i°_ö£π_s‹ãd
 (
GSLi°
 *
li°
,

60 
gpoöãr
 
d©a
,

61 
GCom∑ªFunc
 
func
Ë
G_GNUC_WARN_UNUSED_RESULT
;

62 
GSLi°
* 
	$g_¶i°_ö£π_s‹ãd_wôh_d©a
 (
GSLi°
 *
li°
,

63 
gpoöãr
 
d©a
,

64 
GCom∑ªD©aFunc
 
func
,

65 
gpoöãr
 
u£r_d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

66 
GSLi°
* 
	$g_¶i°_ö£π_bef‹e
 (
GSLi°
 *
¶i°
,

67 
GSLi°
 *
siblög
,

68 
gpoöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

69 
GSLi°
* 
	$g_¶i°_c⁄ˇt
 (
GSLi°
 *
li°1
,

70 
GSLi°
 *
li°2
Ë
G_GNUC_WARN_UNUSED_RESULT
;

71 
GSLi°
* 
	$g_¶i°_ªmove
 (
GSLi°
 *
li°
,

72 
gc⁄°poöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

73 
GSLi°
* 
	$g_¶i°_ªmove_Æl
 (
GSLi°
 *
li°
,

74 
gc⁄°poöãr
 
d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

75 
GSLi°
* 
	$g_¶i°_ªmove_lök
 (
GSLi°
 *
li°
,

76 
GSLi°
 *
lök_
Ë
G_GNUC_WARN_UNUSED_RESULT
;

77 
GSLi°
* 
	$g_¶i°_dñëe_lök
 (
GSLi°
 *
li°
,

78 
GSLi°
 *
lök_
Ë
G_GNUC_WARN_UNUSED_RESULT
;

79 
GSLi°
* 
	$g_¶i°_ªvî£
 (
GSLi°
 *
li°
Ë
G_GNUC_WARN_UNUSED_RESULT
;

80 
GSLi°
* 
	$g_¶i°_c›y
 (
GSLi°
 *
li°
Ë
G_GNUC_WARN_UNUSED_RESULT
;

81 
GSLi°
* 
	`g_¶i°_¡h
 (GSLi° *
li°
,

82 
guöt
 
n
);

83 
GSLi°
* 
	`g_¶i°_föd
 (GSLi° *
li°
,

84 
gc⁄°poöãr
 
d©a
);

85 
GSLi°
* 
	`g_¶i°_föd_cu°om
 (GSLi° *
li°
,

86 
gc⁄°poöãr
 
d©a
,

87 
GCom∑ªFunc
 
func
);

88 
göt
 
	`g_¶i°_posôi⁄
 (
GSLi°
 *
li°
,

89 
GSLi°
 *
Œök
);

90 
göt
 
	`g_¶i°_ödex
 (
GSLi°
 *
li°
,

91 
gc⁄°poöãr
 
d©a
);

92 
GSLi°
* 
	`g_¶i°_œ°
 (GSLi° *
li°
);

93 
guöt
 
	`g_¶i°_Àngth
 (
GSLi°
 *
li°
);

94 
	`g_¶i°_f‹óch
 (
GSLi°
 *
li°
,

95 
GFunc
 
func
,

96 
gpoöãr
 
u£r_d©a
);

97 
GSLi°
* 
	$g_¶i°_s‹t
 (
GSLi°
 *
li°
,

98 
GCom∑ªFunc
 
com∑ª_func
Ë
G_GNUC_WARN_UNUSED_RESULT
;

99 
GSLi°
* 
	$g_¶i°_s‹t_wôh_d©a
 (
GSLi°
 *
li°
,

100 
GCom∑ªD©aFunc
 
com∑ª_func
,

101 
gpoöãr
 
u£r_d©a
Ë
G_GNUC_WARN_UNUSED_RESULT
;

102 
gpoöãr
 
	`g_¶i°_¡h_d©a
 (
GSLi°
 *
li°
,

103 
guöt
 
n
);

105 
	#g_¶i°_√xt
(
¶i°
Ë((¶i°Ë? (((
GSLi°
 *)(¶i°))->
√xt
Ë: 
NULL
)

	)

107 #i‚de‡
G_DISABLE_DEPRECATED


108 
	`g_¶i°_push_Æloˇt‹
 (
gpoöãr
 
dummy
);

109 
	`g_¶i°_p›_Æloˇt‹
 ();

112 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gspawn.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_SPAWN_H__


26 
	#__G_SPAWN_H__


	)

28 
	~<glib/gîr‹.h
>

30 
	gG_BEGIN_DECLS


33 
	#G_SPAWN_ERROR
 
	`g_•awn_îr‹_qu¨k
 ()

	)

37 
	mG_SPAWN_ERROR_FORK
,

38 
	mG_SPAWN_ERROR_READ
,

39 
	mG_SPAWN_ERROR_CHDIR
,

40 
	mG_SPAWN_ERROR_ACCES
,

41 
	mG_SPAWN_ERROR_PERM
,

42 
	mG_SPAWN_ERROR_2BIG
,

43 
	mG_SPAWN_ERROR_NOEXEC
,

44 
	mG_SPAWN_ERROR_NAMETOOLONG
,

45 
	mG_SPAWN_ERROR_NOENT
,

46 
	mG_SPAWN_ERROR_NOMEM
,

47 
	mG_SPAWN_ERROR_NOTDIR
,

48 
	mG_SPAWN_ERROR_LOOP
,

49 
	mG_SPAWN_ERROR_TXTBUSY
,

50 
	mG_SPAWN_ERROR_IO
,

51 
	mG_SPAWN_ERROR_NFILE
,

52 
	mG_SPAWN_ERROR_MFILE
,

53 
	mG_SPAWN_ERROR_INVAL
,

54 
	mG_SPAWN_ERROR_ISDIR
,

55 
	mG_SPAWN_ERROR_LIBBAD
,

56 
	mG_SPAWN_ERROR_FAILED


59 } 
	tGS∑wnEº‹
;

61 (* 
	tGS∑wnChûdSëupFunc
Ë(
	tgpoöãr
 
	tu£r_d©a
);

65 
G_SPAWN_LEAVE_DESCRIPTORS_OPEN
 = 1 << 0,

66 
G_SPAWN_DO_NOT_REAP_CHILD
 = 1 << 1,

68 
G_SPAWN_SEARCH_PATH
 = 1 << 2,

70 
G_SPAWN_STDOUT_TO_DEV_NULL
 = 1 << 3,

71 
G_SPAWN_STDERR_TO_DEV_NULL
 = 1 << 4,

72 
G_SPAWN_CHILD_INHERITS_STDIN
 = 1 << 5,

73 
G_SPAWN_FILE_AND_ARGV_ZERO
 = 1 << 6

74 } 
	tGS∑wnFœgs
;

76 
GQu¨k
 
	`g_•awn_îr‹_qu¨k
 ();

78 #ifde‡
G_OS_WIN32


79 
	#g_•awn_async
 
g_•awn_async_utf8


	)

80 
	#g_•awn_async_wôh_pùes
 
g_•awn_async_wôh_pùes_utf8


	)

81 
	#g_•awn_sync
 
g_•awn_sync_utf8


	)

82 
	#g_•awn_comm™d_löe_sync
 
g_•awn_comm™d_löe_sync_utf8


	)

83 
	#g_•awn_comm™d_löe_async
 
g_•awn_comm™d_löe_async_utf8


	)

86 
gboﬁón
 
	`g_•awn_async
 (c⁄° 
gch¨
 *
w‹kög_dúe˘‹y
,

87 
gch¨
 **
¨gv
,

88 
gch¨
 **
ívp
,

89 
GS∑wnFœgs
 
Êags
,

90 
GS∑wnChûdSëupFunc
 
chûd_£tup
,

91 
gpoöãr
 
u£r_d©a
,

92 
GPid
 *
chûd_pid
,

93 
GEº‹
 **
îr‹
);

99 
gboﬁón
 
	`g_•awn_async_wôh_pùes
 (c⁄° 
gch¨
 *
w‹kög_dúe˘‹y
,

100 
gch¨
 **
¨gv
,

101 
gch¨
 **
ívp
,

102 
GS∑wnFœgs
 
Êags
,

103 
GS∑wnChûdSëupFunc
 
chûd_£tup
,

104 
gpoöãr
 
u£r_d©a
,

105 
GPid
 *
chûd_pid
,

106 
göt
 *
°™d¨d_öput
,

107 
göt
 *
°™d¨d_ouçut
,

108 
göt
 *
°™d¨d_îr‹
,

109 
GEº‹
 **
îr‹
);

116 
gboﬁón
 
	`g_•awn_sync
 (c⁄° 
gch¨
 *
w‹kög_dúe˘‹y
,

117 
gch¨
 **
¨gv
,

118 
gch¨
 **
ívp
,

119 
GS∑wnFœgs
 
Êags
,

120 
GS∑wnChûdSëupFunc
 
chûd_£tup
,

121 
gpoöãr
 
u£r_d©a
,

122 
gch¨
 **
°™d¨d_ouçut
,

123 
gch¨
 **
°™d¨d_îr‹
,

124 
göt
 *
exô_°©us
,

125 
GEº‹
 **
îr‹
);

127 
gboﬁón
 
	`g_•awn_comm™d_löe_sync
 (c⁄° 
gch¨
 *
comm™d_löe
,

128 
gch¨
 **
°™d¨d_ouçut
,

129 
gch¨
 **
°™d¨d_îr‹
,

130 
göt
 *
exô_°©us
,

131 
GEº‹
 **
îr‹
);

132 
gboﬁón
 
	`g_•awn_comm™d_löe_async
 (c⁄° 
gch¨
 *
comm™d_löe
,

133 
GEº‹
 **
îr‹
);

135 
	`g_•awn_˛o£_pid
 (
GPid
 
pid
);

137 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gstrfuncs.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_STRFUNCS_H__


32 
	#__G_STRFUNCS_H__


	)

34 
	~<°d¨g.h
>

35 
	~<glib/gty≥s.h
>

37 
G_BEGIN_DECLS


41 
	mG_ASCII_ALNUM
 = 1 << 0,

42 
	mG_ASCII_ALPHA
 = 1 << 1,

43 
	mG_ASCII_CNTRL
 = 1 << 2,

44 
	mG_ASCII_DIGIT
 = 1 << 3,

45 
	mG_ASCII_GRAPH
 = 1 << 4,

46 
	mG_ASCII_LOWER
 = 1 << 5,

47 
	mG_ASCII_PRINT
 = 1 << 6,

48 
	mG_ASCII_PUNCT
 = 1 << 7,

49 
	mG_ASCII_SPACE
 = 1 << 8,

50 
	mG_ASCII_UPPER
 = 1 << 9,

51 
	mG_ASCII_XDIGIT
 = 1 << 10

52 } 
	tGAsciiTy≥
;

54 
GLIB_VAR
 c⁄° 
guöt16
 * c⁄° 
	gg_ascii_èbÀ
;

56 
	#g_ascii_iß um
(
c
) \

57 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_ALNUM
Ë!0)

	)

59 
	#g_ascii_ißÕha
(
c
) \

60 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_ALPHA
Ë!0)

	)

62 
	#g_ascii_is˙ål
(
c
) \

63 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_CNTRL
Ë!0)

	)

65 
	#g_ascii_isdigô
(
c
) \

66 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_DIGIT
Ë!0)

	)

68 
	#g_ascii_isgøph
(
c
) \

69 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_GRAPH
Ë!0)

	)

71 
	#g_ascii_i¶owî
(
c
) \

72 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_LOWER
Ë!0)

	)

74 
	#g_ascii_i•röt
(
c
) \

75 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_PRINT
Ë!0)

	)

77 
	#g_ascii_i•un˘
(
c
) \

78 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_PUNCT
Ë!0)

	)

80 
	#g_ascii_is•a˚
(
c
) \

81 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_SPACE
Ë!0)

	)

83 
	#g_ascii_isuµî
(
c
) \

84 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_UPPER
Ë!0)

	)

86 
	#g_ascii_isxdigô
(
c
) \

87 ((
g_ascii_èbÀ
[(
guch¨
Ë(
c
)] & 
G_ASCII_XDIGIT
Ë!0)

	)

89 
gch¨
 
	$g_ascii_tﬁowî
 (
gch¨
 
c
Ë
G_GNUC_CONST
;

90 
gch¨
 
	$g_ascii_touµî
 (
gch¨
 
c
Ë
G_GNUC_CONST
;

92 
göt
 
	$g_ascii_digô_vÆue
 (
gch¨
 
c
Ë
G_GNUC_CONST
;

93 
göt
 
	$g_ascii_xdigô_vÆue
 (
gch¨
 
c
Ë
G_GNUC_CONST
;

98 
	#G_STR_DELIMITERS
 "_-|> <."

	)

99 
gch¨
* 
	`g_°rdñimô
 (gch¨ *
°rög
,

100 c⁄° 
gch¨
 *
dñimôîs
,

101 
gch¨
 
√w_dñimôî
);

102 
gch¨
* 
	`g_°rˇn⁄
 (gch¨ *
°rög
,

103 c⁄° 
gch¨
 *
vÆid_ch¨s
,

104 
gch¨
 
sub°ôut‹
);

105 
G_CONST_RETURN
 
gch¨
* 
	$g_°ªº‹
 (
göt
 
î∫um
Ë
G_GNUC_CONST
;

106 
G_CONST_RETURN
 
gch¨
* 
	$g_°rsig«l
 (
göt
 
signum
Ë
G_GNUC_CONST
;

107 
gch¨
* 
	`g_°ºevî£
 (gch¨ *
°rög
);

108 
gsize
 
	`g_°æ˝y
 (
gch¨
 *
de°
,

109 c⁄° 
gch¨
 *
§c
,

110 
gsize
 
de°_size
);

111 
gsize
 
	`g_°æˇt
 (
gch¨
 *
de°
,

112 c⁄° 
gch¨
 *
§c
,

113 
gsize
 
de°_size
);

114 
gch¨
 * 
	`g_°r°r_Àn
 (c⁄° gch¨ *
hay°ack
,

115 
gssize
 
hay°ack_Àn
,

116 c⁄° 
gch¨
 *
√edÀ
);

117 
gch¨
 * 
	`g_°º°r
 (c⁄° gch¨ *
hay°ack
,

118 c⁄° 
gch¨
 *
√edÀ
);

119 
gch¨
 * 
	`g_°º°r_Àn
 (c⁄° gch¨ *
hay°ack
,

120 
gssize
 
hay°ack_Àn
,

121 c⁄° 
gch¨
 *
√edÀ
);

123 
gboﬁón
 
	`g_°r_has_suffix
 (c⁄° 
gch¨
 *
°r
,

124 c⁄° 
gch¨
 *
suffix
);

125 
gboﬁón
 
	`g_°r_has_¥efix
 (c⁄° 
gch¨
 *
°r
,

126 c⁄° 
gch¨
 *
¥efix
);

130 
gdoubÀ
 
	`g_°πod
 (c⁄° 
gch¨
 *
≈å
,

131 
gch¨
 **
íd±r
);

132 
gdoubÀ
 
	`g_ascii_°πod
 (c⁄° 
gch¨
 *
≈å
,

133 
gch¨
 **
íd±r
);

134 
guöt64
 
	`g_ascii_°πouŒ
 (c⁄° 
gch¨
 *
≈å
,

135 
gch¨
 **
íd±r
,

136 
guöt
 
ba£
);

137 
göt64
 
	`g_ascii_°πﬁl
 (c⁄° 
gch¨
 *
≈å
,

138 
gch¨
 **
íd±r
,

139 
guöt
 
ba£
);

143 
	#G_ASCII_DTOSTR_BUF_SIZE
 (29 + 10)

	)

144 
gch¨
 * 
	`g_ascii_dto°r
 (gch¨ *
buf„r
,

145 
göt
 
buf_Àn
,

146 
gdoubÀ
 
d
);

147 
gch¨
 * 
	`g_ascii_f‹m©d
 (gch¨ *
buf„r
,

148 
göt
 
buf_Àn
,

149 c⁄° 
gch¨
 *
f‹m©
,

150 
gdoubÀ
 
d
);

153 
gch¨
* 
	`g_°rchug
 (gch¨ *
°rög
);

155 
gch¨
* 
	`g_°rchomp
 (gch¨ *
°rög
);

157 
	#g_°r°rù
–
°rög
 ) 
	`g_°rchomp
 (
	`g_°rchug
 (°rög))

	)

159 
göt
 
	`g_ascii_°rˇ£cmp
 (c⁄° 
gch¨
 *
s1
,

160 c⁄° 
gch¨
 *
s2
);

161 
göt
 
	`g_ascii_°∫ˇ£cmp
 (c⁄° 
gch¨
 *
s1
,

162 c⁄° 
gch¨
 *
s2
,

163 
gsize
 
n
);

164 
gch¨
* 
	$g_ascii_°rdown
 (c⁄° 
gch¨
 *
°r
,

165 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

166 
gch¨
* 
	$g_ascii_°rup
 (c⁄° 
gch¨
 *
°r
,

167 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

169 #i‚de‡
G_DISABLE_DEPRECATED


176 
göt
 
	`g_°rˇ£cmp
 (c⁄° 
gch¨
 *
s1
,

177 c⁄° 
gch¨
 *
s2
);

178 
göt
 
	`g_°∫ˇ£cmp
 (c⁄° 
gch¨
 *
s1
,

179 c⁄° 
gch¨
 *
s2
,

180 
guöt
 
n
);

181 
gch¨
* 
	`g_°rdown
 (gch¨ *
°rög
);

182 
gch¨
* 
	`g_°rup
 (gch¨ *
°rög
);

189 
gch¨
* 
	$g_°rdup
 (c⁄° 
gch¨
 *
°r
Ë
G_GNUC_MALLOC
;

190 
gch¨
* 
	$g_°rdup_¥ötf
 (c⁄° 
gch¨
 *
f‹m©
,

191 ...Ë
	$G_GNUC_PRINTF
 (1, 2Ë
G_GNUC_MALLOC
;

192 
gch¨
* 
	$g_°rdup_v¥ötf
 (c⁄° 
gch¨
 *
f‹m©
,

193 
va_li°
 
¨gs
Ë
G_GNUC_MALLOC
;

194 
gch¨
* 
	$g_°∫dup
 (c⁄° 
gch¨
 *
°r
,

195 
gsize
 
n
Ë
G_GNUC_MALLOC
;

196 
gch¨
* 
	$g_°∫fûl
 (
gsize
 
Àngth
,

197 
gch¨
 
fûl_ch¨
Ë
G_GNUC_MALLOC
;

198 
gch¨
* 
	$g_°rc⁄ˇt
 (c⁄° 
gch¨
 *
°rög1
,

199 ...Ë
G_GNUC_MALLOC
 
G_GNUC_NULL_TERMINATED
;

200 
gch¨
* 
	$g_°rjoö
 (c⁄° 
gch¨
 *
£∑øt‹
,

201 ...Ë
G_GNUC_MALLOC
 
G_GNUC_NULL_TERMINATED
;

207 
gch¨
* 
	$g_°rcom¥ess
 (c⁄° 
gch¨
 *
sour˚
Ë
G_GNUC_MALLOC
;

217 
gch¨
* 
	$g_°ªsˇ≥
 (c⁄° 
gch¨
 *
sour˚
,

218 c⁄° 
gch¨
 *
ex˚±i⁄s
Ë
G_GNUC_MALLOC
;

220 
gpoöãr
 
	$g_memdup
 (
gc⁄°poöãr
 
mem
,

221 
guöt
 
byã_size
Ë
G_GNUC_MALLOC
 
	`G_GNUC_ALLOC_SIZE
(2);

232 
gch¨
** 
	$g_°r•lô
 (c⁄° 
gch¨
 *
°rög
,

233 c⁄° 
gch¨
 *
dñimôî
,

234 
göt
 
max_tokís
Ë
G_GNUC_MALLOC
;

235 
gch¨
 ** 
	$g_°r•lô_£t
 (c⁄° 
gch¨
 *
°rög
,

236 c⁄° 
gch¨
 *
dñimôîs
,

237 
göt
 
max_tokís
Ë
G_GNUC_MALLOC
;

238 
gch¨
* 
	$g_°rjoöv
 (c⁄° 
gch¨
 *
£∑øt‹
,

239 
gch¨
 **
°r_¨øy
Ë
G_GNUC_MALLOC
;

240 
	`g_°r‰ìv
 (
gch¨
 **
°r_¨øy
);

241 
gch¨
** 
	$g_°rdupv
 (
gch¨
 **
°r_¨øy
Ë
G_GNUC_MALLOC
;

242 
guöt
 
	`g_°rv_Àngth
 (
gch¨
 **
°r_¨øy
);

244 
gch¨
* 
	`g_°p˝y
 (gch¨ *
de°
,

245 c⁄° *
§c
);

247 
G_CONST_RETURN
 
gch¨
 *
	$g_°rù_c⁄ãxt
 (c⁄° 
gch¨
 *
msgid
,

248 c⁄° 
gch¨
 *
msgvÆ
Ë
	`G_GNUC_FORMAT
(1);

250 
G_CONST_RETURN
 
gch¨
 *
	$g_dgëãxt
 (c⁄° 
gch¨
 *
domaö
,

251 c⁄° 
gch¨
 *
msgid
Ë
	`G_GNUC_FORMAT
(2);

253 
G_CONST_RETURN
 
gch¨
 *
	$g_dngëãxt
 (c⁄° 
gch¨
 *
domaö
,

254 c⁄° 
gch¨
 *
msgid
,

255 c⁄° 
gch¨
 *
msgid_∂uøl
,

256 
gul⁄g
 
n
Ë
	`G_GNUC_FORMAT
(3);

257 
G_CONST_RETURN
 
gch¨
 *
	$g_dpgëãxt
 (c⁄° 
gch¨
 *
domaö
,

258 c⁄° 
gch¨
 *
msg˘xtid
,

259 
gsize
 
msgidoff£t
Ë
	`G_GNUC_FORMAT
(2);

260 
G_CONST_RETURN
 
gch¨
 *
	$g_dpgëãxt2
 (c⁄° 
gch¨
 *
domaö
,

261 c⁄° 
gch¨
 *
c⁄ãxt
,

262 c⁄° 
gch¨
 *
msgid
Ë
	`G_GNUC_FORMAT
(3);

264 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gstring.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_STRING_H__


32 
	#__G_STRING_H__


	)

34 
	~<glib/gty≥s.h
>

35 
	~<glib/gunicode.h
>

36 
	~<glib/gutûs.h
>

38 
G_BEGIN_DECLS


40 
_GSåög
 
	tGSåög
;

41 
_GSåögChunk
 
	tGSåögChunk
;

43 
	s_GSåög


45 
gch¨
 *
	m°r
;

46 
gsize
 
	mÀn
;

47 
gsize
 
	mÆloˇãd_Àn
;

52 
GSåögChunk
* 
g_°rög_chunk_√w
 (
gsize
 
size
);

53 
g_°rög_chunk_‰ì
 (
GSåögChunk
 *
chunk
);

54 
g_°rög_chunk_˛ór
 (
GSåögChunk
 *
chunk
);

55 
gch¨
* 
g_°rög_chunk_ö£π
 (
GSåögChunk
 *
chunk
,

56 c⁄° 
gch¨
 *
°rög
);

57 
gch¨
* 
g_°rög_chunk_ö£π_Àn
 (
GSåögChunk
 *
chunk
,

58 c⁄° 
gch¨
 *
°rög
,

59 
gssize
 
Àn
);

60 
gch¨
* 
g_°rög_chunk_ö£π_c⁄°
 (
GSåögChunk
 *
chunk
,

61 c⁄° 
gch¨
 *
°rög
);

66 
GSåög
* 
g_°rög_√w
 (c⁄° 
gch¨
 *
öô
);

67 
GSåög
* 
g_°rög_√w_Àn
 (c⁄° 
gch¨
 *
öô
,

68 
gssize
 
Àn
);

69 
GSåög
* 
g_°rög_sized_√w
 (
gsize
 
dÊ_size
);

70 
gch¨
* 
g_°rög_‰ì
 (
GSåög
 *
°rög
,

71 
gboﬁón
 
‰ì_£gmít
);

72 
gboﬁón
 
g_°rög_equÆ
 (c⁄° 
GSåög
 *
v
,

73 c⁄° 
GSåög
 *
v2
);

74 
guöt
 
g_°rög_hash
 (c⁄° 
GSåög
 *
°r
);

75 
GSåög
* 
g_°rög_assign
 (GSåög *
°rög
,

76 c⁄° 
gch¨
 *
rvÆ
);

77 
GSåög
* 
g_°rög_åunˇã
 (GSåög *
°rög
,

78 
gsize
 
Àn
);

79 
GSåög
* 
g_°rög_£t_size
 (GSåög *
°rög
,

80 
gsize
 
Àn
);

81 
GSåög
* 
g_°rög_ö£π_Àn
 (GSåög *
°rög
,

82 
gssize
 
pos
,

83 c⁄° 
gch¨
 *
vÆ
,

84 
gssize
 
Àn
);

85 
GSåög
* 
g_°rög_≠≥nd
 (GSåög *
°rög
,

86 c⁄° 
gch¨
 *
vÆ
);

87 
GSåög
* 
g_°rög_≠≥nd_Àn
 (GSåög *
°rög
,

88 c⁄° 
gch¨
 *
vÆ
,

89 
gssize
 
Àn
);

90 
GSåög
* 
g_°rög_≠≥nd_c
 (GSåög *
°rög
,

91 
gch¨
 
c
);

92 
GSåög
* 
g_°rög_≠≥nd_unich¨
 (GSåög *
°rög
,

93 
gunich¨
 
wc
);

94 
GSåög
* 
g_°rög_¥ïíd
 (GSåög *
°rög
,

95 c⁄° 
gch¨
 *
vÆ
);

96 
GSåög
* 
g_°rög_¥ïíd_c
 (GSåög *
°rög
,

97 
gch¨
 
c
);

98 
GSåög
* 
g_°rög_¥ïíd_unich¨
 (GSåög *
°rög
,

99 
gunich¨
 
wc
);

100 
GSåög
* 
g_°rög_¥ïíd_Àn
 (GSåög *
°rög
,

101 c⁄° 
gch¨
 *
vÆ
,

102 
gssize
 
Àn
);

103 
GSåög
* 
g_°rög_ö£π
 (GSåög *
°rög
,

104 
gssize
 
pos
,

105 c⁄° 
gch¨
 *
vÆ
);

106 
GSåög
* 
g_°rög_ö£π_c
 (GSåög *
°rög
,

107 
gssize
 
pos
,

108 
gch¨
 
c
);

109 
GSåög
* 
g_°rög_ö£π_unich¨
 (GSåög *
°rög
,

110 
gssize
 
pos
,

111 
gunich¨
 
wc
);

112 
GSåög
* 
g_°rög_ovîwrôe
 (GSåög *
°rög
,

113 
gsize
 
pos
,

114 c⁄° 
gch¨
 *
vÆ
);

115 
GSåög
* 
g_°rög_ovîwrôe_Àn
 (GSåög *
°rög
,

116 
gsize
 
pos
,

117 c⁄° 
gch¨
 *
vÆ
,

118 
gssize
 
Àn
);

119 
GSåög
* 
g_°rög_îa£
 (GSåög *
°rög
,

120 
gssize
 
pos
,

121 
gssize
 
Àn
);

122 
GSåög
* 
g_°rög_ascii_down
 (GSåög *
°rög
);

123 
GSåög
* 
g_°rög_ascii_up
 (GSåög *
°rög
);

124 
g_°rög_v¥ötf
 (
GSåög
 *
°rög
,

125 c⁄° 
gch¨
 *
f‹m©
,

126 
va_li°
 
¨gs
);

127 
	$g_°rög_¥ötf
 (
GSåög
 *
°rög
,

128 c⁄° 
gch¨
 *
f‹m©
,

129 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

130 
	`g_°rög_≠≥nd_v¥ötf
 (
GSåög
 *
°rög
,

131 c⁄° 
gch¨
 *
f‹m©
,

132 
va_li°
 
¨gs
);

133 
	$g_°rög_≠≥nd_¥ötf
 (
GSåög
 *
°rög
,

134 c⁄° 
gch¨
 *
f‹m©
,

135 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

136 
GSåög
 * 
	`g_°rög_≠≥nd_uri_esˇ≥d
(GSåög *
°rög
,

137 c⁄° *
u√sˇ≥d
,

138 c⁄° *
ª£rved_ch¨s_Ælowed
,

139 
gboﬁón
 
Ælow_utf8
);

142 #ifde‡
G_CAN_INLINE


143 
ölöe
 
GSåög
*

144 
	$g_°rög_≠≥nd_c_ölöe
 (
GSåög
 *
g°rög
,

145 
gch¨
 
c
)

147 i‡(
g°rög
->
Àn
 + 1 < g°rög->
Æloˇãd_Àn
)

149 
g°rög
->
°r
[g°rög->
Àn
++] = 
c
;

150 
g°rög
->
°r
[g°rög->
Àn
] = 0;

153 
	`g_°rög_ö£π_c
 (
g°rög
, -1, 
c
);

154  
g°rög
;

155 
	}
}

156 
	#g_°rög_≠≥nd_c
(
g°r
,
c
Ë
	`g_°rög_≠≥nd_c_ölöe
 (g°r, c)

	)

160 #i‚de‡
G_DISABLE_DEPRECATED


167 
GSåög
* 
g_°rög_down
 (GSåög *
°rög
);

168 
GSåög
* 
g_°rög_up
 (GSåög *
°rög
);

171 
	#g_°rög_•rötf
 
g_°rög_¥ötf


	)

172 
	#g_°rög_•rötÁ
 
g_°rög_≠≥nd_¥ötf


	)

176 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gtestutils.h

21 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

25 #i‚de‡
__G_TEST_UTILS_H__


26 
	#__G_TEST_UTILS_H__


	)

28 
	~<glib.h
>

30 
G_BEGIN_DECLS


32 
GTe°Ca£
 
	tGTe°Ca£
;

33 
GTe°Suôe
 
	tGTe°Suôe
;

36 
	#g_as£π_cmp°r
(
s1
, 
cmp
, 
s2
Ëdÿ{ c⁄° *
__s1
 = (s1), *
__s2
 = (s2); \

37 i‡(
	`g_°rcmp0
 (
__s1
, 
__s2
Ë
cmp
 0) ; \

38 
	`g_as£πi⁄_mesßge_cmp°r
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

39 #s1 " " #cm∞" " #s2, 
__s1
, #cmp, 
__s2
); } 0)

	)

40 
	#g_as£π_cmpöt
(
n1
, 
cmp
, 
n2
Ëdÿ{ 
göt64
 
__n1
 = (n1), 
__n2
 = (n2); \

41 i‡(
__n1
 
cmp
 
__n2
) ; \

42 
	`g_as£πi⁄_mesßge_cm≤um
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

43 #n1 " " #cm∞" " #n2, 
__n1
, #cmp, 
__n2
, 'i'); } 0)

	)

44 
	#g_as£π_cmpuöt
(
n1
, 
cmp
, 
n2
Ëdÿ{ 
guöt64
 
__n1
 = (n1), 
__n2
 = (n2); \

45 i‡(
__n1
 
cmp
 
__n2
) ; \

46 
	`g_as£πi⁄_mesßge_cm≤um
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

47 #n1 " " #cm∞" " #n2, 
__n1
, #cmp, 
__n2
, 'i'); } 0)

	)

48 
	#g_as£π_cmphex
(
n1
, 
cmp
, 
n2
Ëdÿ{ 
guöt64
 
__n1
 = (n1), 
__n2
 = (n2); \

49 i‡(
__n1
 
cmp
 
__n2
) ; \

50 
	`g_as£πi⁄_mesßge_cm≤um
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

51 #n1 " " #cm∞" " #n2, 
__n1
, #cmp, 
__n2
, 'x'); } 0)

	)

52 
	#g_as£π_cmpÊﬂt
(
n1
,
cmp
,
n2
Ëdÿ{ 
__n1
 = (n1), 
__n2
 = (n2); \

53 i‡(
__n1
 
cmp
 
__n2
) ; \

54 
	`g_as£πi⁄_mesßge_cm≤um
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

55 #n1 " " #cm∞" " #n2, 
__n1
, #cmp, 
__n2
, 'f'); } 0)

	)

56 
	#g_as£π_no_îr‹
(
îr
) do { if (err) \

57 
	`g_as£πi⁄_mesßge_îr‹
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

58 #îr, 
îr
, 0, 0); } 0)

	)

59 
	#g_as£π_îr‹
(
îr
, 
dom
, 
c
Ëdÿ{ i‡(!î∏|| (îr)->
domaö
 !dom || (îr)->
code
 != c) \

60 
	`g_as£πi⁄_mesßge_îr‹
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

61 #îr, 
îr
, 
dom
, 
c
); } 0)

	)

62 #ifde‡
G_DISABLE_ASSERT


63 
	#g_as£π_nŸ_ªached
(Ëdÿ{ (Ë0; } 0)

	)

64 
	#g_as£π
(
ex¥
Ëdÿ{ (Ë0; } 0)

	)

66 
	#g_as£π_nŸ_ªached
(Ëdÿ{ 
	`g_as£πi⁄_mesßge
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 
NULL
); } 0)

	)

67 
	#g_as£π
(
ex¥
Ëdÿ{ 
	`G_LIKELY
 (expr) ; \

68 
	`g_as£πi⁄_mesßge_ex¥
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

69 #ex¥); } 0)

	)

72 
g_°rcmp0
 (c⁄° *
°r1
,

73 c⁄° *
°r2
);

76 
	$g_ã°_möimized_ªsu…
 (
möimized_qu™tôy
,

77 c⁄° *
f‹m©
,

78 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

79 
	$g_ã°_maximized_ªsu…
 (
maximized_qu™tôy
,

80 c⁄° *
f‹m©
,

81 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

84 
	`g_ã°_öô
 (*
¨gc
,

85 ***
¨gv
,

88 
	#g_ã°_quick
(Ë(
g_ã°_c⁄fig_v¨s
->
ã°_quick
)

	)

89 
	#g_ã°_¶ow
(Ë(!
g_ã°_c⁄fig_v¨s
->
ã°_quick
)

	)

90 
	#g_ã°_th‹ough
(Ë(!
g_ã°_c⁄fig_v¨s
->
ã°_quick
)

	)

91 
	#g_ã°_≥rf
(Ë(
g_ã°_c⁄fig_v¨s
->
ã°_≥rf
)

	)

92 
	#g_ã°_vîbo£
(Ë(
g_ã°_c⁄fig_v¨s
->
ã°_vîbo£
)

	)

93 
	#g_ã°_quõt
(Ë(
g_ã°_c⁄fig_v¨s
->
ã°_quõt
)

	)

95 
	`g_ã°_run
 ();

97 
	`g_ã°_add_func
 (c⁄° *
ã°∑th
,

98 (*
ã°_func
) ());

99 
	`g_ã°_add_d©a_func
 (c⁄° *
ã°∑th
,

100 
gc⁄°poöãr
 
ã°_d©a
,

101 (*
ã°_func
Ë(
gc⁄°poöãr
));

103 
	#g_ã°_add
(
ã°∑th
, 
Fixtuª
, 
td©a
, 
f£tup
, 
·e°
, 
·órdown
) \

104 
G_STMT_START
 { \

105 (*
add_vèbÀ
) (const *, \

106 
gsize
, \

107 
gc⁄°poöãr
, \

108 (*Ë(
Fixtuª
*, 
gc⁄°poöãr
), \

109 (*Ë(
Fixtuª
*, 
gc⁄°poöãr
), \

110 (*Ë(
Fixtuª
*, 
gc⁄°poöãr
)Ë((*Ë(c⁄° 
gch¨
 *, 
gsize
, gc⁄°poöãr, (*Ë(Fixtuª*, gc⁄°poöãr), (*Ë(Fixtuª*, gc⁄°poöãr), (*Ë(Fixtuª*, gc⁄°poöãr))Ë
g_ã°_add_vèbÀ
; \

111 
add_vèbÀ
 \

112 (
ã°∑th
,  (
Fixtuª
), 
td©a
, 
f£tup
, 
·e°
, 
·órdown
); \

113 
	}
} 
G_STMT_END


	)

116 
	$g_ã°_mesßge
 (c⁄° *
f‹m©
,

117 ...Ë
	`G_GNUC_PRINTF
 (1, 2);

118 
	`g_ã°_bug_ba£
 (c⁄° *
uri_∑âîn
);

119 
	`g_ã°_bug
 (c⁄° *
bug_uri_¢ù≥t
);

121 
	`g_ã°_timî_°¨t
 ();

122 
	`g_ã°_timî_ñ≠£d
 ();

123 
	`g_ã°_timî_œ°
 ();

126 
	`g_ã°_queue_‰ì
 (
gpoöãr
 
g‰ì_poöãr
);

127 
	`g_ã°_queue_de°roy
 (
GDe°royNŸify
 
de°roy_func
,

128 
gpoöãr
 
de°roy_d©a
);

129 
	#g_ã°_queue_uƒef
(
gobje˘
Ë
	`g_ã°_queue_de°roy
 (
g_obje˘_uƒef
, gobje˘)

	)

133 
G_TEST_TRAP_SILENCE_STDOUT
 = 1 << 7,

134 
G_TEST_TRAP_SILENCE_STDERR
 = 1 << 8,

135 
G_TEST_TRAP_INHERIT_STDIN
 = 1 << 9

136 } 
	tGTe°TøpFœgs
;

137 
gboﬁón
 
	`g_ã°_å≠_f‹k
 (
guöt64
 
u£c_timeout
,

138 
GTe°TøpFœgs
 
ã°_å≠_Êags
);

139 
gboﬁón
 
	`g_ã°_å≠_has_∑s£d
 ();

140 
gboﬁón
 
	`g_ã°_å≠_ªached_timeout
 ();

141 
	#g_ã°_å≠_as£π_∑s£d
(Ë
	`g_ã°_å≠_as£πi⁄s
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 0, 0)

	)

142 
	#g_ã°_å≠_as£π_Áûed
(Ë
	`g_ã°_å≠_as£πi⁄s
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 1, 0)

	)

143 
	#g_ã°_å≠_as£π_°dout
(
souç©ã∫
Ë
	`g_ã°_å≠_as£πi⁄s
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 2, souç©ã∫)

	)

144 
	#g_ã°_å≠_as£π_°dout_unm©ched
(
souç©ã∫
Ë
	`g_ã°_å≠_as£πi⁄s
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 3, souç©ã∫)

	)

145 
	#g_ã°_å≠_as£π_°dîr
(
£º∑âîn
Ë
	`g_ã°_å≠_as£πi⁄s
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 4, sîΩ©ã∫)

	)

146 
	#g_ã°_å≠_as£π_°dîr_unm©ched
(
£º∑âîn
Ë
	`g_ã°_å≠_as£πi⁄s
 (
G_LOG_DOMAIN
, 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, 5, sîΩ©ã∫)

	)

149 
	#g_ã°_ønd_bô
(Ë(0 !(
	`g_ã°_ønd_öt
(Ë& (1 << 15)))

	)

150 
göt32
 
	`g_ã°_ønd_öt
 ();

151 
göt32
 
	`g_ã°_ønd_öt_ønge
 (göt32 
begö
,

152 
göt32
 
íd
);

153 
	`g_ã°_ønd_doubÀ
 ();

154 
	`g_ã°_ønd_doubÀ_ønge
 (
ønge_°¨t
,

155 
ønge_íd
);

158 
GTe°Ca£
* 
	`g_ã°_¸óã_ˇ£
 (c⁄° *
ã°_«me
,

159 
gsize
 
d©a_size
,

160 
gc⁄°poöãr
 
ã°_d©a
,

161 (*
d©a_£tup
) (),

162 (*
d©a_ã°
) (),

163 (*
d©a_ã¨down
) ());

164 
GTe°Suôe
* 
	`g_ã°_¸óã_suôe
 (c⁄° *
suôe_«me
);

165 
GTe°Suôe
* 
	`g_ã°_gë_roŸ
 ();

166 
	`g_ã°_suôe_add
 (
GTe°Suôe
 *
suôe
,

167 
GTe°Ca£
 *
ã°_ˇ£
);

168 
	`g_ã°_suôe_add_suôe
 (
GTe°Suôe
 *
suôe
,

169 
GTe°Suôe
 *
√°edsuôe
);

170 
	`g_ã°_run_suôe
 (
GTe°Suôe
 *
suôe
);

173 
	`g_ã°_å≠_as£πi⁄s
 (c⁄° *
domaö
,

174 c⁄° *
fûe
,

175 
löe
,

176 c⁄° *
func
,

177 
guöt64
 
as£πi⁄_Êags
,

178 c⁄° *
∑âîn
);

179 
	$g_as£πi⁄_mesßge
 (c⁄° *
domaö
,

180 c⁄° *
fûe
,

181 
löe
,

182 c⁄° *
func
,

183 c⁄° *
mesßge
Ë
G_GNUC_NORETURN
;

184 
	$g_as£πi⁄_mesßge_ex¥
 (c⁄° *
domaö
,

185 c⁄° *
fûe
,

186 
löe
,

187 c⁄° *
func
,

188 c⁄° *
ex¥
Ë
G_GNUC_NORETURN
;

189 
	$g_as£πi⁄_mesßge_cmp°r
 (c⁄° *
domaö
,

190 c⁄° *
fûe
,

191 
löe
,

192 c⁄° *
func
,

193 c⁄° *
ex¥
,

194 c⁄° *
¨g1
,

195 c⁄° *
cmp
,

196 c⁄° *
¨g2
Ë
G_GNUC_NORETURN
;

197 
	$g_as£πi⁄_mesßge_cm≤um
 (c⁄° *
domaö
,

198 c⁄° *
fûe
,

199 
löe
,

200 c⁄° *
func
,

201 c⁄° *
ex¥
,

202 
¨g1
,

203 c⁄° *
cmp
,

204 
¨g2
,

205 
numty≥
Ë
G_GNUC_NORETURN
;

206 
	$g_as£πi⁄_mesßge_îr‹
 (c⁄° *
domaö
,

207 c⁄° *
fûe
,

208 
löe
,

209 c⁄° *
func
,

210 c⁄° *
ex¥
,

211 
GEº‹
 *
îr‹
,

212 
GQu¨k
 
îr‹_domaö
,

213 
îr‹_code
Ë
G_GNUC_NORETURN
;

214 
	`g_ã°_add_vèbÀ
 (c⁄° *
ã°∑th
,

215 
gsize
 
d©a_size
,

216 
gc⁄°poöãr
 
ã°_d©a
,

217 (*
d©a_£tup
) (),

218 (*
d©a_ã°
) (),

219 (*
d©a_ã¨down
) ());

221 
gboﬁón
 
ã°_öôülized
;

222 
gboﬁón
 
ã°_quick
;

223 
gboﬁón
 
ã°_≥rf
;

224 
gboﬁón
 
ã°_vîbo£
;

225 
gboﬁón
 
ã°_quõt
;

226 } 
	tGTe°C⁄fig
;

227 
GLIB_VAR
 c⁄° 
GTe°C⁄fig
 * c⁄° 
g_ã°_c⁄fig_v¨s
;

231 
G_TEST_LOG_NONE
,

232 
G_TEST_LOG_ERROR
,

233 
G_TEST_LOG_START_BINARY
,

234 
G_TEST_LOG_LIST_CASE
,

235 
G_TEST_LOG_SKIP_CASE
,

236 
G_TEST_LOG_START_CASE
,

237 
G_TEST_LOG_STOP_CASE
,

238 
G_TEST_LOG_MIN_RESULT
,

239 
G_TEST_LOG_MAX_RESULT
,

240 
G_TEST_LOG_MESSAGE


241 } 
	tGTe°LogTy≥
;

244 
GTe°LogTy≥
 
log_ty≥
;

245 
guöt
 
n_°rögs
;

246 
gch¨
 **
°rögs
;

247 
guöt
 
n_nums
;

248 *
nums
;

249 } 
	tGTe°LogMsg
;

252 
GSåög
 *
d©a
;

253 
GSLi°
 *
msgs
;

254 } 
	tGTe°LogBuf„r
;

256 c⁄° * 
	`g_ã°_log_ty≥_«me
 (
GTe°LogTy≥
 
log_ty≥
);

257 
GTe°LogBuf„r
* 
	`g_ã°_log_buf„r_√w
 ();

258 
	`g_ã°_log_buf„r_‰ì
 (
GTe°LogBuf„r
 *
tbuf„r
);

259 
	`g_ã°_log_buf„r_push
 (
GTe°LogBuf„r
 *
tbuf„r
,

260 
guöt
 
n_byãs
,

261 c⁄° 
guöt8
 *
byãs
);

262 
GTe°LogMsg
* 
	`g_ã°_log_buf„r_p›
 (
GTe°LogBuf„r
 *
tbuf„r
);

263 
	`g_ã°_log_msg_‰ì
 (
GTe°LogMsg
 *
tmsg
);

265 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gthread.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_THREAD_H__


32 
	#__G_THREAD_H__


	)

34 
	~<glib/gîr‹.h
>

35 
	~<glib/gty≥s.h
>

36 
	~<glib/gutûs.h
>

37 
	~<glib/g©omic.h
>

39 
G_BEGIN_DECLS


44 
GQu¨k
 
g_thªad_îr‹_qu¨k
 ();

45 
	#G_THREAD_ERROR
 
	`g_thªad_îr‹_qu¨k
 ()

	)

49 
	mG_THREAD_ERROR_AGAIN


50 } 
	tGThªadEº‹
;

52 
	$gpoöãr
 (*
	tGThªadFunc
Ë(
	tgpoöãr
 
	td©a
);

56 
G_THREAD_PRIORITY_LOW
,

57 
G_THREAD_PRIORITY_NORMAL
,

58 
G_THREAD_PRIORITY_HIGH
,

59 
G_THREAD_PRIORITY_URGENT


60 } 
	tGThªadPri‹ôy
;

62 
_GThªad
 
	tGThªad
;

63 
	s_GThªad


66 
GThªadFunc
 
func
;

67 
gpoöãr
 
d©a
;

68 
gboﬁón
 
joöabÀ
;

69 
GThªadPri‹ôy
 
¥i‹ôy
;

72 
_GMuãx
 
	tGMuãx
;

73 
_GC⁄d
 
	tGC⁄d
;

74 
_GPriv©e
 
	tGPriv©e
;

75 
_GSèticPriv©e
 
	tGSèticPriv©e
;

77 
_GThªadFun˘i⁄s
 
	tGThªadFun˘i⁄s
;

78 
	s_GThªadFun˘i⁄s


80 
GMuãx
* (*
muãx_√w
) ();

81 (*
muãx_lock
Ë(
GMuãx
 *
muãx
);

82 
	`gboﬁón
 (*
muãx_åylock
Ë(
GMuãx
 *
muãx
);

83 (*
muãx_u∆ock
Ë(
GMuãx
 *
muãx
);

84 (*
muãx_‰ì
Ë(
GMuãx
 *
muãx
);

85 
GC⁄d
* (*
c⁄d_√w
) ();

86 (*
c⁄d_sig«l
Ë(
GC⁄d
 *
c⁄d
);

87 (*
c⁄d_brﬂdˇ°
Ë(
GC⁄d
 *
c⁄d
);

88 (*
c⁄d_waô
Ë(
GC⁄d
 *
c⁄d
,

89 
GMuãx
 *
muãx
);

90 
	`gboﬁón
 (*
c⁄d_timed_waô
Ë(
GC⁄d
 *
c⁄d
,

91 
GMuãx
 *
muãx
,

92 
GTimeVÆ
 *
íd_time
);

93 (*
c⁄d_‰ì
Ë(
GC⁄d
 *
c⁄d
);

94 
GPriv©e
* (*
¥iv©e_√w
Ë(
GDe°royNŸify
 
de°ru˘‹
);

95 
	`gpoöãr
 (*
¥iv©e_gë
Ë(
GPriv©e
 *
¥iv©e_key
);

96 (*
¥iv©e_£t
Ë(
GPriv©e
 *
¥iv©e_key
,

97 
gpoöãr
 
d©a
);

98 (*
thªad_¸óã
Ë(
GThªadFunc
 
func
,

99 
gpoöãr
 
d©a
,

100 
gul⁄g
 
°ack_size
,

101 
gboﬁón
 
joöabÀ
,

102 
gboﬁón
 
bound
,

103 
GThªadPri‹ôy
 
¥i‹ôy
,

104 
gpoöãr
 
thªad
,

105 
GEº‹
 **
îr‹
);

106 (*
thªad_yõld
) ();

107 (*
thªad_joö
Ë(
gpoöãr
 
thªad
);

108 (*
thªad_exô
) ();

109 (*
thªad_£t_¥i‹ôy
)(
gpoöãr
 
thªad
,

110 
GThªadPri‹ôy
 
¥i‹ôy
);

111 (*
thªad_£lf
Ë(
gpoöãr
 
thªad
);

112 
	`gboﬁón
 (*
thªad_equÆ
Ë(
gpoöãr
 
thªad1
,

113 
gpoöãr
 
thªad2
);

116 
GLIB_VAR
 
GThªadFun˘i⁄s
 
g_thªad_fun˘i⁄s_f‹_glib_u£
;

117 
GLIB_VAR
 
gboﬁón
 
g_thªad_u£_deÁu…_im∂
;

118 
GLIB_VAR
 
gboﬁón
 
g_thªads_gŸ_öôülized
;

120 
GLIB_VAR
 
	$guöt64
 (*
g_thªad_gëtime
) ();

126 
	`g_thªad_öô
 (
GThªadFun˘i⁄s
 *
vèbÀ
);

135 
	`g_thªad_öô_wôh_îr‹check_muãxes
 (
GThªadFun˘i⁄s
* 
vèbÀ
);

140 
gboﬁón
 
	`g_thªad_gë_öôülized
 ();

143 
	#G_MUTEX_DEBUG_MAGIC
 0xf8e18ad7

	)

145 #ifde‡
G_ERRORCHECK_MUTEXES


146 
	#g_thªad_öô
(
vèbÀ
Ë
	`g_thªad_öô_wôh_îr‹check_muãxes
 (vèbÀ)

	)

150 
GMuãx
* 
	`g_°©ic_muãx_gë_muãx_im∂
 (GMuãx **
muãx
);

152 
	#g_°©ic_muãx_gë_muãx_im∂_sh‹tcut
(
muãx
) \

153 (
	`g_©omic_poöãr_gë
 (
muãx
) ? *(mutex) : \

154 
	`g_°©ic_muãx_gë_muãx_im∂
 (
muãx
))

	)

158 
	#G_THREAD_UF
(
›
, 
¨gli°
) \

159 (*
g_thªad_fun˘i⁄s_f‹_glib_u£
 . 
›
Ë
¨gli°


	)

160 
	#G_THREAD_CF
(
›
, 
Áû
, 
¨g
) \

161 (
	`g_thªad_suµ‹ãd
 (Ë? 
	`G_THREAD_UF
 (
›
, 
¨g
Ë: (
Áû
))

	)

162 
	#G_THREAD_ECF
(
›
, 
Áû
, 
muãx
, 
ty≥
) \

163 (
	`g_thªad_suµ‹ãd
 () ? \

164 ((
	`ty≥
(*)(
GMuãx
*, c⁄° 
gul⁄g
, 
gch¨
 const*)) \

165 (*
g_thªad_fun˘i⁄s_f‹_glib_u£
 . 
›
)) \

166 (
muãx
, 
G_MUTEX_DEBUG_MAGIC
, 
G_STRLOC
Ë: (
Áû
))

	)

168 #i‚de‡
G_ERRORCHECK_MUTEXES


169 
	#g_muãx_lock
(
muãx
) \

170 
	`G_THREAD_CF
 (
muãx_lock
, ()0, (
muãx
))

	)

171 
	#g_muãx_åylock
(
muãx
) \

172 
	`G_THREAD_CF
 (
muãx_åylock
, 
TRUE
, (
muãx
))

	)

173 
	#g_muãx_u∆ock
(
muãx
) \

174 
	`G_THREAD_CF
 (
muãx_u∆ock
, ()0, (
muãx
))

	)

175 
	#g_muãx_‰ì
(
muãx
) \

176 
	`G_THREAD_CF
 (
muãx_‰ì
, ()0, (
muãx
))

	)

177 
	#g_c⁄d_waô
(
c⁄d
, 
muãx
) \

178 
	`G_THREAD_CF
 (
c⁄d_waô
, ()0, (
c⁄d
, 
muãx
))

	)

179 
	#g_c⁄d_timed_waô
(
c⁄d
, 
muãx
, 
abs_time
) \

180 
	`G_THREAD_CF
 (
c⁄d_timed_waô
, 
TRUE
, (
c⁄d
, 
muãx
, 
abs_time
))

	)

182 
	#g_muãx_lock
(
muãx
) \

183 
	`G_THREAD_ECF
 (
muãx_lock
, ()0, (
muãx
), )

	)

184 
	#g_muãx_åylock
(
muãx
) \

185 
	`G_THREAD_ECF
 (
muãx_åylock
, 
TRUE
, (
muãx
), 
gboﬁón
)

	)

186 
	#g_muãx_u∆ock
(
muãx
) \

187 
	`G_THREAD_ECF
 (
muãx_u∆ock
, ()0, (
muãx
), )

	)

188 
	#g_muãx_‰ì
(
muãx
) \

189 
	`G_THREAD_ECF
 (
muãx_‰ì
, ()0, (
muãx
), )

	)

190 
	#g_c⁄d_waô
(
c⁄d
, 
muãx
) \

191 (
	`g_thªad_suµ‹ãd
 (Ë? (((*)(
GC⁄d
*, 
GMuãx
*, 
gul⁄g
, 
gch¨
*))\

192 
g_thªad_fun˘i⁄s_f‹_glib_u£
.
c⁄d_waô
) \

193 (
c⁄d
, 
muãx
, 
G_MUTEX_DEBUG_MAGIC
, 
G_STRLOC
Ë: (Ë0)

	)

194 
	#g_c⁄d_timed_waô
(
c⁄d
, 
muãx
, 
abs_time
) \

195 (
	`g_thªad_suµ‹ãd
 () ? \

196 ((
	`gboﬁón
(*)(
GC⁄d
*, 
GMuãx
*, 
GTimeVÆ
*, 
gul⁄g
, 
gch¨
*)) \

197 
g_thªad_fun˘i⁄s_f‹_glib_u£
.
c⁄d_timed_waô
) \

198 (
c⁄d
, 
muãx
, 
abs_time
, 
G_MUTEX_DEBUG_MAGIC
, 
G_STRLOC
Ë: 
TRUE
)

	)

201 
	#g_thªad_suµ‹ãd
(Ë(
g_thªads_gŸ_öôülized
)

	)

202 
	#g_muãx_√w
(Ë
	`G_THREAD_UF
 (
muãx_√w
, ())

	)

203 
	#g_c⁄d_√w
(Ë
	`G_THREAD_UF
 (
c⁄d_√w
, ())

	)

204 
	#g_c⁄d_sig«l
(
c⁄d
Ë
	`G_THREAD_CF
 (
c⁄d_sig«l
, ()0, (c⁄d))

	)

205 
	#g_c⁄d_brﬂdˇ°
(
c⁄d
Ë
	`G_THREAD_CF
 (
c⁄d_brﬂdˇ°
, ()0, (c⁄d))

	)

206 
	#g_c⁄d_‰ì
(
c⁄d
Ë
	`G_THREAD_CF
 (
c⁄d_‰ì
, ()0, (c⁄d))

	)

207 
	#g_¥iv©e_√w
(
de°ru˘‹
Ë
	`G_THREAD_UF
 (
¥iv©e_√w
, (de°ru˘‹))

	)

208 
	#g_¥iv©e_gë
(
¥iv©e_key
Ë
	`G_THREAD_CF
 (
¥iv©e_gë
, \

209 ((
gpoöãr
)
¥iv©e_key
), \

210 (
¥iv©e_key
))

	)

211 
	#g_¥iv©e_£t
(
¥iv©e_key
, 
vÆue
Ë
	`G_THREAD_CF
 (
¥iv©e_£t
, \

212 (Ë(
¥iv©e_key
 = \

213 (
GPriv©e
*Ë(
vÆue
)), \

214 (
¥iv©e_key
, 
vÆue
))

	)

215 
	#g_thªad_yõld
(Ë
	`G_THREAD_CF
 (
thªad_yõld
, ()0, ())

	)

217 
	#g_thªad_¸óã
(
func
, 
d©a
, 
joöabÀ
, 
îr‹
) \

218 (
	`g_thªad_¸óã_fuŒ
 (
func
, 
d©a
, 0, 
joöabÀ
, 
FALSE
, \

219 
G_THREAD_PRIORITY_NORMAL
, 
îr‹
))

	)

221 
GThªad
* 
	`g_thªad_¸óã_fuŒ
 (
GThªadFunc
 
func
,

222 
gpoöãr
 
d©a
,

223 
gul⁄g
 
°ack_size
,

224 
gboﬁón
 
joöabÀ
,

225 
gboﬁón
 
bound
,

226 
GThªadPri‹ôy
 
¥i‹ôy
,

227 
GEº‹
 **
îr‹
);

228 
GThªad
* 
	`g_thªad_£lf
 ();

229 
	`g_thªad_exô
 (
gpoöãr
 
ªtvÆ
);

230 
gpoöãr
 
	`g_thªad_joö
 (
GThªad
 *
thªad
);

232 
	`g_thªad_£t_¥i‹ôy
 (
GThªad
 *
thªad
,

233 
GThªadPri‹ôy
 
¥i‹ôy
);

240 
	#g_°©ic_muãx_lock
(
muãx
) \

241 
	`g_muãx_lock
 (
	`g_°©ic_muãx_gë_muãx
 (
muãx
))

	)

242 
	#g_°©ic_muãx_åylock
(
muãx
) \

243 
	`g_muãx_åylock
 (
	`g_°©ic_muãx_gë_muãx
 (
muãx
))

	)

244 
	#g_°©ic_muãx_u∆ock
(
muãx
) \

245 
	`g_muãx_u∆ock
 (
	`g_°©ic_muãx_gë_muãx
 (
muãx
))

	)

246 
	`g_°©ic_muãx_öô
 (
GSèticMuãx
 *
muãx
);

247 
	`g_°©ic_muãx_‰ì
 (
GSèticMuãx
 *
muãx
);

249 
	s_GSèticPriv©e


252 
guöt
 
ödex
;

254 
	#G_STATIC_PRIVATE_INIT
 { 0 
	}

	)
}

255 
g_°©ic_¥iv©e_öô
 (
GSèticPriv©e
 *
¥iv©e_key
);

256 
gpoöãr
 
g_°©ic_¥iv©e_gë
 (
GSèticPriv©e
 *
¥iv©e_key
);

257 
g_°©ic_¥iv©e_£t
 (
GSèticPriv©e
 *
¥iv©e_key
,

258 
gpoöãr
 
d©a
,

259 
GDe°royNŸify
 
nŸify
);

260 
g_°©ic_¥iv©e_‰ì
 (
GSèticPriv©e
 *
¥iv©e_key
);

262 
_GSèticRecMuãx
 
	tGSèticRecMuãx
;

263 
	s_GSèticRecMuãx


266 
GSèticMuãx
 
	mmuãx
;

267 
guöt
 
	mdïth
;

268 
GSy°emThªad
 
	mow√r
;

271 
	#G_STATIC_REC_MUTEX_INIT
 { 
G_STATIC_MUTEX_INIT
 }

	)

272 
g_°©ic_ªc_muãx_öô
 (
GSèticRecMuãx
 *
muãx
);

273 
g_°©ic_ªc_muãx_lock
 (
GSèticRecMuãx
 *
muãx
);

274 
gboﬁón
 
g_°©ic_ªc_muãx_åylock
 (
GSèticRecMuãx
 *
muãx
);

275 
g_°©ic_ªc_muãx_u∆ock
 (
GSèticRecMuãx
 *
muãx
);

276 
g_°©ic_ªc_muãx_lock_fuŒ
 (
GSèticRecMuãx
 *
muãx
,

277 
guöt
 
dïth
);

278 
guöt
 
g_°©ic_ªc_muãx_u∆ock_fuŒ
 (
GSèticRecMuãx
 *
muãx
);

279 
g_°©ic_ªc_muãx_‰ì
 (
GSèticRecMuãx
 *
muãx
);

281 
_GSèticRWLock
 
	tGSèticRWLock
;

282 
	s_GSèticRWLock


285 
GSèticMuãx
 
	mmuãx
;

286 
GC⁄d
 *
	mªad_c⁄d
;

287 
GC⁄d
 *
	mwrôe_c⁄d
;

288 
guöt
 
	mªad_cou¡î
;

289 
gboﬁón
 
	mhave_wrôî
;

290 
guöt
 
	mw™t_to_ªad
;

291 
guöt
 
	mw™t_to_wrôe
;

294 
	#G_STATIC_RW_LOCK_INIT
 { 
G_STATIC_MUTEX_INIT
, 
NULL
, NULL, 0, 
FALSE
, 0, 0 }

	)

296 
g_°©ic_rw_lock_öô
 (
GSèticRWLock
* 
lock
);

297 
g_°©ic_rw_lock_ªadî_lock
 (
GSèticRWLock
* 
lock
);

298 
gboﬁón
 
g_°©ic_rw_lock_ªadî_åylock
 (
GSèticRWLock
* 
lock
);

299 
g_°©ic_rw_lock_ªadî_u∆ock
 (
GSèticRWLock
* 
lock
);

300 
g_°©ic_rw_lock_wrôî_lock
 (
GSèticRWLock
* 
lock
);

301 
gboﬁón
 
g_°©ic_rw_lock_wrôî_åylock
 (
GSèticRWLock
* 
lock
);

302 
g_°©ic_rw_lock_wrôî_u∆ock
 (
GSèticRWLock
* 
lock
);

303 
g_°©ic_rw_lock_‰ì
 (
GSèticRWLock
* 
lock
);

305 
g_thªad_f‹óch
 (
GFunc
 
thªad_func
,

306 
gpoöãr
 
u£r_d©a
);

310 
	mG_ONCE_STATUS_NOTCALLED
,

311 
	mG_ONCE_STATUS_PROGRESS
,

312 
	mG_ONCE_STATUS_READY


313 } 
	tGOn˚Sètus
;

315 
_GOn˚
 
	tGOn˚
;

316 
	s_GOn˚


318 vﬁ©ûê
GOn˚Sètus
 
	m°©us
;

319 vﬁ©ûê
gpoöãr
 
	mªtvÆ
;

322 
	#G_ONCE_INIT
 { 
G_ONCE_STATUS_NOTCALLED
, 
NULL
 }

	)

324 
gpoöãr
 
g_⁄˚_im∂
 (
GOn˚
 *
⁄˚
, 
GThªadFunc
 
func
, gpoöã∏
¨g
);

326 #ifde‡
G_ATOMIC_OP_MEMORY_BARRIER_NEEDED


327 
	#g_⁄˚
(
⁄˚
, 
func
, 
¨g
Ë
	`g_⁄˚_im∂
 ((⁄˚), (func), (¨g))

	)

329 
	#g_⁄˚
(
⁄˚
, 
func
, 
¨g
) \

330 (((
⁄˚
)->
°©us
 =
G_ONCE_STATUS_READY
) ? \

331 (
⁄˚
)->
ªtvÆ
 : \

332 
	`g_⁄˚_im∂
 ((
⁄˚
), (
func
), (
¨g
)))

	)

336 
G_INLINE_FUNC
 
gboﬁón
 
g_⁄˚_öô_íãr
 (vﬁ©ûê
gsize
 *
vÆue_loˇti⁄
);

337 
gboﬁón
 
g_⁄˚_öô_íãr_im∂
 (vﬁ©ûê
gsize
 *
vÆue_loˇti⁄
);

338 
g_⁄˚_öô_Àave
 (vﬁ©ûê
gsize
 *
vÆue_loˇti⁄
,

339 
gsize
 
öôüliz©i⁄_vÆue
);

340 #i‡
deföed
 (
G_CAN_INLINE
Ë|| deföed (
__G_THREAD_C__
)

341 
G_INLINE_FUNC
 
gboﬁón


342 
	$g_⁄˚_öô_íãr
 (vﬁ©ûê
gsize
 *
vÆue_loˇti⁄
)

344 
	`G_LIKELY
 ((
gpoöãr
Ë
	`g_©omic_poöãr_gë
 (
vÆue_loˇti⁄
Ë!
NULL
)

345  
FALSE
;

347  
	`g_⁄˚_öô_íãr_im∂
 (
vÆue_loˇti⁄
);

348 
	}
}

360 
glib_dummy_de˛
 ();

361 
	#G_LOCK_NAME
(
«me
Ë
g__
 ##Çamê## 
_lock


	)

362 #ifde‡ 
G_THREADS_ENABLED


363 
	#G_LOCK_DEFINE_STATIC
(
«me
Ë
	`G_LOCK_DEFINE
 («me)

	)

364 
	#G_LOCK_DEFINE
(
«me
) \

365 
GSèticMuãx
 
	`G_LOCK_NAME
 (
«me
Ë
G_STATIC_MUTEX_INIT


	)

366 
	#G_LOCK_EXTERN
(
«me
Ë
GSèticMuãx
 
	`G_LOCK_NAME
 («me)

	)

368 #ifde‡
G_DEBUG_LOCKS


369 
	#G_LOCK
(
«me
Ë
G_STMT_START
{ \

370 
	`g_log
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_DEBUG
, \

372 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

374 
	`g_°©ic_muãx_lock
 (&
	`G_LOCK_NAME
 (
«me
)); \

375 }
G_STMT_END


	)

376 
	#G_UNLOCK
(
«me
Ë
G_STMT_START
{ \

377 
	`g_log
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_DEBUG
, \

379 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

381 
	`g_°©ic_muãx_u∆ock
 (&
	`G_LOCK_NAME
 (
«me
)); \

382 }
G_STMT_END


	)

383 
	#G_TRYLOCK
(
«me
) \

384 (
	`g_log
 (
G_LOG_DOMAIN
, 
G_LOG_LEVEL_DEBUG
, \

386 
__FILE__
, 
__LINE__
, 
G_STRFUNC
, \

387 #«me), 
	`g_°©ic_muãx_åylock
 (&
	`G_LOCK_NAME
 (
«me
)))

	)

389 
	#G_LOCK
(
«me
Ë
	`g_°©ic_muãx_lock
 (&
	`G_LOCK_NAME
 («me))

	)

390 
	#G_UNLOCK
(
«me
Ë
	`g_°©ic_muãx_u∆ock
 (&
	`G_LOCK_NAME
 («me))

	)

391 
	#G_TRYLOCK
(
«me
Ë
	`g_°©ic_muãx_åylock
 (&
	`G_LOCK_NAME
 («me))

	)

394 
	#G_LOCK_DEFINE_STATIC
(
«me
Ë
	`glib_dummy_de˛
 ()

	)

395 
	#G_LOCK_DEFINE
(
«me
Ë
	`glib_dummy_de˛
 ()

	)

396 
	#G_LOCK_EXTERN
(
«me
Ë
	`glib_dummy_de˛
 ()

	)

397 
	#G_LOCK
(
«me
)

	)

398 
	#G_UNLOCK
(
«me
)

	)

399 
	#G_TRYLOCK
(
«me
Ë(
TRUE
)

	)

402 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gthreadpool.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_THREADPOOL_H__


32 
	#__G_THREADPOOL_H__


	)

34 
	~<glib/gthªad.h
>

36 
G_BEGIN_DECLS


38 
_GThªadPoﬁ
 
	tGThªadPoﬁ
;

45 
	s_GThªadPoﬁ


47 
GFunc
 
	mfunc
;

48 
gpoöãr
 
	mu£r_d©a
;

49 
gboﬁón
 
	mex˛usive
;

57 
GThªadPoﬁ
* 
g_thªad_poﬁ_√w
 (
GFunc
 
func
,

58 
gpoöãr
 
u£r_d©a
,

59 
göt
 
max_thªads
,

60 
gboﬁón
 
ex˛usive
,

61 
GEº‹
 **
îr‹
);

67 
g_thªad_poﬁ_push
 (
GThªadPoﬁ
 *
poﬁ
,

68 
gpoöãr
 
d©a
,

69 
GEº‹
 **
îr‹
);

74 
g_thªad_poﬁ_£t_max_thªads
 (
GThªadPoﬁ
 *
poﬁ
,

75 
göt
 
max_thªads
,

76 
GEº‹
 **
îr‹
);

77 
göt
 
g_thªad_poﬁ_gë_max_thªads
 (
GThªadPoﬁ
 *
poﬁ
);

81 
guöt
 
g_thªad_poﬁ_gë_num_thªads
 (
GThªadPoﬁ
 *
poﬁ
);

84 
guöt
 
g_thªad_poﬁ_u≈ro˚s£d
 (
GThªadPoﬁ
 *
poﬁ
);

90 
g_thªad_poﬁ_‰ì
 (
GThªadPoﬁ
 *
poﬁ
,

91 
gboﬁón
 
immedüã
,

92 
gboﬁón
 
waô_
);

96 
g_thªad_poﬁ_£t_max_unu£d_thªads
 (
göt
 
max_thªads
);

97 
göt
 
g_thªad_poﬁ_gë_max_unu£d_thªads
 ();

98 
guöt
 
g_thªad_poﬁ_gë_num_unu£d_thªads
 ();

101 
g_thªad_poﬁ_°›_unu£d_thªads
 ();

104 
g_thªad_poﬁ_£t_s‹t_fun˘i⁄
 (
GThªadPoﬁ
 *
poﬁ
,

105 
GCom∑ªD©aFunc
 
func
,

106 
gpoöãr
 
u£r_d©a
);

109 
g_thªad_poﬁ_£t_max_idÀ_time
 (
guöt
 
öãrvÆ
);

110 
guöt
 
g_thªad_poﬁ_gë_max_idÀ_time
 ();

112 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gtimer.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_TIMER_H__


32 
	#__G_TIMER_H__


	)

34 
	~<glib/gty≥s.h
>

36 
G_BEGIN_DECLS


42 
_GTimî
 
	tGTimî
;

44 
	#G_USEC_PER_SEC
 1000000

	)

46 
GTimî
* 
g_timî_√w
 ();

47 
g_timî_de°roy
 (
GTimî
 *
timî
);

48 
g_timî_°¨t
 (
GTimî
 *
timî
);

49 
g_timî_°›
 (
GTimî
 *
timî
);

50 
g_timî_ª£t
 (
GTimî
 *
timî
);

51 
g_timî_c⁄töue
 (
GTimî
 *
timî
);

52 
gdoubÀ
 
g_timî_ñ≠£d
 (
GTimî
 *
timî
,

53 
gul⁄g
 *
mi¸o£c⁄ds
);

55 
g_u¶ìp
 (
gul⁄g
 
mi¸o£c⁄ds
);

57 
g_time_vÆ_add
 (
GTimeVÆ
 *
time_
,

58 
gl⁄g
 
mi¸o£c⁄ds
);

59 
gboﬁón
 
g_time_vÆ_‰om_iso8601
 (c⁄° 
gch¨
 *
iso_d©e
,

60 
GTimeVÆ
 *
time_
);

61 
gch¨
* 
	$g_time_vÆ_to_iso8601
 (
GTimeVÆ
 *
time_
Ë
G_GNUC_MALLOC
;

63 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gtree.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_TREE_H__


32 
	#__G_TREE_H__


	)

34 
	~<glib/gnode.h
>

36 
G_BEGIN_DECLS


38 
_GTªe
 
	tGTªe
;

40 
	$gboﬁón
 (*
	tGTøvî£Func
Ë(
	tgpoöãr
 
	tkey
,

41 
	tgpoöãr
 
	tvÆue
,

42 
	tgpoöãr
 
	td©a
);

46 
GTªe
* 
	`g_åì_√w
 (
GCom∑ªFunc
 
key_com∑ª_func
);

47 
GTªe
* 
	`g_åì_√w_wôh_d©a
 (
GCom∑ªD©aFunc
 
key_com∑ª_func
,

48 
gpoöãr
 
key_com∑ª_d©a
);

49 
GTªe
* 
	`g_åì_√w_fuŒ
 (
GCom∑ªD©aFunc
 
key_com∑ª_func
,

50 
gpoöãr
 
key_com∑ª_d©a
,

51 
GDe°royNŸify
 
key_de°roy_func
,

52 
GDe°royNŸify
 
vÆue_de°roy_func
);

53 
	`g_åì_de°roy
 (
GTªe
 *
åì
);

54 
	`g_åì_ö£π
 (
GTªe
 *
åì
,

55 
gpoöãr
 
key
,

56 
gpoöãr
 
vÆue
);

57 
	`g_åì_ª∂a˚
 (
GTªe
 *
åì
,

58 
gpoöãr
 
key
,

59 
gpoöãr
 
vÆue
);

60 
gboﬁón
 
	`g_åì_ªmove
 (
GTªe
 *
åì
,

61 
gc⁄°poöãr
 
key
);

62 
gboﬁón
 
	`g_åì_°ól
 (
GTªe
 *
åì
,

63 
gc⁄°poöãr
 
key
);

64 
gpoöãr
 
	`g_åì_lookup
 (
GTªe
 *
åì
,

65 
gc⁄°poöãr
 
key
);

66 
gboﬁón
 
	`g_åì_lookup_exãnded
 (
GTªe
 *
åì
,

67 
gc⁄°poöãr
 
lookup_key
,

68 
gpoöãr
 *
‹ig_key
,

69 
gpoöãr
 *
vÆue
);

70 
	`g_åì_f‹óch
 (
GTªe
 *
åì
,

71 
GTøvî£Func
 
func
,

72 
gpoöãr
 
u£r_d©a
);

74 #i‚de‡
G_DISABLE_DEPRECATED


75 
	`g_åì_åavî£
 (
GTªe
 *
åì
,

76 
GTøvî£Func
 
åavî£_func
,

77 
GTøvî£Ty≥
 
åavî£_ty≥
,

78 
gpoöãr
 
u£r_d©a
);

81 
gpoöãr
 
	`g_åì_£¨ch
 (
GTªe
 *
åì
,

82 
GCom∑ªFunc
 
£¨ch_func
,

83 
gc⁄°poöãr
 
u£r_d©a
);

84 
göt
 
	`g_åì_height
 (
GTªe
 *
åì
);

85 
göt
 
	`g_åì_¬odes
 (
GTªe
 *
åì
);

87 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gtypes.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_TYPES_H__


32 
	#__G_TYPES_H__


	)

34 
	~<glibc⁄fig.h
>

35 
	~<glib/gma¸os.h
>

37 
G_BEGIN_DECLS


46 
	tgch¨
;

47 
	tgsh‹t
;

48 
	tgl⁄g
;

49 
	tgöt
;

50 
göt
 
	tgboﬁón
;

52 
	tguch¨
;

53 
	tgush‹t
;

54 
	tgul⁄g
;

55 
	tguöt
;

57 
	tgÊﬂt
;

58 
	tgdoubÀ
;

61 
	#G_MININT8
 ((
göt8
Ë0x80)

	)

62 
	#G_MAXINT8
 ((
göt8
Ë0x7f)

	)

63 
	#G_MAXUINT8
 ((
guöt8
Ë0xff)

	)

65 
	#G_MININT16
 ((
göt16
Ë0x8000)

	)

66 
	#G_MAXINT16
 ((
göt16
Ë0x7fff)

	)

67 
	#G_MAXUINT16
 ((
guöt16
Ë0xffff)

	)

69 
	#G_MININT32
 ((
göt32
Ë0x80000000)

	)

70 
	#G_MAXINT32
 ((
göt32
Ë0x7fffffff)

	)

71 
	#G_MAXUINT32
 ((
guöt32
Ë0xffffffff)

	)

73 
	#G_MININT64
 ((
göt64
Ë
	`G_GINT64_CONSTANT
(0x8000000000000000))

	)

74 
	#G_MAXINT64
 
	`G_GINT64_CONSTANT
(0x7fffffffffffffff)

	)

75 
	#G_MAXUINT64
 
	`G_GINT64_CONSTANT
(0xffffffffffffffffU)

	)

77 * 
	tgpoöãr
;

78 c⁄° *
	tgc⁄°poöãr
;

80 
	$göt
 (*
	tGCom∑ªFunc
Ë(
	tgc⁄°poöãr
 
	ta
,

81 
	tgc⁄°poöãr
 
	tb
);

82 
	$göt
 (*
	tGCom∑ªD©aFunc
Ë(
	tgc⁄°poöãr
 
	ta
,

83 
	tgc⁄°poöãr
 
	tb
,

84 
	tgpoöãr
 
	tu£r_d©a
);

85 
	$gboﬁón
 (*
	tGEquÆFunc
Ë(
	tgc⁄°poöãr
 
	ta
,

86 
	tgc⁄°poöãr
 
	tb
);

87 (*
	tGDe°royNŸify
Ë(
	tgpoöãr
 
	td©a
);

88 (*
	tGFunc
Ë(
	tgpoöãr
 
	td©a
,

89 
	tgpoöãr
 
	tu£r_d©a
);

90 
	$guöt
 (*
	tGHashFunc
Ë(
	tgc⁄°poöãr
 
	tkey
);

91 (*
	tGHFunc
Ë(
	tgpoöãr
 
	tkey
,

92 
	tgpoöãr
 
	tvÆue
,

93 
	tgpoöãr
 
	tu£r_d©a
);

94 (*
	tGFªeFunc
Ë(
	tgpoöãr
 
	td©a
);

95 c⁄° 
	tgch¨
 * (*
	tGTøn¶©eFunc
Ë(c⁄° gch¨ *
	t°r
,

96 
	tgpoöãr
 
	td©a
);

109 
	#G_E
 2.7182818284590452353602874713526624977572470937000

	)

110 
	#G_LN2
 0.69314718055994530941723212145817656807550013436026

	)

111 
	#G_LN10
 2.3025850929940456840179914546843642076011014886288

	)

112 
	#G_PI
 3.1415926535897932384626433832795028841971693993751

	)

113 
	#G_PI_2
 1.5707963267948966192313216916397514420985846996876

	)

114 
	#G_PI_4
 0.78539816339744830961566084581987572104929234984378

	)

115 
	#G_SQRT2
 1.4142135623730950488016887242096980785696718753769

	)

122 
	#G_LITTLE_ENDIAN
 1234

	)

123 
	#G_BIG_ENDIAN
 4321

	)

124 
	#G_PDP_ENDIAN
 3412

	)

129 
	#GUINT16_SWAP_LE_BE_CONSTANT
(
vÆ
Ë((
guöt16
) ( \

130 (
guöt16
Ë((guöt16Ë(
vÆ
) >> 8) | \

131 (
guöt16
Ë((guöt16Ë(
vÆ
Ë<< 8)))

	)

133 
	#GUINT32_SWAP_LE_BE_CONSTANT
(
vÆ
Ë((
guöt32
) ( \

134 (((
guöt32
Ë(
vÆ
) & (guint32) 0x000000ffU) << 24) | \

135 (((
guöt32
Ë(
vÆ
) & (guint32) 0x0000ff00U) << 8) | \

136 (((
guöt32
Ë(
vÆ
) & (guint32) 0x00ff0000U) >> 8) | \

137 (((
guöt32
Ë(
vÆ
Ë& (guöt32Ë0xff000000UË>> 24)))

	)

139 
	#GUINT64_SWAP_LE_BE_CONSTANT
(
vÆ
Ë((
guöt64
) ( \

140 (((
guöt64
Ë(
vÆ
) & \

141 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x00000000000000ffU)) << 56) | \

142 (((
guöt64
Ë(
vÆ
) & \

143 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x000000000000ff00U)) << 40) | \

144 (((
guöt64
Ë(
vÆ
) & \

145 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x0000000000ff0000U)) << 24) | \

146 (((
guöt64
Ë(
vÆ
) & \

147 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x00000000ff000000U)) << 8) | \

148 (((
guöt64
Ë(
vÆ
) & \

149 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x000000ff00000000U)) >> 8) | \

150 (((
guöt64
Ë(
vÆ
) & \

151 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x0000ff0000000000U)) >> 24) | \

152 (((
guöt64
Ë(
vÆ
) & \

153 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0x00ff000000000000U)) >> 40) | \

154 (((
guöt64
Ë(
vÆ
) & \

155 (
guöt64
Ë
	`G_GINT64_CONSTANT
 (0xff00000000000000U)Ë>> 56)))

	)

159 #i‡
	`deföed
 (
__GNUC__
Ë&& (__GNUC__ >2Ë&& deföed (
__OPTIMIZE__
)

160 #i‡
	`deföed
 (
__i386__
)

161 
	#GUINT16_SWAP_LE_BE_IA32
(
vÆ
) \

162 (
__exãnsi⁄__
 \

163 ({ 
guöt16
 
__v
, 
__x
 = ((guöt16Ë(
vÆ
)); \

164 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

165 
__v
 = 
	`GUINT16_SWAP_LE_BE_CONSTANT
 (
__x
); \

167 
	`__asm__
 ("rorw $8, %w0" \

168 : "Ù" (
__v
) \

169 : "0" (
__x
) \

171 
__v
; 
	}
}))

	)

172 #i‡!
deföed
 (
__i486__
Ë&& !deföed (
__i586__
) \

173 && !
deföed
 (
__≥¡ium__
Ë&& !deföed (
__i686__
) \

174 && !
deföed
 (
__≥¡ium¥o__
Ë&& !
	$deföed
 (
__≥¡ium4__
)

175 
	#GUINT32_SWAP_LE_BE_IA32
(
vÆ
) \

176 (
__exãnsi⁄__
 \

177 ({ 
guöt32
 
__v
, 
__x
 = ((guöt32Ë(
vÆ
)); \

178 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

179 
__v
 = 
	`GUINT32_SWAP_LE_BE_CONSTANT
 (
__x
); \

181 
	`__asm__
 ("rorw $8, %w0\n\t" \

184 : "Ù" (
__v
) \

185 : "0" (
__x
) \

187 
__v
; 
	}
}))

	)

189 
	#GUINT32_SWAP_LE_BE_IA32
(
vÆ
) \

190 (
__exãnsi⁄__
 \

191 ({ 
guöt32
 
__v
, 
__x
 = ((guöt32Ë(
vÆ
)); \

192 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

193 
__v
 = 
	`GUINT32_SWAP_LE_BE_CONSTANT
 (
__x
); \

195 
	`__asm__
 ("bswap %0" \

196 : "Ù" (
__v
) \

197 : "0" (
__x
)); \

198 
__v
; }))

	)

200 
	#GUINT64_SWAP_LE_BE_IA32
(
vÆ
) \

201 (
__exãnsi⁄__
 \

202 ({ uni⁄ { 
guöt64
 
__Œ
; \

203 
guöt32
 
__l
[2]; } 
__w
, 
__r
; \

204 
__w
.
__Œ
 = ((
guöt64
Ë(
vÆ
)); \

205 i‡(
	`__buûtö_c⁄°™t_p
 (
__w
.
__Œ
)) \

206 
__r
.
__Œ
 = 
	`GUINT64_SWAP_LE_BE_CONSTANT
 (
__w
.__ll); \

209 
__r
.
__l
[0] = 
	`GUINT32_SWAP_LE_BE
 (
__w
.__l[1]); \

210 
__r
.
__l
[1] = 
	`GUINT32_SWAP_LE_BE
 (
__w
.__l[0]); \

212 
__r
.
__Œ
; }))

	)

214 
	#GUINT16_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE_IA32
 (vÆ))

	)

215 
	#GUINT32_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT32_SWAP_LE_BE_IA32
 (vÆ))

	)

216 
	#GUINT64_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT64_SWAP_LE_BE_IA32
 (vÆ))

	)

217 #ñi‡
deföed
 (
__ü64__
)

218 
	#GUINT16_SWAP_LE_BE_IA64
(
vÆ
) \

219 (
__exãnsi⁄__
 \

220 ({ 
guöt16
 
__v
, 
__x
 = ((guöt16Ë(
vÆ
)); \

221 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

222 
__v
 = 
	`GUINT16_SWAP_LE_BE_CONSTANT
 (
__x
); \

224 
__asm__
 
	`__vﬁ©ûe__
 ("shl %0 = %1, 48 ;;" \

226 : "Ù" (
__v
) \

227 : "r" (
__x
)); \

228 
__v
; }))

	)

229 
	#GUINT32_SWAP_LE_BE_IA64
(
vÆ
) \

230 (
__exãnsi⁄__
 \

231 ({ 
guöt32
 
__v
, 
__x
 = ((guöt32Ë(
vÆ
)); \

232 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

233 
__v
 = 
	`GUINT32_SWAP_LE_BE_CONSTANT
 (
__x
); \

235 
__asm__
 
	`__vﬁ©ûe__
 ("shl %0 = %1, 32 ;;" \

237 : "Ù" (
__v
) \

238 : "r" (
__x
)); \

239 
__v
; }))

	)

240 
	#GUINT64_SWAP_LE_BE_IA64
(
vÆ
) \

241 (
__exãnsi⁄__
 \

242 ({ 
guöt64
 
__v
, 
__x
 = ((guöt64Ë(
vÆ
)); \

243 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

244 
__v
 = 
	`GUINT64_SWAP_LE_BE_CONSTANT
 (
__x
); \

246 
__asm__
 
	`__vﬁ©ûe__
 ("mux1 %0 = %1, @rev ;;" \

247 : "Ù" (
__v
) \

248 : "r" (
__x
)); \

249 
__v
; }))

	)

250 
	#GUINT16_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE_IA64
 (vÆ))

	)

251 
	#GUINT32_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT32_SWAP_LE_BE_IA64
 (vÆ))

	)

252 
	#GUINT64_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT64_SWAP_LE_BE_IA64
 (vÆ))

	)

253 #ñi‡
deföed
 (
__x86_64__
)

254 
	#GUINT32_SWAP_LE_BE_X86_64
(
vÆ
) \

255 (
__exãnsi⁄__
 \

256 ({ 
guöt32
 
__v
, 
__x
 = ((guöt32Ë(
vÆ
)); \

257 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

258 
__v
 = 
	`GUINT32_SWAP_LE_BE_CONSTANT
 (
__x
); \

260 
	`__asm__
 ("bswapl %0" \

261 : "Ù" (
__v
) \

262 : "0" (
__x
)); \

263 
__v
; }))

	)

264 
	#GUINT64_SWAP_LE_BE_X86_64
(
vÆ
) \

265 (
__exãnsi⁄__
 \

266 ({ 
guöt64
 
__v
, 
__x
 = ((guöt64Ë(
vÆ
)); \

267 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

268 
__v
 = 
	`GUINT64_SWAP_LE_BE_CONSTANT
 (
__x
); \

270 
	`__asm__
 ("bswapq %0" \

271 : "Ù" (
__v
) \

272 : "0" (
__x
)); \

273 
__v
; }))

	)

275 
	#GUINT16_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

276 
	#GUINT32_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT32_SWAP_LE_BE_X86_64
 (vÆ))

	)

277 
	#GUINT64_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT64_SWAP_LE_BE_X86_64
 (vÆ))

	)

279 
	#GUINT16_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

280 
	#GUINT32_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT32_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

281 
	#GUINT64_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT64_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

284 
	#GUINT16_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

285 
	#GUINT32_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT32_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

286 
	#GUINT64_SWAP_LE_BE
(
vÆ
Ë(
	`GUINT64_SWAP_LE_BE_CONSTANT
 (vÆ))

	)

289 
	#GUINT16_SWAP_LE_PDP
(
vÆ
Ë((
guöt16
Ë(vÆ))

	)

290 
	#GUINT16_SWAP_BE_PDP
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE
 (vÆ))

	)

291 
	#GUINT32_SWAP_LE_PDP
(
vÆ
Ë((
guöt32
) ( \

292 (((
guöt32
Ë(
vÆ
) & (guint32) 0x0000ffffU) << 16) | \

293 (((
guöt32
Ë(
vÆ
Ë& (guöt32Ë0xffff0000UË>> 16)))

	)

294 
	#GUINT32_SWAP_BE_PDP
(
vÆ
Ë((
guöt32
) ( \

295 (((
guöt32
Ë(
vÆ
) & (guint32) 0x00ff00ffU) << 8) | \

296 (((
guöt32
Ë(
vÆ
Ë& (guöt32Ë0xff00ff00UË>> 8)))

	)

301 
	#GINT16_FROM_LE
(
vÆ
Ë(
	`GINT16_TO_LE
 (vÆ))

	)

302 
	#GUINT16_FROM_LE
(
vÆ
Ë(
	`GUINT16_TO_LE
 (vÆ))

	)

303 
	#GINT16_FROM_BE
(
vÆ
Ë(
	`GINT16_TO_BE
 (vÆ))

	)

304 
	#GUINT16_FROM_BE
(
vÆ
Ë(
	`GUINT16_TO_BE
 (vÆ))

	)

305 
	#GINT32_FROM_LE
(
vÆ
Ë(
	`GINT32_TO_LE
 (vÆ))

	)

306 
	#GUINT32_FROM_LE
(
vÆ
Ë(
	`GUINT32_TO_LE
 (vÆ))

	)

307 
	#GINT32_FROM_BE
(
vÆ
Ë(
	`GINT32_TO_BE
 (vÆ))

	)

308 
	#GUINT32_FROM_BE
(
vÆ
Ë(
	`GUINT32_TO_BE
 (vÆ))

	)

310 
	#GINT64_FROM_LE
(
vÆ
Ë(
	`GINT64_TO_LE
 (vÆ))

	)

311 
	#GUINT64_FROM_LE
(
vÆ
Ë(
	`GUINT64_TO_LE
 (vÆ))

	)

312 
	#GINT64_FROM_BE
(
vÆ
Ë(
	`GINT64_TO_BE
 (vÆ))

	)

313 
	#GUINT64_FROM_BE
(
vÆ
Ë(
	`GUINT64_TO_BE
 (vÆ))

	)

315 
	#GLONG_FROM_LE
(
vÆ
Ë(
	`GLONG_TO_LE
 (vÆ))

	)

316 
	#GULONG_FROM_LE
(
vÆ
Ë(
	`GULONG_TO_LE
 (vÆ))

	)

317 
	#GLONG_FROM_BE
(
vÆ
Ë(
	`GLONG_TO_BE
 (vÆ))

	)

318 
	#GULONG_FROM_BE
(
vÆ
Ë(
	`GULONG_TO_BE
 (vÆ))

	)

320 
	#GINT_FROM_LE
(
vÆ
Ë(
	`GINT_TO_LE
 (vÆ))

	)

321 
	#GUINT_FROM_LE
(
vÆ
Ë(
	`GUINT_TO_LE
 (vÆ))

	)

322 
	#GINT_FROM_BE
(
vÆ
Ë(
	`GINT_TO_BE
 (vÆ))

	)

323 
	#GUINT_FROM_BE
(
vÆ
Ë(
	`GUINT_TO_BE
 (vÆ))

	)

328 
	#g_¡ohl
(
vÆ
Ë(
	`GUINT32_FROM_BE
 (vÆ))

	)

329 
	#g_¡ohs
(
vÆ
Ë(
	`GUINT16_FROM_BE
 (vÆ))

	)

330 
	#g_ht⁄l
(
vÆ
Ë(
	`GUINT32_TO_BE
 (vÆ))

	)

331 
	#g_ht⁄s
(
vÆ
Ë(
	`GUINT16_TO_BE
 (vÆ))

	)

350 
_GDoubÀIEEE754
 
	tGDoubÀIEEE754
;

351 
_GFlﬂtIEEE754
 
	tGFlﬂtIEEE754
;

352 
	#G_IEEE754_FLOAT_BIAS
 (127)

	)

353 
	#G_IEEE754_DOUBLE_BIAS
 (1023)

	)

355 
	#G_LOG_2_BASE_10
 (0.30102999566398119521)

	)

356 #i‡
G_BYTE_ORDER
 =
G_LITTLE_ENDIAN


357 
	u_GFlﬂtIEEE754


359 
gÊﬂt
 
	mv_Êﬂt
;

361 
guöt
 
	mm™tisß
 : 23;

362 
guöt
 
	mbü£d_exp⁄ít
 : 8;

363 
guöt
 
	msign
 : 1;

364 } 
	mm≤
;

366 
	u_GDoubÀIEEE754


368 
gdoubÀ
 
	mv_doubÀ
;

370 
guöt
 
	mm™tisß_low
 : 32;

371 
guöt
 
	mm™tisß_high
 : 20;

372 
guöt
 
	mbü£d_exp⁄ít
 : 11;

373 
guöt
 
	msign
 : 1;

374 } 
	mm≤
;

376 #ñi‡
G_BYTE_ORDER
 =
G_BIG_ENDIAN


377 
	u_GFlﬂtIEEE754


379 
gÊﬂt
 
	mv_Êﬂt
;

381 
guöt
 
	msign
 : 1;

382 
guöt
 
	mbü£d_exp⁄ít
 : 8;

383 
guöt
 
	mm™tisß
 : 23;

384 } 
	mm≤
;

386 
	u_GDoubÀIEEE754


388 
gdoubÀ
 
	mv_doubÀ
;

390 
guöt
 
	msign
 : 1;

391 
guöt
 
	mbü£d_exp⁄ít
 : 11;

392 
guöt
 
	mm™tisß_high
 : 20;

393 
guöt
 
	mm™tisß_low
 : 32;

394 } 
	mm≤
;

397 #îr‹ 
unknown
 
ENDIAN
 
ty≥


400 
_GTimeVÆ
 
	tGTimeVÆ
;

402 
	s_GTimeVÆ


404 
gl⁄g
 
	mtv_£c
;

405 
gl⁄g
 
	mtv_u£c
;

408 
	gG_END_DECLS


413 #i‚de‡
GLIB_VAR


414 #ifde‡
G_PLATFORM_WIN32


415 #ifde‡
GLIB_STATIC_COMPILATION


416 
	#GLIB_VAR
 

	)

418 #ifde‡
GLIB_COMPILATION


419 #ifde‡
DLL_EXPORT


420 
	#GLIB_VAR
 
	`__de˛•ec
(
dŒexp‹t
)

	)

422 
	#GLIB_VAR
 

	)

425 
	#GLIB_VAR
 
	`__de˛•ec
(
dŒimp‹t
)

	)

429 
	#GLIB_VAR
 

	)

	@/usr/include/glib-2.0/glib/gunicode.h

22 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

26 #i‚de‡
__G_UNICODE_H__


27 
	#__G_UNICODE_H__


	)

29 
	~<glib/gîr‹.h
>

30 
	~<glib/gty≥s.h
>

32 
G_BEGIN_DECLS


34 
guöt32
 
	tgunich¨
;

35 
guöt16
 
	tgunich¨2
;

42 
	mG_UNICODE_CONTROL
,

43 
	mG_UNICODE_FORMAT
,

44 
	mG_UNICODE_UNASSIGNED
,

45 
	mG_UNICODE_PRIVATE_USE
,

46 
	mG_UNICODE_SURROGATE
,

47 
	mG_UNICODE_LOWERCASE_LETTER
,

48 
	mG_UNICODE_MODIFIER_LETTER
,

49 
	mG_UNICODE_OTHER_LETTER
,

50 
	mG_UNICODE_TITLECASE_LETTER
,

51 
	mG_UNICODE_UPPERCASE_LETTER
,

52 
	mG_UNICODE_COMBINING_MARK
,

53 
	mG_UNICODE_ENCLOSING_MARK
,

54 
	mG_UNICODE_NON_SPACING_MARK
,

55 
	mG_UNICODE_DECIMAL_NUMBER
,

56 
	mG_UNICODE_LETTER_NUMBER
,

57 
	mG_UNICODE_OTHER_NUMBER
,

58 
	mG_UNICODE_CONNECT_PUNCTUATION
,

59 
	mG_UNICODE_DASH_PUNCTUATION
,

60 
	mG_UNICODE_CLOSE_PUNCTUATION
,

61 
	mG_UNICODE_FINAL_PUNCTUATION
,

62 
	mG_UNICODE_INITIAL_PUNCTUATION
,

63 
	mG_UNICODE_OTHER_PUNCTUATION
,

64 
	mG_UNICODE_OPEN_PUNCTUATION
,

65 
	mG_UNICODE_CURRENCY_SYMBOL
,

66 
	mG_UNICODE_MODIFIER_SYMBOL
,

67 
	mG_UNICODE_MATH_SYMBOL
,

68 
	mG_UNICODE_OTHER_SYMBOL
,

69 
	mG_UNICODE_LINE_SEPARATOR
,

70 
	mG_UNICODE_PARAGRAPH_SEPARATOR
,

71 
	mG_UNICODE_SPACE_SEPARATOR


72 } 
	tGUnicodeTy≥
;

81 
	mG_UNICODE_BREAK_MANDATORY
,

82 
	mG_UNICODE_BREAK_CARRIAGE_RETURN
,

83 
	mG_UNICODE_BREAK_LINE_FEED
,

84 
	mG_UNICODE_BREAK_COMBINING_MARK
,

85 
	mG_UNICODE_BREAK_SURROGATE
,

86 
	mG_UNICODE_BREAK_ZERO_WIDTH_SPACE
,

87 
	mG_UNICODE_BREAK_INSEPARABLE
,

88 
	mG_UNICODE_BREAK_NON_BREAKING_GLUE
,

89 
	mG_UNICODE_BREAK_CONTINGENT
,

90 
	mG_UNICODE_BREAK_SPACE
,

91 
	mG_UNICODE_BREAK_AFTER
,

92 
	mG_UNICODE_BREAK_BEFORE
,

93 
	mG_UNICODE_BREAK_BEFORE_AND_AFTER
,

94 
	mG_UNICODE_BREAK_HYPHEN
,

95 
	mG_UNICODE_BREAK_NON_STARTER
,

96 
	mG_UNICODE_BREAK_OPEN_PUNCTUATION
,

97 
	mG_UNICODE_BREAK_CLOSE_PUNCTUATION
,

98 
	mG_UNICODE_BREAK_QUOTATION
,

99 
	mG_UNICODE_BREAK_EXCLAMATION
,

100 
	mG_UNICODE_BREAK_IDEOGRAPHIC
,

101 
	mG_UNICODE_BREAK_NUMERIC
,

102 
	mG_UNICODE_BREAK_INFIX_SEPARATOR
,

103 
	mG_UNICODE_BREAK_SYMBOL
,

104 
	mG_UNICODE_BREAK_ALPHABETIC
,

105 
	mG_UNICODE_BREAK_PREFIX
,

106 
	mG_UNICODE_BREAK_POSTFIX
,

107 
	mG_UNICODE_BREAK_COMPLEX_CONTEXT
,

108 
	mG_UNICODE_BREAK_AMBIGUOUS
,

109 
	mG_UNICODE_BREAK_UNKNOWN
,

110 
	mG_UNICODE_BREAK_NEXT_LINE
,

111 
	mG_UNICODE_BREAK_WORD_JOINER
,

112 
	mG_UNICODE_BREAK_HANGUL_L_JAMO
,

113 
	mG_UNICODE_BREAK_HANGUL_V_JAMO
,

114 
	mG_UNICODE_BREAK_HANGUL_T_JAMO
,

115 
	mG_UNICODE_BREAK_HANGUL_LV_SYLLABLE
,

116 
	mG_UNICODE_BREAK_HANGUL_LVT_SYLLABLE


117 } 
	tGUnicodeBªakTy≥
;

121 
	mG_UNICODE_SCRIPT_INVALID_CODE
 = -1,

122 
	mG_UNICODE_SCRIPT_COMMON
 = 0,

123 
	mG_UNICODE_SCRIPT_INHERITED
,

124 
	mG_UNICODE_SCRIPT_ARABIC
,

125 
	mG_UNICODE_SCRIPT_ARMENIAN
,

126 
	mG_UNICODE_SCRIPT_BENGALI
,

127 
	mG_UNICODE_SCRIPT_BOPOMOFO
,

128 
	mG_UNICODE_SCRIPT_CHEROKEE
,

129 
	mG_UNICODE_SCRIPT_COPTIC
,

130 
	mG_UNICODE_SCRIPT_CYRILLIC
,

131 
	mG_UNICODE_SCRIPT_DESERET
,

132 
	mG_UNICODE_SCRIPT_DEVANAGARI
,

133 
	mG_UNICODE_SCRIPT_ETHIOPIC
,

134 
	mG_UNICODE_SCRIPT_GEORGIAN
,

135 
	mG_UNICODE_SCRIPT_GOTHIC
,

136 
	mG_UNICODE_SCRIPT_GREEK
,

137 
	mG_UNICODE_SCRIPT_GUJARATI
,

138 
	mG_UNICODE_SCRIPT_GURMUKHI
,

139 
	mG_UNICODE_SCRIPT_HAN
,

140 
	mG_UNICODE_SCRIPT_HANGUL
,

141 
	mG_UNICODE_SCRIPT_HEBREW
,

142 
	mG_UNICODE_SCRIPT_HIRAGANA
,

143 
	mG_UNICODE_SCRIPT_KANNADA
,

144 
	mG_UNICODE_SCRIPT_KATAKANA
,

145 
	mG_UNICODE_SCRIPT_KHMER
,

146 
	mG_UNICODE_SCRIPT_LAO
,

147 
	mG_UNICODE_SCRIPT_LATIN
,

148 
	mG_UNICODE_SCRIPT_MALAYALAM
,

149 
	mG_UNICODE_SCRIPT_MONGOLIAN
,

150 
	mG_UNICODE_SCRIPT_MYANMAR
,

151 
	mG_UNICODE_SCRIPT_OGHAM
,

152 
	mG_UNICODE_SCRIPT_OLD_ITALIC
,

153 
	mG_UNICODE_SCRIPT_ORIYA
,

154 
	mG_UNICODE_SCRIPT_RUNIC
,

155 
	mG_UNICODE_SCRIPT_SINHALA
,

156 
	mG_UNICODE_SCRIPT_SYRIAC
,

157 
	mG_UNICODE_SCRIPT_TAMIL
,

158 
	mG_UNICODE_SCRIPT_TELUGU
,

159 
	mG_UNICODE_SCRIPT_THAANA
,

160 
	mG_UNICODE_SCRIPT_THAI
,

161 
	mG_UNICODE_SCRIPT_TIBETAN
,

162 
	mG_UNICODE_SCRIPT_CANADIAN_ABORIGINAL
,

163 
	mG_UNICODE_SCRIPT_YI
,

164 
	mG_UNICODE_SCRIPT_TAGALOG
,

165 
	mG_UNICODE_SCRIPT_HANUNOO
,

166 
	mG_UNICODE_SCRIPT_BUHID
,

167 
	mG_UNICODE_SCRIPT_TAGBANWA
,

170 
	mG_UNICODE_SCRIPT_BRAILLE
,

171 
	mG_UNICODE_SCRIPT_CYPRIOT
,

172 
	mG_UNICODE_SCRIPT_LIMBU
,

173 
	mG_UNICODE_SCRIPT_OSMANYA
,

174 
	mG_UNICODE_SCRIPT_SHAVIAN
,

175 
	mG_UNICODE_SCRIPT_LINEAR_B
,

176 
	mG_UNICODE_SCRIPT_TAI_LE
,

177 
	mG_UNICODE_SCRIPT_UGARITIC
,

180 
	mG_UNICODE_SCRIPT_NEW_TAI_LUE
,

181 
	mG_UNICODE_SCRIPT_BUGINESE
,

182 
	mG_UNICODE_SCRIPT_GLAGOLITIC
,

183 
	mG_UNICODE_SCRIPT_TIFINAGH
,

184 
	mG_UNICODE_SCRIPT_SYLOTI_NAGRI
,

185 
	mG_UNICODE_SCRIPT_OLD_PERSIAN
,

186 
	mG_UNICODE_SCRIPT_KHAROSHTHI
,

189 
	mG_UNICODE_SCRIPT_UNKNOWN
,

190 
	mG_UNICODE_SCRIPT_BALINESE
,

191 
	mG_UNICODE_SCRIPT_CUNEIFORM
,

192 
	mG_UNICODE_SCRIPT_PHOENICIAN
,

193 
	mG_UNICODE_SCRIPT_PHAGS_PA
,

194 
	mG_UNICODE_SCRIPT_NKO
,

197 
	mG_UNICODE_SCRIPT_KAYAH_LI
,

198 
	mG_UNICODE_SCRIPT_LEPCHA
,

199 
	mG_UNICODE_SCRIPT_REJANG
,

200 
	mG_UNICODE_SCRIPT_SUNDANESE
,

201 
	mG_UNICODE_SCRIPT_SAURASHTRA
,

202 
	mG_UNICODE_SCRIPT_CHAM
,

203 
	mG_UNICODE_SCRIPT_OL_CHIKI
,

204 
	mG_UNICODE_SCRIPT_VAI
,

205 
	mG_UNICODE_SCRIPT_CARIAN
,

206 
	mG_UNICODE_SCRIPT_LYCIAN
,

207 
	mG_UNICODE_SCRIPT_LYDIAN


208 } 
	tGUnicodeS¸ùt
;

216 
gboﬁón
 
g_gë_ch¨£t
 (
G_CONST_RETURN
 **
ch¨£t
);

220 
gboﬁón
 
	$g_unich¨_iß um
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

221 
gboﬁón
 
	$g_unich¨_ißÕha
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

222 
gboﬁón
 
	$g_unich¨_is˙ål
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

223 
gboﬁón
 
	$g_unich¨_isdigô
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

224 
gboﬁón
 
	$g_unich¨_isgøph
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

225 
gboﬁón
 
	$g_unich¨_i¶owî
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

226 
gboﬁón
 
	$g_unich¨_i•röt
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

227 
gboﬁón
 
	$g_unich¨_i•un˘
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

228 
gboﬁón
 
	$g_unich¨_is•a˚
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

229 
gboﬁón
 
	$g_unich¨_isuµî
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

230 
gboﬁón
 
	$g_unich¨_isxdigô
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

231 
gboﬁón
 
	$g_unich¨_i°ôÀ
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

232 
gboﬁón
 
	$g_unich¨_isdeföed
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

233 
gboﬁón
 
	$g_unich¨_iswide
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

234 
gboﬁón
 
	$g_unich¨_iswide_cjk
(
gunich¨
 
c
Ë
G_GNUC_CONST
;

235 
gboﬁón
 
	$g_unich¨_iszîowidth
(
gunich¨
 
c
Ë
G_GNUC_CONST
;

236 
gboﬁón
 
	$g_unich¨_ism¨k
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

240 
gunich¨
 
	$g_unich¨_touµî
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

241 
gunich¨
 
	$g_unich¨_tﬁowî
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

242 
gunich¨
 
	$g_unich¨_tŸôÀ
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

246 
göt
 
	$g_unich¨_digô_vÆue
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

248 
göt
 
	$g_unich¨_xdigô_vÆue
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

251 
GUnicodeTy≥
 
	$g_unich¨_ty≥
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

254 
GUnicodeBªakTy≥
 
	$g_unich¨_bªak_ty≥
 (
gunich¨
 
c
Ë
G_GNUC_CONST
;

257 
göt
 
	$g_unich¨_comböög_˛ass
 (
gunich¨
 
uc
Ë
G_GNUC_CONST
;

263 
	`g_unicode_ˇn⁄iˇl_‹dîög
 (
gunich¨
 *
°rög
,

264 
gsize
 
Àn
);

269 
gunich¨
 *
	$g_unicode_ˇn⁄iˇl_decomposôi⁄
 (
gunich¨
 
ch
,

270 
gsize
 *
ªsu…_Àn
Ë
G_GNUC_MALLOC
;

274 
GLIB_VAR
 c⁄° 
gch¨
 * c⁄° 
g_utf8_skù
;

276 
	#g_utf8_√xt_ch¨
(
p
Ë(*)(’Ë+ 
g_utf8_skù
[*(c⁄° 
guch¨
 *)’)])

	)

278 
gunich¨
 
	$g_utf8_gë_ch¨
 (c⁄° 
gch¨
 *
p
Ë
G_GNUC_PURE
;

279 
gunich¨
 
	$g_utf8_gë_ch¨_vÆid©ed
 (c⁄° 
gch¨
 *
p
,

280 
gssize
 
max_Àn
Ë
G_GNUC_PURE
;

282 
gch¨
* 
	$g_utf8_off£t_to_poöãr
 (c⁄° 
gch¨
 *
°r
,

283 
gl⁄g
 
off£t
Ë
G_GNUC_PURE
;

284 
gl⁄g
 
	$g_utf8_poöãr_to_off£t
 (c⁄° 
gch¨
 *
°r
,

285 c⁄° 
gch¨
 *
pos
Ë
G_GNUC_PURE
;

286 
gch¨
* 
	$g_utf8_¥ev_ch¨
 (c⁄° 
gch¨
 *
p
Ë
G_GNUC_PURE
;

287 
gch¨
* 
	$g_utf8_föd_√xt_ch¨
 (c⁄° 
gch¨
 *
p
,

288 c⁄° 
gch¨
 *
íd
Ë
G_GNUC_PURE
;

289 
gch¨
* 
	$g_utf8_föd_¥ev_ch¨
 (c⁄° 
gch¨
 *
°r
,

290 c⁄° 
gch¨
 *
p
Ë
G_GNUC_PURE
;

292 
gl⁄g
 
	$g_utf8_°æí
 (c⁄° 
gch¨
 *
p
,

293 
gssize
 
max
Ë
G_GNUC_PURE
;

296 
gch¨
* 
	`g_utf8_°∫˝y
 (gch¨ *
de°
,

297 c⁄° 
gch¨
 *
§c
,

298 
gsize
 
n
);

302 
gch¨
* 
	`g_utf8_°rchr
 (c⁄° gch¨ *
p
,

303 
gssize
 
Àn
,

304 
gunich¨
 
c
);

305 
gch¨
* 
	`g_utf8_°ºchr
 (c⁄° gch¨ *
p
,

306 
gssize
 
Àn
,

307 
gunich¨
 
c
);

308 
gch¨
* 
	`g_utf8_°ºevî£
 (c⁄° gch¨ *
°r
,

309 
gssize
 
Àn
);

311 
gunich¨2
 *
	$g_utf8_to_utf16
 (c⁄° 
gch¨
 *
°r
,

312 
gl⁄g
 
Àn
,

313 
gl⁄g
 *
ôems_ªad
,

314 
gl⁄g
 *
ôems_wrôãn
,

315 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

316 
gunich¨
 * 
	$g_utf8_to_ucs4
 (c⁄° 
gch¨
 *
°r
,

317 
gl⁄g
 
Àn
,

318 
gl⁄g
 *
ôems_ªad
,

319 
gl⁄g
 *
ôems_wrôãn
,

320 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

321 
gunich¨
 * 
	$g_utf8_to_ucs4_Á°
 (c⁄° 
gch¨
 *
°r
,

322 
gl⁄g
 
Àn
,

323 
gl⁄g
 *
ôems_wrôãn
Ë
G_GNUC_MALLOC
;

324 
gunich¨
 * 
	$g_utf16_to_ucs4
 (c⁄° 
gunich¨2
 *
°r
,

325 
gl⁄g
 
Àn
,

326 
gl⁄g
 *
ôems_ªad
,

327 
gl⁄g
 *
ôems_wrôãn
,

328 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

329 
gch¨
* 
	$g_utf16_to_utf8
 (c⁄° 
gunich¨2
 *
°r
,

330 
gl⁄g
 
Àn
,

331 
gl⁄g
 *
ôems_ªad
,

332 
gl⁄g
 *
ôems_wrôãn
,

333 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

334 
gunich¨2
 *
	$g_ucs4_to_utf16
 (c⁄° 
gunich¨
 *
°r
,

335 
gl⁄g
 
Àn
,

336 
gl⁄g
 *
ôems_ªad
,

337 
gl⁄g
 *
ôems_wrôãn
,

338 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

339 
gch¨
* 
	$g_ucs4_to_utf8
 (c⁄° 
gunich¨
 *
°r
,

340 
gl⁄g
 
Àn
,

341 
gl⁄g
 *
ôems_ªad
,

342 
gl⁄g
 *
ôems_wrôãn
,

343 
GEº‹
 **
îr‹
Ë
G_GNUC_MALLOC
;

349 
göt
 
	`g_unich¨_to_utf8
 (
gunich¨
 
c
,

350 
gch¨
 *
outbuf
);

356 
gboﬁón
 
	`g_utf8_vÆid©e
 (c⁄° 
gch¨
 *
°r
,

357 
gssize
 
max_Àn
,

358 c⁄° 
gch¨
 **
íd
);

361 
gboﬁón
 
	$g_unich¨_vÆid©e
 (
gunich¨
 
ch
Ë
G_GNUC_CONST
;

363 
gch¨
 *
	$g_utf8_°rup
 (c⁄° 
gch¨
 *
°r
,

364 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

365 
gch¨
 *
	$g_utf8_°rdown
 (c⁄° 
gch¨
 *
°r
,

366 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

367 
gch¨
 *
	$g_utf8_ˇ£fﬁd
 (c⁄° 
gch¨
 *
°r
,

368 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

371 
G_NORMALIZE_DEFAULT
,

372 
G_NORMALIZE_NFD
 = 
G_NORMALIZE_DEFAULT
,

373 
G_NORMALIZE_DEFAULT_COMPOSE
,

374 
G_NORMALIZE_NFC
 = 
G_NORMALIZE_DEFAULT_COMPOSE
,

375 
G_NORMALIZE_ALL
,

376 
G_NORMALIZE_NFKD
 = 
G_NORMALIZE_ALL
,

377 
G_NORMALIZE_ALL_COMPOSE
,

378 
G_NORMALIZE_NFKC
 = 
G_NORMALIZE_ALL_COMPOSE


379 } 
	tGN‹mÆizeMode
;

381 
gch¨
 *
	$g_utf8_n‹mÆize
 (c⁄° 
gch¨
 *
°r
,

382 
gssize
 
Àn
,

383 
GN‹mÆizeMode
 
mode
Ë
G_GNUC_MALLOC
;

385 
göt
 
	$g_utf8_cﬁœã
 (c⁄° 
gch¨
 *
°r1
,

386 c⁄° 
gch¨
 *
°r2
Ë
G_GNUC_PURE
;

387 
gch¨
 *
	$g_utf8_cﬁœã_key
 (c⁄° 
gch¨
 *
°r
,

388 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

389 
gch¨
 *
	$g_utf8_cﬁœã_key_f‹_fûíame
 (c⁄° 
gch¨
 *
°r
,

390 
gssize
 
Àn
Ë
G_GNUC_MALLOC
;

392 
gboﬁón
 
	`g_unich¨_gë_múr‹_ch¨
 (
gunich¨
 
ch
,

393 
gunich¨
 *
múr‹ed_ch
);

395 
GUnicodeS¸ùt
 
	$g_unich¨_gë_s¸ùt
 (
gunich¨
 
ch
Ë
G_GNUC_CONST
;

400 
gch¨
 *
	`_g_utf8_make_vÆid
 (c⁄° gch¨ *
«me
);

402 
G_END_DECLS


	@/usr/include/glib-2.0/glib/gurifuncs.h

23 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

27 #i‚de‡
__G_URI_FUNCS_H__


28 
	#__G_URI_FUNCS_H__


	)

30 
	~<glib.h
>

32 
	gG_BEGIN_DECLS


39 
	#G_URI_RESERVED_CHARS_GENERIC_DELIMITERS
 ":/?#[]@"

	)

46 
	#G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS
 "!$&'()*+,;="

	)

53 
	#G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT
 
G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS
 ":@"

	)

60 
	#G_URI_RESERVED_CHARS_ALLOWED_IN_PATH
 
G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT
 "/"

	)

67 
	#G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO
 
G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS
 ":"

	)

69 * 
g_uri_u√sˇ≥_°rög
 (c⁄° *
esˇ≥d_°rög
,

70 c⁄° *
ûÀgÆ_ch¨a˘îs
);

71 * 
g_uri_u√sˇ≥_£gmít
 (c⁄° *
esˇ≥d_°rög
,

72 c⁄° *
esˇ≥d_°rög_íd
,

73 c⁄° *
ûÀgÆ_ch¨a˘îs
);

74 * 
g_uri_∑r£_scheme
 (c⁄° *
uri
);

75 * 
g_uri_esˇ≥_°rög
 (c⁄° *
u√sˇ≥d
,

76 c⁄° *
ª£rved_ch¨s_Ælowed
,

77 
gboﬁón
 
Ælow_utf8
);

79 
	gG_END_DECLS


	@/usr/include/glib-2.0/glib/gutils.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_UTILS_H__


32 
	#__G_UTILS_H__


	)

34 
	~<glib/gty≥s.h
>

35 
	~<°d¨g.h
>

37 
	gG_BEGIN_DECLS


39 #ifde‡
G_OS_WIN32


45 
	#G_DIR_SEPARATOR
 '\\'

	)

46 
	#G_DIR_SEPARATOR_S
 "\\"

	)

47 
	#G_IS_DIR_SEPARATOR
(
c
Ë((cË=
G_DIR_SEPARATOR
 || (cË='/')

	)

48 
	#G_SEARCHPATH_SEPARATOR
 ';'

	)

49 
	#G_SEARCHPATH_SEPARATOR_S
 ";"

	)

55 
	#G_DIR_SEPARATOR
 '/'

	)

56 
	#G_DIR_SEPARATOR_S
 "/"

	)

57 
	#G_IS_DIR_SEPARATOR
(
c
Ë((cË=
G_DIR_SEPARATOR
)

	)

58 
	#G_SEARCHPATH_SEPARATOR
 ':'

	)

59 
	#G_SEARCHPATH_SEPARATOR_S
 ":"

	)

66 #i‡!
deföed
 (
G_VA_COPY
)

67 #i‡
deföed
 (
__GNUC__
Ë&& deföed (
__PPC__
Ë&& (deföed (
_CALL_SYSV
Ë|| deföed (
_WIN32
))

68 
	#G_VA_COPY
(
≠1
, 
≠2
Ë(*◊p1Ë*◊p2))

	)

69 #ñi‡
deföed
 (
G_VA_COPY_AS_ARRAY
)

70 
	#G_VA_COPY
(
≠1
, 
≠2
Ë
	`g_memmove
 (◊p1), (≠2),  (
va_li°
))

	)

72 
	#G_VA_COPY
(
≠1
, 
≠2
Ë(◊p1Ë◊p2))

	)

87 #i‡
deföed
 (
G_HAVE_INLINE
Ë&& deföed (
__GNUC__
Ë&& deföed (
__STRICT_ANSI__
)

88 #unde‡
ölöe


89 
	#ölöe
 
__ölöe__


	)

90 #ñi‡!
deföed
 (
G_HAVE_INLINE
)

91 #unde‡
ölöe


92 #i‡
deföed
 (
G_HAVE___INLINE__
)

93 
	#ölöe
 
__ölöe__


	)

94 #ñi‡
deföed
 (
G_HAVE___INLINE
)

95 
	#ölöe
 
__ölöe


	)

97 
	#ölöe


	)

100 #ifde‡
G_IMPLEMENT_INLINES


101 
	#G_INLINE_FUNC


	)

102 #unde‡
G_CAN_INLINE


103 #ñi‡
deföed
 (
__GNUC__
)

104 
	#G_INLINE_FUNC
 
__ölöe
 
	`__©åibuã__
 ((
unu£d
))

	)

105 #ñi‡
deföed
 (
G_CAN_INLINE
)

106 
	#G_INLINE_FUNC
 
ölöe


	)

108 
	#G_INLINE_FUNC


	)

113 #ifde‡
G_OS_WIN32


114 
	#g_gë_u£r_«me
 
g_gë_u£r_«me_utf8


	)

115 
	#g_gë_ªÆ_«me
 
g_gë_ªÆ_«me_utf8


	)

116 
	#g_gë_home_dú
 
g_gë_home_dú_utf8


	)

117 
	#g_gë_tmp_dú
 
g_gë_tmp_dú_utf8


	)

120 
G_CONST_RETURN
 
gch¨
* 
g_gë_u£r_«me
 ();

121 
G_CONST_RETURN
 
gch¨
* 
g_gë_ªÆ_«me
 ();

122 
G_CONST_RETURN
 
gch¨
* 
g_gë_home_dú
 ();

123 
G_CONST_RETURN
 
gch¨
* 
g_gë_tmp_dú
 ();

124 
G_CONST_RETURN
 
gch¨
* 
g_gë_ho°_«me
 ();

125 
gch¨
* 
g_gë_¥g«me
 ();

126 
g_£t_¥g«me
 (c⁄° 
gch¨
 *
¥g«me
);

127 
G_CONST_RETURN
 
gch¨
* 
g_gë_≠∂iˇti⁄_«me
 ();

128 
g_£t_≠∂iˇti⁄_«me
 (c⁄° 
gch¨
 *
≠∂iˇti⁄_«me
);

130 
G_CONST_RETURN
 
gch¨
* 
g_gë_u£r_d©a_dú
 ();

131 
G_CONST_RETURN
 
gch¨
* 
g_gë_u£r_c⁄fig_dú
 ();

132 
G_CONST_RETURN
 
gch¨
* 
g_gë_u£r_ˇche_dú
 ();

133 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
g_gë_sy°em_d©a_dús
 ();

135 #ifde‡
G_OS_WIN32


137 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
g_wö32_gë_sy°em_d©a_dús_f‹_moduÀ
 ((*
addªss_of_fun˘i⁄
)());

140 #i‡
deföed
 (
G_OS_WIN32
Ë&& deföed (
G_CAN_INLINE
Ë&& !deföed (
__˝lu•lus
)

145 
ölöe
 
G_CONST_RETURN
 
gch¨
 * G_CONST_RETURN *

146 
	$_g_wö32_gë_sy°em_d©a_dús
 ()

148  
	`g_wö32_gë_sy°em_d©a_dús_f‹_moduÀ
 (((*)()Ë&
_g_wö32_gë_sy°em_d©a_dús
);

149 
	}
}

150 
	#g_gë_sy°em_d©a_dús
 
_g_wö32_gë_sy°em_d©a_dús


	)

153 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
g_gë_sy°em_c⁄fig_dús
 ();

155 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
g_gë_œnguage_«mes
 ();

180 
	mG_USER_DIRECTORY_DESKTOP
,

181 
	mG_USER_DIRECTORY_DOCUMENTS
,

182 
	mG_USER_DIRECTORY_DOWNLOAD
,

183 
	mG_USER_DIRECTORY_MUSIC
,

184 
	mG_USER_DIRECTORY_PICTURES
,

185 
	mG_USER_DIRECTORY_PUBLIC_SHARE
,

186 
	mG_USER_DIRECTORY_TEMPLATES
,

187 
	mG_USER_DIRECTORY_VIDEOS
,

189 
	mG_USER_N_DIRECTORIES


190 } 
	tGU£rDúe˘‹y
;

192 
G_CONST_RETURN
 
gch¨
* 
g_gë_u£r_•ecül_dú
 (
GU£rDúe˘‹y
 
dúe˘‹y
);

194 
_GDebugKey
 
	tGDebugKey
;

195 
	s_GDebugKey


197 c⁄° 
gch¨
 *
	mkey
;

198 
guöt
 
	mvÆue
;

203 
guöt
 
g_∑r£_debug_°rög
 (c⁄° 
gch¨
 *
°rög
,

204 c⁄° 
GDebugKey
 *
keys
,

205 
guöt
 
nkeys
);

207 
göt
 
	$g_¢¥ötf
 (
gch¨
 *
°rög
,

208 
gul⁄g
 
n
,

209 
gch¨
 c⁄° *
f‹m©
,

210 ...Ë
	`G_GNUC_PRINTF
 (3, 4);

211 
göt
 
	`g_v¢¥ötf
 (
gch¨
 *
°rög
,

212 
gul⁄g
 
n
,

213 
gch¨
 c⁄° *
f‹m©
,

214 
va_li°
 
¨gs
);

217 
gboﬁón
 
	`g_∑th_is_absﬁuã
 (c⁄° 
gch¨
 *
fûe_«me
);

220 
G_CONST_RETURN
 
gch¨
* 
	`g_∑th_skù_roŸ
 (c⁄° gch¨ *
fûe_«me
);

222 #i‚de‡
G_DISABLE_DEPRECATED


228 
G_CONST_RETURN
 
gch¨
* 
	`g_ba£«me
 (c⁄° gch¨ *
fûe_«me
);

229 
	#g_dú«me
 
g_∑th_gë_dú«me


	)

233 #ifde‡
G_OS_WIN32


234 
	#g_gë_cuºít_dú
 
g_gë_cuºít_dú_utf8


	)

238 
gch¨
* 
	`g_gë_cuºít_dú
 ();

239 
gch¨
* 
	$g_∑th_gë_ba£«me
 (c⁄° 
gch¨
 *
fûe_«me
Ë
G_GNUC_MALLOC
;

240 
gch¨
* 
	$g_∑th_gë_dú«me
 (c⁄° 
gch¨
 *
fûe_«me
Ë
G_GNUC_MALLOC
;

243 
	`g_nuŒify_poöãr
 (
gpoöãr
 *
nuŒify_loˇti⁄
);

247 #ifde‡
G_OS_WIN32


248 
	#g_gëív
 
g_gëív_utf8


	)

249 
	#g_£ãnv
 
g_£ãnv_utf8


	)

250 
	#g_un£ãnv
 
g_un£ãnv_utf8


	)

251 
	#g_föd_¥ogøm_ö_∑th
 
g_föd_¥ogøm_ö_∑th_utf8


	)

254 
G_CONST_RETURN
 
gch¨
* 
	`g_gëív
 (c⁄° gch¨ *
v¨übÀ
);

255 
gboﬁón
 
	`g_£ãnv
 (c⁄° 
gch¨
 *
v¨übÀ
,

256 c⁄° 
gch¨
 *
vÆue
,

257 
gboﬁón
 
ovîwrôe
);

258 
	`g_un£ãnv
 (c⁄° 
gch¨
 *
v¨übÀ
);

259 
gch¨
** 
	`g_li°ív
 ();

262 c⁄° 
gch¨
* 
	`_g_gëív_nomÆloc
 (c⁄° gch¨ *
v¨übÀ
,

263 
gch¨
 
buf„r
[1024]);

269 (*
	tGVoidFunc
) ();

270 #i‚de‡
ATEXIT


271 
	#ATEXIT
(
¥oc
Ë
	`g_ATEXIT
’roc)

	)

273 
	#G_NATIVE_ATEXIT


	)

280 
	`g_©exô
 (
GVoidFunc
 
func
);

282 #ifde‡
G_OS_WIN32


289 
	`©exô
 ((*)());

290 
	#g_©exô
(
func
Ë
	`©exô
(func)

	)

294 
gch¨
* 
	`g_föd_¥ogøm_ö_∑th
 (c⁄° gch¨ *
¥ogøm
);

298 
G_INLINE_FUNC
 
göt
 
	$g_bô_¡h_lsf
 (
gul⁄g
 
mask
,

299 
göt
 
¡h_bô
Ë
G_GNUC_CONST
;

300 
G_INLINE_FUNC
 
göt
 
	$g_bô_¡h_msf
 (
gul⁄g
 
mask
,

301 
göt
 
¡h_bô
Ë
G_GNUC_CONST
;

302 
G_INLINE_FUNC
 
guöt
 
	$g_bô_°‹age
 (
gul⁄g
 
numbî
Ë
G_GNUC_CONST
;

307 
_GTøshSèck
 
	tGTøshSèck
;

308 
	s_GTøshSèck


310 
GTøshSèck
 *
√xt
;

313 
G_INLINE_FUNC
 
	`g_åash_°ack_push
 (
GTøshSèck
 **
°ack_p
,

314 
gpoöãr
 
d©a_p
);

315 
G_INLINE_FUNC
 
gpoöãr
 
	`g_åash_°ack_p›
 (
GTøshSèck
 **
°ack_p
);

316 
G_INLINE_FUNC
 
gpoöãr
 
	`g_åash_°ack_≥ek
 (
GTøshSèck
 **
°ack_p
);

317 
G_INLINE_FUNC
 
guöt
 
	`g_åash_°ack_height
 (
GTøshSèck
 **
°ack_p
);

321 #i‡
	`deföed
 (
G_CAN_INLINE
Ë|| deföed (
__G_UTILS_C__
)

322 
G_INLINE_FUNC
 
göt


323 
	$g_bô_¡h_lsf
 (
gul⁄g
 
mask
,

324 
göt
 
¡h_bô
)

326 i‡(
	`G_UNLIKELY
 (
¡h_bô
 < -1))

327 
¡h_bô
 = -1;

328 
¡h_bô
 < ((
GLIB_SIZEOF_LONG
 * 8) - 1))

330 
¡h_bô
++;

331 i‡(
mask
 & (1UL << 
¡h_bô
))

332  
¡h_bô
;

335 
	}
}

336 
G_INLINE_FUNC
 
göt


337 
	$g_bô_¡h_msf
 (
gul⁄g
 
mask
,

338 
göt
 
¡h_bô
)

340 i‡(
¡h_bô
 < 0 || 
	`G_UNLIKELY
 (¡h_bô > 
GLIB_SIZEOF_LONG
 * 8))

341 
¡h_bô
 = 
GLIB_SIZEOF_LONG
 * 8;

342 
¡h_bô
 > 0)

344 
¡h_bô
--;

345 i‡(
mask
 & (1UL << 
¡h_bô
))

346  
¡h_bô
;

349 
	}
}

350 
G_INLINE_FUNC
 
guöt


351 
	$g_bô_°‹age
 (
gul⁄g
 
numbî
)

353 #i‡
	`deföed
(
__GNUC__
Ë&& (__GNUC__ >4Ë&& deföed(
__OPTIMIZE__
)

354  
	`G_LIKELY
 (
numbî
) ?

355 ((
GLIB_SIZEOF_LONG
 * 8 - 1Ë^ 
	`__buûtö_˛zl
(
numbî
)) + 1 : 1;

357 
guöt
 
n_bôs
 = 0;

361 
n_bôs
++;

362 
numbî
 >>= 1;

364 
numbî
);

365  
n_bôs
;

367 
	}
}

368 
G_INLINE_FUNC
 

369 
	$g_åash_°ack_push
 (
GTøshSèck
 **
°ack_p
,

370 
gpoöãr
 
d©a_p
)

372 
GTøshSèck
 *
d©a
 = (GTøshSèck *Ë
d©a_p
;

374 
d©a
->
√xt
 = *
°ack_p
;

375 *
°ack_p
 = 
d©a
;

376 
	}
}

377 
G_INLINE_FUNC
 
gpoöãr


378 
	$g_åash_°ack_p›
 (
GTøshSèck
 **
°ack_p
)

380 
GTøshSèck
 *
d©a
;

382 
d©a
 = *
°ack_p
;

383 i‡(
d©a
)

385 *
°ack_p
 = 
d©a
->
√xt
;

389 
d©a
->
√xt
 = 
NULL
;

392  
d©a
;

393 
	}
}

394 
G_INLINE_FUNC
 
gpoöãr


395 
	$g_åash_°ack_≥ek
 (
GTøshSèck
 **
°ack_p
)

397 
GTøshSèck
 *
d©a
;

399 
d©a
 = *
°ack_p
;

401  
d©a
;

402 
	}
}

403 
G_INLINE_FUNC
 
guöt


404 
	$g_åash_°ack_height
 (
GTøshSèck
 **
°ack_p
)

406 
GTøshSèck
 *
d©a
;

407 
guöt
 
i
 = 0;

409 
d©a
 = *
°ack_p
; d©a; d©®d©a->
√xt
)

410 
i
++;

412  
i
;

413 
	}
}

420 
GLIB_VAR
 c⁄° 
guöt
 
	gglib_maj‹_vîsi⁄
;

421 
GLIB_VAR
 c⁄° 
guöt
 
	gglib_mö‹_vîsi⁄
;

422 
GLIB_VAR
 c⁄° 
guöt
 
	gglib_mi¸o_vîsi⁄
;

423 
GLIB_VAR
 c⁄° 
guöt
 
	gglib_öãrÁ˚_age
;

424 
GLIB_VAR
 c⁄° 
guöt
 
	gglib_bö¨y_age
;

426 c⁄° 
gch¨
 * 
glib_check_vîsi⁄
 (
guöt
 
ªquúed_maj‹
,

427 
guöt
 
ªquúed_mö‹
,

428 
guöt
 
ªquúed_mi¸o
);

430 
	#GLIB_CHECK_VERSION
(
maj‹
,
mö‹
,
mi¸o
) \

431 (
GLIB_MAJOR_VERSION
 > (
maj‹
) || \

432 (
GLIB_MAJOR_VERSION
 =(
maj‹
Ë&& 
GLIB_MINOR_VERSION
 > (
mö‹
)) || \

433 (
GLIB_MAJOR_VERSION
 =(
maj‹
Ë&& 
GLIB_MINOR_VERSION
 =(
mö‹
) && \

434 
GLIB_MICRO_VERSION
 >(
mi¸o
)))

	)

436 
	gG_END_DECLS


438 #i‚de‡
G_DISABLE_DEPRECATED


457 #i‚de‡
G_PLATFORM_WIN32


458 
	#G_WIN32_DLLMAIN_FOR_DLL_NAME
(, 
dŒ_«me
)

	)

460 
	#G_WIN32_DLLMAIN_FOR_DLL_NAME
(, 
dŒ_«me
) \

461 *
dŒ_«me
; \

463 
BOOL
 
WINAPI
 \

464 
	`DŒMaö
 (
HINSTANCE
 
hö°DLL
, \

465 
DWORD
 
fdwRós⁄
, \

466 
LPVOID
 
ÕvRe£rved
) \

468 
wch¨_t
 
wcb‰
[1000]; \

469 *
ãm
; \

470 
fdwRós⁄
) \

472 
DLL_PROCESS_ATTACH
: \

473 
	`GëModuÀFûeNameW
 ((
HMODULE
Ë
hö°DLL
, 
wcb‰
, 
	`G_N_ELEMENTS
 (wcbfr)); \

474 
ãm
 = 
	`g_utf16_to_utf8
 (
wcb‰
, -1, 
NULL
, NULL, NULL); \

475 
dŒ_«me
 = 
	`g_∑th_gë_ba£«me
 (
ãm
); \

476 
	`g_‰ì
 (
ãm
); \

480  
TRUE
; \

481 }

	)

	@/usr/include/glib-2.0/glib/gwin32.h

27 #i‡
deföed
(
G_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GLIB_H_INSIDE__
Ë&& !deföed (
GLIB_COMPILATION
)

31 #i‚de‡
__G_WIN32_H__


32 
	#__G_WIN32_H__


	)

34 
	~<glib/gty≥s.h
>

36 #ifde‡
G_PLATFORM_WIN32


38 
	gG_BEGIN_DECLS


40 #i‚de‡
MAXPATHLEN


41 
	#MAXPATHLEN
 1024

	)

44 #ifde‡
G_OS_WIN32


68 
göt
 
g_wö32_·runˇã
 (göà
f
,

69 
guöt
 
size
);

78 
gch¨
* 
g_wö32_gëloˇÀ
 ();

84 
gch¨
* 
g_wö32_îr‹_mesßge
 (
göt
 
îr‹
);

86 #i‚de‡
G_DISABLE_DEPRECATED


88 
	#g_wö32_gë_∑ckage_ö°Æœti⁄_dúe˘‹y
 
g_wö32_gë_∑ckage_ö°Æœti⁄_dúe˘‹y_utf8


	)

89 
	#g_wö32_gë_∑ckage_ö°Æœti⁄_subdúe˘‹y
 
g_wö32_gë_∑ckage_ö°Æœti⁄_subdúe˘‹y_utf8


	)

91 
gch¨
* 
g_wö32_gë_∑ckage_ö°Æœti⁄_dúe˘‹y
 (c⁄° gch¨ *
∑ckage
,

92 c⁄° 
gch¨
 *
dŒ_«me
);

94 
gch¨
* 
g_wö32_gë_∑ckage_ö°Æœti⁄_subdúe˘‹y
 (c⁄° gch¨ *
∑ckage
,

95 c⁄° 
gch¨
 *
dŒ_«me
,

96 c⁄° 
gch¨
 *
subdú
);

100 
gch¨
* 
g_wö32_gë_∑ckage_ö°Æœti⁄_dúe˘‹y_of_moduÀ
 (
gpoöãr
 
hmoduÀ
);

102 
guöt
 
g_wö32_gë_wödows_vîsi⁄
 ();

104 
gch¨
* 
g_wö32_loˇÀ_fûíame_‰om_utf8
 (c⁄° gch¨ *
utf8fûíame
);

107 
	#G_WIN32_IS_NT_BASED
(Ë
TRUE


	)

108 
	#G_WIN32_HAVE_WIDECHAR_API
(Ë
TRUE


	)

110 
	gG_END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/gtk-2.0/gdk/gdk.h

27 #i‚de‡
__GDK_H__


28 
	#__GDK_H__


	)

30 
	#__GDK_H_INSIDE__


	)

32 
	~<gdk/gdk≠∂aunchc⁄ãxt.h
>

33 
	~<gdk/gdkˇúo.h
>

34 
	~<gdk/gdkcﬁ‹.h
>

35 
	~<gdk/gdkcurs‹.h
>

36 
	~<gdk/gdkdi•œy.h
>

37 
	~<gdk/gdkdi•œym™agî.h
>

38 
	~<gdk/gdkdnd.h
>

39 
	~<gdk/gdkdøwabÀ.h
>

40 
	~<gdk/gdkíumty≥s.h
>

41 
	~<gdk/gdkevíts.h
>

42 
	~<gdk/gdkf⁄t.h
>

43 
	~<gdk/gdkgc.h
>

44 
	~<gdk/gdkimage.h
>

45 
	~<gdk/gdköput.h
>

46 
	~<gdk/gdkkeys.h
>

47 
	~<gdk/gdk∑ngo.h
>

48 
	~<gdk/gdkpixbuf.h
>

49 
	~<gdk/gdkpixm≠.h
>

50 
	~<gdk/gdk¥›îty.h
>

51 
	~<gdk/gdkªgi⁄.h
>

52 
	~<gdk/gdkrgb.h
>

53 
	~<gdk/gdks¸ìn.h
>

54 
	~<gdk/gdk£À˘i⁄.h
>

55 
	~<gdk/gdk•awn.h
>

56 
	~<gdk/gdkã°utûs.h
>

57 
	~<gdk/gdkty≥s.h
>

58 
	~<gdk/gdkvisuÆ.h
>

59 
	~<gdk/gdkwödow.h
>

61 #unde‡
__GDK_H_INSIDE__


63 
	gG_BEGIN_DECLS


68 
	#GDK_PRIORITY_EVENTS
 (
G_PRIORITY_DEFAULT
)

	)

69 
gdk_∑r£_¨gs
 (
göt
 *
¨gc
,

70 
gch¨
 ***
¨gv
);

71 
gdk_öô
 (
göt
 *
¨gc
,

72 
gch¨
 ***
¨gv
);

73 
gboﬁón
 
gdk_öô_check
 (
göt
 *
¨gc
,

74 
gch¨
 ***
¨gv
);

75 
gdk_add_›ti⁄_íåõs_libgtk_⁄ly
 (
GO±i⁄Group
 *
group
);

76 
gdk_¥e_∑r£_libgtk_⁄ly
 ();

78 #i‚de‡
GDK_DISABLE_DEPRECATED


79 
gdk_exô
 (
göt
 
îr‹_code
);

81 
gch¨
* 
gdk_£t_loˇÀ
 ();

83 
G_CONST_RETURN
 *
gdk_gë_¥ogøm_˛ass
 ();

84 
gdk_£t_¥ogøm_˛ass
 (c⁄° *
¥ogøm_˛ass
);

88 
gdk_îr‹_å≠_push
 ();

89 
göt
 
gdk_îr‹_å≠_p›
 ();

91 #i‚de‡
GDK_DISABLE_DEPRECATED


92 
gdk_£t_u£_xshm
 (
gboﬁón
 
u£_xshm
);

93 
gboﬁón
 
gdk_gë_u£_xshm
 ();

96 
gch¨
* 
gdk_gë_di•œy
 ();

97 
G_CONST_RETURN
 
gch¨
* 
gdk_gë_di•œy_¨g_«me
 ();

99 #i‡!
deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
)

101 
göt
 
gdk_öput_add_fuŒ
 (göà
sour˚
,

102 
GdkI≈utC⁄dôi⁄
 
c⁄dôi⁄
,

103 
GdkI≈utFun˘i⁄
 
fun˘i⁄
,

104 
gpoöãr
 
d©a
,

105 
GDe°royNŸify
 
de°roy
);

107 #i‚de‡
GDK_DISABLE_DEPRECATED


108 
göt
 
gdk_öput_add
 (göà
sour˚
,

109 
GdkI≈utC⁄dôi⁄
 
c⁄dôi⁄
,

110 
GdkI≈utFun˘i⁄
 
fun˘i⁄
,

111 
gpoöãr
 
d©a
);

112 
gdk_öput_ªmove
 (
göt
 
èg
);

115 
GdkGøbSètus
 
gdk_poöãr_gøb
 (
GdkWödow
 *
wödow
,

116 
gboﬁón
 
ow√r_evíts
,

117 
GdkEvítMask
 
evít_mask
,

118 
GdkWödow
 *
c⁄föe_to
,

119 
GdkCurs‹
 *
curs‹
,

120 
guöt32
 
time_
);

121 
GdkGøbSètus
 
gdk_keybﬂrd_gøb
 (
GdkWödow
 *
wödow
,

122 
gboﬁón
 
ow√r_evíts
,

123 
guöt32
 
time_
);

125 
gboﬁón
 
gdk_poöãr_gøb_öfo_libgtk_⁄ly
 (
GdkDi•œy
 *
di•œy
,

126 
GdkWödow
 **
gøb_wödow
,

127 
gboﬁón
 *
ow√r_evíts
);

128 
gboﬁón
 
gdk_keybﬂrd_gøb_öfo_libgtk_⁄ly
 (
GdkDi•œy
 *
di•œy
,

129 
GdkWödow
 **
gøb_wödow
,

130 
gboﬁón
 *
ow√r_evíts
);

132 #i‚de‡
GDK_MULTIHEAD_SAFE


133 
gdk_poöãr_ungøb
 (
guöt32
 
time_
);

134 
gdk_keybﬂrd_ungøb
 (
guöt32
 
time_
);

135 
gboﬁón
 
gdk_poöãr_is_gøbbed
 ();

137 
göt
 
	$gdk_s¸ìn_width
 (Ë
G_GNUC_CONST
;

138 
göt
 
	$gdk_s¸ìn_height
 (Ë
G_GNUC_CONST
;

140 
göt
 
	$gdk_s¸ìn_width_mm
 (Ë
G_GNUC_CONST
;

141 
göt
 
	$gdk_s¸ìn_height_mm
 (Ë
G_GNUC_CONST
;

143 
	`gdk_bìp
 ();

146 
	`gdk_Êush
 ();

148 #i‚de‡
GDK_MULTIHEAD_SAFE


149 
	`gdk_£t_doubÀ_˛ick_time
 (
guöt
 
m£c
);

154 
gboﬁón
 
	`gdk_ª˘™gÀ_öãr£˘
 (c⁄° 
GdkRe˘™gÀ
 *
§c1
,

155 c⁄° 
GdkRe˘™gÀ
 *
§c2
,

156 
GdkRe˘™gÀ
 *
de°
);

157 
	`gdk_ª˘™gÀ_uni⁄
 (c⁄° 
GdkRe˘™gÀ
 *
§c1
,

158 c⁄° 
GdkRe˘™gÀ
 *
§c2
,

159 
GdkRe˘™gÀ
 *
de°
);

161 
GTy≥
 
	$gdk_ª˘™gÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

163 
	#GDK_TYPE_RECTANGLE
 (
	`gdk_ª˘™gÀ_gë_ty≥
 ())

	)

167 #i‚de‡
GDK_DISABLE_DEPRECATED


168 
gch¨
 *
	`gdk_wc°ombs
 (c⁄° 
GdkWCh¨
 *
§c
);

169 
göt
 
	`gdk_mb°owcs
 (
GdkWCh¨
 *
de°
,

170 c⁄° 
gch¨
 *
§c
,

171 
göt
 
de°_max
);

175 #i‚de‡
GDK_MULTIHEAD_SAFE


176 
gboﬁón
 
	`gdk_evít_£nd_˛õ¡_mesßge
 (
GdkEvít
 *
evít
,

177 
GdkN©iveWödow
 
wöid
);

178 
	`gdk_evít_£nd_˛õ¡mesßge_tﬂŒ
 (
GdkEvít
 *
evít
);

180 
gboﬁón
 
	`gdk_evít_£nd_˛õ¡_mesßge_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

181 
GdkEvít
 *
evít
,

182 
GdkN©iveWödow
 
wöid
);

184 
	`gdk_nŸify_°¨tup_com∂ëe
 ();

186 
	`gdk_nŸify_°¨tup_com∂ëe_wôh_id
 (c⁄° 
gch¨
* 
°¨tup_id
);

191 #i‡!
	`deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GDK_COMPILATION
)

192 
GDKVAR
 
GMuãx
 *
gdk_thªads_muãx
;

195 
GDKVAR
 
GCÆlback
 
gdk_thªads_lock
;

196 
GDKVAR
 
GCÆlback
 
gdk_thªads_u∆ock
;

198 
	`gdk_thªads_íãr
 ();

199 
	`gdk_thªads_Àave
 ();

200 
	`gdk_thªads_öô
 ();

201 
	`gdk_thªads_£t_lock_fun˘i⁄s
 (
GCÆlback
 
íãr_‚
,

202 
GCÆlback
 
Àave_‚
);

204 
guöt
 
	`gdk_thªads_add_idÀ_fuŒ
 (
göt
 
¥i‹ôy
,

205 
GSour˚Func
 
fun˘i⁄
,

206 
gpoöãr
 
d©a
,

207 
GDe°royNŸify
 
nŸify
);

208 
guöt
 
	`gdk_thªads_add_idÀ
 (
GSour˚Func
 
fun˘i⁄
,

209 
gpoöãr
 
d©a
);

210 
guöt
 
	`gdk_thªads_add_timeout_fuŒ
 (
göt
 
¥i‹ôy
,

211 
guöt
 
öãrvÆ
,

212 
GSour˚Func
 
fun˘i⁄
,

213 
gpoöãr
 
d©a
,

214 
GDe°royNŸify
 
nŸify
);

215 
guöt
 
	`gdk_thªads_add_timeout
 (guöà
öãrvÆ
,

216 
GSour˚Func
 
fun˘i⁄
,

217 
gpoöãr
 
d©a
);

218 
guöt
 
	`gdk_thªads_add_timeout_£c⁄ds_fuŒ
 (
göt
 
¥i‹ôy
,

219 
guöt
 
öãrvÆ
,

220 
GSour˚Func
 
fun˘i⁄
,

221 
gpoöãr
 
d©a
,

222 
GDe°royNŸify
 
nŸify
);

223 
guöt
 
	`gdk_thªads_add_timeout_£c⁄ds
 (guöà
öãrvÆ
,

224 
GSour˚Func
 
fun˘i⁄
,

225 
gpoöãr
 
d©a
);

227 #ifdef 
G_THREADS_ENABLED


228 
	#GDK_THREADS_ENTER
(Ë
G_STMT_START
 { \

229 i‡(
gdk_thªads_lock
) \

230 (*
gdk_thªads_lock
) (); \

231 
	}
} 
G_STMT_END


	)

232 
	#GDK_THREADS_LEAVE
(Ë
G_STMT_START
 { \

233 i‡(
gdk_thªads_u∆ock
) \

234 (*
gdk_thªads_u∆ock
) (); \

235 } 
G_STMT_END


	)

237 
	#GDK_THREADS_ENTER
()

	)

238 
	#GDK_THREADS_LEAVE
()

	)

241 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaboutdialog.h

25 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

29 #i‚de‡
__GTK_ABOUT_DIALOG_H__


30 
	#__GTK_ABOUT_DIALOG_H__


	)

32 
	~<gtk/gtkdülog.h
>

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_ABOUT_DIALOG
 (
	`gtk_about_dülog_gë_ty≥
 ())

	)

37 
	#GTK_ABOUT_DIALOG
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_ABOUT_DIALOG
, 
GtkAboutDülog
))

	)

38 
	#GTK_ABOUT_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ABOUT_DIALOG
, 
GtkAboutDülogCœss
))

	)

39 
	#GTK_IS_ABOUT_DIALOG
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_ABOUT_DIALOG
))

	)

40 
	#GTK_IS_ABOUT_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ABOUT_DIALOG
))

	)

41 
	#GTK_ABOUT_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ABOUT_DIALOG
, 
GtkAboutDülogCœss
))

	)

43 
_GtkAboutDülog
 
	tGtkAboutDülog
;

44 
_GtkAboutDülogCœss
 
	tGtkAboutDülogCœss
;

46 
	s_GtkAboutDülog


48 
GtkDülog
 
	m∑ª¡_ö°™˚
;

51 
gpoöãr
 
GSEAL
 (
¥iv©e_d©a
);

54 
	s_GtkAboutDülogCœss


56 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

59 (*
	m_gtk_ª£rved1
) ();

60 (*
	m_gtk_ª£rved2
) ();

61 (*
	m_gtk_ª£rved3
) ();

62 (*
	m_gtk_ª£rved4
) ();

65 
GTy≥
 
	$gtk_about_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

66 
GtkWidgë
 *
	`gtk_about_dülog_√w
 ();

67 
	$gtk_show_about_dülog
 (
GtkWödow
 *
∑ª¡
,

68 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

69 ...Ë
G_GNUC_NULL_TERMINATED
;

71 #i‚de‡
GTK_DISABLE_DEPRECATED


72 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_«me
 (
GtkAboutDülog
 *
about
);

73 
	`gtk_about_dülog_£t_«me
 (
GtkAboutDülog
 *
about
,

74 c⁄° 
gch¨
 *
«me
);

76 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_¥ogøm_«me
 (
GtkAboutDülog
 *
about
);

77 
	`gtk_about_dülog_£t_¥ogøm_«me
 (
GtkAboutDülog
 *
about
,

78 c⁄° 
gch¨
 *
«me
);

79 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_vîsi⁄
 (
GtkAboutDülog
 *
about
);

80 
	`gtk_about_dülog_£t_vîsi⁄
 (
GtkAboutDülog
 *
about
,

81 c⁄° 
gch¨
 *
vîsi⁄
);

82 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_c›yright
 (
GtkAboutDülog
 *
about
);

83 
	`gtk_about_dülog_£t_c›yright
 (
GtkAboutDülog
 *
about
,

84 c⁄° 
gch¨
 *
c›yright
);

85 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_commíts
 (
GtkAboutDülog
 *
about
);

86 
	`gtk_about_dülog_£t_commíts
 (
GtkAboutDülog
 *
about
,

87 c⁄° 
gch¨
 *
commíts
);

88 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_li˚n£
 (
GtkAboutDülog
 *
about
);

89 
	`gtk_about_dülog_£t_li˚n£
 (
GtkAboutDülog
 *
about
,

90 c⁄° 
gch¨
 *
li˚n£
);

92 
gboﬁón
 
	`gtk_about_dülog_gë_wøp_li˚n£
 (
GtkAboutDülog
 *
about
);

93 
	`gtk_about_dülog_£t_wøp_li˚n£
 (
GtkAboutDülog
 *
about
,

94 
gboﬁón
 
wøp_li˚n£
);

96 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_websôe
 (
GtkAboutDülog
 *
about
);

97 
	`gtk_about_dülog_£t_websôe
 (
GtkAboutDülog
 *
about
,

98 c⁄° 
gch¨
 *
websôe
);

99 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_websôe_œbñ
 (
GtkAboutDülog
 *
about
);

100 
	`gtk_about_dülog_£t_websôe_œbñ
 (
GtkAboutDülog
 *
about
,

101 c⁄° 
gch¨
 *
websôe_œbñ
);

102 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
	`gtk_about_dülog_gë_auth‹s
 (
GtkAboutDülog
 *
about
);

103 
	`gtk_about_dülog_£t_auth‹s
 (
GtkAboutDülog
 *
about
,

104 c⁄° 
gch¨
 **
auth‹s
);

105 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
	`gtk_about_dülog_gë_documíãrs
 (
GtkAboutDülog
 *
about
);

106 
	`gtk_about_dülog_£t_documíãrs
 (
GtkAboutDülog
 *
about
,

107 c⁄° 
gch¨
 **
documíãrs
);

108 
G_CONST_RETURN
 
gch¨
* G_CONST_RETURN * 
	`gtk_about_dülog_gë_¨ti°s
 (
GtkAboutDülog
 *
about
);

109 
	`gtk_about_dülog_£t_¨ti°s
 (
GtkAboutDülog
 *
about
,

110 c⁄° 
gch¨
 **
¨ti°s
);

111 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_å™¶©‹_¸edôs
 (
GtkAboutDülog
 *
about
);

112 
	`gtk_about_dülog_£t_å™¶©‹_¸edôs
 (
GtkAboutDülog
 *
about
,

113 c⁄° 
gch¨
 *
å™¶©‹_¸edôs
);

114 
GdkPixbuf
 *
	`gtk_about_dülog_gë_logo
 (
GtkAboutDülog
 *
about
);

115 
	`gtk_about_dülog_£t_logo
 (
GtkAboutDülog
 *
about
,

116 
GdkPixbuf
 *
logo
);

117 
G_CONST_RETURN
 
gch¨
 *
	`gtk_about_dülog_gë_logo_ic⁄_«me
 (
GtkAboutDülog
 *
about
);

118 
	`gtk_about_dülog_£t_logo_ic⁄_«me
 (
GtkAboutDülog
 *
about
,

119 c⁄° 
gch¨
 *
ic⁄_«me
);

121 (* 
	tGtkAboutDülogA˘iv©eLökFunc
Ë(
	tGtkAboutDülog
 *
	tabout
,

122 c⁄° 
	tgch¨
 *
	tlök_
,

123 
	tgpoöãr
 
	td©a
);

125 
GtkAboutDülogA˘iv©eLökFunc
 
	`gtk_about_dülog_£t_emaû_hook
 (GtkAboutDülogA˘iv©eLökFun¯
func
,

126 
gpoöãr
 
d©a
,

127 
GDe°royNŸify
 
de°roy
);

128 
GtkAboutDülogA˘iv©eLökFunc
 
	`gtk_about_dülog_£t_uæ_hook
 (GtkAboutDülogA˘iv©eLökFun¯
func
,

129 
gpoöãr
 
d©a
,

130 
GDe°royNŸify
 
de°roy
);

132 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaccelgroup.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ACCEL_GROUP_H__


32 
	#__GTK_ACCEL_GROUP_H__


	)

35 
	~<gdk/gdk.h
>

36 
	~<gtk/gtkíums.h
>

38 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_ACCEL_GROUP
 (
	`gtk_ac˚l_group_gë_ty≥
 ())

	)

43 
	#GTK_ACCEL_GROUP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_ACCEL_GROUP
, 
GtkAc˚lGroup
))

	)

44 
	#GTK_ACCEL_GROUP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ACCEL_GROUP
, 
GtkAc˚lGroupCœss
))

	)

45 
	#GTK_IS_ACCEL_GROUP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_ACCEL_GROUP
))

	)

46 
	#GTK_IS_ACCEL_GROUP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ACCEL_GROUP
))

	)

47 
	#GTK_ACCEL_GROUP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ACCEL_GROUP
, 
GtkAc˚lGroupCœss
))

	)

53 
	mGTK_ACCEL_VISIBLE
 = 1 << 0,

54 
	mGTK_ACCEL_LOCKED
 = 1 << 1,

55 
	mGTK_ACCEL_MASK
 = 0x07

56 } 
	tGtkAc˚lFœgs
;

60 
_GtkAc˚lGroup
 
	tGtkAc˚lGroup
;

61 
_GtkAc˚lGroupCœss
 
	tGtkAc˚lGroupCœss
;

62 
_GtkAc˚lKey
 
	tGtkAc˚lKey
;

63 
_GtkAc˚lGroupE¡ry
 
	tGtkAc˚lGroupE¡ry
;

64 
	$gboﬁón
 (*
	tGtkAc˚lGroupA˘iv©e
Ë(
	tGtkAc˚lGroup
 *
	tac˚l_group
,

65 
	tGObje˘
 *
	tac˚ÀøèbÀ
,

66 
	tguöt
 
	tkeyvÆ
,

67 
	tGdkModifõrTy≥
 
	tmodifõr
);

69 
	$gboﬁón
 (*
	tGtkAc˚lGroupFödFunc
Ë(
	tGtkAc˚lKey
 *
	tkey
,

70 
	tGClosuª
 *
	t˛osuª
,

71 
	tgpoöãr
 
	td©a
);

73 
	s_GtkAc˚lGroup


75 
GObje˘
 
∑ª¡
;

77 
guöt
 
	`GSEAL
 (
lock_cou¡
);

78 
GdkModifõrTy≥
 
	`GSEAL
 (
modifõr_mask
);

79 
GSLi°
 *
	`GSEAL
 (
ac˚ÀøèbÀs
);

80 
guöt
 
	`GSEAL
 (
n_ac˚ls
);

81 
GtkAc˚lGroupE¡ry
 *
	`GSEAL
 (
¥iv_ac˚ls
);

84 
	s_GtkAc˚lGroupCœss


86 
GObje˘Cœss
 
∑ª¡_˛ass
;

88 (*
ac˚l_ch™ged
Ë(
GtkAc˚lGroup
 *
ac˚l_group
,

89 
guöt
 
keyvÆ
,

90 
GdkModifõrTy≥
 
modifõr
,

91 
GClosuª
 *
ac˚l_˛osuª
);

94 (*
_gtk_ª£rved1
) ();

95 (*
_gtk_ª£rved2
) ();

96 (*
_gtk_ª£rved3
) ();

97 (*
_gtk_ª£rved4
) ();

100 
	s_GtkAc˚lKey


102 
guöt
 
ac˚l_key
;

103 
GdkModifõrTy≥
 
ac˚l_mods
;

104 
guöt
 
ac˚l_Êags
 : 16;

109 
GTy≥
 
	$gtk_ac˚l_group_gë_ty≥
 (Ë
G_GNUC_CONST
;

110 
GtkAc˚lGroup
* 
	`gtk_ac˚l_group_√w
 ();

111 
gboﬁón
 
	`gtk_ac˚l_group_gë_is_locked
 (
GtkAc˚lGroup
 *
ac˚l_group
);

112 
GdkModifõrTy≥


113 
	`gtk_ac˚l_group_gë_modifõr_mask
 (
GtkAc˚lGroup
 *
ac˚l_group
);

114 
	`gtk_ac˚l_group_lock
 (
GtkAc˚lGroup
 *
ac˚l_group
);

115 
	`gtk_ac˚l_group_u∆ock
 (
GtkAc˚lGroup
 *
ac˚l_group
);

116 
	`gtk_ac˚l_group_c⁄√˘
 (
GtkAc˚lGroup
 *
ac˚l_group
,

117 
guöt
 
ac˚l_key
,

118 
GdkModifõrTy≥
 
ac˚l_mods
,

119 
GtkAc˚lFœgs
 
ac˚l_Êags
,

120 
GClosuª
 *
˛osuª
);

121 
	`gtk_ac˚l_group_c⁄√˘_by_∑th
 (
GtkAc˚lGroup
 *
ac˚l_group
,

122 c⁄° 
gch¨
 *
ac˚l_∑th
,

123 
GClosuª
 *
˛osuª
);

124 
gboﬁón
 
	`gtk_ac˚l_group_disc⁄√˘
 (
GtkAc˚lGroup
 *
ac˚l_group
,

125 
GClosuª
 *
˛osuª
);

126 
gboﬁón
 
	`gtk_ac˚l_group_disc⁄√˘_key
 (
GtkAc˚lGroup
 *
ac˚l_group
,

127 
guöt
 
ac˚l_key
,

128 
GdkModifõrTy≥
 
ac˚l_mods
);

129 
gboﬁón
 
	`gtk_ac˚l_group_a˘iv©e
 (
GtkAc˚lGroup
 *
ac˚l_group
,

130 
GQu¨k
 
ac˚l_qu¨k
,

131 
GObje˘
 *
ac˚ÀøèbÀ
,

132 
guöt
 
ac˚l_key
,

133 
GdkModifõrTy≥
 
ac˚l_mods
);

137 
	`_gtk_ac˚l_group_©èch
 (
GtkAc˚lGroup
 *
ac˚l_group
,

138 
GObje˘
 *
obje˘
);

139 
	`_gtk_ac˚l_group_dëach
 (
GtkAc˚lGroup
 *
ac˚l_group
,

140 
GObje˘
 *
obje˘
);

141 
gboﬁón
 
	`gtk_ac˚l_groups_a˘iv©e
 (
GObje˘
 *
obje˘
,

142 
guöt
 
ac˚l_key
,

143 
GdkModifõrTy≥
 
ac˚l_mods
);

144 
GSLi°
* 
	`gtk_ac˚l_groups_‰om_obje˘
 (
GObje˘
 *
obje˘
);

145 
GtkAc˚lKey
* 
	`gtk_ac˚l_group_föd
 (
GtkAc˚lGroup
 *
ac˚l_group
,

146 
GtkAc˚lGroupFödFunc
 
föd_func
,

147 
gpoöãr
 
d©a
);

148 
GtkAc˚lGroup
* 
	`gtk_ac˚l_group_‰om_ac˚l_˛osuª
 (
GClosuª
 *
˛osuª
);

152 
gboﬁón
 
	$gtk_ac˚Àøt‹_vÆid
 (
guöt
 
keyvÆ
,

153 
GdkModifõrTy≥
 
modifõrs
Ë
G_GNUC_CONST
;

154 
	`gtk_ac˚Àøt‹_∑r£
 (c⁄° 
gch¨
 *
ac˚Àøt‹
,

155 
guöt
 *
ac˚Àøt‹_key
,

156 
GdkModifõrTy≥
 *
ac˚Àøt‹_mods
);

157 
gch¨
* 
	`gtk_ac˚Àøt‹_«me
 (
guöt
 
ac˚Àøt‹_key
,

158 
GdkModifõrTy≥
 
ac˚Àøt‹_mods
);

159 
gch¨
* 
	`gtk_ac˚Àøt‹_gë_œbñ
 (
guöt
 
ac˚Àøt‹_key
,

160 
GdkModifõrTy≥
 
ac˚Àøt‹_mods
);

161 
	`gtk_ac˚Àøt‹_£t_deÁu…_mod_mask
 (
GdkModifõrTy≥
 
deÁu…_mod_mask
);

162 
guöt
 
	`gtk_ac˚Àøt‹_gë_deÁu…_mod_mask
 ();

166 
GtkAc˚lGroupE¡ry
* 
	`gtk_ac˚l_group_quîy
 (
GtkAc˚lGroup
 *
ac˚l_group
,

167 
guöt
 
ac˚l_key
,

168 
GdkModifõrTy≥
 
ac˚l_mods
,

169 
guöt
 *
n_íåõs
);

171 
	`_gtk_ac˚l_group_ªc⁄√˘
 (
GtkAc˚lGroup
 *
ac˚l_group
,

172 
GQu¨k
 
ac˚l_∑th_qu¨k
);

174 
	s_GtkAc˚lGroupE¡ry


176 
GtkAc˚lKey
 
key
;

177 
GClosuª
 *
˛osuª
;

178 
GQu¨k
 
ac˚l_∑th_qu¨k
;

182 #i‚de‡
GTK_DISABLE_DEPRECATED


183 
	#gtk_ac˚l_group_ªf
 
g_obje˘_ªf


	)

184 
	#gtk_ac˚l_group_uƒef
 
g_obje˘_uƒef


	)

187 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaccellabel.h

30 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

34 #i‚de‡
__GTK_ACCEL_LABEL_H__


35 
	#__GTK_ACCEL_LABEL_H__


	)

38 
	~<gtk/gtkœbñ.h
>

41 
	gG_BEGIN_DECLS


43 
	#GTK_TYPE_ACCEL_LABEL
 (
	`gtk_ac˚l_œbñ_gë_ty≥
 ())

	)

44 
	#GTK_ACCEL_LABEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ACCEL_LABEL
, 
GtkAc˚lLabñ
))

	)

45 
	#GTK_ACCEL_LABEL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ACCEL_LABEL
, 
GtkAc˚lLabñCœss
))

	)

46 
	#GTK_IS_ACCEL_LABEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ACCEL_LABEL
))

	)

47 
	#GTK_IS_ACCEL_LABEL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ACCEL_LABEL
))

	)

48 
	#GTK_ACCEL_LABEL_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ACCEL_LABEL
, 
GtkAc˚lLabñCœss
))

	)

51 
_GtkAc˚lLabñ
 
	tGtkAc˚lLabñ
;

52 
_GtkAc˚lLabñCœss
 
	tGtkAc˚lLabñCœss
;

54 
	s_GtkAc˚lLabñ


56 
GtkLabñ
 
	mœbñ
;

58 
guöt
 
GSEAL
 (
gtk_ª£rved
);

59 
guöt
 
GSEAL
 (
ac˚l_∑ddög
);

60 
GtkWidgë
 *
GSEAL
 (
ac˚l_widgë
);

61 
GClosuª
 *
GSEAL
 (
ac˚l_˛osuª
);

62 
GtkAc˚lGroup
 *
GSEAL
 (
ac˚l_group
);

63 
gch¨
 *
GSEAL
 (
ac˚l_°rög
);

64 
guöt16
 
GSEAL
 (
ac˚l_°rög_width
);

67 
	s_GtkAc˚lLabñCœss


69 
GtkLabñCœss
 
	m∑ª¡_˛ass
;

71 
gch¨
 *
	msig«l_quŸe1
;

72 
gch¨
 *
	msig«l_quŸe2
;

73 
gch¨
 *
	mmod_«me_shi·
;

74 
gch¨
 *
	mmod_«me_c⁄åﬁ
;

75 
gch¨
 *
	mmod_«me_Æt
;

76 
gch¨
 *
	mmod_£∑øt‹
;

77 
gch¨
 *
	mac˚l_£≥øt‹
;

78 
guöt
 
	mœtö1_to_ch¨
 : 1;

81 (*
	m_gtk_ª£rved1
) ();

82 (*
	m_gtk_ª£rved2
) ();

83 (*
	m_gtk_ª£rved3
) ();

84 (*
	m_gtk_ª£rved4
) ();

87 #i‚de‡
GTK_DISABLE_DEPRECATED


88 
	#gtk_ac˚l_œbñ_ac˚Àøt‹_width
 
gtk_ac˚l_œbñ_gë_ac˚l_width


	)

91 
GTy≥
 
	$gtk_ac˚l_œbñ_gë_ty≥
 (Ë
G_GNUC_CONST
;

92 
GtkWidgë
* 
	`gtk_ac˚l_œbñ_√w
 (c⁄° 
gch¨
 *
°rög
);

93 
GtkWidgë
* 
	`gtk_ac˚l_œbñ_gë_ac˚l_widgë
 (
GtkAc˚lLabñ
 *
ac˚l_œbñ
);

94 
guöt
 
	`gtk_ac˚l_œbñ_gë_ac˚l_width
 (
GtkAc˚lLabñ
 *
ac˚l_œbñ
);

95 
	`gtk_ac˚l_œbñ_£t_ac˚l_widgë
 (
GtkAc˚lLabñ
 *
ac˚l_œbñ
,

96 
GtkWidgë
 *
ac˚l_widgë
);

97 
	`gtk_ac˚l_œbñ_£t_ac˚l_˛osuª
 (
GtkAc˚lLabñ
 *
ac˚l_œbñ
,

98 
GClosuª
 *
ac˚l_˛osuª
);

99 
gboﬁón
 
	`gtk_ac˚l_œbñ_ª„tch
 (
GtkAc˚lLabñ
 *
ac˚l_œbñ
);

102 
gch¨
 * 
	`_gtk_ac˚l_œbñ_˛ass_gë_ac˚Àøt‹_œbñ
 (
GtkAc˚lLabñCœss
 *
kœss
,

103 
guöt
 
ac˚Àøt‹_key
,

104 
GdkModifõrTy≥
 
ac˚Àøt‹_mods
);

106 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaccelmap.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_ACCEL_MAP_H__


25 
	#__GTK_ACCEL_MAP_H__


	)

28 
	~<gtk/gtkac˚lgroup.h
>

30 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_ACCEL_MAP
 (
	`gtk_ac˚l_m≠_gë_ty≥
 ())

	)

34 
	#GTK_ACCEL_MAP
(
ac˚l_m≠
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (◊c˚l_m≠), 
GTK_TYPE_ACCEL_MAP
, 
GtkAc˚lM≠
))

	)

35 
	#GTK_ACCEL_MAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ACCEL_MAP
, 
GtkAc˚lM≠Cœss
))

	)

36 
	#GTK_IS_ACCEL_MAP
(
ac˚l_m≠
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (◊c˚l_m≠), 
GTK_TYPE_ACCEL_MAP
))

	)

37 
	#GTK_IS_ACCEL_MAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ACCEL_MAP
))

	)

38 
	#GTK_ACCEL_MAP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ACCEL_MAP
, 
GtkAc˚lM≠Cœss
))

	)

40 
_GtkAc˚lM≠
 
	tGtkAc˚lM≠
;

41 
_GtkAc˚lM≠Cœss
 
	tGtkAc˚lM≠Cœss
;

44 (*
	tGtkAc˚lM≠F‹óch
Ë(
	tgpoöãr
 
	td©a
,

45 c⁄° 
	tgch¨
 *
	tac˚l_∑th
,

46 
	tguöt
 
	tac˚l_key
,

47 
	tGdkModifõrTy≥
 
	tac˚l_mods
,

48 
	tgboﬁón
 
	tch™ged
);

53 #ifde‡
G_OS_WIN32


55 
	#gtk_ac˚l_m≠_lﬂd
 
gtk_ac˚l_m≠_lﬂd_utf8


	)

56 
	#gtk_ac˚l_m≠_ßve
 
gtk_ac˚l_m≠_ßve_utf8


	)

59 
	`gtk_ac˚l_m≠_add_íåy
 (c⁄° 
gch¨
 *
ac˚l_∑th
,

60 
guöt
 
ac˚l_key
,

61 
GdkModifõrTy≥
 
ac˚l_mods
);

62 
gboﬁón
 
	`gtk_ac˚l_m≠_lookup_íåy
 (c⁄° 
gch¨
 *
ac˚l_∑th
,

63 
GtkAc˚lKey
 *
key
);

64 
gboﬁón
 
	`gtk_ac˚l_m≠_ch™ge_íåy
 (c⁄° 
gch¨
 *
ac˚l_∑th
,

65 
guöt
 
ac˚l_key
,

66 
GdkModifõrTy≥
 
ac˚l_mods
,

67 
gboﬁón
 
ª∂a˚
);

68 
	`gtk_ac˚l_m≠_lﬂd
 (c⁄° 
gch¨
 *
fûe_«me
);

69 
	`gtk_ac˚l_m≠_ßve
 (c⁄° 
gch¨
 *
fûe_«me
);

70 
	`gtk_ac˚l_m≠_f‹óch
 (
gpoöãr
 
d©a
,

71 
GtkAc˚lM≠F‹óch
 
f‹óch_func
);

72 
	`gtk_ac˚l_m≠_lﬂd_fd
 (
göt
 
fd
);

73 
	`gtk_ac˚l_m≠_lﬂd_sˇ¬î
 (
GSˇ¬î
 *
sˇ¬î
);

74 
	`gtk_ac˚l_m≠_ßve_fd
 (
göt
 
fd
);

76 
	`gtk_ac˚l_m≠_lock_∑th
 (c⁄° 
gch¨
 *
ac˚l_∑th
);

77 
	`gtk_ac˚l_m≠_u∆ock_∑th
 (c⁄° 
gch¨
 *
ac˚l_∑th
);

80 
	`gtk_ac˚l_m≠_add_fûãr
 (c⁄° 
gch¨
 *
fûãr_∑âîn
);

81 
	`gtk_ac˚l_m≠_f‹óch_unfûãªd
 (
gpoöãr
 
d©a
,

82 
GtkAc˚lM≠F‹óch
 
f‹óch_func
);

85 
GTy≥
 
	$gtk_ac˚l_m≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

86 
GtkAc˚lM≠
 *
	`gtk_ac˚l_m≠_gë
 ();

90 
	`_gtk_ac˚l_m≠_öô
 ();

92 
	`_gtk_ac˚l_m≠_add_group
 (c⁄° 
gch¨
 *
ac˚l_∑th
,

93 
GtkAc˚lGroup
 *
ac˚l_group
);

94 
	`_gtk_ac˚l_m≠_ªmove_group
 (c⁄° 
gch¨
 *
ac˚l_∑th
,

95 
GtkAc˚lGroup
 *
ac˚l_group
);

96 
gboﬁón
 
	`_gtk_ac˚l_∑th_is_vÆid
 (c⁄° 
gch¨
 *
ac˚l_∑th
);

99 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaccessible.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_ACCESSIBLE_H__


25 
	#__GTK_ACCESSIBLE_H__


	)

27 
	~<©k/©k.h
>

28 
	~<gtk/gtkwidgë.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_ACCESSIBLE
 (
	`gtk_ac˚ssibÀ_gë_ty≥
 ())

	)

33 
	#GTK_ACCESSIBLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ACCESSIBLE
, 
GtkAc˚ssibÀ
))

	)

34 
	#GTK_ACCESSIBLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ACCESSIBLE
, 
GtkAc˚ssibÀCœss
))

	)

35 
	#GTK_IS_ACCESSIBLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ACCESSIBLE
))

	)

36 
	#GTK_IS_ACCESSIBLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ACCESSIBLE
))

	)

37 
	#GTK_ACCESSIBLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ACCESSIBLE
, 
GtkAc˚ssibÀCœss
))

	)

39 
_GtkAc˚ssibÀ
 
	tGtkAc˚ssibÀ
;

40 
_GtkAc˚ssibÀCœss
 
	tGtkAc˚ssibÀCœss
;

46 
	s_GtkAc˚ssibÀ


48 
AtkObje˘
 
	m∑ª¡
;

54 
GtkWidgë
 *
	mwidgë
;

57 
	s_GtkAc˚ssibÀCœss


59 
AtkObje˘Cœss
 
	m∑ª¡_˛ass
;

61 (*
	mc⁄√˘_widgë_de°royed
Ë(
GtkAc˚ssibÀ
 *
	mac˚ssibÀ
);

64 (*
	m_gtk_ª£rved1
) ();

65 (*
	m_gtk_ª£rved2
) ();

66 (*
	m_gtk_ª£rved3
) ();

67 (*
	m_gtk_ª£rved4
) ();

70 
GTy≥
 
	$gtk_ac˚ssibÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

72 
	`gtk_ac˚ssibÀ_c⁄√˘_widgë_de°royed
 (
GtkAc˚ssibÀ
 *
ac˚ssibÀ
);

74 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaction.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_ACTION_H__


36 
	#__GTK_ACTION_H__


	)

38 
	~<gtk/gtkwidgë.h
>

40 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_ACTION
 (
	`gtk_a˘i⁄_gë_ty≥
 ())

	)

43 
	#GTK_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ACTION
, 
GtkA˘i⁄
))

	)

44 
	#GTK_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ACTION
, 
GtkA˘i⁄Cœss
))

	)

45 
	#GTK_IS_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ACTION
))

	)

46 
	#GTK_IS_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ACTION
))

	)

47 
	#GTK_ACTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_ACTION
, 
GtkA˘i⁄Cœss
))

	)

49 
_GtkA˘i⁄
 
	tGtkA˘i⁄
;

50 
_GtkA˘i⁄Cœss
 
	tGtkA˘i⁄Cœss
;

51 
_GtkA˘i⁄Priv©e
 
	tGtkA˘i⁄Priv©e
;

53 
	s_GtkA˘i⁄


55 
GObje˘
 
	mobje˘
;

59 
GtkA˘i⁄Priv©e
 *
GSEAL
 (
¥iv©e_d©a
);

62 
	s_GtkA˘i⁄Cœss


64 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

67 (* 
	ma˘iv©e
Ë(
GtkA˘i⁄
 *
	ma˘i⁄
);

69 
GTy≥
 
	mmíu_ôem_ty≥
;

70 
GTy≥
 
	mtoﬁb¨_ôem_ty≥
;

73 
	mGtkWidgë
 *(* 
	m¸óã_míu_ôem
Ë(
GtkA˘i⁄
 *
	ma˘i⁄
);

74 
	mGtkWidgë
 *(* 
	m¸óã_toﬁ_ôem
Ë(
GtkA˘i⁄
 *
	ma˘i⁄
);

75 (* 
	mc⁄√˘_¥oxy
Ë(
GtkA˘i⁄
 *
	ma˘i⁄
,

76 
GtkWidgë
 *
	m¥oxy
);

77 (* 
	mdisc⁄√˘_¥oxy
Ë(
GtkA˘i⁄
 *
	ma˘i⁄
,

78 
GtkWidgë
 *
	m¥oxy
);

80 
	mGtkWidgë
 *(* 
	m¸óã_míu
Ë(
GtkA˘i⁄
 *
	ma˘i⁄
);

83 (*
	m_gtk_ª£rved2
) ();

84 (*
	m_gtk_ª£rved3
) ();

85 (*
	m_gtk_ª£rved4
) ();

88 
GTy≥
 
	$gtk_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
GtkA˘i⁄
 *
	`gtk_a˘i⁄_√w
 (c⁄° 
gch¨
 *
«me
,

90 c⁄° 
gch¨
 *
œbñ
,

91 c⁄° 
gch¨
 *
toﬁtù
,

92 c⁄° 
gch¨
 *
°ock_id
);

93 
G_CONST_RETURN
 
gch¨
* 
	`gtk_a˘i⁄_gë_«me
 (
GtkA˘i⁄
 *
a˘i⁄
);

94 
gboﬁón
 
	`gtk_a˘i⁄_is_£nsôive
 (
GtkA˘i⁄
 *
a˘i⁄
);

95 
gboﬁón
 
	`gtk_a˘i⁄_gë_£nsôive
 (
GtkA˘i⁄
 *
a˘i⁄
);

96 
	`gtk_a˘i⁄_£t_£nsôive
 (
GtkA˘i⁄
 *
a˘i⁄
,

97 
gboﬁón
 
£nsôive
);

98 
gboﬁón
 
	`gtk_a˘i⁄_is_visibÀ
 (
GtkA˘i⁄
 *
a˘i⁄
);

99 
gboﬁón
 
	`gtk_a˘i⁄_gë_visibÀ
 (
GtkA˘i⁄
 *
a˘i⁄
);

100 
	`gtk_a˘i⁄_£t_visibÀ
 (
GtkA˘i⁄
 *
a˘i⁄
,

101 
gboﬁón
 
visibÀ
);

102 
	`gtk_a˘i⁄_a˘iv©e
 (
GtkA˘i⁄
 *
a˘i⁄
);

103 
GtkWidgë
 * 
	`gtk_a˘i⁄_¸óã_ic⁄
 (
GtkA˘i⁄
 *
a˘i⁄
,

104 
GtkIc⁄Size
 
ic⁄_size
);

105 
GtkWidgë
 * 
	`gtk_a˘i⁄_¸óã_míu_ôem
 (
GtkA˘i⁄
 *
a˘i⁄
);

106 
GtkWidgë
 * 
	`gtk_a˘i⁄_¸óã_toﬁ_ôem
 (
GtkA˘i⁄
 *
a˘i⁄
);

107 
GtkWidgë
 * 
	`gtk_a˘i⁄_¸óã_míu
 (
GtkA˘i⁄
 *
a˘i⁄
);

108 
GSLi°
 * 
	`gtk_a˘i⁄_gë_¥oxõs
 (
GtkA˘i⁄
 *
a˘i⁄
);

109 
	`gtk_a˘i⁄_c⁄√˘_ac˚Àøt‹
 (
GtkA˘i⁄
 *
a˘i⁄
);

110 
	`gtk_a˘i⁄_disc⁄√˘_ac˚Àøt‹
 (
GtkA˘i⁄
 *
a˘i⁄
);

111 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_gë_ac˚l_∑th
 (
GtkA˘i⁄
 *
a˘i⁄
);

112 
GClosuª
 *
	`gtk_a˘i⁄_gë_ac˚l_˛osuª
 (
GtkA˘i⁄
 *
a˘i⁄
);

114 #i‚de‡
GTK_DISABLE_DEPRECATED


115 
GtkA˘i⁄
 *
	`gtk_widgë_gë_a˘i⁄
 (
GtkWidgë
 *
widgë
);

116 
	`gtk_a˘i⁄_c⁄√˘_¥oxy
 (
GtkA˘i⁄
 *
a˘i⁄
,

117 
GtkWidgë
 *
¥oxy
);

118 
	`gtk_a˘i⁄_disc⁄√˘_¥oxy
 (
GtkA˘i⁄
 *
a˘i⁄
,

119 
GtkWidgë
 *
¥oxy
);

120 
	`gtk_a˘i⁄_block_a˘iv©e_‰om
 (
GtkA˘i⁄
 *
a˘i⁄
,

121 
GtkWidgë
 *
¥oxy
);

122 
	`gtk_a˘i⁄_unblock_a˘iv©e_‰om
 (
GtkA˘i⁄
 *
a˘i⁄
,

123 
GtkWidgë
 *
¥oxy
);

125 
	`gtk_a˘i⁄_block_a˘iv©e
 (
GtkA˘i⁄
 *
a˘i⁄
);

126 
	`gtk_a˘i⁄_unblock_a˘iv©e
 (
GtkA˘i⁄
 *
a˘i⁄
);

129 
	`_gtk_a˘i⁄_add_to_¥oxy_li°
 (
GtkA˘i⁄
 *
a˘i⁄
,

130 
GtkWidgë
 *
¥oxy
);

131 
	`_gtk_a˘i⁄_ªmove_‰om_¥oxy_li°
(
GtkA˘i⁄
 *
a˘i⁄
,

132 
GtkWidgë
 *
¥oxy
);

135 
	`_gtk_a˘i⁄_emô_a˘iv©e
 (
GtkA˘i⁄
 *
a˘i⁄
);

138 
	`gtk_a˘i⁄_£t_ac˚l_∑th
 (
GtkA˘i⁄
 *
a˘i⁄
,

139 c⁄° 
gch¨
 *
ac˚l_∑th
);

140 
	`gtk_a˘i⁄_£t_ac˚l_group
 (
GtkA˘i⁄
 *
a˘i⁄
,

141 
GtkAc˚lGroup
 *
ac˚l_group
);

142 
	`_gtk_a˘i⁄_sync_míu_visibÀ
 (
GtkA˘i⁄
 *
a˘i⁄
,

143 
GtkWidgë
 *
¥oxy
,

144 
gboﬁón
 
em±y
);

146 
	`gtk_a˘i⁄_£t_œbñ
 (
GtkA˘i⁄
 *
a˘i⁄
,

147 c⁄° 
gch¨
 *
œbñ
);

148 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_gë_œbñ
 (
GtkA˘i⁄
 *
a˘i⁄
);

149 
	`gtk_a˘i⁄_£t_sh‹t_œbñ
 (
GtkA˘i⁄
 *
a˘i⁄
,

150 c⁄° 
gch¨
 *
sh‹t_œbñ
);

151 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_gë_sh‹t_œbñ
 (
GtkA˘i⁄
 *
a˘i⁄
);

152 
	`gtk_a˘i⁄_£t_toﬁtù
 (
GtkA˘i⁄
 *
a˘i⁄
,

153 c⁄° 
gch¨
 *
toﬁtù
);

154 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_gë_toﬁtù
 (
GtkA˘i⁄
 *
a˘i⁄
);

155 
	`gtk_a˘i⁄_£t_°ock_id
 (
GtkA˘i⁄
 *
a˘i⁄
,

156 c⁄° 
gch¨
 *
°ock_id
);

157 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_gë_°ock_id
 (
GtkA˘i⁄
 *
a˘i⁄
);

158 
	`gtk_a˘i⁄_£t_gic⁄
 (
GtkA˘i⁄
 *
a˘i⁄
,

159 
GIc⁄
 *
ic⁄
);

160 
GIc⁄
 *
	`gtk_a˘i⁄_gë_gic⁄
 (
GtkA˘i⁄
 *
a˘i⁄
);

161 
	`gtk_a˘i⁄_£t_ic⁄_«me
 (
GtkA˘i⁄
 *
a˘i⁄
,

162 c⁄° 
gch¨
 *
ic⁄_«me
);

163 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_gë_ic⁄_«me
 (
GtkA˘i⁄
 *
a˘i⁄
);

164 
	`gtk_a˘i⁄_£t_visibÀ_h‹iz⁄èl
 (
GtkA˘i⁄
 *
a˘i⁄
,

165 
gboﬁón
 
visibÀ_h‹iz⁄èl
);

166 
gboﬁón
 
	`gtk_a˘i⁄_gë_visibÀ_h‹iz⁄èl
 (
GtkA˘i⁄
 *
a˘i⁄
);

167 
	`gtk_a˘i⁄_£t_visibÀ_vîtiˇl
 (
GtkA˘i⁄
 *
a˘i⁄
,

168 
gboﬁón
 
visibÀ_vîtiˇl
);

169 
gboﬁón
 
	`gtk_a˘i⁄_gë_visibÀ_vîtiˇl
 (
GtkA˘i⁄
 *
a˘i⁄
);

170 
	`gtk_a˘i⁄_£t_is_imp‹è¡
 (
GtkA˘i⁄
 *
a˘i⁄
,

171 
gboﬁón
 
is_imp‹è¡
);

172 
gboﬁón
 
	`gtk_a˘i⁄_gë_is_imp‹è¡
 (
GtkA˘i⁄
 *
a˘i⁄
);

175 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkactiongroup.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_ACTION_GROUP_H__


36 
	#__GTK_ACTION_GROUP_H__


	)

38 
	~<gtk/gtka˘i⁄.h
>

39 
	~<gtk/gtkty≥utûs.h
>

41 
	gG_BEGIN_DECLS


43 
	#GTK_TYPE_ACTION_GROUP
 (
	`gtk_a˘i⁄_group_gë_ty≥
 ())

	)

44 
	#GTK_ACTION_GROUP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ACTION_GROUP
, 
GtkA˘i⁄Group
))

	)

45 
	#GTK_ACTION_GROUP_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_ACTION_GROUP
, 
GtkA˘i⁄GroupCœss
))

	)

46 
	#GTK_IS_ACTION_GROUP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ACTION_GROUP
))

	)

47 
	#GTK_IS_ACTION_GROUP_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_ACTION_GROUP
))

	)

48 
	#GTK_ACTION_GROUP_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((ö°), 
GTK_TYPE_ACTION_GROUP
, 
GtkA˘i⁄GroupCœss
))

	)

50 
_GtkA˘i⁄Group
 
	tGtkA˘i⁄Group
;

51 
_GtkA˘i⁄GroupPriv©e
 
	tGtkA˘i⁄GroupPriv©e
;

52 
_GtkA˘i⁄GroupCœss
 
	tGtkA˘i⁄GroupCœss
;

53 
_GtkA˘i⁄E¡ry
 
	tGtkA˘i⁄E¡ry
;

54 
_GtkToggÀA˘i⁄E¡ry
 
	tGtkToggÀA˘i⁄E¡ry
;

55 
_GtkRadioA˘i⁄E¡ry
 
	tGtkRadioA˘i⁄E¡ry
;

57 
	s_GtkA˘i⁄Group


59 
GObje˘
 
	m∑ª¡
;

63 
GtkA˘i⁄GroupPriv©e
 *
GSEAL
 (
¥iv©e_d©a
);

66 
	s_GtkA˘i⁄GroupCœss


68 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

70 
	mGtkA˘i⁄
 *(* 
	mgë_a˘i⁄
Ë(
GtkA˘i⁄Group
 *
	ma˘i⁄_group
,

71 c⁄° 
gch¨
 *
	ma˘i⁄_«me
);

74 (*
	m_gtk_ª£rved1
) ();

75 (*
	m_gtk_ª£rved2
) ();

76 (*
	m_gtk_ª£rved3
) ();

77 (*
	m_gtk_ª£rved4
) ();

80 
	s_GtkA˘i⁄E¡ry


82 c⁄° 
gch¨
 *
	m«me
;

83 c⁄° 
gch¨
 *
	m°ock_id
;

84 c⁄° 
gch¨
 *
	mœbñ
;

85 c⁄° 
gch¨
 *
	mac˚Àøt‹
;

86 c⁄° 
gch¨
 *
	mtoﬁtù
;

87 
GCÆlback
 
	mˇŒback
;

90 
	s_GtkToggÀA˘i⁄E¡ry


92 c⁄° 
gch¨
 *
	m«me
;

93 c⁄° 
gch¨
 *
	m°ock_id
;

94 c⁄° 
gch¨
 *
	mœbñ
;

95 c⁄° 
gch¨
 *
	mac˚Àøt‹
;

96 c⁄° 
gch¨
 *
	mtoﬁtù
;

97 
GCÆlback
 
	mˇŒback
;

98 
gboﬁón
 
	mis_a˘ive
;

101 
	s_GtkRadioA˘i⁄E¡ry


103 c⁄° 
gch¨
 *
	m«me
;

104 c⁄° 
gch¨
 *
	m°ock_id
;

105 c⁄° 
gch¨
 *
	mœbñ
;

106 c⁄° 
gch¨
 *
	mac˚Àøt‹
;

107 c⁄° 
gch¨
 *
	mtoﬁtù
;

108 
göt
 
	mvÆue
;

111 
GTy≥
 
	$gtk_a˘i⁄_group_gë_ty≥
 (Ë
G_GNUC_CONST
;

112 
GtkA˘i⁄Group
 *
	`gtk_a˘i⁄_group_√w
 (c⁄° 
gch¨
 *
«me
);

113 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_group_gë_«me
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
);

114 
gboﬁón
 
	`gtk_a˘i⁄_group_gë_£nsôive
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
);

115 
	`gtk_a˘i⁄_group_£t_£nsôive
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

116 
gboﬁón
 
£nsôive
);

117 
gboﬁón
 
	`gtk_a˘i⁄_group_gë_visibÀ
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
);

118 
	`gtk_a˘i⁄_group_£t_visibÀ
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

119 
gboﬁón
 
visibÀ
);

120 
GtkA˘i⁄
 *
	`gtk_a˘i⁄_group_gë_a˘i⁄
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

121 c⁄° 
gch¨
 *
a˘i⁄_«me
);

122 
GLi°
 *
	`gtk_a˘i⁄_group_li°_a˘i⁄s
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
);

123 
	`gtk_a˘i⁄_group_add_a˘i⁄
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

124 
GtkA˘i⁄
 *
a˘i⁄
);

125 
	`gtk_a˘i⁄_group_add_a˘i⁄_wôh_ac˚l
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

126 
GtkA˘i⁄
 *
a˘i⁄
,

127 c⁄° 
gch¨
 *
ac˚Àøt‹
);

128 
	`gtk_a˘i⁄_group_ªmove_a˘i⁄
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

129 
GtkA˘i⁄
 *
a˘i⁄
);

130 
	`gtk_a˘i⁄_group_add_a˘i⁄s
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

131 c⁄° 
GtkA˘i⁄E¡ry
 *
íåõs
,

132 
guöt
 
n_íåõs
,

133 
gpoöãr
 
u£r_d©a
);

134 
	`gtk_a˘i⁄_group_add_toggÀ_a˘i⁄s
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

135 c⁄° 
GtkToggÀA˘i⁄E¡ry
 *
íåõs
,

136 
guöt
 
n_íåõs
,

137 
gpoöãr
 
u£r_d©a
);

138 
	`gtk_a˘i⁄_group_add_ødio_a˘i⁄s
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

139 c⁄° 
GtkRadioA˘i⁄E¡ry
 *
íåõs
,

140 
guöt
 
n_íåõs
,

141 
göt
 
vÆue
,

142 
GCÆlback
 
⁄_ch™ge
,

143 
gpoöãr
 
u£r_d©a
);

144 
	`gtk_a˘i⁄_group_add_a˘i⁄s_fuŒ
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

145 c⁄° 
GtkA˘i⁄E¡ry
 *
íåõs
,

146 
guöt
 
n_íåõs
,

147 
gpoöãr
 
u£r_d©a
,

148 
GDe°royNŸify
 
de°roy
);

149 
	`gtk_a˘i⁄_group_add_toggÀ_a˘i⁄s_fuŒ
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

150 c⁄° 
GtkToggÀA˘i⁄E¡ry
 *
íåõs
,

151 
guöt
 
n_íåõs
,

152 
gpoöãr
 
u£r_d©a
,

153 
GDe°royNŸify
 
de°roy
);

154 
	`gtk_a˘i⁄_group_add_ødio_a˘i⁄s_fuŒ
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

155 c⁄° 
GtkRadioA˘i⁄E¡ry
 *
íåõs
,

156 
guöt
 
n_íåõs
,

157 
göt
 
vÆue
,

158 
GCÆlback
 
⁄_ch™ge
,

159 
gpoöãr
 
u£r_d©a
,

160 
GDe°royNŸify
 
de°roy
);

161 
	`gtk_a˘i⁄_group_£t_å™¶©e_func
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

162 
GtkTøn¶©eFunc
 
func
,

163 
gpoöãr
 
d©a
,

164 
GDe°royNŸify
 
nŸify
);

165 
	`gtk_a˘i⁄_group_£t_å™¶©i⁄_domaö
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

166 c⁄° 
gch¨
 *
domaö
);

167 
G_CONST_RETURN
 
gch¨
 *
	`gtk_a˘i⁄_group_å™¶©e_°rög
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

168 c⁄° 
gch¨
 *
°rög
);

171 
	`_gtk_a˘i⁄_group_emô_c⁄√˘_¥oxy
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

172 
GtkA˘i⁄
 *
a˘i⁄
,

173 
GtkWidgë
 *
¥oxy
);

174 
	`_gtk_a˘i⁄_group_emô_disc⁄√˘_¥oxy
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

175 
GtkA˘i⁄
 *
a˘i⁄
,

176 
GtkWidgë
 *
¥oxy
);

177 
	`_gtk_a˘i⁄_group_emô_¥e_a˘iv©e
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

178 
GtkA˘i⁄
 *
a˘i⁄
);

179 
	`_gtk_a˘i⁄_group_emô_po°_a˘iv©e
 (
GtkA˘i⁄Group
 *
a˘i⁄_group
,

180 
GtkA˘i⁄
 *
a˘i⁄
);

182 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkactivatable.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_ACTIVATABLE_H__


25 
	#__GTK_ACTIVATABLE_H__


	)

27 
	~<gtk/gtka˘i⁄.h
>

28 
	~<gtk/gtkty≥utûs.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_ACTIVATABLE
 (
	`gtk_a˘iv©abÀ_gë_ty≥
 ())

	)

33 
	#GTK_ACTIVATABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ACTIVATABLE
, 
GtkA˘iv©abÀ
))

	)

34 
	#GTK_ACTIVATABLE_CLASS
(
obj
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((obj), 
GTK_TYPE_ACTIVATABLE
, 
GtkA˘iv©abÀIÁ˚
))

	)

35 
	#GTK_IS_ACTIVATABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ACTIVATABLE
))

	)

36 
	#GTK_ACTIVATABLE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_ACTIVATABLE
, 
GtkA˘iv©abÀIÁ˚
))

	)

39 
_GtkA˘iv©abÀ
 
	tGtkA˘iv©abÀ
;

40 
_GtkA˘iv©abÀIÁ˚
 
	tGtkA˘iv©abÀIÁ˚
;

56 
	s_GtkA˘iv©abÀIÁ˚


58 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

61 (* 
	mupd©e
Ë(
GtkA˘iv©abÀ
 *
	ma˘iv©abÀ
,

62 
GtkA˘i⁄
 *
	ma˘i⁄
,

63 c⁄° 
gch¨
 *
	m¥›îty_«me
);

64 (* 
	msync_a˘i⁄_¥›îtõs
Ë(
GtkA˘iv©abÀ
 *
	ma˘iv©abÀ
,

65 
GtkA˘i⁄
 *
	ma˘i⁄
);

69 
GTy≥
 
	$gtk_a˘iv©abÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
	`gtk_a˘iv©abÀ_sync_a˘i⁄_¥›îtõs
 (
GtkA˘iv©abÀ
 *
a˘iv©abÀ
,

72 
GtkA˘i⁄
 *
a˘i⁄
);

74 
	`gtk_a˘iv©abÀ_£t_ªœãd_a˘i⁄
 (
GtkA˘iv©abÀ
 *
a˘iv©abÀ
,

75 
GtkA˘i⁄
 *
a˘i⁄
);

76 
GtkA˘i⁄
 *
	`gtk_a˘iv©abÀ_gë_ªœãd_a˘i⁄
 (
GtkA˘iv©abÀ
 *
a˘iv©abÀ
);

78 
	`gtk_a˘iv©abÀ_£t_u£_a˘i⁄_≠≥¨™˚
 (
GtkA˘iv©abÀ
 *
a˘iv©abÀ
,

79 
gboﬁón
 
u£_≠≥¨™˚
);

80 
gboﬁón
 
	`gtk_a˘iv©abÀ_gë_u£_a˘i⁄_≠≥¨™˚
 (
GtkA˘iv©abÀ
 *
a˘iv©abÀ
);

83 
	`gtk_a˘iv©abÀ_do_£t_ªœãd_a˘i⁄
 (
GtkA˘iv©abÀ
 *
a˘iv©abÀ
,

84 
GtkA˘i⁄
 *
a˘i⁄
);

86 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkadjustment.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ADJUSTMENT_H__


32 
	#__GTK_ADJUSTMENT_H__


	)

35 
	~<gdk/gdk.h
>

36 
	~<gtk/gtkobje˘.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_ADJUSTMENT
 (
	`gtk_adju°mít_gë_ty≥
 ())

	)

41 
	#GTK_ADJUSTMENT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ADJUSTMENT
, 
GtkAdju°mít
))

	)

42 
	#GTK_ADJUSTMENT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ADJUSTMENT
, 
GtkAdju°mítCœss
))

	)

43 
	#GTK_IS_ADJUSTMENT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ADJUSTMENT
))

	)

44 
	#GTK_IS_ADJUSTMENT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ADJUSTMENT
))

	)

45 
	#GTK_ADJUSTMENT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ADJUSTMENT
, 
GtkAdju°mítCœss
))

	)

48 
_GtkAdju°mít
 
	tGtkAdju°mít
;

49 
_GtkAdju°mítCœss
 
	tGtkAdju°mítCœss
;

51 
	s_GtkAdju°mít


53 
GtkObje˘
 
	m∑ª¡_ö°™˚
;

55 
gdoubÀ
 
GSEAL
 (
lowî
);

56 
gdoubÀ
 
GSEAL
 (
uµî
);

57 
gdoubÀ
 
GSEAL
 (
vÆue
);

58 
gdoubÀ
 
GSEAL
 (
°ï_ö¸emít
);

59 
gdoubÀ
 
GSEAL
 (
∑ge_ö¸emít
);

60 
gdoubÀ
 
GSEAL
 (
∑ge_size
);

63 
	s_GtkAdju°mítCœss


65 
GtkObje˘Cœss
 
	m∑ª¡_˛ass
;

67 (* 
	mch™ged
Ë(
GtkAdju°mít
 *
	madju°mít
);

68 (* 
	mvÆue_ch™ged
Ë(
GtkAdju°mít
 *
	madju°mít
);

71 (*
	m_gtk_ª£rved1
) ();

72 (*
	m_gtk_ª£rved2
) ();

73 (*
	m_gtk_ª£rved3
) ();

74 (*
	m_gtk_ª£rved4
) ();

78 
GTy≥
 
	$gtk_adju°mít_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
GtkObje˘
* 
	`gtk_adju°mít_√w
 (
gdoubÀ
 
vÆue
,

80 
gdoubÀ
 
lowî
,

81 
gdoubÀ
 
uµî
,

82 
gdoubÀ
 
°ï_ö¸emít
,

83 
gdoubÀ
 
∑ge_ö¸emít
,

84 
gdoubÀ
 
∑ge_size
);

86 
	`gtk_adju°mít_ch™ged
 (
GtkAdju°mít
 *
adju°mít
);

87 
	`gtk_adju°mít_vÆue_ch™ged
 (
GtkAdju°mít
 *
adju°mít
);

88 
	`gtk_adju°mít_˛amp_∑ge
 (
GtkAdju°mít
 *
adju°mít
,

89 
gdoubÀ
 
lowî
,

90 
gdoubÀ
 
uµî
);

92 
gdoubÀ
 
	`gtk_adju°mít_gë_vÆue
 (
GtkAdju°mít
 *
adju°mít
);

93 
	`gtk_adju°mít_£t_vÆue
 (
GtkAdju°mít
 *
adju°mít
,

94 
gdoubÀ
 
vÆue
);

95 
gdoubÀ
 
	`gtk_adju°mít_gë_lowî
 (
GtkAdju°mít
 *
adju°mít
);

96 
	`gtk_adju°mít_£t_lowî
 (
GtkAdju°mít
 *
adju°mít
,

97 
gdoubÀ
 
lowî
);

98 
gdoubÀ
 
	`gtk_adju°mít_gë_uµî
 (
GtkAdju°mít
 *
adju°mít
);

99 
	`gtk_adju°mít_£t_uµî
 (
GtkAdju°mít
 *
adju°mít
,

100 
gdoubÀ
 
uµî
);

101 
gdoubÀ
 
	`gtk_adju°mít_gë_°ï_ö¸emít
 (
GtkAdju°mít
 *
adju°mít
);

102 
	`gtk_adju°mít_£t_°ï_ö¸emít
 (
GtkAdju°mít
 *
adju°mít
,

103 
gdoubÀ
 
°ï_ö¸emít
);

104 
gdoubÀ
 
	`gtk_adju°mít_gë_∑ge_ö¸emít
 (
GtkAdju°mít
 *
adju°mít
);

105 
	`gtk_adju°mít_£t_∑ge_ö¸emít
 (
GtkAdju°mít
 *
adju°mít
,

106 
gdoubÀ
 
∑ge_ö¸emít
);

107 
gdoubÀ
 
	`gtk_adju°mít_gë_∑ge_size
 (
GtkAdju°mít
 *
adju°mít
);

108 
	`gtk_adju°mít_£t_∑ge_size
 (
GtkAdju°mít
 *
adju°mít
,

109 
gdoubÀ
 
∑ge_size
);

111 
	`gtk_adju°mít_c⁄figuª
 (
GtkAdju°mít
 *
adju°mít
,

112 
gdoubÀ
 
vÆue
,

113 
gdoubÀ
 
lowî
,

114 
gdoubÀ
 
uµî
,

115 
gdoubÀ
 
°ï_ö¸emít
,

116 
gdoubÀ
 
∑ge_ö¸emít
,

117 
gdoubÀ
 
∑ge_size
);

119 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkalignment.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ALIGNMENT_H__


32 
	#__GTK_ALIGNMENT_H__


	)

35 
	~<gtk/gtkbö.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_ALIGNMENT
 (
	`gtk_Æignmít_gë_ty≥
 ())

	)

41 
	#GTK_ALIGNMENT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ALIGNMENT
, 
GtkAlignmít
))

	)

42 
	#GTK_ALIGNMENT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ALIGNMENT
, 
GtkAlignmítCœss
))

	)

43 
	#GTK_IS_ALIGNMENT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ALIGNMENT
))

	)

44 
	#GTK_IS_ALIGNMENT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ALIGNMENT
))

	)

45 
	#GTK_ALIGNMENT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ALIGNMENT
, 
GtkAlignmítCœss
))

	)

48 
_GtkAlignmít
 
	tGtkAlignmít
;

49 
_GtkAlignmítCœss
 
	tGtkAlignmítCœss
;

50 
_GtkAlignmítPriv©e
 
	tGtkAlignmítPriv©e
;

52 
	s_GtkAlignmít


54 
GtkBö
 
	mbö
;

56 
gÊﬂt
 
GSEAL
 (
xÆign
);

57 
gÊﬂt
 
GSEAL
 (
yÆign
);

58 
gÊﬂt
 
GSEAL
 (
xsˇÀ
);

59 
gÊﬂt
 
GSEAL
 (
ysˇÀ
);

62 
	s_GtkAlignmítCœss


64 
GtkBöCœss
 
	m∑ª¡_˛ass
;

68 
GTy≥
 
	$gtk_Æignmít_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GtkWidgë
* 
	`gtk_Æignmít_√w
 (
gÊﬂt
 
xÆign
,

70 
gÊﬂt
 
yÆign
,

71 
gÊﬂt
 
xsˇÀ
,

72 
gÊﬂt
 
ysˇÀ
);

73 
	`gtk_Æignmít_£t
 (
GtkAlignmít
 *
Æignmít
,

74 
gÊﬂt
 
xÆign
,

75 
gÊﬂt
 
yÆign
,

76 
gÊﬂt
 
xsˇÀ
,

77 
gÊﬂt
 
ysˇÀ
);

79 
	`gtk_Æignmít_£t_∑ddög
 (
GtkAlignmít
 *
Æignmít
,

80 
guöt
 
∑ddög_t›
,

81 
guöt
 
∑ddög_bŸtom
,

82 
guöt
 
∑ddög_À·
,

83 
guöt
 
∑ddög_right
);

85 
	`gtk_Æignmít_gë_∑ddög
 (
GtkAlignmít
 *
Æignmít
,

86 
guöt
 *
∑ddög_t›
,

87 
guöt
 *
∑ddög_bŸtom
,

88 
guöt
 *
∑ddög_À·
,

89 
guöt
 *
∑ddög_right
);

91 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkarrow.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ARROW_H__


32 
	#__GTK_ARROW_H__


	)

35 
	~<gtk/gtkmisc.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_ARROW
 (
	`gtk_¨row_gë_ty≥
 ())

	)

42 
	#GTK_ARROW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ARROW
, 
GtkAºow
))

	)

43 
	#GTK_ARROW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ARROW
, 
GtkAºowCœss
))

	)

44 
	#GTK_IS_ARROW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ARROW
))

	)

45 
	#GTK_IS_ARROW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ARROW
))

	)

46 
	#GTK_ARROW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ARROW
, 
GtkAºowCœss
))

	)

49 
_GtkAºow
 
	tGtkAºow
;

50 
_GtkAºowCœss
 
	tGtkAºowCœss
;

52 
	s_GtkAºow


54 
GtkMisc
 
	mmisc
;

56 
göt16
 
GSEAL
 (
¨row_ty≥
);

57 
göt16
 
GSEAL
 (
shadow_ty≥
);

60 
	s_GtkAºowCœss


62 
GtkMiscCœss
 
	m∑ª¡_˛ass
;

66 
GTy≥
 
	$gtk_¨row_gë_ty≥
 (Ë
G_GNUC_CONST
;

67 
GtkWidgë
* 
	`gtk_¨row_√w
 (
GtkAºowTy≥
 
¨row_ty≥
,

68 
GtkShadowTy≥
 
shadow_ty≥
);

69 
	`gtk_¨row_£t
 (
GtkAºow
 *
¨row
,

70 
GtkAºowTy≥
 
¨row_ty≥
,

71 
GtkShadowTy≥
 
shadow_ty≥
);

74 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkaspectframe.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ASPECT_FRAME_H__


32 
	#__GTK_ASPECT_FRAME_H__


	)

35 
	~<gtk/gtk‰ame.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_ASPECT_FRAME
 (
	`gtk_a•e˘_‰ame_gë_ty≥
 ())

	)

41 
	#GTK_ASPECT_FRAME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ASPECT_FRAME
, 
GtkA•e˘Føme
))

	)

42 
	#GTK_ASPECT_FRAME_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ASPECT_FRAME
, 
GtkA•e˘FømeCœss
))

	)

43 
	#GTK_IS_ASPECT_FRAME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ASPECT_FRAME
))

	)

44 
	#GTK_IS_ASPECT_FRAME_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ASPECT_FRAME
))

	)

45 
	#GTK_ASPECT_FRAME_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ASPECT_FRAME
, 
GtkA•e˘FømeCœss
))

	)

48 
_GtkA•e˘Føme
 
	tGtkA•e˘Føme
;

49 
_GtkA•e˘FømeCœss
 
	tGtkA•e˘FømeCœss
;

51 
	s_GtkA•e˘Føme


53 
GtkFøme
 
	m‰ame
;

55 
gÊﬂt
 
GSEAL
 (
xÆign
);

56 
gÊﬂt
 
GSEAL
 (
yÆign
);

57 
gÊﬂt
 
GSEAL
 (
øtio
);

58 
gboﬁón
 
GSEAL
 (
obey_chûd
);

60 
GtkAŒoˇti⁄
 
GSEAL
 (
˚¡î_Æloˇti⁄
);

63 
	s_GtkA•e˘FømeCœss


65 
GtkFømeCœss
 
	m∑ª¡_˛ass
;

69 
GTy≥
 
	$gtk_a•e˘_‰ame_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkWidgë
* 
	`gtk_a•e˘_‰ame_√w
 (c⁄° 
gch¨
 *
œbñ
,

71 
gÊﬂt
 
xÆign
,

72 
gÊﬂt
 
yÆign
,

73 
gÊﬂt
 
øtio
,

74 
gboﬁón
 
obey_chûd
);

75 
	`gtk_a•e˘_‰ame_£t
 (
GtkA•e˘Føme
 *
a•e˘_‰ame
,

76 
gÊﬂt
 
xÆign
,

77 
gÊﬂt
 
yÆign
,

78 
gÊﬂt
 
øtio
,

79 
gboﬁón
 
obey_chûd
);

82 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkassistant.h

26 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

30 #i‚de‡
__GTK_ASSISTANT_H__


31 
	#__GTK_ASSISTANT_H__


	)

33 
	~<gtk/gtkwödow.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_ASSISTANT
 (
	`gtk_assi°™t_gë_ty≥
 ())

	)

38 
	#GTK_ASSISTANT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
GTK_TYPE_ASSISTANT
, 
GtkAssi°™t
))

	)

39 
	#GTK_ASSISTANT_CLASS
(
c
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((c), 
GTK_TYPE_ASSISTANT
, 
GtkAssi°™tCœss
))

	)

40 
	#GTK_IS_ASSISTANT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
GTK_TYPE_ASSISTANT
))

	)

41 
	#GTK_IS_ASSISTANT_CLASS
(
c
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((c), 
GTK_TYPE_ASSISTANT
))

	)

42 
	#GTK_ASSISTANT_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
GTK_TYPE_ASSISTANT
, 
GtkAssi°™tCœss
))

	)

46 
	mGTK_ASSISTANT_PAGE_CONTENT
,

47 
	mGTK_ASSISTANT_PAGE_INTRO
,

48 
	mGTK_ASSISTANT_PAGE_CONFIRM
,

49 
	mGTK_ASSISTANT_PAGE_SUMMARY
,

50 
	mGTK_ASSISTANT_PAGE_PROGRESS


51 } 
	tGtkAssi°™tPageTy≥
;

53 
_GtkAssi°™t
 
	tGtkAssi°™t
;

54 
_GtkAssi°™tPriv©e
 
	tGtkAssi°™tPriv©e
;

55 
_GtkAssi°™tCœss
 
	tGtkAssi°™tCœss
;

57 
	s_GtkAssi°™t


59 
GtkWödow
 
	m∑ª¡
;

61 
GtkWidgë
 *
GSEAL
 (
ˇn˚l
);

62 
GtkWidgë
 *
GSEAL
 (
f‹w¨d
);

63 
GtkWidgë
 *
GSEAL
 (
back
);

64 
GtkWidgë
 *
GSEAL
 (
≠∂y
);

65 
GtkWidgë
 *
GSEAL
 (
˛o£
);

66 
GtkWidgë
 *
GSEAL
 (
œ°
);

69 
GtkAssi°™tPriv©e
 *
GSEAL
 (
¥iv
);

72 
	s_GtkAssi°™tCœss


74 
GtkWödowCœss
 
	m∑ª¡_˛ass
;

76 (* 
	m¥ï¨e
Ë(
GtkAssi°™t
 *
	massi°™t
, 
GtkWidgë
 *
	m∑ge
);

77 (* 
	m≠∂y
Ë(
GtkAssi°™t
 *
	massi°™t
);

78 (* 
	m˛o£
Ë(
GtkAssi°™t
 *
	massi°™t
);

79 (* 
	mˇn˚l
Ë(
GtkAssi°™t
 *
	massi°™t
);

82 (*
	m_gtk_ª£rved1
) ();

83 (*
	m_gtk_ª£rved2
) ();

84 (*
	m_gtk_ª£rved3
) ();

85 (*
	m_gtk_ª£rved4
) ();

86 (*
	m_gtk_ª£rved5
) ();

89 
	$göt
 (*
	tGtkAssi°™tPageFunc
Ë(
	tgöt
 
	tcuºít_∑ge
, 
	tgpoöãr
 
	td©a
);

91 
GTy≥
 
	$gtk_assi°™t_gë_ty≥
 (Ë
G_GNUC_CONST
;

92 
GtkWidgë
 *
	`gtk_assi°™t_√w
 ();

93 
göt
 
	`gtk_assi°™t_gë_cuºít_∑ge
 (
GtkAssi°™t
 *
assi°™t
);

94 
	`gtk_assi°™t_£t_cuºít_∑ge
 (
GtkAssi°™t
 *
assi°™t
,

95 
göt
 
∑ge_num
);

96 
göt
 
	`gtk_assi°™t_gë_n_∑ges
 (
GtkAssi°™t
 *
assi°™t
);

97 
GtkWidgë
 *
	`gtk_assi°™t_gë_¡h_∑ge
 (
GtkAssi°™t
 *
assi°™t
,

98 
göt
 
∑ge_num
);

99 
göt
 
	`gtk_assi°™t_¥ïíd_∑ge
 (
GtkAssi°™t
 *
assi°™t
,

100 
GtkWidgë
 *
∑ge
);

101 
göt
 
	`gtk_assi°™t_≠≥nd_∑ge
 (
GtkAssi°™t
 *
assi°™t
,

102 
GtkWidgë
 *
∑ge
);

103 
göt
 
	`gtk_assi°™t_ö£π_∑ge
 (
GtkAssi°™t
 *
assi°™t
,

104 
GtkWidgë
 *
∑ge
,

105 
göt
 
posôi⁄
);

106 
	`gtk_assi°™t_£t_f‹w¨d_∑ge_func
 (
GtkAssi°™t
 *
assi°™t
,

107 
GtkAssi°™tPageFunc
 
∑ge_func
,

108 
gpoöãr
 
d©a
,

109 
GDe°royNŸify
 
de°roy
);

110 
	`gtk_assi°™t_£t_∑ge_ty≥
 (
GtkAssi°™t
 *
assi°™t
,

111 
GtkWidgë
 *
∑ge
,

112 
GtkAssi°™tPageTy≥
 
ty≥
);

113 
GtkAssi°™tPageTy≥
 
	`gtk_assi°™t_gë_∑ge_ty≥
 (
GtkAssi°™t
 *
assi°™t
,

114 
GtkWidgë
 *
∑ge
);

115 
	`gtk_assi°™t_£t_∑ge_tôÀ
 (
GtkAssi°™t
 *
assi°™t
,

116 
GtkWidgë
 *
∑ge
,

117 c⁄° 
gch¨
 *
tôÀ
);

118 
G_CONST_RETURN
 
gch¨
 *
	`gtk_assi°™t_gë_∑ge_tôÀ
 (
GtkAssi°™t
 *
assi°™t
,

119 
GtkWidgë
 *
∑ge
);

120 
	`gtk_assi°™t_£t_∑ge_hódî_image
 (
GtkAssi°™t
 *
assi°™t
,

121 
GtkWidgë
 *
∑ge
,

122 
GdkPixbuf
 *
pixbuf
);

123 
GdkPixbuf
 *
	`gtk_assi°™t_gë_∑ge_hódî_image
 (
GtkAssi°™t
 *
assi°™t
,

124 
GtkWidgë
 *
∑ge
);

125 
	`gtk_assi°™t_£t_∑ge_side_image
 (
GtkAssi°™t
 *
assi°™t
,

126 
GtkWidgë
 *
∑ge
,

127 
GdkPixbuf
 *
pixbuf
);

128 
GdkPixbuf
 *
	`gtk_assi°™t_gë_∑ge_side_image
 (
GtkAssi°™t
 *
assi°™t
,

129 
GtkWidgë
 *
∑ge
);

130 
	`gtk_assi°™t_£t_∑ge_com∂ëe
 (
GtkAssi°™t
 *
assi°™t
,

131 
GtkWidgë
 *
∑ge
,

132 
gboﬁón
 
com∂ëe
);

133 
gboﬁón
 
	`gtk_assi°™t_gë_∑ge_com∂ëe
 (
GtkAssi°™t
 *
assi°™t
,

134 
GtkWidgë
 *
∑ge
);

135 
	`gtk_assi°™t_add_a˘i⁄_widgë
 (
GtkAssi°™t
 *
assi°™t
,

136 
GtkWidgë
 *
chûd
);

137 
	`gtk_assi°™t_ªmove_a˘i⁄_widgë
 (
GtkAssi°™t
 *
assi°™t
,

138 
GtkWidgë
 *
chûd
);

140 
	`gtk_assi°™t_upd©e_buâ⁄s_°©e
 (
GtkAssi°™t
 *
assi°™t
);

142 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_BUTTON_BOX_H__


32 
	#__GTK_BUTTON_BOX_H__


	)

34 
	~<gtk/gtkbox.h
>

37 
	gG_BEGIN_DECLS


39 
	#GTK_TYPE_BUTTON_BOX
 (
	`gtk_buâ⁄_box_gë_ty≥
 ())

	)

40 
	#GTK_BUTTON_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_BUTTON_BOX
, 
GtkBuâ⁄Box
))

	)

41 
	#GTK_BUTTON_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_BUTTON_BOX
, 
GtkBuâ⁄BoxCœss
))

	)

42 
	#GTK_IS_BUTTON_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_BUTTON_BOX
))

	)

43 
	#GTK_IS_BUTTON_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_BUTTON_BOX
))

	)

44 
	#GTK_BUTTON_BOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_BUTTON_BOX
, 
GtkBuâ⁄BoxCœss
))

	)

47 
	#GTK_BUTTONBOX_DEFAULT
 -1

	)

49 
_GtkBuâ⁄Box
 
	tGtkBuâ⁄Box
;

50 
_GtkBuâ⁄BoxCœss
 
	tGtkBuâ⁄BoxCœss
;

52 
	s_GtkBuâ⁄Box


54 
GtkBox
 
	mbox
;

55 
göt
 
GSEAL
 (
chûd_mö_width
);

56 
göt
 
GSEAL
 (
chûd_mö_height
);

57 
göt
 
GSEAL
 (
chûd_ùad_x
);

58 
göt
 
GSEAL
 (
chûd_ùad_y
);

59 
GtkBuâ⁄BoxStyÀ
 
GSEAL
 (
œyout_°yÀ
);

62 
	s_GtkBuâ⁄BoxCœss


64 
GtkBoxCœss
 
	m∑ª¡_˛ass
;

68 
GTy≥
 
	$gtk_buâ⁄_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkBuâ⁄BoxStyÀ
 
	`gtk_buâ⁄_box_gë_œyout
 (
GtkBuâ⁄Box
 *
widgë
);

71 
	`gtk_buâ⁄_box_£t_œyout
 (
GtkBuâ⁄Box
 *
widgë
,

72 
GtkBuâ⁄BoxStyÀ
 
œyout_°yÀ
);

73 
gboﬁón
 
	`gtk_buâ⁄_box_gë_chûd_£c⁄d¨y
 (
GtkBuâ⁄Box
 *
widgë
,

74 
GtkWidgë
 *
chûd
);

75 
	`gtk_buâ⁄_box_£t_chûd_£c⁄d¨y
 (
GtkBuâ⁄Box
 *
widgë
,

76 
GtkWidgë
 *
chûd
,

77 
gboﬁón
 
is_£c⁄d¨y
);

79 #i‚de‡
GTK_DISABLE_DEPRECATED


80 
	#gtk_buâ⁄_box_£t_•acög
(
b
,
s
Ë
	`gtk_box_£t_•acög
 (
	`GTK_BOX
 (b), s)

	)

81 
	#gtk_buâ⁄_box_gë_•acög
(
b
Ë
	`gtk_box_gë_•acög
 (
	`GTK_BOX
 (b))

	)

83 
	`gtk_buâ⁄_box_£t_chûd_size
 (
GtkBuâ⁄Box
 *
widgë
,

84 
göt
 
mö_width
,

85 
göt
 
mö_height
);

86 
	`gtk_buâ⁄_box_£t_chûd_ùaddög
 (
GtkBuâ⁄Box
 *
widgë
,

87 
göt
 
ùad_x
,

88 
göt
 
ùad_y
);

89 
	`gtk_buâ⁄_box_gë_chûd_size
 (
GtkBuâ⁄Box
 *
widgë
,

90 
göt
 *
mö_width
,

91 
göt
 *
mö_height
);

92 
	`gtk_buâ⁄_box_gë_chûd_ùaddög
 (
GtkBuâ⁄Box
 *
widgë
,

93 
göt
 *
ùad_x
,

94 
göt
 *
ùad_y
);

98 
	`_gtk_buâ⁄_box_chûd_ªquisôi⁄
 (
GtkWidgë
 *
widgë
,

99 *
nvis_chûdªn
,

100 *
nvis_£c⁄d¨õs
,

101 *
width
,

102 *
height
);

103 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbin.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_BIN_H__


32 
	#__GTK_BIN_H__


	)

35 
	~<gtk/gtkc⁄èöî.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_BIN
 (
	`gtk_bö_gë_ty≥
 ())

	)

41 
	#GTK_BIN
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_BIN
, 
GtkBö
))

	)

42 
	#GTK_BIN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_BIN
, 
GtkBöCœss
))

	)

43 
	#GTK_IS_BIN
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_BIN
))

	)

44 
	#GTK_IS_BIN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_BIN
))

	)

45 
	#GTK_BIN_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_BIN
, 
GtkBöCœss
))

	)

48 
_GtkBö
 
	tGtkBö
;

49 
_GtkBöCœss
 
	tGtkBöCœss
;

51 
	s_GtkBö


53 
GtkC⁄èöî
 
	mc⁄èöî
;

55 
GtkWidgë
 *
GSEAL
 (
chûd
);

58 
	s_GtkBöCœss


60 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

64 
GTy≥
 
	$gtk_bö_gë_ty≥
 (Ë
G_GNUC_CONST
;

66 
GtkWidgë
 *
	`gtk_bö_gë_chûd
 (
GtkBö
 *
bö
);

68 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbindings.h

30 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

34 #i‚de‡
__GTK_BINDINGS_H__


35 
	#__GTK_BINDINGS_H__


	)

38 
	~<gdk/gdk.h
>

39 
	~<gtk/gtkobje˘.h
>

42 
G_BEGIN_DECLS


48 
_GtkBödögSë
 
	tGtkBödögSë
;

49 
_GtkBödögE¡ry
 
	tGtkBödögE¡ry
;

50 
_GtkBödögSig«l
 
	tGtkBödögSig«l
;

51 
_GtkBödögArg
 
	tGtkBödögArg
;

53 
	s_GtkBödögSë


55 
gch¨
 *
	m£t_«me
;

56 
göt
 
	m¥i‹ôy
;

57 
GSLi°
 *
	mwidgë_∑th_p•ecs
;

58 
GSLi°
 *
	mwidgë_˛ass_p•ecs
;

59 
GSLi°
 *
	m˛ass_bønch_p•ecs
;

60 
GtkBödögE¡ry
 *
	míåõs
;

61 
GtkBödögE¡ry
 *
	mcuºít
;

62 
guöt
 
	m∑r£d
 : 1;

65 
	s_GtkBödögE¡ry


69 
guöt
 
	mkeyvÆ
;

70 
GdkModifõrTy≥
 
	mmodifõrs
;

72 
GtkBödögSë
 *
	mbödög_£t
;

73 
guöt
 
	mde°royed
 : 1;

74 
guöt
 
	mö_emissi⁄
 : 1;

75 
guöt
 
	mm¨ks_unbound
 : 1;

76 
GtkBödögE¡ry
 *
	m£t_√xt
;

77 
GtkBödögE¡ry
 *
	mhash_√xt
;

78 
GtkBödögSig«l
 *
	msig«ls
;

81 
	s_GtkBödögArg


83 
GTy≥
 
	m¨g_ty≥
;

85 
gl⁄g
 
	ml⁄g_d©a
;

86 
gdoubÀ
 
	mdoubÀ_d©a
;

87 
gch¨
 *
	m°rög_d©a
;

88 } 
	md
;

91 
	s_GtkBödögSig«l


93 
GtkBödögSig«l
 *
	m√xt
;

94 
gch¨
 *
	msig«l_«me
;

95 
guöt
 
	mn_¨gs
;

96 
GtkBödögArg
 *
	m¨gs
;

101 
GtkBödögSë
* 
gtk_bödög_£t_√w
 (c⁄° 
gch¨
 *
£t_«me
);

102 
GtkBödögSë
* 
gtk_bödög_£t_by_˛ass
(
gpoöãr
 
obje˘_˛ass
);

103 
GtkBödögSë
* 
gtk_bödög_£t_föd
 (c⁄° 
gch¨
 *
£t_«me
);

104 
gboﬁón
 
gtk_bödögs_a˘iv©e
 (
GtkObje˘
 *
obje˘
,

105 
guöt
 
keyvÆ
,

106 
GdkModifõrTy≥
 
modifõrs
);

107 
gboﬁón
 
gtk_bödögs_a˘iv©e_evít
 (
GtkObje˘
 *
obje˘
,

108 
GdkEvítKey
 *
evít
);

109 
gboﬁón
 
gtk_bödög_£t_a˘iv©e
 (
GtkBödögSë
 *
bödög_£t
,

110 
guöt
 
keyvÆ
,

111 
GdkModifõrTy≥
 
modifõrs
,

112 
GtkObje˘
 *
obje˘
);

114 #i‚de‡
GTK_DISABLE_DEPRECATED


115 
	#gtk_bödög_íåy_add
 
gtk_bödög_íåy_˛ór


	)

116 
gtk_bödög_íåy_˛ór
 (
GtkBödögSë
 *
bödög_£t
,

117 
guöt
 
keyvÆ
,

118 
GdkModifõrTy≥
 
modifõrs
);

119 
guöt
 
gtk_bödög_∑r£_bödög
 (
GSˇ¬î
 *
sˇ¬î
);

122 
gtk_bödög_íåy_skù
 (
GtkBödögSë
 *
bödög_£t
,

123 
guöt
 
keyvÆ
,

124 
GdkModifõrTy≥
 
modifõrs
);

125 
gtk_bödög_íåy_add_sig«l
 (
GtkBödögSë
 *
bödög_£t
,

126 
guöt
 
keyvÆ
,

127 
GdkModifõrTy≥
 
modifõrs
,

128 c⁄° 
gch¨
 *
sig«l_«me
,

129 
guöt
 
n_¨gs
,

131 
gtk_bödög_íåy_add_sig«Œ
 (
GtkBödögSë
 *
bödög_£t
,

132 
guöt
 
keyvÆ
,

133 
GdkModifõrTy≥
 
modifõrs
,

134 c⁄° 
gch¨
 *
sig«l_«me
,

135 
GSLi°
 *
bödög_¨gs
);

136 
gtk_bödög_íåy_ªmove
 (
GtkBödögSë
 *
bödög_£t
,

137 
guöt
 
keyvÆ
,

138 
GdkModifõrTy≥
 
modifõrs
);

140 
gtk_bödög_£t_add_∑th
 (
GtkBödögSë
 *
bödög_£t
,

141 
GtkP©hTy≥
 
∑th_ty≥
,

142 c⁄° 
gch¨
 *
∑th_∑âîn
,

143 
GtkP©hPri‹ôyTy≥
 
¥i‹ôy
);

148 
guöt
 
_gtk_bödög_∑r£_bödög
 (
GSˇ¬î
 *
sˇ¬î
);

149 
_gtk_bödög_ª£t_∑r£d
 ();

150 
_gtk_bödög_íåy_add_sig«Œ
 (
GtkBödögSë
 *
bödög_£t
,

151 
guöt
 
keyvÆ
,

152 
GdkModifõrTy≥
 
modifõrs
,

153 c⁄° 
gch¨
 *
sig«l_«me
,

154 
GSLi°
 *
bödög_¨gs
);

156 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_BOX_H__


32 
	#__GTK_BOX_H__


	)

35 
	~<gtk/gtkc⁄èöî.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_BOX
 (
	`gtk_box_gë_ty≥
 ())

	)

42 
	#GTK_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_BOX
, 
GtkBox
))

	)

43 
	#GTK_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_BOX
, 
GtkBoxCœss
))

	)

44 
	#GTK_IS_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_BOX
))

	)

45 
	#GTK_IS_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_BOX
))

	)

46 
	#GTK_BOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_BOX
, 
GtkBoxCœss
))

	)

49 
_GtkBox
 
	tGtkBox
;

50 
_GtkBoxCœss
 
	tGtkBoxCœss
;

51 
_GtkBoxChûd
 
	tGtkBoxChûd
;

53 
	s_GtkBox


55 
GtkC⁄èöî
 
	mc⁄èöî
;

58 
GLi°
 *
GSEAL
 (
chûdªn
);

59 
göt16
 
GSEAL
 (
•acög
);

60 
guöt
 
GSEAL
 (
homogíeous
) : 1;

63 
	s_GtkBoxCœss


65 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

68 
	s_GtkBoxChûd


70 
GtkWidgë
 *
	mwidgë
;

71 
guöt16
 
	m∑ddög
;

72 
guöt
 
	mex∑nd
 : 1;

73 
guöt
 
	mfûl
 : 1;

74 
guöt
 
	m∑ck
 : 1;

75 
guöt
 
	mis_£c⁄d¨y
 : 1;

79 
GTy≥
 
	$gtk_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

80 
GtkWidgë
* 
	`_gtk_box_√w
 (
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
,

81 
gboﬁón
 
homogíeous
,

82 
göt
 
•acög
);

84 
	`gtk_box_∑ck_°¨t
 (
GtkBox
 *
box
,

85 
GtkWidgë
 *
chûd
,

86 
gboﬁón
 
ex∑nd
,

87 
gboﬁón
 
fûl
,

88 
guöt
 
∑ddög
);

89 
	`gtk_box_∑ck_íd
 (
GtkBox
 *
box
,

90 
GtkWidgë
 *
chûd
,

91 
gboﬁón
 
ex∑nd
,

92 
gboﬁón
 
fûl
,

93 
guöt
 
∑ddög
);

95 #i‚de‡
GTK_DISABLE_DEPRECATED


96 
	`gtk_box_∑ck_°¨t_deÁu…s
 (
GtkBox
 *
box
,

97 
GtkWidgë
 *
widgë
);

98 
	`gtk_box_∑ck_íd_deÁu…s
 (
GtkBox
 *
box
,

99 
GtkWidgë
 *
widgë
);

102 
	`gtk_box_£t_homogíeous
 (
GtkBox
 *
box
,

103 
gboﬁón
 
homogíeous
);

104 
gboﬁón
 
	`gtk_box_gë_homogíeous
 (
GtkBox
 *
box
);

105 
	`gtk_box_£t_•acög
 (
GtkBox
 *
box
,

106 
göt
 
•acög
);

107 
göt
 
	`gtk_box_gë_•acög
 (
GtkBox
 *
box
);

109 
	`gtk_box_ª‹dî_chûd
 (
GtkBox
 *
box
,

110 
GtkWidgë
 *
chûd
,

111 
göt
 
posôi⁄
);

113 
	`gtk_box_quîy_chûd_∑ckög
 (
GtkBox
 *
box
,

114 
GtkWidgë
 *
chûd
,

115 
gboﬁón
 *
ex∑nd
,

116 
gboﬁón
 *
fûl
,

117 
guöt
 *
∑ddög
,

118 
GtkPackTy≥
 *
∑ck_ty≥
);

119 
	`gtk_box_£t_chûd_∑ckög
 (
GtkBox
 *
box
,

120 
GtkWidgë
 *
chûd
,

121 
gboﬁón
 
ex∑nd
,

122 
gboﬁón
 
fûl
,

123 
guöt
 
∑ddög
,

124 
GtkPackTy≥
 
∑ck_ty≥
);

127 
	`_gtk_box_£t_ﬁd_deÁu…s
 (
GtkBox
 *
box
);

128 
gboﬁón
 
	`_gtk_box_gë_•acög_£t
 (
GtkBox
 *
box
);

129 
	`_gtk_box_£t_•acög_£t
 (
GtkBox
 *
box
,

130 
gboﬁón
 
•acög_£t
);

132 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbuildable.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_BUILDABLE_H__


26 
	#__GTK_BUILDABLE_H__


	)

28 
	~<gtk/gtkbuûdî.h
>

29 
	~<gtk/gtkty≥utûs.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_BUILDABLE
 (
	`gtk_buûdabÀ_gë_ty≥
 ())

	)

34 
	#GTK_BUILDABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_BUILDABLE
, 
GtkBuûdabÀ
))

	)

35 
	#GTK_BUILDABLE_CLASS
(
obj
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((obj), 
GTK_TYPE_BUILDABLE
, 
GtkBuûdabÀIÁ˚
))

	)

36 
	#GTK_IS_BUILDABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_BUILDABLE
))

	)

37 
	#GTK_BUILDABLE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_BUILDABLE
, 
GtkBuûdabÀIÁ˚
))

	)

40 
_GtkBuûdabÀ
 
	tGtkBuûdabÀ
;

41 
_GtkBuûdabÀIÁ˚
 
	tGtkBuûdabÀIÁ˚
;

43 
	s_GtkBuûdabÀIÁ˚


45 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

48 (* 
	m£t_«me
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

49 c⁄° 
gch¨
 *
	m«me
);

50 c⁄° 
	mgch¨
 * (* 
	mgë_«me
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
);

51 (* 
	madd_chûd
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

52 
GtkBuûdî
 *
	mbuûdî
,

53 
GObje˘
 *
	mchûd
,

54 c⁄° 
gch¨
 *
	mty≥
);

55 (* 
	m£t_buûdabÀ_¥›îty
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

56 
GtkBuûdî
 *
	mbuûdî
,

57 c⁄° 
gch¨
 *
	m«me
,

58 c⁄° 
GVÆue
 *
	mvÆue
);

59 
	mGObje˘
 * (* 
	mc⁄°ru˘_chûd
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

60 
GtkBuûdî
 *
	mbuûdî
,

61 c⁄° 
gch¨
 *
	m«me
);

62 
gboﬁón
 (* 
cu°om_èg_°¨t
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

63 
GtkBuûdî
 *
	mbuûdî
,

64 
GObje˘
 *
	mchûd
,

65 c⁄° 
gch¨
 *
	mèg«me
,

66 
GM¨kupP¨£r
 *
	m∑r£r
,

67 
gpoöãr
 *
	md©a
);

68 (* 
	mcu°om_èg_íd
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

69 
GtkBuûdî
 *
	mbuûdî
,

70 
GObje˘
 *
	mchûd
,

71 c⁄° 
gch¨
 *
	mèg«me
,

72 
gpoöãr
 *
	md©a
);

73 (* 
	mcu°om_föished
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

74 
GtkBuûdî
 *
	mbuûdî
,

75 
GObje˘
 *
	mchûd
,

76 c⁄° 
gch¨
 *
	mèg«me
,

77 
gpoöãr
 
	md©a
);

78 (* 
	m∑r£r_föished
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

79 
GtkBuûdî
 *
	mbuûdî
);

81 
	mGObje˘
 * (* 
	mgë_öã∫Æ_chûd
Ë(
GtkBuûdabÀ
 *
	mbuûdabÀ
,

82 
GtkBuûdî
 *
	mbuûdî
,

83 c⁄° 
gch¨
 *
	mchûd«me
);

87 
GTy≥
 
	$gtk_buûdabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
	`gtk_buûdabÀ_£t_«me
 (
GtkBuûdabÀ
 *
buûdabÀ
,

90 c⁄° 
gch¨
 *
«me
);

91 c⁄° 
gch¨
 * 
	`gtk_buûdabÀ_gë_«me
 (
GtkBuûdabÀ
 *
buûdabÀ
);

92 
	`gtk_buûdabÀ_add_chûd
 (
GtkBuûdabÀ
 *
buûdabÀ
,

93 
GtkBuûdî
 *
buûdî
,

94 
GObje˘
 *
chûd
,

95 c⁄° 
gch¨
 *
ty≥
);

96 
	`gtk_buûdabÀ_£t_buûdabÀ_¥›îty
 (
GtkBuûdabÀ
 *
buûdabÀ
,

97 
GtkBuûdî
 *
buûdî
,

98 c⁄° 
gch¨
 *
«me
,

99 c⁄° 
GVÆue
 *
vÆue
);

100 
GObje˘
 * 
	`gtk_buûdabÀ_c⁄°ru˘_chûd
 (
GtkBuûdabÀ
 *
buûdabÀ
,

101 
GtkBuûdî
 *
buûdî
,

102 c⁄° 
gch¨
 *
«me
);

103 
gboﬁón
 
	`gtk_buûdabÀ_cu°om_èg_°¨t
 (
GtkBuûdabÀ
 *
buûdabÀ
,

104 
GtkBuûdî
 *
buûdî
,

105 
GObje˘
 *
chûd
,

106 c⁄° 
gch¨
 *
èg«me
,

107 
GM¨kupP¨£r
 *
∑r£r
,

108 
gpoöãr
 *
d©a
);

109 
	`gtk_buûdabÀ_cu°om_èg_íd
 (
GtkBuûdabÀ
 *
buûdabÀ
,

110 
GtkBuûdî
 *
buûdî
,

111 
GObje˘
 *
chûd
,

112 c⁄° 
gch¨
 *
èg«me
,

113 
gpoöãr
 *
d©a
);

114 
	`gtk_buûdabÀ_cu°om_föished
 (
GtkBuûdabÀ
 *
buûdabÀ
,

115 
GtkBuûdî
 *
buûdî
,

116 
GObje˘
 *
chûd
,

117 c⁄° 
gch¨
 *
èg«me
,

118 
gpoöãr
 
d©a
);

119 
	`gtk_buûdabÀ_∑r£r_föished
 (
GtkBuûdabÀ
 *
buûdabÀ
,

120 
GtkBuûdî
 *
buûdî
);

121 
GObje˘
 * 
	`gtk_buûdabÀ_gë_öã∫Æ_chûd
 (
GtkBuûdabÀ
 *
buûdabÀ
,

122 
GtkBuûdî
 *
buûdî
,

123 c⁄° 
gch¨
 *
chûd«me
);

125 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbuilder.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_BUILDER_H__


26 
	#__GTK_BUILDER_H__


	)

28 
	~<gdkc⁄fig.h
>

29 
	~<glib-obje˘.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_BUILDER
 (
	`gtk_buûdî_gë_ty≥
 ())

	)

34 
	#GTK_BUILDER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_BUILDER
, 
GtkBuûdî
))

	)

35 
	#GTK_BUILDER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_BUILDER
, 
GtkBuûdîCœss
))

	)

36 
	#GTK_IS_BUILDER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_BUILDER
))

	)

37 
	#GTK_IS_BUILDER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_BUILDER
))

	)

38 
	#GTK_BUILDER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_BUILDER
, 
GtkBuûdîCœss
))

	)

40 
	#GTK_BUILDER_ERROR
 (
	`gtk_buûdî_îr‹_qu¨k
 ())

	)

42 
_GtkBuûdî
 
	tGtkBuûdî
;

43 
_GtkBuûdîCœss
 
	tGtkBuûdîCœss
;

44 
_GtkBuûdîPriv©e
 
	tGtkBuûdîPriv©e
;

48 
	mGTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION
,

49 
	mGTK_BUILDER_ERROR_UNHANDLED_TAG
,

50 
	mGTK_BUILDER_ERROR_MISSING_ATTRIBUTE
,

51 
	mGTK_BUILDER_ERROR_INVALID_ATTRIBUTE
,

52 
	mGTK_BUILDER_ERROR_INVALID_TAG
,

53 
	mGTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE
,

54 
	mGTK_BUILDER_ERROR_INVALID_VALUE
,

55 
	mGTK_BUILDER_ERROR_VERSION_MISMATCH
,

56 
	mGTK_BUILDER_ERROR_DUPLICATE_ID


57 } 
	tGtkBuûdîEº‹
;

59 
GQu¨k
 
gtk_buûdî_îr‹_qu¨k
 ();

61 
	s_GtkBuûdî


63 
GObje˘
 
	m∑ª¡_ö°™˚
;

65 
GtkBuûdîPriv©e
 *
GSEAL
 (
¥iv
);

68 
	s_GtkBuûdîCœss


70 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

72 
GTy≥
 (* 
gë_ty≥_‰om_«me
Ë(
GtkBuûdî
 *
	mbuûdî
,

73 c⁄° *
	mty≥_«me
);

76 (*
	m_gtk_ª£rved1
) ();

77 (*
	m_gtk_ª£rved2
) ();

78 (*
	m_gtk_ª£rved3
) ();

79 (*
	m_gtk_ª£rved4
) ();

80 (*
	m_gtk_ª£rved5
) ();

81 (*
	m_gtk_ª£rved6
) ();

82 (*
	m_gtk_ª£rved7
) ();

83 (*
	m_gtk_ª£rved8
) ();

86 (*
	tGtkBuûdîC⁄√˘Func
Ë(
	tGtkBuûdî
 *
	tbuûdî
,

87 
	tGObje˘
 *
	tobje˘
,

88 c⁄° 
	tgch¨
 *
	tsig«l_«me
,

89 c⁄° 
	tgch¨
 *
	th™dÀr_«me
,

90 
	tGObje˘
 *
	tc⁄√˘_obje˘
,

91 
	tGC⁄√˘Fœgs
 
	tÊags
,

92 
	tgpoöãr
 
	tu£r_d©a
);

94 
GTy≥
 
	$gtk_buûdî_gë_ty≥
 (Ë
G_GNUC_CONST
;

95 
GtkBuûdî
* 
	`gtk_buûdî_√w
 ();

97 
guöt
 
	`gtk_buûdî_add_‰om_fûe
 (
GtkBuûdî
 *
buûdî
,

98 c⁄° 
gch¨
 *
fûíame
,

99 
GEº‹
 **
îr‹
);

100 
guöt
 
	`gtk_buûdî_add_‰om_°rög
 (
GtkBuûdî
 *
buûdî
,

101 c⁄° 
gch¨
 *
buf„r
,

102 
gsize
 
Àngth
,

103 
GEº‹
 **
îr‹
);

104 
guöt
 
	`gtk_buûdî_add_obje˘s_‰om_fûe
 (
GtkBuûdî
 *
buûdî
,

105 c⁄° 
gch¨
 *
fûíame
,

106 
gch¨
 **
obje˘_ids
,

107 
GEº‹
 **
îr‹
);

108 
guöt
 
	`gtk_buûdî_add_obje˘s_‰om_°rög
 (
GtkBuûdî
 *
buûdî
,

109 c⁄° 
gch¨
 *
buf„r
,

110 
gsize
 
Àngth
,

111 
gch¨
 **
obje˘_ids
,

112 
GEº‹
 **
îr‹
);

113 
GObje˘
* 
	`gtk_buûdî_gë_obje˘
 (
GtkBuûdî
 *
buûdî
,

114 c⁄° 
gch¨
 *
«me
);

115 
GSLi°
* 
	`gtk_buûdî_gë_obje˘s
 (
GtkBuûdî
 *
buûdî
);

116 
	`gtk_buûdî_c⁄√˘_sig«ls
 (
GtkBuûdî
 *
buûdî
,

117 
gpoöãr
 
u£r_d©a
);

118 
	`gtk_buûdî_c⁄√˘_sig«ls_fuŒ
 (
GtkBuûdî
 *
buûdî
,

119 
GtkBuûdîC⁄√˘Func
 
func
,

120 
gpoöãr
 
u£r_d©a
);

121 
	`gtk_buûdî_£t_å™¶©i⁄_domaö
 (
GtkBuûdî
 *
buûdî
,

122 c⁄° 
gch¨
 *
domaö
);

123 c⁄° 
gch¨
* 
	`gtk_buûdî_gë_å™¶©i⁄_domaö
 (
GtkBuûdî
 *
buûdî
);

124 
GTy≥
 
	`gtk_buûdî_gë_ty≥_‰om_«me
 (
GtkBuûdî
 *
buûdî
,

125 c⁄° *
ty≥_«me
);

127 
gboﬁón
 
	`gtk_buûdî_vÆue_‰om_°rög
 (
GtkBuûdî
 *
buûdî
,

128 
GP¨amS≥c
 *
p•ec
,

129 c⁄° 
gch¨
 *
°rög
,

130 
GVÆue
 *
vÆue
,

131 
GEº‹
 **
îr‹
);

132 
gboﬁón
 
	`gtk_buûdî_vÆue_‰om_°rög_ty≥
 (
GtkBuûdî
 *
buûdî
,

133 
GTy≥
 
ty≥
,

134 c⁄° 
gch¨
 *
°rög
,

135 
GVÆue
 *
vÆue
,

136 
GEº‹
 **
îr‹
);

138 
	#GTK_BUILDER_WARN_INVALID_CHILD_TYPE
(
obje˘
, 
ty≥
) \

139 
	`g_w¨nög
 ("'%s' i†nŸá vÆid chûdÅy≥ o‡'%s'", 
ty≥
, 
	`g_ty≥_«me
 (
	`G_OBJECT_TYPE
 (
obje˘
)))

	)

141 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkbutton.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_BUTTON_H__


32 
	#__GTK_BUTTON_H__


	)

35 
	~<gtk/gtkbö.h
>

36 
	~<gtk/gtkimage.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_BUTTON
 (
	`gtk_buâ⁄_gë_ty≥
 ())

	)

42 
	#GTK_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_BUTTON
, 
GtkBuâ⁄
))

	)

43 
	#GTK_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_BUTTON
, 
GtkBuâ⁄Cœss
))

	)

44 
	#GTK_IS_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_BUTTON
))

	)

45 
	#GTK_IS_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_BUTTON
))

	)

46 
	#GTK_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_BUTTON
, 
GtkBuâ⁄Cœss
))

	)

48 
_GtkBuâ⁄
 
	tGtkBuâ⁄
;

49 
_GtkBuâ⁄Cœss
 
	tGtkBuâ⁄Cœss
;

51 
	s_GtkBuâ⁄


53 
GtkBö
 
	mbö
;

55 
GdkWödow
 *
GSEAL
 (
evít_wödow
);

57 
gch¨
 *
GSEAL
 (
œbñ_ãxt
);

59 
guöt
 
GSEAL
 (
a˘iv©e_timeout
);

61 
guöt
 
GSEAL
 (
c⁄°ru˘ed
) : 1;

62 
guöt
 
GSEAL
 (
ö_buâ⁄
) : 1;

63 
guöt
 
GSEAL
 (
buâ⁄_down
) : 1;

64 
guöt
 
GSEAL
 (
ªlõf
) : 2;

65 
guöt
 
GSEAL
 (
u£_undîlöe
) : 1;

66 
guöt
 
GSEAL
 (
u£_°ock
) : 1;

67 
guöt
 
GSEAL
 (
dïªs£d
) : 1;

68 
guöt
 
GSEAL
 (
dïªss_⁄_a˘iv©e
) : 1;

69 
guöt
 
GSEAL
 (
focus_⁄_˛ick
) : 1;

72 
	s_GtkBuâ⁄Cœss


74 
GtkBöCœss
 
	m∑ª¡_˛ass
;

76 (* 
	m¥es£d
Ë(
GtkBuâ⁄
 *
	mbuâ⁄
);

77 (* 
	mªÀa£d
Ë(
GtkBuâ⁄
 *
	mbuâ⁄
);

78 (* 
	m˛icked
Ë(
GtkBuâ⁄
 *
	mbuâ⁄
);

79 (* 
	míãr
Ë(
GtkBuâ⁄
 *
	mbuâ⁄
);

80 (* 
	mÀave
Ë(
GtkBuâ⁄
 *
	mbuâ⁄
);

81 (* 
	ma˘iv©e
Ë(
GtkBuâ⁄
 *
	mbuâ⁄
);

84 (*
	m_gtk_ª£rved1
) ();

85 (*
	m_gtk_ª£rved2
) ();

86 (*
	m_gtk_ª£rved3
) ();

87 (*
	m_gtk_ª£rved4
) ();

91 
GTy≥
 
	$gtk_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

92 
GtkWidgë
* 
	`gtk_buâ⁄_√w
 ();

93 
GtkWidgë
* 
	`gtk_buâ⁄_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

94 
GtkWidgë
* 
	`gtk_buâ⁄_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
);

95 
GtkWidgë
* 
	`gtk_buâ⁄_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

96 
	`gtk_buâ⁄_¥es£d
 (
GtkBuâ⁄
 *
buâ⁄
);

97 
	`gtk_buâ⁄_ªÀa£d
 (
GtkBuâ⁄
 *
buâ⁄
);

98 
	`gtk_buâ⁄_˛icked
 (
GtkBuâ⁄
 *
buâ⁄
);

99 
	`gtk_buâ⁄_íãr
 (
GtkBuâ⁄
 *
buâ⁄
);

100 
	`gtk_buâ⁄_Àave
 (
GtkBuâ⁄
 *
buâ⁄
);

102 
	`gtk_buâ⁄_£t_ªlõf
 (
GtkBuâ⁄
 *
buâ⁄
,

103 
GtkRñõfStyÀ
 
√w°yÀ
);

104 
GtkRñõfStyÀ
 
	`gtk_buâ⁄_gë_ªlõf
 (
GtkBuâ⁄
 *
buâ⁄
);

105 
	`gtk_buâ⁄_£t_œbñ
 (
GtkBuâ⁄
 *
buâ⁄
,

106 c⁄° 
gch¨
 *
œbñ
);

107 
G_CONST_RETURN
 
gch¨
 *
	`gtk_buâ⁄_gë_œbñ
 (
GtkBuâ⁄
 *
buâ⁄
);

108 
	`gtk_buâ⁄_£t_u£_undîlöe
 (
GtkBuâ⁄
 *
buâ⁄
,

109 
gboﬁón
 
u£_undîlöe
);

110 
gboﬁón
 
	`gtk_buâ⁄_gë_u£_undîlöe
 (
GtkBuâ⁄
 *
buâ⁄
);

111 
	`gtk_buâ⁄_£t_u£_°ock
 (
GtkBuâ⁄
 *
buâ⁄
,

112 
gboﬁón
 
u£_°ock
);

113 
gboﬁón
 
	`gtk_buâ⁄_gë_u£_°ock
 (
GtkBuâ⁄
 *
buâ⁄
);

114 
	`gtk_buâ⁄_£t_focus_⁄_˛ick
 (
GtkBuâ⁄
 *
buâ⁄
,

115 
gboﬁón
 
focus_⁄_˛ick
);

116 
gboﬁón
 
	`gtk_buâ⁄_gë_focus_⁄_˛ick
 (
GtkBuâ⁄
 *
buâ⁄
);

117 
	`gtk_buâ⁄_£t_Æignmít
 (
GtkBuâ⁄
 *
buâ⁄
,

118 
gÊﬂt
 
xÆign
,

119 
gÊﬂt
 
yÆign
);

120 
	`gtk_buâ⁄_gë_Æignmít
 (
GtkBuâ⁄
 *
buâ⁄
,

121 
gÊﬂt
 *
xÆign
,

122 
gÊﬂt
 *
yÆign
);

123 
	`gtk_buâ⁄_£t_image
 (
GtkBuâ⁄
 *
buâ⁄
,

124 
GtkWidgë
 *
image
);

125 
GtkWidgë
* 
	`gtk_buâ⁄_gë_image
 (
GtkBuâ⁄
 *
buâ⁄
);

126 
	`gtk_buâ⁄_£t_image_posôi⁄
 (
GtkBuâ⁄
 *
buâ⁄
,

127 
GtkPosôi⁄Ty≥
 
posôi⁄
);

128 
GtkPosôi⁄Ty≥
 
	`gtk_buâ⁄_gë_image_posôi⁄
 (
GtkBuâ⁄
 *
buâ⁄
);

130 
	`_gtk_buâ⁄_£t_dïªs£d
 (
GtkBuâ⁄
 *
buâ⁄
,

131 
gboﬁón
 
dïªs£d
);

132 
	`_gtk_buâ⁄_∑öt
 (
GtkBuâ⁄
 *
buâ⁄
,

133 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

134 
GtkSèãTy≥
 
°©e_ty≥
,

135 
GtkShadowTy≥
 
shadow_ty≥
,

136 c⁄° 
gch¨
 *
maö_dëaû
,

137 c⁄° 
gch¨
 *
deÁu…_dëaû
);

139 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcalendar.h

29 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

33 #i‚de‡
__GTK_CALENDAR_H__


34 
	#__GTK_CALENDAR_H__


	)

37 
	~<gtk/gtkwidgë.h
>

40 
	~<gtk/gtksig«l.h
>

43 
	gG_BEGIN_DECLS


45 
	#GTK_TYPE_CALENDAR
 (
	`gtk_ˇÀnd¨_gë_ty≥
 ())

	)

46 
	#GTK_CALENDAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CALENDAR
, 
GtkCÆíd¨
))

	)

47 
	#GTK_CALENDAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CALENDAR
, 
GtkCÆíd¨Cœss
))

	)

48 
	#GTK_IS_CALENDAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CALENDAR
))

	)

49 
	#GTK_IS_CALENDAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CALENDAR
))

	)

50 
	#GTK_CALENDAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CALENDAR
, 
GtkCÆíd¨Cœss
))

	)

53 
_GtkCÆíd¨
 
	tGtkCÆíd¨
;

54 
_GtkCÆíd¨Cœss
 
	tGtkCÆíd¨Cœss
;

56 
_GtkCÆíd¨Priv©e
 
	tGtkCÆíd¨Priv©e
;

74 
	mGTK_CALENDAR_SHOW_HEADING
 = 1 << 0,

75 
	mGTK_CALENDAR_SHOW_DAY_NAMES
 = 1 << 1,

76 
	mGTK_CALENDAR_NO_MONTH_CHANGE
 = 1 << 2,

77 
	mGTK_CALENDAR_SHOW_WEEK_NUMBERS
 = 1 << 3,

78 
	mGTK_CALENDAR_WEEK_START_MONDAY
 = 1 << 4,

79 
	mGTK_CALENDAR_SHOW_DETAILS
 = 1 << 5

80 } 
	tGtkCÆíd¨Di•œyO±i⁄s
;

99 
	ggch¨
* (*
	tGtkCÆíd¨DëaûFunc
Ë(
	tGtkCÆíd¨
 *
	tˇÀnd¨
,

100 
	tguöt
 
	tyór
,

101 
	tguöt
 
	tm⁄th
,

102 
	tguöt
 
	tday
,

103 
	tgpoöãr
 
	tu£r_d©a
);

105 
	s_GtkCÆíd¨


107 
GtkWidgë
 
	mwidgë
;

109 
GtkStyÀ
 *
GSEAL
 (
hódî_°yÀ
);

110 
GtkStyÀ
 *
GSEAL
 (
œbñ_°yÀ
);

112 
göt
 
GSEAL
 (
m⁄th
);

113 
göt
 
GSEAL
 (
yór
);

114 
göt
 
GSEAL
 (
£À˘ed_day
);

116 
göt
 
GSEAL
 (
day_m⁄th
[6][7]);

117 
göt
 
GSEAL
 (
day
[6][7]);

119 
göt
 
GSEAL
 (
num_m¨ked_d©es
);

120 
göt
 
GSEAL
 (
m¨ked_d©e
[31]);

121 
GtkCÆíd¨Di•œyO±i⁄s
 
GSEAL
 (
di•œy_Êags
);

122 
GdkCﬁ‹
 
GSEAL
 (
m¨ked_d©e_cﬁ‹
[31]);

124 
GdkGC
 *
GSEAL
 (
gc
);

125 
GdkGC
 *
GSEAL
 (
x‹_gc
);

127 
göt
 
GSEAL
 (
focus_row
);

128 
göt
 
GSEAL
 (
focus_cﬁ
);

130 
göt
 
GSEAL
 (
highlight_row
);

131 
göt
 
GSEAL
 (
highlight_cﬁ
);

133 
GtkCÆíd¨Priv©e
 *
GSEAL
 (
¥iv
);

134 
gch¨
 
GSEAL
 (
grow_•a˚
 [32]);

137 (*
	m_gtk_ª£rved1
) ();

138 (*
	m_gtk_ª£rved2
) ();

139 (*
	m_gtk_ª£rved3
) ();

140 (*
	m_gtk_ª£rved4
) ();

143 
	s_GtkCÆíd¨Cœss


145 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

148 (* 
	mm⁄th_ch™ged
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

149 (* 
	mday_£À˘ed
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

150 (* 
	mday_£À˘ed_doubÀ_˛ick
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

151 (* 
	m¥ev_m⁄th
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

152 (* 
	m√xt_m⁄th
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

153 (* 
	m¥ev_yór
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

154 (* 
	m√xt_yór
Ë(
GtkCÆíd¨
 *
	mˇÀnd¨
);

159 
GTy≥
 
	$gtk_ˇÀnd¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

160 
GtkWidgë
* 
	`gtk_ˇÀnd¨_√w
 ();

162 
gboﬁón
 
	`gtk_ˇÀnd¨_£À˘_m⁄th
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

163 
guöt
 
m⁄th
,

164 
guöt
 
yór
);

165 
	`gtk_ˇÀnd¨_£À˘_day
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

166 
guöt
 
day
);

168 
gboﬁón
 
	`gtk_ˇÀnd¨_m¨k_day
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

169 
guöt
 
day
);

170 
gboﬁón
 
	`gtk_ˇÀnd¨_unm¨k_day
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

171 
guöt
 
day
);

172 
	`gtk_ˇÀnd¨_˛ór_m¨ks
 (
GtkCÆíd¨
 *
ˇÀnd¨
);

175 
	`gtk_ˇÀnd¨_£t_di•œy_›ti⁄s
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

176 
GtkCÆíd¨Di•œyO±i⁄s
 
Êags
);

177 
GtkCÆíd¨Di•œyO±i⁄s


178 
	`gtk_ˇÀnd¨_gë_di•œy_›ti⁄s
 (
GtkCÆíd¨
 *
ˇÀnd¨
);

179 #i‚de‡
GTK_DISABLE_DEPRECATED


180 
	`gtk_ˇÀnd¨_di•œy_›ti⁄s
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

181 
GtkCÆíd¨Di•œyO±i⁄s
 
Êags
);

184 
	`gtk_ˇÀnd¨_gë_d©e
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

185 
guöt
 *
yór
,

186 
guöt
 *
m⁄th
,

187 
guöt
 *
day
);

189 
	`gtk_ˇÀnd¨_£t_dëaû_func
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

190 
GtkCÆíd¨DëaûFunc
 
func
,

191 
gpoöãr
 
d©a
,

192 
GDe°royNŸify
 
de°roy
);

194 
	`gtk_ˇÀnd¨_£t_dëaû_width_ch¨s
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

195 
göt
 
ch¨s
);

196 
	`gtk_ˇÀnd¨_£t_dëaû_height_rows
 (
GtkCÆíd¨
 *
ˇÀnd¨
,

197 
göt
 
rows
);

199 
göt
 
	`gtk_ˇÀnd¨_gë_dëaû_width_ch¨s
 (
GtkCÆíd¨
 *
ˇÀnd¨
);

200 
göt
 
	`gtk_ˇÀnd¨_gë_dëaû_height_rows
 (
GtkCÆíd¨
 *
ˇÀnd¨
);

202 #i‚de‡
GTK_DISABLE_DEPRECATED


203 
	`gtk_ˇÀnd¨_‰ìze
 (
GtkCÆíd¨
 *
ˇÀnd¨
);

204 
	`gtk_ˇÀnd¨_thaw
 (
GtkCÆíd¨
 *
ˇÀnd¨
);

207 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcelleditable.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_EDITABLE_H__


25 
	#__GTK_CELL_EDITABLE_H__


	)

27 
	~<gtk/gtkwidgë.h
>

29 
	gG_BEGIN_DECLS


31 
	#GTK_TYPE_CELL_EDITABLE
 (
	`gtk_˚Œ_edôabÀ_gë_ty≥
 ())

	)

32 
	#GTK_CELL_EDITABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_EDITABLE
, 
GtkCñlEdôabÀ
))

	)

33 
	#GTK_CELL_EDITABLE_CLASS
(
obj
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((obj), 
GTK_TYPE_CELL_EDITABLE
, 
GtkCñlEdôabÀIÁ˚
))

	)

34 
	#GTK_IS_CELL_EDITABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_EDITABLE
))

	)

35 
	#GTK_CELL_EDITABLE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_CELL_EDITABLE
, 
GtkCñlEdôabÀIÁ˚
))

	)

37 
_GtkCñlEdôabÀ
 
	tGtkCñlEdôabÀ
;

38 
_GtkCñlEdôabÀIÁ˚
 
	tGtkCñlEdôabÀIÁ˚
;

40 
	s_GtkCñlEdôabÀIÁ˚


42 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

45 (* 
	medôög_d⁄e
Ë(
GtkCñlEdôabÀ
 *
	m˚Œ_edôabÀ
);

46 (* 
	mªmove_widgë
Ë(
GtkCñlEdôabÀ
 *
	m˚Œ_edôabÀ
);

49 (* 
	m°¨t_edôög
Ë(
GtkCñlEdôabÀ
 *
	m˚Œ_edôabÀ
,

50 
GdkEvít
 *
	mevít
);

54 
GTy≥
 
	$gtk_˚Œ_edôabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

56 
	`gtk_˚Œ_edôabÀ_°¨t_edôög
 (
GtkCñlEdôabÀ
 *
˚Œ_edôabÀ
,

57 
GdkEvít
 *
evít
);

58 
	`gtk_˚Œ_edôabÀ_edôög_d⁄e
 (
GtkCñlEdôabÀ
 *
˚Œ_edôabÀ
);

59 
	`gtk_˚Œ_edôabÀ_ªmove_widgë
 (
GtkCñlEdôabÀ
 *
˚Œ_edôabÀ
);

62 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcelllayout.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_LAYOUT_H__


25 
	#__GTK_CELL_LAYOUT_H__


	)

27 
	~<gtk/gtk˚Œªndîî.h
>

28 
	~<gtk/gtkåìvõwcﬁumn.h
>

29 
	~<gtk/gtkbuûdabÀ.h
>

30 
	~<gtk/gtkbuûdî.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_CELL_LAYOUT
 (
	`gtk_˚Œ_œyout_gë_ty≥
 ())

	)

35 
	#GTK_CELL_LAYOUT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_LAYOUT
, 
GtkCñlLayout
))

	)

36 
	#GTK_IS_CELL_LAYOUT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_LAYOUT
))

	)

37 
	#GTK_CELL_LAYOUT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_CELL_LAYOUT
, 
GtkCñlLayoutIÁ˚
))

	)

39 
_GtkCñlLayout
 
	tGtkCñlLayout
;

40 
_GtkCñlLayoutIÁ˚
 
	tGtkCñlLayoutIÁ˚
;

43 (* 
	tGtkCñlLayoutD©aFunc
Ë(
	tGtkCñlLayout
 *
	t˚Œ_œyout
,

44 
	tGtkCñlRídîî
 *
	t˚Œ
,

45 
	tGtkTªeModñ
 *
	tåì_modñ
,

46 
	tGtkTªeIãr
 *
	tôî
,

47 
	tgpoöãr
 
	td©a
);

49 
	s_GtkCñlLayoutIÁ˚


51 
GTy≥I¡îÁ˚
 
g_iÁ˚
;

54 (* 
∑ck_°¨t
Ë(
GtkCñlLayout
 *
˚Œ_œyout
,

55 
GtkCñlRídîî
 *
˚Œ
,

56 
gboﬁón
 
ex∑nd
);

57 (* 
∑ck_íd
Ë(
GtkCñlLayout
 *
˚Œ_œyout
,

58 
GtkCñlRídîî
 *
˚Œ
,

59 
gboﬁón
 
ex∑nd
);

60 (* 
˛ór
Ë(
GtkCñlLayout
 *
˚Œ_œyout
);

61 (* 
add_©åibuã
Ë(
GtkCñlLayout
 *
˚Œ_œyout
,

62 
GtkCñlRídîî
 *
˚Œ
,

63 c⁄° 
gch¨
 *
©åibuã
,

64 
göt
 
cﬁumn
);

65 (* 
£t_˚Œ_d©a_func
Ë(
GtkCñlLayout
 *
˚Œ_œyout
,

66 
GtkCñlRídîî
 *
˚Œ
,

67 
GtkCñlLayoutD©aFunc
 
func
,

68 
gpoöãr
 
func_d©a
,

69 
GDe°royNŸify
 
de°roy
);

70 (* 
˛ór_©åibuãs
Ë(
GtkCñlLayout
 *
˚Œ_œyout
,

71 
GtkCñlRídîî
 *
˚Œ
);

72 (* 
ª‹dî
Ë(
GtkCñlLayout
 *
˚Œ_œyout
,

73 
GtkCñlRídîî
 *
˚Œ
,

74 
göt
 
posôi⁄
);

75 
GLi°
* (* 
gë_˚Œs
Ë(
GtkCñlLayout
 *
˚Œ_œyout
);

78 
GTy≥
 
	$gtk_˚Œ_œyout_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
	`gtk_˚Œ_œyout_∑ck_°¨t
 (
GtkCñlLayout
 *
˚Œ_œyout
,

80 
GtkCñlRídîî
 *
˚Œ
,

81 
gboﬁón
 
ex∑nd
);

82 
	`gtk_˚Œ_œyout_∑ck_íd
 (
GtkCñlLayout
 *
˚Œ_œyout
,

83 
GtkCñlRídîî
 *
˚Œ
,

84 
gboﬁón
 
ex∑nd
);

85 
GLi°
 *
	`gtk_˚Œ_œyout_gë_˚Œs
 (
GtkCñlLayout
 *
˚Œ_œyout
);

86 
	`gtk_˚Œ_œyout_˛ór
 (
GtkCñlLayout
 *
˚Œ_œyout
);

87 
	$gtk_˚Œ_œyout_£t_©åibuãs
 (
GtkCñlLayout
 *
˚Œ_œyout
,

88 
GtkCñlRídîî
 *
˚Œ
,

89 ...Ë
G_GNUC_NULL_TERMINATED
;

90 
	`gtk_˚Œ_œyout_add_©åibuã
 (
GtkCñlLayout
 *
˚Œ_œyout
,

91 
GtkCñlRídîî
 *
˚Œ
,

92 c⁄° 
gch¨
 *
©åibuã
,

93 
göt
 
cﬁumn
);

94 
	`gtk_˚Œ_œyout_£t_˚Œ_d©a_func
 (
GtkCñlLayout
 *
˚Œ_œyout
,

95 
GtkCñlRídîî
 *
˚Œ
,

96 
GtkCñlLayoutD©aFunc
 
func
,

97 
gpoöãr
 
func_d©a
,

98 
GDe°royNŸify
 
de°roy
);

99 
	`gtk_˚Œ_œyout_˛ór_©åibuãs
 (
GtkCñlLayout
 *
˚Œ_œyout
,

100 
GtkCñlRídîî
 *
˚Œ
);

101 
	`gtk_˚Œ_œyout_ª‹dî
 (
GtkCñlLayout
 *
˚Œ_œyout
,

102 
GtkCñlRídîî
 *
˚Œ
,

103 
göt
 
posôi⁄
);

104 
gboﬁón
 
	`_gtk_˚Œ_œyout_buûdabÀ_cu°om_èg_°¨t
 (
GtkBuûdabÀ
 *
buûdabÀ
,

105 
GtkBuûdî
 *
buûdî
,

106 
GObje˘
 *
chûd
,

107 c⁄° 
gch¨
 *
èg«me
,

108 
GM¨kupP¨£r
 *
∑r£r
,

109 
gpoöãr
 *
d©a
);

110 
	`_gtk_˚Œ_œyout_buûdabÀ_cu°om_èg_íd
 (
GtkBuûdabÀ
 *
buûdabÀ
,

111 
GtkBuûdî
 *
buûdî
,

112 
GObje˘
 *
chûd
,

113 c⁄° 
gch¨
 *
èg«me
,

114 
gpoöãr
 *
d©a
);

115 
	`_gtk_˚Œ_œyout_buûdabÀ_add_chûd
 (
GtkBuûdabÀ
 *
buûdabÀ
,

116 
GtkBuûdî
 *
buûdî
,

117 
GObje˘
 *
chûd
,

118 c⁄° 
gch¨
 *
ty≥
);

120 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrenderer.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_H__


25 
	#__GTK_CELL_RENDERER_H__


	)

27 
	~<gtk/gtk˚ŒedôabÀ.h
>

29 
G_BEGIN_DECLS


33 
	mGTK_CELL_RENDERER_SELECTED
 = 1 << 0,

34 
	mGTK_CELL_RENDERER_PRELIT
 = 1 << 1,

35 
	mGTK_CELL_RENDERER_INSENSITIVE
 = 1 << 2,

37 
	mGTK_CELL_RENDERER_SORTED
 = 1 << 3,

38 
	mGTK_CELL_RENDERER_FOCUSED
 = 1 << 4

39 } 
	tGtkCñlRídîîSèã
;

43 
	mGTK_CELL_RENDERER_MODE_INERT
,

44 
	mGTK_CELL_RENDERER_MODE_ACTIVATABLE
,

45 
	mGTK_CELL_RENDERER_MODE_EDITABLE


46 } 
	tGtkCñlRídîîMode
;

48 
	#GTK_TYPE_CELL_RENDERER
 (
	`gtk_˚Œ_ªndîî_gë_ty≥
 ())

	)

49 
	#GTK_CELL_RENDERER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER
, 
GtkCñlRídîî
))

	)

50 
	#GTK_CELL_RENDERER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER
, 
GtkCñlRídîîCœss
))

	)

51 
	#GTK_IS_CELL_RENDERER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER
))

	)

52 
	#GTK_IS_CELL_RENDERER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER
))

	)

53 
	#GTK_CELL_RENDERER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER
, 
GtkCñlRídîîCœss
))

	)

55 
_GtkCñlRídîî
 
	tGtkCñlRídîî
;

56 
_GtkCñlRídîîCœss
 
	tGtkCñlRídîîCœss
;

58 
	s_GtkCñlRídîî


60 
GtkObje˘
 
	m∑ª¡
;

62 
gÊﬂt
 
GSEAL
 (
xÆign
);

63 
gÊﬂt
 
GSEAL
 (
yÆign
);

65 
göt
 
GSEAL
 (
width
);

66 
göt
 
GSEAL
 (
height
);

68 
guöt16
 
GSEAL
 (
x∑d
);

69 
guöt16
 
GSEAL
 (
y∑d
);

71 
guöt
 
GSEAL
 (
mode
) : 2;

72 
guöt
 
GSEAL
 (
visibÀ
) : 1;

73 
guöt
 
GSEAL
 (
is_ex∑ndî
) : 1;

74 
guöt
 
GSEAL
 (
is_ex∑nded
) : 1;

75 
guöt
 
GSEAL
 (
˚Œ_background_£t
) : 1;

76 
guöt
 
GSEAL
 (
£nsôive
) : 1;

77 
guöt
 
GSEAL
 (
edôög
) : 1;

80 
	s_GtkCñlRídîîCœss


82 
GtkObje˘Cœss
 
	m∑ª¡_˛ass
;

85 (* 
	mgë_size
Ë(
GtkCñlRídîî
 *
	m˚Œ
,

86 
GtkWidgë
 *
	mwidgë
,

87 
GdkRe˘™gÀ
 *
	m˚Œ_¨ó
,

88 
göt
 *
	mx_off£t
,

89 
göt
 *
	my_off£t
,

90 
göt
 *
	mwidth
,

91 
göt
 *
	mheight
);

92 (* 
	mªndî
Ë(
GtkCñlRídîî
 *
	m˚Œ
,

93 
GdkDøwabÀ
 *
	mwödow
,

94 
GtkWidgë
 *
	mwidgë
,

95 
GdkRe˘™gÀ
 *
	mbackground_¨ó
,

96 
GdkRe˘™gÀ
 *
	m˚Œ_¨ó
,

97 
GdkRe˘™gÀ
 *
	mexpo£_¨ó
,

98 
GtkCñlRídîîSèã
 
	mÊags
);

99 
gboﬁón
 (* 
a˘iv©e
Ë(
GtkCñlRídîî
 *
	m˚Œ
,

100 
GdkEvít
 *
	mevít
,

101 
GtkWidgë
 *
	mwidgë
,

102 c⁄° 
gch¨
 *
	m∑th
,

103 
GdkRe˘™gÀ
 *
	mbackground_¨ó
,

104 
GdkRe˘™gÀ
 *
	m˚Œ_¨ó
,

105 
GtkCñlRídîîSèã
 
	mÊags
);

106 
	mGtkCñlEdôabÀ
 *(* 
	m°¨t_edôög
Ë(
GtkCñlRídîî
 *
	m˚Œ
,

107 
GdkEvít
 *
	mevít
,

108 
GtkWidgë
 *
	mwidgë
,

109 c⁄° 
gch¨
 *
	m∑th
,

110 
GdkRe˘™gÀ
 *
	mbackground_¨ó
,

111 
GdkRe˘™gÀ
 *
	m˚Œ_¨ó
,

112 
GtkCñlRídîîSèã
 
	mÊags
);

115 (* 
	medôög_ˇn˚Àd
Ë(
GtkCñlRídîî
 *
	m˚Œ
);

116 (* 
	medôög_°¨ãd
Ë(
GtkCñlRídîî
 *
	m˚Œ
,

117 
GtkCñlEdôabÀ
 *
	medôabÀ
,

118 c⁄° 
gch¨
 *
	m∑th
);

121 (*
	m_gtk_ª£rved1
) ();

122 (*
	m_gtk_ª£rved2
) ();

125 
GTy≥
 
	$gtk_˚Œ_ªndîî_gë_ty≥
 (Ë
G_GNUC_CONST
;

127 
	`gtk_˚Œ_ªndîî_gë_size
 (
GtkCñlRídîî
 *
˚Œ
,

128 
GtkWidgë
 *
widgë
,

129 c⁄° 
GdkRe˘™gÀ
 *
˚Œ_¨ó
,

130 
göt
 *
x_off£t
,

131 
göt
 *
y_off£t
,

132 
göt
 *
width
,

133 
göt
 *
height
);

134 
	`gtk_˚Œ_ªndîî_ªndî
 (
GtkCñlRídîî
 *
˚Œ
,

135 
GdkWödow
 *
wödow
,

136 
GtkWidgë
 *
widgë
,

137 c⁄° 
GdkRe˘™gÀ
 *
background_¨ó
,

138 c⁄° 
GdkRe˘™gÀ
 *
˚Œ_¨ó
,

139 c⁄° 
GdkRe˘™gÀ
 *
expo£_¨ó
,

140 
GtkCñlRídîîSèã
 
Êags
);

141 
gboﬁón
 
	`gtk_˚Œ_ªndîî_a˘iv©e
 (
GtkCñlRídîî
 *
˚Œ
,

142 
GdkEvít
 *
evít
,

143 
GtkWidgë
 *
widgë
,

144 c⁄° 
gch¨
 *
∑th
,

145 c⁄° 
GdkRe˘™gÀ
 *
background_¨ó
,

146 c⁄° 
GdkRe˘™gÀ
 *
˚Œ_¨ó
,

147 
GtkCñlRídîîSèã
 
Êags
);

148 
GtkCñlEdôabÀ
 *
	`gtk_˚Œ_ªndîî_°¨t_edôög
 (
GtkCñlRídîî
 *
˚Œ
,

149 
GdkEvít
 *
evít
,

150 
GtkWidgë
 *
widgë
,

151 c⁄° 
gch¨
 *
∑th
,

152 c⁄° 
GdkRe˘™gÀ
 *
background_¨ó
,

153 c⁄° 
GdkRe˘™gÀ
 *
˚Œ_¨ó
,

154 
GtkCñlRídîîSèã
 
Êags
);

155 
	`gtk_˚Œ_ªndîî_£t_fixed_size
 (
GtkCñlRídîî
 *
˚Œ
,

156 
göt
 
width
,

157 
göt
 
height
);

158 
	`gtk_˚Œ_ªndîî_gë_fixed_size
 (
GtkCñlRídîî
 *
˚Œ
,

159 
göt
 *
width
,

160 
göt
 *
height
);

163 #i‚de‡
GTK_DISABLE_DEPRECATED


164 
	`gtk_˚Œ_ªndîî_edôög_ˇn˚Àd
 (
GtkCñlRídîî
 *
˚Œ
);

166 
	`gtk_˚Œ_ªndîî_°›_edôög
 (
GtkCñlRídîî
 *
˚Œ
,

167 
gboﬁón
 
ˇn˚Àd
);

170 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrendereraccel.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_ACCEL_H__


25 
	#__GTK_CELL_RENDERER_ACCEL_H__


	)

27 
	~<gtk/gtk˚Œªndîîãxt.h
>

29 
	gG_BEGIN_DECLS


31 
	#GTK_TYPE_CELL_RENDERER_ACCEL
 (
	`gtk_˚Œ_ªndîî_ac˚l_gë_ty≥
 ())

	)

32 
	#GTK_CELL_RENDERER_ACCEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_ACCEL
, 
GtkCñlRídîîAc˚l
))

	)

33 
	#GTK_CELL_RENDERER_ACCEL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_ACCEL
, 
GtkCñlRídîîAc˚lCœss
))

	)

34 
	#GTK_IS_CELL_RENDERER_ACCEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_ACCEL
))

	)

35 
	#GTK_IS_CELL_RENDERER_ACCEL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_ACCEL
))

	)

36 
	#GTK_CELL_RENDERER_ACCEL_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_ACCEL
, 
GtkCñlRídîîAc˚lCœss
))

	)

38 
_GtkCñlRídîîAc˚l
 
	tGtkCñlRídîîAc˚l
;

39 
_GtkCñlRídîîAc˚lCœss
 
	tGtkCñlRídîîAc˚lCœss
;

44 
	mGTK_CELL_RENDERER_ACCEL_MODE_GTK
,

45 
	mGTK_CELL_RENDERER_ACCEL_MODE_OTHER


46 } 
	tGtkCñlRídîîAc˚lMode
;

49 
	s_GtkCñlRídîîAc˚l


51 
GtkCñlRídîîText
 
	m∑ª¡
;

54 
guöt
 
GSEAL
 (
ac˚l_key
);

55 
GdkModifõrTy≥
 
GSEAL
 (
ac˚l_mods
);

56 
guöt
 
GSEAL
 (
keycode
);

57 
GtkCñlRídîîAc˚lMode
 
GSEAL
 (
ac˚l_mode
);

59 
GtkWidgë
 *
GSEAL
 (
edô_widgë
);

60 
GtkWidgë
 *
GSEAL
 (
gøb_widgë
);

61 
GtkWidgë
 *
GSEAL
 (
sizög_œbñ
);

64 
	s_GtkCñlRídîîAc˚lCœss


66 
GtkCñlRídîîTextCœss
 
	m∑ª¡_˛ass
;

68 (* 
	mac˚l_edôed
Ë(
GtkCñlRídîîAc˚l
 *
	mac˚l
,

69 c⁄° 
gch¨
 *
	m∑th_°rög
,

70 
guöt
 
	mac˚l_key
,

71 
GdkModifõrTy≥
 
	mac˚l_mods
,

72 
guöt
 
	mh¨dw¨e_keycode
);

74 (* 
	mac˚l_˛óªd
Ë(
GtkCñlRídîîAc˚l
 *
	mac˚l
,

75 c⁄° 
gch¨
 *
	m∑th_°rög
);

78 (*
	m_gtk_ª£rved0
) ();

79 (*
	m_gtk_ª£rved1
) ();

80 (*
	m_gtk_ª£rved2
) ();

81 (*
	m_gtk_ª£rved3
) ();

82 (*
	m_gtk_ª£rved4
) ();

85 
GTy≥
 
	$gtk_˚Œ_ªndîî_ac˚l_gë_ty≥
 (Ë
G_GNUC_CONST
;

86 
GtkCñlRídîî
 *
	`gtk_˚Œ_ªndîî_ac˚l_√w
 ();

89 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrenderercombo.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_COMBO_H__


25 
	#__GTK_CELL_RENDERER_COMBO_H__


	)

27 
	~<gtk/gtkåìmodñ.h
>

28 
	~<gtk/gtk˚Œªndîîãxt.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_CELL_RENDERER_COMBO
 (
	`gtk_˚Œ_ªndîî_combo_gë_ty≥
 ())

	)

33 
	#GTK_CELL_RENDERER_COMBO
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_COMBO
, 
GtkCñlRídîîCombo
))

	)

34 
	#GTK_CELL_RENDERER_COMBO_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_COMBO
, 
GtkCñlRídîîComboCœss
))

	)

35 
	#GTK_IS_CELL_RENDERER_COMBO
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_COMBO
))

	)

36 
	#GTK_IS_CELL_RENDERER_COMBO_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_COMBO
))

	)

37 
	#GTK_CELL_RENDERER_COMBO_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_COMBO
, 
GtkCñlRídîîTextCœss
))

	)

39 
_GtkCñlRídîîCombo
 
	tGtkCñlRídîîCombo
;

40 
_GtkCñlRídîîComboCœss
 
	tGtkCñlRídîîComboCœss
;

42 
	s_GtkCñlRídîîCombo


44 
GtkCñlRídîîText
 
	m∑ª¡
;

46 
GtkTªeModñ
 *
GSEAL
 (
modñ
);

47 
göt
 
GSEAL
 (
ãxt_cﬁumn
);

48 
gboﬁón
 
GSEAL
 (
has_íåy
);

51 
guöt
 
GSEAL
 (
focus_out_id
);

54 
	s_GtkCñlRídîîComboCœss


56 
GtkCñlRídîîTextCœss
 
	m∑ª¡
;

59 
GTy≥
 
	$gtk_˚Œ_ªndîî_combo_gë_ty≥
 (Ë
G_GNUC_CONST
;

60 
GtkCñlRídîî
 *
	`gtk_˚Œ_ªndîî_combo_√w
 ();

62 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrendererpixbuf.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_PIXBUF_H__


25 
	#__GTK_CELL_RENDERER_PIXBUF_H__


	)

27 
	~<gtk/gtk˚Œªndîî.h
>

30 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_CELL_RENDERER_PIXBUF
 (
	`gtk_˚Œ_ªndîî_pixbuf_gë_ty≥
 ())

	)

34 
	#GTK_CELL_RENDERER_PIXBUF
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_PIXBUF
, 
GtkCñlRídîîPixbuf
))

	)

35 
	#GTK_CELL_RENDERER_PIXBUF_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_PIXBUF
, 
GtkCñlRídîîPixbufCœss
))

	)

36 
	#GTK_IS_CELL_RENDERER_PIXBUF
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_PIXBUF
))

	)

37 
	#GTK_IS_CELL_RENDERER_PIXBUF_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_PIXBUF
))

	)

38 
	#GTK_CELL_RENDERER_PIXBUF_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_PIXBUF
, 
GtkCñlRídîîPixbufCœss
))

	)

40 
_GtkCñlRídîîPixbuf
 
	tGtkCñlRídîîPixbuf
;

41 
_GtkCñlRídîîPixbufCœss
 
	tGtkCñlRídîîPixbufCœss
;

43 
	s_GtkCñlRídîîPixbuf


45 
GtkCñlRídîî
 
	m∑ª¡
;

48 
GdkPixbuf
 *
GSEAL
 (
pixbuf
);

49 
GdkPixbuf
 *
GSEAL
 (
pixbuf_ex∑ndî_›í
);

50 
GdkPixbuf
 *
GSEAL
 (
pixbuf_ex∑ndî_˛o£d
);

53 
	s_GtkCñlRídîîPixbufCœss


55 
GtkCñlRídîîCœss
 
	m∑ª¡_˛ass
;

58 (*
	m_gtk_ª£rved1
) ();

59 (*
	m_gtk_ª£rved2
) ();

60 (*
	m_gtk_ª£rved3
) ();

61 (*
	m_gtk_ª£rved4
) ();

64 
GTy≥
 
	$gtk_˚Œ_ªndîî_pixbuf_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
GtkCñlRídîî
 *
	`gtk_˚Œ_ªndîî_pixbuf_√w
 ();

68 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrendererprogress.h

28 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

32 #i‚de‡
__GTK_CELL_RENDERER_PROGRESS_H__


33 
	#__GTK_CELL_RENDERER_PROGRESS_H__


	)

35 
	~<gtk/gtk˚Œªndîî.h
>

37 
	gG_BEGIN_DECLS


39 
	#GTK_TYPE_CELL_RENDERER_PROGRESS
 (
	`gtk_˚Œ_ªndîî_¥ogªss_gë_ty≥
 ())

	)

40 
	#GTK_CELL_RENDERER_PROGRESS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_PROGRESS
, 
GtkCñlRídîîProgªss
))

	)

41 
	#GTK_CELL_RENDERER_PROGRESS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_PROGRESS
, 
GtkCñlRídîîProgªssCœss
))

	)

42 
	#GTK_IS_CELL_RENDERER_PROGRESS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_PROGRESS
))

	)

43 
	#GTK_IS_CELL_RENDERER_PROGRESS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_PROGRESS
))

	)

44 
	#GTK_CELL_RENDERER_PROGRESS_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_PROGRESS
, 
GtkCñlRídîîProgªssCœss
))

	)

46 
_GtkCñlRídîîProgªss
 
	tGtkCñlRídîîProgªss
;

47 
_GtkCñlRídîîProgªssCœss
 
	tGtkCñlRídîîProgªssCœss
;

48 
_GtkCñlRídîîProgªssPriv©e
 
	tGtkCñlRídîîProgªssPriv©e
;

50 
	s_GtkCñlRídîîProgªss


52 
GtkCñlRídîî
 
	m∑ª¡_ö°™˚
;

55 
GtkCñlRídîîProgªssPriv©e
 *
GSEAL
 (
¥iv
);

58 
	s_GtkCñlRídîîProgªssCœss


60 
GtkCñlRídîîCœss
 
	m∑ª¡_˛ass
;

63 (*
	m_gtk_ª£rved1
) ();

64 (*
	m_gtk_ª£rved2
) ();

65 (*
	m_gtk_ª£rved3
) ();

66 (*
	m_gtk_ª£rved4
) ();

69 
GTy≥
 
	$gtk_˚Œ_ªndîî_¥ogªss_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkCñlRídîî
* 
	`gtk_˚Œ_ªndîî_¥ogªss_√w
 ();

72 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrendererspin.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_SPIN_H__


25 
	#__GTK_CELL_RENDERER_SPIN_H__


	)

27 
	~<gtk/gtk˚Œªndîîãxt.h
>

29 
	gG_BEGIN_DECLS


31 
	#GTK_TYPE_CELL_RENDERER_SPIN
 (
	`gtk_˚Œ_ªndîî_•ö_gë_ty≥
 ())

	)

32 
	#GTK_CELL_RENDERER_SPIN
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_SPIN
, 
GtkCñlRídîîSpö
))

	)

33 
	#GTK_CELL_RENDERER_SPIN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_SPIN
, 
GtkCñlRídîîSpöCœss
))

	)

34 
	#GTK_IS_CELL_RENDERER_SPIN
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_SPIN
))

	)

35 
	#GTK_IS_CELL_RENDERER_SPIN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_SPIN
))

	)

36 
	#GTK_CELL_RENDERER_SPIN_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_SPIN
, 
GtkCñlRídîîTextCœss
))

	)

38 
_GtkCñlRídîîSpö
 
	tGtkCñlRídîîSpö
;

39 
_GtkCñlRídîîSpöCœss
 
	tGtkCñlRídîîSpöCœss
;

40 
_GtkCñlRídîîSpöPriv©e
 
	tGtkCñlRídîîSpöPriv©e
;

42 
	s_GtkCñlRídîîSpö


44 
GtkCñlRídîîText
 
	m∑ª¡
;

47 
	s_GtkCñlRídîîSpöCœss


49 
GtkCñlRídîîTextCœss
 
	m∑ª¡
;

52 
GTy≥
 
gtk_˚Œ_ªndîî_•ö_gë_ty≥
 ();

53 
GtkCñlRídîî
 *
gtk_˚Œ_ªndîî_•ö_√w
 ();

55 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrenderertext.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_TEXT_H__


25 
	#__GTK_CELL_RENDERER_TEXT_H__


	)

28 
	~<gtk/gtk˚Œªndîî.h
>

31 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_CELL_RENDERER_TEXT
 (
	`gtk_˚Œ_ªndîî_ãxt_gë_ty≥
 ())

	)

35 
	#GTK_CELL_RENDERER_TEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_TEXT
, 
GtkCñlRídîîText
))

	)

36 
	#GTK_CELL_RENDERER_TEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_TEXT
, 
GtkCñlRídîîTextCœss
))

	)

37 
	#GTK_IS_CELL_RENDERER_TEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_TEXT
))

	)

38 
	#GTK_IS_CELL_RENDERER_TEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_TEXT
))

	)

39 
	#GTK_CELL_RENDERER_TEXT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_TEXT
, 
GtkCñlRídîîTextCœss
))

	)

41 
_GtkCñlRídîîText
 
	tGtkCñlRídîîText
;

42 
_GtkCñlRídîîTextCœss
 
	tGtkCñlRídîîTextCœss
;

44 
	s_GtkCñlRídîîText


46 
GtkCñlRídîî
 
	m∑ª¡
;

49 
gch¨
 *
GSEAL
 (
ãxt
);

50 
P™goF⁄tDes¸ùti⁄
 *
GSEAL
 (
f⁄t
);

51 
gdoubÀ
 
GSEAL
 (
f⁄t_sˇÀ
);

52 
P™goCﬁ‹
 
GSEAL
 (
f‹eground
);

53 
P™goCﬁ‹
 
GSEAL
 (
background
);

55 
P™goAârLi°
 *
GSEAL
 (
exåa_©ås
);

57 
P™goUndîlöe
 
GSEAL
 (
undîlöe_°yÀ
);

59 
göt
 
GSEAL
 (
ri£
);

60 
göt
 
GSEAL
 (
fixed_height_rows
);

62 
guöt
 
GSEAL
 (
°rikëhrough
) : 1;

64 
guöt
 
GSEAL
 (
edôabÀ
) : 1;

66 
guöt
 
GSEAL
 (
sˇÀ_£t
) : 1;

68 
guöt
 
GSEAL
 (
f‹eground_£t
) : 1;

69 
guöt
 
GSEAL
 (
background_£t
) : 1;

71 
guöt
 
GSEAL
 (
undîlöe_£t
) : 1;

73 
guöt
 
GSEAL
 (
ri£_£t
) : 1;

75 
guöt
 
GSEAL
 (
°rikëhrough_£t
) : 1;

77 
guöt
 
GSEAL
 (
edôabÀ_£t
) : 1;

78 
guöt
 
GSEAL
 (
ˇlc_fixed_height
) : 1;

81 
	s_GtkCñlRídîîTextCœss


83 
GtkCñlRídîîCœss
 
	m∑ª¡_˛ass
;

85 (* 
	medôed
Ë(
GtkCñlRídîîText
 *
	m˚Œ_ªndîî_ãxt
,

86 c⁄° 
gch¨
 *
	m∑th
,

87 c⁄° 
gch¨
 *
	m√w_ãxt
);

90 (*
	m_gtk_ª£rved1
) ();

91 (*
	m_gtk_ª£rved2
) ();

92 (*
	m_gtk_ª£rved3
) ();

93 (*
	m_gtk_ª£rved4
) ();

96 
GTy≥
 
	$gtk_˚Œ_ªndîî_ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

97 
GtkCñlRídîî
 *
	`gtk_˚Œ_ªndîî_ãxt_√w
 ();

99 
	`gtk_˚Œ_ªndîî_ãxt_£t_fixed_height_‰om_f⁄t
 (
GtkCñlRídîîText
 *
ªndîî
,

100 
göt
 
numbî_of_rows
);

103 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_RENDERER_TOGGLE_H__


25 
	#__GTK_CELL_RENDERER_TOGGLE_H__


	)

27 
	~<gtk/gtk˚Œªndîî.h
>

30 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_CELL_RENDERER_TOGGLE
 (
	`gtk_˚Œ_ªndîî_toggÀ_gë_ty≥
 ())

	)

34 
	#GTK_CELL_RENDERER_TOGGLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_RENDERER_TOGGLE
, 
GtkCñlRídîîToggÀ
))

	)

35 
	#GTK_CELL_RENDERER_TOGGLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CELL_RENDERER_TOGGLE
, 
GtkCñlRídîîToggÀCœss
))

	)

36 
	#GTK_IS_CELL_RENDERER_TOGGLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_RENDERER_TOGGLE
))

	)

37 
	#GTK_IS_CELL_RENDERER_TOGGLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CELL_RENDERER_TOGGLE
))

	)

38 
	#GTK_CELL_RENDERER_TOGGLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CELL_RENDERER_TOGGLE
, 
GtkCñlRídîîToggÀCœss
))

	)

40 
_GtkCñlRídîîToggÀ
 
	tGtkCñlRídîîToggÀ
;

41 
_GtkCñlRídîîToggÀCœss
 
	tGtkCñlRídîîToggÀCœss
;

43 
	s_GtkCñlRídîîToggÀ


45 
GtkCñlRídîî
 
	m∑ª¡
;

48 
guöt
 
GSEAL
 (
a˘ive
) : 1;

49 
guöt
 
GSEAL
 (
a˘iv©abÀ
) : 1;

50 
guöt
 
GSEAL
 (
ødio
) : 1;

53 
	s_GtkCñlRídîîToggÀCœss


55 
GtkCñlRídîîCœss
 
	m∑ª¡_˛ass
;

57 (* 
	mtoggÀd
Ë(
GtkCñlRídîîToggÀ
 *
	m˚Œ_ªndîî_toggÀ
,

58 c⁄° 
gch¨
 *
	m∑th
);

61 (*
	m_gtk_ª£rved1
) ();

62 (*
	m_gtk_ª£rved2
) ();

63 (*
	m_gtk_ª£rved3
) ();

64 (*
	m_gtk_ª£rved4
) ();

67 
GTy≥
 
	$gtk_˚Œ_ªndîî_toggÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

68 
GtkCñlRídîî
 *
	`gtk_˚Œ_ªndîî_toggÀ_√w
 ();

70 
gboﬁón
 
	`gtk_˚Œ_ªndîî_toggÀ_gë_ødio
 (
GtkCñlRídîîToggÀ
 *
toggÀ
);

71 
	`gtk_˚Œ_ªndîî_toggÀ_£t_ødio
 (
GtkCñlRídîîToggÀ
 *
toggÀ
,

72 
gboﬁón
 
ødio
);

74 
gboﬁón
 
	`gtk_˚Œ_ªndîî_toggÀ_gë_a˘ive
 (
GtkCñlRídîîToggÀ
 *
toggÀ
);

75 
	`gtk_˚Œ_ªndîî_toggÀ_£t_a˘ive
 (
GtkCñlRídîîToggÀ
 *
toggÀ
,

76 
gboﬁón
 
£âög
);

79 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcellview.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_CELL_VIEW_H__


25 
	#__GTK_CELL_VIEW_H__


	)

27 
	~<gtk/gtkwidgë.h
>

28 
	~<gtk/gtk˚Œªndîî.h
>

29 
	~<gtk/gtkåìmodñ.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_CELL_VIEW
 (
	`gtk_˚Œ_võw_gë_ty≥
 ())

	)

34 
	#GTK_CELL_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CELL_VIEW
, 
GtkCñlVõw
))

	)

35 
	#GTK_CELL_VIEW_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_CELL_VIEW
, 
GtkCñlVõwCœss
))

	)

36 
	#GTK_IS_CELL_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CELL_VIEW
))

	)

37 
	#GTK_IS_CELL_VIEW_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_CELL_VIEW
))

	)

38 
	#GTK_CELL_VIEW_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((ö°), 
GTK_TYPE_CELL_VIEW
, 
GtkCñlVõwCœss
))

	)

40 
_GtkCñlVõw
 
	tGtkCñlVõw
;

41 
_GtkCñlVõwCœss
 
	tGtkCñlVõwCœss
;

42 
_GtkCñlVõwPriv©e
 
	tGtkCñlVõwPriv©e
;

44 
	s_GtkCñlVõw


46 
GtkWidgë
 
	m∑ª¡_ö°™˚
;

49 
GtkCñlVõwPriv©e
 *
GSEAL
 (
¥iv
);

52 
	s_GtkCñlVõwCœss


54 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

57 
GTy≥
 
	$gtk_˚Œ_võw_gë_ty≥
 (Ë
G_GNUC_CONST
;

58 
GtkWidgë
 *
	`gtk_˚Œ_võw_√w
 ();

59 
GtkWidgë
 *
	`gtk_˚Œ_võw_√w_wôh_ãxt
 (c⁄° 
gch¨
 *
ãxt
);

60 
GtkWidgë
 *
	`gtk_˚Œ_võw_√w_wôh_m¨kup
 (c⁄° 
gch¨
 *
m¨kup
);

61 
GtkWidgë
 *
	`gtk_˚Œ_võw_√w_wôh_pixbuf
 (
GdkPixbuf
 *
pixbuf
);

63 
	`gtk_˚Œ_võw_£t_modñ
 (
GtkCñlVõw
 *
˚Œ_võw
,

64 
GtkTªeModñ
 *
modñ
);

65 
GtkTªeModñ
 *
	`gtk_˚Œ_võw_gë_modñ
 (
GtkCñlVõw
 *
˚Œ_võw
);

66 
	`gtk_˚Œ_võw_£t_di•œyed_row
 (
GtkCñlVõw
 *
˚Œ_võw
,

67 
GtkTªeP©h
 *
∑th
);

68 
GtkTªeP©h
 *
	`gtk_˚Œ_võw_gë_di•œyed_row
 (
GtkCñlVõw
 *
˚Œ_võw
);

69 
gboﬁón
 
	`gtk_˚Œ_võw_gë_size_of_row
 (
GtkCñlVõw
 *
˚Œ_võw
,

70 
GtkTªeP©h
 *
∑th
,

71 
GtkRequisôi⁄
 *
ªquisôi⁄
);

73 
	`gtk_˚Œ_võw_£t_background_cﬁ‹
 (
GtkCñlVõw
 *
˚Œ_võw
,

74 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

75 
GLi°
 *
	`gtk_˚Œ_võw_gë_˚Œ_ªndîîs
 (
GtkCñlVõw
 *
˚Œ_võw
);

77 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcheckbutton.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_CHECK_BUTTON_H__


32 
	#__GTK_CHECK_BUTTON_H__


	)

35 
	~<gtk/gtktoggÀbuâ⁄.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_CHECK_BUTTON
 (
	`gtk_check_buâ⁄_gë_ty≥
 ())

	)

41 
	#GTK_CHECK_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CHECK_BUTTON
, 
GtkCheckBuâ⁄
))

	)

42 
	#GTK_CHECK_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CHECK_BUTTON
, 
GtkCheckBuâ⁄Cœss
))

	)

43 
	#GTK_IS_CHECK_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CHECK_BUTTON
))

	)

44 
	#GTK_IS_CHECK_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CHECK_BUTTON
))

	)

45 
	#GTK_CHECK_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CHECK_BUTTON
, 
GtkCheckBuâ⁄Cœss
))

	)

48 
_GtkCheckBuâ⁄
 
	tGtkCheckBuâ⁄
;

49 
_GtkCheckBuâ⁄Cœss
 
	tGtkCheckBuâ⁄Cœss
;

51 
	s_GtkCheckBuâ⁄


53 
GtkToggÀBuâ⁄
 
	mtoggÀ_buâ⁄
;

56 
	s_GtkCheckBuâ⁄Cœss


58 
GtkToggÀBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

60 (* 
	mdøw_ödiˇt‹
Ë(
GtkCheckBuâ⁄
 *
	mcheck_buâ⁄
,

61 
GdkRe˘™gÀ
 *
	m¨ó
);

64 (*
	m_gtk_ª£rved1
) ();

65 (*
	m_gtk_ª£rved2
) ();

66 (*
	m_gtk_ª£rved3
) ();

67 (*
	m_gtk_ª£rved4
) ();

71 
GTy≥
 
	$gtk_check_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

72 
GtkWidgë
* 
	`gtk_check_buâ⁄_√w
 ();

73 
GtkWidgë
* 
	`gtk_check_buâ⁄_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

74 
GtkWidgë
* 
	`gtk_check_buâ⁄_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

76 
	`_gtk_check_buâ⁄_gë_¥›s
 (
GtkCheckBuâ⁄
 *
check_buâ⁄
,

77 
göt
 *
ödiˇt‹_size
,

78 
göt
 *
ödiˇt‹_•acög
);

80 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_CHECK_MENU_ITEM_H__


32 
	#__GTK_CHECK_MENU_ITEM_H__


	)

35 
	~<gtk/gtkmíuôem.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_CHECK_MENU_ITEM
 (
	`gtk_check_míu_ôem_gë_ty≥
 ())

	)

41 
	#GTK_CHECK_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CHECK_MENU_ITEM
, 
GtkCheckMíuIãm
))

	)

42 
	#GTK_CHECK_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CHECK_MENU_ITEM
, 
GtkCheckMíuIãmCœss
))

	)

43 
	#GTK_IS_CHECK_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CHECK_MENU_ITEM
))

	)

44 
	#GTK_IS_CHECK_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CHECK_MENU_ITEM
))

	)

45 
	#GTK_CHECK_MENU_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CHECK_MENU_ITEM
, 
GtkCheckMíuIãmCœss
))

	)

48 
_GtkCheckMíuIãm
 
	tGtkCheckMíuIãm
;

49 
_GtkCheckMíuIãmCœss
 
	tGtkCheckMíuIãmCœss
;

51 
	s_GtkCheckMíuIãm


53 
GtkMíuIãm
 
	mmíu_ôem
;

55 
guöt
 
GSEAL
 (
a˘ive
) : 1;

56 
guöt
 
GSEAL
 (
Æways_show_toggÀ
) : 1;

57 
guöt
 
GSEAL
 (
öc⁄si°ít
) : 1;

58 
guöt
 
GSEAL
 (
døw_as_ødio
) : 1;

61 
	s_GtkCheckMíuIãmCœss


63 
GtkMíuIãmCœss
 
	m∑ª¡_˛ass
;

65 (* 
	mtoggÀd
Ë(
GtkCheckMíuIãm
 *
	mcheck_míu_ôem
);

66 (* 
	mdøw_ödiˇt‹
Ë(
GtkCheckMíuIãm
 *
	mcheck_míu_ôem
,

67 
GdkRe˘™gÀ
 *
	m¨ó
);

70 (*
	m_gtk_ª£rved1
) ();

71 (*
	m_gtk_ª£rved2
) ();

72 (*
	m_gtk_ª£rved3
) ();

73 (*
	m_gtk_ª£rved4
) ();

77 
GTy≥
 
	$gtk_check_míu_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
GtkWidgë
* 
	`gtk_check_míu_ôem_√w
 ();

80 
GtkWidgë
* 
	`gtk_check_míu_ôem_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

81 
GtkWidgë
* 
	`gtk_check_míu_ôem_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

82 
	`gtk_check_míu_ôem_£t_a˘ive
 (
GtkCheckMíuIãm
 *
check_míu_ôem
,

83 
gboﬁón
 
is_a˘ive
);

84 
gboﬁón
 
	`gtk_check_míu_ôem_gë_a˘ive
 (
GtkCheckMíuIãm
 *
check_míu_ôem
);

85 
	`gtk_check_míu_ôem_toggÀd
 (
GtkCheckMíuIãm
 *
check_míu_ôem
);

86 
	`gtk_check_míu_ôem_£t_öc⁄si°ít
 (
GtkCheckMíuIãm
 *
check_míu_ôem
,

87 
gboﬁón
 
£âög
);

88 
gboﬁón
 
	`gtk_check_míu_ôem_gë_öc⁄si°ít
 (
GtkCheckMíuIãm
 *
check_míu_ôem
);

89 
	`gtk_check_míu_ôem_£t_døw_as_ødio
 (
GtkCheckMíuIãm
 *
check_míu_ôem
,

90 
gboﬁón
 
døw_as_ødio
);

91 
gboﬁón
 
	`gtk_check_míu_ôem_gë_døw_as_ødio
 (
GtkCheckMíuIãm
 *
check_míu_ôem
);

94 #i‚de‡
GTK_DISABLE_DEPRECATED


95 
	`gtk_check_míu_ôem_£t_show_toggÀ
 (
GtkCheckMíuIãm
 *
míu_ôem
,

96 
gboﬁón
 
Æways
);

97 
	#gtk_check_míu_ôem_£t_°©e
 
gtk_check_míu_ôem_£t_a˘ive


	)

100 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkclipboard.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_CLIPBOARD_H__


27 
	#__GTK_CLIPBOARD_H__


	)

29 
	~<gtk/gtk£À˘i⁄.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_CLIPBOARD
 (
	`gtk_˛ùbﬂrd_gë_ty≥
 ())

	)

34 
	#GTK_CLIPBOARD
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CLIPBOARD
, 
GtkClùbﬂrd
))

	)

35 
	#GTK_IS_CLIPBOARD
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CLIPBOARD
))

	)

37 (* 
	tGtkClùbﬂrdRe˚ivedFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

38 
	tGtkSñe˘i⁄D©a
 *
	t£À˘i⁄_d©a
,

39 
	tgpoöãr
 
	td©a
);

40 (* 
	tGtkClùbﬂrdTextRe˚ivedFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

41 c⁄° 
	tgch¨
 *
	tãxt
,

42 
	tgpoöãr
 
	td©a
);

43 (* 
	tGtkClùbﬂrdRichTextRe˚ivedFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

44 
	tGdkAtom
 
	tf‹m©
,

45 c⁄° 
	tguöt8
 *
	tãxt
,

46 
	tgsize
 
	tÀngth
,

47 
	tgpoöãr
 
	td©a
);

48 (* 
	tGtkClùbﬂrdImageRe˚ivedFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

49 
	tGdkPixbuf
 *
	tpixbuf
,

50 
	tgpoöãr
 
	td©a
);

51 (* 
	tGtkClùbﬂrdURIRe˚ivedFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

52 
	tgch¨
 **
	turis
,

53 
	tgpoöãr
 
	td©a
);

54 (* 
	tGtkClùbﬂrdT¨gësRe˚ivedFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

55 
	tGdkAtom
 *
	t©oms
,

56 
	tgöt
 
	tn_©oms
,

57 
	tgpoöãr
 
	td©a
);

63 (* 
	tGtkClùbﬂrdGëFunc
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

64 
	tGtkSñe˘i⁄D©a
 *
	t£À˘i⁄_d©a
,

65 
	tguöt
 
	töfo
,

66 
	tgpoöãr
 
	tu£r_d©a_‹_ow√r
);

67 (* 
	tGtkClùbﬂrdCÀ¨Func
Ë(
	tGtkClùbﬂrd
 *
	t˛ùbﬂrd
,

68 
	tgpoöãr
 
	tu£r_d©a_‹_ow√r
);

70 
GTy≥
 
	$gtk_˛ùbﬂrd_gë_ty≥
 (Ë
G_GNUC_CONST
;

72 
GtkClùbﬂrd
 *
	`gtk_˛ùbﬂrd_gë_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

73 
GdkAtom
 
£À˘i⁄
);

74 #i‚de‡
GDK_MULTIHEAD_SAFE


75 
GtkClùbﬂrd
 *
	`gtk_˛ùbﬂrd_gë
 (
GdkAtom
 
£À˘i⁄
);

78 
GdkDi•œy
 *
	`gtk_˛ùbﬂrd_gë_di•œy
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

81 
gboﬁón
 
	`gtk_˛ùbﬂrd_£t_wôh_d©a
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

82 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

83 
guöt
 
n_èrgës
,

84 
GtkClùbﬂrdGëFunc
 
gë_func
,

85 
GtkClùbﬂrdCÀ¨Func
 
˛ór_func
,

86 
gpoöãr
 
u£r_d©a
);

87 
gboﬁón
 
	`gtk_˛ùbﬂrd_£t_wôh_ow√r
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

88 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

89 
guöt
 
n_èrgës
,

90 
GtkClùbﬂrdGëFunc
 
gë_func
,

91 
GtkClùbﬂrdCÀ¨Func
 
˛ór_func
,

92 
GObje˘
 *
ow√r
);

93 
GObje˘
 *
	`gtk_˛ùbﬂrd_gë_ow√r
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

94 
	`gtk_˛ùbﬂrd_˛ór
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

95 
	`gtk_˛ùbﬂrd_£t_ãxt
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

96 c⁄° 
gch¨
 *
ãxt
,

97 
göt
 
Àn
);

98 
	`gtk_˛ùbﬂrd_£t_image
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

99 
GdkPixbuf
 *
pixbuf
);

101 
	`gtk_˛ùbﬂrd_ªque°_c⁄ã¡s
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

102 
GdkAtom
 
èrgë
,

103 
GtkClùbﬂrdRe˚ivedFunc
 
ˇŒback
,

104 
gpoöãr
 
u£r_d©a
);

105 
	`gtk_˛ùbﬂrd_ªque°_ãxt
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

106 
GtkClùbﬂrdTextRe˚ivedFunc
 
ˇŒback
,

107 
gpoöãr
 
u£r_d©a
);

108 
	`gtk_˛ùbﬂrd_ªque°_rich_ãxt
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

109 
GtkTextBuf„r
 *
buf„r
,

110 
GtkClùbﬂrdRichTextRe˚ivedFunc
 
ˇŒback
,

111 
gpoöãr
 
u£r_d©a
);

112 
	`gtk_˛ùbﬂrd_ªque°_image
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

113 
GtkClùbﬂrdImageRe˚ivedFunc
 
ˇŒback
,

114 
gpoöãr
 
u£r_d©a
);

115 
	`gtk_˛ùbﬂrd_ªque°_uris
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

116 
GtkClùbﬂrdURIRe˚ivedFunc
 
ˇŒback
,

117 
gpoöãr
 
u£r_d©a
);

118 
	`gtk_˛ùbﬂrd_ªque°_èrgës
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

119 
GtkClùbﬂrdT¨gësRe˚ivedFunc
 
ˇŒback
,

120 
gpoöãr
 
u£r_d©a
);

122 
GtkSñe˘i⁄D©a
 *
	`gtk_˛ùbﬂrd_waô_f‹_c⁄ã¡s
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

123 
GdkAtom
 
èrgë
);

124 
gch¨
 * 
	`gtk_˛ùbﬂrd_waô_f‹_ãxt
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

125 
guöt8
 * 
	`gtk_˛ùbﬂrd_waô_f‹_rich_ãxt
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

126 
GtkTextBuf„r
 *
buf„r
,

127 
GdkAtom
 *
f‹m©
,

128 
gsize
 *
Àngth
);

129 
GdkPixbuf
 * 
	`gtk_˛ùbﬂrd_waô_f‹_image
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

130 
gch¨
 ** 
	`gtk_˛ùbﬂrd_waô_f‹_uris
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

131 
gboﬁón
 
	`gtk_˛ùbﬂrd_waô_f‹_èrgës
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

132 
GdkAtom
 **
èrgës
,

133 
göt
 *
n_èrgës
);

135 
gboﬁón
 
	`gtk_˛ùbﬂrd_waô_is_ãxt_avaûabÀ
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

136 
gboﬁón
 
	`gtk_˛ùbﬂrd_waô_is_rich_ãxt_avaûabÀ
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

137 
GtkTextBuf„r
 *
buf„r
);

138 
gboﬁón
 
	`gtk_˛ùbﬂrd_waô_is_image_avaûabÀ
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

139 
gboﬁón
 
	`gtk_˛ùbﬂrd_waô_is_uris_avaûabÀ
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

140 
gboﬁón
 
	`gtk_˛ùbﬂrd_waô_is_èrgë_avaûabÀ
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

141 
GdkAtom
 
èrgë
);

144 
	`gtk_˛ùbﬂrd_£t_ˇn_°‹e
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
,

145 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

146 
göt
 
n_èrgës
);

148 
	`gtk_˛ùbﬂrd_°‹e
 (
GtkClùbﬂrd
 *
˛ùbﬂrd
);

151 
	`_gtk_˛ùbﬂrd_h™dÀ_evít
 (
GdkEvítOw√rCh™ge
 *
evít
);

153 
	`_gtk_˛ùbﬂrd_°‹e_Æl
 ();

155 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkclist.h

28 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_CLIST_C__
Ë|| deföed (
__GTK_CTREE_C__
)

30 #i‚de‡
__GTK_CLIST_H__


31 
	#__GTK_CLIST_H__


	)

34 
	~<gtk/gtksig«l.h
>

35 
	~<gtk/gtkÆignmít.h
>

36 
	~<gtk/gtkœbñ.h
>

37 
	~<gtk/gtkbuâ⁄.h
>

38 
	~<gtk/gtkhs¸ﬁlb¨.h
>

39 
	~<gtk/gtkvs¸ﬁlb¨.h
>

42 
G_BEGIN_DECLS


47 
	mGTK_CLIST_IN_DRAG
 = 1 << 0,

48 
	mGTK_CLIST_ROW_HEIGHT_SET
 = 1 << 1,

49 
	mGTK_CLIST_SHOW_TITLES
 = 1 << 2,

51 
	mGTK_CLIST_ADD_MODE
 = 1 << 4,

52 
	mGTK_CLIST_AUTO_SORT
 = 1 << 5,

53 
	mGTK_CLIST_AUTO_RESIZE_BLOCKED
 = 1 << 6,

54 
	mGTK_CLIST_REORDERABLE
 = 1 << 7,

55 
	mGTK_CLIST_USE_DRAG_ICONS
 = 1 << 8,

56 
	mGTK_CLIST_DRAW_DRAG_LINE
 = 1 << 9,

57 
	mGTK_CLIST_DRAW_DRAG_RECT
 = 1 << 10

63 
	mGTK_CELL_EMPTY
,

64 
	mGTK_CELL_TEXT
,

65 
	mGTK_CELL_PIXMAP
,

66 
	mGTK_CELL_PIXTEXT
,

67 
	mGTK_CELL_WIDGET


68 } 
	tGtkCñlTy≥
;

72 
	mGTK_CLIST_DRAG_NONE
,

73 
	mGTK_CLIST_DRAG_BEFORE
,

74 
	mGTK_CLIST_DRAG_INTO
,

75 
	mGTK_CLIST_DRAG_AFTER


76 } 
	tGtkCLi°DøgPos
;

80 
	mGTK_BUTTON_IGNORED
 = 0,

81 
	mGTK_BUTTON_SELECTS
 = 1 << 0,

82 
	mGTK_BUTTON_DRAGS
 = 1 << 1,

83 
	mGTK_BUTTON_EXPANDS
 = 1 << 2

84 } 
	tGtkBuâ⁄A˘i⁄
;

86 
	#GTK_TYPE_CLIST
 (
	`gtk_˛i°_gë_ty≥
 ())

	)

87 
	#GTK_CLIST
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CLIST
, 
GtkCLi°
))

	)

88 
	#GTK_CLIST_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CLIST
, 
GtkCLi°Cœss
))

	)

89 
	#GTK_IS_CLIST
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CLIST
))

	)

90 
	#GTK_IS_CLIST_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CLIST
))

	)

91 
	#GTK_CLIST_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CLIST
, 
GtkCLi°Cœss
))

	)

94 
	#GTK_CLIST_FLAGS
(
˛i°
Ë(
	`GTK_CLIST
 (˛i°)->
Êags
)

	)

95 
	#GTK_CLIST_SET_FLAG
(
˛i°
,
Êag
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë|(
GTK_
 ## fœg))

	)

96 
	#GTK_CLIST_UNSET_FLAG
(
˛i°
,
Êag
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë&~(
GTK_
 ## fœg))

	)

98 
	#GTK_CLIST_IN_DRAG
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_IN_DRAG
)

	)

99 
	#GTK_CLIST_ROW_HEIGHT_SET
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_ROW_HEIGHT_SET
)

	)

100 
	#GTK_CLIST_SHOW_TITLES
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_SHOW_TITLES
)

	)

101 
	#GTK_CLIST_ADD_MODE
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_ADD_MODE
)

	)

102 
	#GTK_CLIST_AUTO_SORT
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_AUTO_SORT
)

	)

103 
	#GTK_CLIST_AUTO_RESIZE_BLOCKED
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_AUTO_RESIZE_BLOCKED
)

	)

104 
	#GTK_CLIST_REORDERABLE
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_REORDERABLE
)

	)

105 
	#GTK_CLIST_USE_DRAG_ICONS
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_USE_DRAG_ICONS
)

	)

106 
	#GTK_CLIST_DRAW_DRAG_LINE
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_DRAW_DRAG_LINE
)

	)

107 
	#GTK_CLIST_DRAW_DRAG_RECT
(
˛i°
Ë(
	`GTK_CLIST_FLAGS
 (˛i°Ë& 
GTK_CLIST_DRAW_DRAG_RECT
)

	)

109 
	#GTK_CLIST_ROW
(
_gli°_
Ë((
GtkCLi°Row
 *)((_gli°_)->
d©a
))

	)

112 
	#GTK_CELL_TEXT
(
˚Œ
Ë(((
GtkCñlText
 *Ë&(˚Œ)))

	)

113 
	#GTK_CELL_PIXMAP
(
˚Œ
Ë(((
GtkCñlPixm≠
 *Ë&(˚Œ)))

	)

114 
	#GTK_CELL_PIXTEXT
(
˚Œ
Ë(((
GtkCñlPixText
 *Ë&(˚Œ)))

	)

115 
	#GTK_CELL_WIDGET
(
˚Œ
Ë(((
GtkCñlWidgë
 *Ë&(˚Œ)))

	)

117 
_GtkCLi°
 
	tGtkCLi°
;

118 
_GtkCLi°Cœss
 
	tGtkCLi°Cœss
;

119 
_GtkCLi°Cﬁumn
 
	tGtkCLi°Cﬁumn
;

120 
_GtkCLi°Row
 
	tGtkCLi°Row
;

122 
_GtkCñl
 
	tGtkCñl
;

123 
_GtkCñlText
 
	tGtkCñlText
;

124 
_GtkCñlPixm≠
 
	tGtkCñlPixm≠
;

125 
_GtkCñlPixText
 
	tGtkCñlPixText
;

126 
_GtkCñlWidgë
 
	tGtkCñlWidgë
;

128 
	$göt
 (*
	tGtkCLi°Com∑ªFunc
Ë(
	tGtkCLi°
 *
	t˛i°
,

129 
	tgc⁄°poöãr
 
	t±r1
,

130 
	tgc⁄°poöãr
 
	t±r2
);

132 
_GtkCLi°CñlInfo
 
	tGtkCLi°CñlInfo
;

133 
_GtkCLi°De°Info
 
	tGtkCLi°De°Info
;

135 
	s_GtkCLi°CñlInfo


137 
göt
 
row
;

138 
göt
 
cﬁumn
;

141 
	s_GtkCLi°De°Info


143 
GtkCLi°CñlInfo
 
˚Œ
;

144 
GtkCLi°DøgPos
 
ö£π_pos
;

147 
	s_GtkCLi°


149 
GtkC⁄èöî
 
c⁄èöî
;

151 
guöt16
 
Êags
;

153 
gpoöãr
 
ª£rved1
;

154 
gpoöãr
 
ª£rved2
;

156 
guöt
 
‰ìze_cou¡
;

160 
GdkRe˘™gÀ
 
öã∫Æ_Æloˇti⁄
;

163 
göt
 
rows
;

164 
göt
 
row_height
;

165 
GLi°
 *
row_li°
;

166 
GLi°
 *
row_li°_íd
;

169 
göt
 
cﬁumns
;

170 
GdkRe˘™gÀ
 
cﬁumn_tôÀ_¨ó
;

171 
GdkWödow
 *
tôÀ_wödow
;

174 
GtkCLi°Cﬁumn
 *
cﬁumn
;

178 
GdkWödow
 *
˛i°_wödow
;

179 
göt
 
˛i°_wödow_width
;

180 
göt
 
˛i°_wödow_height
;

183 
göt
 
hoff£t
;

184 
göt
 
voff£t
;

187 
GtkShadowTy≥
 
shadow_ty≥
;

190 
GtkSñe˘i⁄Mode
 
£À˘i⁄_mode
;

193 
GLi°
 *
£À˘i⁄
;

194 
GLi°
 *
£À˘i⁄_íd
;

196 
GLi°
 *
undo_£À˘i⁄
;

197 
GLi°
 *
undo_un£À˘i⁄
;

198 
göt
 
undo_™ch‹
;

201 
guöt8
 
buâ⁄_a˘i⁄s
[5];

203 
guöt8
 
døg_buâ⁄
;

206 
GtkCLi°CñlInfo
 
˛ick_˚Œ
;

209 
GtkAdju°mít
 *
hadju°mít
;

210 
GtkAdju°mít
 *
vadju°mít
;

213 
GdkGC
 *
x‹_gc
;

216 
GdkGC
 *
fg_gc
;

217 
GdkGC
 *
bg_gc
;

220 
GdkCurs‹
 *
curs‹_døg
;

223 
göt
 
x_døg
;

226 
göt
 
focus_row
;

228 
göt
 
focus_hódî_cﬁumn
;

231 
göt
 
™ch‹
;

232 
GtkSèãTy≥
 
™ch‹_°©e
;

233 
göt
 
døg_pos
;

234 
göt
 
htimî
;

235 
göt
 
vtimî
;

237 
GtkS‹tTy≥
 
s‹t_ty≥
;

238 
GtkCLi°Com∑ªFunc
 
com∑ª
;

239 
göt
 
s‹t_cﬁumn
;

241 
göt
 
døg_highlight_row
;

242 
GtkCLi°DøgPos
 
døg_highlight_pos
;

245 
	s_GtkCLi°Cœss


247 
GtkC⁄èöîCœss
 
∑ª¡_˛ass
;

249 (*
£t_s¸ﬁl_adju°míts
Ë(
GtkCLi°
 *
˛i°
,

250 
GtkAdju°mít
 *
hadju°mít
,

251 
GtkAdju°mít
 *
vadju°mít
);

252 (*
ª‰esh
Ë(
GtkCLi°
 *
˛i°
);

253 (*
£À˘_row
Ë(
GtkCLi°
 *
˛i°
,

254 
göt
 
row
,

255 
göt
 
cﬁumn
,

256 
GdkEvít
 *
evít
);

257 (*
un£À˘_row
Ë(
GtkCLi°
 *
˛i°
,

258 
göt
 
row
,

259 
göt
 
cﬁumn
,

260 
GdkEvít
 *
evít
);

261 (*
row_move
Ë(
GtkCLi°
 *
˛i°
,

262 
göt
 
sour˚_row
,

263 
göt
 
de°_row
);

264 (*
˛ick_cﬁumn
Ë(
GtkCLi°
 *
˛i°
,

265 
göt
 
cﬁumn
);

266 (*
ªsize_cﬁumn
Ë(
GtkCLi°
 *
˛i°
,

267 
göt
 
cﬁumn
,

268 
göt
 
width
);

269 (*
toggÀ_focus_row
Ë(
GtkCLi°
 *
˛i°
);

270 (*
£À˘_Æl
Ë(
GtkCLi°
 *
˛i°
);

271 (*
un£À˘_Æl
Ë(
GtkCLi°
 *
˛i°
);

272 (*
undo_£À˘i⁄
Ë(
GtkCLi°
 *
˛i°
);

273 (*
°¨t_£À˘i⁄
Ë(
GtkCLi°
 *
˛i°
);

274 (*
íd_£À˘i⁄
Ë(
GtkCLi°
 *
˛i°
);

275 (*
exãnd_£À˘i⁄
Ë(
GtkCLi°
 *
˛i°
,

276 
GtkS¸ﬁlTy≥
 
s¸ﬁl_ty≥
,

277 
gÊﬂt
 
posôi⁄
,

278 
gboﬁón
 
auto_°¨t_£À˘i⁄
);

279 (*
s¸ﬁl_h‹iz⁄èl
Ë(
GtkCLi°
 *
˛i°
,

280 
GtkS¸ﬁlTy≥
 
s¸ﬁl_ty≥
,

281 
gÊﬂt
 
posôi⁄
);

282 (*
s¸ﬁl_vîtiˇl
Ë(
GtkCLi°
 *
˛i°
,

283 
GtkS¸ﬁlTy≥
 
s¸ﬁl_ty≥
,

284 
gÊﬂt
 
posôi⁄
);

285 (*
toggÀ_add_mode
Ë(
GtkCLi°
 *
˛i°
);

286 (*
ab‹t_cﬁumn_ªsize
Ë(
GtkCLi°
 *
˛i°
);

287 (*
ªsync_£À˘i⁄
Ë(
GtkCLi°
 *
˛i°
,

288 
GdkEvít
 *
evít
);

289 
GLi°
* (*
£À˘i⁄_föd
Ë(
GtkCLi°
 *
˛i°
,

290 
göt
 
row_numbî
,

291 
GLi°
 *
row_li°_ñemít
);

292 (*
døw_row
Ë(
GtkCLi°
 *
˛i°
,

293 
GdkRe˘™gÀ
 *
¨ó
,

294 
göt
 
row
,

295 
GtkCLi°Row
 *
˛i°_row
);

296 (*
døw_døg_highlight
Ë(
GtkCLi°
 *
˛i°
,

297 
GtkCLi°Row
 *
èrgë_row
,

298 
göt
 
èrgë_row_numbî
,

299 
GtkCLi°DøgPos
 
døg_pos
);

300 (*
˛ór
Ë(
GtkCLi°
 *
˛i°
);

301 (*
Áke_un£À˘_Æl
Ë(
GtkCLi°
 *
˛i°
,

302 
göt
 
row
);

303 (*
s‹t_li°
Ë(
GtkCLi°
 *
˛i°
);

304 
	`göt
 (*
ö£π_row
Ë(
GtkCLi°
 *
˛i°
,

305 
göt
 
row
,

306 
gch¨
 *
ãxt
[]);

307 (*
ªmove_row
Ë(
GtkCLi°
 *
˛i°
,

308 
göt
 
row
);

309 (*
£t_˚Œ_c⁄ã¡s
Ë(
GtkCLi°
 *
˛i°
,

310 
GtkCLi°Row
 *
˛i°_row
,

311 
göt
 
cﬁumn
,

312 
GtkCñlTy≥
 
ty≥
,

313 c⁄° 
gch¨
 *
ãxt
,

314 
guöt8
 
•acög
,

315 
GdkPixm≠
 *
pixm≠
,

316 
GdkBôm≠
 *
mask
);

317 (*
˚Œ_size_ªque°
Ë(
GtkCLi°
 *
˛i°
,

318 
GtkCLi°Row
 *
˛i°_row
,

319 
göt
 
cﬁumn
,

320 
GtkRequisôi⁄
 *
ªquisôi⁄
);

324 
	s_GtkCLi°Cﬁumn


326 
gch¨
 *
tôÀ
;

327 
GdkRe˘™gÀ
 
¨ó
;

329 
GtkWidgë
 *
buâ⁄
;

330 
GdkWödow
 *
wödow
;

332 
göt
 
width
;

333 
göt
 
mö_width
;

334 
göt
 
max_width
;

335 
GtkJu°ifiˇti⁄
 
ju°ifiˇti⁄
;

337 
guöt
 
visibÀ
 : 1;

338 
guöt
 
width_£t
 : 1;

339 
guöt
 
ªsizóbÀ
 : 1;

340 
guöt
 
auto_ªsize
 : 1;

341 
guöt
 
buâ⁄_∑ssive
 : 1;

344 
	s_GtkCLi°Row


346 
GtkCñl
 *
˚Œ
;

347 
GtkSèãTy≥
 
°©e
;

349 
GdkCﬁ‹
 
f‹eground
;

350 
GdkCﬁ‹
 
background
;

352 
GtkStyÀ
 *
°yÀ
;

354 
gpoöãr
 
d©a
;

355 
GDe°royNŸify
 
de°roy
;

357 
guöt
 
fg_£t
 : 1;

358 
guöt
 
bg_£t
 : 1;

359 
guöt
 
£À˘abÀ
 : 1;

363 
	s_GtkCñlText


365 
GtkCñlTy≥
 
ty≥
;

367 
göt16
 
vîtiˇl
;

368 
göt16
 
h‹iz⁄èl
;

370 
GtkStyÀ
 *
°yÀ
;

372 
gch¨
 *
ãxt
;

375 
	s_GtkCñlPixm≠


377 
GtkCñlTy≥
 
ty≥
;

379 
göt16
 
vîtiˇl
;

380 
göt16
 
h‹iz⁄èl
;

382 
GtkStyÀ
 *
°yÀ
;

384 
GdkPixm≠
 *
pixm≠
;

385 
GdkBôm≠
 *
mask
;

388 
	s_GtkCñlPixText


390 
GtkCñlTy≥
 
ty≥
;

392 
göt16
 
vîtiˇl
;

393 
göt16
 
h‹iz⁄èl
;

395 
GtkStyÀ
 *
°yÀ
;

397 
gch¨
 *
ãxt
;

398 
guöt8
 
•acög
;

399 
GdkPixm≠
 *
pixm≠
;

400 
GdkBôm≠
 *
mask
;

403 
	s_GtkCñlWidgë


405 
GtkCñlTy≥
 
ty≥
;

407 
göt16
 
vîtiˇl
;

408 
göt16
 
h‹iz⁄èl
;

410 
GtkStyÀ
 *
°yÀ
;

412 
GtkWidgë
 *
widgë
;

415 
	s_GtkCñl


417 
GtkCñlTy≥
 
ty≥
;

419 
göt16
 
vîtiˇl
;

420 
göt16
 
h‹iz⁄èl
;

422 
GtkStyÀ
 *
°yÀ
;

425 
gch¨
 *
ãxt
;

428 
GdkPixm≠
 *
pixm≠
;

429 
GdkBôm≠
 *
mask
;

430 } 
pm
;

433 
gch¨
 *
ãxt
;

434 
guöt8
 
•acög
;

435 
GdkPixm≠
 *
pixm≠
;

436 
GdkBôm≠
 *
mask
;

437 } 
±
;

439 
GtkWidgë
 *
widgë
;

440 } 
u
;

443 
GTy≥
 
	$gtk_˛i°_gë_ty≥
 (Ë
G_GNUC_CONST
;

446 
GtkWidgë
* 
	`gtk_˛i°_√w
 (
göt
 
cﬁumns
);

447 
GtkWidgë
* 
	`gtk_˛i°_√w_wôh_tôÀs
 (
göt
 
cﬁumns
,

448 
gch¨
 *
tôÀs
[]);

451 
	`gtk_˛i°_£t_hadju°mít
 (
GtkCLi°
 *
˛i°
,

452 
GtkAdju°mít
 *
adju°mít
);

453 
	`gtk_˛i°_£t_vadju°mít
 (
GtkCLi°
 *
˛i°
,

454 
GtkAdju°mít
 *
adju°mít
);

457 
GtkAdju°mít
* 
	`gtk_˛i°_gë_hadju°mít
 (
GtkCLi°
 *
˛i°
);

458 
GtkAdju°mít
* 
	`gtk_˛i°_gë_vadju°mít
 (
GtkCLi°
 *
˛i°
);

461 
	`gtk_˛i°_£t_shadow_ty≥
 (
GtkCLi°
 *
˛i°
,

462 
GtkShadowTy≥
 
ty≥
);

465 
	`gtk_˛i°_£t_£À˘i⁄_mode
 (
GtkCLi°
 *
˛i°
,

466 
GtkSñe˘i⁄Mode
 
mode
);

469 
	`gtk_˛i°_£t_ª‹dîabÀ
 (
GtkCLi°
 *
˛i°
,

470 
gboﬁón
 
ª‹dîabÀ
);

471 
	`gtk_˛i°_£t_u£_døg_ic⁄s
 (
GtkCLi°
 *
˛i°
,

472 
gboﬁón
 
u£_ic⁄s
);

473 
	`gtk_˛i°_£t_buâ⁄_a˘i⁄s
 (
GtkCLi°
 *
˛i°
,

474 
guöt
 
buâ⁄
,

475 
guöt8
 
buâ⁄_a˘i⁄s
);

481 
	`gtk_˛i°_‰ìze
 (
GtkCLi°
 *
˛i°
);

482 
	`gtk_˛i°_thaw
 (
GtkCLi°
 *
˛i°
);

485 
	`gtk_˛i°_cﬁumn_tôÀs_show
 (
GtkCLi°
 *
˛i°
);

486 
	`gtk_˛i°_cﬁumn_tôÀs_hide
 (
GtkCLi°
 *
˛i°
);

492 
	`gtk_˛i°_cﬁumn_tôÀ_a˘ive
 (
GtkCLi°
 *
˛i°
,

493 
göt
 
cﬁumn
);

494 
	`gtk_˛i°_cﬁumn_tôÀ_∑ssive
 (
GtkCLi°
 *
˛i°
,

495 
göt
 
cﬁumn
);

496 
	`gtk_˛i°_cﬁumn_tôÀs_a˘ive
 (
GtkCLi°
 *
˛i°
);

497 
	`gtk_˛i°_cﬁumn_tôÀs_∑ssive
 (
GtkCLi°
 *
˛i°
);

500 
	`gtk_˛i°_£t_cﬁumn_tôÀ
 (
GtkCLi°
 *
˛i°
,

501 
göt
 
cﬁumn
,

502 c⁄° 
gch¨
 *
tôÀ
);

505 
gch¨
 * 
	`gtk_˛i°_gë_cﬁumn_tôÀ
 (
GtkCLi°
 *
˛i°
,

506 
göt
 
cﬁumn
);

509 
	`gtk_˛i°_£t_cﬁumn_widgë
 (
GtkCLi°
 *
˛i°
,

510 
göt
 
cﬁumn
,

511 
GtkWidgë
 *
widgë
);

514 
GtkWidgë
 * 
	`gtk_˛i°_gë_cﬁumn_widgë
 (
GtkCLi°
 *
˛i°
,

515 
göt
 
cﬁumn
);

518 
	`gtk_˛i°_£t_cﬁumn_ju°ifiˇti⁄
 (
GtkCLi°
 *
˛i°
,

519 
göt
 
cﬁumn
,

520 
GtkJu°ifiˇti⁄
 
ju°ifiˇti⁄
);

523 
	`gtk_˛i°_£t_cﬁumn_visibûôy
 (
GtkCLi°
 *
˛i°
,

524 
göt
 
cﬁumn
,

525 
gboﬁón
 
visibÀ
);

528 
	`gtk_˛i°_£t_cﬁumn_ªsizóbÀ
 (
GtkCLi°
 *
˛i°
,

529 
göt
 
cﬁumn
,

530 
gboﬁón
 
ªsizóbÀ
);

533 
	`gtk_˛i°_£t_cﬁumn_auto_ªsize
 (
GtkCLi°
 *
˛i°
,

534 
göt
 
cﬁumn
,

535 
gboﬁón
 
auto_ªsize
);

537 
göt
 
	`gtk_˛i°_cﬁumns_autosize
 (
GtkCLi°
 *
˛i°
);

540 
göt
 
	`gtk_˛i°_›timÆ_cﬁumn_width
 (
GtkCLi°
 *
˛i°
,

541 
göt
 
cﬁumn
);

547 
	`gtk_˛i°_£t_cﬁumn_width
 (
GtkCLi°
 *
˛i°
,

548 
göt
 
cﬁumn
,

549 
göt
 
width
);

552 
	`gtk_˛i°_£t_cﬁumn_mö_width
 (
GtkCLi°
 *
˛i°
,

553 
göt
 
cﬁumn
,

554 
göt
 
mö_width
);

555 
	`gtk_˛i°_£t_cﬁumn_max_width
 (
GtkCLi°
 *
˛i°
,

556 
göt
 
cﬁumn
,

557 
göt
 
max_width
);

562 
	`gtk_˛i°_£t_row_height
 (
GtkCLi°
 *
˛i°
,

563 
guöt
 
height
);

570 
	`gtk_˛i°_movëo
 (
GtkCLi°
 *
˛i°
,

571 
göt
 
row
,

572 
göt
 
cﬁumn
,

573 
gÊﬂt
 
row_Æign
,

574 
gÊﬂt
 
cﬁ_Æign
);

577 
GtkVisibûôy
 
	`gtk_˛i°_row_is_visibÀ
 (
GtkCLi°
 *
˛i°
,

578 
göt
 
row
);

581 
GtkCñlTy≥
 
	`gtk_˛i°_gë_˚Œ_ty≥
 (
GtkCLi°
 *
˛i°
,

582 
göt
 
row
,

583 
göt
 
cﬁumn
);

586 
	`gtk_˛i°_£t_ãxt
 (
GtkCLi°
 *
˛i°
,

587 
göt
 
row
,

588 
göt
 
cﬁumn
,

589 c⁄° 
gch¨
 *
ãxt
);

594 
göt
 
	`gtk_˛i°_gë_ãxt
 (
GtkCLi°
 *
˛i°
,

595 
göt
 
row
,

596 
göt
 
cﬁumn
,

597 
gch¨
 **
ãxt
);

600 
	`gtk_˛i°_£t_pixm≠
 (
GtkCLi°
 *
˛i°
,

601 
göt
 
row
,

602 
göt
 
cﬁumn
,

603 
GdkPixm≠
 *
pixm≠
,

604 
GdkBôm≠
 *
mask
);

606 
göt
 
	`gtk_˛i°_gë_pixm≠
 (
GtkCLi°
 *
˛i°
,

607 
göt
 
row
,

608 
göt
 
cﬁumn
,

609 
GdkPixm≠
 **
pixm≠
,

610 
GdkBôm≠
 **
mask
);

613 
	`gtk_˛i°_£t_pixãxt
 (
GtkCLi°
 *
˛i°
,

614 
göt
 
row
,

615 
göt
 
cﬁumn
,

616 c⁄° 
gch¨
 *
ãxt
,

617 
guöt8
 
•acög
,

618 
GdkPixm≠
 *
pixm≠
,

619 
GdkBôm≠
 *
mask
);

621 
göt
 
	`gtk_˛i°_gë_pixãxt
 (
GtkCLi°
 *
˛i°
,

622 
göt
 
row
,

623 
göt
 
cﬁumn
,

624 
gch¨
 **
ãxt
,

625 
guöt8
 *
•acög
,

626 
GdkPixm≠
 **
pixm≠
,

627 
GdkBôm≠
 **
mask
);

632 
	`gtk_˛i°_£t_f‹eground
 (
GtkCLi°
 *
˛i°
,

633 
göt
 
row
,

634 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

639 
	`gtk_˛i°_£t_background
 (
GtkCLi°
 *
˛i°
,

640 
göt
 
row
,

641 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

644 
	`gtk_˛i°_£t_˚Œ_°yÀ
 (
GtkCLi°
 *
˛i°
,

645 
göt
 
row
,

646 
göt
 
cﬁumn
,

647 
GtkStyÀ
 *
°yÀ
);

649 
GtkStyÀ
 *
	`gtk_˛i°_gë_˚Œ_°yÀ
 (
GtkCLi°
 *
˛i°
,

650 
göt
 
row
,

651 
göt
 
cﬁumn
);

653 
	`gtk_˛i°_£t_row_°yÀ
 (
GtkCLi°
 *
˛i°
,

654 
göt
 
row
,

655 
GtkStyÀ
 *
°yÀ
);

657 
GtkStyÀ
 *
	`gtk_˛i°_gë_row_°yÀ
 (
GtkCLi°
 *
˛i°
,

658 
göt
 
row
);

664 
	`gtk_˛i°_£t_shi·
 (
GtkCLi°
 *
˛i°
,

665 
göt
 
row
,

666 
göt
 
cﬁumn
,

667 
göt
 
vîtiˇl
,

668 
göt
 
h‹iz⁄èl
);

671 
	`gtk_˛i°_£t_£À˘abÀ
 (
GtkCLi°
 *
˛i°
,

672 
göt
 
row
,

673 
gboﬁón
 
£À˘abÀ
);

674 
gboﬁón
 
	`gtk_˛i°_gë_£À˘abÀ
 (
GtkCLi°
 *
˛i°
,

675 
göt
 
row
);

680 
göt
 
	`gtk_˛i°_¥ïíd
 (
GtkCLi°
 *
˛i°
,

681 
gch¨
 *
ãxt
[]);

682 
göt
 
	`gtk_˛i°_≠≥nd
 (
GtkCLi°
 *
˛i°
,

683 
gch¨
 *
ãxt
[]);

688 
göt
 
	`gtk_˛i°_ö£π
 (
GtkCLi°
 *
˛i°
,

689 
göt
 
row
,

690 
gch¨
 *
ãxt
[]);

693 
	`gtk_˛i°_ªmove
 (
GtkCLi°
 *
˛i°
,

694 
göt
 
row
);

697 
	`gtk_˛i°_£t_row_d©a
 (
GtkCLi°
 *
˛i°
,

698 
göt
 
row
,

699 
gpoöãr
 
d©a
);

702 
	`gtk_˛i°_£t_row_d©a_fuŒ
 (
GtkCLi°
 *
˛i°
,

703 
göt
 
row
,

704 
gpoöãr
 
d©a
,

705 
GDe°royNŸify
 
de°roy
);

708 
gpoöãr
 
	`gtk_˛i°_gë_row_d©a
 (
GtkCLi°
 *
˛i°
,

709 
göt
 
row
);

714 
göt
 
	`gtk_˛i°_föd_row_‰om_d©a
 (
GtkCLi°
 *
˛i°
,

715 
gpoöãr
 
d©a
);

718 
	`gtk_˛i°_£À˘_row
 (
GtkCLi°
 *
˛i°
,

719 
göt
 
row
,

720 
göt
 
cﬁumn
);

723 
	`gtk_˛i°_un£À˘_row
 (
GtkCLi°
 *
˛i°
,

724 
göt
 
row
,

725 
göt
 
cﬁumn
);

728 
	`gtk_˛i°_undo_£À˘i⁄
 (
GtkCLi°
 *
˛i°
);

733 
	`gtk_˛i°_˛ór
 (
GtkCLi°
 *
˛i°
);

739 
göt
 
	`gtk_˛i°_gë_£À˘i⁄_öfo
 (
GtkCLi°
 *
˛i°
,

740 
göt
 
x
,

741 
göt
 
y
,

742 
göt
 *
row
,

743 
göt
 *
cﬁumn
);

746 
	`gtk_˛i°_£À˘_Æl
 (
GtkCLi°
 *
˛i°
);

749 
	`gtk_˛i°_un£À˘_Æl
 (
GtkCLi°
 *
˛i°
);

752 
	`gtk_˛i°_sw≠_rows
 (
GtkCLi°
 *
˛i°
,

753 
göt
 
row1
,

754 
göt
 
row2
);

757 
	`gtk_˛i°_row_move
 (
GtkCLi°
 *
˛i°
,

758 
göt
 
sour˚_row
,

759 
göt
 
de°_row
);

762 
	`gtk_˛i°_£t_com∑ª_func
 (
GtkCLi°
 *
˛i°
,

763 
GtkCLi°Com∑ªFunc
 
cmp_func
);

766 
	`gtk_˛i°_£t_s‹t_cﬁumn
 (
GtkCLi°
 *
˛i°
,

767 
göt
 
cﬁumn
);

770 
	`gtk_˛i°_£t_s‹t_ty≥
 (
GtkCLi°
 *
˛i°
,

771 
GtkS‹tTy≥
 
s‹t_ty≥
);

774 
	`gtk_˛i°_s‹t
 (
GtkCLi°
 *
˛i°
);

777 
	`gtk_˛i°_£t_auto_s‹t
 (
GtkCLi°
 *
˛i°
,

778 
gboﬁón
 
auto_s‹t
);

782 
P™goLayout
 *
	`_gtk_˛i°_¸óã_˚Œ_œyout
 (
GtkCLi°
 *
˛i°
,

783 
GtkCLi°Row
 *
˛i°_row
,

784 
göt
 
cﬁumn
);

787 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcolorbutton.h

32 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

36 #i‚de‡
__GTK_COLOR_BUTTON_H__


37 
	#__GTK_COLOR_BUTTON_H__


	)

40 
	~<gtk/gtkbuâ⁄.h
>

42 
	gG_BEGIN_DECLS


51 
	#GTK_TYPE_COLOR_BUTTON
 (
	`gtk_cﬁ‹_buâ⁄_gë_ty≥
 ())

	)

52 
	#GTK_COLOR_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_COLOR_BUTTON
, 
GtkCﬁ‹Buâ⁄
))

	)

53 
	#GTK_COLOR_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_COLOR_BUTTON
, 
GtkCﬁ‹Buâ⁄Cœss
))

	)

54 
	#GTK_IS_COLOR_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_COLOR_BUTTON
))

	)

55 
	#GTK_IS_COLOR_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_COLOR_BUTTON
))

	)

56 
	#GTK_COLOR_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_COLOR_BUTTON
, 
GtkCﬁ‹Buâ⁄Cœss
))

	)

58 
_GtkCﬁ‹Buâ⁄
 
	tGtkCﬁ‹Buâ⁄
;

59 
_GtkCﬁ‹Buâ⁄Cœss
 
	tGtkCﬁ‹Buâ⁄Cœss
;

60 
_GtkCﬁ‹Buâ⁄Priv©e
 
	tGtkCﬁ‹Buâ⁄Priv©e
;

62 
	s_GtkCﬁ‹Buâ⁄
 {

63 
GtkBuâ⁄
 
	mbuâ⁄
;

67 
GtkCﬁ‹Buâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

70 
	s_GtkCﬁ‹Buâ⁄Cœss
 {

71 
GtkBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

73 (* 
	mcﬁ‹_£t
Ë(
GtkCﬁ‹Buâ⁄
 *
	m˝
);

76 (*
	m_gtk_ª£rved1
) ();

77 (*
	m_gtk_ª£rved2
) ();

78 (*
	m_gtk_ª£rved3
) ();

79 (*
	m_gtk_ª£rved4
) ();

83 
GTy≥
 
	$gtk_cﬁ‹_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

84 
GtkWidgë
 *
	`gtk_cﬁ‹_buâ⁄_√w
 ();

85 
GtkWidgë
 *
	`gtk_cﬁ‹_buâ⁄_√w_wôh_cﬁ‹
 (c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

86 
	`gtk_cﬁ‹_buâ⁄_£t_cﬁ‹
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
,

87 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

88 
	`gtk_cﬁ‹_buâ⁄_£t_Æpha
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
,

89 
guöt16
 
Æpha
);

90 
	`gtk_cﬁ‹_buâ⁄_gë_cﬁ‹
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
,

91 
GdkCﬁ‹
 *
cﬁ‹
);

92 
guöt16
 
	`gtk_cﬁ‹_buâ⁄_gë_Æpha
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
);

93 
	`gtk_cﬁ‹_buâ⁄_£t_u£_Æpha
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
,

94 
gboﬁón
 
u£_Æpha
);

95 
gboﬁón
 
	`gtk_cﬁ‹_buâ⁄_gë_u£_Æpha
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
);

96 
	`gtk_cﬁ‹_buâ⁄_£t_tôÀ
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
,

97 c⁄° 
gch¨
 *
tôÀ
);

98 
G_CONST_RETURN
 
gch¨
 *
	`gtk_cﬁ‹_buâ⁄_gë_tôÀ
 (
GtkCﬁ‹Buâ⁄
 *
cﬁ‹_buâ⁄
);

101 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcolorsel.h

28 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

32 #i‚de‡
__GTK_COLOR_SELECTION_H__


33 
	#__GTK_COLOR_SELECTION_H__


	)

35 
	~<gtk/gtkdülog.h
>

36 
	~<gtk/gtkvbox.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_COLOR_SELECTION
 (
	`gtk_cﬁ‹_£À˘i⁄_gë_ty≥
 ())

	)

41 
	#GTK_COLOR_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_COLOR_SELECTION
, 
GtkCﬁ‹Sñe˘i⁄
))

	)

42 
	#GTK_COLOR_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_COLOR_SELECTION
, 
GtkCﬁ‹Sñe˘i⁄Cœss
))

	)

43 
	#GTK_IS_COLOR_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_COLOR_SELECTION
))

	)

44 
	#GTK_IS_COLOR_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_COLOR_SELECTION
))

	)

45 
	#GTK_COLOR_SELECTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_COLOR_SELECTION
, 
GtkCﬁ‹Sñe˘i⁄Cœss
))

	)

48 
_GtkCﬁ‹Sñe˘i⁄
 
	tGtkCﬁ‹Sñe˘i⁄
;

49 
_GtkCﬁ‹Sñe˘i⁄Cœss
 
	tGtkCﬁ‹Sñe˘i⁄Cœss
;

52 (* 
	tGtkCﬁ‹Sñe˘i⁄Ch™gePÆëãFunc
Ë(c⁄° 
	tGdkCﬁ‹
 *
	tcﬁ‹s
,

53 
	tgöt
 
	tn_cﬁ‹s
);

54 (* 
	tGtkCﬁ‹Sñe˘i⁄Ch™gePÆëãWôhS¸ìnFunc
Ë(
	tGdkS¸ìn
 *
	ts¸ìn
,

55 c⁄° 
	tGdkCﬁ‹
 *
	tcﬁ‹s
,

56 
	tgöt
 
	tn_cﬁ‹s
);

58 
	s_GtkCﬁ‹Sñe˘i⁄


60 
GtkVBox
 
∑ª¡_ö°™˚
;

63 
gpoöãr
 
	`GSEAL
 (
¥iv©e_d©a
);

66 
	s_GtkCﬁ‹Sñe˘i⁄Cœss


68 
GtkVBoxCœss
 
∑ª¡_˛ass
;

70 (*
cﬁ‹_ch™ged
Ë(
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹_£À˘i⁄
);

73 (*
_gtk_ª£rved1
) ();

74 (*
_gtk_ª£rved2
) ();

75 (*
_gtk_ª£rved3
) ();

76 (*
_gtk_ª£rved4
) ();

82 
GTy≥
 
	$gtk_cﬁ‹_£À˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

83 
GtkWidgë
 *
	`gtk_cﬁ‹_£À˘i⁄_√w
 ();

84 
gboﬁón
 
	`gtk_cﬁ‹_£À˘i⁄_gë_has_›acôy_c⁄åﬁ
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
);

85 
	`gtk_cﬁ‹_£À˘i⁄_£t_has_›acôy_c⁄åﬁ
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

86 
gboﬁón
 
has_›acôy
);

87 
gboﬁón
 
	`gtk_cﬁ‹_£À˘i⁄_gë_has_∑Àâe
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
);

88 
	`gtk_cﬁ‹_£À˘i⁄_£t_has_∑Àâe
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

89 
gboﬁón
 
has_∑Àâe
);

92 
	`gtk_cﬁ‹_£À˘i⁄_£t_cuºít_cﬁ‹
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

93 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

94 
	`gtk_cﬁ‹_£À˘i⁄_£t_cuºít_Æpha
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

95 
guöt16
 
Æpha
);

96 
	`gtk_cﬁ‹_£À˘i⁄_gë_cuºít_cﬁ‹
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

97 
GdkCﬁ‹
 *
cﬁ‹
);

98 
guöt16
 
	`gtk_cﬁ‹_£À˘i⁄_gë_cuºít_Æpha
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
);

99 
	`gtk_cﬁ‹_£À˘i⁄_£t_¥evious_cﬁ‹
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

100 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

101 
	`gtk_cﬁ‹_£À˘i⁄_£t_¥evious_Æpha
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

102 
guöt16
 
Æpha
);

103 
	`gtk_cﬁ‹_£À˘i⁄_gë_¥evious_cﬁ‹
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

104 
GdkCﬁ‹
 *
cﬁ‹
);

105 
guöt16
 
	`gtk_cﬁ‹_£À˘i⁄_gë_¥evious_Æpha
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
);

107 
gboﬁón
 
	`gtk_cﬁ‹_£À˘i⁄_is_adju°ög
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
);

109 
gboﬁón
 
	`gtk_cﬁ‹_£À˘i⁄_∑Àâe_‰om_°rög
 (c⁄° 
gch¨
 *
°r
,

110 
GdkCﬁ‹
 **
cﬁ‹s
,

111 
göt
 *
n_cﬁ‹s
);

112 
gch¨
* 
	`gtk_cﬁ‹_£À˘i⁄_∑Àâe_to_°rög
 (c⁄° 
GdkCﬁ‹
 *
cﬁ‹s
,

113 
göt
 
n_cﬁ‹s
);

115 #i‚de‡
GTK_DISABLE_DEPRECATED


116 #i‚de‡
GDK_MULTIHEAD_SAFE


117 
GtkCﬁ‹Sñe˘i⁄Ch™gePÆëãFunc
 
	`gtk_cﬁ‹_£À˘i⁄_£t_ch™ge_∑Àâe_hook
 (GtkCﬁ‹Sñe˘i⁄Ch™gePÆëãFun¯
func
);

121 
GtkCﬁ‹Sñe˘i⁄Ch™gePÆëãWôhS¸ìnFunc
 
	`gtk_cﬁ‹_£À˘i⁄_£t_ch™ge_∑Àâe_wôh_s¸ìn_hook
 (GtkCﬁ‹Sñe˘i⁄Ch™gePÆëãWôhS¸ìnFun¯
func
);

123 #i‚de‡
GTK_DISABLE_DEPRECATED


125 
	`gtk_cﬁ‹_£À˘i⁄_£t_cﬁ‹
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

126 
gdoubÀ
 *
cﬁ‹
);

127 
	`gtk_cﬁ‹_£À˘i⁄_gë_cﬁ‹
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

128 
gdoubÀ
 *
cﬁ‹
);

129 
	`gtk_cﬁ‹_£À˘i⁄_£t_upd©e_pﬁicy
 (
GtkCﬁ‹Sñe˘i⁄
 *
cﬁ‹£l
,

130 
GtkUpd©eTy≥
 
pﬁicy
);

133 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcolorseldialog.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_COLOR_SELECTION_DIALOG_H__


32 
	#__GTK_COLOR_SELECTION_DIALOG_H__


	)

34 
	~<gtk/gtkdülog.h
>

35 
	~<gtk/gtkcﬁ‹£l.h
>

36 
	~<gtk/gtkvbox.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_COLOR_SELECTION_DIALOG
 (
	`gtk_cﬁ‹_£À˘i⁄_dülog_gë_ty≥
 ())

	)

41 
	#GTK_COLOR_SELECTION_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_COLOR_SELECTION_DIALOG
, 
GtkCﬁ‹Sñe˘i⁄Dülog
))

	)

42 
	#GTK_COLOR_SELECTION_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_COLOR_SELECTION_DIALOG
, 
GtkCﬁ‹Sñe˘i⁄DülogCœss
))

	)

43 
	#GTK_IS_COLOR_SELECTION_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_COLOR_SELECTION_DIALOG
))

	)

44 
	#GTK_IS_COLOR_SELECTION_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_COLOR_SELECTION_DIALOG
))

	)

45 
	#GTK_COLOR_SELECTION_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_COLOR_SELECTION_DIALOG
, 
GtkCﬁ‹Sñe˘i⁄DülogCœss
))

	)

48 
_GtkCﬁ‹Sñe˘i⁄Dülog
 
	tGtkCﬁ‹Sñe˘i⁄Dülog
;

49 
_GtkCﬁ‹Sñe˘i⁄DülogCœss
 
	tGtkCﬁ‹Sñe˘i⁄DülogCœss
;

52 
	s_GtkCﬁ‹Sñe˘i⁄Dülog


54 
GtkDülog
 
	m∑ª¡_ö°™˚
;

56 
GtkWidgë
 *
GSEAL
 (
cﬁ‹£l
);

57 
GtkWidgë
 *
GSEAL
 (
ok_buâ⁄
);

58 
GtkWidgë
 *
GSEAL
 (
ˇn˚l_buâ⁄
);

59 
GtkWidgë
 *
GSEAL
 (
hñp_buâ⁄
);

62 
	s_GtkCﬁ‹Sñe˘i⁄DülogCœss


64 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

67 (*
	m_gtk_ª£rved1
) ();

68 (*
	m_gtk_ª£rved2
) ();

69 (*
	m_gtk_ª£rved3
) ();

70 (*
	m_gtk_ª£rved4
) ();

75 
GTy≥
 
	$gtk_cﬁ‹_£À˘i⁄_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

76 
GtkWidgë
* 
	`gtk_cﬁ‹_£À˘i⁄_dülog_√w
 (c⁄° 
gch¨
 *
tôÀ
);

77 
GtkWidgë
* 
	`gtk_cﬁ‹_£À˘i⁄_dülog_gë_cﬁ‹_£À˘i⁄
 (
GtkCﬁ‹Sñe˘i⁄Dülog
 *
cﬁ‹£l
);

80 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcombo.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_SMART_COMBO_H__


30 
	#__GTK_SMART_COMBO_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_COMBO
 (
	`gtk_combo_gë_ty≥
 ())

	)

38 
	#GTK_COMBO
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_COMBO
, 
GtkCombo
))

	)

39 
	#GTK_COMBO_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_COMBO
, 
GtkComboCœss
))

	)

40 
	#GTK_IS_COMBO
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_COMBO
))

	)

41 
	#GTK_IS_COMBO_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_COMBO
))

	)

42 
	#GTK_COMBO_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_COMBO
, 
GtkComboCœss
))

	)

45 
_GtkCombo
 
	tGtkCombo
;

46 
_GtkComboCœss
 
	tGtkComboCœss
;

49 
	s_GtkCombo
 {

50 
GtkHBox
 
	mhbox
;

53 
GtkWidgë
 *
	míåy
;

56 
GtkWidgë
 *
	mbuâ⁄
;

57 
GtkWidgë
 *
	mp›up
;

58 
GtkWidgë
 *
	mp›wö
;

61 
GtkWidgë
 *
	mli°
;

64 
guöt
 
	míåy_ch™ge_id
;

65 
guöt
 
	mli°_ch™ge_id
;

67 
guöt
 
	mvÆue_ö_li°
:1;

68 
guöt
 
	mok_if_em±y
:1;

69 
guöt
 
	mˇ£_£nsôive
:1;

70 
guöt
 
	mu£_¨rows
:1;

71 
guöt
 
	mu£_¨rows_Æways
:1;

73 
guöt16
 
	mcuºít_buâ⁄
;

74 
guöt
 
	ma˘iv©e_id
;

77 
	s_GtkComboCœss
 {

78 
GtkHBoxCœss
 
	m∑ª¡_˛ass
;

81 (*
	m_gtk_ª£rved1
) ();

82 (*
	m_gtk_ª£rved2
) ();

83 (*
	m_gtk_ª£rved3
) ();

84 (*
	m_gtk_ª£rved4
) ();

87 
GTy≥
 
	$gtk_combo_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
GtkWidgë
* 
	`gtk_combo_√w
 ();

91 
	`gtk_combo_£t_vÆue_ö_li°
 (
GtkCombo
* 
combo
,

92 
gboﬁón
 
vÆ
,

93 
gboﬁón
 
ok_if_em±y
);

95 
	`gtk_combo_£t_u£_¨rows
 (
GtkCombo
* 
combo
,

96 
gboﬁón
 
vÆ
);

98 
	`gtk_combo_£t_u£_¨rows_Æways
 (
GtkCombo
* 
combo
,

99 
gboﬁón
 
vÆ
);

101 
	`gtk_combo_£t_ˇ£_£nsôive
 (
GtkCombo
* 
combo
,

102 
gboﬁón
 
vÆ
);

105 
	`gtk_combo_£t_ôem_°rög
 (
GtkCombo
* 
combo
,

106 
GtkIãm
* 
ôem
,

107 c⁄° 
gch¨
* 
ôem_vÆue
);

109 
	`gtk_combo_£t_p›down_°rögs
 (
GtkCombo
* 
combo
,

110 
GLi°
 *
°rögs
);

112 
	`gtk_combo_dißbÀ_a˘iv©e
 (
GtkCombo
* 
combo
);

114 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcombobox.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_COMBO_BOX_H__


25 
	#__GTK_COMBO_BOX_H__


	)

27 
	~<gtk/gtkbö.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkåìvõw.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_COMBO_BOX
 (
	`gtk_combo_box_gë_ty≥
 ())

	)

34 
	#GTK_COMBO_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_COMBO_BOX
, 
GtkComboBox
))

	)

35 
	#GTK_COMBO_BOX_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_COMBO_BOX
, 
GtkComboBoxCœss
))

	)

36 
	#GTK_IS_COMBO_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_COMBO_BOX
))

	)

37 
	#GTK_IS_COMBO_BOX_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_COMBO_BOX
))

	)

38 
	#GTK_COMBO_BOX_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((ö°), 
GTK_TYPE_COMBO_BOX
, 
GtkComboBoxCœss
))

	)

40 
_GtkComboBox
 
	tGtkComboBox
;

41 
_GtkComboBoxCœss
 
	tGtkComboBoxCœss
;

42 
_GtkComboBoxPriv©e
 
	tGtkComboBoxPriv©e
;

44 
	s_GtkComboBox


46 
GtkBö
 
	m∑ª¡_ö°™˚
;

49 
GtkComboBoxPriv©e
 *
GSEAL
 (
¥iv
);

52 
	s_GtkComboBoxCœss


54 
GtkBöCœss
 
	m∑ª¡_˛ass
;

57 (* 
	mch™ged
Ë(
GtkComboBox
 *
	mcombo_box
);

60 
	mgch¨
 * (* 
	mgë_a˘ive_ãxt
Ë(
GtkComboBox
 *
	mcombo_box
);

63 (*
	m_gtk_ª£rved0
) ();

64 (*
	m_gtk_ª£rved1
) ();

65 (*
	m_gtk_ª£rved2
) ();

70 
GTy≥
 
	$gtk_combo_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
GtkWidgë
 *
	`gtk_combo_box_√w
 ();

72 
GtkWidgë
 *
	`gtk_combo_box_√w_wôh_modñ
 (
GtkTªeModñ
 *
modñ
);

75 
göt
 
	`gtk_combo_box_gë_wøp_width
 (
GtkComboBox
 *
combo_box
);

76 
	`gtk_combo_box_£t_wøp_width
 (
GtkComboBox
 *
combo_box
,

77 
göt
 
width
);

78 
göt
 
	`gtk_combo_box_gë_row_•™_cﬁumn
 (
GtkComboBox
 *
combo_box
);

79 
	`gtk_combo_box_£t_row_•™_cﬁumn
 (
GtkComboBox
 *
combo_box
,

80 
göt
 
row_•™
);

81 
göt
 
	`gtk_combo_box_gë_cﬁumn_•™_cﬁumn
 (
GtkComboBox
 *
combo_box
);

82 
	`gtk_combo_box_£t_cﬁumn_•™_cﬁumn
 (
GtkComboBox
 *
combo_box
,

83 
göt
 
cﬁumn_•™
);

85 
gboﬁón
 
	`gtk_combo_box_gë_add_ã¨offs
 (
GtkComboBox
 *
combo_box
);

86 
	`gtk_combo_box_£t_add_ã¨offs
 (
GtkComboBox
 *
combo_box
,

87 
gboﬁón
 
add_ã¨offs
);

89 
G_CONST_RETURN
 
gch¨
 *
	`gtk_combo_box_gë_tôÀ
 (
GtkComboBox
 *
combo_box
);

90 
	`gtk_combo_box_£t_tôÀ
 (
GtkComboBox
 *
combo_box
,

91 c⁄° 
gch¨
 *
tôÀ
);

93 
gboﬁón
 
	`gtk_combo_box_gë_focus_⁄_˛ick
 (
GtkComboBox
 *
combo
);

94 
	`gtk_combo_box_£t_focus_⁄_˛ick
 (
GtkComboBox
 *
combo
,

95 
gboﬁón
 
focus_⁄_˛ick
);

98 
göt
 
	`gtk_combo_box_gë_a˘ive
 (
GtkComboBox
 *
combo_box
);

99 
	`gtk_combo_box_£t_a˘ive
 (
GtkComboBox
 *
combo_box
,

100 
göt
 
ödex_
);

101 
gboﬁón
 
	`gtk_combo_box_gë_a˘ive_ôî
 (
GtkComboBox
 *
combo_box
,

102 
GtkTªeIãr
 *
ôî
);

103 
	`gtk_combo_box_£t_a˘ive_ôî
 (
GtkComboBox
 *
combo_box
,

104 
GtkTªeIãr
 *
ôî
);

107 
	`gtk_combo_box_£t_modñ
 (
GtkComboBox
 *
combo_box
,

108 
GtkTªeModñ
 *
modñ
);

109 
GtkTªeModñ
 *
	`gtk_combo_box_gë_modñ
 (
GtkComboBox
 *
combo_box
);

111 
GtkTªeVõwRowSï¨©‹Func
 
	`gtk_combo_box_gë_row_£∑øt‹_func
 (
GtkComboBox
 *
combo_box
);

112 
	`gtk_combo_box_£t_row_£∑øt‹_func
 (
GtkComboBox
 *
combo_box
,

113 
GtkTªeVõwRowSï¨©‹Func
 
func
,

114 
gpoöãr
 
d©a
,

115 
GDe°royNŸify
 
de°roy
);

117 
	`gtk_combo_box_£t_buâ⁄_£nsôivôy
 (
GtkComboBox
 *
combo_box
,

118 
GtkSísôivôyTy≥
 
£nsôivôy
);

119 
GtkSísôivôyTy≥
 
	`gtk_combo_box_gë_buâ⁄_£nsôivôy
 (
GtkComboBox
 *
combo_box
);

122 
GtkWidgë
 *
	`gtk_combo_box_√w_ãxt
 ();

123 
	`gtk_combo_box_≠≥nd_ãxt
 (
GtkComboBox
 *
combo_box
,

124 c⁄° 
gch¨
 *
ãxt
);

125 
	`gtk_combo_box_ö£π_ãxt
 (
GtkComboBox
 *
combo_box
,

126 
göt
 
posôi⁄
,

127 c⁄° 
gch¨
 *
ãxt
);

128 
	`gtk_combo_box_¥ïíd_ãxt
 (
GtkComboBox
 *
combo_box
,

129 c⁄° 
gch¨
 *
ãxt
);

130 
	`gtk_combo_box_ªmove_ãxt
 (
GtkComboBox
 *
combo_box
,

131 
göt
 
posôi⁄
);

132 
gch¨
 *
	`gtk_combo_box_gë_a˘ive_ãxt
 (
GtkComboBox
 *
combo_box
);

135 
	`gtk_combo_box_p›up
 (
GtkComboBox
 *
combo_box
);

136 
	`gtk_combo_box_p›down
 (
GtkComboBox
 *
combo_box
);

137 
AtkObje˘
* 
	`gtk_combo_box_gë_p›up_ac˚ssibÀ
 (
GtkComboBox
 *
combo_box
);

140 
gboﬁón
 
	`_gtk_combo_box_edôög_ˇn˚Àd
 (
GtkComboBox
 *
combo_box
);

142 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcomboboxentry.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_COMBO_BOX_ENTRY_H__


25 
	#__GTK_COMBO_BOX_ENTRY_H__


	)

27 
	~<gtk/gtkcombobox.h
>

28 
	~<gtk/gtkåìmodñ.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_COMBO_BOX_ENTRY
 (
	`gtk_combo_box_íåy_gë_ty≥
 ())

	)

33 
	#GTK_COMBO_BOX_ENTRY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_COMBO_BOX_ENTRY
, 
GtkComboBoxE¡ry
))

	)

34 
	#GTK_COMBO_BOX_ENTRY_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_COMBO_BOX_ENTRY
, 
GtkComboBoxE¡ryCœss
))

	)

35 
	#GTK_IS_COMBO_BOX_ENTRY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_COMBO_BOX_ENTRY
))

	)

36 
	#GTK_IS_COMBO_BOX_ENTRY_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_COMBO_BOX_ENTRY
))

	)

37 
	#GTK_COMBO_BOX_ENTRY_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((ö°), 
GTK_TYPE_COMBO_BOX_ENTRY
, 
GtkComboBoxE¡ryCœss
))

	)

39 
_GtkComboBoxE¡ry
 
	tGtkComboBoxE¡ry
;

40 
_GtkComboBoxE¡ryCœss
 
	tGtkComboBoxE¡ryCœss
;

41 
_GtkComboBoxE¡ryPriv©e
 
	tGtkComboBoxE¡ryPriv©e
;

43 
	s_GtkComboBoxE¡ry


45 
GtkComboBox
 
	m∑ª¡_ö°™˚
;

48 
GtkComboBoxE¡ryPriv©e
 *
GSEAL
 (
¥iv
);

51 
	s_GtkComboBoxE¡ryCœss


53 
GtkComboBoxCœss
 
	m∑ª¡_˛ass
;

56 (*
	m_gtk_ª£rved0
) ();

57 (*
	m_gtk_ª£rved1
) ();

58 (*
	m_gtk_ª£rved2
) ();

59 (*
	m_gtk_ª£rved3
) ();

63 
GTy≥
 
	$gtk_combo_box_íåy_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkWidgë
 *
	`gtk_combo_box_íåy_√w
 ();

65 
GtkWidgë
 *
	`gtk_combo_box_íåy_√w_wôh_modñ
 (
GtkTªeModñ
 *
modñ
,

66 
göt
 
ãxt_cﬁumn
);

68 
	`gtk_combo_box_íåy_£t_ãxt_cﬁumn
 (
GtkComboBoxE¡ry
 *
íåy_box
,

69 
göt
 
ãxt_cﬁumn
);

70 
göt
 
	`gtk_combo_box_íåy_gë_ãxt_cﬁumn
 (
GtkComboBoxE¡ry
 *
íåy_box
);

73 
GtkWidgë
 *
	`gtk_combo_box_íåy_√w_ãxt
 ();

76 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcontainer.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_CONTAINER_H__


32 
	#__GTK_CONTAINER_H__


	)

35 
	~<gtk/gtkwidgë.h
>

36 
	~<gtk/gtkadju°mít.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_CONTAINER
 (
	`gtk_c⁄èöî_gë_ty≥
 ())

	)

42 
	#GTK_CONTAINER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CONTAINER
, 
GtkC⁄èöî
))

	)

43 
	#GTK_CONTAINER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CONTAINER
, 
GtkC⁄èöîCœss
))

	)

44 
	#GTK_IS_CONTAINER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CONTAINER
))

	)

45 
	#GTK_IS_CONTAINER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CONTAINER
))

	)

46 
	#GTK_CONTAINER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CONTAINER
, 
GtkC⁄èöîCœss
))

	)

48 
	#GTK_IS_RESIZE_CONTAINER
(
widgë
Ë(
	`GTK_IS_CONTAINER
 (widgëË&& ((
GtkC⁄èöî
*Ë(widgë))->
ªsize_mode
 !
GTK_RESIZE_PARENT
)

	)

51 
_GtkC⁄èöî
 
	tGtkC⁄èöî
;

52 
_GtkC⁄èöîCœss
 
	tGtkC⁄èöîCœss
;

54 
	s_GtkC⁄èöî


56 
GtkWidgë
 
	mwidgë
;

58 
GtkWidgë
 *
GSEAL
 (
focus_chûd
);

60 
guöt
 
GSEAL
 (
b‹dî_width
) : 16;

63 
guöt
 
GSEAL
 (
√ed_ªsize
) : 1;

64 
guöt
 
GSEAL
 (
ªsize_mode
) : 2;

65 
guöt
 
GSEAL
 (
ªÆloˇã_ªdøws
) : 1;

66 
guöt
 
GSEAL
 (
has_focus_chaö
) : 1;

69 
	s_GtkC⁄èöîCœss


71 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

73 (*
	madd
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

74 
GtkWidgë
 *
	mwidgë
);

75 (*
	mªmove
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

76 
GtkWidgë
 *
	mwidgë
);

77 (*
	mcheck_ªsize
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
);

78 (*
	mf‹Æl
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

79 
gboﬁón
 
	mö˛ude_öã∫Æs
,

80 
GtkCÆlback
 
	mˇŒback
,

81 
gpoöãr
 
	mˇŒback_d©a
);

82 (*
	m£t_focus_chûd
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

83 
GtkWidgë
 *
	mwidgë
);

84 
GTy≥
 (*
chûd_ty≥
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
);

85 
	mgch¨
* (*
	mcomposôe_«me
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

86 
GtkWidgë
 *
	mchûd
);

87 (*
	m£t_chûd_¥›îty
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

88 
GtkWidgë
 *
	mchûd
,

89 
guöt
 
	m¥›îty_id
,

90 c⁄° 
GVÆue
 *
	mvÆue
,

91 
GP¨amS≥c
 *
	mp•ec
);

92 (*
	mgë_chûd_¥›îty
Ë(
GtkC⁄èöî
 *
	mc⁄èöî
,

93 
GtkWidgë
 *
	mchûd
,

94 
guöt
 
	m¥›îty_id
,

95 
GVÆue
 *
	mvÆue
,

96 
GP¨amS≥c
 *
	mp•ec
);

99 (*
	m_gtk_ª£rved1
) ();

100 (*
	m_gtk_ª£rved2
) ();

101 (*
	m_gtk_ª£rved3
) ();

102 (*
	m_gtk_ª£rved4
) ();

107 
GTy≥
 
	$gtk_c⁄èöî_gë_ty≥
 (Ë
G_GNUC_CONST
;

108 
	`gtk_c⁄èöî_£t_b‹dî_width
 (
GtkC⁄èöî
 *
c⁄èöî
,

109 
guöt
 
b‹dî_width
);

110 
guöt
 
	`gtk_c⁄èöî_gë_b‹dî_width
 (
GtkC⁄èöî
 *
c⁄èöî
);

111 
	`gtk_c⁄èöî_add
 (
GtkC⁄èöî
 *
c⁄èöî
,

112 
GtkWidgë
 *
widgë
);

113 
	`gtk_c⁄èöî_ªmove
 (
GtkC⁄èöî
 *
c⁄èöî
,

114 
GtkWidgë
 *
widgë
);

116 
	`gtk_c⁄èöî_£t_ªsize_mode
 (
GtkC⁄èöî
 *
c⁄èöî
,

117 
GtkResizeMode
 
ªsize_mode
);

118 
GtkResizeMode
 
	`gtk_c⁄èöî_gë_ªsize_mode
 (
GtkC⁄èöî
 *
c⁄èöî
);

120 
	`gtk_c⁄èöî_check_ªsize
 (
GtkC⁄èöî
 *
c⁄èöî
);

122 
	`gtk_c⁄èöî_f‹óch
 (
GtkC⁄èöî
 *
c⁄èöî
,

123 
GtkCÆlback
 
ˇŒback
,

124 
gpoöãr
 
ˇŒback_d©a
);

125 #i‚de‡
GTK_DISABLE_DEPRECATED


126 
	`gtk_c⁄èöî_f‹óch_fuŒ
 (
GtkC⁄èöî
 *
c⁄èöî
,

127 
GtkCÆlback
 
ˇŒback
,

128 
GtkCÆlbackM¨shÆ
 
m¨shÆ
,

129 
gpoöãr
 
ˇŒback_d©a
,

130 
GDe°royNŸify
 
nŸify
);

132 
GLi°
* 
	`gtk_c⁄èöî_gë_chûdªn
 (
GtkC⁄èöî
 *
c⁄èöî
);

134 #i‚de‡
GTK_DISABLE_DEPRECATED


135 
	#gtk_c⁄èöî_chûdªn
 
gtk_c⁄èöî_gë_chûdªn


	)

138 
	`gtk_c⁄èöî_¥›ag©e_expo£
 (
GtkC⁄èöî
 *
c⁄èöî
,

139 
GtkWidgë
 *
chûd
,

140 
GdkEvítExpo£
 *
evít
);

142 
	`gtk_c⁄èöî_£t_focus_chaö
 (
GtkC⁄èöî
 *
c⁄èöî
,

143 
GLi°
 *
focußbÀ_widgës
);

144 
gboﬁón
 
	`gtk_c⁄èöî_gë_focus_chaö
 (
GtkC⁄èöî
 *
c⁄èöî
,

145 
GLi°
 **
focußbÀ_widgës
);

146 
	`gtk_c⁄èöî_un£t_focus_chaö
 (
GtkC⁄èöî
 *
c⁄èöî
);

150 
	`gtk_c⁄èöî_£t_ªÆloˇã_ªdøws
 (
GtkC⁄èöî
 *
c⁄èöî
,

151 
gboﬁón
 
√eds_ªdøws
);

152 
	`gtk_c⁄èöî_£t_focus_chûd
 (
GtkC⁄èöî
 *
c⁄èöî
,

153 
GtkWidgë
 *
chûd
);

154 
GtkWidgë
 *

155 
	`gtk_c⁄èöî_gë_focus_chûd
 (
GtkC⁄èöî
 *
c⁄èöî
);

156 
	`gtk_c⁄èöî_£t_focus_vadju°mít
 (
GtkC⁄èöî
 *
c⁄èöî
,

157 
GtkAdju°mít
 *
adju°mít
);

158 
GtkAdju°mít
 *
	`gtk_c⁄èöî_gë_focus_vadju°mít
 (
GtkC⁄èöî
 *
c⁄èöî
);

159 
	`gtk_c⁄èöî_£t_focus_hadju°mít
 (
GtkC⁄èöî
 *
c⁄èöî
,

160 
GtkAdju°mít
 *
adju°mít
);

161 
GtkAdju°mít
 *
	`gtk_c⁄èöî_gë_focus_hadju°mít
 (
GtkC⁄èöî
 *
c⁄èöî
);

163 
	`gtk_c⁄èöî_ªsize_chûdªn
 (
GtkC⁄èöî
 *
c⁄èöî
);

165 
GTy≥
 
	`gtk_c⁄èöî_chûd_ty≥
 (
GtkC⁄èöî
 *
c⁄èöî
);

168 
	`gtk_c⁄èöî_˛ass_ö°Æl_chûd_¥›îty
 (
GtkC⁄èöîCœss
 *
c˛ass
,

169 
guöt
 
¥›îty_id
,

170 
GP¨amS≥c
 *
p•ec
);

171 
GP¨amS≥c
* 
	`gtk_c⁄èöî_˛ass_föd_chûd_¥›îty
 (
GObje˘Cœss
 *
c˛ass
,

172 c⁄° 
gch¨
 *
¥›îty_«me
);

173 
GP¨amS≥c
** 
	`gtk_c⁄èöî_˛ass_li°_chûd_¥›îtõs
 (
GObje˘Cœss
 *
c˛ass
,

174 
guöt
 *
n_¥›îtõs
);

175 
	$gtk_c⁄èöî_add_wôh_¥›îtõs
 (
GtkC⁄èöî
 *
c⁄èöî
,

176 
GtkWidgë
 *
widgë
,

177 c⁄° 
gch¨
 *
fú°_¥›_«me
,

178 ...Ë
G_GNUC_NULL_TERMINATED
;

179 
	$gtk_c⁄èöî_chûd_£t
 (
GtkC⁄èöî
 *
c⁄èöî
,

180 
GtkWidgë
 *
chûd
,

181 c⁄° 
gch¨
 *
fú°_¥›_«me
,

182 ...Ë
G_GNUC_NULL_TERMINATED
;

183 
	$gtk_c⁄èöî_chûd_gë
 (
GtkC⁄èöî
 *
c⁄èöî
,

184 
GtkWidgë
 *
chûd
,

185 c⁄° 
gch¨
 *
fú°_¥›_«me
,

186 ...Ë
G_GNUC_NULL_TERMINATED
;

187 
	`gtk_c⁄èöî_chûd_£t_vÆi°
 (
GtkC⁄èöî
 *
c⁄èöî
,

188 
GtkWidgë
 *
chûd
,

189 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

190 
va_li°
 
v¨_¨gs
);

191 
	`gtk_c⁄èöî_chûd_gë_vÆi°
 (
GtkC⁄èöî
 *
c⁄èöî
,

192 
GtkWidgë
 *
chûd
,

193 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

194 
va_li°
 
v¨_¨gs
);

195 
	`gtk_c⁄èöî_chûd_£t_¥›îty
 (
GtkC⁄èöî
 *
c⁄èöî
,

196 
GtkWidgë
 *
chûd
,

197 c⁄° 
gch¨
 *
¥›îty_«me
,

198 c⁄° 
GVÆue
 *
vÆue
);

199 
	`gtk_c⁄èöî_chûd_gë_¥›îty
 (
GtkC⁄èöî
 *
c⁄èöî
,

200 
GtkWidgë
 *
chûd
,

201 c⁄° 
gch¨
 *
¥›îty_«me
,

202 
GVÆue
 *
vÆue
);

204 
	#GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID
(
obje˘
, 
¥›îty_id
, 
p•ec
) \

205 
	`G_OBJECT_WARN_INVALID_PSPEC
 ((
obje˘
), "chûdÖr›îty id", (
¥›îty_id
), (
p•ec
))

	)

208 
	`gtk_c⁄èöî_f‹Æl
 (
GtkC⁄èöî
 *
c⁄èöî
,

209 
GtkCÆlback
 
ˇŒback
,

210 
gpoöãr
 
ˇŒback_d©a
);

213 
	`_gtk_c⁄èöî_queue_ªsize
 (
GtkC⁄èöî
 *
c⁄èöî
);

214 
	`_gtk_c⁄èöî_˛ór_ªsize_widgës
 (
GtkC⁄èöî
 *
c⁄èöî
);

215 
gch¨
* 
	`_gtk_c⁄èöî_chûd_composôe_«me
 (
GtkC⁄èöî
 *
c⁄èöî
,

216 
GtkWidgë
 *
chûd
);

217 
	`_gtk_c⁄èöî_dequeue_ªsize_h™dÀr
 (
GtkC⁄èöî
 *
c⁄èöî
);

218 
GLi°
 *
	`_gtk_c⁄èöî_focus_s‹t
 (
GtkC⁄èöî
 *
c⁄èöî
,

219 
GLi°
 *
chûdªn
,

220 
GtkDúe˘i⁄Ty≥
 
dúe˘i⁄
,

221 
GtkWidgë
 *
ﬁd_focus
);

223 #i‚de‡
GTK_DISABLE_DEPRECATED


224 
	#gtk_c⁄èöî_b‹dî_width
 
gtk_c⁄èöî_£t_b‹dî_width


	)

227 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkctree.h

31 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_CLIST_C__
Ë|| deföed (
__GTK_CTREE_C__
)

33 #i‚de‡
__GTK_CTREE_H__


34 
	#__GTK_CTREE_H__


	)

36 
	~<gtk/gtk˛i°.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_CTREE
 (
	`gtk_˘ªe_gë_ty≥
 ())

	)

41 
	#GTK_CTREE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CTREE
, 
GtkCTªe
))

	)

42 
	#GTK_CTREE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CTREE
, 
GtkCTªeCœss
))

	)

43 
	#GTK_IS_CTREE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CTREE
))

	)

44 
	#GTK_IS_CTREE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CTREE
))

	)

45 
	#GTK_CTREE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CTREE
, 
GtkCTªeCœss
))

	)

47 
	#GTK_CTREE_ROW
(
_node_
Ë((
GtkCTªeRow
 *)(((
GLi°
 *)(_node_))->
d©a
))

	)

48 
	#GTK_CTREE_NODE
(
_node_
Ë((
GtkCTªeNode
 *)((_node_)))

	)

49 
	#GTK_CTREE_NODE_NEXT
(
_¬ode_
Ë((
GtkCTªeNode
 *)(((
GLi°
 *)(_¬ode_))->
√xt
))

	)

50 
	#GTK_CTREE_NODE_PREV
(
_≤ode_
Ë((
GtkCTªeNode
 *)(((
GLi°
 *)(_≤ode_))->
¥ev
))

	)

51 
	#GTK_CTREE_FUNC
(
_func_
Ë((
GtkCTªeFunc
)(_func_))

	)

53 
	#GTK_TYPE_CTREE_NODE
 (
	`gtk_˘ªe_node_gë_ty≥
 ())

	)

57 
	mGTK_CTREE_POS_BEFORE
,

58 
	mGTK_CTREE_POS_AS_CHILD
,

59 
	mGTK_CTREE_POS_AFTER


60 } 
	tGtkCTªePos
;

64 
	mGTK_CTREE_LINES_NONE
,

65 
	mGTK_CTREE_LINES_SOLID
,

66 
	mGTK_CTREE_LINES_DOTTED
,

67 
	mGTK_CTREE_LINES_TABBED


68 } 
	tGtkCTªeLöeStyÀ
;

72 
	mGTK_CTREE_EXPANDER_NONE
,

73 
	mGTK_CTREE_EXPANDER_SQUARE
,

74 
	mGTK_CTREE_EXPANDER_TRIANGLE
,

75 
	mGTK_CTREE_EXPANDER_CIRCULAR


76 } 
	tGtkCTªeEx∑ndîStyÀ
;

80 
	mGTK_CTREE_EXPANSION_EXPAND
,

81 
	mGTK_CTREE_EXPANSION_EXPAND_RECURSIVE
,

82 
	mGTK_CTREE_EXPANSION_COLLAPSE
,

83 
	mGTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE
,

84 
	mGTK_CTREE_EXPANSION_TOGGLE
,

85 
	mGTK_CTREE_EXPANSION_TOGGLE_RECURSIVE


86 } 
	tGtkCTªeEx∑nsi⁄Ty≥
;

88 
_GtkCTªe
 
	tGtkCTªe
;

89 
_GtkCTªeCœss
 
	tGtkCTªeCœss
;

90 
_GtkCTªeRow
 
	tGtkCTªeRow
;

91 
_GtkCTªeNode
 
	tGtkCTªeNode
;

93 (*
	tGtkCTªeFunc
Ë(
	tGtkCTªe
 *
	t˘ªe
,

94 
	tGtkCTªeNode
 *
	tnode
,

95 
	tgpoöãr
 
	td©a
);

97 
	$gboﬁón
 (*
	tGtkCTªeGNodeFunc
Ë(
	tGtkCTªe
 *
	t˘ªe
,

98 
	tguöt
 
	tdïth
,

99 
	tGNode
 *
	tgnode
,

100 
	tGtkCTªeNode
 *
	t˙ode
,

101 
	tgpoöãr
 
	td©a
);

103 
	$gboﬁón
 (*
	tGtkCTªeCom∑ªDøgFunc
Ë(
	tGtkCTªe
 *
	t˘ªe
,

104 
	tGtkCTªeNode
 *
	tsour˚_node
,

105 
	tGtkCTªeNode
 *
	t√w_∑ª¡
,

106 
	tGtkCTªeNode
 *
	t√w_siblög
);

108 
	s_GtkCTªe


110 
GtkCLi°
 
˛i°
;

112 
GdkGC
 *
löes_gc
;

114 
göt
 
åì_ödít
;

115 
göt
 
åì_•acög
;

116 
göt
 
åì_cﬁumn
;

118 
guöt
 
löe_°yÀ
 : 2;

119 
guöt
 
ex∑ndî_°yÀ
 : 2;

120 
guöt
 
show_°ub
 : 1;

122 
GtkCTªeCom∑ªDøgFunc
 
døg_com∑ª
;

125 
	s_GtkCTªeCœss


127 
GtkCLi°Cœss
 
∑ª¡_˛ass
;

129 (*
åì_£À˘_row
Ë(
GtkCTªe
 *
˘ªe
,

130 
GtkCTªeNode
 *
row
,

131 
göt
 
cﬁumn
);

132 (*
åì_un£À˘_row
Ë(
GtkCTªe
 *
˘ªe
,

133 
GtkCTªeNode
 *
row
,

134 
göt
 
cﬁumn
);

135 (*
åì_ex∑nd
Ë(
GtkCTªe
 *
˘ªe
,

136 
GtkCTªeNode
 *
node
);

137 (*
åì_cﬁœp£
Ë(
GtkCTªe
 *
˘ªe
,

138 
GtkCTªeNode
 *
node
);

139 (*
åì_move
Ë(
GtkCTªe
 *
˘ªe
,

140 
GtkCTªeNode
 *
node
,

141 
GtkCTªeNode
 *
√w_∑ª¡
,

142 
GtkCTªeNode
 *
√w_siblög
);

143 (*
ch™ge_focus_row_ex∑nsi⁄
Ë(
GtkCTªe
 *
˘ªe
,

144 
GtkCTªeEx∑nsi⁄Ty≥
 
a˘i⁄
);

147 
	s_GtkCTªeRow


149 
GtkCLi°Row
 
row
;

151 
GtkCTªeNode
 *
∑ª¡
;

152 
GtkCTªeNode
 *
siblög
;

153 
GtkCTªeNode
 *
chûdªn
;

155 
GdkPixm≠
 *
pixm≠_˛o£d
;

156 
GdkBôm≠
 *
mask_˛o£d
;

157 
GdkPixm≠
 *
pixm≠_›íed
;

158 
GdkBôm≠
 *
mask_›íed
;

160 
guöt16
 
Àvñ
;

162 
guöt
 
is_Àaf
 : 1;

163 
guöt
 
ex∑nded
 : 1;

166 
	s_GtkCTªeNode
 {

167 
GLi°
 
li°
;

175 
GTy≥
 
	$gtk_˘ªe_gë_ty≥
 (Ë
G_GNUC_CONST
;

176 
GtkWidgë
 * 
	`gtk_˘ªe_√w_wôh_tôÀs
 (
göt
 
cﬁumns
,

177 
göt
 
åì_cﬁumn
,

178 
gch¨
 *
tôÀs
[]);

179 
GtkWidgë
 * 
	`gtk_˘ªe_√w
 (
göt
 
cﬁumns
,

180 
göt
 
åì_cﬁumn
);

181 
GtkCTªeNode
 * 
	`gtk_˘ªe_ö£π_node
 (
GtkCTªe
 *
˘ªe
,

182 
GtkCTªeNode
 *
∑ª¡
,

183 
GtkCTªeNode
 *
siblög
,

184 
gch¨
 *
ãxt
[],

185 
guöt8
 
•acög
,

186 
GdkPixm≠
 *
pixm≠_˛o£d
,

187 
GdkBôm≠
 *
mask_˛o£d
,

188 
GdkPixm≠
 *
pixm≠_›íed
,

189 
GdkBôm≠
 *
mask_›íed
,

190 
gboﬁón
 
is_Àaf
,

191 
gboﬁón
 
ex∑nded
);

192 
	`gtk_˘ªe_ªmove_node
 (
GtkCTªe
 *
˘ªe
,

193 
GtkCTªeNode
 *
node
);

194 
GtkCTªeNode
 * 
	`gtk_˘ªe_ö£π_gnode
 (
GtkCTªe
 *
˘ªe
,

195 
GtkCTªeNode
 *
∑ª¡
,

196 
GtkCTªeNode
 *
siblög
,

197 
GNode
 *
gnode
,

198 
GtkCTªeGNodeFunc
 
func
,

199 
gpoöãr
 
d©a
);

200 
GNode
 * 
	`gtk_˘ªe_exp‹t_to_gnode
 (
GtkCTªe
 *
˘ªe
,

201 
GNode
 *
∑ª¡
,

202 
GNode
 *
siblög
,

203 
GtkCTªeNode
 *
node
,

204 
GtkCTªeGNodeFunc
 
func
,

205 
gpoöãr
 
d©a
);

212 
	`gtk_˘ªe_po°_ªcursive
 (
GtkCTªe
 *
˘ªe
,

213 
GtkCTªeNode
 *
node
,

214 
GtkCTªeFunc
 
func
,

215 
gpoöãr
 
d©a
);

216 
	`gtk_˘ªe_po°_ªcursive_to_dïth
 (
GtkCTªe
 *
˘ªe
,

217 
GtkCTªeNode
 *
node
,

218 
göt
 
dïth
,

219 
GtkCTªeFunc
 
func
,

220 
gpoöãr
 
d©a
);

221 
	`gtk_˘ªe_¥e_ªcursive
 (
GtkCTªe
 *
˘ªe
,

222 
GtkCTªeNode
 *
node
,

223 
GtkCTªeFunc
 
func
,

224 
gpoöãr
 
d©a
);

225 
	`gtk_˘ªe_¥e_ªcursive_to_dïth
 (
GtkCTªe
 *
˘ªe
,

226 
GtkCTªeNode
 *
node
,

227 
göt
 
dïth
,

228 
GtkCTªeFunc
 
func
,

229 
gpoöãr
 
d©a
);

230 
gboﬁón
 
	`gtk_˘ªe_is_võwabÀ
 (
GtkCTªe
 *
˘ªe
,

231 
GtkCTªeNode
 *
node
);

232 
GtkCTªeNode
 * 
	`gtk_˘ªe_œ°
 (
GtkCTªe
 *
˘ªe
,

233 
GtkCTªeNode
 *
node
);

234 
GtkCTªeNode
 * 
	`gtk_˘ªe_föd_node_±r
 (
GtkCTªe
 *
˘ªe
,

235 
GtkCTªeRow
 *
˘ªe_row
);

236 
GtkCTªeNode
 * 
	`gtk_˘ªe_node_¡h
 (
GtkCTªe
 *
˘ªe
,

237 
guöt
 
row
);

238 
gboﬁón
 
	`gtk_˘ªe_föd
 (
GtkCTªe
 *
˘ªe
,

239 
GtkCTªeNode
 *
node
,

240 
GtkCTªeNode
 *
chûd
);

241 
gboﬁón
 
	`gtk_˘ªe_is_™˚°‹
 (
GtkCTªe
 *
˘ªe
,

242 
GtkCTªeNode
 *
node
,

243 
GtkCTªeNode
 *
chûd
);

244 
GtkCTªeNode
 * 
	`gtk_˘ªe_föd_by_row_d©a
 (
GtkCTªe
 *
˘ªe
,

245 
GtkCTªeNode
 *
node
,

246 
gpoöãr
 
d©a
);

248 
GLi°
 * 
	`gtk_˘ªe_föd_Æl_by_row_d©a
 (
GtkCTªe
 *
˘ªe
,

249 
GtkCTªeNode
 *
node
,

250 
gpoöãr
 
d©a
);

251 
GtkCTªeNode
 * 
	`gtk_˘ªe_föd_by_row_d©a_cu°om
 (
GtkCTªe
 *
˘ªe
,

252 
GtkCTªeNode
 *
node
,

253 
gpoöãr
 
d©a
,

254 
GCom∑ªFunc
 
func
);

256 
GLi°
 * 
	`gtk_˘ªe_föd_Æl_by_row_d©a_cu°om
 (
GtkCTªe
 *
˘ªe
,

257 
GtkCTªeNode
 *
node
,

258 
gpoöãr
 
d©a
,

259 
GCom∑ªFunc
 
func
);

260 
gboﬁón
 
	`gtk_˘ªe_is_hŸ_•Ÿ
 (
GtkCTªe
 *
˘ªe
,

261 
göt
 
x
,

262 
göt
 
y
);

268 
	`gtk_˘ªe_move
 (
GtkCTªe
 *
˘ªe
,

269 
GtkCTªeNode
 *
node
,

270 
GtkCTªeNode
 *
√w_∑ª¡
,

271 
GtkCTªeNode
 *
√w_siblög
);

272 
	`gtk_˘ªe_ex∑nd
 (
GtkCTªe
 *
˘ªe
,

273 
GtkCTªeNode
 *
node
);

274 
	`gtk_˘ªe_ex∑nd_ªcursive
 (
GtkCTªe
 *
˘ªe
,

275 
GtkCTªeNode
 *
node
);

276 
	`gtk_˘ªe_ex∑nd_to_dïth
 (
GtkCTªe
 *
˘ªe
,

277 
GtkCTªeNode
 *
node
,

278 
göt
 
dïth
);

279 
	`gtk_˘ªe_cﬁœp£
 (
GtkCTªe
 *
˘ªe
,

280 
GtkCTªeNode
 *
node
);

281 
	`gtk_˘ªe_cﬁœp£_ªcursive
 (
GtkCTªe
 *
˘ªe
,

282 
GtkCTªeNode
 *
node
);

283 
	`gtk_˘ªe_cﬁœp£_to_dïth
 (
GtkCTªe
 *
˘ªe
,

284 
GtkCTªeNode
 *
node
,

285 
göt
 
dïth
);

286 
	`gtk_˘ªe_toggÀ_ex∑nsi⁄
 (
GtkCTªe
 *
˘ªe
,

287 
GtkCTªeNode
 *
node
);

288 
	`gtk_˘ªe_toggÀ_ex∑nsi⁄_ªcursive
 (
GtkCTªe
 *
˘ªe
,

289 
GtkCTªeNode
 *
node
);

290 
	`gtk_˘ªe_£À˘
 (
GtkCTªe
 *
˘ªe
,

291 
GtkCTªeNode
 *
node
);

292 
	`gtk_˘ªe_£À˘_ªcursive
 (
GtkCTªe
 *
˘ªe
,

293 
GtkCTªeNode
 *
node
);

294 
	`gtk_˘ªe_un£À˘
 (
GtkCTªe
 *
˘ªe
,

295 
GtkCTªeNode
 *
node
);

296 
	`gtk_˘ªe_un£À˘_ªcursive
 (
GtkCTªe
 *
˘ªe
,

297 
GtkCTªeNode
 *
node
);

298 
	`gtk_˘ªe_ªÆ_£À˘_ªcursive
 (
GtkCTªe
 *
˘ªe
,

299 
GtkCTªeNode
 *
node
,

300 
göt
 
°©e
);

306 
	`gtk_˘ªe_node_£t_ãxt
 (
GtkCTªe
 *
˘ªe
,

307 
GtkCTªeNode
 *
node
,

308 
göt
 
cﬁumn
,

309 c⁄° 
gch¨
 *
ãxt
);

310 
	`gtk_˘ªe_node_£t_pixm≠
 (
GtkCTªe
 *
˘ªe
,

311 
GtkCTªeNode
 *
node
,

312 
göt
 
cﬁumn
,

313 
GdkPixm≠
 *
pixm≠
,

314 
GdkBôm≠
 *
mask
);

315 
	`gtk_˘ªe_node_£t_pixãxt
 (
GtkCTªe
 *
˘ªe
,

316 
GtkCTªeNode
 *
node
,

317 
göt
 
cﬁumn
,

318 c⁄° 
gch¨
 *
ãxt
,

319 
guöt8
 
•acög
,

320 
GdkPixm≠
 *
pixm≠
,

321 
GdkBôm≠
 *
mask
);

322 
	`gtk_˘ªe_£t_node_öfo
 (
GtkCTªe
 *
˘ªe
,

323 
GtkCTªeNode
 *
node
,

324 c⁄° 
gch¨
 *
ãxt
,

325 
guöt8
 
•acög
,

326 
GdkPixm≠
 *
pixm≠_˛o£d
,

327 
GdkBôm≠
 *
mask_˛o£d
,

328 
GdkPixm≠
 *
pixm≠_›íed
,

329 
GdkBôm≠
 *
mask_›íed
,

330 
gboﬁón
 
is_Àaf
,

331 
gboﬁón
 
ex∑nded
);

332 
	`gtk_˘ªe_node_£t_shi·
 (
GtkCTªe
 *
˘ªe
,

333 
GtkCTªeNode
 *
node
,

334 
göt
 
cﬁumn
,

335 
göt
 
vîtiˇl
,

336 
göt
 
h‹iz⁄èl
);

337 
	`gtk_˘ªe_node_£t_£À˘abÀ
 (
GtkCTªe
 *
˘ªe
,

338 
GtkCTªeNode
 *
node
,

339 
gboﬁón
 
£À˘abÀ
);

340 
gboﬁón
 
	`gtk_˘ªe_node_gë_£À˘abÀ
 (
GtkCTªe
 *
˘ªe
,

341 
GtkCTªeNode
 *
node
);

342 
GtkCñlTy≥
 
	`gtk_˘ªe_node_gë_˚Œ_ty≥
 (
GtkCTªe
 *
˘ªe
,

343 
GtkCTªeNode
 *
node
,

344 
göt
 
cﬁumn
);

345 
gboﬁón
 
	`gtk_˘ªe_node_gë_ãxt
 (
GtkCTªe
 *
˘ªe
,

346 
GtkCTªeNode
 *
node
,

347 
göt
 
cﬁumn
,

348 
gch¨
 **
ãxt
);

349 
gboﬁón
 
	`gtk_˘ªe_node_gë_pixm≠
 (
GtkCTªe
 *
˘ªe
,

350 
GtkCTªeNode
 *
node
,

351 
göt
 
cﬁumn
,

352 
GdkPixm≠
 **
pixm≠
,

353 
GdkBôm≠
 **
mask
);

354 
gboﬁón
 
	`gtk_˘ªe_node_gë_pixãxt
 (
GtkCTªe
 *
˘ªe
,

355 
GtkCTªeNode
 *
node
,

356 
göt
 
cﬁumn
,

357 
gch¨
 **
ãxt
,

358 
guöt8
 *
•acög
,

359 
GdkPixm≠
 **
pixm≠
,

360 
GdkBôm≠
 **
mask
);

361 
gboﬁón
 
	`gtk_˘ªe_gë_node_öfo
 (
GtkCTªe
 *
˘ªe
,

362 
GtkCTªeNode
 *
node
,

363 
gch¨
 **
ãxt
,

364 
guöt8
 *
•acög
,

365 
GdkPixm≠
 **
pixm≠_˛o£d
,

366 
GdkBôm≠
 **
mask_˛o£d
,

367 
GdkPixm≠
 **
pixm≠_›íed
,

368 
GdkBôm≠
 **
mask_›íed
,

369 
gboﬁón
 *
is_Àaf
,

370 
gboﬁón
 *
ex∑nded
);

371 
	`gtk_˘ªe_node_£t_row_°yÀ
 (
GtkCTªe
 *
˘ªe
,

372 
GtkCTªeNode
 *
node
,

373 
GtkStyÀ
 *
°yÀ
);

374 
GtkStyÀ
 * 
	`gtk_˘ªe_node_gë_row_°yÀ
 (
GtkCTªe
 *
˘ªe
,

375 
GtkCTªeNode
 *
node
);

376 
	`gtk_˘ªe_node_£t_˚Œ_°yÀ
 (
GtkCTªe
 *
˘ªe
,

377 
GtkCTªeNode
 *
node
,

378 
göt
 
cﬁumn
,

379 
GtkStyÀ
 *
°yÀ
);

380 
GtkStyÀ
 * 
	`gtk_˘ªe_node_gë_˚Œ_°yÀ
 (
GtkCTªe
 *
˘ªe
,

381 
GtkCTªeNode
 *
node
,

382 
göt
 
cﬁumn
);

383 
	`gtk_˘ªe_node_£t_f‹eground
 (
GtkCTªe
 *
˘ªe
,

384 
GtkCTªeNode
 *
node
,

385 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

386 
	`gtk_˘ªe_node_£t_background
 (
GtkCTªe
 *
˘ªe
,

387 
GtkCTªeNode
 *
node
,

388 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

389 
	`gtk_˘ªe_node_£t_row_d©a
 (
GtkCTªe
 *
˘ªe
,

390 
GtkCTªeNode
 *
node
,

391 
gpoöãr
 
d©a
);

392 
	`gtk_˘ªe_node_£t_row_d©a_fuŒ
 (
GtkCTªe
 *
˘ªe
,

393 
GtkCTªeNode
 *
node
,

394 
gpoöãr
 
d©a
,

395 
GDe°royNŸify
 
de°roy
);

396 
gpoöãr
 
	`gtk_˘ªe_node_gë_row_d©a
 (
GtkCTªe
 *
˘ªe
,

397 
GtkCTªeNode
 *
node
);

398 
	`gtk_˘ªe_node_movëo
 (
GtkCTªe
 *
˘ªe
,

399 
GtkCTªeNode
 *
node
,

400 
göt
 
cﬁumn
,

401 
gÊﬂt
 
row_Æign
,

402 
gÊﬂt
 
cﬁ_Æign
);

403 
GtkVisibûôy
 
	`gtk_˘ªe_node_is_visibÀ
 (
GtkCTªe
 *
˘ªe
,

404 
GtkCTªeNode
 *
node
);

410 
	`gtk_˘ªe_£t_ödít
 (
GtkCTªe
 *
˘ªe
,

411 
göt
 
ödít
);

412 
	`gtk_˘ªe_£t_•acög
 (
GtkCTªe
 *
˘ªe
,

413 
göt
 
•acög
);

414 
	`gtk_˘ªe_£t_show_°ub
 (
GtkCTªe
 *
˘ªe
,

415 
gboﬁón
 
show_°ub
);

416 
	`gtk_˘ªe_£t_löe_°yÀ
 (
GtkCTªe
 *
˘ªe
,

417 
GtkCTªeLöeStyÀ
 
löe_°yÀ
);

418 
	`gtk_˘ªe_£t_ex∑ndî_°yÀ
 (
GtkCTªe
 *
˘ªe
,

419 
GtkCTªeEx∑ndîStyÀ
 
ex∑ndî_°yÀ
);

420 
	`gtk_˘ªe_£t_døg_com∑ª_func
 (
GtkCTªe
 *
˘ªe
,

421 
GtkCTªeCom∑ªDøgFunc
 
cmp_func
);

427 
	`gtk_˘ªe_s‹t_node
 (
GtkCTªe
 *
˘ªe
,

428 
GtkCTªeNode
 *
node
);

429 
	`gtk_˘ªe_s‹t_ªcursive
 (
GtkCTªe
 *
˘ªe
,

430 
GtkCTªeNode
 *
node
);

433 
	#gtk_˘ªe_£t_ª‹dîabÀ
(
t
,
r
Ë
	`gtk_˛i°_£t_ª‹dîabÀ
((
GtkCLi°
*Ë—),‘))

	)

439 
GTy≥
 
	$gtk_˘ªe_node_gë_ty≥
 (Ë
G_GNUC_CONST
;

441 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkcurve.h

37 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

41 #i‚de‡
__GTK_CURVE_H__


42 
	#__GTK_CURVE_H__


	)

45 
	~<gtk/gtkdøwög¨ó.h
>

48 
	gG_BEGIN_DECLS


50 
	#GTK_TYPE_CURVE
 (
	`gtk_curve_gë_ty≥
 ())

	)

51 
	#GTK_CURVE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_CURVE
, 
GtkCurve
))

	)

52 
	#GTK_CURVE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_CURVE
, 
GtkCurveCœss
))

	)

53 
	#GTK_IS_CURVE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_CURVE
))

	)

54 
	#GTK_IS_CURVE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_CURVE
))

	)

55 
	#GTK_CURVE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_CURVE
, 
GtkCurveCœss
))

	)

58 
_GtkCurve
 
	tGtkCurve
;

59 
_GtkCurveCœss
 
	tGtkCurveCœss
;

62 
	s_GtkCurve


64 
GtkDøwögAªa
 
	mgøph
;

66 
göt
 
	mcurs‹_ty≥
;

67 
gÊﬂt
 
	mmö_x
;

68 
gÊﬂt
 
	mmax_x
;

69 
gÊﬂt
 
	mmö_y
;

70 
gÊﬂt
 
	mmax_y
;

71 
GdkPixm≠
 *
	mpixm≠
;

72 
GtkCurveTy≥
 
	mcurve_ty≥
;

73 
göt
 
	mheight
;

74 
göt
 
	mgøb_poöt
;

75 
göt
 
	mœ°
;

78 
göt
 
	mnum_poöts
;

79 
GdkPoöt
 *
	mpoöt
;

82 
göt
 
	mnum_˘Õoöts
;

83 
gÊﬂt
 (*
˘Õoöt
)[2];

86 
	s_GtkCurveCœss


88 
GtkDøwögAªaCœss
 
	m∑ª¡_˛ass
;

90 (* 
	mcurve_ty≥_ch™ged
Ë(
GtkCurve
 *
	mcurve
);

93 (*
	m_gtk_ª£rved1
) ();

94 (*
	m_gtk_ª£rved2
) ();

95 (*
	m_gtk_ª£rved3
) ();

96 (*
	m_gtk_ª£rved4
) ();

100 
GTy≥
 
	$gtk_curve_gë_ty≥
 (Ë
G_GNUC_CONST
;

101 
GtkWidgë
* 
	`gtk_curve_√w
 ();

102 
	`gtk_curve_ª£t
 (
GtkCurve
 *
curve
);

103 
	`gtk_curve_£t_gamma
 (
GtkCurve
 *
curve
, 
gÊﬂt
 
gamma_
);

104 
	`gtk_curve_£t_ønge
 (
GtkCurve
 *
curve
,

105 
gÊﬂt
 
mö_x
, gÊﬂà
max_x
,

106 
gÊﬂt
 
mö_y
, gÊﬂà
max_y
);

107 
	`gtk_curve_gë_ve˘‹
 (
GtkCurve
 *
curve
,

108 
ve˛í
, 
gÊﬂt
 
ve˘‹
[]);

109 
	`gtk_curve_£t_ve˘‹
 (
GtkCurve
 *
curve
,

110 
ve˛í
, 
gÊﬂt
 
ve˘‹
[]);

111 
	`gtk_curve_£t_curve_ty≥
 (
GtkCurve
 *
curve
, 
GtkCurveTy≥
 
ty≥
);

114 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkdebug.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_DEBUG_H__


32 
	#__GTK_DEBUG_H__


	)

34 
	~<glib.h
>

36 
G_BEGIN_DECLS


39 
	mGTK_DEBUG_MISC
 = 1 << 0,

40 
	mGTK_DEBUG_PLUGSOCKET
 = 1 << 1,

41 
	mGTK_DEBUG_TEXT
 = 1 << 2,

42 
	mGTK_DEBUG_TREE
 = 1 << 3,

43 
	mGTK_DEBUG_UPDATES
 = 1 << 4,

44 
	mGTK_DEBUG_KEYBINDINGS
 = 1 << 5,

45 
	mGTK_DEBUG_MULTIHEAD
 = 1 << 6,

46 
	mGTK_DEBUG_MODULES
 = 1 << 7,

47 
	mGTK_DEBUG_GEOMETRY
 = 1 << 8,

48 
	mGTK_DEBUG_ICONTHEME
 = 1 << 9,

49 
	mGTK_DEBUG_PRINTING
 = 1 << 10,

50 
	mGTK_DEBUG_BUILDER
 = 1 << 11

51 } 
	tGtkDebugFœg
;

53 #ifde‡
G_ENABLE_DEBUG


55 
	#GTK_NOTE
(
ty≥
,
a˘i⁄
Ë
G_STMT_START
 { \

56 i‡(
gtk_debug_Êags
 & 
GTK_DEBUG_
##
ty≥
) \

57 { 
a˘i⁄
; }; } 
G_STMT_END


	)

61 
	#GTK_NOTE
(
ty≥
, 
a˘i⁄
)

	)

65 #ifde‡
G_OS_WIN32


66 #ifde‡
GTK_COMPILATION


67 
	#GTKVAR
 
	`__de˛•ec
(
dŒexp‹t
)

	)

69 
	#GTKVAR
 
	`__de˛•ec
(
dŒimp‹t
)

	)

72 
	#GTKVAR
 

	)

75 
GTKVAR
 
guöt
 
gtk_debug_Êags
;

77 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkdialog.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_DIALOG_H__


32 
	#__GTK_DIALOG_H__


	)

35 
	~<gtk/gtkwödow.h
>

38 
G_BEGIN_DECLS


43 
	mGTK_DIALOG_MODAL
 = 1 << 0,

44 
	mGTK_DIALOG_DESTROY_WITH_PARENT
 = 1 << 1,

45 
	mGTK_DIALOG_NO_SEPARATOR
 = 1 << 2

46 } 
	tGtkDülogFœgs
;

61 
	mGTK_RESPONSE_NONE
 = -1,

67 
	mGTK_RESPONSE_REJECT
 = -2,

68 
	mGTK_RESPONSE_ACCEPT
 = -3,

71 
	mGTK_RESPONSE_DELETE_EVENT
 = -4,

76 
	mGTK_RESPONSE_OK
 = -5,

77 
	mGTK_RESPONSE_CANCEL
 = -6,

78 
	mGTK_RESPONSE_CLOSE
 = -7,

79 
	mGTK_RESPONSE_YES
 = -8,

80 
	mGTK_RESPONSE_NO
 = -9,

81 
	mGTK_RESPONSE_APPLY
 = -10,

82 
	mGTK_RESPONSE_HELP
 = -11

83 } 
	tGtkRe•⁄£Ty≥
;

86 
	#GTK_TYPE_DIALOG
 (
	`gtk_dülog_gë_ty≥
 ())

	)

87 
	#GTK_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_DIALOG
, 
GtkDülog
))

	)

88 
	#GTK_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_DIALOG
, 
GtkDülogCœss
))

	)

89 
	#GTK_IS_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_DIALOG
))

	)

90 
	#GTK_IS_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_DIALOG
))

	)

91 
	#GTK_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_DIALOG
, 
GtkDülogCœss
))

	)

94 
_GtkDülog
 
	tGtkDülog
;

95 
_GtkDülogCœss
 
	tGtkDülogCœss
;

97 
	s_GtkDülog


99 
GtkWödow
 
	mwödow
;

102 
GtkWidgë
 *
GSEAL
 (
vbox
);

103 
GtkWidgë
 *
GSEAL
 (
a˘i⁄_¨ó
);

106 
GtkWidgë
 *
GSEAL
 (
£∑øt‹
);

109 
	s_GtkDülogCœss


111 
GtkWödowCœss
 
	m∑ª¡_˛ass
;

113 (* 
	mª•⁄£
Ë(
GtkDülog
 *
	mdülog
, 
göt
 
	mª•⁄£_id
);

117 (* 
	m˛o£
Ë(
GtkDülog
 *
	mdülog
);

120 (*
	m_gtk_ª£rved1
) ();

121 (*
	m_gtk_ª£rved2
) ();

122 (*
	m_gtk_ª£rved3
) ();

123 (*
	m_gtk_ª£rved4
) ();

127 
GTy≥
 
	$gtk_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

128 
GtkWidgë
* 
	`gtk_dülog_√w
 ();

130 
GtkWidgë
* 
	`gtk_dülog_√w_wôh_buâ⁄s
 (c⁄° 
gch¨
 *
tôÀ
,

131 
GtkWödow
 *
∑ª¡
,

132 
GtkDülogFœgs
 
Êags
,

133 c⁄° 
gch¨
 *
fú°_buâ⁄_ãxt
,

136 
	`gtk_dülog_add_a˘i⁄_widgë
 (
GtkDülog
 *
dülog
,

137 
GtkWidgë
 *
chûd
,

138 
göt
 
ª•⁄£_id
);

139 
GtkWidgë
* 
	`gtk_dülog_add_buâ⁄
 (
GtkDülog
 *
dülog
,

140 c⁄° 
gch¨
 *
buâ⁄_ãxt
,

141 
göt
 
ª•⁄£_id
);

142 
	$gtk_dülog_add_buâ⁄s
 (
GtkDülog
 *
dülog
,

143 c⁄° 
gch¨
 *
fú°_buâ⁄_ãxt
,

144 ...Ë
G_GNUC_NULL_TERMINATED
;

146 
	`gtk_dülog_£t_ª•⁄£_£nsôive
 (
GtkDülog
 *
dülog
,

147 
göt
 
ª•⁄£_id
,

148 
gboﬁón
 
£âög
);

149 
	`gtk_dülog_£t_deÁu…_ª•⁄£
 (
GtkDülog
 *
dülog
,

150 
göt
 
ª•⁄£_id
);

151 
göt
 
	`gtk_dülog_gë_ª•⁄£_f‹_widgë
 (
GtkDülog
 *
dülog
,

152 
GtkWidgë
 *
widgë
);

154 
	`gtk_dülog_£t_has_£∑øt‹
 (
GtkDülog
 *
dülog
,

155 
gboﬁón
 
£âög
);

156 
gboﬁón
 
	`gtk_dülog_gë_has_£∑øt‹
 (
GtkDülog
 *
dülog
);

158 
gboﬁón
 
	`gtk_Æã∫©ive_dülog_buâ⁄_‹dî
 (
GdkS¸ìn
 *
s¸ìn
);

159 
	`gtk_dülog_£t_Æã∫©ive_buâ⁄_‹dî
 (
GtkDülog
 *
dülog
,

160 
göt
 
fú°_ª•⁄£_id
,

162 
	`gtk_dülog_£t_Æã∫©ive_buâ⁄_‹dî_‰om_¨øy
 (
GtkDülog
 *
dülog
,

163 
göt
 
n_∑øms
,

164 
göt
 *
√w_‹dî
);

167 
	`gtk_dülog_ª•⁄£
 (
GtkDülog
 *
dülog
,

168 
göt
 
ª•⁄£_id
);

171 
göt
 
	`gtk_dülog_run
 (
GtkDülog
 *
dülog
);

173 
GtkWidgë
 * 
	`gtk_dülog_gë_a˘i⁄_¨ó
 (
GtkDülog
 *
dülog
);

174 
GtkWidgë
 * 
	`gtk_dülog_gë_c⁄ã¡_¨ó
 (
GtkDülog
 *
dülog
);

177 
	`_gtk_dülog_£t_ign‹e_£∑øt‹
 (
GtkDülog
 *
dülog
,

178 
gboﬁón
 
ign‹e_£∑øt‹
);

180 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkdnd.h

28 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

32 #i‚de‡
__GTK_DND_H__


33 
	#__GTK_DND_H__


	)

36 
	~<gtk/gtkwidgë.h
>

37 
	~<gtk/gtk£À˘i⁄.h
>

40 
G_BEGIN_DECLS


43 
	mGTK_DEST_DEFAULT_MOTION
 = 1 << 0,

44 
	mGTK_DEST_DEFAULT_HIGHLIGHT
 = 1 << 1,

45 
	mGTK_DEST_DEFAULT_DROP
 = 1 << 2,

46 
	mGTK_DEST_DEFAULT_ALL
 = 0x07

47 } 
	tGtkDe°DeÁu…s
;

52 
	mGTK_TARGET_SAME_APP
 = 1 << 0,

53 
	mGTK_TARGET_SAME_WIDGET
 = 1 << 1,

54 
	mGTK_TARGET_OTHER_APP
 = 1 << 2,

55 
	mGTK_TARGET_OTHER_WIDGET
 = 1 << 3

56 } 
	tGtkT¨gëFœgs
;

60 
gtk_døg_gë_d©a
 (
GtkWidgë
 *
widgë
,

61 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

62 
GdkAtom
 
èrgë
,

63 
guöt32
 
time_
);

64 
gtk_døg_föish
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

65 
gboﬁón
 
suc˚ss
,

66 
gboﬁón
 
dñ
,

67 
guöt32
 
time_
);

69 
GtkWidgë
 *
gtk_døg_gë_sour˚_widgë
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

71 
gtk_døg_highlight
 (
GtkWidgë
 *
widgë
);

72 
gtk_døg_unhighlight
 (
GtkWidgë
 *
widgë
);

74 
gtk_døg_de°_£t
 (
GtkWidgë
 *
widgë
,

75 
GtkDe°DeÁu…s
 
Êags
,

76 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

77 
göt
 
n_èrgës
,

78 
GdkDøgA˘i⁄
 
a˘i⁄s
);

80 
gtk_døg_de°_£t_¥oxy
 (
GtkWidgë
 *
widgë
,

81 
GdkWödow
 *
¥oxy_wödow
,

82 
GdkDøgPrŸocﬁ
 
¥Ÿocﬁ
,

83 
gboﬁón
 
u£_co‹dö©es
);

85 
gtk_døg_de°_un£t
 (
GtkWidgë
 *
widgë
);

87 
GdkAtom
 
gtk_døg_de°_föd_èrgë
 (
GtkWidgë
 *
widgë
,

88 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

89 
GtkT¨gëLi°
 *
èrgë_li°
);

90 
GtkT¨gëLi°
* 
gtk_døg_de°_gë_èrgë_li°
 (
GtkWidgë
 *
widgë
);

91 
gtk_døg_de°_£t_èrgë_li°
 (
GtkWidgë
 *
widgë
,

92 
GtkT¨gëLi°
 *
èrgë_li°
);

93 
gtk_døg_de°_add_ãxt_èrgës
 (
GtkWidgë
 *
widgë
);

94 
gtk_døg_de°_add_image_èrgës
 (
GtkWidgë
 *
widgë
);

95 
gtk_døg_de°_add_uri_èrgës
 (
GtkWidgë
 *
widgë
);

97 
gtk_døg_de°_£t_åack_mŸi⁄
 (
GtkWidgë
 *
widgë
,

98 
gboﬁón
 
åack_mŸi⁄
);

99 
gboﬁón
 
gtk_døg_de°_gë_åack_mŸi⁄
 (
GtkWidgë
 *
widgë
);

103 
gtk_døg_sour˚_£t
 (
GtkWidgë
 *
widgë
,

104 
GdkModifõrTy≥
 
°¨t_buâ⁄_mask
,

105 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

106 
göt
 
n_èrgës
,

107 
GdkDøgA˘i⁄
 
a˘i⁄s
);

109 
gtk_døg_sour˚_un£t
 (
GtkWidgë
 *
widgë
);

111 
GtkT¨gëLi°
* 
gtk_døg_sour˚_gë_èrgë_li°
 (
GtkWidgë
 *
widgë
);

112 
gtk_døg_sour˚_£t_èrgë_li°
 (
GtkWidgë
 *
widgë
,

113 
GtkT¨gëLi°
 *
èrgë_li°
);

114 
gtk_døg_sour˚_add_ãxt_èrgës
 (
GtkWidgë
 *
widgë
);

115 
gtk_døg_sour˚_add_image_èrgës
 (
GtkWidgë
 *
widgë
);

116 
gtk_døg_sour˚_add_uri_èrgës
 (
GtkWidgë
 *
widgë
);

118 
gtk_døg_sour˚_£t_ic⁄
 (
GtkWidgë
 *
widgë
,

119 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

120 
GdkPixm≠
 *
pixm≠
,

121 
GdkBôm≠
 *
mask
);

122 
gtk_døg_sour˚_£t_ic⁄_pixbuf
 (
GtkWidgë
 *
widgë
,

123 
GdkPixbuf
 *
pixbuf
);

124 
gtk_døg_sour˚_£t_ic⁄_°ock
 (
GtkWidgë
 *
widgë
,

125 c⁄° 
gch¨
 *
°ock_id
);

126 
gtk_døg_sour˚_£t_ic⁄_«me
 (
GtkWidgë
 *
widgë
,

127 c⁄° 
gch¨
 *
ic⁄_«me
);

133 
GdkDøgC⁄ãxt
 *
gtk_døg_begö
 (
GtkWidgë
 *
widgë
,

134 
GtkT¨gëLi°
 *
èrgës
,

135 
GdkDøgA˘i⁄
 
a˘i⁄s
,

136 
göt
 
buâ⁄
,

137 
GdkEvít
 *
evít
);

141 
gtk_døg_£t_ic⁄_widgë
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

142 
GtkWidgë
 *
widgë
,

143 
göt
 
hŸ_x
,

144 
göt
 
hŸ_y
);

145 
gtk_døg_£t_ic⁄_pixm≠
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

146 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

147 
GdkPixm≠
 *
pixm≠
,

148 
GdkBôm≠
 *
mask
,

149 
göt
 
hŸ_x
,

150 
göt
 
hŸ_y
);

151 
gtk_døg_£t_ic⁄_pixbuf
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

152 
GdkPixbuf
 *
pixbuf
,

153 
göt
 
hŸ_x
,

154 
göt
 
hŸ_y
);

155 
gtk_døg_£t_ic⁄_°ock
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

156 c⁄° 
gch¨
 *
°ock_id
,

157 
göt
 
hŸ_x
,

158 
göt
 
hŸ_y
);

159 
gtk_døg_£t_ic⁄_«me
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

160 c⁄° 
gch¨
 *
ic⁄_«me
,

161 
göt
 
hŸ_x
,

162 
göt
 
hŸ_y
);

164 
gtk_døg_£t_ic⁄_deÁu…
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

166 
gboﬁón
 
gtk_døg_check_thªshﬁd
 (
GtkWidgë
 *
widgë
,

167 
göt
 
°¨t_x
,

168 
göt
 
°¨t_y
,

169 
göt
 
cuºít_x
,

170 
göt
 
cuºít_y
);

173 
_gtk_døg_sour˚_h™dÀ_evít
 (
GtkWidgë
 *
widgë
,

174 
GdkEvít
 *
evít
);

175 
_gtk_døg_de°_h™dÀ_evít
 (
GtkWidgë
 *
t›Àvñ
,

176 
GdkEvít
 *
evít
);

178 #i‚de‡
GTK_DISABLE_DEPRECATED


179 
gtk_døg_£t_deÁu…_ic⁄
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

180 
GdkPixm≠
 *
pixm≠
,

181 
GdkBôm≠
 *
mask
,

182 
göt
 
hŸ_x
,

183 
göt
 
hŸ_y
);

186 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkdrawingarea.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_DRAWING_AREA_H__


32 
	#__GTK_DRAWING_AREA_H__


	)

35 
	~<gtk/gtkwidgë.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_DRAWING_AREA
 (
	`gtk_døwög_¨ó_gë_ty≥
 ())

	)

41 
	#GTK_DRAWING_AREA
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_DRAWING_AREA
, 
GtkDøwögAªa
))

	)

42 
	#GTK_DRAWING_AREA_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_DRAWING_AREA
, 
GtkDøwögAªaCœss
))

	)

43 
	#GTK_IS_DRAWING_AREA
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_DRAWING_AREA
))

	)

44 
	#GTK_IS_DRAWING_AREA_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_DRAWING_AREA
))

	)

45 
	#GTK_DRAWING_AREA_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_DRAWING_AREA
, 
GtkDøwögAªaCœss
))

	)

48 
_GtkDøwögAªa
 
	tGtkDøwögAªa
;

49 
_GtkDøwögAªaCœss
 
	tGtkDøwögAªaCœss
;

51 
	s_GtkDøwögAªa


53 
GtkWidgë
 
	mwidgë
;

55 
gpoöãr
 
GSEAL
 (
døw_d©a
);

58 
	s_GtkDøwögAªaCœss


60 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

63 (*
	m_gtk_ª£rved1
) ();

64 (*
	m_gtk_ª£rved2
) ();

65 (*
	m_gtk_ª£rved3
) ();

66 (*
	m_gtk_ª£rved4
) ();

70 
GTy≥
 
	$gtk_døwög_¨ó_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
GtkWidgë
* 
	`gtk_døwög_¨ó_√w
 ();

73 #i‚de‡
GTK_DISABLE_DEPRECATED


74 
	`gtk_døwög_¨ó_size
 (
GtkDøwögAªa
 *
d¨ó
,

75 
göt
 
width
,

76 
göt
 
height
);

80 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkeditable.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_EDITABLE_H__


32 
	#__GTK_EDITABLE_H__


	)

35 
	~<gtk/gtkwidgë.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_EDITABLE
 (
	`gtk_edôabÀ_gë_ty≥
 ())

	)

41 
	#GTK_EDITABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_EDITABLE
, 
GtkEdôabÀ
))

	)

42 
	#GTK_EDITABLE_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_EDITABLE
, 
GtkEdôabÀCœss
))

	)

43 
	#GTK_IS_EDITABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_EDITABLE
))

	)

44 
	#GTK_IS_EDITABLE_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_EDITABLE
))

	)

45 
	#GTK_EDITABLE_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((ö°), 
GTK_TYPE_EDITABLE
, 
GtkEdôabÀCœss
))

	)

47 
_GtkEdôabÀ
 
	tGtkEdôabÀ
;

48 
_GtkEdôabÀCœss
 
	tGtkEdôabÀCœss
;

50 
	s_GtkEdôabÀCœss


52 
GTy≥I¡îÁ˚
 
	mba£_iÁ˚
;

55 (* 
	mö£π_ãxt
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

56 c⁄° 
gch¨
 *
	mãxt
,

57 
göt
 
	mÀngth
,

58 
göt
 *
	mposôi⁄
);

59 (* 
	mdñëe_ãxt
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

60 
göt
 
	m°¨t_pos
,

61 
göt
 
	míd_pos
);

62 (* 
	mch™ged
Ë(
GtkEdôabÀ
 *
	medôabÀ
);

65 (* 
	mdo_ö£π_ãxt
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

66 c⁄° 
gch¨
 *
	mãxt
,

67 
göt
 
	mÀngth
,

68 
göt
 *
	mposôi⁄
);

69 (* 
	mdo_dñëe_ãxt
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

70 
göt
 
	m°¨t_pos
,

71 
göt
 
	míd_pos
);

73 
	mgch¨
* (* 
	mgë_ch¨s
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

74 
göt
 
	m°¨t_pos
,

75 
göt
 
	míd_pos
);

76 (* 
	m£t_£À˘i⁄_bounds
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

77 
göt
 
	m°¨t_pos
,

78 
göt
 
	míd_pos
);

79 
gboﬁón
 (* 
gë_£À˘i⁄_bounds
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

80 
göt
 *
	m°¨t_pos
,

81 
göt
 *
	míd_pos
);

82 (* 
	m£t_posôi⁄
Ë(
GtkEdôabÀ
 *
	medôabÀ
,

83 
göt
 
	mposôi⁄
);

84 
göt
 (* 
gë_posôi⁄
Ë(
GtkEdôabÀ
 *
	medôabÀ
);

87 
GTy≥
 
	$gtk_edôabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

88 
	`gtk_edôabÀ_£À˘_ªgi⁄
 (
GtkEdôabÀ
 *
edôabÀ
,

89 
göt
 
°¨t_pos
,

90 
göt
 
íd_pos
);

91 
gboﬁón
 
	`gtk_edôabÀ_gë_£À˘i⁄_bounds
 (
GtkEdôabÀ
 *
edôabÀ
,

92 
göt
 *
°¨t_pos
,

93 
göt
 *
íd_pos
);

94 
	`gtk_edôabÀ_ö£π_ãxt
 (
GtkEdôabÀ
 *
edôabÀ
,

95 c⁄° 
gch¨
 *
√w_ãxt
,

96 
göt
 
√w_ãxt_Àngth
,

97 
göt
 *
posôi⁄
);

98 
	`gtk_edôabÀ_dñëe_ãxt
 (
GtkEdôabÀ
 *
edôabÀ
,

99 
göt
 
°¨t_pos
,

100 
göt
 
íd_pos
);

101 
gch¨
* 
	`gtk_edôabÀ_gë_ch¨s
 (
GtkEdôabÀ
 *
edôabÀ
,

102 
göt
 
°¨t_pos
,

103 
göt
 
íd_pos
);

104 
	`gtk_edôabÀ_cut_˛ùbﬂrd
 (
GtkEdôabÀ
 *
edôabÀ
);

105 
	`gtk_edôabÀ_c›y_˛ùbﬂrd
 (
GtkEdôabÀ
 *
edôabÀ
);

106 
	`gtk_edôabÀ_∑°e_˛ùbﬂrd
 (
GtkEdôabÀ
 *
edôabÀ
);

107 
	`gtk_edôabÀ_dñëe_£À˘i⁄
 (
GtkEdôabÀ
 *
edôabÀ
);

108 
	`gtk_edôabÀ_£t_posôi⁄
 (
GtkEdôabÀ
 *
edôabÀ
,

109 
göt
 
posôi⁄
);

110 
göt
 
	`gtk_edôabÀ_gë_posôi⁄
 (
GtkEdôabÀ
 *
edôabÀ
);

111 
	`gtk_edôabÀ_£t_edôabÀ
 (
GtkEdôabÀ
 *
edôabÀ
,

112 
gboﬁón
 
is_edôabÀ
);

113 
gboﬁón
 
	`gtk_edôabÀ_gë_edôabÀ
 (
GtkEdôabÀ
 *
edôabÀ
);

115 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkentry.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_ENTRY_H__


36 
	#__GTK_ENTRY_H__


	)

39 
	~<gtk/gtkedôabÀ.h
>

40 
	~<gtk/gtkimc⁄ãxt.h
>

41 
	~<gtk/gtkmíu.h
>

42 
	~<gtk/gtkíåycom∂ëi⁄.h
>

43 
	~<gtk/gtkimage.h
>

44 
	~<gtk/gtk£À˘i⁄.h
>

47 
	gG_BEGIN_DECLS


49 
	#GTK_TYPE_ENTRY
 (
	`gtk_íåy_gë_ty≥
 ())

	)

50 
	#GTK_ENTRY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ENTRY
, 
GtkE¡ry
))

	)

51 
	#GTK_ENTRY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ENTRY
, 
GtkE¡ryCœss
))

	)

52 
	#GTK_IS_ENTRY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ENTRY
))

	)

53 
	#GTK_IS_ENTRY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ENTRY
))

	)

54 
	#GTK_ENTRY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ENTRY
, 
GtkE¡ryCœss
))

	)

58 
	mGTK_ENTRY_ICON_PRIMARY
,

59 
	mGTK_ENTRY_ICON_SECONDARY


60 } 
	tGtkE¡ryIc⁄Posôi⁄
;

62 
_GtkE¡ry
 
	tGtkE¡ry
;

63 
_GtkE¡ryCœss
 
	tGtkE¡ryCœss
;

65 
	s_GtkE¡ry


67 
GtkWidgë
 
	mwidgë
;

69 
gch¨
 *
GSEAL
 (
ãxt
);

71 
guöt
 
GSEAL
 (
edôabÀ
) : 1;

72 
guöt
 
GSEAL
 (
visibÀ
) : 1;

73 
guöt
 
GSEAL
 (
ovîwrôe_mode
) : 1;

74 
guöt
 
GSEAL
 (
ö_døg
) : 1;

77 
guöt16
 
GSEAL
 (
ãxt_Àngth
);

78 
guöt16
 
GSEAL
 (
ãxt_max_Àngth
);

81 
GdkWödow
 *
GSEAL
 (
ãxt_¨ó
);

82 
GtkIMC⁄ãxt
 *
GSEAL
 (
im_c⁄ãxt
);

83 
GtkWidgë
 *
GSEAL
 (
p›up_míu
);

85 
göt
 
GSEAL
 (
cuºít_pos
);

86 
göt
 
GSEAL
 (
£À˘i⁄_bound
);

88 
P™goLayout
 *
GSEAL
 (
ˇched_œyout
);

90 
guöt
 
GSEAL
 (
ˇche_ö˛udes_¥ìdô
) : 1;

91 
guöt
 
GSEAL
 (
√ed_im_ª£t
) : 1;

92 
guöt
 
GSEAL
 (
has_‰ame
) : 1;

93 
guöt
 
GSEAL
 (
a˘iv©es_deÁu…
) : 1;

94 
guöt
 
GSEAL
 (
curs‹_visibÀ
) : 1;

95 
guöt
 
GSEAL
 (
ö_˛ick
) : 1;

96 
guöt
 
GSEAL
 (
is_˚Œ_ªndîî
) : 1;

97 
guöt
 
GSEAL
 (
edôög_ˇn˚Àd
) : 1;

98 
guöt
 
GSEAL
 (
mou£_curs‹_obscuªd
) : 1;

99 
guöt
 
GSEAL
 (
£À˘_w‹ds
) : 1;

100 
guöt
 
GSEAL
 (
£À˘_löes
) : 1;

101 
guöt
 
GSEAL
 (
ªsﬁved_dú
) : 4;

102 
guöt
 
GSEAL
 (
åunˇã_mu…ûöe
) : 1;

104 
guöt
 
GSEAL
 (
buâ⁄
);

105 
guöt
 
GSEAL
 (
blök_timeout
);

106 
guöt
 
GSEAL
 (
ªcompuã_idÀ
);

107 
göt
 
GSEAL
 (
s¸ﬁl_off£t
);

108 
göt
 
GSEAL
 (
as˚¡
);

109 
göt
 
GSEAL
 (
des˚¡
);

111 
guöt16
 
GSEAL
 (
ãxt_size
);

112 
guöt16
 
GSEAL
 (
n_byãs
);

114 
guöt16
 
GSEAL
 (
¥ìdô_Àngth
);

115 
guöt16
 
GSEAL
 (
¥ìdô_curs‹
);

117 
göt
 
GSEAL
 (
dnd_posôi⁄
);

119 
göt
 
GSEAL
 (
døg_°¨t_x
);

120 
göt
 
GSEAL
 (
døg_°¨t_y
);

122 
gunich¨
 
GSEAL
 (
övisibÀ_ch¨
);

124 
göt
 
GSEAL
 (
width_ch¨s
);

127 
	s_GtkE¡ryCœss


129 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

132 (* 
	mp›uœã_p›up
Ë(
GtkE¡ry
 *
	míåy
,

133 
GtkMíu
 *
	mmíu
);

137 (* 
	ma˘iv©e
Ë(
GtkE¡ry
 *
	míåy
);

138 (* 
	mmove_curs‹
Ë(
GtkE¡ry
 *
	míåy
,

139 
GtkMovemítSãp
 
	m°ï
,

140 
göt
 
	mcou¡
,

141 
gboﬁón
 
	mexãnd_£À˘i⁄
);

142 (* 
	mö£π_©_curs‹
Ë(
GtkE¡ry
 *
	míåy
,

143 c⁄° 
gch¨
 *
	m°r
);

144 (* 
	mdñëe_‰om_curs‹
Ë(
GtkE¡ry
 *
	míåy
,

145 
GtkDñëeTy≥
 
	mty≥
,

146 
göt
 
	mcou¡
);

147 (* 
	mback•a˚
Ë(
GtkE¡ry
 *
	míåy
);

148 (* 
	mcut_˛ùbﬂrd
Ë(
GtkE¡ry
 *
	míåy
);

149 (* 
	mc›y_˛ùbﬂrd
Ë(
GtkE¡ry
 *
	míåy
);

150 (* 
	m∑°e_˛ùbﬂrd
Ë(
GtkE¡ry
 *
	míåy
);

151 (* 
	mtoggÀ_ovîwrôe
Ë(
GtkE¡ry
 *
	míåy
);

154 (* 
	mgë_ãxt_¨ó_size
Ë(
GtkE¡ry
 *
	míåy
,

155 
göt
 *
	mx
,

156 
göt
 *
	my
,

157 
göt
 *
	mwidth
,

158 
göt
 *
	mheight
);

161 (*
	m_gtk_ª£rved1
) ();

162 (*
	m_gtk_ª£rved2
) ();

165 
GTy≥
 
	$gtk_íåy_gë_ty≥
 (Ë
G_GNUC_CONST
;

166 
GtkWidgë
* 
	`gtk_íåy_√w
 ();

167 
	`gtk_íåy_£t_visibûôy
 (
GtkE¡ry
 *
íåy
,

168 
gboﬁón
 
visibÀ
);

169 
gboﬁón
 
	`gtk_íåy_gë_visibûôy
 (
GtkE¡ry
 *
íåy
);

170 
	`gtk_íåy_£t_övisibÀ_ch¨
 (
GtkE¡ry
 *
íåy
,

171 
gunich¨
 
ch
);

172 
gunich¨
 
	`gtk_íåy_gë_övisibÀ_ch¨
 (
GtkE¡ry
 *
íåy
);

173 
	`gtk_íåy_un£t_övisibÀ_ch¨
 (
GtkE¡ry
 *
íåy
);

174 
	`gtk_íåy_£t_has_‰ame
 (
GtkE¡ry
 *
íåy
,

175 
gboﬁón
 
£âög
);

176 
gboﬁón
 
	`gtk_íåy_gë_has_‰ame
 (
GtkE¡ry
 *
íåy
);

177 
	`gtk_íåy_£t_ö√r_b‹dî
 (
GtkE¡ry
 *
íåy
,

178 c⁄° 
GtkB‹dî
 *
b‹dî
);

179 
G_CONST_RETURN
 
GtkB‹dî
* 
	`gtk_íåy_gë_ö√r_b‹dî
 (
GtkE¡ry
 *
íåy
);

180 
	`gtk_íåy_£t_ovîwrôe_mode
 (
GtkE¡ry
 *
íåy
,

181 
gboﬁón
 
ovîwrôe
);

182 
gboﬁón
 
	`gtk_íåy_gë_ovîwrôe_mode
 (
GtkE¡ry
 *
íåy
);

184 
	`gtk_íåy_£t_max_Àngth
 (
GtkE¡ry
 *
íåy
,

185 
göt
 
max
);

186 
göt
 
	`gtk_íåy_gë_max_Àngth
 (
GtkE¡ry
 *
íåy
);

187 
guöt16
 
	`gtk_íåy_gë_ãxt_Àngth
 (
GtkE¡ry
 *
íåy
);

188 
	`gtk_íåy_£t_a˘iv©es_deÁu…
 (
GtkE¡ry
 *
íåy
,

189 
gboﬁón
 
£âög
);

190 
gboﬁón
 
	`gtk_íåy_gë_a˘iv©es_deÁu…
 (
GtkE¡ry
 *
íåy
);

192 
	`gtk_íåy_£t_width_ch¨s
 (
GtkE¡ry
 *
íåy
,

193 
göt
 
n_ch¨s
);

194 
göt
 
	`gtk_íåy_gë_width_ch¨s
 (
GtkE¡ry
 *
íåy
);

198 
	`gtk_íåy_£t_ãxt
 (
GtkE¡ry
 *
íåy
,

199 c⁄° 
gch¨
 *
ãxt
);

201 
G_CONST_RETURN
 
gch¨
* 
	`gtk_íåy_gë_ãxt
 (
GtkE¡ry
 *
íåy
);

203 
P™goLayout
* 
	`gtk_íåy_gë_œyout
 (
GtkE¡ry
 *
íåy
);

204 
	`gtk_íåy_gë_œyout_off£ts
 (
GtkE¡ry
 *
íåy
,

205 
göt
 *
x
,

206 
göt
 *
y
);

207 
	`gtk_íåy_£t_Æignmít
 (
GtkE¡ry
 *
íåy
,

208 
gÊﬂt
 
xÆign
);

209 
gÊﬂt
 
	`gtk_íåy_gë_Æignmít
 (
GtkE¡ry
 *
íåy
);

211 
	`gtk_íåy_£t_com∂ëi⁄
 (
GtkE¡ry
 *
íåy
,

212 
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

213 
GtkE¡ryCom∂ëi⁄
 *
	`gtk_íåy_gë_com∂ëi⁄
 (
GtkE¡ry
 *
íåy
);

215 
göt
 
	`gtk_íåy_œyout_ödex_to_ãxt_ödex
 (
GtkE¡ry
 *
íåy
,

216 
göt
 
œyout_ödex
);

217 
göt
 
	`gtk_íåy_ãxt_ödex_to_œyout_ödex
 (
GtkE¡ry
 *
íåy
,

218 
göt
 
ãxt_ödex
);

222 
	`gtk_íåy_£t_curs‹_hadju°mít
 (
GtkE¡ry
 *
íåy
,

223 
GtkAdju°mít
 *
adju°mít
);

224 
GtkAdju°mít
* 
	`gtk_íåy_gë_curs‹_hadju°mít
 (
GtkE¡ry
 *
íåy
);

228 
	`gtk_íåy_£t_¥ogªss_‰a˘i⁄
 (
GtkE¡ry
 *
íåy
,

229 
gdoubÀ
 
‰a˘i⁄
);

230 
gdoubÀ
 
	`gtk_íåy_gë_¥ogªss_‰a˘i⁄
 (
GtkE¡ry
 *
íåy
);

232 
	`gtk_íåy_£t_¥ogªss_pul£_°ï
 (
GtkE¡ry
 *
íåy
,

233 
gdoubÀ
 
‰a˘i⁄
);

234 
gdoubÀ
 
	`gtk_íåy_gë_¥ogªss_pul£_°ï
 (
GtkE¡ry
 *
íåy
);

236 
	`gtk_íåy_¥ogªss_pul£
 (
GtkE¡ry
 *
íåy
);

240 
	`gtk_íåy_£t_ic⁄_‰om_pixbuf
 (
GtkE¡ry
 *
íåy
,

241 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

242 
GdkPixbuf
 *
pixbuf
);

243 
	`gtk_íåy_£t_ic⁄_‰om_°ock
 (
GtkE¡ry
 *
íåy
,

244 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

245 c⁄° 
gch¨
 *
°ock_id
);

246 
	`gtk_íåy_£t_ic⁄_‰om_ic⁄_«me
 (
GtkE¡ry
 *
íåy
,

247 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

248 c⁄° 
gch¨
 *
ic⁄_«me
);

249 
	`gtk_íåy_£t_ic⁄_‰om_gic⁄
 (
GtkE¡ry
 *
íåy
,

250 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

251 
GIc⁄
 *
ic⁄
);

252 
GtkImageTy≥
 
	`gtk_íåy_gë_ic⁄_°‹age_ty≥
 (
GtkE¡ry
 *
íåy
,

253 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

254 
GdkPixbuf
* 
	`gtk_íåy_gë_ic⁄_pixbuf
 (
GtkE¡ry
 *
íåy
,

255 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

256 c⁄° 
gch¨
* 
	`gtk_íåy_gë_ic⁄_°ock
 (
GtkE¡ry
 *
íåy
,

257 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

258 c⁄° 
gch¨
* 
	`gtk_íåy_gë_ic⁄_«me
 (
GtkE¡ry
 *
íåy
,

259 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

260 
GIc⁄
* 
	`gtk_íåy_gë_ic⁄_gic⁄
 (
GtkE¡ry
 *
íåy
,

261 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

262 
	`gtk_íåy_£t_ic⁄_a˘iv©abÀ
 (
GtkE¡ry
 *
íåy
,

263 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

264 
gboﬁón
 
a˘iv©abÀ
);

265 
gboﬁón
 
	`gtk_íåy_gë_ic⁄_a˘iv©abÀ
 (
GtkE¡ry
 *
íåy
,

266 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

267 
	`gtk_íåy_£t_ic⁄_£nsôive
 (
GtkE¡ry
 *
íåy
,

268 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

269 
gboﬁón
 
£nsôive
);

270 
gboﬁón
 
	`gtk_íåy_gë_ic⁄_£nsôive
 (
GtkE¡ry
 *
íåy
,

271 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

272 
göt
 
	`gtk_íåy_gë_ic⁄_©_pos
 (
GtkE¡ry
 *
íåy
,

273 
göt
 
x
,

274 
göt
 
y
);

275 
	`gtk_íåy_£t_ic⁄_toﬁtù_ãxt
 (
GtkE¡ry
 *
íåy
,

276 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

277 c⁄° 
gch¨
 *
toﬁtù
);

278 
gch¨
 * 
	`gtk_íåy_gë_ic⁄_toﬁtù_ãxt
 (
GtkE¡ry
 *
íåy
,

279 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

280 
	`gtk_íåy_£t_ic⁄_toﬁtù_m¨kup
 (
GtkE¡ry
 *
íåy
,

281 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

282 c⁄° 
gch¨
 *
toﬁtù
);

283 
gch¨
 * 
	`gtk_íåy_gë_ic⁄_toﬁtù_m¨kup
 (
GtkE¡ry
 *
íåy
,

284 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
);

285 
	`gtk_íåy_£t_ic⁄_døg_sour˚
 (
GtkE¡ry
 *
íåy
,

286 
GtkE¡ryIc⁄Posôi⁄
 
ic⁄_pos
,

287 
GtkT¨gëLi°
 *
èrgë_li°
,

288 
GdkDøgA˘i⁄
 
a˘i⁄s
);

289 
göt
 
	`gtk_íåy_gë_cuºít_ic⁄_døg_sour˚
 (
GtkE¡ry
 *
íåy
);

295 #i‚de‡
GTK_DISABLE_DEPRECATED


296 
GtkWidgë
* 
	`gtk_íåy_√w_wôh_max_Àngth
 (
göt
 
max
);

297 
	`gtk_íåy_≠≥nd_ãxt
 (
GtkE¡ry
 *
íåy
,

298 c⁄° 
gch¨
 *
ãxt
);

299 
	`gtk_íåy_¥ïíd_ãxt
 (
GtkE¡ry
 *
íåy
,

300 c⁄° 
gch¨
 *
ãxt
);

301 
	`gtk_íåy_£t_posôi⁄
 (
GtkE¡ry
 *
íåy
,

302 
göt
 
posôi⁄
);

303 
	`gtk_íåy_£À˘_ªgi⁄
 (
GtkE¡ry
 *
íåy
,

304 
göt
 
°¨t
,

305 
göt
 
íd
);

306 
	`gtk_íåy_£t_edôabÀ
 (
GtkE¡ry
 *
íåy
,

307 
gboﬁón
 
edôabÀ
);

310 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkentrycompletion.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_ENTRY_COMPLETION_H__


25 
	#__GTK_ENTRY_COMPLETION_H__


	)

27 
	~<gtk/gtkåìmodñ.h
>

28 
	~<gtk/gtkli°°‹e.h
>

29 
	~<gtk/gtkåìvõwcﬁumn.h
>

30 
	~<gtk/gtkåìmodñfûãr.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_ENTRY_COMPLETION
 (
	`gtk_íåy_com∂ëi⁄_gë_ty≥
 ())

	)

35 
	#GTK_ENTRY_COMPLETION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ENTRY_COMPLETION
, 
GtkE¡ryCom∂ëi⁄
))

	)

36 
	#GTK_ENTRY_COMPLETION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ENTRY_COMPLETION
, 
GtkE¡ryCom∂ëi⁄Cœss
))

	)

37 
	#GTK_IS_ENTRY_COMPLETION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ENTRY_COMPLETION
))

	)

38 
	#GTK_IS_ENTRY_COMPLETION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ENTRY_COMPLETION
))

	)

39 
	#GTK_ENTRY_COMPLETION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ENTRY_COMPLETION
, 
GtkE¡ryCom∂ëi⁄Cœss
))

	)

41 
_GtkE¡ryCom∂ëi⁄
 
	tGtkE¡ryCom∂ëi⁄
;

42 
_GtkE¡ryCom∂ëi⁄Cœss
 
	tGtkE¡ryCom∂ëi⁄Cœss
;

43 
_GtkE¡ryCom∂ëi⁄Priv©e
 
	tGtkE¡ryCom∂ëi⁄Priv©e
;

45 
	$gboﬁón
 (* 
	tGtkE¡ryCom∂ëi⁄M©chFunc
Ë(
	tGtkE¡ryCom∂ëi⁄
 *
	tcom∂ëi⁄
,

46 c⁄° 
	tgch¨
 *
	tkey
,

47 
	tGtkTªeIãr
 *
	tôî
,

48 
	tgpoöãr
 
	tu£r_d©a
);

51 
	s_GtkE¡ryCom∂ëi⁄


53 
GObje˘
 
∑ª¡_ö°™˚
;

56 
GtkE¡ryCom∂ëi⁄Priv©e
 *
	`GSEAL
 (
¥iv
);

59 
	s_GtkE¡ryCom∂ëi⁄Cœss


61 
GObje˘Cœss
 
∑ª¡_˛ass
;

63 
	`gboﬁón
 (* 
m©ch_£À˘ed
Ë(
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

64 
GtkTªeModñ
 *
modñ
,

65 
GtkTªeIãr
 *
ôî
);

66 (* 
a˘i⁄_a˘iv©ed
Ë(
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

67 
göt
 
ödex_
);

68 
	`gboﬁón
 (* 
ö£π_¥efix
Ë(
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

69 c⁄° 
gch¨
 *
¥efix
);

70 
	`gboﬁón
 (* 
curs‹_⁄_m©ch
Ë(
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

71 
GtkTªeModñ
 *
modñ
,

72 
GtkTªeIãr
 *
ôî
);

75 (*
_gtk_ª£rved0
) ();

76 (*
_gtk_ª£rved1
) ();

80 
GTy≥
 
	$gtk_íåy_com∂ëi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

81 
GtkE¡ryCom∂ëi⁄
 *
	`gtk_íåy_com∂ëi⁄_√w
 ();

83 
GtkWidgë
 *
	`gtk_íåy_com∂ëi⁄_gë_íåy
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

85 
	`gtk_íåy_com∂ëi⁄_£t_modñ
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

86 
GtkTªeModñ
 *
modñ
);

87 
GtkTªeModñ
 *
	`gtk_íåy_com∂ëi⁄_gë_modñ
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

89 
	`gtk_íåy_com∂ëi⁄_£t_m©ch_func
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

90 
GtkE¡ryCom∂ëi⁄M©chFunc
 
func
,

91 
gpoöãr
 
func_d©a
,

92 
GDe°royNŸify
 
func_nŸify
);

93 
	`gtk_íåy_com∂ëi⁄_£t_möimum_key_Àngth
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

94 
göt
 
Àngth
);

95 
göt
 
	`gtk_íåy_com∂ëi⁄_gë_möimum_key_Àngth
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

96 
	`gtk_íåy_com∂ëi⁄_com∂ëe
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

97 
	`gtk_íåy_com∂ëi⁄_ö£π_¥efix
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

99 
	`gtk_íåy_com∂ëi⁄_ö£π_a˘i⁄_ãxt
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

100 
göt
 
ödex_
,

101 c⁄° 
gch¨
 *
ãxt
);

102 
	`gtk_íåy_com∂ëi⁄_ö£π_a˘i⁄_m¨kup
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

103 
göt
 
ödex_
,

104 c⁄° 
gch¨
 *
m¨kup
);

105 
	`gtk_íåy_com∂ëi⁄_dñëe_a˘i⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

106 
göt
 
ödex_
);

108 
	`gtk_íåy_com∂ëi⁄_£t_ölöe_com∂ëi⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

109 
gboﬁón
 
ölöe_com∂ëi⁄
);

110 
gboﬁón
 
	`gtk_íåy_com∂ëi⁄_gë_ölöe_com∂ëi⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

111 
	`gtk_íåy_com∂ëi⁄_£t_ölöe_£À˘i⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

112 
gboﬁón
 
ölöe_£À˘i⁄
);

113 
gboﬁón
 
	`gtk_íåy_com∂ëi⁄_gë_ölöe_£À˘i⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

114 
	`gtk_íåy_com∂ëi⁄_£t_p›up_com∂ëi⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

115 
gboﬁón
 
p›up_com∂ëi⁄
);

116 
gboﬁón
 
	`gtk_íåy_com∂ëi⁄_gë_p›up_com∂ëi⁄
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

117 
	`gtk_íåy_com∂ëi⁄_£t_p›up_£t_width
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

118 
gboﬁón
 
p›up_£t_width
);

119 
gboﬁón
 
	`gtk_íåy_com∂ëi⁄_gë_p›up_£t_width
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

120 
	`gtk_íåy_com∂ëi⁄_£t_p›up_sögÀ_m©ch
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

121 
gboﬁón
 
p›up_sögÀ_m©ch
);

122 
gboﬁón
 
	`gtk_íåy_com∂ëi⁄_gë_p›up_sögÀ_m©ch
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

124 c⁄° 
gch¨
 *
	`gtk_íåy_com∂ëi⁄_gë_com∂ëi⁄_¥efix
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

126 
	`gtk_íåy_com∂ëi⁄_£t_ãxt_cﬁumn
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
,

127 
göt
 
cﬁumn
);

128 
göt
 
	`gtk_íåy_com∂ëi⁄_gë_ãxt_cﬁumn
 (
GtkE¡ryCom∂ëi⁄
 *
com∂ëi⁄
);

130 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkenums.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ENUMS_H__


32 
	#__GTK_ENUMS_H__


	)

34 
	~<glib-obje˘.h
>

36 
G_BEGIN_DECLS


41 
	mGTK_ANCHOR_CENTER
,

42 
	mGTK_ANCHOR_NORTH
,

43 
	mGTK_ANCHOR_NORTH_WEST
,

44 
	mGTK_ANCHOR_NORTH_EAST
,

45 
	mGTK_ANCHOR_SOUTH
,

46 
	mGTK_ANCHOR_SOUTH_WEST
,

47 
	mGTK_ANCHOR_SOUTH_EAST
,

48 
	mGTK_ANCHOR_WEST
,

49 
	mGTK_ANCHOR_EAST
,

50 
	mGTK_ANCHOR_N
 = 
GTK_ANCHOR_NORTH
,

51 
	mGTK_ANCHOR_NW
 = 
GTK_ANCHOR_NORTH_WEST
,

52 
	mGTK_ANCHOR_NE
 = 
GTK_ANCHOR_NORTH_EAST
,

53 
	mGTK_ANCHOR_S
 = 
GTK_ANCHOR_SOUTH
,

54 
	mGTK_ANCHOR_SW
 = 
GTK_ANCHOR_SOUTH_WEST
,

55 
	mGTK_ANCHOR_SE
 = 
GTK_ANCHOR_SOUTH_EAST
,

56 
	mGTK_ANCHOR_W
 = 
GTK_ANCHOR_WEST
,

57 
	mGTK_ANCHOR_E
 = 
GTK_ANCHOR_EAST


58 } 
	tGtkAnch‹Ty≥
;

63 
	mGTK_ARROWS_BOTH
,

64 
	mGTK_ARROWS_START
,

65 
	mGTK_ARROWS_END


66 } 
	tGtkAºowPœ˚mít
;

71 
	mGTK_ARROW_UP
,

72 
	mGTK_ARROW_DOWN
,

73 
	mGTK_ARROW_LEFT
,

74 
	mGTK_ARROW_RIGHT
,

75 
	mGTK_ARROW_NONE


76 } 
	tGtkAºowTy≥
;

81 
	mGTK_EXPAND
 = 1 << 0,

82 
	mGTK_SHRINK
 = 1 << 1,

83 
	mGTK_FILL
 = 1 << 2

84 } 
	tGtkAâachO±i⁄s
;

89 
	mGTK_BUTTONBOX_DEFAULT_STYLE
,

90 
	mGTK_BUTTONBOX_SPREAD
,

91 
	mGTK_BUTTONBOX_EDGE
,

92 
	mGTK_BUTTONBOX_START
,

93 
	mGTK_BUTTONBOX_END
,

94 
	mGTK_BUTTONBOX_CENTER


95 } 
	tGtkBuâ⁄BoxStyÀ
;

100 
	mGTK_CURVE_TYPE_LINEAR
,

101 
	mGTK_CURVE_TYPE_SPLINE
,

102 
	mGTK_CURVE_TYPE_FREE


103 } 
	tGtkCurveTy≥
;

107 
	mGTK_DELETE_CHARS
,

108 
	mGTK_DELETE_WORD_ENDS
,

111 
	mGTK_DELETE_WORDS
,

112 
	mGTK_DELETE_DISPLAY_LINES
,

113 
	mGTK_DELETE_DISPLAY_LINE_ENDS
,

114 
	mGTK_DELETE_PARAGRAPH_ENDS
,

115 
	mGTK_DELETE_PARAGRAPHS
,

116 
	mGTK_DELETE_WHITESPACE


117 } 
	tGtkDñëeTy≥
;

122 
	mGTK_DIR_TAB_FORWARD
,

123 
	mGTK_DIR_TAB_BACKWARD
,

124 
	mGTK_DIR_UP
,

125 
	mGTK_DIR_DOWN
,

126 
	mGTK_DIR_LEFT
,

127 
	mGTK_DIR_RIGHT


128 } 
	tGtkDúe˘i⁄Ty≥
;

133 
	mGTK_EXPANDER_COLLAPSED
,

134 
	mGTK_EXPANDER_SEMI_COLLAPSED
,

135 
	mGTK_EXPANDER_SEMI_EXPANDED
,

136 
	mGTK_EXPANDER_EXPANDED


137 } 
	tGtkEx∑ndîStyÀ
;

142 
	mGTK_ICON_SIZE_INVALID
,

143 
	mGTK_ICON_SIZE_MENU
,

144 
	mGTK_ICON_SIZE_SMALL_TOOLBAR
,

145 
	mGTK_ICON_SIZE_LARGE_TOOLBAR
,

146 
	mGTK_ICON_SIZE_BUTTON
,

147 
	mGTK_ICON_SIZE_DND
,

148 
	mGTK_ICON_SIZE_DIALOG


149 } 
	tGtkIc⁄Size
;

154 
	mGTK_SENSITIVITY_AUTO
,

155 
	mGTK_SENSITIVITY_ON
,

156 
	mGTK_SENSITIVITY_OFF


157 } 
	tGtkSísôivôyTy≥
;

159 #i‚de‡
GTK_DISABLE_DEPRECATED


163 
	mGTK_SIDE_TOP
,

164 
	mGTK_SIDE_BOTTOM
,

165 
	mGTK_SIDE_LEFT
,

166 
	mGTK_SIDE_RIGHT


167 } 
	tGtkSideTy≥
;

173 
	mGTK_TEXT_DIR_NONE
,

174 
	mGTK_TEXT_DIR_LTR
,

175 
	mGTK_TEXT_DIR_RTL


176 } 
	tGtkTextDúe˘i⁄
;

181 
	mGTK_JUSTIFY_LEFT
,

182 
	mGTK_JUSTIFY_RIGHT
,

183 
	mGTK_JUSTIFY_CENTER
,

184 
	mGTK_JUSTIFY_FILL


185 } 
	tGtkJu°ifiˇti⁄
;

187 #i‚de‡
GTK_DISABLE_DEPRECATED


191 
	mGTK_MATCH_ALL
,

192 
	mGTK_MATCH_ALL_TAIL
,

193 
	mGTK_MATCH_HEAD
,

194 
	mGTK_MATCH_TAIL
,

195 
	mGTK_MATCH_EXACT
,

196 
	mGTK_MATCH_LAST


197 } 
	tGtkM©chTy≥
;

203 
	mGTK_MENU_DIR_PARENT
,

204 
	mGTK_MENU_DIR_CHILD
,

205 
	mGTK_MENU_DIR_NEXT
,

206 
	mGTK_MENU_DIR_PREV


207 } 
	tGtkMíuDúe˘i⁄Ty≥
;

211 
	mGTK_PIXELS
,

212 
	mGTK_INCHES
,

213 
	mGTK_CENTIMETERS


214 } 
	tGtkMëricTy≥
;

218 
	mGTK_MOVEMENT_LOGICAL_POSITIONS
,

219 
	mGTK_MOVEMENT_VISUAL_POSITIONS
,

220 
	mGTK_MOVEMENT_WORDS
,

221 
	mGTK_MOVEMENT_DISPLAY_LINES
,

222 
	mGTK_MOVEMENT_DISPLAY_LINE_ENDS
,

223 
	mGTK_MOVEMENT_PARAGRAPHS
,

224 
	mGTK_MOVEMENT_PARAGRAPH_ENDS
,

225 
	mGTK_MOVEMENT_PAGES
,

226 
	mGTK_MOVEMENT_BUFFER_ENDS
,

227 
	mGTK_MOVEMENT_HORIZONTAL_PAGES


228 } 
	tGtkMovemítSãp
;

232 
	mGTK_SCROLL_STEPS
,

233 
	mGTK_SCROLL_PAGES
,

234 
	mGTK_SCROLL_ENDS
,

235 
	mGTK_SCROLL_HORIZONTAL_STEPS
,

236 
	mGTK_SCROLL_HORIZONTAL_PAGES
,

237 
	mGTK_SCROLL_HORIZONTAL_ENDS


238 } 
	tGtkS¸ﬁlSãp
;

243 
	mGTK_ORIENTATION_HORIZONTAL
,

244 
	mGTK_ORIENTATION_VERTICAL


245 } 
	tGtkOrõ¡©i⁄
;

250 
	mGTK_CORNER_TOP_LEFT
,

251 
	mGTK_CORNER_BOTTOM_LEFT
,

252 
	mGTK_CORNER_TOP_RIGHT
,

253 
	mGTK_CORNER_BOTTOM_RIGHT


254 } 
	tGtkC‹√rTy≥
;

259 
	mGTK_PACK_START
,

260 
	mGTK_PACK_END


261 } 
	tGtkPackTy≥
;

266 
	mGTK_PATH_PRIO_LOWEST
 = 0,

267 
	mGTK_PATH_PRIO_GTK
 = 4,

268 
	mGTK_PATH_PRIO_APPLICATION
 = 8,

269 
	mGTK_PATH_PRIO_THEME
 = 10,

270 
	mGTK_PATH_PRIO_RC
 = 12,

271 
	mGTK_PATH_PRIO_HIGHEST
 = 15

272 } 
	tGtkP©hPri‹ôyTy≥
;

273 
	#GTK_PATH_PRIO_MASK
 0x0f

	)

278 
	mGTK_PATH_WIDGET
,

279 
	mGTK_PATH_WIDGET_CLASS
,

280 
	mGTK_PATH_CLASS


281 } 
	tGtkP©hTy≥
;

286 
	mGTK_POLICY_ALWAYS
,

287 
	mGTK_POLICY_AUTOMATIC
,

288 
	mGTK_POLICY_NEVER


289 } 
	tGtkPﬁicyTy≥
;

293 
	mGTK_POS_LEFT
,

294 
	mGTK_POS_RIGHT
,

295 
	mGTK_POS_TOP
,

296 
	mGTK_POS_BOTTOM


297 } 
	tGtkPosôi⁄Ty≥
;

299 #i‚de‡
GTK_DISABLE_DEPRECATED


302 
	mGTK_PREVIEW_COLOR
,

303 
	mGTK_PREVIEW_GRAYSCALE


304 } 
	tGtkPªvõwTy≥
;

310 
	mGTK_RELIEF_NORMAL
,

311 
	mGTK_RELIEF_HALF
,

312 
	mGTK_RELIEF_NONE


313 } 
	tGtkRñõfStyÀ
;

318 
	mGTK_RESIZE_PARENT
,

319 
	mGTK_RESIZE_QUEUE
,

320 
	mGTK_RESIZE_IMMEDIATE


321 } 
	tGtkResizeMode
;

323 #i‚de‡
GTK_DISABLE_DEPRECATED


327 
	mGTK_RUN_FIRST
 = 
G_SIGNAL_RUN_FIRST
,

328 
	mGTK_RUN_LAST
 = 
G_SIGNAL_RUN_LAST
,

329 
	mGTK_RUN_BOTH
 = (
GTK_RUN_FIRST
 | 
GTK_RUN_LAST
),

330 
	mGTK_RUN_NO_RECURSE
 = 
G_SIGNAL_NO_RECURSE
,

331 
	mGTK_RUN_ACTION
 = 
G_SIGNAL_ACTION
,

332 
	mGTK_RUN_NO_HOOKS
 = 
G_SIGNAL_NO_HOOKS


333 } 
	tGtkSig«lRunTy≥
;

339 
	mGTK_SCROLL_NONE
,

340 
	mGTK_SCROLL_JUMP
,

341 
	mGTK_SCROLL_STEP_BACKWARD
,

342 
	mGTK_SCROLL_STEP_FORWARD
,

343 
	mGTK_SCROLL_PAGE_BACKWARD
,

344 
	mGTK_SCROLL_PAGE_FORWARD
,

345 
	mGTK_SCROLL_STEP_UP
,

346 
	mGTK_SCROLL_STEP_DOWN
,

347 
	mGTK_SCROLL_PAGE_UP
,

348 
	mGTK_SCROLL_PAGE_DOWN
,

349 
	mGTK_SCROLL_STEP_LEFT
,

350 
	mGTK_SCROLL_STEP_RIGHT
,

351 
	mGTK_SCROLL_PAGE_LEFT
,

352 
	mGTK_SCROLL_PAGE_RIGHT
,

353 
	mGTK_SCROLL_START
,

354 
	mGTK_SCROLL_END


355 } 
	tGtkS¸ﬁlTy≥
;

360 
	mGTK_SELECTION_NONE
,

361 
	mGTK_SELECTION_SINGLE
,

362 
	mGTK_SELECTION_BROWSE
,

363 
	mGTK_SELECTION_MULTIPLE
,

364 
	mGTK_SELECTION_EXTENDED
 = 
GTK_SELECTION_MULTIPLE


365 } 
	tGtkSñe˘i⁄Mode
;

370 
	mGTK_SHADOW_NONE
,

371 
	mGTK_SHADOW_IN
,

372 
	mGTK_SHADOW_OUT
,

373 
	mGTK_SHADOW_ETCHED_IN
,

374 
	mGTK_SHADOW_ETCHED_OUT


375 } 
	tGtkShadowTy≥
;

380 
	mGTK_STATE_NORMAL
,

381 
	mGTK_STATE_ACTIVE
,

382 
	mGTK_STATE_PRELIGHT
,

383 
	mGTK_STATE_SELECTED
,

384 
	mGTK_STATE_INSENSITIVE


385 } 
	tGtkSèãTy≥
;

387 #i‡!
deföed
(
GTK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_MENU_INTERNALS
)

391 
	mGTK_DIRECTION_LEFT
,

392 
	mGTK_DIRECTION_RIGHT


393 } 
	tGtkSubmíuDúe˘i⁄
;

398 
	mGTK_TOP_BOTTOM
,

399 
	mGTK_LEFT_RIGHT


400 } 
	tGtkSubmíuPœ˚mít
;

406 
	mGTK_TOOLBAR_ICONS
,

407 
	mGTK_TOOLBAR_TEXT
,

408 
	mGTK_TOOLBAR_BOTH
,

409 
	mGTK_TOOLBAR_BOTH_HORIZ


410 } 
	tGtkToﬁb¨StyÀ
;

415 
	mGTK_UPDATE_CONTINUOUS
,

416 
	mGTK_UPDATE_DISCONTINUOUS
,

417 
	mGTK_UPDATE_DELAYED


418 } 
	tGtkUpd©eTy≥
;

423 
	mGTK_VISIBILITY_NONE
,

424 
	mGTK_VISIBILITY_PARTIAL
,

425 
	mGTK_VISIBILITY_FULL


426 } 
	tGtkVisibûôy
;

431 
	mGTK_WIN_POS_NONE
,

432 
	mGTK_WIN_POS_CENTER
,

433 
	mGTK_WIN_POS_MOUSE
,

434 
	mGTK_WIN_POS_CENTER_ALWAYS
,

435 
	mGTK_WIN_POS_CENTER_ON_PARENT


436 } 
	tGtkWödowPosôi⁄
;

441 
	mGTK_WINDOW_TOPLEVEL
,

442 
	mGTK_WINDOW_POPUP


443 } 
	tGtkWödowTy≥
;

448 
	mGTK_WRAP_NONE
,

449 
	mGTK_WRAP_CHAR
,

450 
	mGTK_WRAP_WORD
,

451 
	mGTK_WRAP_WORD_CHAR


452 } 
	tGtkWøpMode
;

457 
	mGTK_SORT_ASCENDING
,

458 
	mGTK_SORT_DESCENDING


459 } 
	tGtkS‹tTy≥
;

464 
	mGTK_IM_PREEDIT_NOTHING
,

465 
	mGTK_IM_PREEDIT_CALLBACK
,

466 
	mGTK_IM_PREEDIT_NONE


467 } 
	tGtkIMPªedôStyÀ
;

471 
	mGTK_IM_STATUS_NOTHING
,

472 
	mGTK_IM_STATUS_CALLBACK
,

473 
	mGTK_IM_STATUS_NONE


474 } 
	tGtkIMSètusStyÀ
;

478 
	mGTK_PACK_DIRECTION_LTR
,

479 
	mGTK_PACK_DIRECTION_RTL
,

480 
	mGTK_PACK_DIRECTION_TTB
,

481 
	mGTK_PACK_DIRECTION_BTT


482 } 
	tGtkPackDúe˘i⁄
;

486 
	mGTK_PRINT_PAGES_ALL
,

487 
	mGTK_PRINT_PAGES_CURRENT
,

488 
	mGTK_PRINT_PAGES_RANGES


489 } 
	tGtkPrötPages
;

493 
	mGTK_PAGE_SET_ALL
,

494 
	mGTK_PAGE_SET_EVEN
,

495 
	mGTK_PAGE_SET_ODD


496 } 
	tGtkPageSë
;

500 
	mGTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM
,

501 
	mGTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP
,

502 
	mGTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM
,

503 
	mGTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP
,

504 
	mGTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT
,

505 
	mGTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT
,

506 
	mGTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT
,

507 
	mGTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT


508 } 
	tGtkNumbîUpLayout
;

512 
	mGTK_PAGE_ORIENTATION_PORTRAIT
,

513 
	mGTK_PAGE_ORIENTATION_LANDSCAPE
,

514 
	mGTK_PAGE_ORIENTATION_REVERSE_PORTRAIT
,

515 
	mGTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE


516 } 
	tGtkPageOrõ¡©i⁄
;

520 
	mGTK_PRINT_QUALITY_LOW
,

521 
	mGTK_PRINT_QUALITY_NORMAL
,

522 
	mGTK_PRINT_QUALITY_HIGH
,

523 
	mGTK_PRINT_QUALITY_DRAFT


524 } 
	tGtkPrötQuÆôy
;

528 
	mGTK_PRINT_DUPLEX_SIMPLEX
,

529 
	mGTK_PRINT_DUPLEX_HORIZONTAL
,

530 
	mGTK_PRINT_DUPLEX_VERTICAL


531 } 
	tGtkPrötDu∂ex
;

536 
	mGTK_UNIT_PIXEL
,

537 
	mGTK_UNIT_POINTS
,

538 
	mGTK_UNIT_INCH
,

539 
	mGTK_UNIT_MM


540 } 
	tGtkUnô
;

544 
	mGTK_TREE_VIEW_GRID_LINES_NONE
,

545 
	mGTK_TREE_VIEW_GRID_LINES_HORIZONTAL
,

546 
	mGTK_TREE_VIEW_GRID_LINES_VERTICAL
,

547 
	mGTK_TREE_VIEW_GRID_LINES_BOTH


548 } 
	tGtkTªeVõwGridLöes
;

552 
	mGTK_DRAG_RESULT_SUCCESS
,

553 
	mGTK_DRAG_RESULT_NO_TARGET
,

554 
	mGTK_DRAG_RESULT_USER_CANCELLED
,

555 
	mGTK_DRAG_RESULT_TIMEOUT_EXPIRED
,

556 
	mGTK_DRAG_RESULT_GRAB_BROKEN
,

557 
	mGTK_DRAG_RESULT_ERROR


558 } 
	tGtkDøgResu…
;

560 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkeventbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_EVENT_BOX_H__


32 
	#__GTK_EVENT_BOX_H__


	)

35 
	~<gtk/gtkbö.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_EVENT_BOX
 (
	`gtk_evít_box_gë_ty≥
 ())

	)

41 
	#GTK_EVENT_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_EVENT_BOX
, 
GtkEvítBox
))

	)

42 
	#GTK_EVENT_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_EVENT_BOX
, 
GtkEvítBoxCœss
))

	)

43 
	#GTK_IS_EVENT_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_EVENT_BOX
))

	)

44 
	#GTK_IS_EVENT_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_EVENT_BOX
))

	)

45 
	#GTK_EVENT_BOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_EVENT_BOX
, 
GtkEvítBoxCœss
))

	)

47 
_GtkEvítBox
 
	tGtkEvítBox
;

48 
_GtkEvítBoxCœss
 
	tGtkEvítBoxCœss
;

50 
	s_GtkEvítBox


52 
GtkBö
 
	mbö
;

55 
	s_GtkEvítBoxCœss


57 
GtkBöCœss
 
	m∑ª¡_˛ass
;

60 
GTy≥
 
	$gtk_evít_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

61 
GtkWidgë
* 
	`gtk_evít_box_√w
 ();

62 
gboﬁón
 
	`gtk_evít_box_gë_visibÀ_wödow
 (
GtkEvítBox
 *
evít_box
);

63 
	`gtk_evít_box_£t_visibÀ_wödow
 (
GtkEvítBox
 *
evít_box
,

64 
gboﬁón
 
visibÀ_wödow
);

65 
gboﬁón
 
	`gtk_evít_box_gë_above_chûd
 (
GtkEvítBox
 *
evít_box
);

66 
	`gtk_evít_box_£t_above_chûd
 (
GtkEvítBox
 *
evít_box
,

67 
gboﬁón
 
above_chûd
);

69 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkexpander.h

24 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

28 #i‚de‡
__GTK_EXPANDER_H__


29 
	#__GTK_EXPANDER_H__


	)

31 
	~<gtk/gtkbö.h
>

33 
	gG_BEGIN_DECLS


35 
	#GTK_TYPE_EXPANDER
 (
	`gtk_ex∑ndî_gë_ty≥
 ())

	)

36 
	#GTK_EXPANDER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_EXPANDER
, 
GtkEx∑ndî
))

	)

37 
	#GTK_EXPANDER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_EXPANDER
, 
GtkEx∑ndîCœss
))

	)

38 
	#GTK_IS_EXPANDER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_EXPANDER
))

	)

39 
	#GTK_IS_EXPANDER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_EXPANDER
))

	)

40 
	#GTK_EXPANDER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_EXPANDER
, 
GtkEx∑ndîCœss
))

	)

42 
_GtkEx∑ndî
 
	tGtkEx∑ndî
;

43 
_GtkEx∑ndîCœss
 
	tGtkEx∑ndîCœss
;

44 
_GtkEx∑ndîPriv©e
 
	tGtkEx∑ndîPriv©e
;

46 
	s_GtkEx∑ndî


48 
GtkBö
 
	mbö
;

50 
GtkEx∑ndîPriv©e
 *
GSEAL
 (
¥iv
);

53 
	s_GtkEx∑ndîCœss


55 
GtkBöCœss
 
	m∑ª¡_˛ass
;

60 (* 
	ma˘iv©e
Ë(
GtkEx∑ndî
 *
	mex∑ndî
);

63 
GTy≥
 
	$gtk_ex∑ndî_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
GtkWidgë
 *
	`gtk_ex∑ndî_√w
 (c⁄° 
gch¨
 *
œbñ
);

66 
GtkWidgë
 *
	`gtk_ex∑ndî_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

68 
	`gtk_ex∑ndî_£t_ex∑nded
 (
GtkEx∑ndî
 *
ex∑ndî
,

69 
gboﬁón
 
ex∑nded
);

70 
gboﬁón
 
	`gtk_ex∑ndî_gë_ex∑nded
 (
GtkEx∑ndî
 *
ex∑ndî
);

73 
	`gtk_ex∑ndî_£t_•acög
 (
GtkEx∑ndî
 *
ex∑ndî
,

74 
göt
 
•acög
);

75 
göt
 
	`gtk_ex∑ndî_gë_•acög
 (
GtkEx∑ndî
 *
ex∑ndî
);

77 
	`gtk_ex∑ndî_£t_œbñ
 (
GtkEx∑ndî
 *
ex∑ndî
,

78 c⁄° 
gch¨
 *
œbñ
);

79 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ex∑ndî_gë_œbñ
 (
GtkEx∑ndî
 *
ex∑ndî
);

81 
	`gtk_ex∑ndî_£t_u£_undîlöe
 (
GtkEx∑ndî
 *
ex∑ndî
,

82 
gboﬁón
 
u£_undîlöe
);

83 
gboﬁón
 
	`gtk_ex∑ndî_gë_u£_undîlöe
 (
GtkEx∑ndî
 *
ex∑ndî
);

85 
	`gtk_ex∑ndî_£t_u£_m¨kup
 (
GtkEx∑ndî
 *
ex∑ndî
,

86 
gboﬁón
 
u£_m¨kup
);

87 
gboﬁón
 
	`gtk_ex∑ndî_gë_u£_m¨kup
 (
GtkEx∑ndî
 *
ex∑ndî
);

89 
	`gtk_ex∑ndî_£t_œbñ_widgë
 (
GtkEx∑ndî
 *
ex∑ndî
,

90 
GtkWidgë
 *
œbñ_widgë
);

91 
GtkWidgë
 *
	`gtk_ex∑ndî_gë_œbñ_widgë
 (
GtkEx∑ndî
 *
ex∑ndî
);

93 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfilechooser.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_FILE_CHOOSER_H__


26 
	#__GTK_FILE_CHOOSER_H__


	)

28 
	~<gtk/gtkfûefûãr.h
>

29 
	~<gtk/gtkwidgë.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_FILE_CHOOSER
 (
	`gtk_fûe_choo£r_gë_ty≥
 ())

	)

34 
	#GTK_FILE_CHOOSER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FILE_CHOOSER
, 
GtkFûeChoo£r
))

	)

35 
	#GTK_IS_FILE_CHOOSER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FILE_CHOOSER
))

	)

37 
_GtkFûeChoo£r
 
	tGtkFûeChoo£r
;

41 
	mGTK_FILE_CHOOSER_ACTION_OPEN
,

42 
	mGTK_FILE_CHOOSER_ACTION_SAVE
,

43 
	mGTK_FILE_CHOOSER_ACTION_SELECT_FOLDER
,

44 
	mGTK_FILE_CHOOSER_ACTION_CREATE_FOLDER


45 } 
	tGtkFûeChoo£rA˘i⁄
;

49 
	mGTK_FILE_CHOOSER_CONFIRMATION_CONFIRM
,

50 
	mGTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME
,

51 
	mGTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN


52 } 
	tGtkFûeChoo£rC⁄fúm©i⁄
;

54 
GTy≥
 
	$gtk_fûe_choo£r_gë_ty≥
 (Ë
G_GNUC_CONST
;

58 
	#GTK_FILE_CHOOSER_ERROR
 (
	`gtk_fûe_choo£r_îr‹_qu¨k
 ())

	)

61 
GTK_FILE_CHOOSER_ERROR_NONEXISTENT
,

62 
GTK_FILE_CHOOSER_ERROR_BAD_FILENAME
,

63 
GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS
,

64 
GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME


65 } 
	tGtkFûeChoo£rEº‹
;

67 
GQu¨k
 
	`gtk_fûe_choo£r_îr‹_qu¨k
 ();

71 
	`gtk_fûe_choo£r_£t_a˘i⁄
 (
GtkFûeChoo£r
 *
choo£r
,

72 
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
);

73 
GtkFûeChoo£rA˘i⁄
 
	`gtk_fûe_choo£r_gë_a˘i⁄
 (
GtkFûeChoo£r
 *
choo£r
);

74 
	`gtk_fûe_choo£r_£t_loˇl_⁄ly
 (
GtkFûeChoo£r
 *
choo£r
,

75 
gboﬁón
 
loˇl_⁄ly
);

76 
gboﬁón
 
	`gtk_fûe_choo£r_gë_loˇl_⁄ly
 (
GtkFûeChoo£r
 *
choo£r
);

77 
	`gtk_fûe_choo£r_£t_£À˘_mu…ùÀ
 (
GtkFûeChoo£r
 *
choo£r
,

78 
gboﬁón
 
£À˘_mu…ùÀ
);

79 
gboﬁón
 
	`gtk_fûe_choo£r_gë_£À˘_mu…ùÀ
 (
GtkFûeChoo£r
 *
choo£r
);

80 
	`gtk_fûe_choo£r_£t_show_hiddí
 (
GtkFûeChoo£r
 *
choo£r
,

81 
gboﬁón
 
show_hiddí
);

82 
gboﬁón
 
	`gtk_fûe_choo£r_gë_show_hiddí
 (
GtkFûeChoo£r
 *
choo£r
);

84 
	`gtk_fûe_choo£r_£t_do_ovîwrôe_c⁄fúm©i⁄
 (
GtkFûeChoo£r
 *
choo£r
,

85 
gboﬁón
 
do_ovîwrôe_c⁄fúm©i⁄
);

86 
gboﬁón
 
	`gtk_fûe_choo£r_gë_do_ovîwrôe_c⁄fúm©i⁄
 (
GtkFûeChoo£r
 *
choo£r
);

90 
	`gtk_fûe_choo£r_£t_cuºít_«me
 (
GtkFûeChoo£r
 *
choo£r
,

91 c⁄° 
gch¨
 *
«me
);

95 #ifde‡
G_OS_WIN32


97 
	#gtk_fûe_choo£r_gë_fûíame
 
gtk_fûe_choo£r_gë_fûíame_utf8


	)

98 
	#gtk_fûe_choo£r_£t_fûíame
 
gtk_fûe_choo£r_£t_fûíame_utf8


	)

99 
	#gtk_fûe_choo£r_£À˘_fûíame
 
gtk_fûe_choo£r_£À˘_fûíame_utf8


	)

100 
	#gtk_fûe_choo£r_un£À˘_fûíame
 
gtk_fûe_choo£r_un£À˘_fûíame_utf8


	)

101 
	#gtk_fûe_choo£r_gë_fûíames
 
gtk_fûe_choo£r_gë_fûíames_utf8


	)

102 
	#gtk_fûe_choo£r_£t_cuºít_fﬁdî
 
gtk_fûe_choo£r_£t_cuºít_fﬁdî_utf8


	)

103 
	#gtk_fûe_choo£r_gë_cuºít_fﬁdî
 
gtk_fûe_choo£r_gë_cuºít_fﬁdî_utf8


	)

104 
	#gtk_fûe_choo£r_gë_¥evõw_fûíame
 
gtk_fûe_choo£r_gë_¥evõw_fûíame_utf8


	)

105 
	#gtk_fûe_choo£r_add_sh‹tcut_fﬁdî
 
gtk_fûe_choo£r_add_sh‹tcut_fﬁdî_utf8


	)

106 
	#gtk_fûe_choo£r_ªmove_sh‹tcut_fﬁdî
 
gtk_fûe_choo£r_ªmove_sh‹tcut_fﬁdî_utf8


	)

107 
	#gtk_fûe_choo£r_li°_sh‹tcut_fﬁdîs
 
gtk_fûe_choo£r_li°_sh‹tcut_fﬁdîs_utf8


	)

110 
gch¨
 * 
	`gtk_fûe_choo£r_gë_fûíame
 (
GtkFûeChoo£r
 *
choo£r
);

111 
gboﬁón
 
	`gtk_fûe_choo£r_£t_fûíame
 (
GtkFûeChoo£r
 *
choo£r
,

112 c⁄° *
fûíame
);

113 
gboﬁón
 
	`gtk_fûe_choo£r_£À˘_fûíame
 (
GtkFûeChoo£r
 *
choo£r
,

114 c⁄° *
fûíame
);

115 
	`gtk_fûe_choo£r_un£À˘_fûíame
 (
GtkFûeChoo£r
 *
choo£r
,

116 c⁄° *
fûíame
);

117 
	`gtk_fûe_choo£r_£À˘_Æl
 (
GtkFûeChoo£r
 *
choo£r
);

118 
	`gtk_fûe_choo£r_un£À˘_Æl
 (
GtkFûeChoo£r
 *
choo£r
);

119 
GSLi°
 * 
	`gtk_fûe_choo£r_gë_fûíames
 (
GtkFûeChoo£r
 *
choo£r
);

120 
gboﬁón
 
	`gtk_fûe_choo£r_£t_cuºít_fﬁdî
 (
GtkFûeChoo£r
 *
choo£r
,

121 c⁄° 
gch¨
 *
fûíame
);

122 
gch¨
 * 
	`gtk_fûe_choo£r_gë_cuºít_fﬁdî
 (
GtkFûeChoo£r
 *
choo£r
);

127 
gch¨
 * 
	`gtk_fûe_choo£r_gë_uri
 (
GtkFûeChoo£r
 *
choo£r
);

128 
gboﬁón
 
	`gtk_fûe_choo£r_£t_uri
 (
GtkFûeChoo£r
 *
choo£r
,

129 c⁄° *
uri
);

130 
gboﬁón
 
	`gtk_fûe_choo£r_£À˘_uri
 (
GtkFûeChoo£r
 *
choo£r
,

131 c⁄° *
uri
);

132 
	`gtk_fûe_choo£r_un£À˘_uri
 (
GtkFûeChoo£r
 *
choo£r
,

133 c⁄° *
uri
);

134 
GSLi°
 * 
	`gtk_fûe_choo£r_gë_uris
 (
GtkFûeChoo£r
 *
choo£r
);

135 
gboﬁón
 
	`gtk_fûe_choo£r_£t_cuºít_fﬁdî_uri
 (
GtkFûeChoo£r
 *
choo£r
,

136 c⁄° 
gch¨
 *
uri
);

137 
gch¨
 * 
	`gtk_fûe_choo£r_gë_cuºít_fﬁdî_uri
 (
GtkFûeChoo£r
 *
choo£r
);

140 
GFûe
 * 
	`gtk_fûe_choo£r_gë_fûe
 (
GtkFûeChoo£r
 *
choo£r
);

141 
gboﬁón
 
	`gtk_fûe_choo£r_£t_fûe
 (
GtkFûeChoo£r
 *
choo£r
,

142 
GFûe
 *
fûe
,

143 
GEº‹
 **
îr‹
);

144 
gboﬁón
 
	`gtk_fûe_choo£r_£À˘_fûe
 (
GtkFûeChoo£r
 *
choo£r
,

145 
GFûe
 *
fûe
,

146 
GEº‹
 **
îr‹
);

147 
	`gtk_fûe_choo£r_un£À˘_fûe
 (
GtkFûeChoo£r
 *
choo£r
,

148 
GFûe
 *
fûe
);

149 
GSLi°
 * 
	`gtk_fûe_choo£r_gë_fûes
 (
GtkFûeChoo£r
 *
choo£r
);

150 
gboﬁón
 
	`gtk_fûe_choo£r_£t_cuºít_fﬁdî_fûe
 (
GtkFûeChoo£r
 *
choo£r
,

151 
GFûe
 *
fûe
,

152 
GEº‹
 **
îr‹
);

153 
GFûe
 * 
	`gtk_fûe_choo£r_gë_cuºít_fﬁdî_fûe
 (
GtkFûeChoo£r
 *
choo£r
);

157 
	`gtk_fûe_choo£r_£t_¥evõw_widgë
 (
GtkFûeChoo£r
 *
choo£r
,

158 
GtkWidgë
 *
¥evõw_widgë
);

159 
GtkWidgë
 *
	`gtk_fûe_choo£r_gë_¥evõw_widgë
 (
GtkFûeChoo£r
 *
choo£r
);

160 
	`gtk_fûe_choo£r_£t_¥evõw_widgë_a˘ive
 (
GtkFûeChoo£r
 *
choo£r
,

161 
gboﬁón
 
a˘ive
);

162 
gboﬁón
 
	`gtk_fûe_choo£r_gë_¥evõw_widgë_a˘ive
 (
GtkFûeChoo£r
 *
choo£r
);

163 
	`gtk_fûe_choo£r_£t_u£_¥evõw_œbñ
 (
GtkFûeChoo£r
 *
choo£r
,

164 
gboﬁón
 
u£_œbñ
);

165 
gboﬁón
 
	`gtk_fûe_choo£r_gë_u£_¥evõw_œbñ
 (
GtkFûeChoo£r
 *
choo£r
);

167 *
	`gtk_fûe_choo£r_gë_¥evõw_fûíame
 (
GtkFûeChoo£r
 *
choo£r
);

168 *
	`gtk_fûe_choo£r_gë_¥evõw_uri
 (
GtkFûeChoo£r
 *
choo£r
);

169 
GFûe
 *
	`gtk_fûe_choo£r_gë_¥evõw_fûe
 (
GtkFûeChoo£r
 *
choo£r
);

173 
	`gtk_fûe_choo£r_£t_exåa_widgë
 (
GtkFûeChoo£r
 *
choo£r
,

174 
GtkWidgë
 *
exåa_widgë
);

175 
GtkWidgë
 *
	`gtk_fûe_choo£r_gë_exåa_widgë
 (
GtkFûeChoo£r
 *
choo£r
);

179 
	`gtk_fûe_choo£r_add_fûãr
 (
GtkFûeChoo£r
 *
choo£r
,

180 
GtkFûeFûãr
 *
fûãr
);

181 
	`gtk_fûe_choo£r_ªmove_fûãr
 (
GtkFûeChoo£r
 *
choo£r
,

182 
GtkFûeFûãr
 *
fûãr
);

183 
GSLi°
 *
	`gtk_fûe_choo£r_li°_fûãrs
 (
GtkFûeChoo£r
 *
choo£r
);

187 
	`gtk_fûe_choo£r_£t_fûãr
 (
GtkFûeChoo£r
 *
choo£r
,

188 
GtkFûeFûãr
 *
fûãr
);

189 
GtkFûeFûãr
 *
	`gtk_fûe_choo£r_gë_fûãr
 (
GtkFûeChoo£r
 *
choo£r
);

193 
gboﬁón
 
	`gtk_fûe_choo£r_add_sh‹tcut_fﬁdî
 (
GtkFûeChoo£r
 *
choo£r
,

194 c⁄° *
fﬁdî
,

195 
GEº‹
 **
îr‹
);

196 
gboﬁón
 
	`gtk_fûe_choo£r_ªmove_sh‹tcut_fﬁdî
 (
GtkFûeChoo£r
 *
choo£r
,

197 c⁄° *
fﬁdî
,

198 
GEº‹
 **
îr‹
);

199 
GSLi°
 *
	`gtk_fûe_choo£r_li°_sh‹tcut_fﬁdîs
 (
GtkFûeChoo£r
 *
choo£r
);

201 
gboﬁón
 
	`gtk_fûe_choo£r_add_sh‹tcut_fﬁdî_uri
 (
GtkFûeChoo£r
 *
choo£r
,

202 c⁄° *
uri
,

203 
GEº‹
 **
îr‹
);

204 
gboﬁón
 
	`gtk_fûe_choo£r_ªmove_sh‹tcut_fﬁdî_uri
 (
GtkFûeChoo£r
 *
choo£r
,

205 c⁄° *
uri
,

206 
GEº‹
 **
îr‹
);

207 
GSLi°
 *
	`gtk_fûe_choo£r_li°_sh‹tcut_fﬁdî_uris
 (
GtkFûeChoo£r
 *
choo£r
);

209 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_FILE_CHOOSER_BUTTON_H__


26 
	#__GTK_FILE_CHOOSER_BUTTON_H__


	)

28 
	~<gtk/gtkhbox.h
>

29 
	~<gtk/gtkfûechoo£r.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_FILE_CHOOSER_BUTTON
 (
	`gtk_fûe_choo£r_buâ⁄_gë_ty≥
 ())

	)

34 
	#GTK_FILE_CHOOSER_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FILE_CHOOSER_BUTTON
, 
GtkFûeChoo£rBuâ⁄
))

	)

35 
	#GTK_FILE_CHOOSER_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FILE_CHOOSER_BUTTON
, 
GtkFûeChoo£rBuâ⁄Cœss
))

	)

36 
	#GTK_IS_FILE_CHOOSER_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FILE_CHOOSER_BUTTON
))

	)

37 
	#GTK_IS_FILE_CHOOSER_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FILE_CHOOSER_BUTTON
))

	)

38 
	#GTK_FILE_CHOOSER_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FILE_CHOOSER_BUTTON
, 
GtkFûeChoo£rBuâ⁄Cœss
))

	)

40 
_GtkFûeChoo£rBuâ⁄
 
	tGtkFûeChoo£rBuâ⁄
;

41 
_GtkFûeChoo£rBuâ⁄Priv©e
 
	tGtkFûeChoo£rBuâ⁄Priv©e
;

42 
_GtkFûeChoo£rBuâ⁄Cœss
 
	tGtkFûeChoo£rBuâ⁄Cœss
;

44 
	s_GtkFûeChoo£rBuâ⁄


47 
GtkHBox
 
	m∑ª¡
;

49 
GtkFûeChoo£rBuâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

52 
	s_GtkFûeChoo£rBuâ⁄Cœss


55 
GtkHBoxCœss
 
	m∑ª¡_˛ass
;

57 (* 
	mfûe_£t
Ë(
GtkFûeChoo£rBuâ⁄
 *
	mfc
);

59 (*
	m__gtk_ª£rved1
);

60 (*
	m__gtk_ª£rved2
);

61 (*
	m__gtk_ª£rved3
);

62 (*
	m__gtk_ª£rved4
);

63 (*
	m__gtk_ª£rved5
);

64 (*
	m__gtk_ª£rved6
);

65 (*
	m__gtk_ª£rved7
);

69 
GTy≥
 
	$gtk_fûe_choo£r_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkWidgë
 * 
	`gtk_fûe_choo£r_buâ⁄_√w
 (c⁄° 
gch¨
 *
tôÀ
,

71 
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
);

73 #i‚de‡
GTK_DISABLE_DEPRECATED


74 
GtkWidgë
 * 
	`gtk_fûe_choo£r_buâ⁄_√w_wôh_backíd
 (c⁄° 
gch¨
 *
tôÀ
,

75 
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
,

76 c⁄° 
gch¨
 *
backíd
);

79 
GtkWidgë
 * 
	`gtk_fûe_choo£r_buâ⁄_√w_wôh_dülog
 (GtkWidgë *
dülog
);

80 
G_CONST_RETURN
 
gch¨
 *
	`gtk_fûe_choo£r_buâ⁄_gë_tôÀ
 (
GtkFûeChoo£rBuâ⁄
 *
buâ⁄
);

81 
	`gtk_fûe_choo£r_buâ⁄_£t_tôÀ
 (
GtkFûeChoo£rBuâ⁄
 *
buâ⁄
,

82 c⁄° 
gch¨
 *
tôÀ
);

83 
göt
 
	`gtk_fûe_choo£r_buâ⁄_gë_width_ch¨s
 (
GtkFûeChoo£rBuâ⁄
 *
buâ⁄
);

84 
	`gtk_fûe_choo£r_buâ⁄_£t_width_ch¨s
 (
GtkFûeChoo£rBuâ⁄
 *
buâ⁄
,

85 
göt
 
n_ch¨s
);

86 
gboﬁón
 
	`gtk_fûe_choo£r_buâ⁄_gë_focus_⁄_˛ick
 (
GtkFûeChoo£rBuâ⁄
 *
buâ⁄
);

87 
	`gtk_fûe_choo£r_buâ⁄_£t_focus_⁄_˛ick
 (
GtkFûeChoo£rBuâ⁄
 *
buâ⁄
,

88 
gboﬁón
 
focus_⁄_˛ick
);

90 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfilechooserdialog.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_FILE_CHOOSER_DIALOG_H__


26 
	#__GTK_FILE_CHOOSER_DIALOG_H__


	)

28 
	~<gtk/gtkdülog.h
>

29 
	~<gtk/gtkfûechoo£r.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_FILE_CHOOSER_DIALOG
 (
	`gtk_fûe_choo£r_dülog_gë_ty≥
 ())

	)

34 
	#GTK_FILE_CHOOSER_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FILE_CHOOSER_DIALOG
, 
GtkFûeChoo£rDülog
))

	)

35 
	#GTK_FILE_CHOOSER_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FILE_CHOOSER_DIALOG
, 
GtkFûeChoo£rDülogCœss
))

	)

36 
	#GTK_IS_FILE_CHOOSER_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FILE_CHOOSER_DIALOG
))

	)

37 
	#GTK_IS_FILE_CHOOSER_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FILE_CHOOSER_DIALOG
))

	)

38 
	#GTK_FILE_CHOOSER_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FILE_CHOOSER_DIALOG
, 
GtkFûeChoo£rDülogCœss
))

	)

40 
_GtkFûeChoo£rDülog
 
	tGtkFûeChoo£rDülog
;

41 
_GtkFûeChoo£rDülogPriv©e
 
	tGtkFûeChoo£rDülogPriv©e
;

42 
_GtkFûeChoo£rDülogCœss
 
	tGtkFûeChoo£rDülogCœss
;

44 
	s_GtkFûeChoo£rDülog


46 
GtkDülog
 
	m∑ª¡_ö°™˚
;

48 
GtkFûeChoo£rDülogPriv©e
 *
GSEAL
 (
¥iv
);

51 
	s_GtkFûeChoo£rDülogCœss


53 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

56 
GTy≥
 
	$gtk_fûe_choo£r_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

57 
GtkWidgë
 *
	$gtk_fûe_choo£r_dülog_√w
 (c⁄° 
gch¨
 *
tôÀ
,

58 
GtkWödow
 *
∑ª¡
,

59 
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
,

60 c⁄° 
gch¨
 *
fú°_buâ⁄_ãxt
,

61 ...Ë
G_GNUC_NULL_TERMINATED
;

63 #i‚de‡
GTK_DISABLE_DEPRECATED


64 
GtkWidgë
 *
	$gtk_fûe_choo£r_dülog_√w_wôh_backíd
 (c⁄° 
gch¨
 *
tôÀ
,

65 
GtkWödow
 *
∑ª¡
,

66 
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
,

67 c⁄° 
gch¨
 *
backíd
,

68 c⁄° 
gch¨
 *
fú°_buâ⁄_ãxt
,

69 ...Ë
G_GNUC_NULL_TERMINATED
;

72 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfilechooserwidget.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_FILE_CHOOSER_WIDGET_H__


26 
	#__GTK_FILE_CHOOSER_WIDGET_H__


	)

28 
	~<gtk/gtkfûechoo£r.h
>

29 
	~<gtk/gtkvbox.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_FILE_CHOOSER_WIDGET
 (
	`gtk_fûe_choo£r_widgë_gë_ty≥
 ())

	)

34 
	#GTK_FILE_CHOOSER_WIDGET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FILE_CHOOSER_WIDGET
, 
GtkFûeChoo£rWidgë
))

	)

35 
	#GTK_FILE_CHOOSER_WIDGET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FILE_CHOOSER_WIDGET
, 
GtkFûeChoo£rWidgëCœss
))

	)

36 
	#GTK_IS_FILE_CHOOSER_WIDGET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FILE_CHOOSER_WIDGET
))

	)

37 
	#GTK_IS_FILE_CHOOSER_WIDGET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FILE_CHOOSER_WIDGET
))

	)

38 
	#GTK_FILE_CHOOSER_WIDGET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FILE_CHOOSER_WIDGET
, 
GtkFûeChoo£rWidgëCœss
))

	)

40 
_GtkFûeChoo£rWidgë
 
	tGtkFûeChoo£rWidgë
;

41 
_GtkFûeChoo£rWidgëPriv©e
 
	tGtkFûeChoo£rWidgëPriv©e
;

42 
_GtkFûeChoo£rWidgëCœss
 
	tGtkFûeChoo£rWidgëCœss
;

44 
	s_GtkFûeChoo£rWidgë


46 
GtkVBox
 
	m∑ª¡_ö°™˚
;

48 
GtkFûeChoo£rWidgëPriv©e
 *
GSEAL
 (
¥iv
);

51 
	s_GtkFûeChoo£rWidgëCœss


53 
GtkVBoxCœss
 
	m∑ª¡_˛ass
;

56 
GTy≥
 
	$gtk_fûe_choo£r_widgë_gë_ty≥
 (Ë
G_GNUC_CONST
;

57 
GtkWidgë
 *
	`gtk_fûe_choo£r_widgë_√w
 (
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
);

60 #i‚de‡
GTK_DISABLE_DEPRECATED


61 
GtkWidgë
 *
	`gtk_fûe_choo£r_widgë_√w_wôh_backíd
 (
GtkFûeChoo£rA˘i⁄
 
a˘i⁄
,

62 c⁄° 
gch¨
 *
backíd
);

65 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfilefilter.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_FILE_FILTER_H__


26 
	#__GTK_FILE_FILTER_H__


	)

28 
	~<glib-obje˘.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_FILE_FILTER
 (
	`gtk_fûe_fûãr_gë_ty≥
 ())

	)

33 
	#GTK_FILE_FILTER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FILE_FILTER
, 
GtkFûeFûãr
))

	)

34 
	#GTK_IS_FILE_FILTER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FILE_FILTER
))

	)

36 
_GtkFûeFûãr
 
	tGtkFûeFûãr
;

37 
_GtkFûeFûãrInfo
 
	tGtkFûeFûãrInfo
;

40 
	mGTK_FILE_FILTER_FILENAME
 = 1 << 0,

41 
	mGTK_FILE_FILTER_URI
 = 1 << 1,

42 
	mGTK_FILE_FILTER_DISPLAY_NAME
 = 1 << 2,

43 
	mGTK_FILE_FILTER_MIME_TYPE
 = 1 << 3

44 } 
	tGtkFûeFûãrFœgs
;

46 
	$gboﬁón
 (*
	tGtkFûeFûãrFunc
Ë(c⁄° 
	tGtkFûeFûãrInfo
 *
	tfûãr_öfo
,

47 
	tgpoöãr
 
	td©a
);

49 
	s_GtkFûeFûãrInfo


51 
GtkFûeFûãrFœgs
 
c⁄èös
;

53 c⁄° 
gch¨
 *
fûíame
;

54 c⁄° 
gch¨
 *
uri
;

55 c⁄° 
gch¨
 *
di•œy_«me
;

56 c⁄° 
gch¨
 *
mime_ty≥
;

59 
GTy≥
 
	$gtk_fûe_fûãr_gë_ty≥
 (Ë
G_GNUC_CONST
;

61 
GtkFûeFûãr
 * 
	`gtk_fûe_fûãr_√w
 ();

62 
	`gtk_fûe_fûãr_£t_«me
 (
GtkFûeFûãr
 *
fûãr
,

63 c⁄° 
gch¨
 *
«me
);

64 
G_CONST_RETURN
 
gch¨
 *
	`gtk_fûe_fûãr_gë_«me
 (
GtkFûeFûãr
 *
fûãr
);

66 
	`gtk_fûe_fûãr_add_mime_ty≥
 (
GtkFûeFûãr
 *
fûãr
,

67 c⁄° 
gch¨
 *
mime_ty≥
);

68 
	`gtk_fûe_fûãr_add_∑âîn
 (
GtkFûeFûãr
 *
fûãr
,

69 c⁄° 
gch¨
 *
∑âîn
);

70 
	`gtk_fûe_fûãr_add_pixbuf_f‹m©s
 (
GtkFûeFûãr
 *
fûãr
);

71 
	`gtk_fûe_fûãr_add_cu°om
 (
GtkFûeFûãr
 *
fûãr
,

72 
GtkFûeFûãrFœgs
 
√eded
,

73 
GtkFûeFûãrFunc
 
func
,

74 
gpoöãr
 
d©a
,

75 
GDe°royNŸify
 
nŸify
);

77 
GtkFûeFûãrFœgs
 
	`gtk_fûe_fûãr_gë_√eded
 (
GtkFûeFûãr
 *
fûãr
);

78 
gboﬁón
 
	`gtk_fûe_fûãr_fûãr
 (
GtkFûeFûãr
 *
fûãr
,

79 c⁄° 
GtkFûeFûãrInfo
 *
fûãr_öfo
);

81 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfilesel.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_FILESEL_H__


30 
	#__GTK_FILESEL_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_FILE_SELECTION
 (
	`gtk_fûe_£À˘i⁄_gë_ty≥
 ())

	)

39 
	#GTK_FILE_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FILE_SELECTION
, 
GtkFûeSñe˘i⁄
))

	)

40 
	#GTK_FILE_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FILE_SELECTION
, 
GtkFûeSñe˘i⁄Cœss
))

	)

41 
	#GTK_IS_FILE_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FILE_SELECTION
))

	)

42 
	#GTK_IS_FILE_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FILE_SELECTION
))

	)

43 
	#GTK_FILE_SELECTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FILE_SELECTION
, 
GtkFûeSñe˘i⁄Cœss
))

	)

46 
_GtkFûeSñe˘i⁄
 
	tGtkFûeSñe˘i⁄
;

47 
_GtkFûeSñe˘i⁄Cœss
 
	tGtkFûeSñe˘i⁄Cœss
;

49 
	s_GtkFûeSñe˘i⁄


52 
GtkDülog
 
	m∑ª¡_ö°™˚
;

55 
GtkWidgë
 *
	mdú_li°
;

56 
GtkWidgë
 *
	mfûe_li°
;

57 
GtkWidgë
 *
	m£À˘i⁄_íåy
;

58 
GtkWidgë
 *
	m£À˘i⁄_ãxt
;

59 
GtkWidgë
 *
	mmaö_vbox
;

60 
GtkWidgë
 *
	mok_buâ⁄
;

61 
GtkWidgë
 *
	mˇn˚l_buâ⁄
;

62 
GtkWidgë
 *
	mhñp_buâ⁄
;

63 
GtkWidgë
 *
	mhi°‹y_puŒdown
;

64 
GtkWidgë
 *
	mhi°‹y_míu
;

65 
GLi°
 *
	mhi°‹y_li°
;

66 
GtkWidgë
 *
	mfûe›_dülog
;

67 
GtkWidgë
 *
	mfûe›_íåy
;

68 
gch¨
 *
	mfûe›_fûe
;

69 
gpoöãr
 
	mcm∂_°©e
;

71 
GtkWidgë
 *
	mfûe›_c_dú
;

72 
GtkWidgë
 *
	mfûe›_dñ_fûe
;

73 
GtkWidgë
 *
	mfûe›_ªn_fûe
;

75 
GtkWidgë
 *
	mbuâ⁄_¨ó
;

76 
GtkWidgë
 *
	ma˘i⁄_¨ó
;

79 
GPåAºay
 *
	m£À˘ed_«mes
;

80 
gch¨
 *
	mœ°_£À˘ed
;

83 
	s_GtkFûeSñe˘i⁄Cœss


85 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

88 (*
	m_gtk_ª£rved1
) ();

89 (*
	m_gtk_ª£rved2
) ();

90 (*
	m_gtk_ª£rved3
) ();

91 (*
	m_gtk_ª£rved4
) ();

95 #ifde‡
G_OS_WIN32


97 
	#gtk_fûe_£À˘i⁄_gë_fûíame
 
gtk_fûe_£À˘i⁄_gë_fûíame_utf8


	)

98 
	#gtk_fûe_£À˘i⁄_£t_fûíame
 
gtk_fûe_£À˘i⁄_£t_fûíame_utf8


	)

99 
	#gtk_fûe_£À˘i⁄_gë_£À˘i⁄s
 
gtk_fûe_£À˘i⁄_gë_£À˘i⁄s_utf8


	)

102 
GTy≥
 
	$gtk_fûe_£À˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

103 
GtkWidgë
* 
	`gtk_fûe_£À˘i⁄_√w
 (c⁄° 
gch¨
 *
tôÀ
);

104 
	`gtk_fûe_£À˘i⁄_£t_fûíame
 (
GtkFûeSñe˘i⁄
 *
fûe£l
,

105 c⁄° 
gch¨
 *
fûíame
);

106 
G_CONST_RETURN
 
gch¨
* 
	`gtk_fûe_£À˘i⁄_gë_fûíame
 (
GtkFûeSñe˘i⁄
 *
fûe£l
);

108 
	`gtk_fûe_£À˘i⁄_com∂ëe
 (
GtkFûeSñe˘i⁄
 *
fûe£l
,

109 c⁄° 
gch¨
 *
∑âîn
);

110 
	`gtk_fûe_£À˘i⁄_show_fûe›_buâ⁄s
 (
GtkFûeSñe˘i⁄
 *
fûe£l
);

111 
	`gtk_fûe_£À˘i⁄_hide_fûe›_buâ⁄s
 (
GtkFûeSñe˘i⁄
 *
fûe£l
);

113 
gch¨
** 
	`gtk_fûe_£À˘i⁄_gë_£À˘i⁄s
 (
GtkFûeSñe˘i⁄
 *
fûe£l
);

115 
	`gtk_fûe_£À˘i⁄_£t_£À˘_mu…ùÀ
 (
GtkFûeSñe˘i⁄
 *
fûe£l
,

116 
gboﬁón
 
£À˘_mu…ùÀ
);

117 
gboﬁón
 
	`gtk_fûe_£À˘i⁄_gë_£À˘_mu…ùÀ
 (
GtkFûeSñe˘i⁄
 *
fûe£l
);

120 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfixed.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_FIXED_H__


32 
	#__GTK_FIXED_H__


	)

35 
	~<gtk/gtkc⁄èöî.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_FIXED
 (
	`gtk_fixed_gë_ty≥
 ())

	)

41 
	#GTK_FIXED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FIXED
, 
GtkFixed
))

	)

42 
	#GTK_FIXED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FIXED
, 
GtkFixedCœss
))

	)

43 
	#GTK_IS_FIXED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FIXED
))

	)

44 
	#GTK_IS_FIXED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FIXED
))

	)

45 
	#GTK_FIXED_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FIXED
, 
GtkFixedCœss
))

	)

48 
_GtkFixed
 
	tGtkFixed
;

49 
_GtkFixedCœss
 
	tGtkFixedCœss
;

50 
_GtkFixedChûd
 
	tGtkFixedChûd
;

52 
	s_GtkFixed


54 
GtkC⁄èöî
 
	mc⁄èöî
;

56 
GLi°
 *
GSEAL
 (
chûdªn
);

59 
	s_GtkFixedCœss


61 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

64 
	s_GtkFixedChûd


66 
GtkWidgë
 *
	mwidgë
;

67 
göt
 
	mx
;

68 
göt
 
	my
;

72 
GTy≥
 
	$gtk_fixed_gë_ty≥
 (Ë
G_GNUC_CONST
;

73 
GtkWidgë
* 
	`gtk_fixed_√w
 ();

74 
	`gtk_fixed_put
 (
GtkFixed
 *
fixed
,

75 
GtkWidgë
 *
widgë
,

76 
göt
 
x
,

77 
göt
 
y
);

78 
	`gtk_fixed_move
 (
GtkFixed
 *
fixed
,

79 
GtkWidgë
 *
widgë
,

80 
göt
 
x
,

81 
göt
 
y
);

82 
	`gtk_fixed_£t_has_wödow
 (
GtkFixed
 *
fixed
,

83 
gboﬁón
 
has_wödow
);

84 
gboﬁón
 
	`gtk_fixed_gë_has_wödow
 (
GtkFixed
 *
fixed
);

86 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfontbutton.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_FONT_BUTTON_H__


32 
	#__GTK_FONT_BUTTON_H__


	)

34 
	~<gtk/gtkbuâ⁄.h
>

37 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_FONT_BUTTON
 (
	`gtk_f⁄t_buâ⁄_gë_ty≥
 ())

	)

43 
	#GTK_FONT_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FONT_BUTTON
, 
GtkF⁄tBuâ⁄
))

	)

44 
	#GTK_FONT_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FONT_BUTTON
, 
GtkF⁄tBuâ⁄Cœss
))

	)

45 
	#GTK_IS_FONT_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FONT_BUTTON
))

	)

46 
	#GTK_IS_FONT_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FONT_BUTTON
))

	)

47 
	#GTK_FONT_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FONT_BUTTON
, 
GtkF⁄tBuâ⁄Cœss
))

	)

49 
_GtkF⁄tBuâ⁄
 
	tGtkF⁄tBuâ⁄
;

50 
_GtkF⁄tBuâ⁄Cœss
 
	tGtkF⁄tBuâ⁄Cœss
;

51 
_GtkF⁄tBuâ⁄Priv©e
 
	tGtkF⁄tBuâ⁄Priv©e
;

53 
	s_GtkF⁄tBuâ⁄
 {

54 
GtkBuâ⁄
 
	mbuâ⁄
;

57 
GtkF⁄tBuâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

60 
	s_GtkF⁄tBuâ⁄Cœss
 {

61 
GtkBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

64 (* 
	mf⁄t_£t
Ë(
GtkF⁄tBuâ⁄
 *
	mgÂ
);

67 (*
	m_gtk_ª£rved1
) ();

68 (*
	m_gtk_ª£rved2
) ();

69 (*
	m_gtk_ª£rved3
) ();

70 (*
	m_gtk_ª£rved4
) ();

74 
GTy≥
 
	$gtk_f⁄t_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
GtkWidgë
 *
	`gtk_f⁄t_buâ⁄_√w
 ();

76 
GtkWidgë
 *
	`gtk_f⁄t_buâ⁄_√w_wôh_f⁄t
 (c⁄° 
gch¨
 *
f⁄äame
);

78 
G_CONST_RETURN
 
gch¨
 *
	`gtk_f⁄t_buâ⁄_gë_tôÀ
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
);

79 
	`gtk_f⁄t_buâ⁄_£t_tôÀ
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
,

80 c⁄° 
gch¨
 *
tôÀ
);

81 
gboﬁón
 
	`gtk_f⁄t_buâ⁄_gë_u£_f⁄t
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
);

82 
	`gtk_f⁄t_buâ⁄_£t_u£_f⁄t
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
,

83 
gboﬁón
 
u£_f⁄t
);

84 
gboﬁón
 
	`gtk_f⁄t_buâ⁄_gë_u£_size
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
);

85 
	`gtk_f⁄t_buâ⁄_£t_u£_size
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
,

86 
gboﬁón
 
u£_size
);

87 
G_CONST_RETURN
 
gch¨
* 
	`gtk_f⁄t_buâ⁄_gë_f⁄t_«me
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
);

88 
gboﬁón
 
	`gtk_f⁄t_buâ⁄_£t_f⁄t_«me
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
,

89 c⁄° 
gch¨
 *
f⁄äame
);

90 
gboﬁón
 
	`gtk_f⁄t_buâ⁄_gë_show_°yÀ
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
);

91 
	`gtk_f⁄t_buâ⁄_£t_show_°yÀ
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
,

92 
gboﬁón
 
show_°yÀ
);

93 
gboﬁón
 
	`gtk_f⁄t_buâ⁄_gë_show_size
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
);

94 
	`gtk_f⁄t_buâ⁄_£t_show_size
 (
GtkF⁄tBuâ⁄
 *
f⁄t_buâ⁄
,

95 
gboﬁón
 
show_size
);

97 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkfontsel.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_FONTSEL_H__


36 
	#__GTK_FONTSEL_H__


	)

39 
	~<gtk/gtkdülog.h
>

40 
	~<gtk/gtkvbox.h
>

43 
	gG_BEGIN_DECLS


45 
	#GTK_TYPE_FONT_SELECTION
 (
	`gtk_f⁄t_£À˘i⁄_gë_ty≥
 ())

	)

46 
	#GTK_FONT_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FONT_SELECTION
, 
GtkF⁄tSñe˘i⁄
))

	)

47 
	#GTK_FONT_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FONT_SELECTION
, 
GtkF⁄tSñe˘i⁄Cœss
))

	)

48 
	#GTK_IS_FONT_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FONT_SELECTION
))

	)

49 
	#GTK_IS_FONT_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FONT_SELECTION
))

	)

50 
	#GTK_FONT_SELECTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FONT_SELECTION
, 
GtkF⁄tSñe˘i⁄Cœss
))

	)

53 
	#GTK_TYPE_FONT_SELECTION_DIALOG
 (
	`gtk_f⁄t_£À˘i⁄_dülog_gë_ty≥
 ())

	)

54 
	#GTK_FONT_SELECTION_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FONT_SELECTION_DIALOG
, 
GtkF⁄tSñe˘i⁄Dülog
))

	)

55 
	#GTK_FONT_SELECTION_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FONT_SELECTION_DIALOG
, 
GtkF⁄tSñe˘i⁄DülogCœss
))

	)

56 
	#GTK_IS_FONT_SELECTION_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FONT_SELECTION_DIALOG
))

	)

57 
	#GTK_IS_FONT_SELECTION_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FONT_SELECTION_DIALOG
))

	)

58 
	#GTK_FONT_SELECTION_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FONT_SELECTION_DIALOG
, 
GtkF⁄tSñe˘i⁄DülogCœss
))

	)

61 
_GtkF⁄tSñe˘i⁄
 
	tGtkF⁄tSñe˘i⁄
;

62 
_GtkF⁄tSñe˘i⁄Cœss
 
	tGtkF⁄tSñe˘i⁄Cœss
;

64 
_GtkF⁄tSñe˘i⁄Dülog
 
	tGtkF⁄tSñe˘i⁄Dülog
;

65 
_GtkF⁄tSñe˘i⁄DülogCœss
 
	tGtkF⁄tSñe˘i⁄DülogCœss
;

67 
	s_GtkF⁄tSñe˘i⁄


69 
GtkVBox
 
	m∑ª¡_ö°™˚
;

71 
GtkWidgë
 *
GSEAL
 (
f⁄t_íåy
);

72 
GtkWidgë
 *
GSEAL
 (
Ámûy_li°
);

73 
GtkWidgë
 *
GSEAL
 (
f⁄t_°yÀ_íåy
);

74 
GtkWidgë
 *
GSEAL
 (
Á˚_li°
);

75 
GtkWidgë
 *
GSEAL
 (
size_íåy
);

76 
GtkWidgë
 *
GSEAL
 (
size_li°
);

77 
GtkWidgë
 *
GSEAL
 (
pixñs_buâ⁄
);

78 
GtkWidgë
 *
GSEAL
 (
poöts_buâ⁄
);

79 
GtkWidgë
 *
GSEAL
 (
fûãr_buâ⁄
);

80 
GtkWidgë
 *
GSEAL
 (
¥evõw_íåy
);

82 
P™goF⁄tFamûy
 *
GSEAL
 (
Ámûy
);

83 
P™goF⁄tFa˚
 *
GSEAL
 (
Á˚
);

85 
göt
 
GSEAL
 (
size
);

87 
GdkF⁄t
 *
GSEAL
 (
f⁄t
);

92 
	s_GtkF⁄tSñe˘i⁄Cœss


94 
GtkVBoxCœss
 
	m∑ª¡_˛ass
;

97 (*
	m_gtk_ª£rved1
) ();

98 (*
	m_gtk_ª£rved2
) ();

99 (*
	m_gtk_ª£rved3
) ();

100 (*
	m_gtk_ª£rved4
) ();

103 
	s_GtkF⁄tSñe˘i⁄Dülog


105 
GtkDülog
 
	m∑ª¡_ö°™˚
;

108 
GtkWidgë
 *
GSEAL
 (
f⁄t£l
);

110 
GtkWidgë
 *
GSEAL
 (
maö_vbox
);

111 
GtkWidgë
 *
GSEAL
 (
a˘i⁄_¨ó
);

114 
GtkWidgë
 *
GSEAL
 (
ok_buâ⁄
);

115 
GtkWidgë
 *
GSEAL
 (
≠∂y_buâ⁄
);

116 
GtkWidgë
 *
GSEAL
 (
ˇn˚l_buâ⁄
);

123 
göt
 
GSEAL
 (
dülog_width
);

124 
gboﬁón
 
GSEAL
 (
auto_ªsize
);

127 
	s_GtkF⁄tSñe˘i⁄DülogCœss


129 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

132 (*
	m_gtk_ª£rved1
) ();

133 (*
	m_gtk_ª£rved2
) ();

134 (*
	m_gtk_ª£rved3
) ();

135 (*
	m_gtk_ª£rved4
) ();

145 
GTy≥
 
	$gtk_f⁄t_£À˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

146 
GtkWidgë
 * 
	`gtk_f⁄t_£À˘i⁄_√w
 ();

147 
GtkWidgë
 * 
	`gtk_f⁄t_£À˘i⁄_gë_Ámûy_li°
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

148 
GtkWidgë
 * 
	`gtk_f⁄t_£À˘i⁄_gë_Á˚_li°
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

149 
GtkWidgë
 * 
	`gtk_f⁄t_£À˘i⁄_gë_size_íåy
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

150 
GtkWidgë
 * 
	`gtk_f⁄t_£À˘i⁄_gë_size_li°
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

151 
GtkWidgë
 * 
	`gtk_f⁄t_£À˘i⁄_gë_¥evõw_íåy
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

152 
P™goF⁄tFamûy
 *

153 
	`gtk_f⁄t_£À˘i⁄_gë_Ámûy
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

154 
P™goF⁄tFa˚
 *

155 
	`gtk_f⁄t_£À˘i⁄_gë_Á˚
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

156 
göt
 
	`gtk_f⁄t_£À˘i⁄_gë_size
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

157 
gch¨
* 
	`gtk_f⁄t_£À˘i⁄_gë_f⁄t_«me
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

159 #i‚de‡
GTK_DISABLE_DEPRECATED


160 
GdkF⁄t
* 
	`gtk_f⁄t_£À˘i⁄_gë_f⁄t
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

163 
gboﬁón
 
	`gtk_f⁄t_£À˘i⁄_£t_f⁄t_«me
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
,

164 c⁄° 
gch¨
 *
f⁄äame
);

165 c⁄° 
gch¨
* 
	`gtk_f⁄t_£À˘i⁄_gë_¥evõw_ãxt
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
);

166 
	`gtk_f⁄t_£À˘i⁄_£t_¥evõw_ãxt
 (
GtkF⁄tSñe˘i⁄
 *
f⁄t£l
,

167 c⁄° 
gch¨
 *
ãxt
);

175 
GTy≥
 
	$gtk_f⁄t_£À˘i⁄_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

176 
GtkWidgë
 *
	`gtk_f⁄t_£À˘i⁄_dülog_√w
 (c⁄° 
gch¨
 *
tôÀ
);

178 
GtkWidgë
 *
	`gtk_f⁄t_£À˘i⁄_dülog_gë_ok_buâ⁄
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
);

179 #i‚de‡
GTK_DISABLE_DEPRECATED


180 
GtkWidgë
 *
	`gtk_f⁄t_£À˘i⁄_dülog_gë_≠∂y_buâ⁄
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
);

182 
GtkWidgë
 *
	`gtk_f⁄t_£À˘i⁄_dülog_gë_ˇn˚l_buâ⁄
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
);

189 
gch¨
* 
	`gtk_f⁄t_£À˘i⁄_dülog_gë_f⁄t_«me
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
);

191 #i‚de‡
GTK_DISABLE_DEPRECATED


195 
GdkF⁄t
* 
	`gtk_f⁄t_£À˘i⁄_dülog_gë_f⁄t
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
);

202 
gboﬁón
 
	`gtk_f⁄t_£À˘i⁄_dülog_£t_f⁄t_«me
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
,

203 c⁄° 
gch¨
 *
f⁄äame
);

207 
G_CONST_RETURN
 
gch¨
*

208 
	`gtk_f⁄t_£À˘i⁄_dülog_gë_¥evõw_ãxt
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
);

212 
	`gtk_f⁄t_£À˘i⁄_dülog_£t_¥evõw_ãxt
 (
GtkF⁄tSñe˘i⁄Dülog
 *
fsd
,

213 c⁄° 
gch¨
 *
ãxt
);

216 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkframe.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_FRAME_H__


32 
	#__GTK_FRAME_H__


	)

35 
	~<gtk/gtkbö.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_FRAME
 (
	`gtk_‰ame_gë_ty≥
 ())

	)

42 
	#GTK_FRAME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_FRAME
, 
GtkFøme
))

	)

43 
	#GTK_FRAME_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_FRAME
, 
GtkFømeCœss
))

	)

44 
	#GTK_IS_FRAME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_FRAME
))

	)

45 
	#GTK_IS_FRAME_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_FRAME
))

	)

46 
	#GTK_FRAME_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_FRAME
, 
GtkFømeCœss
))

	)

49 
_GtkFøme
 
	tGtkFøme
;

50 
_GtkFømeCœss
 
	tGtkFømeCœss
;

52 
	s_GtkFøme


54 
GtkBö
 
	mbö
;

56 
GtkWidgë
 *
GSEAL
 (
œbñ_widgë
);

57 
göt16
 
GSEAL
 (
shadow_ty≥
);

58 
gÊﬂt
 
GSEAL
 (
œbñ_xÆign
);

59 
gÊﬂt
 
GSEAL
 (
œbñ_yÆign
);

61 
GtkAŒoˇti⁄
 
GSEAL
 (
chûd_Æloˇti⁄
);

64 
	s_GtkFømeCœss


66 
GtkBöCœss
 
	m∑ª¡_˛ass
;

68 (*
	mcompuã_chûd_Æloˇti⁄
Ë(
GtkFøme
 *
	m‰ame
, 
GtkAŒoˇti⁄
 *
	mÆloˇti⁄
);

72 
GTy≥
 
	$gtk_‰ame_gë_ty≥
 (Ë
G_GNUC_CONST
;

73 
GtkWidgë
* 
	`gtk_‰ame_√w
 (c⁄° 
gch¨
 *
œbñ
);

75 
	`gtk_‰ame_£t_œbñ
 (
GtkFøme
 *
‰ame
,

76 c⁄° 
gch¨
 *
œbñ
);

77 
G_CONST_RETURN
 
gch¨
 *
	`gtk_‰ame_gë_œbñ
 (
GtkFøme
 *
‰ame
);

79 
	`gtk_‰ame_£t_œbñ_widgë
 (
GtkFøme
 *
‰ame
,

80 
GtkWidgë
 *
œbñ_widgë
);

81 
GtkWidgë
 *
	`gtk_‰ame_gë_œbñ_widgë
 (
GtkFøme
 *
‰ame
);

82 
	`gtk_‰ame_£t_œbñ_Æign
 (
GtkFøme
 *
‰ame
,

83 
gÊﬂt
 
xÆign
,

84 
gÊﬂt
 
yÆign
);

85 
	`gtk_‰ame_gë_œbñ_Æign
 (
GtkFøme
 *
‰ame
,

86 
gÊﬂt
 *
xÆign
,

87 
gÊﬂt
 *
yÆign
);

88 
	`gtk_‰ame_£t_shadow_ty≥
 (
GtkFøme
 *
‰ame
,

89 
GtkShadowTy≥
 
ty≥
);

90 
GtkShadowTy≥
 
	`gtk_‰ame_gë_shadow_ty≥
 (
GtkFøme
 *
‰ame
);

93 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkgamma.h

37 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

41 #i‚de‡
__GTK_GAMMA_CURVE_H__


42 
	#__GTK_GAMMA_CURVE_H__


	)

45 
	~<gtk/gtkvbox.h
>

48 
	gG_BEGIN_DECLS


50 
	#GTK_TYPE_GAMMA_CURVE
 (
	`gtk_gamma_curve_gë_ty≥
 ())

	)

51 
	#GTK_GAMMA_CURVE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_GAMMA_CURVE
, 
GtkGammaCurve
))

	)

52 
	#GTK_GAMMA_CURVE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_GAMMA_CURVE
, 
GtkGammaCurveCœss
))

	)

53 
	#GTK_IS_GAMMA_CURVE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_GAMMA_CURVE
))

	)

54 
	#GTK_IS_GAMMA_CURVE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_GAMMA_CURVE
))

	)

55 
	#GTK_GAMMA_CURVE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_GAMMA_CURVE
, 
GtkGammaCurveCœss
))

	)

57 
_GtkGammaCurve
 
	tGtkGammaCurve
;

58 
_GtkGammaCurveCœss
 
	tGtkGammaCurveCœss
;

61 
	s_GtkGammaCurve


63 
GtkVBox
 
	mvbox
;

65 
GtkWidgë
 *
GSEAL
 (
èbÀ
);

66 
GtkWidgë
 *
GSEAL
 (
curve
);

67 
GtkWidgë
 *
GSEAL
 (
buâ⁄
[5]);

69 
gÊﬂt
 
GSEAL
 (
gamma
);

70 
GtkWidgë
 *
GSEAL
 (
gamma_dülog
);

71 
GtkWidgë
 *
GSEAL
 (
gamma_ãxt
);

74 
	s_GtkGammaCurveCœss


76 
GtkVBoxCœss
 
	m∑ª¡_˛ass
;

79 (*
	m_gtk_ª£rved1
) ();

80 (*
	m_gtk_ª£rved2
) ();

81 (*
	m_gtk_ª£rved3
) ();

82 (*
	m_gtk_ª£rved4
) ();

86 
GTy≥
 
	$gtk_gamma_curve_gë_ty≥
 (Ë
G_GNUC_CONST
;

87 
GtkWidgë
* 
	`gtk_gamma_curve_√w
 ();

90 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkgc.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_GC_H__


32 
	#__GTK_GC_H__


	)

35 
	~<gdk/gdk.h
>

38 
G_BEGIN_DECLS


40 
GdkGC
* 
gtk_gc_gë
 (
göt
 
dïth
,

41 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

42 
GdkGCVÆues
 *
vÆues
,

43 
GdkGCVÆuesMask
 
vÆues_mask
);

44 
gtk_gc_ªÀa£
 (
GdkGC
 *
gc
);

47 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhandlebox.h

32 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

36 #i‚de‡
__GTK_HANDLE_BOX_H__


37 
	#__GTK_HANDLE_BOX_H__


	)

40 
	~<gtk/gtkbö.h
>

43 
	gG_BEGIN_DECLS


45 
	#GTK_TYPE_HANDLE_BOX
 (
	`gtk_h™dÀ_box_gë_ty≥
 ())

	)

46 
	#GTK_HANDLE_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HANDLE_BOX
, 
GtkH™dÀBox
))

	)

47 
	#GTK_HANDLE_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HANDLE_BOX
, 
GtkH™dÀBoxCœss
))

	)

48 
	#GTK_IS_HANDLE_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HANDLE_BOX
))

	)

49 
	#GTK_IS_HANDLE_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HANDLE_BOX
))

	)

50 
	#GTK_HANDLE_BOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HANDLE_BOX
, 
GtkH™dÀBoxCœss
))

	)

53 
_GtkH™dÀBox
 
	tGtkH™dÀBox
;

54 
_GtkH™dÀBoxCœss
 
	tGtkH™dÀBoxCœss
;

56 
	s_GtkH™dÀBox


58 
GtkBö
 
	mbö
;

60 
GdkWödow
 *
GSEAL
 (
bö_wödow
);

61 
GdkWödow
 *
GSEAL
 (
Êﬂt_wödow
);

62 
GtkShadowTy≥
 
GSEAL
 (
shadow_ty≥
);

63 
guöt
 
GSEAL
 (
h™dÀ_posôi⁄
) : 2;

64 
guöt
 
GSEAL
 (
Êﬂt_wödow_m≠≥d
) : 1;

65 
guöt
 
GSEAL
 (
chûd_dëached
) : 1;

66 
guöt
 
GSEAL
 (
ö_døg
) : 1;

67 
guöt
 
GSEAL
 (
shrök_⁄_dëach
) : 1;

69 sig√d 
GSEAL
 (
¢≠_edge
 : 3);

73 
göt
 
GSEAL
 (
deskoff_x
);

74 
göt
 
GSEAL
 (
deskoff_y
);

76 
GtkAŒoˇti⁄
 
GSEAL
 (
©èch_Æloˇti⁄
);

77 
GtkAŒoˇti⁄
 
GSEAL
 (
Êﬂt_Æloˇti⁄
);

80 
	s_GtkH™dÀBoxCœss


82 
GtkBöCœss
 
	m∑ª¡_˛ass
;

84 (*
	mchûd_©èched
Ë(
GtkH™dÀBox
 *
	mh™dÀ_box
,

85 
GtkWidgë
 *
	mchûd
);

86 (*
	mchûd_dëached
Ë(
GtkH™dÀBox
 *
	mh™dÀ_box
,

87 
GtkWidgë
 *
	mchûd
);

90 (*
	m_gtk_ª£rved1
) ();

91 (*
	m_gtk_ª£rved2
) ();

92 (*
	m_gtk_ª£rved3
) ();

93 (*
	m_gtk_ª£rved4
) ();

97 
GTy≥
 
	$gtk_h™dÀ_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

98 
GtkWidgë
* 
	`gtk_h™dÀ_box_√w
 ();

99 
	`gtk_h™dÀ_box_£t_shadow_ty≥
 (
GtkH™dÀBox
 *
h™dÀ_box
,

100 
GtkShadowTy≥
 
ty≥
);

101 
GtkShadowTy≥
 
	`gtk_h™dÀ_box_gë_shadow_ty≥
 (
GtkH™dÀBox
 *
h™dÀ_box
);

102 
	`gtk_h™dÀ_box_£t_h™dÀ_posôi⁄
 (
GtkH™dÀBox
 *
h™dÀ_box
,

103 
GtkPosôi⁄Ty≥
 
posôi⁄
);

104 
GtkPosôi⁄Ty≥
 
	`gtk_h™dÀ_box_gë_h™dÀ_posôi⁄
(
GtkH™dÀBox
 *
h™dÀ_box
);

105 
	`gtk_h™dÀ_box_£t_¢≠_edge
 (
GtkH™dÀBox
 *
h™dÀ_box
,

106 
GtkPosôi⁄Ty≥
 
edge
);

107 
GtkPosôi⁄Ty≥
 
	`gtk_h™dÀ_box_gë_¢≠_edge
 (
GtkH™dÀBox
 *
h™dÀ_box
);

108 
gboﬁón
 
	`gtk_h™dÀ_box_gë_chûd_dëached
 (
GtkH™dÀBox
 *
h™dÀ_box
);

110 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhbbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_HBUTTON_BOX_H__


32 
	#__GTK_HBUTTON_BOX_H__


	)

35 
	~<gtk/gtkbbox.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_HBUTTON_BOX
 (
	`gtk_hbuâ⁄_box_gë_ty≥
 ())

	)

41 
	#GTK_HBUTTON_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HBUTTON_BOX
, 
GtkHBuâ⁄Box
))

	)

42 
	#GTK_HBUTTON_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HBUTTON_BOX
, 
GtkHBuâ⁄BoxCœss
))

	)

43 
	#GTK_IS_HBUTTON_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HBUTTON_BOX
))

	)

44 
	#GTK_IS_HBUTTON_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HBUTTON_BOX
))

	)

45 
	#GTK_HBUTTON_BOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HBUTTON_BOX
, 
GtkHBuâ⁄BoxCœss
))

	)

48 
_GtkHBuâ⁄Box
 
	tGtkHBuâ⁄Box
;

49 
_GtkHBuâ⁄BoxCœss
 
	tGtkHBuâ⁄BoxCœss
;

51 
	s_GtkHBuâ⁄Box


53 
GtkBuâ⁄Box
 
	mbuâ⁄_box
;

56 
	s_GtkHBuâ⁄BoxCœss


58 
GtkBuâ⁄BoxCœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_hbuâ⁄_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
GtkWidgë
* 
	`gtk_hbuâ⁄_box_√w
 ();

67 #i‚de‡
GTK_DISABLE_DEPRECATED


68 
göt
 
	`gtk_hbuâ⁄_box_gë_•acög_deÁu…
 ();

69 
GtkBuâ⁄BoxStyÀ
 
	`gtk_hbuâ⁄_box_gë_œyout_deÁu…
 ();

71 
	`gtk_hbuâ⁄_box_£t_•acög_deÁu…
 (
göt
 
•acög
);

72 
	`gtk_hbuâ⁄_box_£t_œyout_deÁu…
 (
GtkBuâ⁄BoxStyÀ
 
œyout
);

75 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_HBOX_H__


32 
	#__GTK_HBOX_H__


	)

35 
	~<gtk/gtkbox.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_HBOX
 (
	`gtk_hbox_gë_ty≥
 ())

	)

41 
	#GTK_HBOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HBOX
, 
GtkHBox
))

	)

42 
	#GTK_HBOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HBOX
, 
GtkHBoxCœss
))

	)

43 
	#GTK_IS_HBOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HBOX
))

	)

44 
	#GTK_IS_HBOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HBOX
))

	)

45 
	#GTK_HBOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HBOX
, 
GtkHBoxCœss
))

	)

48 
_GtkHBox
 
	tGtkHBox
;

49 
_GtkHBoxCœss
 
	tGtkHBoxCœss
;

51 
	s_GtkHBox


53 
GtkBox
 
	mbox
;

56 
	s_GtkHBoxCœss


58 
GtkBoxCœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_hbox_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
GtkWidgë
 * 
	`gtk_hbox_√w
 (
gboﬁón
 
homogíeous
,

64 
göt
 
•acög
);

66 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhpaned.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_HPANED_H__


32 
	#__GTK_HPANED_H__


	)

34 
	~<gtk/gtk∑√d.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_HPANED
 (
	`gtk_h∑√d_gë_ty≥
 ())

	)

39 
	#GTK_HPANED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HPANED
, 
GtkHP™ed
))

	)

40 
	#GTK_HPANED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HPANED
, 
GtkHP™edCœss
))

	)

41 
	#GTK_IS_HPANED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HPANED
))

	)

42 
	#GTK_IS_HPANED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HPANED
))

	)

43 
	#GTK_HPANED_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HPANED
, 
GtkHP™edCœss
))

	)

46 
_GtkHP™ed
 
	tGtkHP™ed
;

47 
_GtkHP™edCœss
 
	tGtkHP™edCœss
;

49 
	s_GtkHP™ed


51 
GtkP™ed
 
	m∑√d
;

54 
	s_GtkHP™edCœss


56 
GtkP™edCœss
 
	m∑ª¡_˛ass
;

60 
GTy≥
 
	$gtk_h∑√d_gë_ty≥
 (Ë
G_GNUC_CONST
;

61 
GtkWidgë
 * 
	`gtk_h∑√d_√w
 ();

63 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhruler.h

37 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

41 #i‚de‡
__GTK_HRULER_H__


42 
	#__GTK_HRULER_H__


	)

45 
	~<gtk/gtkruÀr.h
>

48 
	gG_BEGIN_DECLS


51 
	#GTK_TYPE_HRULER
 (
	`gtk_hruÀr_gë_ty≥
 ())

	)

52 
	#GTK_HRULER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HRULER
, 
GtkHRuÀr
))

	)

53 
	#GTK_HRULER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HRULER
, 
GtkHRuÀrCœss
))

	)

54 
	#GTK_IS_HRULER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HRULER
))

	)

55 
	#GTK_IS_HRULER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HRULER
))

	)

56 
	#GTK_HRULER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HRULER
, 
GtkHRuÀrCœss
))

	)

59 
_GtkHRuÀr
 
	tGtkHRuÀr
;

60 
_GtkHRuÀrCœss
 
	tGtkHRuÀrCœss
;

62 
	s_GtkHRuÀr


64 
GtkRuÀr
 
	mruÀr
;

67 
	s_GtkHRuÀrCœss


69 
GtkRuÀrCœss
 
	m∑ª¡_˛ass
;

73 
GTy≥
 
	$gtk_hruÀr_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
GtkWidgë
* 
	`gtk_hruÀr_√w
 ();

77 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhscale.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_HSCALE_H__


32 
	#__GTK_HSCALE_H__


	)

35 
	~<gtk/gtksˇÀ.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_HSCALE
 (
	`gtk_hsˇÀ_gë_ty≥
 ())

	)

41 
	#GTK_HSCALE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HSCALE
, 
GtkHSˇÀ
))

	)

42 
	#GTK_HSCALE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HSCALE
, 
GtkHSˇÀCœss
))

	)

43 
	#GTK_IS_HSCALE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HSCALE
))

	)

44 
	#GTK_IS_HSCALE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HSCALE
))

	)

45 
	#GTK_HSCALE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HSCALE
, 
GtkHSˇÀCœss
))

	)

48 
_GtkHSˇÀ
 
	tGtkHSˇÀ
;

49 
_GtkHSˇÀCœss
 
	tGtkHSˇÀCœss
;

51 
	s_GtkHSˇÀ


53 
GtkSˇÀ
 
	msˇÀ
;

56 
	s_GtkHSˇÀCœss


58 
GtkSˇÀCœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_hsˇÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
GtkWidgë
* 
	`gtk_hsˇÀ_√w
 (
GtkAdju°mít
 *
adju°mít
);

64 
GtkWidgë
* 
	`gtk_hsˇÀ_√w_wôh_ønge
 (
gdoubÀ
 
mö
,

65 
gdoubÀ
 
max
,

66 
gdoubÀ
 
°ï
);

69 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhscrollbar.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_HSCROLLBAR_H__


32 
	#__GTK_HSCROLLBAR_H__


	)

35 
	~<gtk/gtks¸ﬁlb¨.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_HSCROLLBAR
 (
	`gtk_hs¸ﬁlb¨_gë_ty≥
 ())

	)

42 
	#GTK_HSCROLLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HSCROLLBAR
, 
GtkHS¸ﬁlb¨
))

	)

43 
	#GTK_HSCROLLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HSCROLLBAR
, 
GtkHS¸ﬁlb¨Cœss
))

	)

44 
	#GTK_IS_HSCROLLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HSCROLLBAR
))

	)

45 
	#GTK_IS_HSCROLLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HSCROLLBAR
))

	)

46 
	#GTK_HSCROLLBAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HSCROLLBAR
, 
GtkHS¸ﬁlb¨Cœss
))

	)

49 
_GtkHS¸ﬁlb¨
 
	tGtkHS¸ﬁlb¨
;

50 
_GtkHS¸ﬁlb¨Cœss
 
	tGtkHS¸ﬁlb¨Cœss
;

52 
	s_GtkHS¸ﬁlb¨


54 
GtkS¸ﬁlb¨
 
	ms¸ﬁlb¨
;

57 
	s_GtkHS¸ﬁlb¨Cœss


59 
GtkS¸ﬁlb¨Cœss
 
	m∑ª¡_˛ass
;

63 
GTy≥
 
	$gtk_hs¸ﬁlb¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkWidgë
* 
	`gtk_hs¸ﬁlb¨_√w
 (
GtkAdju°mít
 *
adju°mít
);

67 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhseparator.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_HSEPARATOR_H__


32 
	#__GTK_HSEPARATOR_H__


	)

35 
	~<gtk/gtk£∑øt‹.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_HSEPARATOR
 (
	`gtk_h£∑øt‹_gë_ty≥
 ())

	)

41 
	#GTK_HSEPARATOR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HSEPARATOR
, 
GtkHSï¨©‹
))

	)

42 
	#GTK_HSEPARATOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HSEPARATOR
, 
GtkHSï¨©‹Cœss
))

	)

43 
	#GTK_IS_HSEPARATOR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HSEPARATOR
))

	)

44 
	#GTK_IS_HSEPARATOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HSEPARATOR
))

	)

45 
	#GTK_HSEPARATOR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HSEPARATOR
, 
GtkHSï¨©‹Cœss
))

	)

48 
_GtkHSï¨©‹
 
	tGtkHSï¨©‹
;

49 
_GtkHSï¨©‹Cœss
 
	tGtkHSï¨©‹Cœss
;

51 
	s_GtkHSï¨©‹


53 
GtkSï¨©‹
 
	m£∑øt‹
;

56 
	s_GtkHSï¨©‹Cœss


58 
GtkSï¨©‹Cœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_h£∑øt‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
GtkWidgë
* 
	`gtk_h£∑øt‹_√w
 ();

66 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkhsv.h

32 #i‡!
deföed
 (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

36 #i‚de‡
__GTK_HSV_H__


37 
	#__GTK_HSV_H__


	)

39 
	~<gtk/gtkwidgë.h
>

41 
	gG_BEGIN_DECLS


43 
	#GTK_TYPE_HSV
 (
	`gtk_hsv_gë_ty≥
 ())

	)

44 
	#GTK_HSV
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_HSV
, 
GtkHSV
))

	)

45 
	#GTK_HSV_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_HSV
, 
GtkHSVCœss
))

	)

46 
	#GTK_IS_HSV
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_HSV
))

	)

47 
	#GTK_IS_HSV_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_HSV
))

	)

48 
	#GTK_HSV_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_HSV
, 
GtkHSVCœss
))

	)

51 
_GtkHSV
 
	tGtkHSV
;

52 
_GtkHSVCœss
 
	tGtkHSVCœss
;

54 
	s_GtkHSV


56 
GtkWidgë
 
	m∑ª¡_ö°™˚
;

59 
gpoöãr
 
GSEAL
 (
¥iv
);

62 
	s_GtkHSVCœss


64 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

67 (* 
	mch™ged
Ë(
GtkHSV
 *
	mhsv
);

70 (* 
	mmove
Ë(
GtkHSV
 *
	mhsv
,

71 
GtkDúe˘i⁄Ty≥
 
	mty≥
);

74 (*
	m_gtk_ª£rved1
) ();

75 (*
	m_gtk_ª£rved2
) ();

76 (*
	m_gtk_ª£rved3
) ();

77 (*
	m_gtk_ª£rved4
) ();

81 
GTy≥
 
	$gtk_hsv_gë_ty≥
 (Ë
G_GNUC_CONST
;

82 
GtkWidgë
* 
	`gtk_hsv_√w
 ();

83 
	`gtk_hsv_£t_cﬁ‹
 (
GtkHSV
 *
hsv
,

84 
h
,

85 
s
,

86 
v
);

87 
	`gtk_hsv_gë_cﬁ‹
 (
GtkHSV
 *
hsv
,

88 
gdoubÀ
 *
h
,

89 
gdoubÀ
 *
s
,

90 
gdoubÀ
 *
v
);

91 
	`gtk_hsv_£t_mërics
 (
GtkHSV
 *
hsv
,

92 
göt
 
size
,

93 
göt
 
rög_width
);

94 
	`gtk_hsv_gë_mërics
 (
GtkHSV
 *
hsv
,

95 
göt
 *
size
,

96 
göt
 *
rög_width
);

97 
gboﬁón
 
	`gtk_hsv_is_adju°ög
 (
GtkHSV
 *
hsv
);

100 
	`gtk_hsv_to_rgb
 (
gdoubÀ
 
h
,

101 
gdoubÀ
 
s
,

102 
gdoubÀ
 
v
,

103 
gdoubÀ
 *
r
,

104 
gdoubÀ
 *
g
,

105 
gdoubÀ
 *
b
);

106 
	`gtk_rgb_to_hsv
 (
gdoubÀ
 
r
,

107 
gdoubÀ
 
g
,

108 
gdoubÀ
 
b
,

109 
gdoubÀ
 *
h
,

110 
gdoubÀ
 *
s
,

111 
gdoubÀ
 *
v
);

113 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkiconfactory.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ICON_FACTORY_H__


32 
	#__GTK_ICON_FACTORY_H__


	)

34 
	~<gdk/gdk.h
>

35 
	~<gtk/gtkrc.h
>

37 
G_BEGIN_DECLS


39 
_GtkIc⁄Fa˘‹yCœss
 
	tGtkIc⁄Fa˘‹yCœss
;

41 
	#GTK_TYPE_ICON_FACTORY
 (
	`gtk_ic⁄_Á˘‹y_gë_ty≥
 ())

	)

42 
	#GTK_ICON_FACTORY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_ICON_FACTORY
, 
GtkIc⁄Fa˘‹y
))

	)

43 
	#GTK_ICON_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ICON_FACTORY
, 
GtkIc⁄Fa˘‹yCœss
))

	)

44 
	#GTK_IS_ICON_FACTORY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_ICON_FACTORY
))

	)

45 
	#GTK_IS_ICON_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ICON_FACTORY
))

	)

46 
	#GTK_ICON_FACTORY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ICON_FACTORY
, 
GtkIc⁄Fa˘‹yCœss
))

	)

47 
	#GTK_TYPE_ICON_SET
 (
	`gtk_ic⁄_£t_gë_ty≥
 ())

	)

48 
	#GTK_TYPE_ICON_SOURCE
 (
	`gtk_ic⁄_sour˚_gë_ty≥
 ())

	)

50 
	s_GtkIc⁄Fa˘‹y


52 
GObje˘
 
	m∑ª¡_ö°™˚
;

54 
GHashTabÀ
 *
GSEAL
 (
ic⁄s
);

57 
	s_GtkIc⁄Fa˘‹yCœss


59 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

62 (*
	m_gtk_ª£rved1
) ();

63 (*
	m_gtk_ª£rved2
) ();

64 (*
	m_gtk_ª£rved3
) ();

65 (*
	m_gtk_ª£rved4
) ();

68 #ifde‡
G_OS_WIN32


70 
	#gtk_ic⁄_sour˚_£t_fûíame
 
gtk_ic⁄_sour˚_£t_fûíame_utf8


	)

71 
	#gtk_ic⁄_sour˚_gë_fûíame
 
gtk_ic⁄_sour˚_gë_fûíame_utf8


	)

74 
GTy≥
 
	$gtk_ic⁄_Á˘‹y_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
GtkIc⁄Fa˘‹y
* 
	`gtk_ic⁄_Á˘‹y_√w
 ();

76 
	`gtk_ic⁄_Á˘‹y_add
 (
GtkIc⁄Fa˘‹y
 *
Á˘‹y
,

77 c⁄° 
gch¨
 *
°ock_id
,

78 
GtkIc⁄Së
 *
ic⁄_£t
);

79 
GtkIc⁄Së
* 
	`gtk_ic⁄_Á˘‹y_lookup
 (
GtkIc⁄Fa˘‹y
 *
Á˘‹y
,

80 c⁄° 
gch¨
 *
°ock_id
);

84 
	`gtk_ic⁄_Á˘‹y_add_deÁu…
 (
GtkIc⁄Fa˘‹y
 *
Á˘‹y
);

85 
	`gtk_ic⁄_Á˘‹y_ªmove_deÁu…
 (
GtkIc⁄Fa˘‹y
 *
Á˘‹y
);

86 
GtkIc⁄Së
* 
	`gtk_ic⁄_Á˘‹y_lookup_deÁu…
 (c⁄° 
gch¨
 *
°ock_id
);

99 #i‚de‡
GDK_MULTIHEAD_SAFE


100 
gboﬁón
 
	`gtk_ic⁄_size_lookup
 (
GtkIc⁄Size
 
size
,

101 
göt
 *
width
,

102 
göt
 *
height
);

104 
gboﬁón
 
	`gtk_ic⁄_size_lookup_f‹_£âögs
 (
GtkSëtögs
 *
£âögs
,

105 
GtkIc⁄Size
 
size
,

106 
göt
 *
width
,

107 
göt
 *
height
);

109 
GtkIc⁄Size
 
	`gtk_ic⁄_size_ªgi°î
 (c⁄° 
gch¨
 *
«me
,

110 
göt
 
width
,

111 
göt
 
height
);

112 
	`gtk_ic⁄_size_ªgi°î_Æüs
 (c⁄° 
gch¨
 *
Æüs
,

113 
GtkIc⁄Size
 
èrgë
);

114 
GtkIc⁄Size
 
	`gtk_ic⁄_size_‰om_«me
 (c⁄° 
gch¨
 *
«me
);

115 
G_CONST_RETURN
 
gch¨
* 
	`gtk_ic⁄_size_gë_«me
 (
GtkIc⁄Size
 
size
);

119 
GTy≥
 
	$gtk_ic⁄_£t_gë_ty≥
 (Ë
G_GNUC_CONST
;

120 
GtkIc⁄Së
* 
	`gtk_ic⁄_£t_√w
 ();

121 
GtkIc⁄Së
* 
	`gtk_ic⁄_£t_√w_‰om_pixbuf
 (
GdkPixbuf
 *
pixbuf
);

123 
GtkIc⁄Së
* 
	`gtk_ic⁄_£t_ªf
 (GtkIc⁄Së *
ic⁄_£t
);

124 
	`gtk_ic⁄_£t_uƒef
 (
GtkIc⁄Së
 *
ic⁄_£t
);

125 
GtkIc⁄Së
* 
	`gtk_ic⁄_£t_c›y
 (GtkIc⁄Së *
ic⁄_£t
);

130 
GdkPixbuf
* 
	`gtk_ic⁄_£t_ªndî_ic⁄
 (
GtkIc⁄Së
 *
ic⁄_£t
,

131 
GtkStyÀ
 *
°yÀ
,

132 
GtkTextDúe˘i⁄
 
dúe˘i⁄
,

133 
GtkSèãTy≥
 
°©e
,

134 
GtkIc⁄Size
 
size
,

135 
GtkWidgë
 *
widgë
,

136 c⁄° *
dëaû
);

139 
	`gtk_ic⁄_£t_add_sour˚
 (
GtkIc⁄Së
 *
ic⁄_£t
,

140 c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

142 
	`gtk_ic⁄_£t_gë_sizes
 (
GtkIc⁄Së
 *
ic⁄_£t
,

143 
GtkIc⁄Size
 **
sizes
,

144 
göt
 *
n_sizes
);

146 
GTy≥
 
	$gtk_ic⁄_sour˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

147 
GtkIc⁄Sour˚
* 
	`gtk_ic⁄_sour˚_√w
 ();

148 
GtkIc⁄Sour˚
* 
	`gtk_ic⁄_sour˚_c›y
 (c⁄° GtkIc⁄Sour˚ *
sour˚
);

149 
	`gtk_ic⁄_sour˚_‰ì
 (
GtkIc⁄Sour˚
 *
sour˚
);

151 
	`gtk_ic⁄_sour˚_£t_fûíame
 (
GtkIc⁄Sour˚
 *
sour˚
,

152 c⁄° 
gch¨
 *
fûíame
);

153 
	`gtk_ic⁄_sour˚_£t_ic⁄_«me
 (
GtkIc⁄Sour˚
 *
sour˚
,

154 c⁄° 
gch¨
 *
ic⁄_«me
);

155 
	`gtk_ic⁄_sour˚_£t_pixbuf
 (
GtkIc⁄Sour˚
 *
sour˚
,

156 
GdkPixbuf
 *
pixbuf
);

158 
G_CONST_RETURN
 
gch¨
* 
	`gtk_ic⁄_sour˚_gë_fûíame
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

159 
G_CONST_RETURN
 
gch¨
* 
	`gtk_ic⁄_sour˚_gë_ic⁄_«me
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

160 
GdkPixbuf
* 
	`gtk_ic⁄_sour˚_gë_pixbuf
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

162 
	`gtk_ic⁄_sour˚_£t_dúe˘i⁄_wûdˇrded
 (
GtkIc⁄Sour˚
 *
sour˚
,

163 
gboﬁón
 
£âög
);

164 
	`gtk_ic⁄_sour˚_£t_°©e_wûdˇrded
 (
GtkIc⁄Sour˚
 *
sour˚
,

165 
gboﬁón
 
£âög
);

166 
	`gtk_ic⁄_sour˚_£t_size_wûdˇrded
 (
GtkIc⁄Sour˚
 *
sour˚
,

167 
gboﬁón
 
£âög
);

168 
gboﬁón
 
	`gtk_ic⁄_sour˚_gë_size_wûdˇrded
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

169 
gboﬁón
 
	`gtk_ic⁄_sour˚_gë_°©e_wûdˇrded
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

170 
gboﬁón
 
	`gtk_ic⁄_sour˚_gë_dúe˘i⁄_wûdˇrded
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

171 
	`gtk_ic⁄_sour˚_£t_dúe˘i⁄
 (
GtkIc⁄Sour˚
 *
sour˚
,

172 
GtkTextDúe˘i⁄
 
dúe˘i⁄
);

173 
	`gtk_ic⁄_sour˚_£t_°©e
 (
GtkIc⁄Sour˚
 *
sour˚
,

174 
GtkSèãTy≥
 
°©e
);

175 
	`gtk_ic⁄_sour˚_£t_size
 (
GtkIc⁄Sour˚
 *
sour˚
,

176 
GtkIc⁄Size
 
size
);

177 
GtkTextDúe˘i⁄
 
	`gtk_ic⁄_sour˚_gë_dúe˘i⁄
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

178 
GtkSèãTy≥
 
	`gtk_ic⁄_sour˚_gë_°©e
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

179 
GtkIc⁄Size
 
	`gtk_ic⁄_sour˚_gë_size
 (c⁄° 
GtkIc⁄Sour˚
 *
sour˚
);

183 
	`_gtk_ic⁄_£t_övÆid©e_ˇches
 ();

184 
GLi°
* 
	`_gtk_ic⁄_Á˘‹y_li°_ids
 ();

185 
	`_gtk_ic⁄_Á˘‹y_ísuª_deÁu…_ic⁄s
 ();

187 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkicontheme.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_ICON_THEME_H__


25 
	#__GTK_ICON_THEME_H__


	)

27 
	~<gdk-pixbuf/gdk-pixbuf.h
>

28 
	~<gdk/gdk.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_ICON_INFO
 (
	`gtk_ic⁄_öfo_gë_ty≥
 ())

	)

34 
	#GTK_TYPE_ICON_THEME
 (
	`gtk_ic⁄_theme_gë_ty≥
 ())

	)

35 
	#GTK_ICON_THEME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ICON_THEME
, 
GtkIc⁄Theme
))

	)

36 
	#GTK_ICON_THEME_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ICON_THEME
, 
GtkIc⁄ThemeCœss
))

	)

37 
	#GTK_IS_ICON_THEME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ICON_THEME
))

	)

38 
	#GTK_IS_ICON_THEME_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ICON_THEME
))

	)

39 
	#GTK_ICON_THEME_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ICON_THEME
, 
GtkIc⁄ThemeCœss
))

	)

41 
_GtkIc⁄Info
 
	tGtkIc⁄Info
;

42 
_GtkIc⁄Theme
 
	tGtkIc⁄Theme
;

43 
_GtkIc⁄ThemeCœss
 
	tGtkIc⁄ThemeCœss
;

44 
_GtkIc⁄ThemePriv©e
 
	tGtkIc⁄ThemePriv©e
;

46 
	s_GtkIc⁄Theme


49 
GObje˘
 
	m∑ª¡_ö°™˚
;

51 
GtkIc⁄ThemePriv©e
 *
GSEAL
 (
¥iv
);

54 
	s_GtkIc⁄ThemeCœss


56 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

58 (* 
	mch™ged
Ë(
GtkIc⁄Theme
 *
	mic⁄_theme
);

82 
	mGTK_ICON_LOOKUP_NO_SVG
 = 1 << 0,

83 
	mGTK_ICON_LOOKUP_FORCE_SVG
 = 1 << 1,

84 
	mGTK_ICON_LOOKUP_USE_BUILTIN
 = 1 << 2,

85 
	mGTK_ICON_LOOKUP_GENERIC_FALLBACK
 = 1 << 3,

86 
	mGTK_ICON_LOOKUP_FORCE_SIZE
 = 1 << 4

87 } 
	tGtkIc⁄LookupFœgs
;

89 
	#GTK_ICON_THEME_ERROR
 
	`gtk_ic⁄_theme_îr‹_qu¨k
 ()

	)

99 
	mGTK_ICON_THEME_NOT_FOUND
,

100 
	mGTK_ICON_THEME_FAILED


101 } 
	tGtkIc⁄ThemeEº‹
;

103 
GQu¨k
 
gtk_ic⁄_theme_îr‹_qu¨k
 ();

105 #ifde‡
G_OS_WIN32


107 
	#gtk_ic⁄_theme_£t_£¨ch_∑th
 
gtk_ic⁄_theme_£t_£¨ch_∑th_utf8


	)

108 
	#gtk_ic⁄_theme_gë_£¨ch_∑th
 
gtk_ic⁄_theme_gë_£¨ch_∑th_utf8


	)

109 
	#gtk_ic⁄_theme_≠≥nd_£¨ch_∑th
 
gtk_ic⁄_theme_≠≥nd_£¨ch_∑th_utf8


	)

110 
	#gtk_ic⁄_theme_¥ïíd_£¨ch_∑th
 
gtk_ic⁄_theme_¥ïíd_£¨ch_∑th_utf8


	)

111 
	#gtk_ic⁄_öfo_gë_fûíame
 
gtk_ic⁄_öfo_gë_fûíame_utf8


	)

114 
GTy≥
 
	$gtk_ic⁄_theme_gë_ty≥
 (Ë
G_GNUC_CONST
;

116 
GtkIc⁄Theme
 *
	`gtk_ic⁄_theme_√w
 ();

117 
GtkIc⁄Theme
 *
	`gtk_ic⁄_theme_gë_deÁu…
 ();

118 
GtkIc⁄Theme
 *
	`gtk_ic⁄_theme_gë_f‹_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
);

119 
	`gtk_ic⁄_theme_£t_s¸ìn
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

120 
GdkS¸ìn
 *
s¸ìn
);

122 
	`gtk_ic⁄_theme_£t_£¨ch_∑th
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

123 c⁄° 
gch¨
 *
∑th
[],

124 
göt
 
n_ñemíts
);

125 
	`gtk_ic⁄_theme_gë_£¨ch_∑th
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

126 
gch¨
 **
∑th
[],

127 
göt
 *
n_ñemíts
);

128 
	`gtk_ic⁄_theme_≠≥nd_£¨ch_∑th
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

129 c⁄° 
gch¨
 *
∑th
);

130 
	`gtk_ic⁄_theme_¥ïíd_£¨ch_∑th
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

131 c⁄° 
gch¨
 *
∑th
);

133 
	`gtk_ic⁄_theme_£t_cu°om_theme
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

134 c⁄° 
gch¨
 *
theme_«me
);

136 
gboﬁón
 
	`gtk_ic⁄_theme_has_ic⁄
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

137 c⁄° 
gch¨
 *
ic⁄_«me
);

138 
göt
 *
	`gtk_ic⁄_theme_gë_ic⁄_sizes
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

139 c⁄° 
gch¨
 *
ic⁄_«me
);

140 
GtkIc⁄Info
 * 
	`gtk_ic⁄_theme_lookup_ic⁄
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

141 c⁄° 
gch¨
 *
ic⁄_«me
,

142 
göt
 
size
,

143 
GtkIc⁄LookupFœgs
 
Êags
);

144 
GtkIc⁄Info
 * 
	`gtk_ic⁄_theme_choo£_ic⁄
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

145 c⁄° 
gch¨
 *
ic⁄_«mes
[],

146 
göt
 
size
,

147 
GtkIc⁄LookupFœgs
 
Êags
);

148 
GdkPixbuf
 * 
	`gtk_ic⁄_theme_lﬂd_ic⁄
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

149 c⁄° 
gch¨
 *
ic⁄_«me
,

150 
göt
 
size
,

151 
GtkIc⁄LookupFœgs
 
Êags
,

152 
GEº‹
 **
îr‹
);

154 
GtkIc⁄Info
 * 
	`gtk_ic⁄_theme_lookup_by_gic⁄
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

155 
GIc⁄
 *
ic⁄
,

156 
göt
 
size
,

157 
GtkIc⁄LookupFœgs
 
Êags
);

159 
GLi°
 * 
	`gtk_ic⁄_theme_li°_ic⁄s
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

160 c⁄° 
gch¨
 *
c⁄ãxt
);

161 
GLi°
 * 
	`gtk_ic⁄_theme_li°_c⁄ãxts
 (
GtkIc⁄Theme
 *
ic⁄_theme
);

162 * 
	`gtk_ic⁄_theme_gë_exam∂e_ic⁄_«me
 (
GtkIc⁄Theme
 *
ic⁄_theme
);

164 
gboﬁón
 
	`gtk_ic⁄_theme_ªsˇn_if_√eded
 (
GtkIc⁄Theme
 *
ic⁄_theme
);

166 
	`gtk_ic⁄_theme_add_buûtö_ic⁄
 (c⁄° 
gch¨
 *
ic⁄_«me
,

167 
göt
 
size
,

168 
GdkPixbuf
 *
pixbuf
);

170 
GTy≥
 
	$gtk_ic⁄_öfo_gë_ty≥
 (Ë
G_GNUC_CONST
;

171 
GtkIc⁄Info
 * 
	`gtk_ic⁄_öfo_c›y
 (GtkIc⁄Infÿ*
ic⁄_öfo
);

172 
	`gtk_ic⁄_öfo_‰ì
 (
GtkIc⁄Info
 *
ic⁄_öfo
);

174 
GtkIc⁄Info
 * 
	`gtk_ic⁄_öfo_√w_f‹_pixbuf
 (
GtkIc⁄Theme
 *
ic⁄_theme
,

175 
GdkPixbuf
 *
pixbuf
);

177 
göt
 
	`gtk_ic⁄_öfo_gë_ba£_size
 (
GtkIc⁄Info
 *
ic⁄_öfo
);

178 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ic⁄_öfo_gë_fûíame
 (
GtkIc⁄Info
 *
ic⁄_öfo
);

179 
GdkPixbuf
 * 
	`gtk_ic⁄_öfo_gë_buûtö_pixbuf
 (
GtkIc⁄Info
 *
ic⁄_öfo
);

180 
GdkPixbuf
 * 
	`gtk_ic⁄_öfo_lﬂd_ic⁄
 (
GtkIc⁄Info
 *
ic⁄_öfo
,

181 
GEº‹
 **
îr‹
);

182 
	`gtk_ic⁄_öfo_£t_øw_co‹dö©es
 (
GtkIc⁄Info
 *
ic⁄_öfo
,

183 
gboﬁón
 
øw_co‹dö©es
);

185 
gboﬁón
 
	`gtk_ic⁄_öfo_gë_embedded_ª˘
 (
GtkIc⁄Info
 *
ic⁄_öfo
,

186 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

187 
gboﬁón
 
	`gtk_ic⁄_öfo_gë_©èch_poöts
 (
GtkIc⁄Info
 *
ic⁄_öfo
,

188 
GdkPoöt
 **
poöts
,

189 
göt
 *
n_poöts
);

190 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ic⁄_öfo_gë_di•œy_«me
 (
GtkIc⁄Info
 *
ic⁄_öfo
);

193 
	`_gtk_ic⁄_theme_check_ªlﬂd
 (
GdkDi•œy
 *
di•œy
);

194 
	`_gtk_ic⁄_theme_ísuª_buûtö_ˇche
 ();

196 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkiconview.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_ICON_VIEW_H__


25 
	#__GTK_ICON_VIEW_H__


	)

27 
	~<gtk/gtkc⁄èöî.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtk˚Œªndîî.h
>

30 
	~<gtk/gtk£À˘i⁄.h
>

31 
	~<gtk/gtktoﬁtù.h
>

33 
	gG_BEGIN_DECLS


35 
	#GTK_TYPE_ICON_VIEW
 (
	`gtk_ic⁄_võw_gë_ty≥
 ())

	)

36 
	#GTK_ICON_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ICON_VIEW
, 
GtkIc⁄Võw
))

	)

37 
	#GTK_ICON_VIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ICON_VIEW
, 
GtkIc⁄VõwCœss
))

	)

38 
	#GTK_IS_ICON_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ICON_VIEW
))

	)

39 
	#GTK_IS_ICON_VIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ICON_VIEW
))

	)

40 
	#GTK_ICON_VIEW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ICON_VIEW
, 
GtkIc⁄VõwCœss
))

	)

42 
_GtkIc⁄Võw
 
	tGtkIc⁄Võw
;

43 
_GtkIc⁄VõwCœss
 
	tGtkIc⁄VõwCœss
;

44 
_GtkIc⁄VõwPriv©e
 
	tGtkIc⁄VõwPriv©e
;

46 (* 
	tGtkIc⁄VõwF‹óchFunc
Ë(
	tGtkIc⁄Võw
 *
	tic⁄_võw
,

47 
	tGtkTªeP©h
 *
	t∑th
,

48 
	tgpoöãr
 
	td©a
);

52 
GTK_ICON_VIEW_NO_DROP
,

53 
GTK_ICON_VIEW_DROP_INTO
,

54 
GTK_ICON_VIEW_DROP_LEFT
,

55 
GTK_ICON_VIEW_DROP_RIGHT
,

56 
GTK_ICON_VIEW_DROP_ABOVE
,

57 
GTK_ICON_VIEW_DROP_BELOW


58 } 
	tGtkIc⁄VõwDr›Posôi⁄
;

60 
	s_GtkIc⁄Võw


62 
GtkC⁄èöî
 
∑ª¡
;

64 
GtkIc⁄VõwPriv©e
 *
	`GSEAL
 (
¥iv
);

67 
	s_GtkIc⁄VõwCœss


69 
GtkC⁄èöîCœss
 
∑ª¡_˛ass
;

71 (* 
£t_s¸ﬁl_adju°míts
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
,

72 
GtkAdju°mít
 *
hadju°mít
,

73 
GtkAdju°mít
 *
vadju°mít
);

75 (* 
ôem_a˘iv©ed
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
,

76 
GtkTªeP©h
 *
∑th
);

77 (* 
£À˘i⁄_ch™ged
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
);

80 (* 
£À˘_Æl
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
);

81 (* 
un£À˘_Æl
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
);

82 (* 
£À˘_curs‹_ôem
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
);

83 (* 
toggÀ_curs‹_ôem
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
);

84 
	`gboﬁón
 (* 
move_curs‹
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
,

85 
GtkMovemítSãp
 
°ï
,

86 
göt
 
cou¡
);

87 
	`gboﬁón
 (* 
a˘iv©e_curs‹_ôem
Ë(
GtkIc⁄Võw
 *
ic⁄_võw
);

90 
GTy≥
 
	$gtk_ic⁄_võw_gë_ty≥
 (Ë
G_GNUC_CONST
;

91 
GtkWidgë
 * 
	`gtk_ic⁄_võw_√w
 ();

92 
GtkWidgë
 * 
	`gtk_ic⁄_võw_√w_wôh_modñ
 (
GtkTªeModñ
 *
modñ
);

94 
	`gtk_ic⁄_võw_£t_modñ
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

95 
GtkTªeModñ
 *
modñ
);

96 
GtkTªeModñ
 * 
	`gtk_ic⁄_võw_gë_modñ
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

97 
	`gtk_ic⁄_võw_£t_ãxt_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

98 
göt
 
cﬁumn
);

99 
göt
 
	`gtk_ic⁄_võw_gë_ãxt_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

100 
	`gtk_ic⁄_võw_£t_m¨kup_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

101 
göt
 
cﬁumn
);

102 
göt
 
	`gtk_ic⁄_võw_gë_m¨kup_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

103 
	`gtk_ic⁄_võw_£t_pixbuf_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

104 
göt
 
cﬁumn
);

105 
göt
 
	`gtk_ic⁄_võw_gë_pixbuf_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

107 
	`gtk_ic⁄_võw_£t_‹õ¡©i⁄
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

108 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

109 
GtkOrõ¡©i⁄
 
	`gtk_ic⁄_võw_gë_‹õ¡©i⁄
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

110 
	`gtk_ic⁄_võw_£t_cﬁumns
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

111 
göt
 
cﬁumns
);

112 
göt
 
	`gtk_ic⁄_võw_gë_cﬁumns
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

113 
	`gtk_ic⁄_võw_£t_ôem_width
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

114 
göt
 
ôem_width
);

115 
göt
 
	`gtk_ic⁄_võw_gë_ôem_width
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

116 
	`gtk_ic⁄_võw_£t_•acög
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

117 
göt
 
•acög
);

118 
göt
 
	`gtk_ic⁄_võw_gë_•acög
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

119 
	`gtk_ic⁄_võw_£t_row_•acög
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

120 
göt
 
row_•acög
);

121 
göt
 
	`gtk_ic⁄_võw_gë_row_•acög
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

122 
	`gtk_ic⁄_võw_£t_cﬁumn_•acög
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

123 
göt
 
cﬁumn_•acög
);

124 
göt
 
	`gtk_ic⁄_võw_gë_cﬁumn_•acög
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

125 
	`gtk_ic⁄_võw_£t_m¨gö
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

126 
göt
 
m¨gö
);

127 
göt
 
	`gtk_ic⁄_võw_gë_m¨gö
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

130 
GtkTªeP©h
 * 
	`gtk_ic⁄_võw_gë_∑th_©_pos
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

131 
göt
 
x
,

132 
göt
 
y
);

133 
gboﬁón
 
	`gtk_ic⁄_võw_gë_ôem_©_pos
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

134 
göt
 
x
,

135 
göt
 
y
,

136 
GtkTªeP©h
 **
∑th
,

137 
GtkCñlRídîî
 **
˚Œ
);

138 
gboﬁón
 
	`gtk_ic⁄_võw_gë_visibÀ_ønge
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

139 
GtkTªeP©h
 **
°¨t_∑th
,

140 
GtkTªeP©h
 **
íd_∑th
);

142 
	`gtk_ic⁄_võw_£À˘ed_f‹óch
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

143 
GtkIc⁄VõwF‹óchFunc
 
func
,

144 
gpoöãr
 
d©a
);

145 
	`gtk_ic⁄_võw_£t_£À˘i⁄_mode
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

146 
GtkSñe˘i⁄Mode
 
mode
);

147 
GtkSñe˘i⁄Mode
 
	`gtk_ic⁄_võw_gë_£À˘i⁄_mode
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

148 
	`gtk_ic⁄_võw_£À˘_∑th
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

149 
GtkTªeP©h
 *
∑th
);

150 
	`gtk_ic⁄_võw_un£À˘_∑th
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

151 
GtkTªeP©h
 *
∑th
);

152 
gboﬁón
 
	`gtk_ic⁄_võw_∑th_is_£À˘ed
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

153 
GtkTªeP©h
 *
∑th
);

154 
GLi°
 *
	`gtk_ic⁄_võw_gë_£À˘ed_ôems
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

155 
	`gtk_ic⁄_võw_£À˘_Æl
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

156 
	`gtk_ic⁄_võw_un£À˘_Æl
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

157 
	`gtk_ic⁄_võw_ôem_a˘iv©ed
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

158 
GtkTªeP©h
 *
∑th
);

159 
	`gtk_ic⁄_võw_£t_curs‹
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

160 
GtkTªeP©h
 *
∑th
,

161 
GtkCñlRídîî
 *
˚Œ
,

162 
gboﬁón
 
°¨t_edôög
);

163 
gboﬁón
 
	`gtk_ic⁄_võw_gë_curs‹
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

164 
GtkTªeP©h
 **
∑th
,

165 
GtkCñlRídîî
 **
˚Œ
);

166 
	`gtk_ic⁄_võw_s¸ﬁl_to_∑th
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

167 
GtkTªeP©h
 *
∑th
,

168 
gboﬁón
 
u£_Æign
,

169 
gÊﬂt
 
row_Æign
,

170 
gÊﬂt
 
cﬁ_Æign
);

173 
	`gtk_ic⁄_võw_íabÀ_modñ_døg_sour˚
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

174 
GdkModifõrTy≥
 
°¨t_buâ⁄_mask
,

175 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

176 
göt
 
n_èrgës
,

177 
GdkDøgA˘i⁄
 
a˘i⁄s
);

178 
	`gtk_ic⁄_võw_íabÀ_modñ_døg_de°
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

179 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

180 
göt
 
n_èrgës
,

181 
GdkDøgA˘i⁄
 
a˘i⁄s
);

182 
	`gtk_ic⁄_võw_un£t_modñ_døg_sour˚
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

183 
	`gtk_ic⁄_võw_un£t_modñ_døg_de°
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

184 
	`gtk_ic⁄_võw_£t_ª‹dîabÀ
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

185 
gboﬁón
 
ª‹dîabÀ
);

186 
gboﬁón
 
	`gtk_ic⁄_võw_gë_ª‹dîabÀ
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

190 
	`gtk_ic⁄_võw_£t_døg_de°_ôem
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

191 
GtkTªeP©h
 *
∑th
,

192 
GtkIc⁄VõwDr›Posôi⁄
 
pos
);

193 
	`gtk_ic⁄_võw_gë_døg_de°_ôem
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

194 
GtkTªeP©h
 **
∑th
,

195 
GtkIc⁄VõwDr›Posôi⁄
 *
pos
);

196 
gboﬁón
 
	`gtk_ic⁄_võw_gë_de°_ôem_©_pos
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

197 
göt
 
døg_x
,

198 
göt
 
døg_y
,

199 
GtkTªeP©h
 **
∑th
,

200 
GtkIc⁄VõwDr›Posôi⁄
 *
pos
);

201 
GdkPixm≠
 *
	`gtk_ic⁄_võw_¸óã_døg_ic⁄
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

202 
GtkTªeP©h
 *
∑th
);

204 
	`gtk_ic⁄_võw_c⁄vît_widgë_to_bö_wödow_co‹ds
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

205 
göt
 
wx
,

206 
göt
 
wy
,

207 
göt
 *
bx
,

208 
göt
 *
by
);

211 
	`gtk_ic⁄_võw_£t_toﬁtù_ôem
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

212 
GtkToﬁtù
 *
toﬁtù
,

213 
GtkTªeP©h
 *
∑th
);

214 
	`gtk_ic⁄_võw_£t_toﬁtù_˚Œ
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

215 
GtkToﬁtù
 *
toﬁtù
,

216 
GtkTªeP©h
 *
∑th
,

217 
GtkCñlRídîî
 *
˚Œ
);

218 
gboﬁón
 
	`gtk_ic⁄_võw_gë_toﬁtù_c⁄ãxt
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

219 
göt
 *
x
,

220 
göt
 *
y
,

221 
gboﬁón
 
keybﬂrd_tù
,

222 
GtkTªeModñ
 **
modñ
,

223 
GtkTªeP©h
 **
∑th
,

224 
GtkTªeIãr
 *
ôî
);

225 
	`gtk_ic⁄_võw_£t_toﬁtù_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
,

226 
göt
 
cﬁumn
);

227 
göt
 
	`gtk_ic⁄_võw_gë_toﬁtù_cﬁumn
 (
GtkIc⁄Võw
 *
ic⁄_võw
);

230 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkimage.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_IMAGE_H__


32 
	#__GTK_IMAGE_H__


	)

35 
	~<gio/gio.h
>

36 
	~<gtk/gtkmisc.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_IMAGE
 (
	`gtk_image_gë_ty≥
 ())

	)

42 
	#GTK_IMAGE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_IMAGE
, 
GtkImage
))

	)

43 
	#GTK_IMAGE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_IMAGE
, 
GtkImageCœss
))

	)

44 
	#GTK_IS_IMAGE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_IMAGE
))

	)

45 
	#GTK_IS_IMAGE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_IMAGE
))

	)

46 
	#GTK_IMAGE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_IMAGE
, 
GtkImageCœss
))

	)

49 
_GtkImage
 
	tGtkImage
;

50 
_GtkImageCœss
 
	tGtkImageCœss
;

52 
_GtkImagePixm≠D©a
 
	tGtkImagePixm≠D©a
;

53 
_GtkImageImageD©a
 
	tGtkImageImageD©a
;

54 
_GtkImagePixbufD©a
 
	tGtkImagePixbufD©a
;

55 
_GtkImageStockD©a
 
	tGtkImageStockD©a
;

56 
_GtkImageIc⁄SëD©a
 
	tGtkImageIc⁄SëD©a
;

57 
_GtkImageAnim©i⁄D©a
 
	tGtkImageAnim©i⁄D©a
;

58 
_GtkImageIc⁄NameD©a
 
	tGtkImageIc⁄NameD©a
;

59 
_GtkImageGIc⁄D©a
 
	tGtkImageGIc⁄D©a
;

61 
	s_GtkImagePixm≠D©a


63 
GdkPixm≠
 *
	mpixm≠
;

66 
	s_GtkImageImageD©a


68 
GdkImage
 *
	mimage
;

71 
	s_GtkImagePixbufD©a


73 
GdkPixbuf
 *
	mpixbuf
;

76 
	s_GtkImageStockD©a


78 
gch¨
 *
	m°ock_id
;

81 
	s_GtkImageIc⁄SëD©a


83 
GtkIc⁄Së
 *
	mic⁄_£t
;

86 
	s_GtkImageAnim©i⁄D©a


88 
GdkPixbufAnim©i⁄
 *
	m™im
;

89 
GdkPixbufAnim©i⁄Iãr
 *
	môî
;

90 
guöt
 
	m‰ame_timeout
;

93 
	s_GtkImageIc⁄NameD©a


95 
gch¨
 *
	mic⁄_«me
;

96 
GdkPixbuf
 *
	mpixbuf
;

97 
guöt
 
	mtheme_ch™ge_id
;

100 
	s_GtkImageGIc⁄D©a


102 
GIc⁄
 *
	mic⁄
;

103 
GdkPixbuf
 *
	mpixbuf
;

104 
guöt
 
	mtheme_ch™ge_id
;

109 
	mGTK_IMAGE_EMPTY
,

110 
	mGTK_IMAGE_PIXMAP
,

111 
	mGTK_IMAGE_IMAGE
,

112 
	mGTK_IMAGE_PIXBUF
,

113 
	mGTK_IMAGE_STOCK
,

114 
	mGTK_IMAGE_ICON_SET
,

115 
	mGTK_IMAGE_ANIMATION
,

116 
	mGTK_IMAGE_ICON_NAME
,

117 
	mGTK_IMAGE_GICON


118 } 
	tGtkImageTy≥
;

120 
	s_GtkImage


122 
GtkMisc
 
	mmisc
;

124 
GtkImageTy≥
 
GSEAL
 (
°‹age_ty≥
);

128 
GtkImagePixm≠D©a
 
	mpixm≠
;

129 
GtkImageImageD©a
 
	mimage
;

130 
GtkImagePixbufD©a
 
	mpixbuf
;

131 
GtkImageStockD©a
 
	m°ock
;

132 
GtkImageIc⁄SëD©a
 
	mic⁄_£t
;

133 
GtkImageAnim©i⁄D©a
 
	m™im
;

134 
GtkImageIc⁄NameD©a
 
	m«me
;

135 
GtkImageGIc⁄D©a
 
	mgic⁄
;

136 } 
GSEAL
 (
d©a
);

139 
GdkBôm≠
 *
GSEAL
 (
mask
);

142 
GtkIc⁄Size
 
GSEAL
 (
ic⁄_size
);

145 
	s_GtkImageCœss


147 
GtkMiscCœss
 
	m∑ª¡_˛ass
;

150 (*
	m_gtk_ª£rved1
) ();

151 (*
	m_gtk_ª£rved2
) ();

152 (*
	m_gtk_ª£rved3
) ();

153 (*
	m_gtk_ª£rved4
) ();

156 #ifde‡
G_OS_WIN32


158 
	#gtk_image_√w_‰om_fûe
 
gtk_image_√w_‰om_fûe_utf8


	)

159 
	#gtk_image_£t_‰om_fûe
 
gtk_image_£t_‰om_fûe_utf8


	)

162 
GTy≥
 
	$gtk_image_gë_ty≥
 (Ë
G_GNUC_CONST
;

164 
GtkWidgë
* 
	`gtk_image_√w
 ();

165 
GtkWidgë
* 
	`gtk_image_√w_‰om_pixm≠
 (
GdkPixm≠
 *
pixm≠
,

166 
GdkBôm≠
 *
mask
);

167 
GtkWidgë
* 
	`gtk_image_√w_‰om_image
 (
GdkImage
 *
image
,

168 
GdkBôm≠
 *
mask
);

169 
GtkWidgë
* 
	`gtk_image_√w_‰om_fûe
 (c⁄° 
gch¨
 *
fûíame
);

170 
GtkWidgë
* 
	`gtk_image_√w_‰om_pixbuf
 (
GdkPixbuf
 *
pixbuf
);

171 
GtkWidgë
* 
	`gtk_image_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
,

172 
GtkIc⁄Size
 
size
);

173 
GtkWidgë
* 
	`gtk_image_√w_‰om_ic⁄_£t
 (
GtkIc⁄Së
 *
ic⁄_£t
,

174 
GtkIc⁄Size
 
size
);

175 
GtkWidgë
* 
	`gtk_image_√w_‰om_™im©i⁄
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

176 
GtkWidgë
* 
	`gtk_image_√w_‰om_ic⁄_«me
 (c⁄° 
gch¨
 *
ic⁄_«me
,

177 
GtkIc⁄Size
 
size
);

178 
GtkWidgë
* 
	`gtk_image_√w_‰om_gic⁄
 (
GIc⁄
 *
ic⁄
,

179 
GtkIc⁄Size
 
size
);

181 
	`gtk_image_˛ór
 (
GtkImage
 *
image
);

182 
	`gtk_image_£t_‰om_pixm≠
 (
GtkImage
 *
image
,

183 
GdkPixm≠
 *
pixm≠
,

184 
GdkBôm≠
 *
mask
);

185 
	`gtk_image_£t_‰om_image
 (
GtkImage
 *
image
,

186 
GdkImage
 *
gdk_image
,

187 
GdkBôm≠
 *
mask
);

188 
	`gtk_image_£t_‰om_fûe
 (
GtkImage
 *
image
,

189 c⁄° 
gch¨
 *
fûíame
);

190 
	`gtk_image_£t_‰om_pixbuf
 (
GtkImage
 *
image
,

191 
GdkPixbuf
 *
pixbuf
);

192 
	`gtk_image_£t_‰om_°ock
 (
GtkImage
 *
image
,

193 c⁄° 
gch¨
 *
°ock_id
,

194 
GtkIc⁄Size
 
size
);

195 
	`gtk_image_£t_‰om_ic⁄_£t
 (
GtkImage
 *
image
,

196 
GtkIc⁄Së
 *
ic⁄_£t
,

197 
GtkIc⁄Size
 
size
);

198 
	`gtk_image_£t_‰om_™im©i⁄
 (
GtkImage
 *
image
,

199 
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

200 
	`gtk_image_£t_‰om_ic⁄_«me
 (
GtkImage
 *
image
,

201 c⁄° 
gch¨
 *
ic⁄_«me
,

202 
GtkIc⁄Size
 
size
);

203 
	`gtk_image_£t_‰om_gic⁄
 (
GtkImage
 *
image
,

204 
GIc⁄
 *
ic⁄
,

205 
GtkIc⁄Size
 
size
);

206 
	`gtk_image_£t_pixñ_size
 (
GtkImage
 *
image
,

207 
göt
 
pixñ_size
);

209 
GtkImageTy≥
 
	`gtk_image_gë_°‹age_ty≥
 (
GtkImage
 *
image
);

211 
	`gtk_image_gë_pixm≠
 (
GtkImage
 *
image
,

212 
GdkPixm≠
 **
pixm≠
,

213 
GdkBôm≠
 **
mask
);

214 
	`gtk_image_gë_image
 (
GtkImage
 *
image
,

215 
GdkImage
 **
gdk_image
,

216 
GdkBôm≠
 **
mask
);

217 
GdkPixbuf
* 
	`gtk_image_gë_pixbuf
 (
GtkImage
 *
image
);

218 
	`gtk_image_gë_°ock
 (
GtkImage
 *
image
,

219 
gch¨
 **
°ock_id
,

220 
GtkIc⁄Size
 *
size
);

221 
	`gtk_image_gë_ic⁄_£t
 (
GtkImage
 *
image
,

222 
GtkIc⁄Së
 **
ic⁄_£t
,

223 
GtkIc⁄Size
 *
size
);

224 
GdkPixbufAnim©i⁄
* 
	`gtk_image_gë_™im©i⁄
 (
GtkImage
 *
image
);

225 
	`gtk_image_gë_ic⁄_«me
 (
GtkImage
 *
image
,

226 
G_CONST_RETURN
 
gch¨
 **
ic⁄_«me
,

227 
GtkIc⁄Size
 *
size
);

228 
	`gtk_image_gë_gic⁄
 (
GtkImage
 *
image
,

229 
GIc⁄
 **
gic⁄
,

230 
GtkIc⁄Size
 *
size
);

231 
göt
 
	`gtk_image_gë_pixñ_size
 (
GtkImage
 *
image
);

233 #i‚de‡
GTK_DISABLE_DEPRECATED


236 
	`gtk_image_£t
 (
GtkImage
 *
image
,

237 
GdkImage
 *
vÆ
,

238 
GdkBôm≠
 *
mask
);

239 
	`gtk_image_gë
 (
GtkImage
 *
image
,

240 
GdkImage
 **
vÆ
,

241 
GdkBôm≠
 **
mask
);

244 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkimagemenuitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_IMAGE_MENU_ITEM_H__


32 
	#__GTK_IMAGE_MENU_ITEM_H__


	)

35 
	~<gtk/gtkmíuôem.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_IMAGE_MENU_ITEM
 (
	`gtk_image_míu_ôem_gë_ty≥
 ())

	)

41 
	#GTK_IMAGE_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_IMAGE_MENU_ITEM
, 
GtkImageMíuIãm
))

	)

42 
	#GTK_IMAGE_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_IMAGE_MENU_ITEM
, 
GtkImageMíuIãmCœss
))

	)

43 
	#GTK_IS_IMAGE_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_IMAGE_MENU_ITEM
))

	)

44 
	#GTK_IS_IMAGE_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_IMAGE_MENU_ITEM
))

	)

45 
	#GTK_IMAGE_MENU_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_IMAGE_MENU_ITEM
, 
GtkImageMíuIãmCœss
))

	)

48 
_GtkImageMíuIãm
 
	tGtkImageMíuIãm
;

49 
_GtkImageMíuIãmCœss
 
	tGtkImageMíuIãmCœss
;

51 
	s_GtkImageMíuIãm


53 
GtkMíuIãm
 
	mmíu_ôem
;

56 
GtkWidgë
 *
GSEAL
 (
image
);

60 
	s_GtkImageMíuIãmCœss


62 
GtkMíuIãmCœss
 
	m∑ª¡_˛ass
;

66 
GTy≥
 
	$gtk_image_míu_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

67 
GtkWidgë
* 
	`gtk_image_míu_ôem_√w
 ();

68 
GtkWidgë
* 
	`gtk_image_míu_ôem_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

69 
GtkWidgë
* 
	`gtk_image_míu_ôem_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

70 
GtkWidgë
* 
	`gtk_image_míu_ôem_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
,

71 
GtkAc˚lGroup
 *
ac˚l_group
);

72 
	`gtk_image_míu_ôem_£t_Æways_show_image
 (
GtkImageMíuIãm
 *
image_míu_ôem
,

73 
gboﬁón
 
Æways_show
);

74 
gboﬁón
 
	`gtk_image_míu_ôem_gë_Æways_show_image
 (
GtkImageMíuIãm
 *
image_míu_ôem
);

75 
	`gtk_image_míu_ôem_£t_image
 (
GtkImageMíuIãm
 *
image_míu_ôem
,

76 
GtkWidgë
 *
image
);

77 
GtkWidgë
* 
	`gtk_image_míu_ôem_gë_image
 (
GtkImageMíuIãm
 *
image_míu_ôem
);

78 
	`gtk_image_míu_ôem_£t_u£_°ock
 (
GtkImageMíuIãm
 *
image_míu_ôem
,

79 
gboﬁón
 
u£_°ock
);

80 
gboﬁón
 
	`gtk_image_míu_ôem_gë_u£_°ock
 (
GtkImageMíuIãm
 *
image_míu_ôem
);

81 
	`gtk_image_míu_ôem_£t_ac˚l_group
 (
GtkImageMíuIãm
 *
image_míu_ôem
,

82 
GtkAc˚lGroup
 *
ac˚l_group
);

84 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkimcontext.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_IM_CONTEXT_H__


25 
	#__GTK_IM_CONTEXT_H__


	)

28 
	~<gdk/gdk.h
>

29 
	~<gtk/gtkobje˘.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_IM_CONTEXT
 (
	`gtk_im_c⁄ãxt_gë_ty≥
 ())

	)

35 
	#GTK_IM_CONTEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_IM_CONTEXT
, 
GtkIMC⁄ãxt
))

	)

36 
	#GTK_IM_CONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_IM_CONTEXT
, 
GtkIMC⁄ãxtCœss
))

	)

37 
	#GTK_IS_IM_CONTEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_IM_CONTEXT
))

	)

38 
	#GTK_IS_IM_CONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_IM_CONTEXT
))

	)

39 
	#GTK_IM_CONTEXT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_IM_CONTEXT
, 
GtkIMC⁄ãxtCœss
))

	)

42 
_GtkIMC⁄ãxt
 
	tGtkIMC⁄ãxt
;

43 
_GtkIMC⁄ãxtCœss
 
	tGtkIMC⁄ãxtCœss
;

45 
	s_GtkIMC⁄ãxt


47 
GObje˘
 
	m∑ª¡_ö°™˚
;

50 
	s_GtkIMC⁄ãxtCœss


56 
GtkObje˘Cœss
 
	m∑ª¡_˛ass
;

60 (*
	m¥ìdô_°¨t
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

61 (*
	m¥ìdô_íd
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

62 (*
	m¥ìdô_ch™ged
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

63 (*
	mcommô
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
, c⁄° 
gch¨
 *
	m°r
);

64 
gboﬁón
 (*
ªåõve_suºoundög
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

65 
gboﬁón
 (*
dñëe_suºoundög
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

66 
göt
 
	moff£t
,

67 
göt
 
	mn_ch¨s
);

70 (*
	m£t_˛õ¡_wödow
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

71 
GdkWödow
 *
	mwödow
);

72 (*
	mgë_¥ìdô_°rög
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

73 
gch¨
 **
	m°r
,

74 
P™goAârLi°
 **
	m©ås
,

75 
göt
 *
	mcurs‹_pos
);

76 
gboﬁón
 (*
fûãr_key¥ess
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

77 
GdkEvítKey
 *
	mevít
);

78 (*
	mfocus_ö
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

79 (*
	mfocus_out
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

80 (*
	mª£t
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
);

81 (*
	m£t_curs‹_loˇti⁄
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

82 
GdkRe˘™gÀ
 *
	m¨ó
);

83 (*
	m£t_u£_¥ìdô
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

84 
gboﬁón
 
	mu£_¥ìdô
);

85 (*
	m£t_suºoundög
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

86 c⁄° 
gch¨
 *
	mãxt
,

87 
göt
 
	mÀn
,

88 
göt
 
	mcurs‹_ödex
);

89 
gboﬁón
 (*
gë_suºoundög
Ë(
GtkIMC⁄ãxt
 *
	mc⁄ãxt
,

90 
gch¨
 **
	mãxt
,

91 
göt
 *
	mcurs‹_ödex
);

94 (*
	m_gtk_ª£rved1
) ();

95 (*
	m_gtk_ª£rved2
) ();

96 (*
	m_gtk_ª£rved3
) ();

97 (*
	m_gtk_ª£rved4
) ();

98 (*
	m_gtk_ª£rved5
) ();

99 (*
	m_gtk_ª£rved6
) ();

102 
GTy≥
 
	$gtk_im_c⁄ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

104 
	`gtk_im_c⁄ãxt_£t_˛õ¡_wödow
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

105 
GdkWödow
 *
wödow
);

106 
	`gtk_im_c⁄ãxt_gë_¥ìdô_°rög
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

107 
gch¨
 **
°r
,

108 
P™goAârLi°
 **
©ås
,

109 
göt
 *
curs‹_pos
);

110 
gboﬁón
 
	`gtk_im_c⁄ãxt_fûãr_key¥ess
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

111 
GdkEvítKey
 *
evít
);

112 
	`gtk_im_c⁄ãxt_focus_ö
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
);

113 
	`gtk_im_c⁄ãxt_focus_out
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
);

114 
	`gtk_im_c⁄ãxt_ª£t
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
);

115 
	`gtk_im_c⁄ãxt_£t_curs‹_loˇti⁄
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

116 c⁄° 
GdkRe˘™gÀ
 *
¨ó
);

117 
	`gtk_im_c⁄ãxt_£t_u£_¥ìdô
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

118 
gboﬁón
 
u£_¥ìdô
);

119 
	`gtk_im_c⁄ãxt_£t_suºoundög
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

120 c⁄° 
gch¨
 *
ãxt
,

121 
göt
 
Àn
,

122 
göt
 
curs‹_ödex
);

123 
gboﬁón
 
	`gtk_im_c⁄ãxt_gë_suºoundög
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

124 
gch¨
 **
ãxt
,

125 
göt
 *
curs‹_ödex
);

126 
gboﬁón
 
	`gtk_im_c⁄ãxt_dñëe_suºoundög
 (
GtkIMC⁄ãxt
 *
c⁄ãxt
,

127 
göt
 
off£t
,

128 
göt
 
n_ch¨s
);

130 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkimcontextsimple.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_IM_CONTEXT_SIMPLE_H__


25 
	#__GTK_IM_CONTEXT_SIMPLE_H__


	)

27 
	~<gtk/gtkimc⁄ãxt.h
>

30 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_IM_CONTEXT_SIMPLE
 (
	`gtk_im_c⁄ãxt_sim∂e_gë_ty≥
 ())

	)

34 
	#GTK_IM_CONTEXT_SIMPLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_IM_CONTEXT_SIMPLE
, 
GtkIMC⁄ãxtSim∂e
))

	)

35 
	#GTK_IM_CONTEXT_SIMPLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_IM_CONTEXT_SIMPLE
, 
GtkIMC⁄ãxtSim∂eCœss
))

	)

36 
	#GTK_IS_IM_CONTEXT_SIMPLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_IM_CONTEXT_SIMPLE
))

	)

37 
	#GTK_IS_IM_CONTEXT_SIMPLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_IM_CONTEXT_SIMPLE
))

	)

38 
	#GTK_IM_CONTEXT_SIMPLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_IM_CONTEXT_SIMPLE
, 
GtkIMC⁄ãxtSim∂eCœss
))

	)

41 
_GtkIMC⁄ãxtSim∂e
 
	tGtkIMC⁄ãxtSim∂e
;

42 
_GtkIMC⁄ãxtSim∂eCœss
 
	tGtkIMC⁄ãxtSim∂eCœss
;

44 
	#GTK_MAX_COMPOSE_LEN
 7

	)

46 
	s_GtkIMC⁄ãxtSim∂e


48 
GtkIMC⁄ãxt
 
	mobje˘
;

50 
GSLi°
 *
GSEAL
 (
èbÀs
);

52 
guöt
 
GSEAL
 (
compo£_buf„r
[
GTK_MAX_COMPOSE_LEN
 + 1]);

53 
gunich¨
 
GSEAL
 (
ã¡©ive_m©ch
);

54 
göt
 
GSEAL
 (
ã¡©ive_m©ch_Àn
);

56 
guöt
 
GSEAL
 (
ö_hex_£quí˚
) : 1;

57 
guöt
 
GSEAL
 (
modifõrs_dr›≥d
) : 1;

60 
	s_GtkIMC⁄ãxtSim∂eCœss


62 
GtkIMC⁄ãxtCœss
 
	m∑ª¡_˛ass
;

65 
GTy≥
 
	$gtk_im_c⁄ãxt_sim∂e_gë_ty≥
 (Ë
G_GNUC_CONST
;

66 
GtkIMC⁄ãxt
 *
	`gtk_im_c⁄ãxt_sim∂e_√w
 ();

68 
	`gtk_im_c⁄ãxt_sim∂e_add_èbÀ
 (
GtkIMC⁄ãxtSim∂e
 *
c⁄ãxt_sim∂e
,

69 
guöt16
 *
d©a
,

70 
göt
 
max_£q_Àn
,

71 
göt
 
n_£qs
);

74 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkimmulticontext.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_IM_MULTICONTEXT_H__


25 
	#__GTK_IM_MULTICONTEXT_H__


	)

27 
	~<gtk/gtkimc⁄ãxt.h
>

28 
	~<gtk/gtkmíushñl.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_IM_MULTICONTEXT
 (
	`gtk_im_mu…ic⁄ãxt_gë_ty≥
 ())

	)

33 
	#GTK_IM_MULTICONTEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_IM_MULTICONTEXT
, 
GtkIMMu…ic⁄ãxt
))

	)

34 
	#GTK_IM_MULTICONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_IM_MULTICONTEXT
, 
GtkIMMu…ic⁄ãxtCœss
))

	)

35 
	#GTK_IS_IM_MULTICONTEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_IM_MULTICONTEXT
))

	)

36 
	#GTK_IS_IM_MULTICONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_IM_MULTICONTEXT
))

	)

37 
	#GTK_IM_MULTICONTEXT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_IM_MULTICONTEXT
, 
GtkIMMu…ic⁄ãxtCœss
))

	)

40 
_GtkIMMu…ic⁄ãxt
 
	tGtkIMMu…ic⁄ãxt
;

41 
_GtkIMMu…ic⁄ãxtCœss
 
	tGtkIMMu…ic⁄ãxtCœss
;

42 
_GtkIMMu…ic⁄ãxtPriv©e
 
	tGtkIMMu…ic⁄ãxtPriv©e
;

44 
	s_GtkIMMu…ic⁄ãxt


46 
GtkIMC⁄ãxt
 
	mobje˘
;

48 
GtkIMC⁄ãxt
 *
GSEAL
 (
¶ave
);

50 
GtkIMMu…ic⁄ãxtPriv©e
 *
GSEAL
 (
¥iv
);

52 
gch¨
 *
GSEAL
 (
c⁄ãxt_id
);

55 
	s_GtkIMMu…ic⁄ãxtCœss


57 
GtkIMC⁄ãxtCœss
 
	m∑ª¡_˛ass
;

60 (*
	m_gtk_ª£rved1
) ();

61 (*
	m_gtk_ª£rved2
) ();

62 (*
	m_gtk_ª£rved3
) ();

63 (*
	m_gtk_ª£rved4
) ();

66 
GTy≥
 
	$gtk_im_mu…ic⁄ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

67 
GtkIMC⁄ãxt
 *
	`gtk_im_mu…ic⁄ãxt_√w
 ();

69 
	`gtk_im_mu…ic⁄ãxt_≠≥nd_míuôems
 (
GtkIMMu…ic⁄ãxt
 *
c⁄ãxt
,

70 
GtkMíuShñl
 *
míushñl
);

71 c⁄° * 
	`gtk_im_mu…ic⁄ãxt_gë_c⁄ãxt_id
 (
GtkIMMu…ic⁄ãxt
 *
c⁄ãxt
);

73 
	`gtk_im_mu…ic⁄ãxt_£t_c⁄ãxt_id
 (
GtkIMMu…ic⁄ãxt
 *
c⁄ãxt
,

74 c⁄° *
c⁄ãxt_id
);

76 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkinputdialog.h

37 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

41 #i‚de‡
__GTK_INPUTDIALOG_H__


42 
	#__GTK_INPUTDIALOG_H__


	)

45 
	~<gtk/gtkdülog.h
>

48 
	gG_BEGIN_DECLS


50 
	#GTK_TYPE_INPUT_DIALOG
 (
	`gtk_öput_dülog_gë_ty≥
 ())

	)

51 
	#GTK_INPUT_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_INPUT_DIALOG
, 
GtkI≈utDülog
))

	)

52 
	#GTK_INPUT_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_INPUT_DIALOG
, 
GtkI≈utDülogCœss
))

	)

53 
	#GTK_IS_INPUT_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_INPUT_DIALOG
))

	)

54 
	#GTK_IS_INPUT_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_INPUT_DIALOG
))

	)

55 
	#GTK_INPUT_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_INPUT_DIALOG
, 
GtkI≈utDülogCœss
))

	)

58 
_GtkI≈utDülog
 
	tGtkI≈utDülog
;

59 
_GtkI≈utDülogCœss
 
	tGtkI≈utDülogCœss
;

61 
	s_GtkI≈utDülog


63 
GtkDülog
 
	mdülog
;

65 
GtkWidgë
 *
GSEAL
 (
axis_li°
);

66 
GtkWidgë
 *
GSEAL
 (
axis_li°box
);

67 
GtkWidgë
 *
GSEAL
 (
mode_›ti⁄míu
);

69 
GtkWidgë
 *
GSEAL
 (
˛o£_buâ⁄
);

70 
GtkWidgë
 *
GSEAL
 (
ßve_buâ⁄
);

72 
GtkWidgë
 *
GSEAL
 (
axis_ôems
[
GDK_AXIS_LAST
]);

73 
GdkDevi˚
 *
GSEAL
 (
cuºít_devi˚
);

75 
GtkWidgë
 *
GSEAL
 (
keys_li°
);

76 
GtkWidgë
 *
GSEAL
 (
keys_li°box
);

79 
	s_GtkI≈utDülogCœss


81 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

83 (* 
	míabÀ_devi˚
Ë(
GtkI≈utDülog
 *
	möputd
,

84 
GdkDevi˚
 *
	mdevi˚
);

85 (* 
	mdißbÀ_devi˚
Ë(
GtkI≈utDülog
 *
	möputd
,

86 
GdkDevi˚
 *
	mdevi˚
);

89 (*
	m_gtk_ª£rved1
) ();

90 (*
	m_gtk_ª£rved2
) ();

91 (*
	m_gtk_ª£rved3
) ();

92 (*
	m_gtk_ª£rved4
) ();

96 
GTy≥
 
	$gtk_öput_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

97 
GtkWidgë
* 
	`gtk_öput_dülog_√w
 ();

100 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkinvisible.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_INVISIBLE_H__


32 
	#__GTK_INVISIBLE_H__


	)

34 
	~<gtk/gtkwidgë.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_INVISIBLE
 (
	`gtk_övisibÀ_gë_ty≥
 ())

	)

39 
	#GTK_INVISIBLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_INVISIBLE
, 
GtkInvisibÀ
))

	)

40 
	#GTK_INVISIBLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_INVISIBLE
, 
GtkInvisibÀCœss
))

	)

41 
	#GTK_IS_INVISIBLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_INVISIBLE
))

	)

42 
	#GTK_IS_INVISIBLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_INVISIBLE
))

	)

43 
	#GTK_INVISIBLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_INVISIBLE
, 
GtkInvisibÀCœss
))

	)

46 
_GtkInvisibÀ
 
	tGtkInvisibÀ
;

47 
_GtkInvisibÀCœss
 
	tGtkInvisibÀCœss
;

49 
	s_GtkInvisibÀ


51 
GtkWidgë
 
	mwidgë
;

53 
gboﬁón
 
GSEAL
 (
has_u£r_ªf_cou¡
);

54 
GdkS¸ìn
 *
GSEAL
 (
s¸ìn
);

57 
	s_GtkInvisibÀCœss


59 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

62 (*
	m_gtk_ª£rved1
) ();

63 (*
	m_gtk_ª£rved2
) ();

64 (*
	m_gtk_ª£rved3
) ();

65 (*
	m_gtk_ª£rved4
) ();

68 
GTy≥
 
	$gtk_övisibÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkWidgë
* 
	`gtk_övisibÀ_√w
 ();

71 
GtkWidgë
* 
	`gtk_övisibÀ_√w_f‹_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
);

72 
	`gtk_övisibÀ_£t_s¸ìn
 (
GtkInvisibÀ
 *
övisibÀ
,

73 
GdkS¸ìn
 *
s¸ìn
);

74 
GdkS¸ìn
* 
	`gtk_övisibÀ_gë_s¸ìn
 (
GtkInvisibÀ
 *
övisibÀ
);

76 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_ITEM_H__


32 
	#__GTK_ITEM_H__


	)

35 
	~<gtk/gtkbö.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_ITEM
 (
	`gtk_ôem_gë_ty≥
 ())

	)

41 
	#GTK_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ITEM
, 
GtkIãm
))

	)

42 
	#GTK_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ITEM
, 
GtkIãmCœss
))

	)

43 
	#GTK_IS_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ITEM
))

	)

44 
	#GTK_IS_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ITEM
))

	)

45 
	#GTK_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ITEM
, 
GtkIãmCœss
))

	)

48 
_GtkIãm
 
	tGtkIãm
;

49 
_GtkIãmCœss
 
	tGtkIãmCœss
;

51 
	s_GtkIãm


53 
GtkBö
 
	mbö
;

56 
	s_GtkIãmCœss


58 
GtkBöCœss
 
	m∑ª¡_˛ass
;

60 (* 
	m£À˘
Ë(
GtkIãm
 *
	môem
);

61 (* 
	mde£À˘
Ë(
GtkIãm
 *
	môem
);

62 (* 
	mtoggÀ
Ë(
GtkIãm
 *
	môem
);

65 (*
	m_gtk_ª£rved1
) ();

66 (*
	m_gtk_ª£rved2
) ();

67 (*
	m_gtk_ª£rved3
) ();

68 (*
	m_gtk_ª£rved4
) ();

72 
GTy≥
 
	$gtk_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

73 
	`gtk_ôem_£À˘
 (
GtkIãm
 *
ôem
);

74 
	`gtk_ôem_de£À˘
 (
GtkIãm
 *
ôem
);

75 
	`gtk_ôem_toggÀ
 (
GtkIãm
 *
ôem
);

77 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkitemfactory.h

30 #i‚de‡
GTK_DISABLE_DEPRECATED


32 #i‚de‡
__GTK_ITEM_FACTORY_H__


33 
	#__GTK_ITEM_FACTORY_H__


	)

35 
	~<gtk/gtk.h
>

38 
G_BEGIN_DECLS


40 (*
	tGtkPrötFunc
Ë(
	tgpoöãr
 
	tfunc_d©a
,

41 c⁄° 
	tgch¨
 *
	t°r
);

47 (*
	tGtkIãmFa˘‹yCÆlback
) ();

48 (*
	tGtkIãmFa˘‹yCÆlback1
Ë(
	tgpoöãr
 
	tˇŒback_d©a
,

49 
	tguöt
 
	tˇŒback_a˘i⁄
,

50 
	tGtkWidgë
 *
	twidgë
);

52 
	#GTK_TYPE_ITEM_FACTORY
 (
	`gtk_ôem_Á˘‹y_gë_ty≥
 ())

	)

53 
	#GTK_ITEM_FACTORY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_ITEM_FACTORY
, 
GtkIãmFa˘‹y
))

	)

54 
	#GTK_ITEM_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_ITEM_FACTORY
, 
GtkIãmFa˘‹yCœss
))

	)

55 
	#GTK_IS_ITEM_FACTORY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_ITEM_FACTORY
))

	)

56 
	#GTK_IS_ITEM_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_ITEM_FACTORY
))

	)

57 
	#GTK_ITEM_FACTORY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_ITEM_FACTORY
, 
GtkIãmFa˘‹yCœss
))

	)

60 
_GtkIãmFa˘‹y
 
	tGtkIãmFa˘‹y
;

61 
_GtkIãmFa˘‹yCœss
 
	tGtkIãmFa˘‹yCœss
;

62 
_GtkIãmFa˘‹yE¡ry
 
	tGtkIãmFa˘‹yE¡ry
;

63 
_GtkIãmFa˘‹yIãm
 
	tGtkIãmFa˘‹yIãm
;

65 
	s_GtkIãmFa˘‹y


67 
GtkObje˘
 
obje˘
;

69 
gch¨
 *
∑th
;

70 
GtkAc˚lGroup
 *
ac˚l_group
;

71 
GtkWidgë
 *
widgë
;

72 
GSLi°
 *
ôems
;

74 
GtkTøn¶©eFunc
 
å™¶©e_func
;

75 
gpoöãr
 
å™¶©e_d©a
;

76 
GDe°royNŸify
 
å™¶©e_nŸify
;

79 
	s_GtkIãmFa˘‹yCœss


81 
GtkObje˘Cœss
 
obje˘_˛ass
;

83 
GHashTabÀ
 *
ôem_ht
;

86 (*
_gtk_ª£rved1
) ();

87 (*
_gtk_ª£rved2
) ();

88 (*
_gtk_ª£rved3
) ();

89 (*
_gtk_ª£rved4
) ();

92 
	s_GtkIãmFa˘‹yE¡ry


94 
gch¨
 *
∑th
;

95 
gch¨
 *
ac˚Àøt‹
;

97 
GtkIãmFa˘‹yCÆlback
 
ˇŒback
;

98 
guöt
 
ˇŒback_a˘i⁄
;

116 
gch¨
 *
ôem_ty≥
;

122 
gc⁄°poöãr
 
exåa_d©a
;

125 
	s_GtkIãmFa˘‹yIãm


127 
gch¨
 *
∑th
;

128 
GSLi°
 *
widgës
;

132 
GTy≥
 
	$gtk_ôem_Á˘‹y_gë_ty≥
 (Ë
G_GNUC_CONST
;

137 
GtkIãmFa˘‹y
* 
	`gtk_ôem_Á˘‹y_√w
 (
GTy≥
 
c⁄èöî_ty≥
,

138 c⁄° 
gch¨
 *
∑th
,

139 
GtkAc˚lGroup
 *
ac˚l_group
);

140 
	`gtk_ôem_Á˘‹y_c⁄°ru˘
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

141 
GTy≥
 
c⁄èöî_ty≥
,

142 c⁄° 
gch¨
 *
∑th
,

143 
GtkAc˚lGroup
 *
ac˚l_group
);

147 
	`gtk_ôem_Á˘‹y_add_f‹eign
 (
GtkWidgë
 *
ac˚l_widgë
,

148 c⁄° 
gch¨
 *
fuŒ_∑th
,

149 
GtkAc˚lGroup
 *
ac˚l_group
,

150 
guöt
 
keyvÆ
,

151 
GdkModifõrTy≥
 
modifõrs
);

153 
GtkIãmFa˘‹y
* 
	`gtk_ôem_Á˘‹y_‰om_widgë
 (
GtkWidgë
 *
widgë
);

154 
G_CONST_RETURN
 
gch¨
* 
	`gtk_ôem_Á˘‹y_∑th_‰om_widgë
 (
GtkWidgë
 *
widgë
);

156 
GtkWidgë
* 
	`gtk_ôem_Á˘‹y_gë_ôem
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

157 c⁄° 
gch¨
 *
∑th
);

158 
GtkWidgë
* 
	`gtk_ôem_Á˘‹y_gë_widgë
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

159 c⁄° 
gch¨
 *
∑th
);

160 
GtkWidgë
* 
	`gtk_ôem_Á˘‹y_gë_widgë_by_a˘i⁄
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

161 
guöt
 
a˘i⁄
);

162 
GtkWidgë
* 
	`gtk_ôem_Á˘‹y_gë_ôem_by_a˘i⁄
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

163 
guöt
 
a˘i⁄
);

165 
	`gtk_ôem_Á˘‹y_¸óã_ôem
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

166 
GtkIãmFa˘‹yE¡ry
 *
íåy
,

167 
gpoöãr
 
ˇŒback_d©a
,

168 
guöt
 
ˇŒback_ty≥
);

169 
	`gtk_ôem_Á˘‹y_¸óã_ôems
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

170 
guöt
 
n_íåõs
,

171 
GtkIãmFa˘‹yE¡ry
 *
íåõs
,

172 
gpoöãr
 
ˇŒback_d©a
);

173 
	`gtk_ôem_Á˘‹y_dñëe_ôem
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

174 c⁄° 
gch¨
 *
∑th
);

175 
	`gtk_ôem_Á˘‹y_dñëe_íåy
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

176 
GtkIãmFa˘‹yE¡ry
 *
íåy
);

177 
	`gtk_ôem_Á˘‹y_dñëe_íåõs
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

178 
guöt
 
n_íåõs
,

179 
GtkIãmFa˘‹yE¡ry
 *
íåõs
);

180 
	`gtk_ôem_Á˘‹y_p›up
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

181 
guöt
 
x
,

182 
guöt
 
y
,

183 
guöt
 
mou£_buâ⁄
,

184 
guöt32
 
time_
);

185 
	`gtk_ôem_Á˘‹y_p›up_wôh_d©a
(
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

186 
gpoöãr
 
p›up_d©a
,

187 
GDe°royNŸify
 
de°roy
,

188 
guöt
 
x
,

189 
guöt
 
y
,

190 
guöt
 
mou£_buâ⁄
,

191 
guöt32
 
time_
);

192 
gpoöãr
 
	`gtk_ôem_Á˘‹y_p›up_d©a
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
);

193 
gpoöãr
 
	`gtk_ôem_Á˘‹y_p›up_d©a_‰om_widgë
 (
GtkWidgë
 *
widgë
);

194 
	`gtk_ôem_Á˘‹y_£t_å™¶©e_func
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

195 
GtkTøn¶©eFunc
 
func
,

196 
gpoöãr
 
d©a
,

197 
GDe°royNŸify
 
nŸify
);

203 (*
	tGtkMíuCÆlback
Ë(
	tGtkWidgë
 *
	twidgë
,

204 
	tgpoöãr
 
	tu£r_d©a
);

206 
gch¨
 *
∑th
;

207 
gch¨
 *
ac˚Àøt‹
;

208 
GtkMíuCÆlback
 
ˇŒback
;

209 
gpoöãr
 
ˇŒback_d©a
;

210 
GtkWidgë
 *
widgë
;

211 } 
	tGtkMíuE¡ry
;

214 (*
	tGtkIãmFa˘‹yCÆlback2
Ë(
	tGtkWidgë
 *
	twidgë
,

215 
	tgpoöãr
 
	tˇŒback_d©a
,

216 
	tguöt
 
	tˇŒback_a˘i⁄
);

219 
	`gtk_ôem_Á˘‹y_¸óã_ôems_ac
 (
GtkIãmFa˘‹y
 *
iÁ˘‹y
,

220 
guöt
 
n_íåõs
,

221 
GtkIãmFa˘‹yE¡ry
 *
íåõs
,

222 
gpoöãr
 
ˇŒback_d©a
,

223 
guöt
 
ˇŒback_ty≥
);

225 
GtkIãmFa˘‹y
* 
	`gtk_ôem_Á˘‹y_‰om_∑th
 (c⁄° 
gch¨
 *
∑th
);

226 
	`gtk_ôem_Á˘‹y_¸óã_míu_íåõs
 (
guöt
 
n_íåõs
,

227 
GtkMíuE¡ry
 *
íåõs
);

228 
	`gtk_ôem_Á˘‹õs_∑th_dñëe
 (c⁄° 
gch¨
 *
iÁ˘‹y_∑th
,

229 c⁄° 
gch¨
 *
∑th
);

231 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtklayout.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_LAYOUT_H__


36 
	#__GTK_LAYOUT_H__


	)

39 
	~<gtk/gtkc⁄èöî.h
>

40 
	~<gtk/gtkadju°mít.h
>

43 
	gG_BEGIN_DECLS


45 
	#GTK_TYPE_LAYOUT
 (
	`gtk_œyout_gë_ty≥
 ())

	)

46 
	#GTK_LAYOUT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_LAYOUT
, 
GtkLayout
))

	)

47 
	#GTK_LAYOUT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_LAYOUT
, 
GtkLayoutCœss
))

	)

48 
	#GTK_IS_LAYOUT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_LAYOUT
))

	)

49 
	#GTK_IS_LAYOUT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_LAYOUT
))

	)

50 
	#GTK_LAYOUT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_LAYOUT
, 
GtkLayoutCœss
))

	)

53 
_GtkLayout
 
	tGtkLayout
;

54 
_GtkLayoutCœss
 
	tGtkLayoutCœss
;

56 
	s_GtkLayout


58 
GtkC⁄èöî
 
GSEAL
 (
c⁄èöî
);

60 
GLi°
 *
GSEAL
 (
chûdªn
);

62 
guöt
 
GSEAL
 (
width
);

63 
guöt
 
GSEAL
 (
height
);

65 
GtkAdju°mít
 *
GSEAL
 (
hadju°mít
);

66 
GtkAdju°mít
 *
GSEAL
 (
vadju°mít
);

69 
GdkWödow
 *
GSEAL
 (
bö_wödow
);

72 
GdkVisibûôySèã
 
GSEAL
 (
visibûôy
);

73 
göt
 
GSEAL
 (
s¸ﬁl_x
);

74 
göt
 
GSEAL
 (
s¸ﬁl_y
);

76 
guöt
 
GSEAL
 (
‰ìze_cou¡
);

79 
	s_GtkLayoutCœss


81 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

83 (*
	m£t_s¸ﬁl_adju°míts
Ë(
GtkLayout
 *
	mœyout
,

84 
GtkAdju°mít
 *
	mhadju°mít
,

85 
GtkAdju°mít
 *
	mvadju°mít
);

88 (*
	m_gtk_ª£rved1
) ();

89 (*
	m_gtk_ª£rved2
) ();

90 (*
	m_gtk_ª£rved3
) ();

91 (*
	m_gtk_ª£rved4
) ();

94 
GTy≥
 
	$gtk_œyout_gë_ty≥
 (Ë
G_GNUC_CONST
;

95 
GtkWidgë
* 
	`gtk_œyout_√w
 (
GtkAdju°mít
 *
hadju°mít
,

96 
GtkAdju°mít
 *
vadju°mít
);

97 
GdkWödow
* 
	`gtk_œyout_gë_bö_wödow
 (
GtkLayout
 *
œyout
);

98 
	`gtk_œyout_put
 (
GtkLayout
 *
œyout
,

99 
GtkWidgë
 *
chûd_widgë
,

100 
göt
 
x
,

101 
göt
 
y
);

103 
	`gtk_œyout_move
 (
GtkLayout
 *
œyout
,

104 
GtkWidgë
 *
chûd_widgë
,

105 
göt
 
x
,

106 
göt
 
y
);

108 
	`gtk_œyout_£t_size
 (
GtkLayout
 *
œyout
,

109 
guöt
 
width
,

110 
guöt
 
height
);

111 
	`gtk_œyout_gë_size
 (
GtkLayout
 *
œyout
,

112 
guöt
 *
width
,

113 
guöt
 *
height
);

115 
GtkAdju°mít
* 
	`gtk_œyout_gë_hadju°mít
 (
GtkLayout
 *
œyout
);

116 
GtkAdju°mít
* 
	`gtk_œyout_gë_vadju°mít
 (
GtkLayout
 *
œyout
);

117 
	`gtk_œyout_£t_hadju°mít
 (
GtkLayout
 *
œyout
,

118 
GtkAdju°mít
 *
adju°mít
);

119 
	`gtk_œyout_£t_vadju°mít
 (
GtkLayout
 *
œyout
,

120 
GtkAdju°mít
 *
adju°mít
);

123 #i‚de‡
GTK_DISABLE_DEPRECATED


132 
	`gtk_œyout_‰ìze
 (
GtkLayout
 *
œyout
);

133 
	`gtk_œyout_thaw
 (
GtkLayout
 *
œyout
);

136 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtklinkbutton.h

25 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

29 #i‚de‡
__GTK_LINK_BUTTON_H__


30 
	#__GTK_LINK_BUTTON_H__


	)

32 
	~<gtk/gtkbuâ⁄.h
>

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_LINK_BUTTON
 (
	`gtk_lök_buâ⁄_gë_ty≥
 ())

	)

37 
	#GTK_LINK_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_LINK_BUTTON
, 
GtkLökBuâ⁄
))

	)

38 
	#GTK_IS_LINK_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_LINK_BUTTON
))

	)

39 
	#GTK_LINK_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_LINK_BUTTON
, 
GtkLökBuâ⁄Cœss
))

	)

40 
	#GTK_IS_LINK_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_LINK_BUTTON
))

	)

41 
	#GTK_LINK_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_LINK_BUTTON
, 
GtkLökBuâ⁄Cœss
))

	)

43 
_GtkLökBuâ⁄
 
	tGtkLökBuâ⁄
;

44 
_GtkLökBuâ⁄Cœss
 
	tGtkLökBuâ⁄Cœss
;

45 
_GtkLökBuâ⁄Priv©e
 
	tGtkLökBuâ⁄Priv©e
;

47 (*
	tGtkLökBuâ⁄UriFunc
Ë(
	tGtkLökBuâ⁄
 *
	tbuâ⁄
,

48 c⁄° 
	tgch¨
 *
	tlök_
,

49 
	tgpoöãr
 
	tu£r_d©a
);

51 
	s_GtkLökBuâ⁄


53 
GtkBuâ⁄
 
∑ª¡_ö°™˚
;

55 
GtkLökBuâ⁄Priv©e
 *
	`GSEAL
 (
¥iv
);

58 
	s_GtkLökBuâ⁄Cœss


60 
GtkBuâ⁄Cœss
 
∑ª¡_˛ass
;

62 (*
_gtk_∑ddög1
) ();

63 (*
_gtk_∑ddög2
) ();

64 (*
_gtk_∑ddög3
) ();

65 (*
_gtk_∑ddög4
) ();

68 
GTy≥
 
	$gtk_lök_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkWidgë
 * 
	`gtk_lök_buâ⁄_√w
 (c⁄° 
gch¨
 *
uri
);

71 
GtkWidgë
 * 
	`gtk_lök_buâ⁄_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
uri
,

72 c⁄° 
gch¨
 *
œbñ
);

74 
G_CONST_RETURN
 
gch¨
 *
	`gtk_lök_buâ⁄_gë_uri
 (
GtkLökBuâ⁄
 *
lök_buâ⁄
);

75 
	`gtk_lök_buâ⁄_£t_uri
 (
GtkLökBuâ⁄
 *
lök_buâ⁄
,

76 c⁄° 
gch¨
 *
uri
);

78 
GtkLökBuâ⁄UriFunc
 
	`gtk_lök_buâ⁄_£t_uri_hook
 (GtkLökBuâ⁄UriFun¯
func
,

79 
gpoöãr
 
d©a
,

80 
GDe°royNŸify
 
de°roy
);

82 
gboﬁón
 
	`gtk_lök_buâ⁄_gë_visôed
 (
GtkLökBuâ⁄
 *
lök_buâ⁄
);

83 
	`gtk_lök_buâ⁄_£t_visôed
 (
GtkLökBuâ⁄
 *
lök_buâ⁄
,

84 
gboﬁón
 
visôed
);

87 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtklist.h

27 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_LIST_C__
)

29 #i‚de‡
__GTK_LIST_H__


30 
	#__GTK_LIST_H__


	)

32 
	~<gtk/gtk.h
>

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_LIST
 (
	`gtk_li°_gë_ty≥
 ())

	)

37 
	#GTK_LIST
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_LIST
, 
GtkLi°
))

	)

38 
	#GTK_LIST_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_LIST
, 
GtkLi°Cœss
))

	)

39 
	#GTK_IS_LIST
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_LIST
))

	)

40 
	#GTK_IS_LIST_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_LIST
))

	)

41 
	#GTK_LIST_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_LIST
, 
GtkLi°Cœss
))

	)

44 
_GtkLi°
 
	tGtkLi°
;

45 
_GtkLi°Cœss
 
	tGtkLi°Cœss
;

47 
	s_GtkLi°


49 
GtkC⁄èöî
 
	mc⁄èöî
;

51 
GLi°
 *
	mchûdªn
;

52 
GLi°
 *
	m£À˘i⁄
;

54 
GLi°
 *
	mundo_£À˘i⁄
;

55 
GLi°
 *
	mundo_un£À˘i⁄
;

57 
GtkWidgë
 *
	mœ°_focus_chûd
;

58 
GtkWidgë
 *
	mundo_focus_chûd
;

60 
guöt
 
	mhtimî
;

61 
guöt
 
	mvtimî
;

63 
göt
 
	m™ch‹
;

64 
göt
 
	mdøg_pos
;

65 
GtkSèãTy≥
 
	m™ch‹_°©e
;

67 
guöt
 
	m£À˘i⁄_mode
 : 2;

68 
guöt
 
	mdøg_£À˘i⁄
:1;

69 
guöt
 
	madd_mode
:1;

72 
	s_GtkLi°Cœss


74 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

76 (* 
	m£À˘i⁄_ch™ged
Ë(
GtkLi°
 *
	mli°
);

77 (* 
	m£À˘_chûd
Ë(
GtkLi°
 *
	mli°
,

78 
GtkWidgë
 *
	mchûd
);

79 (* 
	mun£À˘_chûd
Ë(
GtkLi°
 *
	mli°
,

80 
GtkWidgë
 *
	mchûd
);

84 
GTy≥
 
	$gtk_li°_gë_ty≥
 (Ë
G_GNUC_CONST
;

85 
GtkWidgë
* 
	`gtk_li°_√w
 ();

86 
	`gtk_li°_ö£π_ôems
 (
GtkLi°
 *
li°
,

87 
GLi°
 *
ôems
,

88 
göt
 
posôi⁄
);

89 
	`gtk_li°_≠≥nd_ôems
 (
GtkLi°
 *
li°
,

90 
GLi°
 *
ôems
);

91 
	`gtk_li°_¥ïíd_ôems
 (
GtkLi°
 *
li°
,

92 
GLi°
 *
ôems
);

93 
	`gtk_li°_ªmove_ôems
 (
GtkLi°
 *
li°
,

94 
GLi°
 *
ôems
);

95 
	`gtk_li°_ªmove_ôems_no_uƒef
 (
GtkLi°
 *
li°
,

96 
GLi°
 *
ôems
);

97 
	`gtk_li°_˛ór_ôems
 (
GtkLi°
 *
li°
,

98 
göt
 
°¨t
,

99 
göt
 
íd
);

100 
	`gtk_li°_£À˘_ôem
 (
GtkLi°
 *
li°
,

101 
göt
 
ôem
);

102 
	`gtk_li°_un£À˘_ôem
 (
GtkLi°
 *
li°
,

103 
göt
 
ôem
);

104 
	`gtk_li°_£À˘_chûd
 (
GtkLi°
 *
li°
,

105 
GtkWidgë
 *
chûd
);

106 
	`gtk_li°_un£À˘_chûd
 (
GtkLi°
 *
li°
,

107 
GtkWidgë
 *
chûd
);

108 
göt
 
	`gtk_li°_chûd_posôi⁄
 (
GtkLi°
 *
li°
,

109 
GtkWidgë
 *
chûd
);

110 
	`gtk_li°_£t_£À˘i⁄_mode
 (
GtkLi°
 *
li°
,

111 
GtkSñe˘i⁄Mode
 
mode
);

113 
	`gtk_li°_exãnd_£À˘i⁄
 (
GtkLi°
 *
li°
,

114 
GtkS¸ﬁlTy≥
 
s¸ﬁl_ty≥
,

115 
gÊﬂt
 
posôi⁄
,

116 
gboﬁón
 
auto_°¨t_£À˘i⁄
);

117 
	`gtk_li°_°¨t_£À˘i⁄
 (
GtkLi°
 *
li°
);

118 
	`gtk_li°_íd_£À˘i⁄
 (
GtkLi°
 *
li°
);

119 
	`gtk_li°_£À˘_Æl
 (
GtkLi°
 *
li°
);

120 
	`gtk_li°_un£À˘_Æl
 (
GtkLi°
 *
li°
);

121 
	`gtk_li°_s¸ﬁl_h‹iz⁄èl
 (
GtkLi°
 *
li°
,

122 
GtkS¸ﬁlTy≥
 
s¸ﬁl_ty≥
,

123 
gÊﬂt
 
posôi⁄
);

124 
	`gtk_li°_s¸ﬁl_vîtiˇl
 (
GtkLi°
 *
li°
,

125 
GtkS¸ﬁlTy≥
 
s¸ﬁl_ty≥
,

126 
gÊﬂt
 
posôi⁄
);

127 
	`gtk_li°_toggÀ_add_mode
 (
GtkLi°
 *
li°
);

128 
	`gtk_li°_toggÀ_focus_row
 (
GtkLi°
 *
li°
);

129 
	`gtk_li°_toggÀ_row
 (
GtkLi°
 *
li°
,

130 
GtkWidgë
 *
ôem
);

131 
	`gtk_li°_undo_£À˘i⁄
 (
GtkLi°
 *
li°
);

132 
	`gtk_li°_íd_døg_£À˘i⁄
 (
GtkLi°
 *
li°
);

134 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtklistitem.h

27 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_LIST_ITEM_C__
)

29 #i‚de‡
__GTK_LIST_ITEM_H__


30 
	#__GTK_LIST_ITEM_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_LIST_ITEM
 (
	`gtk_li°_ôem_gë_ty≥
 ())

	)

39 
	#GTK_LIST_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_LIST_ITEM
, 
GtkLi°Iãm
))

	)

40 
	#GTK_LIST_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_LIST_ITEM
, 
GtkLi°IãmCœss
))

	)

41 
	#GTK_IS_LIST_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_LIST_ITEM
))

	)

42 
	#GTK_IS_LIST_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_LIST_ITEM
))

	)

43 
	#GTK_LIST_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_LIST_ITEM
, 
GtkLi°IãmCœss
))

	)

46 
_GtkLi°Iãm
 
	tGtkLi°Iãm
;

47 
_GtkLi°IãmCœss
 
	tGtkLi°IãmCœss
;

49 
	s_GtkLi°Iãm


51 
GtkIãm
 
	môem
;

54 
	s_GtkLi°IãmCœss


56 
GtkIãmCœss
 
	m∑ª¡_˛ass
;

58 (*
	mtoggÀ_focus_row
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

59 (*
	m£À˘_Æl
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

60 (*
	mun£À˘_Æl
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

61 (*
	mundo_£À˘i⁄
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

62 (*
	m°¨t_£À˘i⁄
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

63 (*
	míd_£À˘i⁄
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

64 (*
	mexãnd_£À˘i⁄
Ë(
GtkLi°Iãm
 *
	mli°_ôem
,

65 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl_ty≥
,

66 
gÊﬂt
 
	mposôi⁄
,

67 
gboﬁón
 
	mauto_°¨t_£À˘i⁄
);

68 (*
	ms¸ﬁl_h‹iz⁄èl
Ë(
GtkLi°Iãm
 *
	mli°_ôem
,

69 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl_ty≥
,

70 
gÊﬂt
 
	mposôi⁄
);

71 (*
	ms¸ﬁl_vîtiˇl
Ë(
GtkLi°Iãm
 *
	mli°_ôem
,

72 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl_ty≥
,

73 
gÊﬂt
 
	mposôi⁄
);

74 (*
	mtoggÀ_add_mode
Ë(
GtkLi°Iãm
 *
	mli°_ôem
);

78 
GTy≥
 
	$gtk_li°_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
GtkWidgë
* 
	`gtk_li°_ôem_√w
 ();

80 
GtkWidgë
* 
	`gtk_li°_ôem_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

81 
	`gtk_li°_ôem_£À˘
 (
GtkLi°Iãm
 *
li°_ôem
);

82 
	`gtk_li°_ôem_de£À˘
 (
GtkLi°Iãm
 *
li°_ôem
);

86 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkliststore.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_LIST_STORE_H__


25 
	#__GTK_LIST_STORE_H__


	)

27 
	~<gdkc⁄fig.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkåìs‹èbÀ.h
>

32 
	gG_BEGIN_DECLS


35 
	#GTK_TYPE_LIST_STORE
 (
	`gtk_li°_°‹e_gë_ty≥
 ())

	)

36 
	#GTK_LIST_STORE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_LIST_STORE
, 
GtkLi°St‹e
))

	)

37 
	#GTK_LIST_STORE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_LIST_STORE
, 
GtkLi°St‹eCœss
))

	)

38 
	#GTK_IS_LIST_STORE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_LIST_STORE
))

	)

39 
	#GTK_IS_LIST_STORE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_LIST_STORE
))

	)

40 
	#GTK_LIST_STORE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_LIST_STORE
, 
GtkLi°St‹eCœss
))

	)

42 
_GtkLi°St‹e
 
	tGtkLi°St‹e
;

43 
_GtkLi°St‹eCœss
 
	tGtkLi°St‹eCœss
;

45 
	s_GtkLi°St‹e


47 
GObje˘
 
	m∑ª¡
;

50 
göt
 
GSEAL
 (
°amp
);

51 
gpoöãr
 
GSEAL
 (
£q
);

52 
gpoöãr
 
GSEAL
 (
_gtk_ª£rved1
);

53 
GLi°
 *
GSEAL
 (
s‹t_li°
);

54 
göt
 
GSEAL
 (
n_cﬁumns
);

55 
göt
 
GSEAL
 (
s‹t_cﬁumn_id
);

56 
GtkS‹tTy≥
 
GSEAL
 (
‹dî
);

57 
GTy≥
 *
GSEAL
 (
cﬁumn_hódîs
);

58 
göt
 
GSEAL
 (
Àngth
);

59 
GtkTªeIãrCom∑ªFunc
 
GSEAL
 (
deÁu…_s‹t_func
);

60 
gpoöãr
 
GSEAL
 (
deÁu…_s‹t_d©a
);

61 
GDe°royNŸify
 
GSEAL
 (
deÁu…_s‹t_de°roy
);

62 
guöt
 
GSEAL
 (
cﬁumns_dúty
) : 1;

65 
	s_GtkLi°St‹eCœss


67 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

70 (*
	m_gtk_ª£rved1
) ();

71 (*
	m_gtk_ª£rved2
) ();

72 (*
	m_gtk_ª£rved3
) ();

73 (*
	m_gtk_ª£rved4
) ();

77 
GTy≥
 
	$gtk_li°_°‹e_gë_ty≥
 (Ë
G_GNUC_CONST
;

78 
GtkLi°St‹e
 *
	`gtk_li°_°‹e_√w
 (
göt
 
n_cﬁumns
,

80 
GtkLi°St‹e
 *
	`gtk_li°_°‹e_√wv
 (
göt
 
n_cﬁumns
,

81 
GTy≥
 *
ty≥s
);

82 
	`gtk_li°_°‹e_£t_cﬁumn_ty≥s
 (
GtkLi°St‹e
 *
li°_°‹e
,

83 
göt
 
n_cﬁumns
,

84 
GTy≥
 *
ty≥s
);

88 
	`gtk_li°_°‹e_£t_vÆue
 (
GtkLi°St‹e
 *
li°_°‹e
,

89 
GtkTªeIãr
 *
ôî
,

90 
göt
 
cﬁumn
,

91 
GVÆue
 *
vÆue
);

92 
	`gtk_li°_°‹e_£t
 (
GtkLi°St‹e
 *
li°_°‹e
,

93 
GtkTªeIãr
 *
ôî
,

95 
	`gtk_li°_°‹e_£t_vÆuesv
 (
GtkLi°St‹e
 *
li°_°‹e
,

96 
GtkTªeIãr
 *
ôî
,

97 
göt
 *
cﬁumns
,

98 
GVÆue
 *
vÆues
,

99 
göt
 
n_vÆues
);

100 
	`gtk_li°_°‹e_£t_vÆi°
 (
GtkLi°St‹e
 *
li°_°‹e
,

101 
GtkTªeIãr
 *
ôî
,

102 
va_li°
 
v¨_¨gs
);

103 
gboﬁón
 
	`gtk_li°_°‹e_ªmove
 (
GtkLi°St‹e
 *
li°_°‹e
,

104 
GtkTªeIãr
 *
ôî
);

105 
	`gtk_li°_°‹e_ö£π
 (
GtkLi°St‹e
 *
li°_°‹e
,

106 
GtkTªeIãr
 *
ôî
,

107 
göt
 
posôi⁄
);

108 
	`gtk_li°_°‹e_ö£π_bef‹e
 (
GtkLi°St‹e
 *
li°_°‹e
,

109 
GtkTªeIãr
 *
ôî
,

110 
GtkTªeIãr
 *
siblög
);

111 
	`gtk_li°_°‹e_ö£π_a·î
 (
GtkLi°St‹e
 *
li°_°‹e
,

112 
GtkTªeIãr
 *
ôî
,

113 
GtkTªeIãr
 *
siblög
);

114 
	`gtk_li°_°‹e_ö£π_wôh_vÆues
 (
GtkLi°St‹e
 *
li°_°‹e
,

115 
GtkTªeIãr
 *
ôî
,

116 
göt
 
posôi⁄
,

118 
	`gtk_li°_°‹e_ö£π_wôh_vÆuesv
 (
GtkLi°St‹e
 *
li°_°‹e
,

119 
GtkTªeIãr
 *
ôî
,

120 
göt
 
posôi⁄
,

121 
göt
 *
cﬁumns
,

122 
GVÆue
 *
vÆues
,

123 
göt
 
n_vÆues
);

124 
	`gtk_li°_°‹e_¥ïíd
 (
GtkLi°St‹e
 *
li°_°‹e
,

125 
GtkTªeIãr
 *
ôî
);

126 
	`gtk_li°_°‹e_≠≥nd
 (
GtkLi°St‹e
 *
li°_°‹e
,

127 
GtkTªeIãr
 *
ôî
);

128 
	`gtk_li°_°‹e_˛ór
 (
GtkLi°St‹e
 *
li°_°‹e
);

129 
gboﬁón
 
	`gtk_li°_°‹e_ôî_is_vÆid
 (
GtkLi°St‹e
 *
li°_°‹e
,

130 
GtkTªeIãr
 *
ôî
);

131 
	`gtk_li°_°‹e_ª‹dî
 (
GtkLi°St‹e
 *
°‹e
,

132 
göt
 *
√w_‹dî
);

133 
	`gtk_li°_°‹e_sw≠
 (
GtkLi°St‹e
 *
°‹e
,

134 
GtkTªeIãr
 *
a
,

135 
GtkTªeIãr
 *
b
);

136 
	`gtk_li°_°‹e_move_a·î
 (
GtkLi°St‹e
 *
°‹e
,

137 
GtkTªeIãr
 *
ôî
,

138 
GtkTªeIãr
 *
posôi⁄
);

139 
	`gtk_li°_°‹e_move_bef‹e
 (
GtkLi°St‹e
 *
°‹e
,

140 
GtkTªeIãr
 *
ôî
,

141 
GtkTªeIãr
 *
posôi⁄
);

144 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmain.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MAIN_H__


32 
	#__GTK_MAIN_H__


	)

35 
	~<gdk/gdk.h
>

36 
	~<gtk/gtkwidgë.h
>

37 #ifde‡
G_PLATFORM_WIN32


38 
	~<gtk/gtkbox.h
>

39 
	~<gtk/gtkwödow.h
>

42 
	gG_BEGIN_DECLS


46 
	#GTK_PRIORITY_RESIZE
 (
G_PRIORITY_HIGH_IDLE
 + 10)

	)

48 #i‚de‡
GTK_DISABLE_DEPRECATED


51 
	#GTK_PRIORITY_REDRAW
 (
G_PRIORITY_HIGH_IDLE
 + 20)

	)

55 
	#GTK_PRIORITY_HIGH
 
G_PRIORITY_HIGH


	)

56 
	#GTK_PRIORITY_INTERNAL
 
GTK_PRIORITY_REDRAW


	)

57 
	#GTK_PRIORITY_DEFAULT
 
G_PRIORITY_DEFAULT_IDLE


	)

58 
	#GTK_PRIORITY_LOW
 
G_PRIORITY_LOW


	)

62 
	$göt
 (*
	tGtkKeySno›Func
Ë(
	tGtkWidgë
 *
	tgøb_widgë
,

63 
	tGdkEvítKey
 *
	tevít
,

64 
	tgpoöãr
 
	tfunc_d©a
);

68 #ifde‡
G_PLATFORM_WIN32


69 #ifde‡
GTK_COMPILATION


70 
	#GTKMAIN_C_VAR
 
	`__de˛•ec
(
dŒexp‹t
)

	)

72 
	#GTKMAIN_C_VAR
 
	`__de˛•ec
(
dŒimp‹t
)

	)

75 
	#GTKMAIN_C_VAR
 

	)

78 
GTKMAIN_C_VAR
 c⁄° 
guöt
 
gtk_maj‹_vîsi⁄
;

79 
GTKMAIN_C_VAR
 c⁄° 
guöt
 
gtk_mö‹_vîsi⁄
;

80 
GTKMAIN_C_VAR
 c⁄° 
guöt
 
gtk_mi¸o_vîsi⁄
;

81 
GTKMAIN_C_VAR
 c⁄° 
guöt
 
gtk_bö¨y_age
;

82 
GTKMAIN_C_VAR
 c⁄° 
guöt
 
gtk_öãrÁ˚_age
;

83 c⁄° 
gch¨
* 
	`gtk_check_vîsi⁄
 (
guöt
 
ªquúed_maj‹
,

84 
guöt
 
ªquúed_mö‹
,

85 
guöt
 
ªquúed_mi¸o
);

91 
gboﬁón
 
	`gtk_∑r£_¨gs
 (*
¨gc
,

92 ***
¨gv
);

94 
	`gtk_öô
 (*
¨gc
,

95 ***
¨gv
);

97 
gboﬁón
 
	`gtk_öô_check
 (*
¨gc
,

98 ***
¨gv
);

100 
gboﬁón
 
	`gtk_öô_wôh_¨gs
 (*
¨gc
,

101 ***
¨gv
,

102 *
∑ømëî_°rög
,

103 
GO±i⁄E¡ry
 *
íåõs
,

104 *
å™¶©i⁄_domaö
,

105 
GEº‹
 **
îr‹
);

107 
GO±i⁄Group
 *
	`gtk_gë_›ti⁄_group
 (
gboﬁón
 
›í_deÁu…_di•œy
);

109 #ifde‡
G_PLATFORM_WIN32


114 
	`gtk_öô_abi_check
 (*
¨gc
,

115 ***
¨gv
,

116 
num_checks
,

117 
size_t
 
sizeof_GtkWödow
,

118 
size_t
 
sizeof_GtkBox
);

119 
gboﬁón
 
	`gtk_öô_check_abi_check
 (*
¨gc
,

120 ***
¨gv
,

121 
num_checks
,

122 
size_t
 
sizeof_GtkWödow
,

123 
size_t
 
sizeof_GtkBox
);

125 
	#gtk_öô
(
¨gc
, 
¨gv
Ë
	`gtk_öô_abi_check
 (¨gc,árgv, 2,  (
GtkWödow
),  (
GtkBox
))

	)

126 
	#gtk_öô_check
(
¨gc
, 
¨gv
Ë
	`gtk_öô_check_abi_check
 (¨gc,árgv, 2,  (
GtkWödow
),  (
GtkBox
))

	)

130 #i‚de‡
GTK_DISABLE_DEPRECATED


131 
	`gtk_exô
 (
göt
 
îr‹_code
);

134 
	`gtk_dißbÀ_£éoˇÀ
 ();

135 
gch¨
 * 
	`gtk_£t_loˇÀ
 ();

136 
P™goL™guage
 *
	`gtk_gë_deÁu…_œnguage
 ();

137 
gboﬁón
 
	`gtk_evíts_≥ndög
 ();

143 
	`gtk_maö_do_evít
 (
GdkEvít
 *
evít
);

145 
	`gtk_maö
 ();

146 
guöt
 
	`gtk_maö_Àvñ
 ();

147 
	`gtk_maö_quô
 ();

148 
gboﬁón
 
	`gtk_maö_ôî©i⁄
 ();

150 
gboﬁón
 
	`gtk_maö_ôî©i⁄_do
 (gboﬁó¿
blockög
);

152 
gboﬁón
 
	$gtk_åue
 (Ë
G_GNUC_CONST
;

153 
gboﬁón
 
	$gtk_Ál£
 (Ë
G_GNUC_CONST
;

155 
	`gtk_gøb_add
 (
GtkWidgë
 *
widgë
);

156 
GtkWidgë
* 
	`gtk_gøb_gë_cuºít
 ();

157 
	`gtk_gøb_ªmove
 (
GtkWidgë
 *
widgë
);

159 
	`gtk_öô_add
 (
GtkFun˘i⁄
 
fun˘i⁄
,

160 
gpoöãr
 
d©a
);

161 
	`gtk_quô_add_de°roy
 (
guöt
 
maö_Àvñ
,

162 
GtkObje˘
 *
obje˘
);

163 
guöt
 
	`gtk_quô_add
 (guöà
maö_Àvñ
,

164 
GtkFun˘i⁄
 
fun˘i⁄
,

165 
gpoöãr
 
d©a
);

166 
guöt
 
	`gtk_quô_add_fuŒ
 (guöà
maö_Àvñ
,

167 
GtkFun˘i⁄
 
fun˘i⁄
,

168 
GtkCÆlbackM¨shÆ
 
m¨shÆ
,

169 
gpoöãr
 
d©a
,

170 
GDe°royNŸify
 
de°roy
);

171 
	`gtk_quô_ªmove
 (
guöt
 
quô_h™dÀr_id
);

172 
	`gtk_quô_ªmove_by_d©a
 (
gpoöãr
 
d©a
);

173 #i‚de‡
GTK_DISABLE_DEPRECATED


174 
guöt
 
	`gtk_timeout_add
 (
guöt32
 
öãrvÆ
,

175 
GtkFun˘i⁄
 
fun˘i⁄
,

176 
gpoöãr
 
d©a
);

177 
guöt
 
	`gtk_timeout_add_fuŒ
 (
guöt32
 
öãrvÆ
,

178 
GtkFun˘i⁄
 
fun˘i⁄
,

179 
GtkCÆlbackM¨shÆ
 
m¨shÆ
,

180 
gpoöãr
 
d©a
,

181 
GDe°royNŸify
 
de°roy
);

182 
	`gtk_timeout_ªmove
 (
guöt
 
timeout_h™dÀr_id
);

184 
guöt
 
	`gtk_idÀ_add
 (
GtkFun˘i⁄
 
fun˘i⁄
,

185 
gpoöãr
 
d©a
);

186 
guöt
 
	`gtk_idÀ_add_¥i‹ôy
 (
göt
 
¥i‹ôy
,

187 
GtkFun˘i⁄
 
fun˘i⁄
,

188 
gpoöãr
 
d©a
);

189 
guöt
 
	`gtk_idÀ_add_fuŒ
 (
göt
 
¥i‹ôy
,

190 
GtkFun˘i⁄
 
fun˘i⁄
,

191 
GtkCÆlbackM¨shÆ
 
m¨shÆ
,

192 
gpoöãr
 
d©a
,

193 
GDe°royNŸify
 
de°roy
);

194 
	`gtk_idÀ_ªmove
 (
guöt
 
idÀ_h™dÀr_id
);

195 
	`gtk_idÀ_ªmove_by_d©a
 (
gpoöãr
 
d©a
);

196 
guöt
 
	`gtk_öput_add_fuŒ
 (
göt
 
sour˚
,

197 
GdkI≈utC⁄dôi⁄
 
c⁄dôi⁄
,

198 
GdkI≈utFun˘i⁄
 
fun˘i⁄
,

199 
GtkCÆlbackM¨shÆ
 
m¨shÆ
,

200 
gpoöãr
 
d©a
,

201 
GDe°royNŸify
 
de°roy
);

202 
	`gtk_öput_ªmove
 (
guöt
 
öput_h™dÀr_id
);

205 
guöt
 
	`gtk_key_¢o›î_ö°Æl
 (
GtkKeySno›Func
 
¢o›î
,

206 
gpoöãr
 
func_d©a
);

207 
	`gtk_key_¢o›î_ªmove
 (
guöt
 
¢o›î_h™dÀr_id
);

209 
GdkEvít
* 
	`gtk_gë_cuºít_evít
 ();

210 
guöt32
 
	`gtk_gë_cuºít_evít_time
 ();

211 
gboﬁón
 
	`gtk_gë_cuºít_evít_°©e
 (
GdkModifõrTy≥
 *
°©e
);

213 
GtkWidgë
* 
	`gtk_gë_evít_widgë
 (
GdkEvít
 *
evít
);

218 
	`gtk_¥›ag©e_evít
 (
GtkWidgë
 *
widgë
,

219 
GdkEvít
 *
evít
);

221 
gboﬁón
 
	`_gtk_boﬁón_h™dÀd_accumuœt‹
 (
GSig«lInvoˇti⁄Höt
 *
ihöt
,

222 
GVÆue
 *
ªtu∫_accu
,

223 c⁄° 
GVÆue
 *
h™dÀr_ªtu∫
,

224 
gpoöãr
 
dummy
);

226 
gch¨
 *
	`_gtk_gë_lc_˘y≥
 ();

228 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmenubar.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MENU_BAR_H__


32 
	#__GTK_MENU_BAR_H__


	)

35 
	~<gtk/gtkmíushñl.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_MENU_BAR
 (
	`gtk_míu_b¨_gë_ty≥
 ())

	)

42 
	#GTK_MENU_BAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_MENU_BAR
, 
GtkMíuB¨
))

	)

43 
	#GTK_MENU_BAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_MENU_BAR
, 
GtkMíuB¨Cœss
))

	)

44 
	#GTK_IS_MENU_BAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_MENU_BAR
))

	)

45 
	#GTK_IS_MENU_BAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_MENU_BAR
))

	)

46 
	#GTK_MENU_BAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_MENU_BAR
, 
GtkMíuB¨Cœss
))

	)

48 
_GtkMíuB¨
 
	tGtkMíuB¨
;

49 
_GtkMíuB¨Cœss
 
	tGtkMíuB¨Cœss
;

51 
	s_GtkMíuB¨


53 
GtkMíuShñl
 
	mmíu_shñl
;

56 
	s_GtkMíuB¨Cœss


58 
GtkMíuShñlCœss
 
	m∑ª¡_˛ass
;

61 (*
	m_gtk_ª£rved1
) ();

62 (*
	m_gtk_ª£rved2
) ();

63 (*
	m_gtk_ª£rved3
) ();

64 (*
	m_gtk_ª£rved4
) ();

68 
GTy≥
 
	$gtk_míu_b¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GtkWidgë
* 
	`gtk_míu_b¨_√w
 ();

71 
GtkPackDúe˘i⁄
 
	`gtk_míu_b¨_gë_∑ck_dúe˘i⁄
 (
GtkMíuB¨
 *
míub¨
);

72 
	`gtk_míu_b¨_£t_∑ck_dúe˘i⁄
 (
GtkMíuB¨
 *
míub¨
,

73 
GtkPackDúe˘i⁄
 
∑ck_dú
);

74 
GtkPackDúe˘i⁄
 
	`gtk_míu_b¨_gë_chûd_∑ck_dúe˘i⁄
 (
GtkMíuB¨
 *
míub¨
);

75 
	`gtk_míu_b¨_£t_chûd_∑ck_dúe˘i⁄
 (
GtkMíuB¨
 *
míub¨
,

76 
GtkPackDúe˘i⁄
 
chûd_∑ck_dú
);

78 #i‚de‡
GTK_DISABLE_DEPRECATED


79 
	#gtk_míu_b¨_≠≥nd
(
míu
,
chûd
Ë
	`gtk_míu_shñl_≠≥nd
 ((
GtkMíuShñl
 *)(míu),(chûd))

	)

80 
	#gtk_míu_b¨_¥ïíd
(
míu
,
chûd
Ë
	`gtk_míu_shñl_¥ïíd
 ((
GtkMíuShñl
 *)(míu),(chûd))

	)

81 
	#gtk_míu_b¨_ö£π
(
míu
,
chûd
,
pos
Ë
	`gtk_míu_shñl_ö£π
 ((
GtkMíuShñl
 *)(míu),(chûd),’os))

	)

85 
	`_gtk_míu_b¨_cy˛e_focus
 (
GtkMíuB¨
 *
míub¨
,

86 
GtkDúe˘i⁄Ty≥
 
dú
);

89 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmenuitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MENU_ITEM_H__


32 
	#__GTK_MENU_ITEM_H__


	)

35 
	~<gtk/gtkôem.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_MENU_ITEM
 (
	`gtk_míu_ôem_gë_ty≥
 ())

	)

41 
	#GTK_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_MENU_ITEM
, 
GtkMíuIãm
))

	)

42 
	#GTK_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_MENU_ITEM
, 
GtkMíuIãmCœss
))

	)

43 
	#GTK_IS_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_MENU_ITEM
))

	)

44 
	#GTK_IS_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_MENU_ITEM
))

	)

45 
	#GTK_MENU_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_MENU_ITEM
, 
GtkMíuIãmCœss
))

	)

48 
_GtkMíuIãm
 
	tGtkMíuIãm
;

49 
_GtkMíuIãmCœss
 
	tGtkMíuIãmCœss
;

51 
	s_GtkMíuIãm


53 
GtkIãm
 
	môem
;

55 
GtkWidgë
 *
GSEAL
 (
submíu
);

56 
GdkWödow
 *
GSEAL
 (
evít_wödow
);

58 
guöt16
 
GSEAL
 (
toggÀ_size
);

59 
guöt16
 
GSEAL
 (
ac˚Àøt‹_width
);

60 
gch¨
 *
GSEAL
 (
ac˚l_∑th
);

62 
guöt
 
GSEAL
 (
show_submíu_ödiˇt‹
) : 1;

63 
guöt
 
GSEAL
 (
submíu_∂a˚mít
) : 1;

64 
guöt
 
GSEAL
 (
submíu_dúe˘i⁄
) : 1;

65 
guöt
 
GSEAL
 (
right_ju°ify
): 1;

66 
guöt
 
GSEAL
 (
timî_‰om_key¥ess
) : 1;

67 
guöt
 
GSEAL
 (
‰om_míub¨
) : 1;

68 
guöt
 
GSEAL
 (
timî
);

71 
	s_GtkMíuIãmCœss


73 
GtkIãmCœss
 
	m∑ª¡_˛ass
;

81 
guöt
 
	mhide_⁄_a˘iv©e
 : 1;

83 (* 
	ma˘iv©e
Ë(
GtkMíuIãm
 *
	mmíu_ôem
);

84 (* 
	ma˘iv©e_ôem
Ë(
GtkMíuIãm
 *
	mmíu_ôem
);

85 (* 
	mtoggÀ_size_ªque°
Ë(
GtkMíuIãm
 *
	mmíu_ôem
,

86 
göt
 *
	mªquisôi⁄
);

87 (* 
	mtoggÀ_size_Æloˇã
Ë(
GtkMíuIãm
 *
	mmíu_ôem
,

88 
göt
 
	mÆloˇti⁄
);

89 (* 
	m£t_œbñ
Ë(
GtkMíuIãm
 *
	mmíu_ôem
,

90 c⁄° 
gch¨
 *
	mœbñ
);

91 
G_CONST_RETURN
 
	mgch¨
 *(* 
	mgë_œbñ
Ë(
GtkMíuIãm
 *
	mmíu_ôem
);

94 (*
	m_gtk_ª£rved1
) ();

95 (*
	m_gtk_ª£rved2
) ();

99 
GTy≥
 
	$gtk_míu_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

100 
GtkWidgë
* 
	`gtk_míu_ôem_√w
 ();

101 
GtkWidgë
* 
	`gtk_míu_ôem_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

102 
GtkWidgë
* 
	`gtk_míu_ôem_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

103 
	`gtk_míu_ôem_£t_submíu
 (
GtkMíuIãm
 *
míu_ôem
,

104 
GtkWidgë
 *
submíu
);

105 
GtkWidgë
* 
	`gtk_míu_ôem_gë_submíu
 (
GtkMíuIãm
 *
míu_ôem
);

106 
	`gtk_míu_ôem_£À˘
 (
GtkMíuIãm
 *
míu_ôem
);

107 
	`gtk_míu_ôem_de£À˘
 (
GtkMíuIãm
 *
míu_ôem
);

108 
	`gtk_míu_ôem_a˘iv©e
 (
GtkMíuIãm
 *
míu_ôem
);

109 
	`gtk_míu_ôem_toggÀ_size_ªque°
 (
GtkMíuIãm
 *
míu_ôem
,

110 
göt
 *
ªquisôi⁄
);

111 
	`gtk_míu_ôem_toggÀ_size_Æloˇã
 (
GtkMíuIãm
 *
míu_ôem
,

112 
göt
 
Æloˇti⁄
);

113 
	`gtk_míu_ôem_£t_right_ju°ifõd
 (
GtkMíuIãm
 *
míu_ôem
,

114 
gboﬁón
 
right_ju°ifõd
);

115 
gboﬁón
 
	`gtk_míu_ôem_gë_right_ju°ifõd
 (
GtkMíuIãm
 *
míu_ôem
);

116 
	`gtk_míu_ôem_£t_ac˚l_∑th
 (
GtkMíuIãm
 *
míu_ôem
,

117 c⁄° 
gch¨
 *
ac˚l_∑th
);

118 
G_CONST_RETURN
 
gch¨
* 
	`gtk_míu_ôem_gë_ac˚l_∑th
 (
GtkMíuIãm
 *
míu_ôem
);

120 
	`gtk_míu_ôem_£t_œbñ
 (
GtkMíuIãm
 *
míu_ôem
,

121 c⁄° 
gch¨
 *
œbñ
);

122 
G_CONST_RETURN
 
gch¨
 *
	`gtk_míu_ôem_gë_œbñ
 (
GtkMíuIãm
 *
míu_ôem
);

124 
	`gtk_míu_ôem_£t_u£_undîlöe
 (
GtkMíuIãm
 *
míu_ôem
,

125 
gboﬁón
 
£âög
);

126 
gboﬁón
 
	`gtk_míu_ôem_gë_u£_undîlöe
 (
GtkMíuIãm
 *
míu_ôem
);

129 
	`_gtk_míu_ôem_ª‰esh_ac˚l_∑th
 (
GtkMíuIãm
 *
míu_ôem
,

130 c⁄° 
gch¨
 *
¥efix
,

131 
GtkAc˚lGroup
 *
ac˚l_group
,

132 
gboﬁón
 
group_ch™ged
);

133 
gboﬁón
 
	`_gtk_míu_ôem_is_£À˘abÀ
 (
GtkWidgë
 *
míu_ôem
);

134 
	`_gtk_míu_ôem_p›up_submíu
 (
GtkWidgë
 *
míu_ôem
,

135 
gboﬁón
 
wôh_dñay
);

136 
	`_gtk_míu_ôem_p›down_submíu
 (
GtkWidgë
 *
míu_ôem
);

138 #i‚de‡
GTK_DISABLE_DEPRECATED


139 
	`gtk_míu_ôem_ªmove_submíu
 (
GtkMíuIãm
 *
míu_ôem
);

140 
	#gtk_míu_ôem_right_ju°ify
(
míu_ôem
Ë
	`gtk_míu_ôem_£t_right_ju°ifõd
 ((míu_ôem), 
TRUE
)

	)

143 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmenushell.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MENU_SHELL_H__


32 
	#__GTK_MENU_SHELL_H__


	)

35 
	~<gtk/gtkc⁄èöî.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_MENU_SHELL
 (
	`gtk_míu_shñl_gë_ty≥
 ())

	)

41 
	#GTK_MENU_SHELL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_MENU_SHELL
, 
GtkMíuShñl
))

	)

42 
	#GTK_MENU_SHELL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_MENU_SHELL
, 
GtkMíuShñlCœss
))

	)

43 
	#GTK_IS_MENU_SHELL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_MENU_SHELL
))

	)

44 
	#GTK_IS_MENU_SHELL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_MENU_SHELL
))

	)

45 
	#GTK_MENU_SHELL_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_MENU_SHELL
, 
GtkMíuShñlCœss
))

	)

48 
_GtkMíuShñl
 
	tGtkMíuShñl
;

49 
_GtkMíuShñlCœss
 
	tGtkMíuShñlCœss
;

51 
	s_GtkMíuShñl


53 
GtkC⁄èöî
 
	mc⁄èöî
;

55 
GLi°
 *
GSEAL
 (
chûdªn
);

56 
GtkWidgë
 *
GSEAL
 (
a˘ive_míu_ôem
);

57 
GtkWidgë
 *
GSEAL
 (
∑ª¡_míu_shñl
);

59 
guöt
 
GSEAL
 (
buâ⁄
);

60 
guöt32
 
GSEAL
 (
a˘iv©e_time
);

62 
guöt
 
GSEAL
 (
a˘ive
) : 1;

63 
guöt
 
GSEAL
 (
have_gøb
) : 1;

64 
guöt
 
GSEAL
 (
have_xgøb
) : 1;

65 
guöt
 
GSEAL
 (
ign‹e_Àave
) : 1;

66 
guöt
 
GSEAL
 (
míu_Êag
) : 1;

67 
guöt
 
GSEAL
 (
ign‹e_íãr
) : 1;

70 
	s_GtkMíuShñlCœss


72 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

74 
guöt
 
	msubmíu_∂a˚mít
 : 1;

76 (*
	mdó˘iv©e
Ë(
GtkMíuShñl
 *
	mmíu_shñl
);

77 (*
	m£À˘i⁄_d⁄e
Ë(
GtkMíuShñl
 *
	mmíu_shñl
);

79 (*
	mmove_cuºít
Ë(
GtkMíuShñl
 *
	mmíu_shñl
,

80 
GtkMíuDúe˘i⁄Ty≥
 
	mdúe˘i⁄
);

81 (*
	ma˘iv©e_cuºít
Ë(
GtkMíuShñl
 *
	mmíu_shñl
,

82 
gboﬁón
 
	mf‹˚_hide
);

83 (*
	mˇn˚l
Ë(
GtkMíuShñl
 *
	mmíu_shñl
);

84 (*
	m£À˘_ôem
Ë(
GtkMíuShñl
 *
	mmíu_shñl
,

85 
GtkWidgë
 *
	mmíu_ôem
);

86 (*
	mö£π
Ë(
GtkMíuShñl
 *
	mmíu_shñl
,

87 
GtkWidgë
 *
	mchûd
,

88 
göt
 
	mposôi⁄
);

89 
göt
 (*
gë_p›up_dñay
Ë(
GtkMíuShñl
 *
	mmíu_shñl
);

90 
gboﬁón
 (*
move_£À˘ed
Ë(
GtkMíuShñl
 *
	mmíu_shñl
,

91 
göt
 
	mdi°™˚
);

94 (*
	m_gtk_ª£rved1
) ();

95 (*
	m_gtk_ª£rved2
) ();

99 
GTy≥
 
	$gtk_míu_shñl_gë_ty≥
 (Ë
G_GNUC_CONST
;

100 
	`gtk_míu_shñl_≠≥nd
 (
GtkMíuShñl
 *
míu_shñl
,

101 
GtkWidgë
 *
chûd
);

102 
	`gtk_míu_shñl_¥ïíd
 (
GtkMíuShñl
 *
míu_shñl
,

103 
GtkWidgë
 *
chûd
);

104 
	`gtk_míu_shñl_ö£π
 (
GtkMíuShñl
 *
míu_shñl
,

105 
GtkWidgë
 *
chûd
,

106 
göt
 
posôi⁄
);

107 
	`gtk_míu_shñl_dó˘iv©e
 (
GtkMíuShñl
 *
míu_shñl
);

108 
	`gtk_míu_shñl_£À˘_ôem
 (
GtkMíuShñl
 *
míu_shñl
,

109 
GtkWidgë
 *
míu_ôem
);

110 
	`gtk_míu_shñl_de£À˘
 (
GtkMíuShñl
 *
míu_shñl
);

111 
	`gtk_míu_shñl_a˘iv©e_ôem
 (
GtkMíuShñl
 *
míu_shñl
,

112 
GtkWidgë
 *
míu_ôem
,

113 
gboﬁón
 
f‹˚_dó˘iv©e
);

114 
	`gtk_míu_shñl_£À˘_fú°
 (
GtkMíuShñl
 *
míu_shñl
,

115 
gboﬁón
 
£¨ch_£nsôive
);

116 
	`_gtk_míu_shñl_£À˘_œ°
 (
GtkMíuShñl
 *
míu_shñl
,

117 
gboﬁón
 
£¨ch_£nsôive
);

118 
	`_gtk_míu_shñl_a˘iv©e
 (
GtkMíuShñl
 *
míu_shñl
);

119 
göt
 
	`_gtk_míu_shñl_gë_p›up_dñay
 (
GtkMíuShñl
 *
míu_shñl
);

120 
	`gtk_míu_shñl_ˇn˚l
 (
GtkMíuShñl
 *
míu_shñl
);

122 
	`_gtk_míu_shñl_add_m√m⁄ic
 (
GtkMíuShñl
 *
míu_shñl
,

123 
guöt
 
keyvÆ
,

124 
GtkWidgë
 *
èrgë
);

125 
	`_gtk_míu_shñl_ªmove_m√m⁄ic
 (
GtkMíuShñl
 *
míu_shñl
,

126 
guöt
 
keyvÆ
,

127 
GtkWidgë
 *
èrgë
);

129 
gboﬁón
 
	`gtk_míu_shñl_gë_èke_focus
 (
GtkMíuShñl
 *
míu_shñl
);

130 
	`gtk_míu_shñl_£t_èke_focus
 (
GtkMíuShñl
 *
míu_shñl
,

131 
gboﬁón
 
èke_focus
);

133 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_MENU_TOOL_BUTTON_H__


27 
	#__GTK_MENU_TOOL_BUTTON_H__


	)

29 
	~<gtk/gtkmíu.h
>

30 
	~<gtk/gtktoﬁbuâ⁄.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_MENU_TOOL_BUTTON
 (
	`gtk_míu_toﬁ_buâ⁄_gë_ty≥
 ())

	)

35 
	#GTK_MENU_TOOL_BUTTON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
GTK_TYPE_MENU_TOOL_BUTTON
, 
GtkMíuToﬁBuâ⁄
))

	)

36 
	#GTK_MENU_TOOL_BUTTON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
GTK_TYPE_MENU_TOOL_BUTTON
, 
GtkMíuToﬁBuâ⁄Cœss
))

	)

37 
	#GTK_IS_MENU_TOOL_BUTTON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
GTK_TYPE_MENU_TOOL_BUTTON
))

	)

38 
	#GTK_IS_MENU_TOOL_BUTTON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
GTK_TYPE_MENU_TOOL_BUTTON
))

	)

39 
	#GTK_MENU_TOOL_BUTTON_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
GTK_TYPE_MENU_TOOL_BUTTON
, 
GtkMíuToﬁBuâ⁄Cœss
))

	)

41 
_GtkMíuToﬁBuâ⁄Cœss
 
	tGtkMíuToﬁBuâ⁄Cœss
;

42 
_GtkMíuToﬁBuâ⁄
 
	tGtkMíuToﬁBuâ⁄
;

43 
_GtkMíuToﬁBuâ⁄Priv©e
 
	tGtkMíuToﬁBuâ⁄Priv©e
;

45 
	s_GtkMíuToﬁBuâ⁄


47 
GtkToﬁBuâ⁄
 
	m∑ª¡
;

50 
GtkMíuToﬁBuâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

53 
	s_GtkMíuToﬁBuâ⁄Cœss


55 
GtkToﬁBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

57 (*
	mshow_míu
Ë(
GtkMíuToﬁBuâ⁄
 *
	mbuâ⁄
);

60 (*
	m_gtk_ª£rved1
) ();

61 (*
	m_gtk_ª£rved2
) ();

62 (*
	m_gtk_ª£rved3
) ();

63 (*
	m_gtk_ª£rved4
) ();

66 
GTy≥
 
	$gtk_míu_toﬁ_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

67 
GtkToﬁIãm
 *
	`gtk_míu_toﬁ_buâ⁄_√w
 (
GtkWidgë
 *
ic⁄_widgë
,

68 c⁄° 
gch¨
 *
œbñ
);

69 
GtkToﬁIãm
 *
	`gtk_míu_toﬁ_buâ⁄_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
);

71 
	`gtk_míu_toﬁ_buâ⁄_£t_míu
 (
GtkMíuToﬁBuâ⁄
 *
buâ⁄
,

72 
GtkWidgë
 *
míu
);

73 
GtkWidgë
 *
	`gtk_míu_toﬁ_buâ⁄_gë_míu
 (
GtkMíuToﬁBuâ⁄
 *
buâ⁄
);

75 #i‚de‡
GTK_DISABLE_DEPRECATED


76 
	`gtk_míu_toﬁ_buâ⁄_£t_¨row_toﬁtù
 (
GtkMíuToﬁBuâ⁄
 *
buâ⁄
,

77 
GtkToﬁtùs
 *
toﬁtùs
,

78 c⁄° 
gch¨
 *
tù_ãxt
,

79 c⁄° 
gch¨
 *
tù_¥iv©e
);

82 
	`gtk_míu_toﬁ_buâ⁄_£t_¨row_toﬁtù_ãxt
 (
GtkMíuToﬁBuâ⁄
 *
buâ⁄
,

83 c⁄° 
gch¨
 *
ãxt
);

84 
	`gtk_míu_toﬁ_buâ⁄_£t_¨row_toﬁtù_m¨kup
 (
GtkMíuToﬁBuâ⁄
 *
buâ⁄
,

85 c⁄° 
gch¨
 *
m¨kup
);

87 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmessagedialog.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MESSAGE_DIALOG_H__


32 
	#__GTK_MESSAGE_DIALOG_H__


	)

34 
	~<gtk/gtkdülog.h
>

36 
G_BEGIN_DECLS


40 
	mGTK_MESSAGE_INFO
,

41 
	mGTK_MESSAGE_WARNING
,

42 
	mGTK_MESSAGE_QUESTION
,

43 
	mGTK_MESSAGE_ERROR
,

44 
	mGTK_MESSAGE_OTHER


45 } 
	tGtkMesßgeTy≥
;

49 
	mGTK_BUTTONS_NONE
,

50 
	mGTK_BUTTONS_OK
,

51 
	mGTK_BUTTONS_CLOSE
,

52 
	mGTK_BUTTONS_CANCEL
,

53 
	mGTK_BUTTONS_YES_NO
,

54 
	mGTK_BUTTONS_OK_CANCEL


55 } 
	tGtkBuâ⁄sTy≥
;

57 
	#GTK_TYPE_MESSAGE_DIALOG
 (
	`gtk_mesßge_dülog_gë_ty≥
 ())

	)

58 
	#GTK_MESSAGE_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_MESSAGE_DIALOG
, 
GtkMesßgeDülog
))

	)

59 
	#GTK_MESSAGE_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_MESSAGE_DIALOG
, 
GtkMesßgeDülogCœss
))

	)

60 
	#GTK_IS_MESSAGE_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_MESSAGE_DIALOG
))

	)

61 
	#GTK_IS_MESSAGE_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_MESSAGE_DIALOG
))

	)

62 
	#GTK_MESSAGE_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_MESSAGE_DIALOG
, 
GtkMesßgeDülogCœss
))

	)

64 
_GtkMesßgeDülog
 
	tGtkMesßgeDülog
;

65 
_GtkMesßgeDülogCœss
 
	tGtkMesßgeDülogCœss
;

67 
	s_GtkMesßgeDülog


71 
GtkDülog
 
	m∑ª¡_ö°™˚
;

73 
GtkWidgë
 *
GSEAL
 (
image
);

74 
GtkWidgë
 *
GSEAL
 (
œbñ
);

77 
	s_GtkMesßgeDülogCœss


79 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

82 (*
	m_gtk_ª£rved1
) ();

83 (*
	m_gtk_ª£rved2
) ();

84 (*
	m_gtk_ª£rved3
) ();

85 (*
	m_gtk_ª£rved4
) ();

88 
GTy≥
 
	$gtk_mesßge_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

90 
GtkWidgë
* 
	$gtk_mesßge_dülog_√w
 (
GtkWödow
 *
∑ª¡
,

91 
GtkDülogFœgs
 
Êags
,

92 
GtkMesßgeTy≥
 
ty≥
,

93 
GtkBuâ⁄sTy≥
 
buâ⁄s
,

94 c⁄° 
gch¨
 *
mesßge_f‹m©
,

95 ...Ë
	`G_GNUC_PRINTF
 (5, 6);

97 
GtkWidgë
* 
	$gtk_mesßge_dülog_√w_wôh_m¨kup
 (
GtkWödow
 *
∑ª¡
,

98 
GtkDülogFœgs
 
Êags
,

99 
GtkMesßgeTy≥
 
ty≥
,

100 
GtkBuâ⁄sTy≥
 
buâ⁄s
,

101 c⁄° 
gch¨
 *
mesßge_f‹m©
,

102 ...Ë
	`G_GNUC_PRINTF
 (5, 6);

104 
	`gtk_mesßge_dülog_£t_image
 (
GtkMesßgeDülog
 *
dülog
,

105 
GtkWidgë
 *
image
);

107 
GtkWidgë
 * 
	`gtk_mesßge_dülog_gë_image
 (
GtkMesßgeDülog
 *
dülog
);

109 
	`gtk_mesßge_dülog_£t_m¨kup
 (
GtkMesßgeDülog
 *
mesßge_dülog
,

110 c⁄° 
gch¨
 *
°r
);

112 
	$gtk_mesßge_dülog_f‹m©_£c⁄d¨y_ãxt
 (
GtkMesßgeDülog
 *
mesßge_dülog
,

113 c⁄° 
gch¨
 *
mesßge_f‹m©
,

114 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

116 
	$gtk_mesßge_dülog_f‹m©_£c⁄d¨y_m¨kup
 (
GtkMesßgeDülog
 *
mesßge_dülog
,

117 c⁄° 
gch¨
 *
mesßge_f‹m©
,

118 ...Ë
	`G_GNUC_PRINTF
 (2, 3);

120 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmodules.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_MODULES_H__


26 
	#__GTK_MODULES_H__


	)

28 
	~<gtk/gtk£âögs.h
>

31 
G_BEGIN_DECLS


36 
gch¨
 * 
_gtk_föd_moduÀ
 (c⁄° gch¨ *
«me
,

37 c⁄° 
gch¨
 *
ty≥
);

38 
gch¨
 **
_gtk_gë_moduÀ_∑th
 (c⁄° gch¨ *
ty≥
);

40 
_gtk_moduÀs_öô
 (
göt
 *
¨gc
,

41 
gch¨
 ***
¨gv
,

42 c⁄° 
gch¨
 *
gtk_moduÀs_¨gs
);

43 
_gtk_moduÀs_£âögs_ch™ged
 (
GtkSëtögs
 *
£âögs
,

44 c⁄° 
gch¨
 *
moduÀs
);

46 (*
	tGtkModuÀInôFunc
Ë(
	tgöt
 *
	t¨gc
,

47 
	tgch¨
 ***
	t¨gv
);

48 (*
	tGtkModuÀDi•œyInôFunc
Ë(
	tGdkDi•œy
 *
	tdi•œy
);

51 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmountoperation.h

27 #i‡!
deföed
 (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_MOUNT_OPERATION_H__


32 
	#__GTK_MOUNT_OPERATION_H__


	)

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_MOUNT_OPERATION
 (
	`gtk_mou¡_›î©i⁄_gë_ty≥
 ())

	)

37 
	#GTK_MOUNT_OPERATION
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
GTK_TYPE_MOUNT_OPERATION
, 
GtkMou¡O≥øti⁄
))

	)

38 
	#GTK_MOUNT_OPERATION_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
GTK_TYPE_MOUNT_OPERATION
, 
GtkMou¡O≥øti⁄Cœss
))

	)

39 
	#GTK_IS_MOUNT_OPERATION
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
GTK_TYPE_MOUNT_OPERATION
))

	)

40 
	#GTK_IS_MOUNT_OPERATION_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
GTK_TYPE_MOUNT_OPERATION
))

	)

41 
	#GTK_MOUNT_OPERATION_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
GTK_TYPE_MOUNT_OPERATION
, 
GtkMou¡O≥øti⁄Cœss
))

	)

43 
_GtkMou¡O≥øti⁄
 
	tGtkMou¡O≥øti⁄
;

44 
_GtkMou¡O≥øti⁄Cœss
 
	tGtkMou¡O≥øti⁄Cœss
;

45 
_GtkMou¡O≥øti⁄Priv©e
 
	tGtkMou¡O≥øti⁄Priv©e
;

47 
	s_GtkMou¡O≥øti⁄


49 
GMou¡O≥øti⁄
 
	m∑ª¡_ö°™˚
;

51 
GtkMou¡O≥øti⁄Priv©e
 *
	m¥iv
;

54 
	s_GtkMou¡O≥øti⁄Cœss


56 
GMou¡O≥øti⁄Cœss
 
	m∑ª¡_˛ass
;

59 (*
	m_gtk_ª£rved1
) ();

60 (*
	m_gtk_ª£rved2
) ();

61 (*
	m_gtk_ª£rved3
) ();

62 (*
	m_gtk_ª£rved4
) ();

66 
GTy≥
 
gtk_mou¡_›î©i⁄_gë_ty≥
 ();

67 
GMou¡O≥øti⁄
 *
gtk_mou¡_›î©i⁄_√w
 (
GtkWödow
 *
∑ª¡
);

68 
gboﬁón
 
gtk_mou¡_›î©i⁄_is_showög
 (
GtkMou¡O≥øti⁄
 *
›
);

69 
gtk_mou¡_›î©i⁄_£t_∑ª¡
 (
GtkMou¡O≥øti⁄
 *
›
,

70 
GtkWödow
 *
∑ª¡
);

71 
GtkWödow
 * 
gtk_mou¡_›î©i⁄_gë_∑ª¡
 (
GtkMou¡O≥øti⁄
 *
›
);

72 
gtk_mou¡_›î©i⁄_£t_s¸ìn
 (
GtkMou¡O≥øti⁄
 *
›
,

73 
GdkS¸ìn
 *
s¸ìn
);

74 
GdkS¸ìn
 *
gtk_mou¡_›î©i⁄_gë_s¸ìn
 (
GtkMou¡O≥øti⁄
 *
›
);

76 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtknotebook.h

28 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

32 #i‚de‡
__GTK_NOTEBOOK_H__


33 
	#__GTK_NOTEBOOK_H__


	)

36 
	~<gtk/gtkc⁄èöî.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_NOTEBOOK
 (
	`gtk_nŸebook_gë_ty≥
 ())

	)

42 
	#GTK_NOTEBOOK
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_NOTEBOOK
, 
GtkNŸebook
))

	)

43 
	#GTK_NOTEBOOK_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_NOTEBOOK
, 
GtkNŸebookCœss
))

	)

44 
	#GTK_IS_NOTEBOOK
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_NOTEBOOK
))

	)

45 
	#GTK_IS_NOTEBOOK_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_NOTEBOOK
))

	)

46 
	#GTK_NOTEBOOK_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_NOTEBOOK
, 
GtkNŸebookCœss
))

	)

51 
	mGTK_NOTEBOOK_TAB_FIRST
,

52 
	mGTK_NOTEBOOK_TAB_LAST


53 } 
	tGtkNŸebookTab
;

55 
_GtkNŸebook
 
	tGtkNŸebook
;

56 
_GtkNŸebookCœss
 
	tGtkNŸebookCœss
;

57 
_GtkNŸebookPage
 
	tGtkNŸebookPage
;

59 
	s_GtkNŸebook


61 
GtkC⁄èöî
 
	mc⁄èöî
;

63 
GtkNŸebookPage
 *
GSEAL
 (
cur_∑ge
);

64 
GLi°
 *
GSEAL
 (
chûdªn
);

65 
GLi°
 *
GSEAL
 (
fú°_èb
);

66 
GLi°
 *
GSEAL
 (
focus_èb
);

68 
GtkWidgë
 *
GSEAL
 (
míu
);

69 
GdkWödow
 *
GSEAL
 (
evít_wödow
);

71 
guöt32
 
GSEAL
 (
timî
);

73 
guöt16
 
GSEAL
 (
èb_hb‹dî
);

74 
guöt16
 
GSEAL
 (
èb_vb‹dî
);

76 
guöt
 
GSEAL
 (
show_èbs
) : 1;

77 
guöt
 
GSEAL
 (
homogíeous
) : 1;

78 
guöt
 
GSEAL
 (
show_b‹dî
) : 1;

79 
guöt
 
GSEAL
 (
èb_pos
) : 2;

80 
guöt
 
GSEAL
 (
s¸ﬁœbÀ
) : 1;

81 
guöt
 
GSEAL
 (
ö_chûd
) : 3;

82 
guöt
 
GSEAL
 (
˛ick_chûd
) : 3;

83 
guöt
 
GSEAL
 (
buâ⁄
) : 2;

84 
guöt
 
GSEAL
 (
√ed_timî
) : 1;

85 
guöt
 
GSEAL
 (
chûd_has_focus
) : 1;

86 
guöt
 
GSEAL
 (
have_visibÀ_chûd
) : 1;

87 
guöt
 
GSEAL
 (
focus_out
) : 1;

89 
guöt
 
GSEAL
 (
has_bef‹e_¥evious
) : 1;

90 
guöt
 
GSEAL
 (
has_bef‹e_√xt
) : 1;

91 
guöt
 
GSEAL
 (
has_a·î_¥evious
) : 1;

92 
guöt
 
GSEAL
 (
has_a·î_√xt
) : 1;

95 
	s_GtkNŸebookCœss


97 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

99 (* 
	mswôch_∑ge
Ë(
GtkNŸebook
 *
	mnŸebook
,

100 
GtkNŸebookPage
 *
	m∑ge
,

101 
guöt
 
	m∑ge_num
);

104 
gboﬁón
 (* 
£À˘_∑ge
Ë(
GtkNŸebook
 *
	mnŸebook
,

105 
gboﬁón
 
	mmove_focus
);

106 
gboﬁón
 (* 
focus_èb
Ë(
GtkNŸebook
 *
	mnŸebook
,

107 
GtkNŸebookTab
 
	mty≥
);

108 
gboﬁón
 (* 
ch™ge_cuºít_∑ge
Ë(
GtkNŸebook
 *
	mnŸebook
,

109 
göt
 
	moff£t
);

110 (* 
	mmove_focus_out
Ë(
GtkNŸebook
 *
	mnŸebook
,

111 
GtkDúe˘i⁄Ty≥
 
	mdúe˘i⁄
);

112 
gboﬁón
 (* 
ª‹dî_èb
Ë(
GtkNŸebook
 *
	mnŸebook
,

113 
GtkDúe˘i⁄Ty≥
 
	mdúe˘i⁄
,

114 
gboﬁón
 
	mmove_to_œ°
);

117 
göt
 (* 
ö£π_∑ge
Ë(
GtkNŸebook
 *
	mnŸebook
,

118 
GtkWidgë
 *
	mchûd
,

119 
GtkWidgë
 *
	mèb_œbñ
,

120 
GtkWidgë
 *
	mmíu_œbñ
,

121 
göt
 
	mposôi⁄
);

123 
	mGtkNŸebook
 * (* 
	m¸óã_wödow
Ë(
GtkNŸebook
 *
	mnŸebook
,

124 
GtkWidgë
 *
	m∑ge
,

125 
göt
 
	mx
,

126 
göt
 
	my
);

128 (*
	m_gtk_ª£rved1
) ();

131 
	gGtkNŸebook
* (*
	tGtkNŸebookWödowCª©i⁄Func
Ë(
	tGtkNŸebook
 *
	tsour˚
,

132 
	tGtkWidgë
 *
	t∑ge
,

133 
	tgöt
 
	tx
,

134 
	tgöt
 
	ty
,

135 
	tgpoöãr
 
	td©a
);

141 
GTy≥
 
	$gtk_nŸebook_gë_ty≥
 (Ë
G_GNUC_CONST
;

142 
GtkWidgë
 * 
	`gtk_nŸebook_√w
 ();

143 
göt
 
	`gtk_nŸebook_≠≥nd_∑ge
 (
GtkNŸebook
 *
nŸebook
,

144 
GtkWidgë
 *
chûd
,

145 
GtkWidgë
 *
èb_œbñ
);

146 
göt
 
	`gtk_nŸebook_≠≥nd_∑ge_míu
 (
GtkNŸebook
 *
nŸebook
,

147 
GtkWidgë
 *
chûd
,

148 
GtkWidgë
 *
èb_œbñ
,

149 
GtkWidgë
 *
míu_œbñ
);

150 
göt
 
	`gtk_nŸebook_¥ïíd_∑ge
 (
GtkNŸebook
 *
nŸebook
,

151 
GtkWidgë
 *
chûd
,

152 
GtkWidgë
 *
èb_œbñ
);

153 
göt
 
	`gtk_nŸebook_¥ïíd_∑ge_míu
 (
GtkNŸebook
 *
nŸebook
,

154 
GtkWidgë
 *
chûd
,

155 
GtkWidgë
 *
èb_œbñ
,

156 
GtkWidgë
 *
míu_œbñ
);

157 
göt
 
	`gtk_nŸebook_ö£π_∑ge
 (
GtkNŸebook
 *
nŸebook
,

158 
GtkWidgë
 *
chûd
,

159 
GtkWidgë
 *
èb_œbñ
,

160 
göt
 
posôi⁄
);

161 
göt
 
	`gtk_nŸebook_ö£π_∑ge_míu
 (
GtkNŸebook
 *
nŸebook
,

162 
GtkWidgë
 *
chûd
,

163 
GtkWidgë
 *
èb_œbñ
,

164 
GtkWidgë
 *
míu_œbñ
,

165 
göt
 
posôi⁄
);

166 
	`gtk_nŸebook_ªmove_∑ge
 (
GtkNŸebook
 *
nŸebook
,

167 
göt
 
∑ge_num
);

173 
	`gtk_nŸebook_£t_wödow_¸óti⁄_hook
 (
GtkNŸebookWödowCª©i⁄Func
 
func
,

174 
gpoöãr
 
d©a
,

175 
GDe°royNŸify
 
de°roy
);

176 #i‚de‡
GTK_DISABLE_DEPRECATED


177 
	`gtk_nŸebook_£t_group_id
 (
GtkNŸebook
 *
nŸebook
,

178 
göt
 
group_id
);

179 
göt
 
	`gtk_nŸebook_gë_group_id
 (
GtkNŸebook
 *
nŸebook
);

183 
	`gtk_nŸebook_£t_group
 (
GtkNŸebook
 *
nŸebook
,

184 
gpoöãr
 
group
);

185 
gpoöãr
 
	`gtk_nŸebook_gë_group
 (
GtkNŸebook
 *
nŸebook
);

193 
göt
 
	`gtk_nŸebook_gë_cuºít_∑ge
 (
GtkNŸebook
 *
nŸebook
);

194 
GtkWidgë
* 
	`gtk_nŸebook_gë_¡h_∑ge
 (
GtkNŸebook
 *
nŸebook
,

195 
göt
 
∑ge_num
);

196 
göt
 
	`gtk_nŸebook_gë_n_∑ges
 (
GtkNŸebook
 *
nŸebook
);

197 
göt
 
	`gtk_nŸebook_∑ge_num
 (
GtkNŸebook
 *
nŸebook
,

198 
GtkWidgë
 *
chûd
);

199 
	`gtk_nŸebook_£t_cuºít_∑ge
 (
GtkNŸebook
 *
nŸebook
,

200 
göt
 
∑ge_num
);

201 
	`gtk_nŸebook_√xt_∑ge
 (
GtkNŸebook
 *
nŸebook
);

202 
	`gtk_nŸebook_¥ev_∑ge
 (
GtkNŸebook
 *
nŸebook
);

208 
	`gtk_nŸebook_£t_show_b‹dî
 (
GtkNŸebook
 *
nŸebook
,

209 
gboﬁón
 
show_b‹dî
);

210 
gboﬁón
 
	`gtk_nŸebook_gë_show_b‹dî
 (
GtkNŸebook
 *
nŸebook
);

211 
	`gtk_nŸebook_£t_show_èbs
 (
GtkNŸebook
 *
nŸebook
,

212 
gboﬁón
 
show_èbs
);

213 
gboﬁón
 
	`gtk_nŸebook_gë_show_èbs
 (
GtkNŸebook
 *
nŸebook
);

214 
	`gtk_nŸebook_£t_èb_pos
 (
GtkNŸebook
 *
nŸebook
,

215 
GtkPosôi⁄Ty≥
 
pos
);

216 
GtkPosôi⁄Ty≥
 
	`gtk_nŸebook_gë_èb_pos
 (
GtkNŸebook
 *
nŸebook
);

218 #i‚de‡
GTK_DISABLE_DEPRECATED


219 
	`gtk_nŸebook_£t_homogíeous_èbs
 (
GtkNŸebook
 *
nŸebook
,

220 
gboﬁón
 
homogíeous
);

221 
	`gtk_nŸebook_£t_èb_b‹dî
 (
GtkNŸebook
 *
nŸebook
,

222 
guöt
 
b‹dî_width
);

223 
	`gtk_nŸebook_£t_èb_hb‹dî
 (
GtkNŸebook
 *
nŸebook
,

224 
guöt
 
èb_hb‹dî
);

225 
	`gtk_nŸebook_£t_èb_vb‹dî
 (
GtkNŸebook
 *
nŸebook
,

226 
guöt
 
èb_vb‹dî
);

229 
	`gtk_nŸebook_£t_s¸ﬁœbÀ
 (
GtkNŸebook
 *
nŸebook
,

230 
gboﬁón
 
s¸ﬁœbÀ
);

231 
gboﬁón
 
	`gtk_nŸebook_gë_s¸ﬁœbÀ
 (
GtkNŸebook
 *
nŸebook
);

237 
	`gtk_nŸebook_p›up_íabÀ
 (
GtkNŸebook
 *
nŸebook
);

238 
	`gtk_nŸebook_p›up_dißbÀ
 (
GtkNŸebook
 *
nŸebook
);

244 
GtkWidgë
 * 
	`gtk_nŸebook_gë_èb_œbñ
 (
GtkNŸebook
 *
nŸebook
,

245 
GtkWidgë
 *
chûd
);

246 
	`gtk_nŸebook_£t_èb_œbñ
 (
GtkNŸebook
 *
nŸebook
,

247 
GtkWidgë
 *
chûd
,

248 
GtkWidgë
 *
èb_œbñ
);

249 
	`gtk_nŸebook_£t_èb_œbñ_ãxt
 (
GtkNŸebook
 *
nŸebook
,

250 
GtkWidgë
 *
chûd
,

251 c⁄° 
gch¨
 *
èb_ãxt
);

252 
G_CONST_RETURN
 
gch¨
 *
	`gtk_nŸebook_gë_èb_œbñ_ãxt
 (
GtkNŸebook
 *
nŸebook
,

253 
GtkWidgë
 *
chûd
);

254 
GtkWidgë
 * 
	`gtk_nŸebook_gë_míu_œbñ
 (
GtkNŸebook
 *
nŸebook
,

255 
GtkWidgë
 *
chûd
);

256 
	`gtk_nŸebook_£t_míu_œbñ
 (
GtkNŸebook
 *
nŸebook
,

257 
GtkWidgë
 *
chûd
,

258 
GtkWidgë
 *
míu_œbñ
);

259 
	`gtk_nŸebook_£t_míu_œbñ_ãxt
 (
GtkNŸebook
 *
nŸebook
,

260 
GtkWidgë
 *
chûd
,

261 c⁄° 
gch¨
 *
míu_ãxt
);

262 
G_CONST_RETURN
 
gch¨
 *
	`gtk_nŸebook_gë_míu_œbñ_ãxt
 (
GtkNŸebook
 *
nŸebook
,

263 
GtkWidgë
 *
chûd
);

264 
	`gtk_nŸebook_quîy_èb_œbñ_∑ckög
 (
GtkNŸebook
 *
nŸebook
,

265 
GtkWidgë
 *
chûd
,

266 
gboﬁón
 *
ex∑nd
,

267 
gboﬁón
 *
fûl
,

268 
GtkPackTy≥
 *
∑ck_ty≥
);

269 
	`gtk_nŸebook_£t_èb_œbñ_∑ckög
 (
GtkNŸebook
 *
nŸebook
,

270 
GtkWidgë
 *
chûd
,

271 
gboﬁón
 
ex∑nd
,

272 
gboﬁón
 
fûl
,

273 
GtkPackTy≥
 
∑ck_ty≥
);

274 
	`gtk_nŸebook_ª‹dî_chûd
 (
GtkNŸebook
 *
nŸebook
,

275 
GtkWidgë
 *
chûd
,

276 
göt
 
posôi⁄
);

277 
gboﬁón
 
	`gtk_nŸebook_gë_èb_ª‹dîabÀ
 (
GtkNŸebook
 *
nŸebook
,

278 
GtkWidgë
 *
chûd
);

279 
	`gtk_nŸebook_£t_èb_ª‹dîabÀ
 (
GtkNŸebook
 *
nŸebook
,

280 
GtkWidgë
 *
chûd
,

281 
gboﬁón
 
ª‹dîabÀ
);

282 
gboﬁón
 
	`gtk_nŸebook_gë_èb_dëachabÀ
 (
GtkNŸebook
 *
nŸebook
,

283 
GtkWidgë
 *
chûd
);

284 
	`gtk_nŸebook_£t_èb_dëachabÀ
 (
GtkNŸebook
 *
nŸebook
,

285 
GtkWidgë
 *
chûd
,

286 
gboﬁón
 
dëachabÀ
);

288 #i‚de‡
GTK_DISABLE_DEPRECATED


289 
	#gtk_nŸebook_cuºít_∑ge
 
gtk_nŸebook_gë_cuºít_∑ge


	)

290 
	#gtk_nŸebook_£t_∑ge
 
gtk_nŸebook_£t_cuºít_∑ge


	)

293 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkobject.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_OBJECT_H__


32 
	#__GTK_OBJECT_H__


	)

35 
	~<gdkc⁄fig.h
>

36 
	~<gtk/gtkíums.h
>

37 
	~<gtk/gtkty≥utûs.h
>

38 
	~<gtk/gtkdebug.h
>

41 
	gG_BEGIN_DECLS


47 
	#GTK_TYPE_OBJECT
 (
	`gtk_obje˘_gë_ty≥
 ())

	)

48 
	#GTK_OBJECT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_OBJECT
, 
GtkObje˘
))

	)

49 
	#GTK_OBJECT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_OBJECT
, 
GtkObje˘Cœss
))

	)

50 
	#GTK_IS_OBJECT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_OBJECT
))

	)

51 
	#GTK_IS_OBJECT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_OBJECT
))

	)

52 
	#GTK_OBJECT_GET_CLASS
(
obje˘
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obje˘), 
GTK_TYPE_OBJECT
, 
GtkObje˘Cœss
))

	)

56 
	#GTK_OBJECT_TYPE
(
obje˘
Ë(
	`G_TYPE_FROM_INSTANCE
 (obje˘))

	)

57 
	#GTK_OBJECT_TYPE_NAME
(
obje˘
Ë(
	`g_ty≥_«me
 (
	`GTK_OBJECT_TYPE
 (obje˘)))

	)

66 
	mGTK_IN_DESTRUCTION
 = 1 << 0,

67 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
)

68 
	mGTK_FLOATING
 = 1 << 1,

70 
	mGTK_RESERVED_1
 = 1 << 2,

71 
	mGTK_RESERVED_2
 = 1 << 3

72 } 
	tGtkObje˘Fœgs
;

76 
	#GTK_OBJECT_FLAGS
(
obj
Ë(
	`GTK_OBJECT
 (obj)->
Êags
)

	)

77 #i‚de‡
GTK_DISABLE_DEPRECATED


78 
	#GTK_OBJECT_FLOATING
(
obj
Ë(
	`g_obje˘_is_Êﬂtög
 (obj))

	)

83 
	#GTK_OBJECT_SET_FLAGS
(
obj
,
Êag
Ë
G_STMT_START
{ (
	`GTK_OBJECT_FLAGS
 (objË|(Êag)); }
G_STMT_END


	)

84 
	#GTK_OBJECT_UNSET_FLAGS
(
obj
,
Êag
Ë
G_STMT_START
{ (
	`GTK_OBJECT_FLAGS
 (objË&~(Êag)); }
G_STMT_END


	)

86 
_GtkObje˘Cœss
 
	tGtkObje˘Cœss
;

89 
	s_GtkObje˘


91 
GInôüŒyUnow√d
 
	m∑ª¡_ö°™˚
;

98 
guöt32
 
GSEAL
 (
Êags
);

101 
	s_GtkObje˘Cœss


103 
GInôüŒyUnow√dCœss
 
	m∑ª¡_˛ass
;

106 (*
	m£t_¨g
Ë(
GtkObje˘
 *
	mobje˘
,

107 
GtkArg
 *
	m¨g
,

108 
guöt
 
	m¨g_id
);

109 (*
	mgë_¨g
Ë(
GtkObje˘
 *
	mobje˘
,

110 
GtkArg
 *
	m¨g
,

111 
guöt
 
	m¨g_id
);

121 (*
	mde°roy
Ë(
GtkObje˘
 *
	mobje˘
);

128 
GTy≥
 
	$gtk_obje˘_gë_ty≥
 (Ë
G_GNUC_CONST
;

130 #i‚de‡
GTK_DISABLE_DEPRECATED


131 
	`gtk_obje˘_sök
 (
GtkObje˘
 *
obje˘
);

133 
	`gtk_obje˘_de°roy
 (
GtkObje˘
 *
obje˘
);

137 #i‚de‡
GTK_DISABLE_DEPRECATED


139 
GtkObje˘
* 
	`gtk_obje˘_√w
 (
GTy≥
 
ty≥
,

140 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

142 
GtkObje˘
* 
	`gtk_obje˘_ªf
 (GtkObje˘ *
obje˘
);

143 
	`gtk_obje˘_uƒef
 (
GtkObje˘
 *
obje˘
);

144 
	`gtk_obje˘_wókªf
 (
GtkObje˘
 *
obje˘
,

145 
GDe°royNŸify
 
nŸify
,

146 
gpoöãr
 
d©a
);

147 
	`gtk_obje˘_wókuƒef
 (
GtkObje˘
 *
obje˘
,

148 
GDe°royNŸify
 
nŸify
,

149 
gpoöãr
 
d©a
);

163 
	`gtk_obje˘_£t_d©a
 (
GtkObje˘
 *
obje˘
,

164 c⁄° 
gch¨
 *
key
,

165 
gpoöãr
 
d©a
);

166 
	`gtk_obje˘_£t_d©a_fuŒ
 (
GtkObje˘
 *
obje˘
,

167 c⁄° 
gch¨
 *
key
,

168 
gpoöãr
 
d©a
,

169 
GDe°royNŸify
 
de°roy
);

170 
	`gtk_obje˘_ªmove_d©a
 (
GtkObje˘
 *
obje˘
,

171 c⁄° 
gch¨
 *
key
);

172 
gpoöãr
 
	`gtk_obje˘_gë_d©a
 (
GtkObje˘
 *
obje˘
,

173 c⁄° 
gch¨
 *
key
);

174 
	`gtk_obje˘_ªmove_no_nŸify
 (
GtkObje˘
 *
obje˘
,

175 c⁄° 
gch¨
 *
key
);

182 
	`gtk_obje˘_£t_u£r_d©a
 (
GtkObje˘
 *
obje˘
,

183 
gpoöãr
 
d©a
);

184 
gpoöãr
 
	`gtk_obje˘_gë_u£r_d©a
 (
GtkObje˘
 *
obje˘
);

190 
	`gtk_obje˘_£t_d©a_by_id
 (
GtkObje˘
 *
obje˘
,

191 
GQu¨k
 
d©a_id
,

192 
gpoöãr
 
d©a
);

193 
	`gtk_obje˘_£t_d©a_by_id_fuŒ
 (
GtkObje˘
 *
obje˘
,

194 
GQu¨k
 
d©a_id
,

195 
gpoöãr
 
d©a
,

196 
GDe°royNŸify
 
de°roy
);

197 
gpoöãr
 
	`gtk_obje˘_gë_d©a_by_id
 (
GtkObje˘
 *
obje˘
,

198 
GQu¨k
 
d©a_id
);

199 
	`gtk_obje˘_ªmove_d©a_by_id
 (
GtkObje˘
 *
obje˘
,

200 
GQu¨k
 
d©a_id
);

201 
	`gtk_obje˘_ªmove_no_nŸify_by_id
 (
GtkObje˘
 *
obje˘
,

202 
GQu¨k
 
key_id
);

203 
	#gtk_obje˘_d©a_åy_key
 
g_qu¨k_åy_°rög


	)

204 
	#gtk_obje˘_d©a_f‹˚_id
 
g_qu¨k_‰om_°rög


	)

210 
GTK_ARG_READABLE
 = 
G_PARAM_READABLE
,

211 
GTK_ARG_WRITABLE
 = 
G_PARAM_WRITABLE
,

212 
GTK_ARG_CONSTRUCT
 = 
G_PARAM_CONSTRUCT
,

213 
GTK_ARG_CONSTRUCT_ONLY
 = 
G_PARAM_CONSTRUCT_ONLY
,

214 
GTK_ARG_CHILD_ARG
 = 1 << 4

215 } 
	tGtkArgFœgs
;

216 
	#GTK_ARG_READWRITE
 (
GTK_ARG_READABLE
 | 
GTK_ARG_WRITABLE
)

	)

217 
	$gtk_obje˘_gë
 (
GtkObje˘
 *
obje˘
,

218 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

219 ...Ë
G_GNUC_NULL_TERMINATED
;

220 
	$gtk_obje˘_£t
 (
GtkObje˘
 *
obje˘
,

221 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

222 ...Ë
G_GNUC_NULL_TERMINATED
;

223 
	`gtk_obje˘_add_¨g_ty≥
 (c⁄° 
gch¨
 *
¨g_«me
,

224 
GTy≥
 
¨g_ty≥
,

225 
guöt
 
¨g_Êags
,

226 
guöt
 
¨g_id
);

230 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkoldeditable.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_OLD_EDITABLE_H__


30 
	#__GTK_OLD_EDITABLE_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_OLD_EDITABLE
 (
	`gtk_ﬁd_edôabÀ_gë_ty≥
 ())

	)

38 
	#GTK_OLD_EDITABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_OLD_EDITABLE
, 
GtkOldEdôabÀ
))

	)

39 
	#GTK_OLD_EDITABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_OLD_EDITABLE
, 
GtkOldEdôabÀCœss
))

	)

40 
	#GTK_IS_OLD_EDITABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_OLD_EDITABLE
))

	)

41 
	#GTK_IS_OLD_EDITABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_OLD_EDITABLE
))

	)

42 
	#GTK_OLD_EDITABLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_OLD_EDITABLE
, 
GtkOldEdôabÀCœss
))

	)

45 
_GtkOldEdôabÀ
 
	tGtkOldEdôabÀ
;

46 
_GtkOldEdôabÀCœss
 
	tGtkOldEdôabÀCœss
;

48 (*
	tGtkTextFun˘i⁄
Ë(
	tGtkOldEdôabÀ
 *
	tedôabÀ
, 
	tguöt32
 
	ttime_
);

50 
	s_GtkOldEdôabÀ


52 
GtkWidgë
 
widgë
;

55 
guöt
 
cuºít_pos
;

57 
guöt
 
£À˘i⁄_°¨t_pos
;

58 
guöt
 
£À˘i⁄_íd_pos
;

59 
guöt
 
has_£À˘i⁄
 : 1;

62 
guöt
 
edôabÀ
 : 1;

63 
guöt
 
visibÀ
 : 1;

65 
gch¨
 *
˛ùbﬂrd_ãxt
;

68 
	s_GtkOldEdôabÀCœss


70 
GtkWidgëCœss
 
∑ª¡_˛ass
;

73 (* 
a˘iv©e
Ë(
GtkOldEdôabÀ
 *
edôabÀ
);

74 (* 
£t_edôabÀ
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

75 
gboﬁón
 
is_edôabÀ
);

76 (* 
move_curs‹
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

77 
göt
 
x
,

78 
göt
 
y
);

79 (* 
move_w‹d
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

80 
göt
 
n
);

81 (* 
move_∑ge
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

82 
göt
 
x
,

83 
göt
 
y
);

84 (* 
move_to_row
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

85 
göt
 
row
);

86 (* 
move_to_cﬁumn
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

87 
göt
 
row
);

88 (* 
kûl_ch¨
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

89 
göt
 
dúe˘i⁄
);

90 (* 
kûl_w‹d
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

91 
göt
 
dúe˘i⁄
);

92 (* 
kûl_löe
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

93 
göt
 
dúe˘i⁄
);

94 (* 
cut_˛ùbﬂrd
Ë(
GtkOldEdôabÀ
 *
edôabÀ
);

95 (* 
c›y_˛ùbﬂrd
Ë(
GtkOldEdôabÀ
 *
edôabÀ
);

96 (* 
∑°e_˛ùbﬂrd
Ë(
GtkOldEdôabÀ
 *
edôabÀ
);

103 (* 
upd©e_ãxt
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

104 
göt
 
°¨t_pos
,

105 
göt
 
íd_pos
);

106 
gch¨
* (* 
gë_ch¨s
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

107 
göt
 
°¨t_pos
,

108 
göt
 
íd_pos
);

109 (* 
£t_£À˘i⁄
)(
GtkOldEdôabÀ
 *
edôabÀ
,

110 
göt
 
°¨t_pos
,

111 
göt
 
íd_pos
);

112 (* 
£t_posôi⁄
Ë(
GtkOldEdôabÀ
 *
edôabÀ
,

113 
göt
 
posôi⁄
);

116 
GTy≥
 
	$gtk_ﬁd_edôabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

117 
	`gtk_ﬁd_edôabÀ_˛aim_£À˘i⁄
 (
GtkOldEdôabÀ
 *
ﬁd_edôabÀ
,

118 
gboﬁón
 
˛aim
,

119 
guöt32
 
time_
);

120 
	`gtk_ﬁd_edôabÀ_ch™ged
 (
GtkOldEdôabÀ
 *
ﬁd_edôabÀ
);

122 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkoptionmenu.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_OPTION_MENU_H__


30 
	#__GTK_OPTION_MENU_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_OPTION_MENU
 (
	`gtk_›ti⁄_míu_gë_ty≥
 ())

	)

38 
	#GTK_OPTION_MENU
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_OPTION_MENU
, 
GtkO±i⁄Míu
))

	)

39 
	#GTK_OPTION_MENU_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_OPTION_MENU
, 
GtkO±i⁄MíuCœss
))

	)

40 
	#GTK_IS_OPTION_MENU
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_OPTION_MENU
))

	)

41 
	#GTK_IS_OPTION_MENU_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_OPTION_MENU
))

	)

42 
	#GTK_OPTION_MENU_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_OPTION_MENU
, 
GtkO±i⁄MíuCœss
))

	)

45 
_GtkO±i⁄Míu
 
	tGtkO±i⁄Míu
;

46 
_GtkO±i⁄MíuCœss
 
	tGtkO±i⁄MíuCœss
;

48 
	s_GtkO±i⁄Míu


50 
GtkBuâ⁄
 
	mbuâ⁄
;

52 
GtkWidgë
 *
	mmíu
;

53 
GtkWidgë
 *
	mmíu_ôem
;

55 
guöt16
 
	mwidth
;

56 
guöt16
 
	mheight
;

59 
	s_GtkO±i⁄MíuCœss


61 
GtkBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

63 (*
	mch™ged
Ë(
GtkO±i⁄Míu
 *
	m›ti⁄_míu
);

66 (*
	m_gtk_ª£rved1
) ();

67 (*
	m_gtk_ª£rved2
) ();

68 (*
	m_gtk_ª£rved3
) ();

69 (*
	m_gtk_ª£rved4
) ();

73 
GTy≥
 
	$gtk_›ti⁄_míu_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
GtkWidgë
* 
	`gtk_›ti⁄_míu_√w
 ();

75 
GtkWidgë
* 
	`gtk_›ti⁄_míu_gë_míu
 (
GtkO±i⁄Míu
 *
›ti⁄_míu
);

76 
	`gtk_›ti⁄_míu_£t_míu
 (
GtkO±i⁄Míu
 *
›ti⁄_míu
,

77 
GtkWidgë
 *
míu
);

78 
	`gtk_›ti⁄_míu_ªmove_míu
 (
GtkO±i⁄Míu
 *
›ti⁄_míu
);

79 
göt
 
	`gtk_›ti⁄_míu_gë_hi°‹y
 (
GtkO±i⁄Míu
 *
›ti⁄_míu
);

80 
	`gtk_›ti⁄_míu_£t_hi°‹y
 (
GtkO±i⁄Míu
 *
›ti⁄_míu
,

81 
guöt
 
ödex_
);

84 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkorientable.h

24 #i‡!
deföed
 (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

28 #i‚de‡
__GTK_ORIENTABLE_H__


29 
	#__GTK_ORIENTABLE_H__


	)

31 
	~<gtk/gtkwidgë.h
>

33 
	gG_BEGIN_DECLS


35 
	#GTK_TYPE_ORIENTABLE
 (
	`gtk_‹õ¡abÀ_gë_ty≥
 ())

	)

36 
	#GTK_ORIENTABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_ORIENTABLE
, 
GtkOrõ¡abÀ
))

	)

37 
	#GTK_ORIENTABLE_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_ORIENTABLE
, 
GtkOrõ¡abÀIÁ˚
))

	)

38 
	#GTK_IS_ORIENTABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_ORIENTABLE
))

	)

39 
	#GTK_IS_ORIENTABLE_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_ORIENTABLE
))

	)

40 
	#GTK_ORIENTABLE_GET_IFACE
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((ö°), 
GTK_TYPE_ORIENTABLE
, 
GtkOrõ¡abÀIÁ˚
))

	)

43 
_GtkOrõ¡abÀ
 
	tGtkOrõ¡abÀ
;

44 
_GtkOrõ¡abÀIÁ˚
 
	tGtkOrõ¡abÀIÁ˚
;

46 
	s_GtkOrõ¡abÀIÁ˚


48 
GTy≥I¡îÁ˚
 
	mba£_iÁ˚
;

52 
GTy≥
 
	$gtk_‹õ¡abÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

54 
	`gtk_‹õ¡abÀ_£t_‹õ¡©i⁄
 (
GtkOrõ¡abÀ
 *
‹õ¡abÀ
,

55 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

56 
GtkOrõ¡©i⁄
 
	`gtk_‹õ¡abÀ_gë_‹õ¡©i⁄
 (
GtkOrõ¡abÀ
 *
‹õ¡abÀ
);

58 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkpagesetup.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_PAGE_SETUP_H__


26 
	#__GTK_PAGE_SETUP_H__


	)

29 
	~<gtk/gtk∑≥rsize.h
>

32 
G_BEGIN_DECLS


34 
_GtkPageSëup
 
	tGtkPageSëup
;

36 
	#GTK_TYPE_PAGE_SETUP
 (
	`gtk_∑ge_£tup_gë_ty≥
 ())

	)

37 
	#GTK_PAGE_SETUP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PAGE_SETUP
, 
GtkPageSëup
))

	)

38 
	#GTK_IS_PAGE_SETUP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PAGE_SETUP
))

	)

40 
GTy≥
 
	$gtk_∑ge_£tup_gë_ty≥
 (Ë
G_GNUC_CONST
;

41 
GtkPageSëup
 * 
	`gtk_∑ge_£tup_√w
 ();

42 
GtkPageSëup
 * 
	`gtk_∑ge_£tup_c›y
 (GtkPageSëu∞*
Ÿhî
);

43 
GtkPageOrõ¡©i⁄
 
	`gtk_∑ge_£tup_gë_‹õ¡©i⁄
 (
GtkPageSëup
 *
£tup
);

44 
	`gtk_∑ge_£tup_£t_‹õ¡©i⁄
 (
GtkPageSëup
 *
£tup
,

45 
GtkPageOrõ¡©i⁄
 
‹õ¡©i⁄
);

46 
GtkP≠îSize
 * 
	`gtk_∑ge_£tup_gë_∑≥r_size
 (
GtkPageSëup
 *
£tup
);

47 
	`gtk_∑ge_£tup_£t_∑≥r_size
 (
GtkPageSëup
 *
£tup
,

48 
GtkP≠îSize
 *
size
);

49 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_t›_m¨gö
 (
GtkPageSëup
 *
£tup
,

50 
GtkUnô
 
unô
);

51 
	`gtk_∑ge_£tup_£t_t›_m¨gö
 (
GtkPageSëup
 *
£tup
,

52 
gdoubÀ
 
m¨gö
,

53 
GtkUnô
 
unô
);

54 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_bŸtom_m¨gö
 (
GtkPageSëup
 *
£tup
,

55 
GtkUnô
 
unô
);

56 
	`gtk_∑ge_£tup_£t_bŸtom_m¨gö
 (
GtkPageSëup
 *
£tup
,

57 
gdoubÀ
 
m¨gö
,

58 
GtkUnô
 
unô
);

59 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_À·_m¨gö
 (
GtkPageSëup
 *
£tup
,

60 
GtkUnô
 
unô
);

61 
	`gtk_∑ge_£tup_£t_À·_m¨gö
 (
GtkPageSëup
 *
£tup
,

62 
gdoubÀ
 
m¨gö
,

63 
GtkUnô
 
unô
);

64 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_right_m¨gö
 (
GtkPageSëup
 *
£tup
,

65 
GtkUnô
 
unô
);

66 
	`gtk_∑ge_£tup_£t_right_m¨gö
 (
GtkPageSëup
 *
£tup
,

67 
gdoubÀ
 
m¨gö
,

68 
GtkUnô
 
unô
);

70 
	`gtk_∑ge_£tup_£t_∑≥r_size_™d_deÁu…_m¨gös
 (
GtkPageSëup
 *
£tup
,

71 
GtkP≠îSize
 *
size
);

74 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_∑≥r_width
 (
GtkPageSëup
 *
£tup
,

75 
GtkUnô
 
unô
);

76 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_∑≥r_height
 (
GtkPageSëup
 *
£tup
,

77 
GtkUnô
 
unô
);

81 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_∑ge_width
 (
GtkPageSëup
 *
£tup
,

82 
GtkUnô
 
unô
);

83 
gdoubÀ
 
	`gtk_∑ge_£tup_gë_∑ge_height
 (
GtkPageSëup
 *
£tup
,

84 
GtkUnô
 
unô
);

87 
GtkPageSëup
 *
	`gtk_∑ge_£tup_√w_‰om_fûe
 (c⁄° 
gch¨
 *
fûe_«me
,

88 
GEº‹
 **
îr‹
);

89 
gboﬁón
 
	`gtk_∑ge_£tup_lﬂd_fûe
 (
GtkPageSëup
 *
£tup
,

90 c⁄° *
fûe_«me
,

91 
GEº‹
 **
îr‹
);

92 
gboﬁón
 
	`gtk_∑ge_£tup_to_fûe
 (
GtkPageSëup
 *
£tup
,

93 c⁄° *
fûe_«me
,

94 
GEº‹
 **
îr‹
);

95 
GtkPageSëup
 *
	`gtk_∑ge_£tup_√w_‰om_key_fûe
 (
GKeyFûe
 *
key_fûe
,

96 c⁄° 
gch¨
 *
group_«me
,

97 
GEº‹
 **
îr‹
);

98 
gboﬁón
 
	`gtk_∑ge_£tup_lﬂd_key_fûe
 (
GtkPageSëup
 *
£tup
,

99 
GKeyFûe
 *
key_fûe
,

100 c⁄° 
gch¨
 *
group_«me
,

101 
GEº‹
 **
îr‹
);

102 
	`gtk_∑ge_£tup_to_key_fûe
 (
GtkPageSëup
 *
£tup
,

103 
GKeyFûe
 *
key_fûe
,

104 c⁄° 
gch¨
 *
group_«me
);

106 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkpaned.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_PANED_H__


32 
	#__GTK_PANED_H__


	)

34 
	~<gtk/gtkc⁄èöî.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_PANED
 (
	`gtk_∑√d_gë_ty≥
 ())

	)

39 
	#GTK_PANED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PANED
, 
GtkP™ed
))

	)

40 
	#GTK_PANED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PANED
, 
GtkP™edCœss
))

	)

41 
	#GTK_IS_PANED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PANED
))

	)

42 
	#GTK_IS_PANED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PANED
))

	)

43 
	#GTK_PANED_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PANED
, 
GtkP™edCœss
))

	)

46 
_GtkP™ed
 
	tGtkP™ed
;

47 
_GtkP™edCœss
 
	tGtkP™edCœss
;

48 
_GtkP™edPriv©e
 
	tGtkP™edPriv©e
;

50 
	s_GtkP™ed


52 
GtkC⁄èöî
 
	mc⁄èöî
;

54 
GtkWidgë
 *
GSEAL
 (
chûd1
);

55 
GtkWidgë
 *
GSEAL
 (
chûd2
);

57 
GdkWödow
 *
GSEAL
 (
h™dÀ
);

58 
GdkGC
 *
GSEAL
 (
x‹_gc
);

59 
GdkCurs‹Ty≥
 
GSEAL
 (
curs‹_ty≥
);

62 
GdkRe˘™gÀ
 
GSEAL
 (
h™dÀ_pos
);

64 
göt
 
GSEAL
 (
chûd1_size
);

65 
göt
 
GSEAL
 (
œ°_Æloˇti⁄
);

66 
göt
 
GSEAL
 (
mö_posôi⁄
);

67 
göt
 
GSEAL
 (
max_posôi⁄
);

69 
guöt
 
GSEAL
 (
posôi⁄_£t
) : 1;

70 
guöt
 
GSEAL
 (
ö_døg
) : 1;

71 
guöt
 
GSEAL
 (
chûd1_shrök
) : 1;

72 
guöt
 
GSEAL
 (
chûd1_ªsize
) : 1;

73 
guöt
 
GSEAL
 (
chûd2_shrök
) : 1;

74 
guöt
 
GSEAL
 (
chûd2_ªsize
) : 1;

75 
guöt
 
GSEAL
 (
‹õ¡©i⁄
) : 1;

76 
guöt
 
GSEAL
 (
ö_ªcursi⁄
) : 1;

77 
guöt
 
GSEAL
 (
h™dÀ_¥ñô
) : 1;

79 
GtkWidgë
 *
GSEAL
 (
œ°_chûd1_focus
);

80 
GtkWidgë
 *
GSEAL
 (
œ°_chûd2_focus
);

81 
GtkP™edPriv©e
 *
GSEAL
 (
¥iv
);

83 
göt
 
GSEAL
 (
døg_pos
);

84 
göt
 
GSEAL
 (
‹igöÆ_posôi⁄
);

87 
	s_GtkP™edCœss


89 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

91 
gboﬁón
 (* 
cy˛e_chûd_focus
Ë(
GtkP™ed
 *
	m∑√d
,

92 
gboﬁón
 
	mªvî£
);

93 
gboﬁón
 (* 
toggÀ_h™dÀ_focus
Ë(
GtkP™ed
 *
	m∑√d
);

94 
gboﬁón
 (* 
move_h™dÀ
Ë(
GtkP™ed
 *
	m∑√d
,

95 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl
);

96 
gboﬁón
 (* 
cy˛e_h™dÀ_focus
Ë(
GtkP™ed
 *
	m∑√d
,

97 
gboﬁón
 
	mªvî£
);

98 
gboﬁón
 (* 
ac˚±_posôi⁄
Ë(
GtkP™ed
 *
	m∑√d
);

99 
gboﬁón
 (* 
ˇn˚l_posôi⁄
Ë(
GtkP™ed
 *
	m∑√d
);

102 (*
	m_gtk_ª£rved1
) ();

103 (*
	m_gtk_ª£rved2
) ();

104 (*
	m_gtk_ª£rved3
) ();

105 (*
	m_gtk_ª£rved4
) ();

109 
GTy≥
 
	$gtk_∑√d_gë_ty≥
 (Ë
G_GNUC_CONST
;

110 
	`gtk_∑√d_add1
 (
GtkP™ed
 *
∑√d
,

111 
GtkWidgë
 *
chûd
);

112 
	`gtk_∑√d_add2
 (
GtkP™ed
 *
∑√d
,

113 
GtkWidgë
 *
chûd
);

114 
	`gtk_∑√d_∑ck1
 (
GtkP™ed
 *
∑√d
,

115 
GtkWidgë
 *
chûd
,

116 
gboﬁón
 
ªsize
,

117 
gboﬁón
 
shrök
);

118 
	`gtk_∑√d_∑ck2
 (
GtkP™ed
 *
∑√d
,

119 
GtkWidgë
 *
chûd
,

120 
gboﬁón
 
ªsize
,

121 
gboﬁón
 
shrök
);

123 
göt
 
	`gtk_∑√d_gë_posôi⁄
 (
GtkP™ed
 *
∑√d
);

124 
	`gtk_∑√d_£t_posôi⁄
 (
GtkP™ed
 *
∑√d
,

125 
göt
 
posôi⁄
);

127 
GtkWidgë
 * 
	`gtk_∑√d_gë_chûd1
 (
GtkP™ed
 *
∑√d
);

128 
GtkWidgë
 * 
	`gtk_∑√d_gë_chûd2
 (
GtkP™ed
 *
∑√d
);

130 #i‚de‡
GTK_DISABLE_DEPRECATED


132 
	`gtk_∑√d_compuã_posôi⁄
 (
GtkP™ed
 *
∑√d
,

133 
göt
 
Æloˇti⁄
,

134 
göt
 
chûd1_ªq
,

135 
göt
 
chûd2_ªq
);

136 
	#gtk_∑√d_guâî_size
(
p
,
s
Ë(Ë0

	)

137 
	#gtk_∑√d_£t_guâî_size
(
p
,
s
Ë(Ë0

	)

140 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkpapersize.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_PAPER_SIZE_H__


26 
	#__GTK_PAPER_SIZE_H__


	)

29 
	~<gtk/gtkíums.h
>

32 
G_BEGIN_DECLS


34 
_GtkP≠îSize
 
	tGtkP≠îSize
;

36 
	#GTK_TYPE_PAPER_SIZE
 (
	`gtk_∑≥r_size_gë_ty≥
 ())

	)

39 
	#GTK_PAPER_NAME_A3
 "iso_a3"

	)

40 
	#GTK_PAPER_NAME_A4
 "iso_a4"

	)

41 
	#GTK_PAPER_NAME_A5
 "iso_a5"

	)

42 
	#GTK_PAPER_NAME_B5
 "iso_b5"

	)

43 
	#GTK_PAPER_NAME_LETTER
 "«_Àâî"

	)

44 
	#GTK_PAPER_NAME_EXECUTIVE
 "«_executive"

	)

45 
	#GTK_PAPER_NAME_LEGAL
 "«_ÀgÆ"

	)

47 
GTy≥
 
	$gtk_∑≥r_size_gë_ty≥
 (Ë
G_GNUC_CONST
;

49 
GtkP≠îSize
 *
	`gtk_∑≥r_size_√w
 (c⁄° 
gch¨
 *
«me
);

50 
GtkP≠îSize
 *
	`gtk_∑≥r_size_√w_‰om_µd
 (c⁄° 
gch¨
 *
µd_«me
,

51 c⁄° 
gch¨
 *
µd_di•œy_«me
,

52 
gdoubÀ
 
width
,

53 
gdoubÀ
 
height
);

54 
GtkP≠îSize
 *
	`gtk_∑≥r_size_√w_cu°om
 (c⁄° 
gch¨
 *
«me
,

55 c⁄° 
gch¨
 *
di•œy_«me
,

56 
gdoubÀ
 
width
,

57 
gdoubÀ
 
height
,

58 
GtkUnô
 
unô
);

59 
GtkP≠îSize
 *
	`gtk_∑≥r_size_c›y
 (GtkP≠îSizê*
Ÿhî
);

60 
	`gtk_∑≥r_size_‰ì
 (
GtkP≠îSize
 *
size
);

61 
gboﬁón
 
	`gtk_∑≥r_size_is_equÆ
 (
GtkP≠îSize
 *
size1
,

62 
GtkP≠îSize
 *
size2
);

64 
GLi°
 *
	`gtk_∑≥r_size_gë_∑≥r_sizes
 (
gboﬁón
 
ö˛ude_cu°om
);

67 
G_CONST_RETURN
 
gch¨
 *
	`gtk_∑≥r_size_gë_«me
 (
GtkP≠îSize
 *
size
);

68 
G_CONST_RETURN
 
gch¨
 *
	`gtk_∑≥r_size_gë_di•œy_«me
 (
GtkP≠îSize
 *
size
);

69 
G_CONST_RETURN
 
gch¨
 *
	`gtk_∑≥r_size_gë_µd_«me
 (
GtkP≠îSize
 *
size
);

71 
gdoubÀ
 
	`gtk_∑≥r_size_gë_width
 (
GtkP≠îSize
 *
size
, 
GtkUnô
 
unô
);

72 
gdoubÀ
 
	`gtk_∑≥r_size_gë_height
 (
GtkP≠îSize
 *
size
, 
GtkUnô
 
unô
);

73 
gboﬁón
 
	`gtk_∑≥r_size_is_cu°om
 (
GtkP≠îSize
 *
size
);

76 
	`gtk_∑≥r_size_£t_size
 (
GtkP≠îSize
 *
size
,

77 
gdoubÀ
 
width
,

78 
gdoubÀ
 
height
,

79 
GtkUnô
 
unô
);

81 
gdoubÀ
 
	`gtk_∑≥r_size_gë_deÁu…_t›_m¨gö
 (
GtkP≠îSize
 *
size
,

82 
GtkUnô
 
unô
);

83 
gdoubÀ
 
	`gtk_∑≥r_size_gë_deÁu…_bŸtom_m¨gö
 (
GtkP≠îSize
 *
size
,

84 
GtkUnô
 
unô
);

85 
gdoubÀ
 
	`gtk_∑≥r_size_gë_deÁu…_À·_m¨gö
 (
GtkP≠îSize
 *
size
,

86 
GtkUnô
 
unô
);

87 
gdoubÀ
 
	`gtk_∑≥r_size_gë_deÁu…_right_m¨gö
 (
GtkP≠îSize
 *
size
,

88 
GtkUnô
 
unô
);

90 
G_CONST_RETURN
 
gch¨
 *
	`gtk_∑≥r_size_gë_deÁu…
 ();

92 
GtkP≠îSize
 *
	`gtk_∑≥r_size_√w_‰om_key_fûe
 (
GKeyFûe
 *
key_fûe
,

93 c⁄° 
gch¨
 *
group_«me
,

94 
GEº‹
 **
îr‹
);

95 
	`gtk_∑≥r_size_to_key_fûe
 (
GtkP≠îSize
 *
size
,

96 
GKeyFûe
 *
key_fûe
,

97 c⁄° 
gch¨
 *
group_«me
);

99 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkpixmap.h

27 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_PIXMAP_C__
)

29 #i‚de‡
__GTK_PIXMAP_H__


30 
	#__GTK_PIXMAP_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_PIXMAP
 (
	`gtk_pixm≠_gë_ty≥
 ())

	)

38 
	#GTK_PIXMAP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PIXMAP
, 
GtkPixm≠
))

	)

39 
	#GTK_PIXMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PIXMAP
, 
GtkPixm≠Cœss
))

	)

40 
	#GTK_IS_PIXMAP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PIXMAP
))

	)

41 
	#GTK_IS_PIXMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PIXMAP
))

	)

42 
	#GTK_PIXMAP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PIXMAP
, 
GtkPixm≠Cœss
))

	)

45 
_GtkPixm≠
 
	tGtkPixm≠
;

46 
_GtkPixm≠Cœss
 
	tGtkPixm≠Cœss
;

48 
	s_GtkPixm≠


50 
GtkMisc
 
	mmisc
;

52 
GdkPixm≠
 *
	mpixm≠
;

53 
GdkBôm≠
 *
	mmask
;

55 
GdkPixm≠
 *
	mpixm≠_ö£nsôive
;

56 
guöt
 
	mbuûd_ö£nsôive
 : 1;

59 
	s_GtkPixm≠Cœss


61 
GtkMiscCœss
 
	m∑ª¡_˛ass
;

65 
GTy≥
 
	$gtk_pixm≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

66 
GtkWidgë
* 
	`gtk_pixm≠_√w
 (
GdkPixm≠
 *
pixm≠
,

67 
GdkBôm≠
 *
mask
);

68 
	`gtk_pixm≠_£t
 (
GtkPixm≠
 *
pixm≠
,

69 
GdkPixm≠
 *
vÆ
,

70 
GdkBôm≠
 *
mask
);

71 
	`gtk_pixm≠_gë
 (
GtkPixm≠
 *
pixm≠
,

72 
GdkPixm≠
 **
vÆ
,

73 
GdkBôm≠
 **
mask
);

75 
	`gtk_pixm≠_£t_buûd_ö£nsôive
 (
GtkPixm≠
 *
pixm≠
,

76 
gboﬁón
 
buûd
);

79 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkplug.h

26 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

30 #i‚de‡
__GTK_PLUG_H__


31 
	#__GTK_PLUG_H__


	)

34 
	~<gtk/gtksockë.h
>

35 
	~<gtk/gtkwödow.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_PLUG
 (
	`gtk_∂ug_gë_ty≥
 ())

	)

41 
	#GTK_PLUG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PLUG
, 
GtkPlug
))

	)

42 
	#GTK_PLUG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PLUG
, 
GtkPlugCœss
))

	)

43 
	#GTK_IS_PLUG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PLUG
))

	)

44 
	#GTK_IS_PLUG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PLUG
))

	)

45 
	#GTK_PLUG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PLUG
, 
GtkPlugCœss
))

	)

48 
_GtkPlug
 
	tGtkPlug
;

49 
_GtkPlugCœss
 
	tGtkPlugCœss
;

52 
	s_GtkPlug


54 
GtkWödow
 
	mwödow
;

56 
GdkWödow
 *
GSEAL
 (
sockë_wödow
);

57 
GtkWidgë
 *
GSEAL
 (
modÆôy_wödow
);

58 
GtkWödowGroup
 *
GSEAL
 (
modÆôy_group
);

59 
GHashTabÀ
 *
GSEAL
 (
gøbbed_keys
);

61 
guöt
 
GSEAL
 (
ßme_≠p
) : 1;

64 
	s_GtkPlugCœss


66 
GtkWödowCœss
 
	m∑ª¡_˛ass
;

68 (*
	membedded
Ë(
GtkPlug
 *
	m∂ug
);

71 (*
	m_gtk_ª£rved1
) ();

72 (*
	m_gtk_ª£rved2
) ();

73 (*
	m_gtk_ª£rved3
) ();

74 (*
	m_gtk_ª£rved4
) ();

78 
GTy≥
 
	$gtk_∂ug_gë_ty≥
 (Ë
G_GNUC_CONST
;

80 #i‚de‡
GDK_MULTIHEAD_SAFE


81 
	`gtk_∂ug_c⁄°ru˘
 (
GtkPlug
 *
∂ug
,

82 
GdkN©iveWödow
 
sockë_id
);

83 
GtkWidgë
* 
	`gtk_∂ug_√w
 (
GdkN©iveWödow
 
sockë_id
);

86 
	`gtk_∂ug_c⁄°ru˘_f‹_di•œy
 (
GtkPlug
 *
∂ug
,

87 
GdkDi•œy
 *
di•œy
,

88 
GdkN©iveWödow
 
sockë_id
);

89 
GtkWidgë
* 
	`gtk_∂ug_√w_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

90 
GdkN©iveWödow
 
sockë_id
);

92 
GdkN©iveWödow
 
	`gtk_∂ug_gë_id
 (
GtkPlug
 *
∂ug
);

94 
gboﬁón
 
	`gtk_∂ug_gë_embedded
 (
GtkPlug
 *
∂ug
);

96 
GdkWödow
 *
	`gtk_∂ug_gë_sockë_wödow
 (
GtkPlug
 *
∂ug
);

98 
	`_gtk_∂ug_add_to_sockë
 (
GtkPlug
 *
∂ug
,

99 
GtkSockë
 *
sockë_
);

100 
	`_gtk_∂ug_ªmove_‰om_sockë
 (
GtkPlug
 *
∂ug
,

101 
GtkSockë
 *
sockë_
);

103 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkpreview.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_PREVIEW_H__


30 
	#__GTK_PREVIEW_H__


	)

32 
	~<gtk/gtk.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_PREVIEW
 (
	`gtk_¥evõw_gë_ty≥
 ())

	)

38 
	#GTK_PREVIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PREVIEW
, 
GtkPªvõw
))

	)

39 
	#GTK_PREVIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PREVIEW
, 
GtkPªvõwCœss
))

	)

40 
	#GTK_IS_PREVIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PREVIEW
))

	)

41 
	#GTK_IS_PREVIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PREVIEW
))

	)

42 
	#GTK_PREVIEW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PREVIEW
, 
GtkPªvõwCœss
))

	)

45 
_GtkPªvõw
 
	tGtkPªvõw
;

46 
_GtkPªvõwInfo
 
	tGtkPªvõwInfo
;

47 
_GtkDôhîInfo
 
	tGtkDôhîInfo
;

48 
_GtkPªvõwCœss
 
	tGtkPªvõwCœss
;

50 
	s_GtkPªvõw


52 
GtkWidgë
 
	mwidgë
;

54 
guch¨
 *
	mbuf„r
;

55 
guöt16
 
	mbuf„r_width
;

56 
guöt16
 
	mbuf„r_height
;

58 
guöt16
 
	mbµ
;

59 
guöt16
 
	mrow°ride
;

61 
GdkRgbDôhî
 
	mdôhî
;

63 
guöt
 
	mty≥
 : 1;

64 
guöt
 
	mex∑nd
 : 1;

67 
	s_GtkPªvõwInfo


69 
guch¨
 *
	mlookup
;

71 
gdoubÀ
 
	mgamma
;

74 
	u_GtkDôhîInfo


76 
gush‹t
 
	ms
[2];

77 
guch¨
 
	mc
[4];

80 
	s_GtkPªvõwCœss


82 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

84 
GtkPªvõwInfo
 
	möfo
;

89 
GTy≥
 
	$gtk_¥evõw_gë_ty≥
 (Ë
G_GNUC_CONST
;

90 
	`gtk_¥evõw_unöô
 ();

91 
GtkWidgë
* 
	`gtk_¥evõw_√w
 (
GtkPªvõwTy≥
 
ty≥
);

92 
	`gtk_¥evõw_size
 (
GtkPªvõw
 *
¥evõw
,

93 
göt
 
width
,

94 
göt
 
height
);

95 
	`gtk_¥evõw_put
 (
GtkPªvõw
 *
¥evõw
,

96 
GdkWödow
 *
wödow
,

97 
GdkGC
 *
gc
,

98 
göt
 
§cx
,

99 
göt
 
§cy
,

100 
göt
 
de°x
,

101 
göt
 
de°y
,

102 
göt
 
width
,

103 
göt
 
height
);

104 
	`gtk_¥evõw_døw_row
 (
GtkPªvõw
 *
¥evõw
,

105 
guch¨
 *
d©a
,

106 
göt
 
x
,

107 
göt
 
y
,

108 
göt
 
w
);

109 
	`gtk_¥evõw_£t_ex∑nd
 (
GtkPªvõw
 *
¥evõw
,

110 
gboﬁón
 
ex∑nd
);

112 
	`gtk_¥evõw_£t_gamma
 (
gamma_
);

113 
	`gtk_¥evõw_£t_cﬁ‹_cube
 (
guöt
 
ƒed_shades
,

114 
guöt
 
ngªí_shades
,

115 
guöt
 
nblue_shades
,

116 
guöt
 
ngøy_shades
);

117 
	`gtk_¥evõw_£t_ö°Æl_cm≠
 (
göt
 
ö°Æl_cm≠
);

118 
	`gtk_¥evõw_£t_ª£rved
 (
göt
 
ƒe£rved
);

119 
	`gtk_¥evõw_£t_dôhî
 (
GtkPªvõw
 *
¥evõw
,

120 
GdkRgbDôhî
 
dôhî
);

121 
GdkVisuÆ
* 
	`gtk_¥evõw_gë_visuÆ
 ();

122 
GdkCﬁ‹m≠
* 
	`gtk_¥evõw_gë_cm≠
 ();

123 
GtkPªvõwInfo
* 
	`gtk_¥evõw_gë_öfo
 ();

130 
	`gtk_¥evõw_ª£t
 ();

133 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkprintcontext.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_PRINT_CONTEXT_H__


26 
	#__GTK_PRINT_CONTEXT_H__


	)

29 
	~<∑ngo/∑ngo.h
>

30 
	~<gtk/gtk∑ge£tup.h
>

33 
G_BEGIN_DECLS


35 
_GtkPrötC⁄ãxt
 
	tGtkPrötC⁄ãxt
;

37 
	#GTK_TYPE_PRINT_CONTEXT
 (
	`gtk_¥öt_c⁄ãxt_gë_ty≥
 ())

	)

38 
	#GTK_PRINT_CONTEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PRINT_CONTEXT
, 
GtkPrötC⁄ãxt
))

	)

39 
	#GTK_IS_PRINT_CONTEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PRINT_CONTEXT
))

	)

41 
GTy≥
 
	$gtk_¥öt_c⁄ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

45 
ˇúo_t
 *
	`gtk_¥öt_c⁄ãxt_gë_ˇúo_c⁄ãxt
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

47 
GtkPageSëup
 *
	`gtk_¥öt_c⁄ãxt_gë_∑ge_£tup
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

48 
gdoubÀ
 
	`gtk_¥öt_c⁄ãxt_gë_width
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

49 
gdoubÀ
 
	`gtk_¥öt_c⁄ãxt_gë_height
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

50 
gdoubÀ
 
	`gtk_¥öt_c⁄ãxt_gë_dpi_x
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

51 
gdoubÀ
 
	`gtk_¥öt_c⁄ãxt_gë_dpi_y
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

54 
P™goF⁄tM≠
 *
	`gtk_¥öt_c⁄ãxt_gë_∑ngo_f⁄tm≠
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

55 
P™goC⁄ãxt
 *
	`gtk_¥öt_c⁄ãxt_¸óã_∑ngo_c⁄ãxt
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

56 
P™goLayout
 *
	`gtk_¥öt_c⁄ãxt_¸óã_∑ngo_œyout
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
);

59 
	`gtk_¥öt_c⁄ãxt_£t_ˇúo_c⁄ãxt
 (
GtkPrötC⁄ãxt
 *
c⁄ãxt
,

60 
ˇúo_t
 *
¸
,

61 
dpi_x
,

62 
dpi_y
);

64 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkprintoperation.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_PRINT_OPERATION_H__


26 
	#__GTK_PRINT_OPERATION_H__


	)

29 
	~<ˇúo.h
>

30 
	~<gtk/gtkmaö.h
>

31 
	~<gtk/gtkwödow.h
>

32 
	~<gtk/gtk∑ge£tup.h
>

33 
	~<gtk/gtk¥öt£âögs.h
>

34 
	~<gtk/gtk¥ötc⁄ãxt.h
>

35 
	~<gtk/gtk¥öt›î©i⁄¥evõw.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_PRINT_OPERATION
 (
	`gtk_¥öt_›î©i⁄_gë_ty≥
 ())

	)

41 
	#GTK_PRINT_OPERATION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PRINT_OPERATION
, 
GtkPrötO≥øti⁄
))

	)

42 
	#GTK_PRINT_OPERATION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PRINT_OPERATION
, 
GtkPrötO≥øti⁄Cœss
))

	)

43 
	#GTK_IS_PRINT_OPERATION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PRINT_OPERATION
))

	)

44 
	#GTK_IS_PRINT_OPERATION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PRINT_OPERATION
))

	)

45 
	#GTK_PRINT_OPERATION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PRINT_OPERATION
, 
GtkPrötO≥øti⁄Cœss
))

	)

47 
_GtkPrötO≥øti⁄Cœss
 
	tGtkPrötO≥øti⁄Cœss
;

48 
_GtkPrötO≥øti⁄Priv©e
 
	tGtkPrötO≥øti⁄Priv©e
;

49 
_GtkPrötO≥øti⁄
 
	tGtkPrötO≥øti⁄
;

52 
	mGTK_PRINT_STATUS_INITIAL
,

53 
	mGTK_PRINT_STATUS_PREPARING
,

54 
	mGTK_PRINT_STATUS_GENERATING_DATA
,

55 
	mGTK_PRINT_STATUS_SENDING_DATA
,

56 
	mGTK_PRINT_STATUS_PENDING
,

57 
	mGTK_PRINT_STATUS_PENDING_ISSUE
,

58 
	mGTK_PRINT_STATUS_PRINTING
,

59 
	mGTK_PRINT_STATUS_FINISHED
,

60 
	mGTK_PRINT_STATUS_FINISHED_ABORTED


61 } 
	tGtkPrötSètus
;

64 
	mGTK_PRINT_OPERATION_RESULT_ERROR
,

65 
	mGTK_PRINT_OPERATION_RESULT_APPLY
,

66 
	mGTK_PRINT_OPERATION_RESULT_CANCEL
,

67 
	mGTK_PRINT_OPERATION_RESULT_IN_PROGRESS


68 } 
	tGtkPrötO≥øti⁄Resu…
;

71 
	mGTK_PRINT_OPERATION_ACTION_PRINT_DIALOG
,

72 
	mGTK_PRINT_OPERATION_ACTION_PRINT
,

73 
	mGTK_PRINT_OPERATION_ACTION_PREVIEW
,

74 
	mGTK_PRINT_OPERATION_ACTION_EXPORT


75 } 
	tGtkPrötO≥øti⁄A˘i⁄
;

78 
	s_GtkPrötO≥øti⁄


80 
GObje˘
 
	m∑ª¡_ö°™˚
;

82 
GtkPrötO≥øti⁄Priv©e
 *
GSEAL
 (
¥iv
);

85 
	s_GtkPrötO≥øti⁄Cœss


87 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

89 (*
	md⁄e
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

90 
GtkPrötO≥øti⁄Resu…
 
	mªsu…
);

91 (*
	mbegö_¥öt
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

92 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
);

93 
gboﬁón
 (*
∑gö©e
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

94 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
);

95 (*
	mªque°_∑ge_£tup
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

96 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
,

97 
göt
 
	m∑ge_ƒ
,

98 
GtkPageSëup
 *
	m£tup
);

99 (*
	mdøw_∑ge
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

100 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
,

101 
göt
 
	m∑ge_ƒ
);

102 (*
	míd_¥öt
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

103 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
);

104 (*
	m°©us_ch™ged
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
);

106 
	mGtkWidgë
 *(*
	m¸óã_cu°om_widgë
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
);

107 (*
	mcu°om_widgë_≠∂y
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

108 
GtkWidgë
 *
	mwidgë
);

110 
gboﬁón
 (*
¥evõw
Ë(
GtkPrötO≥øti⁄
 *
	m›î©i⁄
,

111 
GtkPrötO≥øti⁄Pªvõw
 *
	m¥evõw
,

112 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
,

113 
GtkWödow
 *
	m∑ª¡
);

116 (*
	m_gtk_ª£rved1
) ();

117 (*
	m_gtk_ª£rved2
) ();

118 (*
	m_gtk_ª£rved3
) ();

119 (*
	m_gtk_ª£rved4
) ();

120 (*
	m_gtk_ª£rved5
) ();

121 (*
	m_gtk_ª£rved6
) ();

122 (*
	m_gtk_ª£rved7
) ();

125 
	#GTK_PRINT_ERROR
 
	`gtk_¥öt_îr‹_qu¨k
 ()

	)

129 
	mGTK_PRINT_ERROR_GENERAL
,

130 
	mGTK_PRINT_ERROR_INTERNAL_ERROR
,

131 
	mGTK_PRINT_ERROR_NOMEM
,

132 
	mGTK_PRINT_ERROR_INVALID_FILE


133 } 
	tGtkPrötEº‹
;

135 
GQu¨k
 
gtk_¥öt_îr‹_qu¨k
 ();

137 
GTy≥
 
	$gtk_¥öt_›î©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

138 
GtkPrötO≥øti⁄
 * 
	`gtk_¥öt_›î©i⁄_√w
 ();

139 
	`gtk_¥öt_›î©i⁄_£t_deÁu…_∑ge_£tup
 (
GtkPrötO≥øti⁄
 *
›
,

140 
GtkPageSëup
 *
deÁu…_∑ge_£tup
);

141 
GtkPageSëup
 * 
	`gtk_¥öt_›î©i⁄_gë_deÁu…_∑ge_£tup
 (
GtkPrötO≥øti⁄
 *
›
);

142 
	`gtk_¥öt_›î©i⁄_£t_¥öt_£âögs
 (
GtkPrötO≥øti⁄
 *
›
,

143 
GtkPrötSëtögs
 *
¥öt_£âögs
);

144 
GtkPrötSëtögs
 * 
	`gtk_¥öt_›î©i⁄_gë_¥öt_£âögs
 (
GtkPrötO≥øti⁄
 *
›
);

145 
	`gtk_¥öt_›î©i⁄_£t_job_«me
 (
GtkPrötO≥øti⁄
 *
›
,

146 c⁄° 
gch¨
 *
job_«me
);

147 
	`gtk_¥öt_›î©i⁄_£t_n_∑ges
 (
GtkPrötO≥øti⁄
 *
›
,

148 
göt
 
n_∑ges
);

149 
	`gtk_¥öt_›î©i⁄_£t_cuºít_∑ge
 (
GtkPrötO≥øti⁄
 *
›
,

150 
göt
 
cuºít_∑ge
);

151 
	`gtk_¥öt_›î©i⁄_£t_u£_fuŒ_∑ge
 (
GtkPrötO≥øti⁄
 *
›
,

152 
gboﬁón
 
fuŒ_∑ge
);

153 
	`gtk_¥öt_›î©i⁄_£t_unô
 (
GtkPrötO≥øti⁄
 *
›
,

154 
GtkUnô
 
unô
);

155 
	`gtk_¥öt_›î©i⁄_£t_exp‹t_fûíame
 (
GtkPrötO≥øti⁄
 *
›
,

156 c⁄° 
gch¨
 *
fûíame
);

157 
	`gtk_¥öt_›î©i⁄_£t_åack_¥öt_°©us
 (
GtkPrötO≥øti⁄
 *
›
,

158 
gboﬁón
 
åack_°©us
);

159 
	`gtk_¥öt_›î©i⁄_£t_show_¥ogªss
 (
GtkPrötO≥øti⁄
 *
›
,

160 
gboﬁón
 
show_¥ogªss
);

161 
	`gtk_¥öt_›î©i⁄_£t_Ælow_async
 (
GtkPrötO≥øti⁄
 *
›
,

162 
gboﬁón
 
Ælow_async
);

163 
	`gtk_¥öt_›î©i⁄_£t_cu°om_èb_œbñ
 (
GtkPrötO≥øti⁄
 *
›
,

164 c⁄° 
gch¨
 *
œbñ
);

165 
GtkPrötO≥øti⁄Resu…
 
	`gtk_¥öt_›î©i⁄_run
 (
GtkPrötO≥øti⁄
 *
›
,

166 
GtkPrötO≥øti⁄A˘i⁄
 
a˘i⁄
,

167 
GtkWödow
 *
∑ª¡
,

168 
GEº‹
 **
îr‹
);

169 
	`gtk_¥öt_›î©i⁄_gë_îr‹
 (
GtkPrötO≥øti⁄
 *
›
,

170 
GEº‹
 **
îr‹
);

171 
GtkPrötSètus
 
	`gtk_¥öt_›î©i⁄_gë_°©us
 (
GtkPrötO≥øti⁄
 *
›
);

172 
G_CONST_RETURN
 
gch¨
 * 
	`gtk_¥öt_›î©i⁄_gë_°©us_°rög
 (
GtkPrötO≥øti⁄
 *
›
);

173 
gboﬁón
 
	`gtk_¥öt_›î©i⁄_is_föished
 (
GtkPrötO≥øti⁄
 *
›
);

174 
	`gtk_¥öt_›î©i⁄_ˇn˚l
 (
GtkPrötO≥øti⁄
 *
›
);

175 
	`gtk_¥öt_›î©i⁄_døw_∑ge_föish
 (
GtkPrötO≥øti⁄
 *
›
);

176 
	`gtk_¥öt_›î©i⁄_£t_de„r_døwög
 (
GtkPrötO≥øti⁄
 *
›
);

178 
GtkPageSëup
 *
	`gtk_¥öt_run_∑ge_£tup_dülog
 (
GtkWödow
 *
∑ª¡
,

179 
GtkPageSëup
 *
∑ge_£tup
,

180 
GtkPrötSëtögs
 *
£âögs
);

182 (* 
	tGtkPageSëupD⁄eFunc
Ë(
	tGtkPageSëup
 *
	t∑ge_£tup
,

183 
	tgpoöãr
 
	td©a
);

185 
	`gtk_¥öt_run_∑ge_£tup_dülog_async
 (
GtkWödow
 *
∑ª¡
,

186 
GtkPageSëup
 *
∑ge_£tup
,

187 
GtkPrötSëtögs
 *
£âögs
,

188 
GtkPageSëupD⁄eFunc
 
d⁄e_cb
,

189 
gpoöãr
 
d©a
);

191 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkprintoperationpreview.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_PRINT_OPERATION_PREVIEW_H__


26 
	#__GTK_PRINT_OPERATION_PREVIEW_H__


	)

28 
	~<ˇúo.h
>

29 
	~<gtk/gtk¥ötc⁄ãxt.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_PRINT_OPERATION_PREVIEW
 (
	`gtk_¥öt_›î©i⁄_¥evõw_gë_ty≥
 ())

	)

34 
	#GTK_PRINT_OPERATION_PREVIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PRINT_OPERATION_PREVIEW
, 
GtkPrötO≥øti⁄Pªvõw
))

	)

35 
	#GTK_IS_PRINT_OPERATION_PREVIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PRINT_OPERATION_PREVIEW
))

	)

36 
	#GTK_PRINT_OPERATION_PREVIEW_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_PRINT_OPERATION_PREVIEW
, 
GtkPrötO≥øti⁄PªvõwIÁ˚
))

	)

38 
_GtkPrötO≥øti⁄Pªvõw
 
	tGtkPrötO≥øti⁄Pªvõw
;

39 
_GtkPrötO≥øti⁄PªvõwIÁ˚
 
	tGtkPrötO≥øti⁄PªvõwIÁ˚
;

42 
	s_GtkPrötO≥øti⁄PªvõwIÁ˚


44 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

47 (*
	mªady
Ë(
GtkPrötO≥øti⁄Pªvõw
 *
	m¥evõw
,

48 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
);

49 (*
	mgŸ_∑ge_size
Ë(
GtkPrötO≥øti⁄Pªvõw
 *
	m¥evõw
,

50 
GtkPrötC⁄ãxt
 *
	mc⁄ãxt
,

51 
GtkPageSëup
 *
	m∑ge_£tup
);

54 (*
	mªndî_∑ge
Ë(
GtkPrötO≥øti⁄Pªvõw
 *
	m¥evõw
,

55 
göt
 
	m∑ge_ƒ
);

56 
gboﬁón
 (*
is_£À˘ed
Ë(
GtkPrötO≥øti⁄Pªvõw
 *
	m¥evõw
,

57 
göt
 
	m∑ge_ƒ
);

58 (*
	míd_¥evõw
Ë(
GtkPrötO≥øti⁄Pªvõw
 *
	m¥evõw
);

61 (*
	m_gtk_ª£rved1
) ();

62 (*
	m_gtk_ª£rved2
) ();

63 (*
	m_gtk_ª£rved3
) ();

64 (*
	m_gtk_ª£rved4
) ();

65 (*
	m_gtk_ª£rved5
) ();

66 (*
	m_gtk_ª£rved6
) ();

67 (*
	m_gtk_ª£rved7
) ();

70 
GTy≥
 
	$gtk_¥öt_›î©i⁄_¥evõw_gë_ty≥
 (Ë
G_GNUC_CONST
;

72 
	`gtk_¥öt_›î©i⁄_¥evõw_ªndî_∑ge
 (
GtkPrötO≥øti⁄Pªvõw
 *
¥evõw
,

73 
göt
 
∑ge_ƒ
);

74 
	`gtk_¥öt_›î©i⁄_¥evõw_íd_¥evõw
 (
GtkPrötO≥øti⁄Pªvõw
 *
¥evõw
);

75 
gboﬁón
 
	`gtk_¥öt_›î©i⁄_¥evõw_is_£À˘ed
 (
GtkPrötO≥øti⁄Pªvõw
 *
¥evõw
,

76 
göt
 
∑ge_ƒ
);

78 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkprintsettings.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_PRINT_SETTINGS_H__


26 
	#__GTK_PRINT_SETTINGS_H__


	)

28 
	~<gtk/gtk∑≥rsize.h
>

30 
G_BEGIN_DECLS


32 
_GtkPrötSëtögs
 
	tGtkPrötSëtögs
;

34 
	#GTK_TYPE_PRINT_SETTINGS
 (
	`gtk_¥öt_£âögs_gë_ty≥
 ())

	)

35 
	#GTK_PRINT_SETTINGS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PRINT_SETTINGS
, 
GtkPrötSëtögs
))

	)

36 
	#GTK_IS_PRINT_SETTINGS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PRINT_SETTINGS
))

	)

38 (*
	tGtkPrötSëtögsFunc
Ë(c⁄° 
	tgch¨
 *
	tkey
,

39 c⁄° 
	tgch¨
 *
	tvÆue
,

40 
	tgpoöãr
 
	tu£r_d©a
);

42 
_GtkPageR™ge
 
	tGtkPageR™ge
;

43 
	s_GtkPageR™ge


45 
göt
 
°¨t
;

46 
göt
 
íd
;

49 
GTy≥
 
	$gtk_¥öt_£âögs_gë_ty≥
 (Ë
G_GNUC_CONST
;

50 
GtkPrötSëtögs
 *
	`gtk_¥öt_£âögs_√w
 ();

52 
GtkPrötSëtögs
 *
	`gtk_¥öt_£âögs_c›y
 (GtkPrötSëtög†*
Ÿhî
);

54 
GtkPrötSëtögs
 *
	`gtk_¥öt_£âögs_√w_‰om_fûe
 (c⁄° 
gch¨
 *
fûe_«me
,

55 
GEº‹
 **
îr‹
);

56 
gboﬁón
 
	`gtk_¥öt_£âögs_lﬂd_fûe
 (
GtkPrötSëtögs
 *
£âögs
,

57 c⁄° 
gch¨
 *
fûe_«me
,

58 
GEº‹
 **
îr‹
);

59 
gboﬁón
 
	`gtk_¥öt_£âögs_to_fûe
 (
GtkPrötSëtögs
 *
£âögs
,

60 c⁄° 
gch¨
 *
fûe_«me
,

61 
GEº‹
 **
îr‹
);

62 
GtkPrötSëtögs
 *
	`gtk_¥öt_£âögs_√w_‰om_key_fûe
 (
GKeyFûe
 *
key_fûe
,

63 c⁄° 
gch¨
 *
group_«me
,

64 
GEº‹
 **
îr‹
);

65 
gboﬁón
 
	`gtk_¥öt_£âögs_lﬂd_key_fûe
 (
GtkPrötSëtögs
 *
£âögs
,

66 
GKeyFûe
 *
key_fûe
,

67 c⁄° 
gch¨
 *
group_«me
,

68 
GEº‹
 **
îr‹
);

69 
	`gtk_¥öt_£âögs_to_key_fûe
 (
GtkPrötSëtögs
 *
£âögs
,

70 
GKeyFûe
 *
key_fûe
,

71 c⁄° 
gch¨
 *
group_«me
);

72 
gboﬁón
 
	`gtk_¥öt_£âögs_has_key
 (
GtkPrötSëtögs
 *
£âögs
,

73 c⁄° 
gch¨
 *
key
);

74 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë
 (
GtkPrötSëtögs
 *
£âögs
,

75 c⁄° 
gch¨
 *
key
);

76 
	`gtk_¥öt_£âögs_£t
 (
GtkPrötSëtögs
 *
£âögs
,

77 c⁄° 
gch¨
 *
key
,

78 c⁄° 
gch¨
 *
vÆue
);

79 
	`gtk_¥öt_£âögs_un£t
 (
GtkPrötSëtögs
 *
£âögs
,

80 c⁄° 
gch¨
 *
key
);

81 
	`gtk_¥öt_£âögs_f‹óch
 (
GtkPrötSëtögs
 *
£âögs
,

82 
GtkPrötSëtögsFunc
 
func
,

83 
gpoöãr
 
u£r_d©a
);

84 
gboﬁón
 
	`gtk_¥öt_£âögs_gë_boﬁ
 (
GtkPrötSëtögs
 *
£âögs
,

85 c⁄° 
gch¨
 *
key
);

86 
	`gtk_¥öt_£âögs_£t_boﬁ
 (
GtkPrötSëtögs
 *
£âögs
,

87 c⁄° 
gch¨
 *
key
,

88 
gboﬁón
 
vÆue
);

89 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_doubÀ
 (
GtkPrötSëtögs
 *
£âögs
,

90 c⁄° 
gch¨
 *
key
);

91 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_doubÀ_wôh_deÁu…
 (
GtkPrötSëtögs
 *
£âögs
,

92 c⁄° 
gch¨
 *
key
,

93 
gdoubÀ
 
def
);

94 
	`gtk_¥öt_£âögs_£t_doubÀ
 (
GtkPrötSëtögs
 *
£âögs
,

95 c⁄° 
gch¨
 *
key
,

96 
gdoubÀ
 
vÆue
);

97 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_Àngth
 (
GtkPrötSëtögs
 *
£âögs
,

98 c⁄° 
gch¨
 *
key
,

99 
GtkUnô
 
unô
);

100 
	`gtk_¥öt_£âögs_£t_Àngth
 (
GtkPrötSëtögs
 *
£âögs
,

101 c⁄° 
gch¨
 *
key
,

102 
gdoubÀ
 
vÆue
,

103 
GtkUnô
 
unô
);

104 
göt
 
	`gtk_¥öt_£âögs_gë_öt
 (
GtkPrötSëtögs
 *
£âögs
,

105 c⁄° 
gch¨
 *
key
);

106 
göt
 
	`gtk_¥öt_£âögs_gë_öt_wôh_deÁu…
 (
GtkPrötSëtögs
 *
£âögs
,

107 c⁄° 
gch¨
 *
key
,

108 
göt
 
def
);

109 
	`gtk_¥öt_£âögs_£t_öt
 (
GtkPrötSëtögs
 *
£âögs
,

110 c⁄° 
gch¨
 *
key
,

111 
göt
 
vÆue
);

113 
	#GTK_PRINT_SETTINGS_PRINTER
 "¥öãr"

	)

114 
	#GTK_PRINT_SETTINGS_ORIENTATION
 "‹õ¡©i⁄"

	)

115 
	#GTK_PRINT_SETTINGS_PAPER_FORMAT
 "∑≥r-f‹m©"

	)

116 
	#GTK_PRINT_SETTINGS_PAPER_WIDTH
 "∑≥r-width"

	)

117 
	#GTK_PRINT_SETTINGS_PAPER_HEIGHT
 "∑≥r-height"

	)

118 
	#GTK_PRINT_SETTINGS_N_COPIES
 "n-c›õs"

	)

119 
	#GTK_PRINT_SETTINGS_DEFAULT_SOURCE
 "deÁu…-sour˚"

	)

120 
	#GTK_PRINT_SETTINGS_QUALITY
 "quÆôy"

	)

121 
	#GTK_PRINT_SETTINGS_RESOLUTION
 "ªsﬁuti⁄"

	)

122 
	#GTK_PRINT_SETTINGS_USE_COLOR
 "u£-cﬁ‹"

	)

123 
	#GTK_PRINT_SETTINGS_DUPLEX
 "du∂ex"

	)

124 
	#GTK_PRINT_SETTINGS_COLLATE
 "cﬁœã"

	)

125 
	#GTK_PRINT_SETTINGS_REVERSE
 "ªvî£"

	)

126 
	#GTK_PRINT_SETTINGS_MEDIA_TYPE
 "medü-ty≥"

	)

127 
	#GTK_PRINT_SETTINGS_DITHER
 "dôhî"

	)

128 
	#GTK_PRINT_SETTINGS_SCALE
 "sˇÀ"

	)

129 
	#GTK_PRINT_SETTINGS_PRINT_PAGES
 "¥öt-∑ges"

	)

130 
	#GTK_PRINT_SETTINGS_PAGE_RANGES
 "∑ge-ønges"

	)

131 
	#GTK_PRINT_SETTINGS_PAGE_SET
 "∑ge-£t"

	)

132 
	#GTK_PRINT_SETTINGS_FINISHINGS
 "föishögs"

	)

133 
	#GTK_PRINT_SETTINGS_NUMBER_UP
 "numbî-up"

	)

134 
	#GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT
 "numbî-up-œyout"

	)

135 
	#GTK_PRINT_SETTINGS_OUTPUT_BIN
 "ouçut-bö"

	)

136 
	#GTK_PRINT_SETTINGS_RESOLUTION_X
 "ªsﬁuti⁄-x"

	)

137 
	#GTK_PRINT_SETTINGS_RESOLUTION_Y
 "ªsﬁuti⁄-y"

	)

138 
	#GTK_PRINT_SETTINGS_PRINTER_LPI
 "¥öãr-Õi"

	)

140 
	#GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT
 "ouçut-fûe-f‹m©"

	)

141 
	#GTK_PRINT_SETTINGS_OUTPUT_URI
 "ouçut-uri"

	)

143 
	#GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION
 "wö32-drivî-vîsi⁄"

	)

144 
	#GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA
 "wö32-drivî-exåa"

	)

148 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë_¥öãr
 (
GtkPrötSëtögs
 *
£âögs
);

149 
	`gtk_¥öt_£âögs_£t_¥öãr
 (
GtkPrötSëtögs
 *
£âögs
,

150 c⁄° 
gch¨
 *
¥öãr
);

151 
GtkPageOrõ¡©i⁄
 
	`gtk_¥öt_£âögs_gë_‹õ¡©i⁄
 (
GtkPrötSëtögs
 *
£âögs
);

152 
	`gtk_¥öt_£âögs_£t_‹õ¡©i⁄
 (
GtkPrötSëtögs
 *
£âögs
,

153 
GtkPageOrõ¡©i⁄
 
‹õ¡©i⁄
);

154 
GtkP≠îSize
 * 
	`gtk_¥öt_£âögs_gë_∑≥r_size
 (
GtkPrötSëtögs
 *
£âögs
);

155 
	`gtk_¥öt_£âögs_£t_∑≥r_size
 (
GtkPrötSëtögs
 *
£âögs
,

156 
GtkP≠îSize
 *
∑≥r_size
);

157 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_∑≥r_width
 (
GtkPrötSëtögs
 *
£âögs
,

158 
GtkUnô
 
unô
);

159 
	`gtk_¥öt_£âögs_£t_∑≥r_width
 (
GtkPrötSëtögs
 *
£âögs
,

160 
gdoubÀ
 
width
,

161 
GtkUnô
 
unô
);

162 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_∑≥r_height
 (
GtkPrötSëtögs
 *
£âögs
,

163 
GtkUnô
 
unô
);

164 
	`gtk_¥öt_£âögs_£t_∑≥r_height
 (
GtkPrötSëtögs
 *
£âögs
,

165 
gdoubÀ
 
height
,

166 
GtkUnô
 
unô
);

167 
gboﬁón
 
	`gtk_¥öt_£âögs_gë_u£_cﬁ‹
 (
GtkPrötSëtögs
 *
£âögs
);

168 
	`gtk_¥öt_£âögs_£t_u£_cﬁ‹
 (
GtkPrötSëtögs
 *
£âögs
,

169 
gboﬁón
 
u£_cﬁ‹
);

170 
gboﬁón
 
	`gtk_¥öt_£âögs_gë_cﬁœã
 (
GtkPrötSëtögs
 *
£âögs
);

171 
	`gtk_¥öt_£âögs_£t_cﬁœã
 (
GtkPrötSëtögs
 *
£âögs
,

172 
gboﬁón
 
cﬁœã
);

173 
gboﬁón
 
	`gtk_¥öt_£âögs_gë_ªvî£
 (
GtkPrötSëtögs
 *
£âögs
);

174 
	`gtk_¥öt_£âögs_£t_ªvî£
 (
GtkPrötSëtögs
 *
£âögs
,

175 
gboﬁón
 
ªvî£
);

176 
GtkPrötDu∂ex
 
	`gtk_¥öt_£âögs_gë_du∂ex
 (
GtkPrötSëtögs
 *
£âögs
);

177 
	`gtk_¥öt_£âögs_£t_du∂ex
 (
GtkPrötSëtögs
 *
£âögs
,

178 
GtkPrötDu∂ex
 
du∂ex
);

179 
GtkPrötQuÆôy
 
	`gtk_¥öt_£âögs_gë_quÆôy
 (
GtkPrötSëtögs
 *
£âögs
);

180 
	`gtk_¥öt_£âögs_£t_quÆôy
 (
GtkPrötSëtögs
 *
£âögs
,

181 
GtkPrötQuÆôy
 
quÆôy
);

182 
göt
 
	`gtk_¥öt_£âögs_gë_n_c›õs
 (
GtkPrötSëtögs
 *
£âögs
);

183 
	`gtk_¥öt_£âögs_£t_n_c›õs
 (
GtkPrötSëtögs
 *
£âögs
,

184 
göt
 
num_c›õs
);

185 
göt
 
	`gtk_¥öt_£âögs_gë_numbî_up
 (
GtkPrötSëtögs
 *
£âögs
);

186 
	`gtk_¥öt_£âögs_£t_numbî_up
 (
GtkPrötSëtögs
 *
£âögs
,

187 
göt
 
numbî_up
);

188 
GtkNumbîUpLayout
 
	`gtk_¥öt_£âögs_gë_numbî_up_œyout
 (
GtkPrötSëtögs
 *
£âögs
);

189 
	`gtk_¥öt_£âögs_£t_numbî_up_œyout
 (
GtkPrötSëtögs
 *
£âögs
,

190 
GtkNumbîUpLayout
 
numbî_up_œyout
);

191 
göt
 
	`gtk_¥öt_£âögs_gë_ªsﬁuti⁄
 (
GtkPrötSëtögs
 *
£âögs
);

192 
	`gtk_¥öt_£âögs_£t_ªsﬁuti⁄
 (
GtkPrötSëtögs
 *
£âögs
,

193 
göt
 
ªsﬁuti⁄
);

194 
göt
 
	`gtk_¥öt_£âögs_gë_ªsﬁuti⁄_x
 (
GtkPrötSëtögs
 *
£âögs
);

195 
göt
 
	`gtk_¥öt_£âögs_gë_ªsﬁuti⁄_y
 (
GtkPrötSëtögs
 *
£âögs
);

196 
	`gtk_¥öt_£âögs_£t_ªsﬁuti⁄_xy
 (
GtkPrötSëtögs
 *
£âögs
,

197 
göt
 
ªsﬁuti⁄_x
,

198 
göt
 
ªsﬁuti⁄_y
);

199 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_¥öãr_Õi
 (
GtkPrötSëtögs
 *
£âögs
);

200 
	`gtk_¥öt_£âögs_£t_¥öãr_Õi
 (
GtkPrötSëtögs
 *
£âögs
,

201 
gdoubÀ
 
Õi
);

202 
gdoubÀ
 
	`gtk_¥öt_£âögs_gë_sˇÀ
 (
GtkPrötSëtögs
 *
£âögs
);

203 
	`gtk_¥öt_£âögs_£t_sˇÀ
 (
GtkPrötSëtögs
 *
£âögs
,

204 
gdoubÀ
 
sˇÀ
);

205 
GtkPrötPages
 
	`gtk_¥öt_£âögs_gë_¥öt_∑ges
 (
GtkPrötSëtögs
 *
£âögs
);

206 
	`gtk_¥öt_£âögs_£t_¥öt_∑ges
 (
GtkPrötSëtögs
 *
£âögs
,

207 
GtkPrötPages
 
∑ges
);

208 
GtkPageR™ge
 * 
	`gtk_¥öt_£âögs_gë_∑ge_ønges
 (
GtkPrötSëtögs
 *
£âögs
,

209 
göt
 *
num_ønges
);

210 
	`gtk_¥öt_£âögs_£t_∑ge_ønges
 (
GtkPrötSëtögs
 *
£âögs
,

211 
GtkPageR™ge
 *
∑ge_ønges
,

212 
göt
 
num_ønges
);

213 
GtkPageSë
 
	`gtk_¥öt_£âögs_gë_∑ge_£t
 (
GtkPrötSëtögs
 *
£âögs
);

214 
	`gtk_¥öt_£âögs_£t_∑ge_£t
 (
GtkPrötSëtögs
 *
£âögs
,

215 
GtkPageSë
 
∑ge_£t
);

216 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë_deÁu…_sour˚
 (
GtkPrötSëtögs
 *
£âögs
);

217 
	`gtk_¥öt_£âögs_£t_deÁu…_sour˚
 (
GtkPrötSëtögs
 *
£âögs
,

218 c⁄° 
gch¨
 *
deÁu…_sour˚
);

219 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë_medü_ty≥
 (
GtkPrötSëtögs
 *
£âögs
);

220 
	`gtk_¥öt_£âögs_£t_medü_ty≥
 (
GtkPrötSëtögs
 *
£âögs
,

221 c⁄° 
gch¨
 *
medü_ty≥
);

222 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë_dôhî
 (
GtkPrötSëtögs
 *
£âögs
);

223 
	`gtk_¥öt_£âögs_£t_dôhî
 (
GtkPrötSëtögs
 *
£âögs
,

224 c⁄° 
gch¨
 *
dôhî
);

225 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë_föishögs
 (
GtkPrötSëtögs
 *
£âögs
);

226 
	`gtk_¥öt_£âögs_£t_föishögs
 (
GtkPrötSëtögs
 *
£âögs
,

227 c⁄° 
gch¨
 *
föishögs
);

228 
G_CONST_RETURN
 
gch¨
 *
	`gtk_¥öt_£âögs_gë_ouçut_bö
 (
GtkPrötSëtögs
 *
£âögs
);

229 
	`gtk_¥öt_£âögs_£t_ouçut_bö
 (
GtkPrötSëtögs
 *
£âögs
,

230 c⁄° 
gch¨
 *
ouçut_bö
);

232 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkprogress.h

27 #i‚de‡
__GTK_PROGRESS_H__


28 
	#__GTK_PROGRESS_H__


	)

31 
	~<gtk/gtkwidgë.h
>

32 
	~<gtk/gtkadju°mít.h
>

35 
	gG_BEGIN_DECLS


37 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_PROGRESS_C__
Ë|| deföed (
__GTK_PROGRESS_BAR_C__
)

39 
	#GTK_TYPE_PROGRESS
 (
	`gtk_¥ogªss_gë_ty≥
 ())

	)

40 
	#GTK_PROGRESS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PROGRESS
, 
GtkProgªss
))

	)

41 
	#GTK_PROGRESS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PROGRESS
, 
GtkProgªssCœss
))

	)

42 
	#GTK_IS_PROGRESS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PROGRESS
))

	)

43 
	#GTK_IS_PROGRESS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PROGRESS
))

	)

44 
	#GTK_PROGRESS_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PROGRESS
, 
GtkProgªssCœss
))

	)

48 
_GtkProgªss
 
	tGtkProgªss
;

49 
_GtkProgªssCœss
 
	tGtkProgªssCœss
;

52 
	s_GtkProgªss


54 
GtkWidgë
 
	mwidgë
;

56 
GtkAdju°mít
 *
	madju°mít
;

57 
GdkPixm≠
 *
	moffs¸ìn_pixm≠
;

58 
gch¨
 *
	mf‹m©
;

59 
gÊﬂt
 
	mx_Æign
;

60 
gÊﬂt
 
	my_Æign
;

62 
guöt
 
	mshow_ãxt
 : 1;

63 
guöt
 
	ma˘ivôy_mode
 : 1;

64 
guöt
 
	mu£_ãxt_f‹m©
 : 1;

67 
	s_GtkProgªssCœss


69 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

71 (* 
	m∑öt
Ë(
GtkProgªss
 *
	m¥ogªss
);

72 (* 
	mupd©e
Ë(
GtkProgªss
 *
	m¥ogªss
);

73 (* 
	ma˘_mode_íãr
Ë(
GtkProgªss
 *
	m¥ogªss
);

76 (*
	m_gtk_ª£rved1
) ();

77 (*
	m_gtk_ª£rved2
) ();

78 (*
	m_gtk_ª£rved3
) ();

79 (*
	m_gtk_ª£rved4
) ();

86 #i‡!
deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
__GTK_PROGRESS_C__
Ë|| deföed (
__GTK_PROGRESS_BAR_C__
)

88 
GTy≥
 
	$gtk_¥ogªss_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
	`gtk_¥ogªss_£t_show_ãxt
 (
GtkProgªss
 *
¥ogªss
,

90 
gboﬁón
 
show_ãxt
);

91 
	`gtk_¥ogªss_£t_ãxt_Æignmít
 (
GtkProgªss
 *
¥ogªss
,

92 
gÊﬂt
 
x_Æign
,

93 
gÊﬂt
 
y_Æign
);

94 
	`gtk_¥ogªss_£t_f‹m©_°rög
 (
GtkProgªss
 *
¥ogªss
,

95 c⁄° 
gch¨
 *
f‹m©
);

96 
	`gtk_¥ogªss_£t_adju°mít
 (
GtkProgªss
 *
¥ogªss
,

97 
GtkAdju°mít
 *
adju°mít
);

98 
	`gtk_¥ogªss_c⁄figuª
 (
GtkProgªss
 *
¥ogªss
,

99 
gdoubÀ
 
vÆue
,

100 
gdoubÀ
 
mö
,

101 
gdoubÀ
 
max
);

102 
	`gtk_¥ogªss_£t_≥r˚¡age
 (
GtkProgªss
 *
¥ogªss
,

103 
gdoubÀ
 
≥r˚¡age
);

104 
	`gtk_¥ogªss_£t_vÆue
 (
GtkProgªss
 *
¥ogªss
,

105 
gdoubÀ
 
vÆue
);

106 
gdoubÀ
 
	`gtk_¥ogªss_gë_vÆue
 (
GtkProgªss
 *
¥ogªss
);

107 
	`gtk_¥ogªss_£t_a˘ivôy_mode
 (
GtkProgªss
 *
¥ogªss
,

108 
gboﬁón
 
a˘ivôy_mode
);

109 
gch¨
* 
	`gtk_¥ogªss_gë_cuºít_ãxt
 (
GtkProgªss
 *
¥ogªss
);

110 
gch¨
* 
	`gtk_¥ogªss_gë_ãxt_‰om_vÆue
 (
GtkProgªss
 *
¥ogªss
,

111 
gdoubÀ
 
vÆue
);

112 
gdoubÀ
 
	`gtk_¥ogªss_gë_cuºít_≥r˚¡age
 (
GtkProgªss
 *
¥ogªss
);

113 
gdoubÀ
 
	`gtk_¥ogªss_gë_≥r˚¡age_‰om_vÆue
 (
GtkProgªss
 *
¥ogªss
,

114 
gdoubÀ
 
vÆue
);

118 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkprogressbar.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_PROGRESS_BAR_H__


32 
	#__GTK_PROGRESS_BAR_H__


	)

35 
	~<gtk/gtk¥ogªss.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_PROGRESS_BAR
 (
	`gtk_¥ogªss_b¨_gë_ty≥
 ())

	)

41 
	#GTK_PROGRESS_BAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_PROGRESS_BAR
, 
GtkProgªssB¨
))

	)

42 
	#GTK_PROGRESS_BAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_PROGRESS_BAR
, 
GtkProgªssB¨Cœss
))

	)

43 
	#GTK_IS_PROGRESS_BAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_PROGRESS_BAR
))

	)

44 
	#GTK_IS_PROGRESS_BAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_PROGRESS_BAR
))

	)

45 
	#GTK_PROGRESS_BAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_PROGRESS_BAR
, 
GtkProgªssB¨Cœss
))

	)

48 
_GtkProgªssB¨
 
	tGtkProgªssB¨
;

49 
_GtkProgªssB¨Cœss
 
	tGtkProgªssB¨Cœss
;

53 
	mGTK_PROGRESS_CONTINUOUS
,

54 
	mGTK_PROGRESS_DISCRETE


55 } 
	tGtkProgªssB¨StyÀ
;

59 
	mGTK_PROGRESS_LEFT_TO_RIGHT
,

60 
	mGTK_PROGRESS_RIGHT_TO_LEFT
,

61 
	mGTK_PROGRESS_BOTTOM_TO_TOP
,

62 
	mGTK_PROGRESS_TOP_TO_BOTTOM


63 } 
	tGtkProgªssB¨Orõ¡©i⁄
;

65 
	s_GtkProgªssB¨


67 
GtkProgªss
 
	m¥ogªss
;

69 
GtkProgªssB¨StyÀ
 
GSEAL
 (
b¨_°yÀ
);

70 
GtkProgªssB¨Orõ¡©i⁄
 
GSEAL
 (
‹õ¡©i⁄
);

72 
guöt
 
GSEAL
 (
blocks
);

73 
göt
 
GSEAL
 (
ö_block
);

75 
göt
 
GSEAL
 (
a˘ivôy_pos
);

76 
guöt
 
GSEAL
 (
a˘ivôy_°ï
);

77 
guöt
 
GSEAL
 (
a˘ivôy_blocks
);

79 
gdoubÀ
 
GSEAL
 (
pul£_‰a˘i⁄
);

81 
guöt
 
GSEAL
 (
a˘ivôy_dú
) : 1;

82 
guöt
 
GSEAL
 (
ñlùsize
) : 3;

83 
guöt
 
GSEAL
 (
dúty
) : 1;

86 
	s_GtkProgªssB¨Cœss


88 
GtkProgªssCœss
 
	m∑ª¡_˛ass
;

91 (*
	m_gtk_ª£rved1
) ();

92 (*
	m_gtk_ª£rved2
) ();

93 (*
	m_gtk_ª£rved3
) ();

94 (*
	m_gtk_ª£rved4
) ();

98 
GTy≥
 
	$gtk_¥ogªss_b¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

99 
GtkWidgë
* 
	`gtk_¥ogªss_b¨_√w
 ();

128 
	`gtk_¥ogªss_b¨_pul£
 (
GtkProgªssB¨
 *
pb¨
);

129 
	`gtk_¥ogªss_b¨_£t_ãxt
 (
GtkProgªssB¨
 *
pb¨
,

130 c⁄° 
gch¨
 *
ãxt
);

131 
	`gtk_¥ogªss_b¨_£t_‰a˘i⁄
 (
GtkProgªssB¨
 *
pb¨
,

132 
gdoubÀ
 
‰a˘i⁄
);

134 
	`gtk_¥ogªss_b¨_£t_pul£_°ï
 (
GtkProgªssB¨
 *
pb¨
,

135 
gdoubÀ
 
‰a˘i⁄
);

136 
	`gtk_¥ogªss_b¨_£t_‹õ¡©i⁄
 (
GtkProgªssB¨
 *
pb¨
,

137 
GtkProgªssB¨Orõ¡©i⁄
 
‹õ¡©i⁄
);

139 
G_CONST_RETURN
 
gch¨
* 
	`gtk_¥ogªss_b¨_gë_ãxt
 (
GtkProgªssB¨
 *
pb¨
);

140 
gdoubÀ
 
	`gtk_¥ogªss_b¨_gë_‰a˘i⁄
 (
GtkProgªssB¨
 *
pb¨
);

141 
gdoubÀ
 
	`gtk_¥ogªss_b¨_gë_pul£_°ï
 (
GtkProgªssB¨
 *
pb¨
);

143 
GtkProgªssB¨Orõ¡©i⁄
 
	`gtk_¥ogªss_b¨_gë_‹õ¡©i⁄
 (
GtkProgªssB¨
 *
pb¨
);

144 
	`gtk_¥ogªss_b¨_£t_ñlùsize
 (
GtkProgªssB¨
 *
pb¨
,

145 
P™goEŒùsizeMode
 
mode
);

146 
P™goEŒùsizeMode
 
	`gtk_¥ogªss_b¨_gë_ñlùsize
 (
GtkProgªssB¨
 *
pb¨
);

149 #i‚de‡
GTK_DISABLE_DEPRECATED


152 
GtkWidgë
* 
	`gtk_¥ogªss_b¨_√w_wôh_adju°mít
 (
GtkAdju°mít
 *
adju°mít
);

153 
	`gtk_¥ogªss_b¨_£t_b¨_°yÀ
 (
GtkProgªssB¨
 *
pb¨
,

154 
GtkProgªssB¨StyÀ
 
°yÀ
);

155 
	`gtk_¥ogªss_b¨_£t_dis¸ëe_blocks
 (
GtkProgªssB¨
 *
pb¨
,

156 
guöt
 
blocks
);

161 
	`gtk_¥ogªss_b¨_£t_a˘ivôy_°ï
 (
GtkProgªssB¨
 *
pb¨
,

162 
guöt
 
°ï
);

163 
	`gtk_¥ogªss_b¨_£t_a˘ivôy_blocks
 (
GtkProgªssB¨
 *
pb¨
,

164 
guöt
 
blocks
);

165 
	`gtk_¥ogªss_b¨_upd©e
 (
GtkProgªssB¨
 *
pb¨
,

166 
gdoubÀ
 
≥r˚¡age
);

170 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkradioaction.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_RADIO_ACTION_H__


36 
	#__GTK_RADIO_ACTION_H__


	)

38 
	~<gtk/gtktoggÀa˘i⁄.h
>

40 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_RADIO_ACTION
 (
	`gtk_ødio_a˘i⁄_gë_ty≥
 ())

	)

43 
	#GTK_RADIO_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RADIO_ACTION
, 
GtkRadioA˘i⁄
))

	)

44 
	#GTK_RADIO_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RADIO_ACTION
, 
GtkRadioA˘i⁄Cœss
))

	)

45 
	#GTK_IS_RADIO_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RADIO_ACTION
))

	)

46 
	#GTK_IS_RADIO_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RADIO_ACTION
))

	)

47 
	#GTK_RADIO_ACTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_RADIO_ACTION
, 
GtkRadioA˘i⁄Cœss
))

	)

49 
_GtkRadioA˘i⁄
 
	tGtkRadioA˘i⁄
;

50 
_GtkRadioA˘i⁄Priv©e
 
	tGtkRadioA˘i⁄Priv©e
;

51 
_GtkRadioA˘i⁄Cœss
 
	tGtkRadioA˘i⁄Cœss
;

53 
	s_GtkRadioA˘i⁄


55 
GtkToggÀA˘i⁄
 
	m∑ª¡
;

59 
GtkRadioA˘i⁄Priv©e
 *
GSEAL
 (
¥iv©e_d©a
);

62 
	s_GtkRadioA˘i⁄Cœss


64 
GtkToggÀA˘i⁄Cœss
 
	m∑ª¡_˛ass
;

66 (* 
	mch™ged
Ë(
GtkRadioA˘i⁄
 *
	ma˘i⁄
, GtkRadioA˘i⁄ *
	mcuºít
);

69 (*
	m_gtk_ª£rved1
) ();

70 (*
	m_gtk_ª£rved2
) ();

71 (*
	m_gtk_ª£rved3
) ();

72 (*
	m_gtk_ª£rved4
) ();

75 
GTy≥
 
	$gtk_ødio_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

76 
GtkRadioA˘i⁄
 *
	`gtk_ødio_a˘i⁄_√w
 (c⁄° 
gch¨
 *
«me
,

77 c⁄° 
gch¨
 *
œbñ
,

78 c⁄° 
gch¨
 *
toﬁtù
,

79 c⁄° 
gch¨
 *
°ock_id
,

80 
göt
 
vÆue
);

81 
GSLi°
 *
	`gtk_ødio_a˘i⁄_gë_group
 (
GtkRadioA˘i⁄
 *
a˘i⁄
);

82 
	`gtk_ødio_a˘i⁄_£t_group
 (
GtkRadioA˘i⁄
 *
a˘i⁄
,

83 
GSLi°
 *
group
);

84 
göt
 
	`gtk_ødio_a˘i⁄_gë_cuºít_vÆue
 (
GtkRadioA˘i⁄
 *
a˘i⁄
);

85 
	`gtk_ødio_a˘i⁄_£t_cuºít_vÆue
 (
GtkRadioA˘i⁄
 *
a˘i⁄
,

86 
göt
 
cuºít_vÆue
);

88 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkradiobutton.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_RADIO_BUTTON_H__


32 
	#__GTK_RADIO_BUTTON_H__


	)

35 
	~<gtk/gtkcheckbuâ⁄.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_RADIO_BUTTON
 (
	`gtk_ødio_buâ⁄_gë_ty≥
 ())

	)

41 
	#GTK_RADIO_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RADIO_BUTTON
, 
GtkRadioBuâ⁄
))

	)

42 
	#GTK_RADIO_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RADIO_BUTTON
, 
GtkRadioBuâ⁄Cœss
))

	)

43 
	#GTK_IS_RADIO_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RADIO_BUTTON
))

	)

44 
	#GTK_IS_RADIO_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RADIO_BUTTON
))

	)

45 
	#GTK_RADIO_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RADIO_BUTTON
, 
GtkRadioBuâ⁄Cœss
))

	)

48 
_GtkRadioBuâ⁄
 
	tGtkRadioBuâ⁄
;

49 
_GtkRadioBuâ⁄Cœss
 
	tGtkRadioBuâ⁄Cœss
;

51 
	s_GtkRadioBuâ⁄


53 
GtkCheckBuâ⁄
 
	mcheck_buâ⁄
;

55 
GSLi°
 *
GSEAL
 (
group
);

58 
	s_GtkRadioBuâ⁄Cœss


60 
GtkCheckBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

63 (*
	mgroup_ch™ged
Ë(
GtkRadioBuâ⁄
 *
	mødio_buâ⁄
);

66 (*
	m_gtk_ª£rved2
) ();

67 (*
	m_gtk_ª£rved3
) ();

68 (*
	m_gtk_ª£rved4
) ();

72 
GTy≥
 
	$gtk_ødio_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
GtkWidgë
* 
	`gtk_ødio_buâ⁄_√w
 (
GSLi°
 *
group
);

75 
GtkWidgë
* 
	`gtk_ødio_buâ⁄_√w_‰om_widgë
 (
GtkRadioBuâ⁄
 *
ødio_group_membî
);

76 
GtkWidgë
* 
	`gtk_ødio_buâ⁄_√w_wôh_œbñ
 (
GSLi°
 *
group
,

77 c⁄° 
gch¨
 *
œbñ
);

78 
GtkWidgë
* 
	`gtk_ødio_buâ⁄_√w_wôh_œbñ_‰om_widgë
 (
GtkRadioBuâ⁄
 *
ødio_group_membî
,

79 c⁄° 
gch¨
 *
œbñ
);

80 
GtkWidgë
* 
	`gtk_ødio_buâ⁄_√w_wôh_m√m⁄ic
 (
GSLi°
 *
group
,

81 c⁄° 
gch¨
 *
œbñ
);

82 
GtkWidgë
* 
	`gtk_ødio_buâ⁄_√w_wôh_m√m⁄ic_‰om_widgë
 (
GtkRadioBuâ⁄
 *
ødio_group_membî
,

83 c⁄° 
gch¨
 *
œbñ
);

84 
GSLi°
* 
	`gtk_ødio_buâ⁄_gë_group
 (
GtkRadioBuâ⁄
 *
ødio_buâ⁄
);

85 
	`gtk_ødio_buâ⁄_£t_group
 (
GtkRadioBuâ⁄
 *
ødio_buâ⁄
,

86 
GSLi°
 *
group
);

88 #i‚de‡
GTK_DISABLE_DEPRECATED


89 
	#gtk_ødio_buâ⁄_group
 
gtk_ødio_buâ⁄_gë_group


	)

92 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkradiomenuitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_RADIO_MENU_ITEM_H__


32 
	#__GTK_RADIO_MENU_ITEM_H__


	)

35 
	~<gtk/gtkcheckmíuôem.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_RADIO_MENU_ITEM
 (
	`gtk_ødio_míu_ôem_gë_ty≥
 ())

	)

41 
	#GTK_RADIO_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RADIO_MENU_ITEM
, 
GtkRadioMíuIãm
))

	)

42 
	#GTK_RADIO_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RADIO_MENU_ITEM
, 
GtkRadioMíuIãmCœss
))

	)

43 
	#GTK_IS_RADIO_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RADIO_MENU_ITEM
))

	)

44 
	#GTK_IS_RADIO_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RADIO_MENU_ITEM
))

	)

45 
	#GTK_RADIO_MENU_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RADIO_MENU_ITEM
, 
GtkRadioMíuIãmCœss
))

	)

48 
_GtkRadioMíuIãm
 
	tGtkRadioMíuIãm
;

49 
_GtkRadioMíuIãmCœss
 
	tGtkRadioMíuIãmCœss
;

51 
	s_GtkRadioMíuIãm


53 
GtkCheckMíuIãm
 
	mcheck_míu_ôem
;

55 
GSLi°
 *
GSEAL
 (
group
);

58 
	s_GtkRadioMíuIãmCœss


60 
GtkCheckMíuIãmCœss
 
	m∑ª¡_˛ass
;

63 (*
	mgroup_ch™ged
Ë(
GtkRadioMíuIãm
 *
	mødio_míu_ôem
);

66 (*
	m_gtk_ª£rved2
) ();

67 (*
	m_gtk_ª£rved3
) ();

68 (*
	m_gtk_ª£rved4
) ();

72 
GTy≥
 
	$gtk_ødio_míu_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
GtkWidgë
* 
	`gtk_ødio_míu_ôem_√w
 (
GSLi°
 *
group
);

75 
GtkWidgë
* 
	`gtk_ødio_míu_ôem_√w_wôh_œbñ
 (
GSLi°
 *
group
,

76 c⁄° 
gch¨
 *
œbñ
);

77 
GtkWidgë
* 
	`gtk_ødio_míu_ôem_√w_wôh_m√m⁄ic
 (
GSLi°
 *
group
,

78 c⁄° 
gch¨
 *
œbñ
);

79 
GtkWidgë
* 
	`gtk_ødio_míu_ôem_√w_‰om_widgë
 (
GtkRadioMíuIãm
 *
group
);

80 
GtkWidgë
 *
	`gtk_ødio_míu_ôem_√w_wôh_m√m⁄ic_‰om_widgë
 (
GtkRadioMíuIãm
 *
group
,

81 c⁄° 
gch¨
 *
œbñ
);

82 
GtkWidgë
 *
	`gtk_ødio_míu_ôem_√w_wôh_œbñ_‰om_widgë
 (
GtkRadioMíuIãm
 *
group
,

83 c⁄° 
gch¨
 *
œbñ
);

84 
GSLi°
* 
	`gtk_ødio_míu_ôem_gë_group
 (
GtkRadioMíuIãm
 *
ødio_míu_ôem
);

85 
	`gtk_ødio_míu_ôem_£t_group
 (
GtkRadioMíuIãm
 *
ødio_míu_ôem
,

86 
GSLi°
 *
group
);

88 #i‚de‡
GTK_DISABLE_DEPRECATED


89 
	#gtk_ødio_míu_ôem_group
 
gtk_ødio_míu_ôem_gë_group


	)

92 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h

23 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

27 #i‚de‡
__GTK_RADIO_TOOL_BUTTON_H__


28 
	#__GTK_RADIO_TOOL_BUTTON_H__


	)

30 
	~<gtk/gtktoggÀtoﬁbuâ⁄.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_RADIO_TOOL_BUTTON
 (
	`gtk_ødio_toﬁ_buâ⁄_gë_ty≥
 ())

	)

35 
	#GTK_RADIO_TOOL_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RADIO_TOOL_BUTTON
, 
GtkRadioToﬁBuâ⁄
))

	)

36 
	#GTK_RADIO_TOOL_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RADIO_TOOL_BUTTON
, 
GtkRadioToﬁBuâ⁄Cœss
))

	)

37 
	#GTK_IS_RADIO_TOOL_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RADIO_TOOL_BUTTON
))

	)

38 
	#GTK_IS_RADIO_TOOL_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RADIO_TOOL_BUTTON
))

	)

39 
	#GTK_RADIO_TOOL_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_RADIO_TOOL_BUTTON
, 
GtkRadioToﬁBuâ⁄Cœss
))

	)

41 
_GtkRadioToﬁBuâ⁄
 
	tGtkRadioToﬁBuâ⁄
;

42 
_GtkRadioToﬁBuâ⁄Cœss
 
	tGtkRadioToﬁBuâ⁄Cœss
;

44 
	s_GtkRadioToﬁBuâ⁄


46 
GtkToggÀToﬁBuâ⁄
 
	m∑ª¡
;

49 
	s_GtkRadioToﬁBuâ⁄Cœss


51 
GtkToggÀToﬁBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

54 (* 
	m_gtk_ª£rved1
) ();

55 (* 
	m_gtk_ª£rved2
) ();

56 (* 
	m_gtk_ª£rved3
) ();

57 (* 
	m_gtk_ª£rved4
) ();

60 
GTy≥
 
	$gtk_ødio_toﬁ_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

62 
GtkToﬁIãm
 *
	`gtk_ødio_toﬁ_buâ⁄_√w
 (
GSLi°
 *
group
);

63 
GtkToﬁIãm
 *
	`gtk_ødio_toﬁ_buâ⁄_√w_‰om_°ock
 (
GSLi°
 *
group
,

64 c⁄° 
gch¨
 *
°ock_id
);

65 
GtkToﬁIãm
 *
	`gtk_ødio_toﬁ_buâ⁄_√w_‰om_widgë
 (
GtkRadioToﬁBuâ⁄
 *
group
);

66 
GtkToﬁIãm
 *
	`gtk_ødio_toﬁ_buâ⁄_√w_wôh_°ock_‰om_widgë
 (
GtkRadioToﬁBuâ⁄
 *
group
,

67 c⁄° 
gch¨
 *
°ock_id
);

68 
GSLi°
 * 
	`gtk_ødio_toﬁ_buâ⁄_gë_group
 (
GtkRadioToﬁBuâ⁄
 *
buâ⁄
);

69 
	`gtk_ødio_toﬁ_buâ⁄_£t_group
 (
GtkRadioToﬁBuâ⁄
 *
buâ⁄
,

70 
GSLi°
 *
group
);

72 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrange.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_RANGE_H__


32 
	#__GTK_RANGE_H__


	)

35 
	~<gtk/gtkadju°mít.h
>

36 
	~<gtk/gtkwidgë.h
>

39 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_RANGE
 (
	`gtk_ønge_gë_ty≥
 ())

	)

43 
	#GTK_RANGE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RANGE
, 
GtkR™ge
))

	)

44 
	#GTK_RANGE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RANGE
, 
GtkR™geCœss
))

	)

45 
	#GTK_IS_RANGE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RANGE
))

	)

46 
	#GTK_IS_RANGE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RANGE
))

	)

47 
	#GTK_RANGE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RANGE
, 
GtkR™geCœss
))

	)

50 
_GtkR™geLayout
 
	tGtkR™geLayout
;

51 
_GtkR™geSãpTimî
 
	tGtkR™geSãpTimî
;

53 
_GtkR™ge
 
	tGtkR™ge
;

54 
_GtkR™geCœss
 
	tGtkR™geCœss
;

56 
	s_GtkR™ge


58 
GtkWidgë
 
	mwidgë
;

60 
GtkAdju°mít
 *
GSEAL
 (
adju°mít
);

61 
GtkUpd©eTy≥
 
GSEAL
 (
upd©e_pﬁicy
);

62 
guöt
 
GSEAL
 (
övîãd
) : 1;

66 
guöt
 
GSEAL
 (
Êù∑bÀ
) : 1;

72 
guöt
 
GSEAL
 (
has_°ï≥r_a
) : 1;

73 
guöt
 
GSEAL
 (
has_°ï≥r_b
) : 1;

74 
guöt
 
GSEAL
 (
has_°ï≥r_c
) : 1;

75 
guöt
 
GSEAL
 (
has_°ï≥r_d
) : 1;

77 
guöt
 
GSEAL
 (
√ed_ªˇlc
) : 1;

79 
guöt
 
GSEAL
 (
¶idî_size_fixed
) : 1;

81 
göt
 
GSEAL
 (
mö_¶idî_size
);

83 
GtkOrõ¡©i⁄
 
GSEAL
 (
‹õ¡©i⁄
);

86 
GdkRe˘™gÀ
 
GSEAL
 (
ønge_ª˘
);

88 
göt
 
GSEAL
 (
¶idî_°¨t
);

89 
göt
 
GSEAL
 (
¶idî_íd
);

92 
göt
 
GSEAL
 (
round_digôs
);

95 
guöt
 
GSEAL
 (
åough_˛ick_f‹w¨d
) : 1;

96 
guöt
 
GSEAL
 (
upd©e_≥ndög
) : 1;

97 
GtkR™geLayout
 *
GSEAL
 (
œyout
);

98 
GtkR™geSãpTimî
 *
GSEAL
 (
timî
);

99 
göt
 
GSEAL
 (
¶ide_öôül_¶idî_posôi⁄
);

100 
göt
 
GSEAL
 (
¶ide_öôül_co‹dö©e
);

101 
guöt
 
GSEAL
 (
upd©e_timeout_id
);

102 
GdkWödow
 *
GSEAL
 (
evít_wödow
);

105 
	s_GtkR™geCœss


107 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

110 
gch¨
 *
	m¶idî_dëaû
;

111 
gch¨
 *
	m°ï≥r_dëaû
;

113 (* 
	mvÆue_ch™ged
Ë(
GtkR™ge
 *
	mønge
);

114 (* 
	madju°_bounds
Ë(
GtkR™ge
 *
	mønge
,

115 
gdoubÀ
 
	m√w_vÆue
);

118 (* 
	mmove_¶idî
Ë(
GtkR™ge
 *
	mønge
,

119 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl
);

122 (* 
	mgë_ønge_b‹dî
Ë(
GtkR™ge
 *
	mønge
,

123 
GtkB‹dî
 *
	mb‹dî_
);

125 
gboﬁón
 (* 
ch™ge_vÆue
Ë(
GtkR™ge
 *
	mønge
,

126 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl
,

127 
gdoubÀ
 
	m√w_vÆue
);

130 (*
	m_gtk_ª£rved1
) ();

131 (*
	m_gtk_ª£rved2
) ();

132 (*
	m_gtk_ª£rved3
) ();

136 
GTy≥
 
	$gtk_ønge_gë_ty≥
 (Ë
G_GNUC_CONST
;

138 
	`gtk_ønge_£t_upd©e_pﬁicy
 (
GtkR™ge
 *
ønge
,

139 
GtkUpd©eTy≥
 
pﬁicy
);

140 
GtkUpd©eTy≥
 
	`gtk_ønge_gë_upd©e_pﬁicy
 (
GtkR™ge
 *
ønge
);

142 
	`gtk_ønge_£t_adju°mít
 (
GtkR™ge
 *
ønge
,

143 
GtkAdju°mít
 *
adju°mít
);

144 
GtkAdju°mít
* 
	`gtk_ønge_gë_adju°mít
 (
GtkR™ge
 *
ønge
);

146 
	`gtk_ønge_£t_övîãd
 (
GtkR™ge
 *
ønge
,

147 
gboﬁón
 
£âög
);

148 
gboﬁón
 
	`gtk_ønge_gë_övîãd
 (
GtkR™ge
 *
ønge
);

150 
	`gtk_ønge_£t_lowî_°ï≥r_£nsôivôy
 (
GtkR™ge
 *
ønge
,

151 
GtkSísôivôyTy≥
 
£nsôivôy
);

152 
GtkSísôivôyTy≥
 
	`gtk_ønge_gë_lowî_°ï≥r_£nsôivôy
 (
GtkR™ge
 *
ønge
);

153 
	`gtk_ønge_£t_uµî_°ï≥r_£nsôivôy
 (
GtkR™ge
 *
ønge
,

154 
GtkSísôivôyTy≥
 
£nsôivôy
);

155 
GtkSísôivôyTy≥
 
	`gtk_ønge_gë_uµî_°ï≥r_£nsôivôy
 (
GtkR™ge
 *
ønge
);

157 
	`gtk_ønge_£t_ö¸emíts
 (
GtkR™ge
 *
ønge
,

158 
gdoubÀ
 
°ï
,

159 
gdoubÀ
 
∑ge
);

160 
	`gtk_ønge_£t_ønge
 (
GtkR™ge
 *
ønge
,

161 
gdoubÀ
 
mö
,

162 
gdoubÀ
 
max
);

163 
	`gtk_ønge_£t_vÆue
 (
GtkR™ge
 *
ønge
,

164 
gdoubÀ
 
vÆue
);

165 
gdoubÀ
 
	`gtk_ønge_gë_vÆue
 (
GtkR™ge
 *
ønge
);

167 
	`gtk_ønge_£t_show_fûl_Àvñ
 (
GtkR™ge
 *
ønge
,

168 
gboﬁón
 
show_fûl_Àvñ
);

169 
gboﬁón
 
	`gtk_ønge_gë_show_fûl_Àvñ
 (
GtkR™ge
 *
ønge
);

170 
	`gtk_ønge_£t_ª°ri˘_to_fûl_Àvñ
 (
GtkR™ge
 *
ønge
,

171 
gboﬁón
 
ª°ri˘_to_fûl_Àvñ
);

172 
gboﬁón
 
	`gtk_ønge_gë_ª°ri˘_to_fûl_Àvñ
 (
GtkR™ge
 *
ønge
);

173 
	`gtk_ønge_£t_fûl_Àvñ
 (
GtkR™ge
 *
ønge
,

174 
gdoubÀ
 
fûl_Àvñ
);

175 
gdoubÀ
 
	`gtk_ønge_gë_fûl_Àvñ
 (
GtkR™ge
 *
ønge
);

178 
gdoubÀ
 
	`_gtk_ønge_gë_whìl_dñè
 (
GtkR™ge
 *
ønge
,

179 
GdkS¸ﬁlDúe˘i⁄
 
dúe˘i⁄
);

181 
	`_gtk_ønge_£t_°›_vÆues
 (
GtkR™ge
 *
ønge
,

182 
gdoubÀ
 *
vÆues
,

183 
göt
 
n_vÆues
);

184 
göt
 
	`_gtk_ønge_gë_°›_posôi⁄s
 (
GtkR™ge
 *
ønge
,

185 
göt
 **
vÆues
);

188 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrc.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_RC_H__


32 
	#__GTK_RC_H__


	)

35 
	~<gtk/gtk°yÀ.h
>

37 
G_BEGIN_DECLS


40 
_GtkIc⁄Fa˘‹y
 
	tGtkIc⁄Fa˘‹y
;

41 
_GtkRcC⁄ãxt
 
	tGtkRcC⁄ãxt
;

43 
_GtkRcStyÀCœss
 
	tGtkRcStyÀCœss
;

45 
	#GTK_TYPE_RC_STYLE
 (
	`gtk_rc_°yÀ_gë_ty≥
 ())

	)

46 
	#GTK_RC_STYLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_RC_STYLE
, 
GtkRcStyÀ
))

	)

47 
	#GTK_RC_STYLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RC_STYLE
, 
GtkRcStyÀCœss
))

	)

48 
	#GTK_IS_RC_STYLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_RC_STYLE
))

	)

49 
	#GTK_IS_RC_STYLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RC_STYLE
))

	)

50 
	#GTK_RC_STYLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RC_STYLE
, 
GtkRcStyÀCœss
))

	)

54 
	mGTK_RC_FG
 = 1 << 0,

55 
	mGTK_RC_BG
 = 1 << 1,

56 
	mGTK_RC_TEXT
 = 1 << 2,

57 
	mGTK_RC_BASE
 = 1 << 3

58 } 
	tGtkRcFœgs
;

60 
	s_GtkRcStyÀ


62 
GObje˘
 
	m∑ª¡_ö°™˚
;

66 
gch¨
 *
	m«me
;

67 
gch¨
 *
	mbg_pixm≠_«me
[5];

68 
P™goF⁄tDes¸ùti⁄
 *
	mf⁄t_desc
;

70 
GtkRcFœgs
 
	mcﬁ‹_Êags
[5];

71 
GdkCﬁ‹
 
	mfg
[5];

72 
GdkCﬁ‹
 
	mbg
[5];

73 
GdkCﬁ‹
 
	mãxt
[5];

74 
GdkCﬁ‹
 
	mba£
[5];

76 
göt
 
	mxthick√ss
;

77 
göt
 
	mythick√ss
;

80 
GAºay
 *
	mrc_¥›îtõs
;

83 
GSLi°
 *
	mrc_°yÀ_li°s
;

85 
GSLi°
 *
	mic⁄_Á˘‹õs
;

87 
guöt
 
	mígöe_•ecifõd
 : 1;

90 
	s_GtkRcStyÀCœss


92 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

99 
	mGtkRcStyÀ
 * (*
	m¸óã_rc_°yÀ
Ë(
GtkRcStyÀ
 *
	mrc_°yÀ
);

105 
guöt
 (*
∑r£
Ë(
GtkRcStyÀ
 *
	mrc_°yÀ
,

106 
GtkSëtögs
 *
	m£âögs
,

107 
GSˇ¬î
 *
	msˇ¬î
);

112 (*
	mmîge
Ë(
GtkRcStyÀ
 *
	mde°
,

113 
GtkRcStyÀ
 *
	m§c
);

117 
	mGtkStyÀ
 * (*
	m¸óã_°yÀ
Ë(
GtkRcStyÀ
 *
	mrc_°yÀ
);

120 (*
	m_gtk_ª£rved1
) ();

121 (*
	m_gtk_ª£rved2
) ();

122 (*
	m_gtk_ª£rved3
) ();

123 (*
	m_gtk_ª£rved4
) ();

126 #ifde‡
G_OS_WIN32


128 
	#gtk_rc_add_deÁu…_fûe
 
gtk_rc_add_deÁu…_fûe_utf8


	)

129 
	#gtk_rc_£t_deÁu…_fûes
 
gtk_rc_£t_deÁu…_fûes_utf8


	)

130 
	#gtk_rc_∑r£
 
gtk_rc_∑r£_utf8


	)

133 
_gtk_rc_öô
 ();

134 
GSLi°
* 
_gtk_rc_∑r£_widgë_˛ass_∑th
 (c⁄° 
gch¨
 *
∑âîn
);

135 
_gtk_rc_‰ì_widgë_˛ass_∑th
 (
GSLi°
 *
li°
);

136 
gboﬁón
 
_gtk_rc_m©ch_widgë_˛ass
 (
GSLi°
 *
li°
,

137 
göt
 
Àngth
,

138 
gch¨
 *
∑th
,

139 
gch¨
 *
∑th_ªvî£d
);

141 
gtk_rc_add_deÁu…_fûe
 (c⁄° 
gch¨
 *
fûíame
);

142 
gtk_rc_£t_deÁu…_fûes
 (
gch¨
 **
fûíames
);

143 
gch¨
** 
gtk_rc_gë_deÁu…_fûes
 ();

144 
GtkStyÀ
* 
gtk_rc_gë_°yÀ
 (
GtkWidgë
 *
widgë
);

145 
GtkStyÀ
* 
gtk_rc_gë_°yÀ_by_∑ths
 (
GtkSëtögs
 *
£âögs
,

146 c⁄° *
widgë_∑th
,

147 c⁄° *
˛ass_∑th
,

148 
GTy≥
 
ty≥
);

150 
gboﬁón
 
gtk_rc_ª∑r£_Æl_f‹_£âögs
 (
GtkSëtögs
 *
£âögs
,

151 
gboﬁón
 
f‹˚_lﬂd
);

152 
gtk_rc_ª£t_°yÀs
 (
GtkSëtögs
 *
£âögs
);

154 
gch¨
* 
gtk_rc_föd_pixm≠_ö_∑th
 (
GtkSëtögs
 *
£âögs
,

155 
GSˇ¬î
 *
sˇ¬î
,

156 c⁄° 
gch¨
 *
pixm≠_fûe
);

158 
gtk_rc_∑r£
 (c⁄° 
gch¨
 *
fûíame
);

159 
gtk_rc_∑r£_°rög
 (c⁄° 
gch¨
 *
rc_°rög
);

160 
gboﬁón
 
gtk_rc_ª∑r£_Æl
 ();

162 #i‚de‡
GTK_DISABLE_DEPRECATED


163 
gtk_rc_add_widgë_«me_°yÀ
 (
GtkRcStyÀ
 *
rc_°yÀ
,

164 c⁄° 
gch¨
 *
∑âîn
);

165 
gtk_rc_add_widgë_˛ass_°yÀ
 (
GtkRcStyÀ
 *
rc_°yÀ
,

166 c⁄° 
gch¨
 *
∑âîn
);

167 
gtk_rc_add_˛ass_°yÀ
 (
GtkRcStyÀ
 *
rc_°yÀ
,

168 c⁄° 
gch¨
 *
∑âîn
);

172 
GTy≥
 
	$gtk_rc_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

173 
GtkRcStyÀ
* 
	`gtk_rc_°yÀ_√w
 ();

174 
GtkRcStyÀ
* 
	`gtk_rc_°yÀ_c›y
 (GtkRcStyÀ *
‹ig
);

176 #i‚de‡
GTK_DISABLE_DEPRECATED


177 
	`gtk_rc_°yÀ_ªf
 (
GtkRcStyÀ
 *
rc_°yÀ
);

178 
	`gtk_rc_°yÀ_uƒef
 (
GtkRcStyÀ
 *
rc_°yÀ
);

181 
gch¨
* 
	`gtk_rc_föd_moduÀ_ö_∑th
 (c⁄° gch¨ *
moduÀ_fûe
);

182 
gch¨
* 
	`gtk_rc_gë_theme_dú
 ();

183 
gch¨
* 
	`gtk_rc_gë_moduÀ_dú
 ();

184 
gch¨
* 
	`gtk_rc_gë_im_moduÀ_∑th
 ();

185 
gch¨
* 
	`gtk_rc_gë_im_moduÀ_fûe
 ();

189 
GTK_RC_TOKEN_INVALID
 = 
G_TOKEN_LAST
,

190 
GTK_RC_TOKEN_INCLUDE
,

191 
GTK_RC_TOKEN_NORMAL
,

192 
GTK_RC_TOKEN_ACTIVE
,

193 
GTK_RC_TOKEN_PRELIGHT
,

194 
GTK_RC_TOKEN_SELECTED
,

195 
GTK_RC_TOKEN_INSENSITIVE
,

196 
GTK_RC_TOKEN_FG
,

197 
GTK_RC_TOKEN_BG
,

198 
GTK_RC_TOKEN_TEXT
,

199 
GTK_RC_TOKEN_BASE
,

200 
GTK_RC_TOKEN_XTHICKNESS
,

201 
GTK_RC_TOKEN_YTHICKNESS
,

202 
GTK_RC_TOKEN_FONT
,

203 
GTK_RC_TOKEN_FONTSET
,

204 
GTK_RC_TOKEN_FONT_NAME
,

205 
GTK_RC_TOKEN_BG_PIXMAP
,

206 
GTK_RC_TOKEN_PIXMAP_PATH
,

207 
GTK_RC_TOKEN_STYLE
,

208 
GTK_RC_TOKEN_BINDING
,

209 
GTK_RC_TOKEN_BIND
,

210 
GTK_RC_TOKEN_WIDGET
,

211 
GTK_RC_TOKEN_WIDGET_CLASS
,

212 
GTK_RC_TOKEN_CLASS
,

213 
GTK_RC_TOKEN_LOWEST
,

214 
GTK_RC_TOKEN_GTK
,

215 
GTK_RC_TOKEN_APPLICATION
,

216 
GTK_RC_TOKEN_THEME
,

217 
GTK_RC_TOKEN_RC
,

218 
GTK_RC_TOKEN_HIGHEST
,

219 
GTK_RC_TOKEN_ENGINE
,

220 
GTK_RC_TOKEN_MODULE_PATH
,

221 
GTK_RC_TOKEN_IM_MODULE_PATH
,

222 
GTK_RC_TOKEN_IM_MODULE_FILE
,

223 
GTK_RC_TOKEN_STOCK
,

224 
GTK_RC_TOKEN_LTR
,

225 
GTK_RC_TOKEN_RTL
,

226 
GTK_RC_TOKEN_COLOR
,

227 
GTK_RC_TOKEN_UNBIND
,

228 
GTK_RC_TOKEN_LAST


229 } 
	tGtkRcTokíTy≥
;

231 
GSˇ¬î
* 
	`gtk_rc_sˇ¬î_√w
 ();

232 
guöt
 
	`gtk_rc_∑r£_cﬁ‹
 (
GSˇ¬î
 *
sˇ¬î
,

233 
GdkCﬁ‹
 *
cﬁ‹
);

234 
guöt
 
	`gtk_rc_∑r£_cﬁ‹_fuŒ
 (
GSˇ¬î
 *
sˇ¬î
,

235 
GtkRcStyÀ
 *
°yÀ
,

236 
GdkCﬁ‹
 *
cﬁ‹
);

237 
guöt
 
	`gtk_rc_∑r£_°©e
 (
GSˇ¬î
 *
sˇ¬î
,

238 
GtkSèãTy≥
 *
°©e
);

239 
guöt
 
	`gtk_rc_∑r£_¥i‹ôy
 (
GSˇ¬î
 *
sˇ¬î
,

240 
GtkP©hPri‹ôyTy≥
 *
¥i‹ôy
);

245 
	s_GtkRcPr›îty


248 
GQu¨k
 
ty≥_«me
;

249 
GQu¨k
 
¥›îty_«me
;

252 
gch¨
 *
‹igö
;

253 
GVÆue
 
vÆue
;

255 c⁄° 
GtkRcPr›îty
* 
	`_gtk_rc_°yÀ_lookup_rc_¥›îty
 (
GtkRcStyÀ
 *
rc_°yÀ
,

256 
GQu¨k
 
ty≥_«me
,

257 
GQu¨k
 
¥›îty_«me
);

258 
	`_gtk_rc_°yÀ_£t_rc_¥›îty
 (
GtkRcStyÀ
 *
rc_°yÀ
,

259 
GtkRcPr›îty
 *
¥›îty
);

260 
	`_gtk_rc_°yÀ_un£t_rc_¥›îty
 (
GtkRcStyÀ
 *
rc_°yÀ
,

261 
GQu¨k
 
ty≥_«me
,

262 
GQu¨k
 
¥›îty_«me
);

264 
GSLi°
 * 
	`_gtk_rc_°yÀ_gë_cﬁ‹_hashes
 (
GtkRcStyÀ
 *
rc_°yÀ
);

266 c⁄° 
gch¨
* 
	`_gtk_rc_c⁄ãxt_gë_deÁu…_f⁄t_«me
 (
GtkSëtögs
 *
£âögs
);

267 
	`_gtk_rc_c⁄ãxt_de°roy
 (
GtkSëtögs
 *
£âögs
);

269 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentaction.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_RECENT_ACTION_H__


27 
	#__GTK_RECENT_ACTION_H__


	)

29 
	~<gtk/gtka˘i⁄.h
>

30 
	~<gtk/gtkª˚¡m™agî.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_RECENT_ACTION
 (
	`gtk_ª˚¡_a˘i⁄_gë_ty≥
 ())

	)

35 
	#GTK_RECENT_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_ACTION
, 
GtkRe˚¡A˘i⁄
))

	)

36 
	#GTK_IS_RECENT_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_ACTION
))

	)

37 
	#GTK_RECENT_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RECENT_ACTION
, 
GtkRe˚¡A˘i⁄Cœss
))

	)

38 
	#GTK_IS_RECENT_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RECENT_ACTION
))

	)

39 
	#GTK_RECENT_ACTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RECENT_ACTION
, 
GtkRe˚¡A˘i⁄Cœss
))

	)

41 
_GtkRe˚¡A˘i⁄
 
	tGtkRe˚¡A˘i⁄
;

42 
_GtkRe˚¡A˘i⁄Priv©e
 
	tGtkRe˚¡A˘i⁄Priv©e
;

43 
_GtkRe˚¡A˘i⁄Cœss
 
	tGtkRe˚¡A˘i⁄Cœss
;

45 
	s_GtkRe˚¡A˘i⁄


47 
GtkA˘i⁄
 
	m∑ª¡_ö°™˚
;

50 
GtkRe˚¡A˘i⁄Priv©e
 *
GSEAL
 (
¥iv
);

53 
	s_GtkRe˚¡A˘i⁄Cœss


55 
GtkA˘i⁄Cœss
 
	m∑ª¡_˛ass
;

58 
GTy≥
 
	$gtk_ª˚¡_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

59 
GtkA˘i⁄
 *
	`gtk_ª˚¡_a˘i⁄_√w
 (c⁄° 
gch¨
 *
«me
,

60 c⁄° 
gch¨
 *
œbñ
,

61 c⁄° 
gch¨
 *
toﬁtù
,

62 c⁄° 
gch¨
 *
°ock_id
);

63 
GtkA˘i⁄
 *
	`gtk_ª˚¡_a˘i⁄_√w_f‹_m™agî
 (c⁄° 
gch¨
 *
«me
,

64 c⁄° 
gch¨
 *
œbñ
,

65 c⁄° 
gch¨
 *
toﬁtù
,

66 c⁄° 
gch¨
 *
°ock_id
,

67 
GtkRe˚¡M™agî
 *
m™agî
);

68 
gboﬁón
 
	`gtk_ª˚¡_a˘i⁄_gë_show_numbîs
 (
GtkRe˚¡A˘i⁄
 *
a˘i⁄
);

69 
	`gtk_ª˚¡_a˘i⁄_£t_show_numbîs
 (
GtkRe˚¡A˘i⁄
 *
a˘i⁄
,

70 
gboﬁón
 
show_numbîs
);

72 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentchooser.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_RECENT_CHOOSER_H__


27 
	#__GTK_RECENT_CHOOSER_H__


	)

29 
	~<gtk/gtkwidgë.h
>

30 
	~<gtk/gtkª˚¡m™agî.h
>

31 
	~<gtk/gtkª˚¡fûãr.h
>

33 
	gG_BEGIN_DECLS


35 
	#GTK_TYPE_RECENT_CHOOSER
 (
	`gtk_ª˚¡_choo£r_gë_ty≥
 ())

	)

36 
	#GTK_RECENT_CHOOSER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_CHOOSER
, 
GtkRe˚¡Choo£r
))

	)

37 
	#GTK_IS_RECENT_CHOOSER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_CHOOSER
))

	)

38 
	#GTK_RECENT_CHOOSER_GET_IFACE
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((ö°), 
GTK_TYPE_RECENT_CHOOSER
, 
GtkRe˚¡Choo£rIÁ˚
))

	)

56 
	mGTK_RECENT_SORT_NONE
 = 0,

57 
	mGTK_RECENT_SORT_MRU
,

58 
	mGTK_RECENT_SORT_LRU
,

59 
	mGTK_RECENT_SORT_CUSTOM


60 } 
	tGtkRe˚¡S‹tTy≥
;

62 
	$göt
 (*
	tGtkRe˚¡S‹tFunc
Ë(
	tGtkRe˚¡Info
 *
	ta
,

63 
	tGtkRe˚¡Info
 *
	tb
,

64 
	tgpoöãr
 
	tu£r_d©a
);

67 
_GtkRe˚¡Choo£r
 
	tGtkRe˚¡Choo£r
;

68 
_GtkRe˚¡Choo£rIÁ˚
 
	tGtkRe˚¡Choo£rIÁ˚
;

70 
	#GTK_RECENT_CHOOSER_ERROR
 (
	`gtk_ª˚¡_choo£r_îr‹_qu¨k
 ())

	)

74 
GTK_RECENT_CHOOSER_ERROR_NOT_FOUND
,

75 
GTK_RECENT_CHOOSER_ERROR_INVALID_URI


76 } 
	tGtkRe˚¡Choo£rEº‹
;

78 
GQu¨k
 
	`gtk_ª˚¡_choo£r_îr‹_qu¨k
 ();

81 
	s_GtkRe˚¡Choo£rIÁ˚


83 
GTy≥I¡îÁ˚
 
ba£_iÁ˚
;

88 
	`gboﬁón
 (* 
£t_cuºít_uri
Ë(
GtkRe˚¡Choo£r
 *
choo£r
,

89 c⁄° 
gch¨
 *
uri
,

90 
GEº‹
 **
îr‹
);

91 
gch¨
 * (* 
gë_cuºít_uri
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

92 
	`gboﬁón
 (* 
£À˘_uri
Ë(
GtkRe˚¡Choo£r
 *
choo£r
,

93 c⁄° 
gch¨
 *
uri
,

94 
GEº‹
 **
îr‹
);

95 (* 
un£À˘_uri
Ë(
GtkRe˚¡Choo£r
 *
choo£r
,

96 c⁄° 
gch¨
 *
uri
);

97 (* 
£À˘_Æl
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

98 (* 
un£À˘_Æl
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

99 
GLi°
 * (* 
gë_ôems
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

100 
GtkRe˚¡M™agî
 *(* 
gë_ª˚¡_m™agî
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

101 (* 
add_fûãr
Ë(
GtkRe˚¡Choo£r
 *
choo£r
,

102 
GtkRe˚¡Fûãr
 *
fûãr
);

103 (* 
ªmove_fûãr
Ë(
GtkRe˚¡Choo£r
 *
choo£r
,

104 
GtkRe˚¡Fûãr
 *
fûãr
);

105 
GSLi°
 * (* 
li°_fûãrs
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

106 (* 
£t_s‹t_func
Ë(
GtkRe˚¡Choo£r
 *
choo£r
,

107 
GtkRe˚¡S‹tFunc
 
s‹t_func
,

108 
gpoöãr
 
d©a
,

109 
GDe°royNŸify
 
de°roy
);

114 (* 
ôem_a˘iv©ed
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

115 (* 
£À˘i⁄_ch™ged
Ë(
GtkRe˚¡Choo£r
 *
choo£r
);

118 
GTy≥
 
	$gtk_ª˚¡_choo£r_gë_ty≥
 (Ë
G_GNUC_CONST
;

123 
	`gtk_ª˚¡_choo£r_£t_show_¥iv©e
 (
GtkRe˚¡Choo£r
 *
choo£r
,

124 
gboﬁón
 
show_¥iv©e
);

125 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_show_¥iv©e
 (
GtkRe˚¡Choo£r
 *
choo£r
);

126 
	`gtk_ª˚¡_choo£r_£t_show_nŸ_found
 (
GtkRe˚¡Choo£r
 *
choo£r
,

127 
gboﬁón
 
show_nŸ_found
);

128 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_show_nŸ_found
 (
GtkRe˚¡Choo£r
 *
choo£r
);

129 
	`gtk_ª˚¡_choo£r_£t_£À˘_mu…ùÀ
 (
GtkRe˚¡Choo£r
 *
choo£r
,

130 
gboﬁón
 
£À˘_mu…ùÀ
);

131 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_£À˘_mu…ùÀ
 (
GtkRe˚¡Choo£r
 *
choo£r
);

132 
	`gtk_ª˚¡_choo£r_£t_limô
 (
GtkRe˚¡Choo£r
 *
choo£r
,

133 
göt
 
limô
);

134 
göt
 
	`gtk_ª˚¡_choo£r_gë_limô
 (
GtkRe˚¡Choo£r
 *
choo£r
);

135 
	`gtk_ª˚¡_choo£r_£t_loˇl_⁄ly
 (
GtkRe˚¡Choo£r
 *
choo£r
,

136 
gboﬁón
 
loˇl_⁄ly
);

137 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_loˇl_⁄ly
 (
GtkRe˚¡Choo£r
 *
choo£r
);

138 
	`gtk_ª˚¡_choo£r_£t_show_tùs
 (
GtkRe˚¡Choo£r
 *
choo£r
,

139 
gboﬁón
 
show_tùs
);

140 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_show_tùs
 (
GtkRe˚¡Choo£r
 *
choo£r
);

141 #i‚de‡
GTK_DISABLE_DEPRECATED


142 
	`gtk_ª˚¡_choo£r_£t_show_numbîs
 (
GtkRe˚¡Choo£r
 *
choo£r
,

143 
gboﬁón
 
show_numbîs
);

144 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_show_numbîs
 (
GtkRe˚¡Choo£r
 *
choo£r
);

146 
	`gtk_ª˚¡_choo£r_£t_show_ic⁄s
 (
GtkRe˚¡Choo£r
 *
choo£r
,

147 
gboﬁón
 
show_ic⁄s
);

148 
gboﬁón
 
	`gtk_ª˚¡_choo£r_gë_show_ic⁄s
 (
GtkRe˚¡Choo£r
 *
choo£r
);

149 
	`gtk_ª˚¡_choo£r_£t_s‹t_ty≥
 (
GtkRe˚¡Choo£r
 *
choo£r
,

150 
GtkRe˚¡S‹tTy≥
 
s‹t_ty≥
);

151 
GtkRe˚¡S‹tTy≥
 
	`gtk_ª˚¡_choo£r_gë_s‹t_ty≥
 (
GtkRe˚¡Choo£r
 *
choo£r
);

152 
	`gtk_ª˚¡_choo£r_£t_s‹t_func
 (
GtkRe˚¡Choo£r
 *
choo£r
,

153 
GtkRe˚¡S‹tFunc
 
s‹t_func
,

154 
gpoöãr
 
s‹t_d©a
,

155 
GDe°royNŸify
 
d©a_de°roy
);

160 
gboﬁón
 
	`gtk_ª˚¡_choo£r_£t_cuºít_uri
 (
GtkRe˚¡Choo£r
 *
choo£r
,

161 c⁄° 
gch¨
 *
uri
,

162 
GEº‹
 **
îr‹
);

163 
gch¨
 * 
	`gtk_ª˚¡_choo£r_gë_cuºít_uri
 (
GtkRe˚¡Choo£r
 *
choo£r
);

164 
GtkRe˚¡Info
 *
	`gtk_ª˚¡_choo£r_gë_cuºít_ôem
 (
GtkRe˚¡Choo£r
 *
choo£r
);

165 
gboﬁón
 
	`gtk_ª˚¡_choo£r_£À˘_uri
 (
GtkRe˚¡Choo£r
 *
choo£r
,

166 c⁄° 
gch¨
 *
uri
,

167 
GEº‹
 **
îr‹
);

168 
	`gtk_ª˚¡_choo£r_un£À˘_uri
 (
GtkRe˚¡Choo£r
 *
choo£r
,

169 c⁄° 
gch¨
 *
uri
);

170 
	`gtk_ª˚¡_choo£r_£À˘_Æl
 (
GtkRe˚¡Choo£r
 *
choo£r
);

171 
	`gtk_ª˚¡_choo£r_un£À˘_Æl
 (
GtkRe˚¡Choo£r
 *
choo£r
);

172 
GLi°
 * 
	`gtk_ª˚¡_choo£r_gë_ôems
 (
GtkRe˚¡Choo£r
 *
choo£r
);

173 
gch¨
 ** 
	`gtk_ª˚¡_choo£r_gë_uris
 (
GtkRe˚¡Choo£r
 *
choo£r
,

174 
gsize
 *
Àngth
);

179 
	`gtk_ª˚¡_choo£r_add_fûãr
 (
GtkRe˚¡Choo£r
 *
choo£r
,

180 
GtkRe˚¡Fûãr
 *
fûãr
);

181 
	`gtk_ª˚¡_choo£r_ªmove_fûãr
 (
GtkRe˚¡Choo£r
 *
choo£r
,

182 
GtkRe˚¡Fûãr
 *
fûãr
);

183 
GSLi°
 * 
	`gtk_ª˚¡_choo£r_li°_fûãrs
 (
GtkRe˚¡Choo£r
 *
choo£r
);

184 
	`gtk_ª˚¡_choo£r_£t_fûãr
 (
GtkRe˚¡Choo£r
 *
choo£r
,

185 
GtkRe˚¡Fûãr
 *
fûãr
);

186 
GtkRe˚¡Fûãr
 *
	`gtk_ª˚¡_choo£r_gë_fûãr
 (
GtkRe˚¡Choo£r
 *
choo£r
);

189 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentchooserdialog.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_RECENT_CHOOSER_DIALOG_H__


26 
	#__GTK_RECENT_CHOOSER_DIALOG_H__


	)

28 
	~<gtk/gtkdülog.h
>

29 
	~<gtk/gtkª˚¡choo£r.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_RECENT_CHOOSER_DIALOG
 (
	`gtk_ª˚¡_choo£r_dülog_gë_ty≥
 ())

	)

34 
	#GTK_RECENT_CHOOSER_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_DIALOG
, 
GtkRe˚¡Choo£rDülog
))

	)

35 
	#GTK_IS_RECENT_CHOOSER_DIALOG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_DIALOG
))

	)

36 
	#GTK_RECENT_CHOOSER_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RECENT_CHOOSER_DIALOG
, 
GtkRe˚¡Choo£rDülogCœss
))

	)

37 
	#GTK_IS_RECENT_CHOOSER_DIALOG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RECENT_CHOOSER_DIALOG
))

	)

38 
	#GTK_RECENT_CHOOSER_DIALOG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_DIALOG
, 
GtkRe˚¡Choo£rDülogCœss
))

	)

40 
_GtkRe˚¡Choo£rDülog
 
	tGtkRe˚¡Choo£rDülog
;

41 
_GtkRe˚¡Choo£rDülogCœss
 
	tGtkRe˚¡Choo£rDülogCœss
;

43 
_GtkRe˚¡Choo£rDülogPriv©e
 
	tGtkRe˚¡Choo£rDülogPriv©e
;

46 
	s_GtkRe˚¡Choo£rDülog


49 
GtkDülog
 
	m∑ª¡_ö°™˚
;

51 
GtkRe˚¡Choo£rDülogPriv©e
 *
GSEAL
 (
¥iv
);

54 
	s_GtkRe˚¡Choo£rDülogCœss


56 
GtkDülogCœss
 
	m∑ª¡_˛ass
;

60 
GTy≥
 
	$gtk_ª˚¡_choo£r_dülog_gë_ty≥
 (Ë
G_GNUC_CONST
;

62 
GtkWidgë
 *
	$gtk_ª˚¡_choo£r_dülog_√w
 (c⁄° 
gch¨
 *
tôÀ
,

63 
GtkWödow
 *
∑ª¡
,

64 c⁄° 
gch¨
 *
fú°_buâ⁄_ãxt
,

65 ...Ë
G_GNUC_NULL_TERMINATED
;

66 
GtkWidgë
 *
	$gtk_ª˚¡_choo£r_dülog_√w_f‹_m™agî
 (c⁄° 
gch¨
 *
tôÀ
,

67 
GtkWödow
 *
∑ª¡
,

68 
GtkRe˚¡M™agî
 *
m™agî
,

69 c⁄° 
gch¨
 *
fú°_buâ⁄_ãxt
,

70 ...Ë
G_GNUC_NULL_TERMINATED
;

72 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_RECENT_CHOOSER_MENU_H__


26 
	#__GTK_RECENT_CHOOSER_MENU_H__


	)

28 
	~<gtk/gtkmíu.h
>

29 
	~<gtk/gtkª˚¡choo£r.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_RECENT_CHOOSER_MENU
 (
	`gtk_ª˚¡_choo£r_míu_gë_ty≥
 ())

	)

34 
	#GTK_RECENT_CHOOSER_MENU
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_MENU
, 
GtkRe˚¡Choo£rMíu
))

	)

35 
	#GTK_IS_RECENT_CHOOSER_MENU
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_MENU
))

	)

36 
	#GTK_RECENT_CHOOSER_MENU_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RECENT_CHOOSER_MENU
, 
GtkRe˚¡Choo£rMíuCœss
))

	)

37 
	#GTK_IS_RECENT_CHOOSER_MENU_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RECENT_CHOOSER_MENU
))

	)

38 
	#GTK_RECENT_CHOOSER_MENU_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_MENU
, 
GtkRe˚¡Choo£rMíuCœss
))

	)

40 
_GtkRe˚¡Choo£rMíu
 
	tGtkRe˚¡Choo£rMíu
;

41 
_GtkRe˚¡Choo£rMíuCœss
 
	tGtkRe˚¡Choo£rMíuCœss
;

42 
_GtkRe˚¡Choo£rMíuPriv©e
 
	tGtkRe˚¡Choo£rMíuPriv©e
;

44 
	s_GtkRe˚¡Choo£rMíu


47 
GtkMíu
 
	m∑ª¡_ö°™˚
;

49 
GtkRe˚¡Choo£rMíuPriv©e
 *
GSEAL
 (
¥iv
);

52 
	s_GtkRe˚¡Choo£rMíuCœss


54 
GtkMíuCœss
 
	m∑ª¡_˛ass
;

57 (* 
	mgtk_ª˚¡1
) ();

58 (* 
	mgtk_ª˚¡2
) ();

59 (* 
	mgtk_ª˚¡3
) ();

60 (* 
	mgtk_ª˚¡4
) ();

63 
GTy≥
 
	$gtk_ª˚¡_choo£r_míu_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
GtkWidgë
 *
	`gtk_ª˚¡_choo£r_míu_√w
 ();

66 
GtkWidgë
 *
	`gtk_ª˚¡_choo£r_míu_√w_f‹_m™agî
 (
GtkRe˚¡M™agî
 *
m™agî
);

68 
gboﬁón
 
	`gtk_ª˚¡_choo£r_míu_gë_show_numbîs
 (
GtkRe˚¡Choo£rMíu
 *
míu
);

69 
	`gtk_ª˚¡_choo£r_míu_£t_show_numbîs
 (
GtkRe˚¡Choo£rMíu
 *
míu
,

70 
gboﬁón
 
show_numbîs
);

72 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentchooserwidget.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_RECENT_CHOOSER_WIDGET_H__


26 
	#__GTK_RECENT_CHOOSER_WIDGET_H__


	)

28 
	~<gtk/gtkª˚¡choo£r.h
>

29 
	~<gtk/gtkvbox.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_RECENT_CHOOSER_WIDGET
 (
	`gtk_ª˚¡_choo£r_widgë_gë_ty≥
 ())

	)

34 
	#GTK_RECENT_CHOOSER_WIDGET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_WIDGET
, 
GtkRe˚¡Choo£rWidgë
))

	)

35 
	#GTK_IS_RECENT_CHOOSER_WIDGET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_WIDGET
))

	)

36 
	#GTK_RECENT_CHOOSER_WIDGET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RECENT_CHOOSER_WIDGET
, 
GtkRe˚¡Choo£rWidgëCœss
))

	)

37 
	#GTK_IS_RECENT_CHOOSER_WIDGET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RECENT_CHOOSER_WIDGET
))

	)

38 
	#GTK_RECENT_CHOOSER_WIDGET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RECENT_CHOOSER_WIDGET
, 
GtkRe˚¡Choo£rWidgëCœss
))

	)

40 
_GtkRe˚¡Choo£rWidgë
 
	tGtkRe˚¡Choo£rWidgë
;

41 
_GtkRe˚¡Choo£rWidgëCœss
 
	tGtkRe˚¡Choo£rWidgëCœss
;

43 
_GtkRe˚¡Choo£rWidgëPriv©e
 
	tGtkRe˚¡Choo£rWidgëPriv©e
;

45 
	s_GtkRe˚¡Choo£rWidgë


48 
GtkVBox
 
	m∑ª¡_ö°™˚
;

50 
GtkRe˚¡Choo£rWidgëPriv©e
 *
GSEAL
 (
¥iv
);

53 
	s_GtkRe˚¡Choo£rWidgëCœss


55 
GtkVBoxCœss
 
	m∑ª¡_˛ass
;

58 
GTy≥
 
	$gtk_ª˚¡_choo£r_widgë_gë_ty≥
 (Ë
G_GNUC_CONST
;

59 
GtkWidgë
 *
	`gtk_ª˚¡_choo£r_widgë_√w
 ();

60 
GtkWidgë
 *
	`gtk_ª˚¡_choo£r_widgë_√w_f‹_m™agî
 (
GtkRe˚¡M™agî
 *
m™agî
);

62 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentfilter.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_RECENT_FILTER_H__


26 
	#__GTK_RECENT_FILTER_H__


	)

28 
	~<glib-obje˘.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_RECENT_FILTER
 (
	`gtk_ª˚¡_fûãr_gë_ty≥
 ())

	)

33 
	#GTK_RECENT_FILTER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_FILTER
, 
GtkRe˚¡Fûãr
))

	)

34 
	#GTK_IS_RECENT_FILTER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_FILTER
))

	)

36 
_GtkRe˚¡Fûãr
 
	tGtkRe˚¡Fûãr
;

37 
_GtkRe˚¡FûãrInfo
 
	tGtkRe˚¡FûãrInfo
;

40 
	mGTK_RECENT_FILTER_URI
 = 1 << 0,

41 
	mGTK_RECENT_FILTER_DISPLAY_NAME
 = 1 << 1,

42 
	mGTK_RECENT_FILTER_MIME_TYPE
 = 1 << 2,

43 
	mGTK_RECENT_FILTER_APPLICATION
 = 1 << 3,

44 
	mGTK_RECENT_FILTER_GROUP
 = 1 << 4,

45 
	mGTK_RECENT_FILTER_AGE
 = 1 << 5

46 } 
	tGtkRe˚¡FûãrFœgs
;

48 
	$gboﬁón
 (*
	tGtkRe˚¡FûãrFunc
Ë(c⁄° 
	tGtkRe˚¡FûãrInfo
 *
	tfûãr_öfo
,

49 
	tgpoöãr
 
	tu£r_d©a
);

51 
	s_GtkRe˚¡FûãrInfo


53 
GtkRe˚¡FûãrFœgs
 
c⁄èös
;

55 c⁄° 
gch¨
 *
uri
;

56 c⁄° 
gch¨
 *
di•œy_«me
;

57 c⁄° 
gch¨
 *
mime_ty≥
;

58 c⁄° 
gch¨
 **
≠∂iˇti⁄s
;

59 c⁄° 
gch¨
 **
groups
;

61 
göt
 
age
;

64 
GTy≥
 
	$gtk_ª˚¡_fûãr_gë_ty≥
 (Ë
G_GNUC_CONST
;

66 
GtkRe˚¡Fûãr
 * 
	`gtk_ª˚¡_fûãr_√w
 ();

67 
	`gtk_ª˚¡_fûãr_£t_«me
 (
GtkRe˚¡Fûãr
 *
fûãr
,

68 c⁄° 
gch¨
 *
«me
);

69 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ª˚¡_fûãr_gë_«me
 (
GtkRe˚¡Fûãr
 *
fûãr
);

71 
	`gtk_ª˚¡_fûãr_add_mime_ty≥
 (
GtkRe˚¡Fûãr
 *
fûãr
,

72 c⁄° 
gch¨
 *
mime_ty≥
);

73 
	`gtk_ª˚¡_fûãr_add_∑âîn
 (
GtkRe˚¡Fûãr
 *
fûãr
,

74 c⁄° 
gch¨
 *
∑âîn
);

75 
	`gtk_ª˚¡_fûãr_add_pixbuf_f‹m©s
 (
GtkRe˚¡Fûãr
 *
fûãr
);

76 
	`gtk_ª˚¡_fûãr_add_≠∂iˇti⁄
 (
GtkRe˚¡Fûãr
 *
fûãr
,

77 c⁄° 
gch¨
 *
≠∂iˇti⁄
);

78 
	`gtk_ª˚¡_fûãr_add_group
 (
GtkRe˚¡Fûãr
 *
fûãr
,

79 c⁄° 
gch¨
 *
group
);

80 
	`gtk_ª˚¡_fûãr_add_age
 (
GtkRe˚¡Fûãr
 *
fûãr
,

81 
göt
 
days
);

82 
	`gtk_ª˚¡_fûãr_add_cu°om
 (
GtkRe˚¡Fûãr
 *
fûãr
,

83 
GtkRe˚¡FûãrFœgs
 
√eded
,

84 
GtkRe˚¡FûãrFunc
 
func
,

85 
gpoöãr
 
d©a
,

86 
GDe°royNŸify
 
d©a_de°roy
);

88 
GtkRe˚¡FûãrFœgs
 
	`gtk_ª˚¡_fûãr_gë_√eded
 (
GtkRe˚¡Fûãr
 *
fûãr
);

89 
gboﬁón
 
	`gtk_ª˚¡_fûãr_fûãr
 (
GtkRe˚¡Fûãr
 *
fûãr
,

90 c⁄° 
GtkRe˚¡FûãrInfo
 *
fûãr_öfo
);

92 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkrecentmanager.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_RECENT_MANAGER_H__


26 
	#__GTK_RECENT_MANAGER_H__


	)

28 
	~<gdk-pixbuf/gdk-pixbuf.h
>

29 
	~<gdk/gdk.h
>

30 
	~<time.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_RECENT_INFO
 (
	`gtk_ª˚¡_öfo_gë_ty≥
 ())

	)

36 
	#GTK_TYPE_RECENT_MANAGER
 (
	`gtk_ª˚¡_m™agî_gë_ty≥
 ())

	)

37 
	#GTK_RECENT_MANAGER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RECENT_MANAGER
, 
GtkRe˚¡M™agî
))

	)

38 
	#GTK_IS_RECENT_MANAGER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RECENT_MANAGER
))

	)

39 
	#GTK_RECENT_MANAGER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RECENT_MANAGER
, 
GtkRe˚¡M™agîCœss
))

	)

40 
	#GTK_IS_RECENT_MANAGER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RECENT_MANAGER
))

	)

41 
	#GTK_RECENT_MANAGER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RECENT_MANAGER
, 
GtkRe˚¡M™agîCœss
))

	)

43 
_GtkRe˚¡Info
 
	tGtkRe˚¡Info
;

44 
_GtkRe˚¡D©a
 
	tGtkRe˚¡D©a
;

45 
_GtkRe˚¡M™agî
 
	tGtkRe˚¡M™agî
;

46 
_GtkRe˚¡M™agîCœss
 
	tGtkRe˚¡M™agîCœss
;

47 
_GtkRe˚¡M™agîPriv©e
 
	tGtkRe˚¡M™agîPriv©e
;

69 
	s_GtkRe˚¡D©a


71 
gch¨
 *
	mdi•œy_«me
;

72 
gch¨
 *
	mdes¸ùti⁄
;

74 
gch¨
 *
	mmime_ty≥
;

76 
gch¨
 *
	m≠p_«me
;

77 
gch¨
 *
	m≠p_exec
;

79 
gch¨
 **
	mgroups
;

81 
gboﬁón
 
	mis_¥iv©e
;

84 
	s_GtkRe˚¡M™agî


87 
GObje˘
 
	m∑ª¡_ö°™˚
;

89 
GtkRe˚¡M™agîPriv©e
 *
GSEAL
 (
¥iv
);

92 
	s_GtkRe˚¡M™agîCœss


95 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

97 (*
	mch™ged
Ë(
GtkRe˚¡M™agî
 *
	mm™agî
);

100 (*
	m_gtk_ª˚¡1
) ();

101 (*
	m_gtk_ª˚¡2
) ();

102 (*
	m_gtk_ª˚¡3
) ();

103 (*
	m_gtk_ª˚¡4
) ();

125 
	mGTK_RECENT_MANAGER_ERROR_NOT_FOUND
,

126 
	mGTK_RECENT_MANAGER_ERROR_INVALID_URI
,

127 
	mGTK_RECENT_MANAGER_ERROR_INVALID_ENCODING
,

128 
	mGTK_RECENT_MANAGER_ERROR_NOT_REGISTERED
,

129 
	mGTK_RECENT_MANAGER_ERROR_READ
,

130 
	mGTK_RECENT_MANAGER_ERROR_WRITE
,

131 
	mGTK_RECENT_MANAGER_ERROR_UNKNOWN


132 } 
	tGtkRe˚¡M™agîEº‹
;

134 
	#GTK_RECENT_MANAGER_ERROR
 (
	`gtk_ª˚¡_m™agî_îr‹_qu¨k
 ())

	)

135 
GQu¨k
 
gtk_ª˚¡_m™agî_îr‹_qu¨k
 ();

138 
GTy≥
 
	$gtk_ª˚¡_m™agî_gë_ty≥
 (Ë
G_GNUC_CONST
;

140 
GtkRe˚¡M™agî
 *
	`gtk_ª˚¡_m™agî_√w
 ();

141 
GtkRe˚¡M™agî
 *
	`gtk_ª˚¡_m™agî_gë_deÁu…
 ();

143 #i‚de‡
GTK_DISABLE_DEPRECATED


144 
GtkRe˚¡M™agî
 *
	`gtk_ª˚¡_m™agî_gë_f‹_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
);

145 
	`gtk_ª˚¡_m™agî_£t_s¸ìn
 (
GtkRe˚¡M™agî
 *
m™agî
,

146 
GdkS¸ìn
 *
s¸ìn
);

149 
gboﬁón
 
	`gtk_ª˚¡_m™agî_add_ôem
 (
GtkRe˚¡M™agî
 *
m™agî
,

150 c⁄° 
gch¨
 *
uri
);

151 
gboﬁón
 
	`gtk_ª˚¡_m™agî_add_fuŒ
 (
GtkRe˚¡M™agî
 *
m™agî
,

152 c⁄° 
gch¨
 *
uri
,

153 c⁄° 
GtkRe˚¡D©a
 *
ª˚¡_d©a
);

154 
gboﬁón
 
	`gtk_ª˚¡_m™agî_ªmove_ôem
 (
GtkRe˚¡M™agî
 *
m™agî
,

155 c⁄° 
gch¨
 *
uri
,

156 
GEº‹
 **
îr‹
);

157 
GtkRe˚¡Info
 * 
	`gtk_ª˚¡_m™agî_lookup_ôem
 (
GtkRe˚¡M™agî
 *
m™agî
,

158 c⁄° 
gch¨
 *
uri
,

159 
GEº‹
 **
îr‹
);

160 
gboﬁón
 
	`gtk_ª˚¡_m™agî_has_ôem
 (
GtkRe˚¡M™agî
 *
m™agî
,

161 c⁄° 
gch¨
 *
uri
);

162 
gboﬁón
 
	`gtk_ª˚¡_m™agî_move_ôem
 (
GtkRe˚¡M™agî
 *
m™agî
,

163 c⁄° 
gch¨
 *
uri
,

164 c⁄° 
gch¨
 *
√w_uri
,

165 
GEº‹
 **
îr‹
);

166 
	`gtk_ª˚¡_m™agî_£t_limô
 (
GtkRe˚¡M™agî
 *
m™agî
,

167 
göt
 
limô
);

168 
göt
 
	`gtk_ª˚¡_m™agî_gë_limô
 (
GtkRe˚¡M™agî
 *
m™agî
);

169 
GLi°
 * 
	`gtk_ª˚¡_m™agî_gë_ôems
 (
GtkRe˚¡M™agî
 *
m™agî
);

170 
göt
 
	`gtk_ª˚¡_m™agî_purge_ôems
 (
GtkRe˚¡M™agî
 *
m™agî
,

171 
GEº‹
 **
îr‹
);

174 
GTy≥
 
	$gtk_ª˚¡_öfo_gë_ty≥
 (Ë
G_GNUC_CONST
;

176 
GtkRe˚¡Info
 * 
	`gtk_ª˚¡_öfo_ªf
 (GtkRe˚¡Infÿ*
öfo
);

177 
	`gtk_ª˚¡_öfo_uƒef
 (
GtkRe˚¡Info
 *
öfo
);

179 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ª˚¡_öfo_gë_uri
 (
GtkRe˚¡Info
 *
öfo
);

180 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ª˚¡_öfo_gë_di•œy_«me
 (
GtkRe˚¡Info
 *
öfo
);

181 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ª˚¡_öfo_gë_des¸ùti⁄
 (
GtkRe˚¡Info
 *
öfo
);

182 
G_CONST_RETURN
 
gch¨
 *
	`gtk_ª˚¡_öfo_gë_mime_ty≥
 (
GtkRe˚¡Info
 *
öfo
);

183 
time_t
 
	`gtk_ª˚¡_öfo_gë_added
 (
GtkRe˚¡Info
 *
öfo
);

184 
time_t
 
	`gtk_ª˚¡_öfo_gë_modifõd
 (
GtkRe˚¡Info
 *
öfo
);

185 
time_t
 
	`gtk_ª˚¡_öfo_gë_visôed
 (
GtkRe˚¡Info
 *
öfo
);

186 
gboﬁón
 
	`gtk_ª˚¡_öfo_gë_¥iv©e_höt
 (
GtkRe˚¡Info
 *
öfo
);

187 
gboﬁón
 
	`gtk_ª˚¡_öfo_gë_≠∂iˇti⁄_öfo
 (
GtkRe˚¡Info
 *
öfo
,

188 c⁄° 
gch¨
 *
≠p_«me
,

189 
gch¨
 **
≠p_exec
,

190 
guöt
 *
cou¡
,

191 
time_t
 *
time_
);

192 
gch¨
 ** 
	$gtk_ª˚¡_öfo_gë_≠∂iˇti⁄s
 (
GtkRe˚¡Info
 *
öfo
,

193 
gsize
 *
Àngth
Ë
G_GNUC_MALLOC
;

194 
gch¨
 * 
	$gtk_ª˚¡_öfo_œ°_≠∂iˇti⁄
 (
GtkRe˚¡Info
 *
öfo
Ë
G_GNUC_MALLOC
;

195 
gboﬁón
 
	`gtk_ª˚¡_öfo_has_≠∂iˇti⁄
 (
GtkRe˚¡Info
 *
öfo
,

196 c⁄° 
gch¨
 *
≠p_«me
);

197 
gch¨
 ** 
	$gtk_ª˚¡_öfo_gë_groups
 (
GtkRe˚¡Info
 *
öfo
,

198 
gsize
 *
Àngth
Ë
G_GNUC_MALLOC
;

199 
gboﬁón
 
	`gtk_ª˚¡_öfo_has_group
 (
GtkRe˚¡Info
 *
öfo
,

200 c⁄° 
gch¨
 *
group_«me
);

201 
GdkPixbuf
 * 
	`gtk_ª˚¡_öfo_gë_ic⁄
 (
GtkRe˚¡Info
 *
öfo
,

202 
göt
 
size
);

203 
gch¨
 * 
	$gtk_ª˚¡_öfo_gë_sh‹t_«me
 (
GtkRe˚¡Info
 *
öfo
Ë
G_GNUC_MALLOC
;

204 
gch¨
 * 
	$gtk_ª˚¡_öfo_gë_uri_di•œy
 (
GtkRe˚¡Info
 *
öfo
Ë
G_GNUC_MALLOC
;

205 
göt
 
	`gtk_ª˚¡_öfo_gë_age
 (
GtkRe˚¡Info
 *
öfo
);

206 
gboﬁón
 
	`gtk_ª˚¡_öfo_is_loˇl
 (
GtkRe˚¡Info
 *
öfo
);

207 
gboﬁón
 
	`gtk_ª˚¡_öfo_exi°s
 (
GtkRe˚¡Info
 *
öfo
);

208 
gboﬁón
 
	`gtk_ª˚¡_öfo_m©ch
 (
GtkRe˚¡Info
 *
öfo_a
,

209 
GtkRe˚¡Info
 *
öfo_b
);

212 
	`_gtk_ª˚¡_m™agî_sync
 ();

214 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkruler.h

37 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

41 #i‚de‡
__GTK_RULER_H__


42 
	#__GTK_RULER_H__


	)

45 
	~<gtk/gtkwidgë.h
>

48 
	gG_BEGIN_DECLS


50 
	#GTK_TYPE_RULER
 (
	`gtk_ruÀr_gë_ty≥
 ())

	)

51 
	#GTK_RULER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_RULER
, 
GtkRuÀr
))

	)

52 
	#GTK_RULER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_RULER
, 
GtkRuÀrCœss
))

	)

53 
	#GTK_IS_RULER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_RULER
))

	)

54 
	#GTK_IS_RULER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_RULER
))

	)

55 
	#GTK_RULER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_RULER
, 
GtkRuÀrCœss
))

	)

58 
_GtkRuÀr
 
	tGtkRuÀr
;

59 
_GtkRuÀrCœss
 
	tGtkRuÀrCœss
;

60 
_GtkRuÀrMëric
 
	tGtkRuÀrMëric
;

65 
	s_GtkRuÀr


67 
GtkWidgë
 
	mwidgë
;

69 
GdkPixm≠
 *
GSEAL
 (
backög_°‹e
);

70 
GdkGC
 *
GSEAL
 (
n⁄_gr_exp_gc
);

71 
GtkRuÀrMëric
 *
GSEAL
 (
mëric
);

72 
göt
 
GSEAL
 (
x§c
);

73 
göt
 
GSEAL
 (
y§c
);

74 
göt
 
GSEAL
 (
¶idî_size
);

77 
gdoubÀ
 
GSEAL
 (
lowî
);

79 
gdoubÀ
 
GSEAL
 (
uµî
);

81 
gdoubÀ
 
GSEAL
 (
posôi⁄
);

83 
gdoubÀ
 
GSEAL
 (
max_size
);

86 
	s_GtkRuÀrCœss


88 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

90 (* 
	mdøw_ticks
Ë(
GtkRuÀr
 *
	mruÀr
);

91 (* 
	mdøw_pos
Ë(
GtkRuÀr
 *
	mruÀr
);

94 (*
	m_gtk_ª£rved1
) ();

95 (*
	m_gtk_ª£rved2
) ();

96 (*
	m_gtk_ª£rved3
) ();

97 (*
	m_gtk_ª£rved4
) ();

100 
	s_GtkRuÀrMëric


102 
gch¨
 *
	mmëric_«me
;

103 
gch¨
 *
	mabbªv
;

106 
gdoubÀ
 
	mpixñs_≥r_unô
;

107 
gdoubÀ
 
	mruÀr_sˇÀ
[10];

108 
göt
 
	msubdivide
[5];

112 
GTy≥
 
	$gtk_ruÀr_gë_ty≥
 (Ë
G_GNUC_CONST
;

113 
	`gtk_ruÀr_£t_mëric
 (
GtkRuÀr
 *
ruÀr
,

114 
GtkMëricTy≥
 
mëric
);

115 
GtkMëricTy≥
 
	`gtk_ruÀr_gë_mëric
 (
GtkRuÀr
 *
ruÀr
);

116 
	`gtk_ruÀr_£t_ønge
 (
GtkRuÀr
 *
ruÀr
,

117 
gdoubÀ
 
lowî
,

118 
gdoubÀ
 
uµî
,

119 
gdoubÀ
 
posôi⁄
,

120 
gdoubÀ
 
max_size
);

121 
	`gtk_ruÀr_gë_ønge
 (
GtkRuÀr
 *
ruÀr
,

122 
gdoubÀ
 *
lowî
,

123 
gdoubÀ
 *
uµî
,

124 
gdoubÀ
 *
posôi⁄
,

125 
gdoubÀ
 *
max_size
);

127 
	`gtk_ruÀr_døw_ticks
 (
GtkRuÀr
 *
ruÀr
);

128 
	`gtk_ruÀr_døw_pos
 (
GtkRuÀr
 *
ruÀr
);

130 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkscale.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_SCALE_H__


32 
	#__GTK_SCALE_H__


	)

35 
	~<gtk/gtkønge.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_SCALE
 (
	`gtk_sˇÀ_gë_ty≥
 ())

	)

41 
	#GTK_SCALE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SCALE
, 
GtkSˇÀ
))

	)

42 
	#GTK_SCALE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SCALE
, 
GtkSˇÀCœss
))

	)

43 
	#GTK_IS_SCALE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SCALE
))

	)

44 
	#GTK_IS_SCALE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SCALE
))

	)

45 
	#GTK_SCALE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SCALE
, 
GtkSˇÀCœss
))

	)

48 
_GtkSˇÀ
 
	tGtkSˇÀ
;

49 
_GtkSˇÀCœss
 
	tGtkSˇÀCœss
;

51 
	s_GtkSˇÀ


53 
GtkR™ge
 
	mønge
;

55 
göt
 
GSEAL
 (
digôs
);

56 
guöt
 
GSEAL
 (
døw_vÆue
) : 1;

57 
guöt
 
GSEAL
 (
vÆue_pos
) : 2;

60 
	s_GtkSˇÀCœss


62 
GtkR™geCœss
 
	m∑ª¡_˛ass
;

64 
	mgch¨
* (* 
	mf‹m©_vÆue
Ë(
GtkSˇÀ
 *
	msˇÀ
,

65 
gdoubÀ
 
	mvÆue
);

67 (* 
	mdøw_vÆue
Ë(
GtkSˇÀ
 *
	msˇÀ
);

69 (* 
	mgë_œyout_off£ts
Ë(
GtkSˇÀ
 *
	msˇÀ
,

70 
göt
 *
	mx
,

71 
göt
 *
	my
);

74 (*
	m_gtk_ª£rved1
) ();

75 (*
	m_gtk_ª£rved2
) ();

76 (*
	m_gtk_ª£rved3
) ();

79 
GTy≥
 
	$gtk_sˇÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

80 
	`gtk_sˇÀ_£t_digôs
 (
GtkSˇÀ
 *
sˇÀ
,

81 
göt
 
digôs
);

82 
göt
 
	`gtk_sˇÀ_gë_digôs
 (
GtkSˇÀ
 *
sˇÀ
);

83 
	`gtk_sˇÀ_£t_døw_vÆue
 (
GtkSˇÀ
 *
sˇÀ
,

84 
gboﬁón
 
døw_vÆue
);

85 
gboﬁón
 
	`gtk_sˇÀ_gë_døw_vÆue
 (
GtkSˇÀ
 *
sˇÀ
);

86 
	`gtk_sˇÀ_£t_vÆue_pos
 (
GtkSˇÀ
 *
sˇÀ
,

87 
GtkPosôi⁄Ty≥
 
pos
);

88 
GtkPosôi⁄Ty≥
 
	`gtk_sˇÀ_gë_vÆue_pos
 (
GtkSˇÀ
 *
sˇÀ
);

90 
P™goLayout
 * 
	`gtk_sˇÀ_gë_œyout
 (
GtkSˇÀ
 *
sˇÀ
);

91 
	`gtk_sˇÀ_gë_œyout_off£ts
 (
GtkSˇÀ
 *
sˇÀ
,

92 
göt
 *
x
,

93 
göt
 *
y
);

95 
	`gtk_sˇÀ_add_m¨k
 (
GtkSˇÀ
 *
sˇÀ
,

96 
gdoubÀ
 
vÆue
,

97 
GtkPosôi⁄Ty≥
 
posôi⁄
,

98 c⁄° 
gch¨
 *
m¨kup
);

99 
	`gtk_sˇÀ_˛ór_m¨ks
 (
GtkSˇÀ
 *
sˇÀ
);

102 
	`_gtk_sˇÀ_˛ór_œyout
 (
GtkSˇÀ
 *
sˇÀ
);

103 
	`_gtk_sˇÀ_gë_vÆue_size
 (
GtkSˇÀ
 *
sˇÀ
,

104 
göt
 *
width
,

105 
göt
 *
height
);

106 
gch¨
 * 
	`_gtk_sˇÀ_f‹m©_vÆue
 (
GtkSˇÀ
 *
sˇÀ
,

107 
gdoubÀ
 
vÆue
);

109 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkscalebutton.h

36 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

40 #i‚de‡
__GTK_SCALE_BUTTON_H__


41 
	#__GTK_SCALE_BUTTON_H__


	)

43 
	~<gtk/gtkbuâ⁄.h
>

45 
	gG_BEGIN_DECLS


47 
	#GTK_TYPE_SCALE_BUTTON
 (
	`gtk_sˇÀ_buâ⁄_gë_ty≥
 ())

	)

48 
	#GTK_SCALE_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SCALE_BUTTON
, 
GtkSˇÀBuâ⁄
))

	)

49 
	#GTK_SCALE_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SCALE_BUTTON
, 
GtkSˇÀBuâ⁄Cœss
))

	)

50 
	#GTK_IS_SCALE_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SCALE_BUTTON
))

	)

51 
	#GTK_IS_SCALE_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SCALE_BUTTON
))

	)

52 
	#GTK_SCALE_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SCALE_BUTTON
, 
GtkSˇÀBuâ⁄Cœss
))

	)

54 
_GtkSˇÀBuâ⁄
 
	tGtkSˇÀBuâ⁄
;

55 
_GtkSˇÀBuâ⁄Cœss
 
	tGtkSˇÀBuâ⁄Cœss
;

56 
_GtkSˇÀBuâ⁄Priv©e
 
	tGtkSˇÀBuâ⁄Priv©e
;

58 
	s_GtkSˇÀBuâ⁄


60 
GtkBuâ⁄
 
	m∑ª¡
;

62 
GtkWidgë
 *
GSEAL
 (
∂us_buâ⁄
);

63 
GtkWidgë
 *
GSEAL
 (
möus_buâ⁄
);

66 
GtkSˇÀBuâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

69 
	s_GtkSˇÀBuâ⁄Cœss


71 
GtkBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

74 (* 
	mvÆue_ch™ged
Ë(
GtkSˇÀBuâ⁄
 *
	mbuâ⁄
,

75 
gdoubÀ
 
	mvÆue
);

78 (*
	m_gtk_ª£rved1
) ();

79 (*
	m_gtk_ª£rved2
) ();

80 (*
	m_gtk_ª£rved3
) ();

81 (*
	m_gtk_ª£rved4
) ();

84 
GTy≥
 
	$gtk_sˇÀ_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

85 
GtkWidgë
 * 
	`gtk_sˇÀ_buâ⁄_√w
 (
GtkIc⁄Size
 
size
,

86 
gdoubÀ
 
mö
,

87 
gdoubÀ
 
max
,

88 
gdoubÀ
 
°ï
,

89 c⁄° 
gch¨
 **
ic⁄s
);

90 
	`gtk_sˇÀ_buâ⁄_£t_ic⁄s
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
,

91 c⁄° 
gch¨
 **
ic⁄s
);

92 
gdoubÀ
 
	`gtk_sˇÀ_buâ⁄_gë_vÆue
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
);

93 
	`gtk_sˇÀ_buâ⁄_£t_vÆue
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
,

94 
gdoubÀ
 
vÆue
);

95 
GtkAdju°mít
 * 
	`gtk_sˇÀ_buâ⁄_gë_adju°mít
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
);

96 
	`gtk_sˇÀ_buâ⁄_£t_adju°mít
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
,

97 
GtkAdju°mít
 *
adju°mít
);

98 
GtkWidgë
 * 
	`gtk_sˇÀ_buâ⁄_gë_∂us_buâ⁄
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
);

99 
GtkWidgë
 * 
	`gtk_sˇÀ_buâ⁄_gë_möus_buâ⁄
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
);

100 
GtkWidgë
 * 
	`gtk_sˇÀ_buâ⁄_gë_p›up
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
);

102 #i‚de‡
GTK_DISABLE_DEPRECATED


104 
GtkOrõ¡©i⁄
 
	`gtk_sˇÀ_buâ⁄_gë_‹õ¡©i⁄
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
);

105 
	`gtk_sˇÀ_buâ⁄_£t_‹õ¡©i⁄
 (
GtkSˇÀBuâ⁄
 *
buâ⁄
,

106 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

110 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkscrollbar.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_SCROLLBAR_H__


32 
	#__GTK_SCROLLBAR_H__


	)

35 
	~<gtk/gtkønge.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_SCROLLBAR
 (
	`gtk_s¸ﬁlb¨_gë_ty≥
 ())

	)

41 
	#GTK_SCROLLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SCROLLBAR
, 
GtkS¸ﬁlb¨
))

	)

42 
	#GTK_SCROLLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SCROLLBAR
, 
GtkS¸ﬁlb¨Cœss
))

	)

43 
	#GTK_IS_SCROLLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SCROLLBAR
))

	)

44 
	#GTK_IS_SCROLLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SCROLLBAR
))

	)

45 
	#GTK_SCROLLBAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SCROLLBAR
, 
GtkS¸ﬁlb¨Cœss
))

	)

48 
_GtkS¸ﬁlb¨
 
	tGtkS¸ﬁlb¨
;

49 
_GtkS¸ﬁlb¨Cœss
 
	tGtkS¸ﬁlb¨Cœss
;

51 
	s_GtkS¸ﬁlb¨


53 
GtkR™ge
 
	mønge
;

56 
	s_GtkS¸ﬁlb¨Cœss


58 
GtkR™geCœss
 
	m∑ª¡_˛ass
;

61 (*
	m_gtk_ª£rved1
) ();

62 (*
	m_gtk_ª£rved2
) ();

63 (*
	m_gtk_ª£rved3
) ();

64 (*
	m_gtk_ª£rved4
) ();

68 
GTy≥
 
	$gtk_s¸ﬁlb¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkscrolledwindow.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_SCROLLED_WINDOW_H__


32 
	#__GTK_SCROLLED_WINDOW_H__


	)

35 
	~<gtk/gtkhs¸ﬁlb¨.h
>

36 
	~<gtk/gtkvs¸ﬁlb¨.h
>

37 
	~<gtk/gtkvõwp‹t.h
>

40 
	gG_BEGIN_DECLS


43 
	#GTK_TYPE_SCROLLED_WINDOW
 (
	`gtk_s¸ﬁÀd_wödow_gë_ty≥
 ())

	)

44 
	#GTK_SCROLLED_WINDOW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SCROLLED_WINDOW
, 
GtkS¸ﬁÀdWödow
))

	)

45 
	#GTK_SCROLLED_WINDOW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SCROLLED_WINDOW
, 
GtkS¸ﬁÀdWödowCœss
))

	)

46 
	#GTK_IS_SCROLLED_WINDOW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SCROLLED_WINDOW
))

	)

47 
	#GTK_IS_SCROLLED_WINDOW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SCROLLED_WINDOW
))

	)

48 
	#GTK_SCROLLED_WINDOW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SCROLLED_WINDOW
, 
GtkS¸ﬁÀdWödowCœss
))

	)

52 
_GtkS¸ﬁÀdWödow
 
	tGtkS¸ﬁÀdWödow
;

53 
_GtkS¸ﬁÀdWödowCœss
 
	tGtkS¸ﬁÀdWödowCœss
;

55 
	s_GtkS¸ﬁÀdWödow


57 
GtkBö
 
	mc⁄èöî
;

60 
GtkWidgë
 *
GSEAL
 (
hs¸ﬁlb¨
);

61 
GtkWidgë
 *
GSEAL
 (
vs¸ﬁlb¨
);

64 
guöt
 
GSEAL
 (
hs¸ﬁlb¨_pﬁicy
) : 2;

65 
guöt
 
GSEAL
 (
vs¸ﬁlb¨_pﬁicy
) : 2;

66 
guöt
 
GSEAL
 (
hs¸ﬁlb¨_visibÀ
) : 1;

67 
guöt
 
GSEAL
 (
vs¸ﬁlb¨_visibÀ
) : 1;

68 
guöt
 
GSEAL
 (
wödow_∂a˚mít
) : 2;

69 
guöt
 
GSEAL
 (
focus_out
) : 1;

71 
guöt16
 
GSEAL
 (
shadow_ty≥
);

74 
	s_GtkS¸ﬁÀdWödowCœss


76 
GtkBöCœss
 
	m∑ª¡_˛ass
;

78 
göt
 
	ms¸ﬁlb¨_•acög
;

87 
gboﬁón
 (*
s¸ﬁl_chûd
Ë(
GtkS¸ﬁÀdWödow
 *
	ms¸ﬁÀd_wödow
,

88 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl
,

89 
gboﬁón
 
	mh‹iz⁄èl
);

91 (* 
	mmove_focus_out
Ë(
GtkS¸ﬁÀdWödow
 *
	ms¸ﬁÀd_wödow
,

92 
GtkDúe˘i⁄Ty≥
 
	mdúe˘i⁄
);

95 (*
	m_gtk_ª£rved1
) ();

96 (*
	m_gtk_ª£rved2
) ();

97 (*
	m_gtk_ª£rved3
) ();

98 (*
	m_gtk_ª£rved4
) ();

102 
GTy≥
 
	$gtk_s¸ﬁÀd_wödow_gë_ty≥
 (Ë
G_GNUC_CONST
;

103 
GtkWidgë
* 
	`gtk_s¸ﬁÀd_wödow_√w
 (
GtkAdju°mít
 *
hadju°mít
,

104 
GtkAdju°mít
 *
vadju°mít
);

105 
	`gtk_s¸ﬁÀd_wödow_£t_hadju°mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

106 
GtkAdju°mít
 *
hadju°mít
);

107 
	`gtk_s¸ﬁÀd_wödow_£t_vadju°mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

108 
GtkAdju°mít
 *
vadju°mít
);

109 
GtkAdju°mít
* 
	`gtk_s¸ﬁÀd_wödow_gë_hadju°mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

110 
GtkAdju°mít
* 
	`gtk_s¸ﬁÀd_wödow_gë_vadju°mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

111 
GtkWidgë
* 
	`gtk_s¸ﬁÀd_wödow_gë_hs¸ﬁlb¨
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

112 
GtkWidgë
* 
	`gtk_s¸ﬁÀd_wödow_gë_vs¸ﬁlb¨
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

113 
	`gtk_s¸ﬁÀd_wödow_£t_pﬁicy
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

114 
GtkPﬁicyTy≥
 
hs¸ﬁlb¨_pﬁicy
,

115 
GtkPﬁicyTy≥
 
vs¸ﬁlb¨_pﬁicy
);

116 
	`gtk_s¸ﬁÀd_wödow_gë_pﬁicy
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

117 
GtkPﬁicyTy≥
 *
hs¸ﬁlb¨_pﬁicy
,

118 
GtkPﬁicyTy≥
 *
vs¸ﬁlb¨_pﬁicy
);

119 
	`gtk_s¸ﬁÀd_wödow_£t_∂a˚mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

120 
GtkC‹√rTy≥
 
wödow_∂a˚mít
);

121 
	`gtk_s¸ﬁÀd_wödow_un£t_∂a˚mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

123 
GtkC‹√rTy≥
 
	`gtk_s¸ﬁÀd_wödow_gë_∂a˚mít
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

124 
	`gtk_s¸ﬁÀd_wödow_£t_shadow_ty≥
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

125 
GtkShadowTy≥
 
ty≥
);

126 
GtkShadowTy≥
 
	`gtk_s¸ﬁÀd_wödow_gë_shadow_ty≥
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

127 
	`gtk_s¸ﬁÀd_wödow_add_wôh_võwp‹t
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
,

128 
GtkWidgë
 *
chûd
);

130 
göt
 
	`_gtk_s¸ﬁÀd_wödow_gë_s¸ﬁlb¨_•acög
 (
GtkS¸ﬁÀdWödow
 *
s¸ﬁÀd_wödow
);

133 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkselection.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_SELECTION_H__


32 
	#__GTK_SELECTION_H__


	)

35 
	~<gtk/gtkwidgë.h
>

36 
	~<gtk/gtkãxtôî.h
>

39 
G_BEGIN_DECLS


41 
_GtkT¨gëLi°
 
	tGtkT¨gëLi°
;

42 
_GtkT¨gëE¡ry
 
	tGtkT¨gëE¡ry
;

44 
	#GTK_TYPE_SELECTION_DATA
 (
	`gtk_£À˘i⁄_d©a_gë_ty≥
 ())

	)

45 
	#GTK_TYPE_TARGET_LIST
 (
	`gtk_èrgë_li°_gë_ty≥
 ())

	)

58 
	s_GtkSñe˘i⁄D©a


60 
GdkAtom
 
GSEAL
 (
£À˘i⁄
);

61 
GdkAtom
 
GSEAL
 (
èrgë
);

62 
GdkAtom
 
GSEAL
 (
ty≥
);

63 
göt
 
GSEAL
 (
f‹m©
);

64 
guch¨
 *
GSEAL
 (
d©a
);

65 
göt
 
GSEAL
 (
Àngth
);

66 
GdkDi•œy
 *
GSEAL
 (
di•œy
);

69 
	s_GtkT¨gëE¡ry
 {

70 
gch¨
 *
	mèrgë
;

71 
guöt
 
	mÊags
;

72 
guöt
 
	möfo
;

79 
_GtkT¨gëPaú
 
	tGtkT¨gëPaú
;

82 
	s_GtkT¨gëLi°
 {

83 
GLi°
 *
	mli°
;

84 
guöt
 
	mªf_cou¡
;

87 
	s_GtkT¨gëPaú
 {

88 
GdkAtom
 
	mèrgë
;

89 
guöt
 
	mÊags
;

90 
guöt
 
	möfo
;

93 
GtkT¨gëLi°
 *
gtk_èrgë_li°_√w
 (c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

94 
guöt
 
¡¨gës
);

95 
GtkT¨gëLi°
 *
gtk_èrgë_li°_ªf
 (GtkT¨gëLi° *
li°
);

96 
gtk_èrgë_li°_uƒef
 (
GtkT¨gëLi°
 *
li°
);

97 
gtk_èrgë_li°_add
 (
GtkT¨gëLi°
 *
li°
,

98 
GdkAtom
 
èrgë
,

99 
guöt
 
Êags
,

100 
guöt
 
öfo
);

101 
gtk_èrgë_li°_add_ãxt_èrgës
 (
GtkT¨gëLi°
 *
li°
,

102 
guöt
 
öfo
);

103 
gtk_èrgë_li°_add_rich_ãxt_èrgës
 (
GtkT¨gëLi°
 *
li°
,

104 
guöt
 
öfo
,

105 
gboﬁón
 
de£rülizabÀ
,

106 
GtkTextBuf„r
 *
buf„r
);

107 
gtk_èrgë_li°_add_image_èrgës
 (
GtkT¨gëLi°
 *
li°
,

108 
guöt
 
öfo
,

109 
gboﬁón
 
wrôabÀ
);

110 
gtk_èrgë_li°_add_uri_èrgës
 (
GtkT¨gëLi°
 *
li°
,

111 
guöt
 
öfo
);

112 
gtk_èrgë_li°_add_èbÀ
 (
GtkT¨gëLi°
 *
li°
,

113 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

114 
guöt
 
¡¨gës
);

115 
gtk_èrgë_li°_ªmove
 (
GtkT¨gëLi°
 *
li°
,

116 
GdkAtom
 
èrgë
);

117 
gboﬁón
 
gtk_èrgë_li°_föd
 (
GtkT¨gëLi°
 *
li°
,

118 
GdkAtom
 
èrgë
,

119 
guöt
 *
öfo
);

121 
GtkT¨gëE¡ry
 * 
gtk_èrgë_èbÀ_√w_‰om_li°
 (
GtkT¨gëLi°
 *
li°
,

122 
göt
 *
n_èrgës
);

123 
gtk_èrgë_èbÀ_‰ì
 (
GtkT¨gëE¡ry
 *
èrgës
,

124 
göt
 
n_èrgës
);

128 
gboﬁón
 
gtk_£À˘i⁄_ow√r_£t
 (
GtkWidgë
 *
widgë
,

129 
GdkAtom
 
£À˘i⁄
,

130 
guöt32
 
time_
);

131 
gboﬁón
 
gtk_£À˘i⁄_ow√r_£t_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

132 
GtkWidgë
 *
widgë
,

133 
GdkAtom
 
£À˘i⁄
,

134 
guöt32
 
time_
);

136 
gtk_£À˘i⁄_add_èrgë
 (
GtkWidgë
 *
widgë
,

137 
GdkAtom
 
£À˘i⁄
,

138 
GdkAtom
 
èrgë
,

139 
guöt
 
öfo
);

140 
gtk_£À˘i⁄_add_èrgës
 (
GtkWidgë
 *
widgë
,

141 
GdkAtom
 
£À˘i⁄
,

142 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

143 
guöt
 
¡¨gës
);

144 
gtk_£À˘i⁄_˛ór_èrgës
 (
GtkWidgë
 *
widgë
,

145 
GdkAtom
 
£À˘i⁄
);

146 
gboﬁón
 
gtk_£À˘i⁄_c⁄vît
 (
GtkWidgë
 *
widgë
,

147 
GdkAtom
 
£À˘i⁄
,

148 
GdkAtom
 
èrgë
,

149 
guöt32
 
time_
);

151 
GdkAtom
 
gtk_£À˘i⁄_d©a_gë_£À˘i⁄
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

152 
GdkAtom
 
gtk_£À˘i⁄_d©a_gë_èrgë
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

153 
GdkAtom
 
gtk_£À˘i⁄_d©a_gë_d©a_ty≥
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

154 
göt
 
gtk_£À˘i⁄_d©a_gë_f‹m©
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

155 c⁄° 
guch¨
 *
gtk_£À˘i⁄_d©a_gë_d©a
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

156 
göt
 
gtk_£À˘i⁄_d©a_gë_Àngth
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

157 
GdkDi•œy
 *
gtk_£À˘i⁄_d©a_gë_di•œy
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

159 
gtk_£À˘i⁄_d©a_£t
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

160 
GdkAtom
 
ty≥
,

161 
göt
 
f‹m©
,

162 c⁄° 
guch¨
 *
d©a
,

163 
göt
 
Àngth
);

164 
gboﬁón
 
gtk_£À˘i⁄_d©a_£t_ãxt
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

165 c⁄° 
gch¨
 *
°r
,

166 
göt
 
Àn
);

167 
guch¨
 * 
gtk_£À˘i⁄_d©a_gë_ãxt
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

168 
gboﬁón
 
gtk_£À˘i⁄_d©a_£t_pixbuf
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

169 
GdkPixbuf
 *
pixbuf
);

170 
GdkPixbuf
 *
gtk_£À˘i⁄_d©a_gë_pixbuf
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

171 
gboﬁón
 
gtk_£À˘i⁄_d©a_£t_uris
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

172 
gch¨
 **
uris
);

173 
gch¨
 **
gtk_£À˘i⁄_d©a_gë_uris
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

175 
gboﬁón
 
gtk_£À˘i⁄_d©a_gë_èrgës
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

176 
GdkAtom
 **
èrgës
,

177 
göt
 *
n_©oms
);

178 
gboﬁón
 
gtk_£À˘i⁄_d©a_èrgës_ö˛ude_ãxt
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

179 
gboﬁón
 
gtk_£À˘i⁄_d©a_èrgës_ö˛ude_rich_ãxt
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

180 
GtkTextBuf„r
 *
buf„r
);

181 
gboﬁón
 
gtk_£À˘i⁄_d©a_èrgës_ö˛ude_image
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

182 
gboﬁón
 
wrôabÀ
);

183 
gboﬁón
 
gtk_£À˘i⁄_d©a_èrgës_ö˛ude_uri
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

184 
gboﬁón
 
gtk_èrgës_ö˛ude_ãxt
 (
GdkAtom
 *
èrgës
,

185 
göt
 
n_èrgës
);

186 
gboﬁón
 
gtk_èrgës_ö˛ude_rich_ãxt
 (
GdkAtom
 *
èrgës
,

187 
göt
 
n_èrgës
,

188 
GtkTextBuf„r
 *
buf„r
);

189 
gboﬁón
 
gtk_èrgës_ö˛ude_image
 (
GdkAtom
 *
èrgës
,

190 
göt
 
n_èrgës
,

191 
gboﬁón
 
wrôabÀ
);

192 
gboﬁón
 
gtk_èrgës_ö˛ude_uri
 (
GdkAtom
 *
èrgës
,

193 
göt
 
n_èrgës
);

197 
gtk_£À˘i⁄_ªmove_Æl
 (
GtkWidgë
 *
widgë
);

200 #i‡!
deföed
(
GTK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
)

201 
gboﬁón
 
gtk_£À˘i⁄_˛ór
 (
GtkWidgë
 *
widgë
,

202 
GdkEvítSñe˘i⁄
 *
evít
);

204 
gboﬁón
 
_gtk_£À˘i⁄_ªque°
 (
GtkWidgë
 *
widgë
,

205 
GdkEvítSñe˘i⁄
 *
evít
);

206 
gboﬁón
 
_gtk_£À˘i⁄_ö¸_evít
 (
GdkWödow
 *
wödow
,

207 
GdkEvítPr›îty
 *
evít
);

208 
gboﬁón
 
_gtk_£À˘i⁄_nŸify
 (
GtkWidgë
 *
widgë
,

209 
GdkEvítSñe˘i⁄
 *
evít
);

210 
gboﬁón
 
_gtk_£À˘i⁄_¥›îty_nŸify
 (
GtkWidgë
 *
widgë
,

211 
GdkEvítPr›îty
 *
evít
);

213 
GTy≥
 
	$gtk_£À˘i⁄_d©a_gë_ty≥
 (Ë
G_GNUC_CONST
;

214 
GtkSñe˘i⁄D©a
 *
	`gtk_£À˘i⁄_d©a_c›y
 (GtkSñe˘i⁄D©®*
d©a
);

215 
	`gtk_£À˘i⁄_d©a_‰ì
 (
GtkSñe˘i⁄D©a
 *
d©a
);

217 
GTy≥
 
	$gtk_èrgë_li°_gë_ty≥
 (Ë
G_GNUC_CONST
;

219 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkseparator.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_SEPARATOR_H__


32 
	#__GTK_SEPARATOR_H__


	)

35 
	~<gtk/gtkwidgë.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_SEPARATOR
 (
	`gtk_£∑øt‹_gë_ty≥
 ())

	)

41 
	#GTK_SEPARATOR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SEPARATOR
, 
GtkSï¨©‹
))

	)

42 
	#GTK_SEPARATOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SEPARATOR
, 
GtkSï¨©‹Cœss
))

	)

43 
	#GTK_IS_SEPARATOR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SEPARATOR
))

	)

44 
	#GTK_IS_SEPARATOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SEPARATOR
))

	)

45 
	#GTK_SEPARATOR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SEPARATOR
, 
GtkSï¨©‹Cœss
))

	)

48 
_GtkSï¨©‹
 
	tGtkSï¨©‹
;

49 
_GtkSï¨©‹Cœss
 
	tGtkSï¨©‹Cœss
;

51 
	s_GtkSï¨©‹


53 
GtkWidgë
 
	mwidgë
;

56 
	s_GtkSï¨©‹Cœss


58 
GtkWidgëCœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_£∑øt‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkseparatormenuitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_SEPARATOR_MENU_ITEM_H__


32 
	#__GTK_SEPARATOR_MENU_ITEM_H__


	)

35 
	~<gtk/gtkmíuôem.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_SEPARATOR_MENU_ITEM
 (
	`gtk_£∑øt‹_míu_ôem_gë_ty≥
 ())

	)

41 
	#GTK_SEPARATOR_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SEPARATOR_MENU_ITEM
, 
GtkSï¨©‹MíuIãm
))

	)

42 
	#GTK_SEPARATOR_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SEPARATOR_MENU_ITEM
, 
GtkSï¨©‹MíuIãmCœss
))

	)

43 
	#GTK_IS_SEPARATOR_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SEPARATOR_MENU_ITEM
))

	)

44 
	#GTK_IS_SEPARATOR_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SEPARATOR_MENU_ITEM
))

	)

45 
	#GTK_SEPARATOR_MENU_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SEPARATOR_MENU_ITEM
, 
GtkSï¨©‹MíuIãmCœss
))

	)

48 
_GtkSï¨©‹MíuIãm
 
	tGtkSï¨©‹MíuIãm
;

49 
_GtkSï¨©‹MíuIãmCœss
 
	tGtkSï¨©‹MíuIãmCœss
;

51 
	s_GtkSï¨©‹MíuIãm


53 
GtkMíuIãm
 
	mmíu_ôem
;

56 
	s_GtkSï¨©‹MíuIãmCœss


58 
GtkMíuIãmCœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_£∑øt‹_míu_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
GtkWidgë
* 
	`gtk_£∑øt‹_míu_ôem_√w
 ();

66 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkseparatortoolitem.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_SEPARATOR_TOOL_ITEM_H__


27 
	#__GTK_SEPARATOR_TOOL_ITEM_H__


	)

29 
	~<gtk/gtktoﬁôem.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_SEPARATOR_TOOL_ITEM
 (
	`gtk_£∑øt‹_toﬁ_ôem_gë_ty≥
 ())

	)

34 
	#GTK_SEPARATOR_TOOL_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SEPARATOR_TOOL_ITEM
, 
GtkSï¨©‹ToﬁIãm
))

	)

35 
	#GTK_SEPARATOR_TOOL_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SEPARATOR_TOOL_ITEM
, 
GtkSï¨©‹ToﬁIãmCœss
))

	)

36 
	#GTK_IS_SEPARATOR_TOOL_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SEPARATOR_TOOL_ITEM
))

	)

37 
	#GTK_IS_SEPARATOR_TOOL_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SEPARATOR_TOOL_ITEM
))

	)

38 
	#GTK_SEPARATOR_TOOL_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_SEPARATOR_TOOL_ITEM
, 
GtkSï¨©‹ToﬁIãmCœss
))

	)

40 
_GtkSï¨©‹ToﬁIãm
 
	tGtkSï¨©‹ToﬁIãm
;

41 
_GtkSï¨©‹ToﬁIãmCœss
 
	tGtkSï¨©‹ToﬁIãmCœss
;

42 
_GtkSï¨©‹ToﬁIãmPriv©e
 
	tGtkSï¨©‹ToﬁIãmPriv©e
;

44 
	s_GtkSï¨©‹ToﬁIãm


46 
GtkToﬁIãm
 
	m∑ª¡
;

49 
GtkSï¨©‹ToﬁIãmPriv©e
 *
GSEAL
 (
¥iv
);

52 
	s_GtkSï¨©‹ToﬁIãmCœss


54 
GtkToﬁIãmCœss
 
	m∑ª¡_˛ass
;

57 (* 
	m_gtk_ª£rved1
) ();

58 (* 
	m_gtk_ª£rved2
) ();

59 (* 
	m_gtk_ª£rved3
) ();

60 (* 
	m_gtk_ª£rved4
) ();

63 
GTy≥
 
	$gtk_£∑øt‹_toﬁ_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkToﬁIãm
 *
	`gtk_£∑øt‹_toﬁ_ôem_√w
 ();

66 
gboﬁón
 
	`gtk_£∑øt‹_toﬁ_ôem_gë_døw
 (
GtkSï¨©‹ToﬁIãm
 *
ôem
);

67 
	`gtk_£∑øt‹_toﬁ_ôem_£t_døw
 (
GtkSï¨©‹ToﬁIãm
 *
ôem
,

68 
gboﬁón
 
døw
);

70 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtksettings.h

19 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

23 #i‚de‡
__GTK_SETTINGS_H__


24 
	#__GTK_SETTINGS_H__


	)

26 
	~<gtk/gtkrc.h
>

28 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_SETTINGS
 (
	`gtk_£âögs_gë_ty≥
 ())

	)

33 
	#GTK_SETTINGS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SETTINGS
, 
GtkSëtögs
))

	)

34 
	#GTK_SETTINGS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SETTINGS
, 
GtkSëtögsCœss
))

	)

35 
	#GTK_IS_SETTINGS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SETTINGS
))

	)

36 
	#GTK_IS_SETTINGS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SETTINGS
))

	)

37 
	#GTK_SETTINGS_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SETTINGS
, 
GtkSëtögsCœss
))

	)

41 
_GtkSëtögsCœss
 
	tGtkSëtögsCœss
;

42 
_GtkSëtögsVÆue
 
	tGtkSëtögsVÆue
;

43 
_GtkSëtögsPr›îtyVÆue
 
	tGtkSëtögsPr›îtyVÆue
;

47 
	s_GtkSëtögs


49 
GObje˘
 
	m∑ª¡_ö°™˚
;

51 
GD©a
 *
GSEAL
 (
queued_£âögs
);

52 
GtkSëtögsPr›îtyVÆue
 *
GSEAL
 (
¥›îty_vÆues
);

54 
GtkRcC⁄ãxt
 *
GSEAL
 (
rc_c⁄ãxt
);

55 
GdkS¸ìn
 *
GSEAL
 (
s¸ìn
);

58 
	s_GtkSëtögsCœss


60 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

63 
	s_GtkSëtögsVÆue


68 
gch¨
 *
	m‹igö
;

73 
GVÆue
 
	mvÆue
;

78 
GTy≥
 
	$gtk_£âögs_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 #i‚de‡
GDK_MULTIHEAD_SAFE


80 
GtkSëtögs
* 
	`gtk_£âögs_gë_deÁu…
 ();

82 
GtkSëtögs
* 
	`gtk_£âögs_gë_f‹_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
);

84 
	`gtk_£âögs_ö°Æl_¥›îty
 (
GP¨amS≥c
 *
p•ec
);

85 
	`gtk_£âögs_ö°Æl_¥›îty_∑r£r
 (
GP¨amS≥c
 *
p•ec
,

86 
GtkRcPr›îtyP¨£r
 
∑r£r
);

89 
gboﬁón
 
	`gtk_rc_¥›îty_∑r£_cﬁ‹
 (c⁄° 
GP¨amS≥c
 *
p•ec
,

90 c⁄° 
GSåög
 *
g°rög
,

91 
GVÆue
 *
¥›îty_vÆue
);

92 
gboﬁón
 
	`gtk_rc_¥›îty_∑r£_íum
 (c⁄° 
GP¨amS≥c
 *
p•ec
,

93 c⁄° 
GSåög
 *
g°rög
,

94 
GVÆue
 *
¥›îty_vÆue
);

95 
gboﬁón
 
	`gtk_rc_¥›îty_∑r£_Êags
 (c⁄° 
GP¨amS≥c
 *
p•ec
,

96 c⁄° 
GSåög
 *
g°rög
,

97 
GVÆue
 *
¥›îty_vÆue
);

98 
gboﬁón
 
	`gtk_rc_¥›îty_∑r£_ªquisôi⁄
 (c⁄° 
GP¨amS≥c
 *
p•ec
,

99 c⁄° 
GSåög
 *
g°rög
,

100 
GVÆue
 *
¥›îty_vÆue
);

101 
gboﬁón
 
	`gtk_rc_¥›îty_∑r£_b‹dî
 (c⁄° 
GP¨amS≥c
 *
p•ec
,

102 c⁄° 
GSåög
 *
g°rög
,

103 
GVÆue
 *
¥›îty_vÆue
);

106 
	`gtk_£âögs_£t_¥›îty_vÆue
 (
GtkSëtögs
 *
£âögs
,

107 c⁄° 
gch¨
 *
«me
,

108 c⁄° 
GtkSëtögsVÆue
 *
svÆue
);

109 
	`gtk_£âögs_£t_°rög_¥›îty
 (
GtkSëtögs
 *
£âögs
,

110 c⁄° 
gch¨
 *
«me
,

111 c⁄° 
gch¨
 *
v_°rög
,

112 c⁄° 
gch¨
 *
‹igö
);

113 
	`gtk_£âögs_£t_l⁄g_¥›îty
 (
GtkSëtögs
 *
£âögs
,

114 c⁄° 
gch¨
 *
«me
,

115 
gl⁄g
 
v_l⁄g
,

116 c⁄° 
gch¨
 *
‹igö
);

117 
	`gtk_£âögs_£t_doubÀ_¥›îty
 (
GtkSëtögs
 *
£âögs
,

118 c⁄° 
gch¨
 *
«me
,

119 
gdoubÀ
 
v_doubÀ
,

120 c⁄° 
gch¨
 *
‹igö
);

124 
	`_gtk_£âögs_£t_¥›îty_vÆue_‰om_rc
 (
GtkSëtögs
 *
£âögs
,

125 c⁄° 
gch¨
 *
«me
,

126 c⁄° 
GtkSëtögsVÆue
 *
svÆue
);

127 
	`_gtk_£âögs_ª£t_rc_vÆues
 (
GtkSëtögs
 *
£âögs
);

129 
	`_gtk_£âögs_h™dÀ_evít
 (
GdkEvítSëtög
 *
evít
);

130 
GtkRcPr›îtyP¨£r
 
	`_gtk_rc_¥›îty_∑r£r_‰om_ty≥
 (
GTy≥
 
ty≥
);

131 
gboﬁón
 
	`_gtk_£âögs_∑r£_c⁄vît
 (
GtkRcPr›îtyP¨£r
 
∑r£r
,

132 c⁄° 
GVÆue
 *
§c_vÆue
,

133 
GP¨amS≥c
 *
p•ec
,

134 
GVÆue
 *
de°_vÆue
);

137 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkshow.h

23 #i‡!
deföed
 (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

27 #i‚de‡
__GTK_SHOW_H__


28 
	#__GTK_SHOW_H__


	)

30 
G_BEGIN_DECLS


32 
gboﬁón
 
gtk_show_uri
 (
GdkS¸ìn
 *
s¸ìn
,

33 c⁄° 
gch¨
 *
uri
,

34 
guöt32
 
time°amp
,

35 
GEº‹
 **
îr‹
);

37 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtksignal.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_SIGNAL_H__


30 
	#__GTK_SIGNAL_H__


	)

32 
	~<gtk/gtk.h
>

33 
	~<gtk/gtkm¨shÆ.h
>

35 
	gG_BEGIN_DECLS


37 
	#gtk_sig«l_deÁu…_m¨shÆÀr
 
g_c˛osuª_m¨shÆ_VOID__VOID


	)

41 
	#GTK_SIGNAL_OFFSET
 
G_STRUCT_OFFSET


	)

42 
	#gtk_sig«l_lookup
(
«me
,
obje˘_ty≥
) \

43 
	`g_sig«l_lookup
 ((
«me
), (
obje˘_ty≥
))

	)

44 
	#gtk_sig«l_«me
(
sig«l_id
) \

45 
	`g_sig«l_«me
 (
sig«l_id
)

	)

46 
	#gtk_sig«l_emô_°›
(
obje˘
,
sig«l_id
) \

47 
	`g_sig«l_°›_emissi⁄
 ((
obje˘
), (
sig«l_id
), 0)

	)

48 
	#gtk_sig«l_c⁄√˘
(
obje˘
,
«me
,
func
,
func_d©a
) \

49 
	`gtk_sig«l_c⁄√˘_fuŒ
 ((
obje˘
), (
«me
), (
func
), 
NULL
, (
func_d©a
), NULL, 0, 0)

	)

50 
	#gtk_sig«l_c⁄√˘_a·î
(
obje˘
,
«me
,
func
,
func_d©a
) \

51 
	`gtk_sig«l_c⁄√˘_fuŒ
 ((
obje˘
), (
«me
), (
func
), 
NULL
, (
func_d©a
), NULL, 0, 1)

	)

52 
	#gtk_sig«l_c⁄√˘_obje˘
(
obje˘
,
«me
,
func
,
¶Ÿ_obje˘
) \

53 
	`gtk_sig«l_c⁄√˘_fuŒ
 ((
obje˘
), (
«me
), (
func
), 
NULL
, (
¶Ÿ_obje˘
), NULL, 1, 0)

	)

54 
	#gtk_sig«l_c⁄√˘_obje˘_a·î
(
obje˘
,
«me
,
func
,
¶Ÿ_obje˘
) \

55 
	`gtk_sig«l_c⁄√˘_fuŒ
 ((
obje˘
), (
«me
), (
func
), 
NULL
, (
¶Ÿ_obje˘
), NULL, 1, 1)

	)

56 
	#gtk_sig«l_disc⁄√˘
(
obje˘
,
h™dÀr_id
) \

57 
	`g_sig«l_h™dÀr_disc⁄√˘
 ((
obje˘
), (
h™dÀr_id
))

	)

58 
	#gtk_sig«l_h™dÀr_block
(
obje˘
,
h™dÀr_id
) \

59 
	`g_sig«l_h™dÀr_block
 ((
obje˘
), (
h™dÀr_id
))

	)

60 
	#gtk_sig«l_h™dÀr_unblock
(
obje˘
,
h™dÀr_id
) \

61 
	`g_sig«l_h™dÀr_unblock
 ((
obje˘
), (
h™dÀr_id
))

	)

62 
	#gtk_sig«l_disc⁄√˘_by_func
(
obje˘
,
func
,
d©a
) \

63 
	`gtk_sig«l_com∑t_m©ched
 ((
obje˘
), (
func
), (
d©a
), \

64 (
GSig«lM©chTy≥
)(
G_SIGNAL_MATCH_FUNC
 | \

65 
G_SIGNAL_MATCH_DATA
), 0)

	)

66 
	#gtk_sig«l_disc⁄√˘_by_d©a
(
obje˘
,
d©a
) \

67 
	`gtk_sig«l_com∑t_m©ched
 ((
obje˘
), 0, (
d©a
), 
G_SIGNAL_MATCH_DATA
, 0)

	)

68 
	#gtk_sig«l_h™dÀr_block_by_func
(
obje˘
,
func
,
d©a
) \

69 
	`gtk_sig«l_com∑t_m©ched
 ((
obje˘
), (
func
), (
d©a
), \

70 (
GSig«lM©chTy≥
)(
G_SIGNAL_MATCH_FUNC
 | \

71 
G_SIGNAL_MATCH_DATA
), 1)

	)

72 
	#gtk_sig«l_h™dÀr_block_by_d©a
(
obje˘
,
d©a
) \

73 
	`gtk_sig«l_com∑t_m©ched
 ((
obje˘
), 0, (
d©a
), 
G_SIGNAL_MATCH_DATA
, 1)

	)

74 
	#gtk_sig«l_h™dÀr_unblock_by_func
(
obje˘
,
func
,
d©a
) \

75 
	`gtk_sig«l_com∑t_m©ched
 ((
obje˘
), (
func
), (
d©a
), \

76 (
GSig«lM©chTy≥
)(
G_SIGNAL_MATCH_FUNC
 | \

77 
G_SIGNAL_MATCH_DATA
), 2)

	)

78 
	#gtk_sig«l_h™dÀr_unblock_by_d©a
(
obje˘
,
d©a
) \

79 
	`gtk_sig«l_com∑t_m©ched
 ((
obje˘
), 0, (
d©a
), 
G_SIGNAL_MATCH_DATA
, 2)

	)

80 
	#gtk_sig«l_h™dÀr_≥ndög
(
obje˘
,
sig«l_id
,
may_be_blocked
) \

81 
	`g_sig«l_has_h™dÀr_≥ndög
 ((
obje˘
), (
sig«l_id
), 0, (
may_be_blocked
))

	)

82 
	#gtk_sig«l_h™dÀr_≥ndög_by_func
(
obje˘
,
sig«l_id
,
may_be_blocked
,
func
,
d©a
) \

83 (
	`g_sig«l_h™dÀr_föd
 ((
obje˘
), \

84 (
GSig«lM©chTy≥
)(
G_SIGNAL_MATCH_ID
 | \

85 
G_SIGNAL_MATCH_FUNC
 | \

86 
G_SIGNAL_MATCH_DATA
 | \

87 ((
may_be_blocked
Ë? 0 : 
G_SIGNAL_MATCH_UNBLOCKED
)),\

88 (
sig«l_id
), 0, 0, (
func
), (
d©a
)Ë!0)

	)

92 
guöt
 
gtk_sig«l_√wv
 (c⁄° 
gch¨
 *
«me
,

93 
GtkSig«lRunTy≥
 
sig«l_Êags
,

94 
GTy≥
 
obje˘_ty≥
,

95 
guöt
 
fun˘i⁄_off£t
,

96 
GSig«lCM¨shÆÀr
 
m¨shÆÀr
,

97 
GTy≥
 
ªtu∫_vÆ
,

98 
guöt
 
n_¨gs
,

99 
GTy≥
 *
¨gs
);

100 
guöt
 
gtk_sig«l_√w
 (c⁄° 
gch¨
 *
«me
,

101 
GtkSig«lRunTy≥
 
sig«l_Êags
,

102 
GTy≥
 
obje˘_ty≥
,

103 
guöt
 
fun˘i⁄_off£t
,

104 
GSig«lCM¨shÆÀr
 
m¨shÆÀr
,

105 
GTy≥
 
ªtu∫_vÆ
,

106 
guöt
 
n_¨gs
,

108 
gtk_sig«l_emô_°›_by_«me
 (
GtkObje˘
 *
obje˘
,

109 c⁄° 
gch¨
 *
«me
);

110 
gtk_sig«l_c⁄√˘_obje˘_whûe_Æive
 (
GtkObje˘
 *
obje˘
,

111 c⁄° 
gch¨
 *
«me
,

112 
GCÆlback
 
func
,

113 
GtkObje˘
 *
Æive_obje˘
);

114 
gtk_sig«l_c⁄√˘_whûe_Æive
 (
GtkObje˘
 *
obje˘
,

115 c⁄° 
gch¨
 *
«me
,

116 
GCÆlback
 
func
,

117 
gpoöãr
 
func_d©a
,

118 
GtkObje˘
 *
Æive_obje˘
);

119 
gul⁄g
 
gtk_sig«l_c⁄√˘_fuŒ
 (
GtkObje˘
 *
obje˘
,

120 c⁄° 
gch¨
 *
«me
,

121 
GCÆlback
 
func
,

122 
GtkCÆlbackM¨shÆ
 
unsuµ‹ãd
,

123 
gpoöãr
 
d©a
,

124 
GDe°royNŸify
 
de°roy_func
,

125 
göt
 
obje˘_sig«l
,

126 
göt
 
a·î
);

127 
gtk_sig«l_emôv
 (
GtkObje˘
 *
obje˘
,

128 
guöt
 
sig«l_id
,

129 
GtkArg
 *
¨gs
);

130 
gtk_sig«l_emô
 (
GtkObje˘
 *
obje˘
,

131 
guöt
 
sig«l_id
,

133 
gtk_sig«l_emô_by_«me
 (
GtkObje˘
 *
obje˘
,

134 c⁄° 
gch¨
 *
«me
,

136 
gtk_sig«l_emôv_by_«me
 (
GtkObje˘
 *
obje˘
,

137 c⁄° 
gch¨
 *
«me
,

138 
GtkArg
 *
¨gs
);

139 
gtk_sig«l_com∑t_m©ched
 (
GtkObje˘
 *
obje˘
,

140 
GCÆlback
 
func
,

141 
gpoöãr
 
d©a
,

142 
GSig«lM©chTy≥
 
m©ch
,

143 
guöt
 
a˘i⁄
);

145 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtksizegroup.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_SIZE_GROUP_H__


26 
	#__GTK_SIZE_GROUP_H__


	)

28 
	~<gtk/gtkwidgë.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_SIZE_GROUP
 (
	`gtk_size_group_gë_ty≥
 ())

	)

33 
	#GTK_SIZE_GROUP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SIZE_GROUP
, 
GtkSizeGroup
))

	)

34 
	#GTK_SIZE_GROUP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SIZE_GROUP
, 
GtkSizeGroupCœss
))

	)

35 
	#GTK_IS_SIZE_GROUP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SIZE_GROUP
))

	)

36 
	#GTK_IS_SIZE_GROUP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SIZE_GROUP
))

	)

37 
	#GTK_SIZE_GROUP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SIZE_GROUP
, 
GtkSizeGroupCœss
))

	)

40 
_GtkSizeGroup
 
	tGtkSizeGroup
;

41 
_GtkSizeGroupCœss
 
	tGtkSizeGroupCœss
;

43 
	s_GtkSizeGroup


45 
GObje˘
 
	m∑ª¡_ö°™˚
;

48 
GSLi°
 *
GSEAL
 (
widgës
);

50 
guöt8
 
GSEAL
 (
mode
);

52 
guöt
 
GSEAL
 (
have_width
) : 1;

53 
guöt
 
GSEAL
 (
have_height
) : 1;

54 
guöt
 
GSEAL
 (
ign‹e_hiddí
) : 1;

56 
GtkRequisôi⁄
 
GSEAL
 (
ªquisôi⁄
);

59 
	s_GtkSizeGroupCœss


61 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

64 (*
	m_gtk_ª£rved1
) ();

65 (*
	m_gtk_ª£rved2
) ();

66 (*
	m_gtk_ª£rved3
) ();

67 (*
	m_gtk_ª£rved4
) ();

81 
	mGTK_SIZE_GROUP_NONE
,

82 
	mGTK_SIZE_GROUP_HORIZONTAL
,

83 
	mGTK_SIZE_GROUP_VERTICAL
,

84 
	mGTK_SIZE_GROUP_BOTH


85 } 
	tGtkSizeGroupMode
;

87 
GTy≥
 
	$gtk_size_group_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
GtkSizeGroup
 * 
	`gtk_size_group_√w
 (
GtkSizeGroupMode
 
mode
);

90 
	`gtk_size_group_£t_mode
 (
GtkSizeGroup
 *
size_group
,

91 
GtkSizeGroupMode
 
mode
);

92 
GtkSizeGroupMode
 
	`gtk_size_group_gë_mode
 (
GtkSizeGroup
 *
size_group
);

93 
	`gtk_size_group_£t_ign‹e_hiddí
 (
GtkSizeGroup
 *
size_group
,

94 
gboﬁón
 
ign‹e_hiddí
);

95 
gboﬁón
 
	`gtk_size_group_gë_ign‹e_hiddí
 (
GtkSizeGroup
 *
size_group
);

96 
	`gtk_size_group_add_widgë
 (
GtkSizeGroup
 *
size_group
,

97 
GtkWidgë
 *
widgë
);

98 
	`gtk_size_group_ªmove_widgë
 (
GtkSizeGroup
 *
size_group
,

99 
GtkWidgë
 *
widgë
);

100 
GSLi°
 * 
	`gtk_size_group_gë_widgës
 (
GtkSizeGroup
 *
size_group
);

103 
	`_gtk_size_group_gë_chûd_ªquisôi⁄
 (
GtkWidgë
 *
widgë
,

104 
GtkRequisôi⁄
 *
ªquisôi⁄
);

105 
	`_gtk_size_group_compuã_ªquisôi⁄
 (
GtkWidgë
 *
widgë
,

106 
GtkRequisôi⁄
 *
ªquisôi⁄
);

107 
	`_gtk_size_group_queue_ªsize
 (
GtkWidgë
 *
widgë
);

109 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtksocket.h

26 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

30 #i‚de‡
__GTK_SOCKET_H__


31 
	#__GTK_SOCKET_H__


	)

33 
	~<gtk/gtkc⁄èöî.h
>

35 
	gG_BEGIN_DECLS


37 
	#GTK_TYPE_SOCKET
 (
	`gtk_sockë_gë_ty≥
 ())

	)

38 
	#GTK_SOCKET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SOCKET
, 
GtkSockë
))

	)

39 
	#GTK_SOCKET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SOCKET
, 
GtkSockëCœss
))

	)

40 
	#GTK_IS_SOCKET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SOCKET
))

	)

41 
	#GTK_IS_SOCKET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SOCKET
))

	)

42 
	#GTK_SOCKET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SOCKET
, 
GtkSockëCœss
))

	)

45 
_GtkSockë
 
	tGtkSockë
;

46 
_GtkSockëCœss
 
	tGtkSockëCœss
;

48 
	s_GtkSockë


50 
GtkC⁄èöî
 
	mc⁄èöî
;

52 
guöt16
 
GSEAL
 (
ªque°_width
);

53 
guöt16
 
GSEAL
 (
ªque°_height
);

54 
guöt16
 
GSEAL
 (
cuºít_width
);

55 
guöt16
 
GSEAL
 (
cuºít_height
);

57 
GdkWödow
 *
GSEAL
 (
∂ug_wödow
);

58 
GtkWidgë
 *
GSEAL
 (
∂ug_widgë
);

60 
gsh‹t
 
GSEAL
 (
xembed_vîsi⁄
);

61 
guöt
 
GSEAL
 (
ßme_≠p
) : 1;

62 
guöt
 
GSEAL
 (
focus_ö
) : 1;

63 
guöt
 
GSEAL
 (
have_size
) : 1;

64 
guöt
 
GSEAL
 (
√ed_m≠
) : 1;

65 
guöt
 
GSEAL
 (
is_m≠≥d
) : 1;

66 
guöt
 
GSEAL
 (
a˘ive
) : 1;

68 
GtkAc˚lGroup
 *
GSEAL
 (
ac˚l_group
);

69 
GtkWidgë
 *
GSEAL
 (
t›Àvñ
);

72 
	s_GtkSockëCœss


74 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

76 (*
	m∂ug_added
Ë(
GtkSockë
 *
	msockë_
);

77 
gboﬁón
 (*
∂ug_ªmoved
Ë(
GtkSockë
 *
	msockë_
);

80 (*
	m_gtk_ª£rved1
) ();

81 (*
	m_gtk_ª£rved2
) ();

82 (*
	m_gtk_ª£rved3
) ();

83 (*
	m_gtk_ª£rved4
) ();

87 
GTy≥
 
	$gtk_sockë_gë_ty≥
 (Ë
G_GNUC_CONST
;

88 
GtkWidgë
* 
	`gtk_sockë_√w
 ();

90 
	`gtk_sockë_add_id
 (
GtkSockë
 *
sockë_
,

91 
GdkN©iveWödow
 
wödow_id
);

92 
GdkN©iveWödow
 
	`gtk_sockë_gë_id
 (
GtkSockë
 *
sockë_
);

93 
GdkWödow
* 
	`gtk_sockë_gë_∂ug_wödow
 (
GtkSockë
 *
sockë_
);

95 #i‚de‡
GTK_DISABLE_DEPRECATED


96 
	`gtk_sockë_°ól
 (
GtkSockë
 *
sockë_
,

97 
GdkN©iveWödow
 
wid
);

100 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkspinbutton.h

30 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

34 #i‚de‡
__GTK_SPIN_BUTTON_H__


35 
	#__GTK_SPIN_BUTTON_H__


	)

38 
	~<gtk/gtkíåy.h
>

39 
	~<gtk/gtkadju°mít.h
>

42 
	gG_BEGIN_DECLS


44 
	#GTK_TYPE_SPIN_BUTTON
 (
	`gtk_•ö_buâ⁄_gë_ty≥
 ())

	)

45 
	#GTK_SPIN_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_SPIN_BUTTON
, 
GtkSpöBuâ⁄
))

	)

46 
	#GTK_SPIN_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_SPIN_BUTTON
, 
GtkSpöBuâ⁄Cœss
))

	)

47 
	#GTK_IS_SPIN_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_SPIN_BUTTON
))

	)

48 
	#GTK_IS_SPIN_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_SPIN_BUTTON
))

	)

49 
	#GTK_SPIN_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_SPIN_BUTTON
, 
GtkSpöBuâ⁄Cœss
))

	)

51 
	#GTK_INPUT_ERROR
 -1

	)

55 
	mGTK_UPDATE_ALWAYS
,

56 
	mGTK_UPDATE_IF_VALID


57 } 
	tGtkSpöBuâ⁄Upd©ePﬁicy
;

61 
	mGTK_SPIN_STEP_FORWARD
,

62 
	mGTK_SPIN_STEP_BACKWARD
,

63 
	mGTK_SPIN_PAGE_FORWARD
,

64 
	mGTK_SPIN_PAGE_BACKWARD
,

65 
	mGTK_SPIN_HOME
,

66 
	mGTK_SPIN_END
,

67 
	mGTK_SPIN_USER_DEFINED


68 } 
	tGtkSpöTy≥
;

71 
_GtkSpöBuâ⁄
 
	tGtkSpöBuâ⁄
;

72 
_GtkSpöBuâ⁄Cœss
 
	tGtkSpöBuâ⁄Cœss
;

75 
	s_GtkSpöBuâ⁄


77 
GtkE¡ry
 
	míåy
;

79 
GtkAdju°mít
 *
GSEAL
 (
adju°mít
);

81 
GdkWödow
 *
GSEAL
 (
∑√l
);

83 
guöt32
 
GSEAL
 (
timî
);

85 
gdoubÀ
 
GSEAL
 (
˛imb_øã
);

86 
gdoubÀ
 
GSEAL
 (
timî_°ï
);

88 
GtkSpöBuâ⁄Upd©ePﬁicy
 
GSEAL
 (
upd©e_pﬁicy
);

90 
guöt
 
GSEAL
 (
ö_chûd
) : 2;

91 
guöt
 
GSEAL
 (
˛ick_chûd
) : 2;

92 
guöt
 
GSEAL
 (
buâ⁄
) : 2;

93 
guöt
 
GSEAL
 (
√ed_timî
) : 1;

94 
guöt
 
GSEAL
 (
timî_ˇŒs
) : 3;

95 
guöt
 
GSEAL
 (
digôs
) : 10;

96 
guöt
 
GSEAL
 (
numîic
) : 1;

97 
guöt
 
GSEAL
 (
wøp
) : 1;

98 
guöt
 
GSEAL
 (
¢≠_to_ticks
) : 1;

101 
	s_GtkSpöBuâ⁄Cœss


103 
GtkE¡ryCœss
 
	m∑ª¡_˛ass
;

105 
göt
 (*
öput
Ë(
GtkSpöBuâ⁄
 *
	m•ö_buâ⁄
,

106 
gdoubÀ
 *
	m√w_vÆue
);

107 
göt
 (*
ouçut
Ë(
GtkSpöBuâ⁄
 *
	m•ö_buâ⁄
);

108 (*
	mvÆue_ch™ged
Ë(
GtkSpöBuâ⁄
 *
	m•ö_buâ⁄
);

111 (*
	mch™ge_vÆue
Ë(
GtkSpöBuâ⁄
 *
	m•ö_buâ⁄
,

112 
GtkS¸ﬁlTy≥
 
	ms¸ﬁl
);

114 (*
	mwøµed
Ë(
GtkSpöBuâ⁄
 *
	m•ö_buâ⁄
);

117 (*
	m_gtk_ª£rved1
) ();

118 (*
	m_gtk_ª£rved2
) ();

119 (*
	m_gtk_ª£rved3
) ();

123 
GTy≥
 
	$gtk_•ö_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

125 
	`gtk_•ö_buâ⁄_c⁄figuª
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

126 
GtkAdju°mít
 *
adju°mít
,

127 
gdoubÀ
 
˛imb_øã
,

128 
guöt
 
digôs
);

130 
GtkWidgë
* 
	`gtk_•ö_buâ⁄_√w
 (
GtkAdju°mít
 *
adju°mít
,

131 
gdoubÀ
 
˛imb_øã
,

132 
guöt
 
digôs
);

134 
GtkWidgë
* 
	`gtk_•ö_buâ⁄_√w_wôh_ønge
 (
gdoubÀ
 
mö
,

135 
gdoubÀ
 
max
,

136 
gdoubÀ
 
°ï
);

138 
	`gtk_•ö_buâ⁄_£t_adju°mít
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

139 
GtkAdju°mít
 *
adju°mít
);

141 
GtkAdju°mít
* 
	`gtk_•ö_buâ⁄_gë_adju°mít
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

143 
	`gtk_•ö_buâ⁄_£t_digôs
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

144 
guöt
 
digôs
);

145 
guöt
 
	`gtk_•ö_buâ⁄_gë_digôs
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

147 
	`gtk_•ö_buâ⁄_£t_ö¸emíts
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

148 
gdoubÀ
 
°ï
,

149 
gdoubÀ
 
∑ge
);

150 
	`gtk_•ö_buâ⁄_gë_ö¸emíts
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

151 
gdoubÀ
 *
°ï
,

152 
gdoubÀ
 *
∑ge
);

154 
	`gtk_•ö_buâ⁄_£t_ønge
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

155 
gdoubÀ
 
mö
,

156 
gdoubÀ
 
max
);

157 
	`gtk_•ö_buâ⁄_gë_ønge
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

158 
gdoubÀ
 *
mö
,

159 
gdoubÀ
 *
max
);

161 
gdoubÀ
 
	`gtk_•ö_buâ⁄_gë_vÆue
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

163 
göt
 
	`gtk_•ö_buâ⁄_gë_vÆue_as_öt
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

165 
	`gtk_•ö_buâ⁄_£t_vÆue
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

166 
gdoubÀ
 
vÆue
);

168 
	`gtk_•ö_buâ⁄_£t_upd©e_pﬁicy
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

169 
GtkSpöBuâ⁄Upd©ePﬁicy
 
pﬁicy
);

170 
GtkSpöBuâ⁄Upd©ePﬁicy
 
	`gtk_•ö_buâ⁄_gë_upd©e_pﬁicy
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

172 
	`gtk_•ö_buâ⁄_£t_numîic
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

173 
gboﬁón
 
numîic
);

174 
gboﬁón
 
	`gtk_•ö_buâ⁄_gë_numîic
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

176 
	`gtk_•ö_buâ⁄_•ö
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

177 
GtkSpöTy≥
 
dúe˘i⁄
,

178 
gdoubÀ
 
ö¸emít
);

180 
	`gtk_•ö_buâ⁄_£t_wøp
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

181 
gboﬁón
 
wøp
);

182 
gboﬁón
 
	`gtk_•ö_buâ⁄_gë_wøp
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

184 
	`gtk_•ö_buâ⁄_£t_¢≠_to_ticks
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
,

185 
gboﬁón
 
¢≠_to_ticks
);

186 
gboﬁón
 
	`gtk_•ö_buâ⁄_gë_¢≠_to_ticks
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

187 
	`gtk_•ö_buâ⁄_upd©e
 (
GtkSpöBuâ⁄
 *
•ö_buâ⁄
);

190 #i‚de‡
GTK_DISABLE_DEPRECATED


191 
	#gtk_•ö_buâ⁄_gë_vÆue_as_Êﬂt
 
gtk_•ö_buâ⁄_gë_vÆue


	)

194 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkstatusbar.h

28 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

32 #i‚de‡
__GTK_STATUSBAR_H__


33 
	#__GTK_STATUSBAR_H__


	)

35 
	~<gtk/gtkhbox.h
>

37 
	gG_BEGIN_DECLS


39 
	#GTK_TYPE_STATUSBAR
 (
	`gtk_°©usb¨_gë_ty≥
 ())

	)

40 
	#GTK_STATUSBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_STATUSBAR
, 
GtkSètusb¨
))

	)

41 
	#GTK_STATUSBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_STATUSBAR
, 
GtkSètusb¨Cœss
))

	)

42 
	#GTK_IS_STATUSBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_STATUSBAR
))

	)

43 
	#GTK_IS_STATUSBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_STATUSBAR
))

	)

44 
	#GTK_STATUSBAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_STATUSBAR
, 
GtkSètusb¨Cœss
))

	)

47 
_GtkSètusb¨
 
	tGtkSètusb¨
;

48 
_GtkSètusb¨Cœss
 
	tGtkSètusb¨Cœss
;

50 
	s_GtkSètusb¨


52 
GtkHBox
 
	m∑ª¡_widgë
;

54 
GtkWidgë
 *
GSEAL
 (
‰ame
);

55 
GtkWidgë
 *
GSEAL
 (
œbñ
);

57 
GSLi°
 *
GSEAL
 (
mesßges
);

58 
GSLi°
 *
GSEAL
 (
keys
);

60 
guöt
 
GSEAL
 (
£q_c⁄ãxt_id
);

61 
guöt
 
GSEAL
 (
£q_mesßge_id
);

63 
GdkWödow
 *
GSEAL
 (
grù_wödow
);

65 
guöt
 
GSEAL
 (
has_ªsize_grù
) : 1;

68 
	s_GtkSètusb¨Cœss


70 
GtkHBoxCœss
 
	m∑ª¡_˛ass
;

72 
gpoöãr
 
	mª£rved
;

74 (*
	mãxt_pushed
Ë(
GtkSètusb¨
 *
	m°©usb¨
,

75 
guöt
 
	mc⁄ãxt_id
,

76 c⁄° 
gch¨
 *
	mãxt
);

77 (*
	mãxt_p›≥d
Ë(
GtkSètusb¨
 *
	m°©usb¨
,

78 
guöt
 
	mc⁄ãxt_id
,

79 c⁄° 
gch¨
 *
	mãxt
);

82 (*
	m_gtk_ª£rved1
) ();

83 (*
	m_gtk_ª£rved2
) ();

84 (*
	m_gtk_ª£rved3
) ();

85 (*
	m_gtk_ª£rved4
) ();

89 
GTy≥
 
	$gtk_°©usb¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

90 
GtkWidgë
* 
	`gtk_°©usb¨_√w
 ();

94 
guöt
 
	`gtk_°©usb¨_gë_c⁄ãxt_id
 (
GtkSètusb¨
 *
°©usb¨
,

95 c⁄° 
gch¨
 *
c⁄ãxt_des¸ùti⁄
);

97 
guöt
 
	`gtk_°©usb¨_push
 (
GtkSètusb¨
 *
°©usb¨
,

98 
guöt
 
c⁄ãxt_id
,

99 c⁄° 
gch¨
 *
ãxt
);

100 
	`gtk_°©usb¨_p›
 (
GtkSètusb¨
 *
°©usb¨
,

101 
guöt
 
c⁄ãxt_id
);

102 
	`gtk_°©usb¨_ªmove
 (
GtkSètusb¨
 *
°©usb¨
,

103 
guöt
 
c⁄ãxt_id
,

104 
guöt
 
mesßge_id
);

106 
	`gtk_°©usb¨_£t_has_ªsize_grù
 (
GtkSètusb¨
 *
°©usb¨
,

107 
gboﬁón
 
£âög
);

108 
gboﬁón
 
	`gtk_°©usb¨_gë_has_ªsize_grù
 (
GtkSètusb¨
 *
°©usb¨
);

110 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkstatusicon.h

24 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

28 #i‚de‡
__GTK_STATUS_ICON_H__


29 
	#__GTK_STATUS_ICON_H__


	)

31 
	~<gtk/gtkimage.h
>

32 
	~<gtk/gtkmíu.h
>

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_STATUS_ICON
 (
	`gtk_°©us_ic⁄_gë_ty≥
 ())

	)

37 
	#GTK_STATUS_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
GTK_TYPE_STATUS_ICON
, 
GtkSètusIc⁄
))

	)

38 
	#GTK_STATUS_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((k), 
GTK_TYPE_STATUS_ICON
, 
GtkSètusIc⁄Cœss
))

	)

39 
	#GTK_IS_STATUS_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
GTK_TYPE_STATUS_ICON
))

	)

40 
	#GTK_IS_STATUS_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
GTK_TYPE_STATUS_ICON
))

	)

41 
	#GTK_STATUS_ICON_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
GTK_TYPE_STATUS_ICON
, 
GtkSètusIc⁄Cœss
))

	)

43 
_GtkSètusIc⁄
 
	tGtkSètusIc⁄
;

44 
_GtkSètusIc⁄Cœss
 
	tGtkSètusIc⁄Cœss
;

45 
_GtkSètusIc⁄Priv©e
 
	tGtkSètusIc⁄Priv©e
;

47 
	s_GtkSètusIc⁄


49 
GObje˘
 
	m∑ª¡_ö°™˚
;

51 
GtkSètusIc⁄Priv©e
 *
GSEAL
 (
¥iv
);

54 
	s_GtkSètusIc⁄Cœss


56 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

58 (* 
	ma˘iv©e
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
);

59 (* 
	mp›up_míu
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
,

60 
guöt
 
	mbuâ⁄
,

61 
guöt32
 
	ma˘iv©e_time
);

62 
gboﬁón
 (* 
size_ch™ged
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
,

63 
göt
 
	msize
);

64 
gboﬁón
 (* 
buâ⁄_¥ess_evít
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
,

65 
GdkEvítBuâ⁄
 *
	mevít
);

66 
gboﬁón
 (* 
buâ⁄_ªÀa£_evít
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
,

67 
GdkEvítBuâ⁄
 *
	mevít
);

68 
gboﬁón
 (* 
s¸ﬁl_evít
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
,

69 
GdkEvítS¸ﬁl
 *
	mevít
);

70 
gboﬁón
 (* 
quîy_toﬁtù
Ë(
GtkSètusIc⁄
 *
	m°©us_ic⁄
,

71 
göt
 
	mx
,

72 
göt
 
	my
,

73 
gboﬁón
 
	mkeybﬂrd_mode
,

74 
GtkToﬁtù
 *
	mtoﬁtù
);

76 (*
	m__gtk_ª£rved1
);

77 (*
	m__gtk_ª£rved2
);

80 
GTy≥
 
	$gtk_°©us_ic⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

82 
GtkSètusIc⁄
 *
	`gtk_°©us_ic⁄_√w
 ();

83 
GtkSètusIc⁄
 *
	`gtk_°©us_ic⁄_√w_‰om_pixbuf
 (
GdkPixbuf
 *
pixbuf
);

84 
GtkSètusIc⁄
 *
	`gtk_°©us_ic⁄_√w_‰om_fûe
 (c⁄° 
gch¨
 *
fûíame
);

85 
GtkSètusIc⁄
 *
	`gtk_°©us_ic⁄_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
);

86 
GtkSètusIc⁄
 *
	`gtk_°©us_ic⁄_√w_‰om_ic⁄_«me
 (c⁄° 
gch¨
 *
ic⁄_«me
);

87 
GtkSètusIc⁄
 *
	`gtk_°©us_ic⁄_√w_‰om_gic⁄
 (
GIc⁄
 *
ic⁄
);

89 
	`gtk_°©us_ic⁄_£t_‰om_pixbuf
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

90 
GdkPixbuf
 *
pixbuf
);

91 
	`gtk_°©us_ic⁄_£t_‰om_fûe
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

92 c⁄° 
gch¨
 *
fûíame
);

93 
	`gtk_°©us_ic⁄_£t_‰om_°ock
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

94 c⁄° 
gch¨
 *
°ock_id
);

95 
	`gtk_°©us_ic⁄_£t_‰om_ic⁄_«me
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

96 c⁄° 
gch¨
 *
ic⁄_«me
);

97 
	`gtk_°©us_ic⁄_£t_‰om_gic⁄
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

98 
GIc⁄
 *
ic⁄
);

100 
GtkImageTy≥
 
	`gtk_°©us_ic⁄_gë_°‹age_ty≥
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

102 
GdkPixbuf
 *
	`gtk_°©us_ic⁄_gë_pixbuf
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

103 
G_CONST_RETURN
 
gch¨
 *
	`gtk_°©us_ic⁄_gë_°ock
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

104 
G_CONST_RETURN
 
gch¨
 *
	`gtk_°©us_ic⁄_gë_ic⁄_«me
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

105 
GIc⁄
 *
	`gtk_°©us_ic⁄_gë_gic⁄
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

107 
göt
 
	`gtk_°©us_ic⁄_gë_size
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

109 
	`gtk_°©us_ic⁄_£t_s¸ìn
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

110 
GdkS¸ìn
 *
s¸ìn
);

111 
GdkS¸ìn
 *
	`gtk_°©us_ic⁄_gë_s¸ìn
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

113 #i‚de‡
GTK_DISABLE_DEPRECATED


114 
	`gtk_°©us_ic⁄_£t_toﬁtù
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

115 c⁄° 
gch¨
 *
toﬁtù_ãxt
);

117 
	`gtk_°©us_ic⁄_£t_has_toﬁtù
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

118 
gboﬁón
 
has_toﬁtù
);

119 
	`gtk_°©us_ic⁄_£t_toﬁtù_ãxt
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

120 c⁄° 
gch¨
 *
ãxt
);

121 
	`gtk_°©us_ic⁄_£t_toﬁtù_m¨kup
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

122 c⁄° 
gch¨
 *
m¨kup
);

123 
	`gtk_°©us_ic⁄_£t_visibÀ
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

124 
gboﬁón
 
visibÀ
);

125 
gboﬁón
 
	`gtk_°©us_ic⁄_gë_visibÀ
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

127 
	`gtk_°©us_ic⁄_£t_blökög
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

128 
gboﬁón
 
blökög
);

129 
gboﬁón
 
	`gtk_°©us_ic⁄_gë_blökög
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

131 
gboﬁón
 
	`gtk_°©us_ic⁄_is_embedded
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

133 
	`gtk_°©us_ic⁄_posôi⁄_míu
 (
GtkMíu
 *
míu
,

134 
göt
 *
x
,

135 
göt
 *
y
,

136 
gboﬁón
 *
push_ö
,

137 
gpoöãr
 
u£r_d©a
);

138 
gboﬁón
 
	`gtk_°©us_ic⁄_gë_geomëry
 (
GtkSètusIc⁄
 *
°©us_ic⁄
,

139 
GdkS¸ìn
 **
s¸ìn
,

140 
GdkRe˘™gÀ
 *
¨ó
,

141 
GtkOrõ¡©i⁄
 *
‹õ¡©i⁄
);

142 
gboﬁón
 
	`gtk_°©us_ic⁄_gë_has_toﬁtù
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

143 
gch¨
 *
	`gtk_°©us_ic⁄_gë_toﬁtù_ãxt
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

144 
gch¨
 *
	`gtk_°©us_ic⁄_gë_toﬁtù_m¨kup
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

146 
guöt32
 
	`gtk_°©us_ic⁄_gë_x11_wödow_id
 (
GtkSètusIc⁄
 *
°©us_ic⁄
);

148 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkstock.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_STOCK_H__


32 
	#__GTK_STOCK_H__


	)

35 
	~<gdk/gdk.h
>

36 
	~<gtk/gtkty≥utûs.h
>

38 
G_BEGIN_DECLS


40 
_GtkStockIãm
 
	tGtkStockIãm
;

42 
	s_GtkStockIãm


44 
gch¨
 *
	m°ock_id
;

45 
gch¨
 *
	mœbñ
;

46 
GdkModifõrTy≥
 
	mmodifõr
;

47 
guöt
 
	mkeyvÆ
;

48 
gch¨
 *
	må™¶©i⁄_domaö
;

51 
gtk_°ock_add
 (c⁄° 
GtkStockIãm
 *
ôems
,

52 
guöt
 
n_ôems
);

53 
gtk_°ock_add_°©ic
 (c⁄° 
GtkStockIãm
 *
ôems
,

54 
guöt
 
n_ôems
);

55 
gboﬁón
 
gtk_°ock_lookup
 (c⁄° 
gch¨
 *
°ock_id
,

56 
GtkStockIãm
 *
ôem
);

61 
GSLi°
* 
gtk_°ock_li°_ids
 ();

63 
GtkStockIãm
 *
gtk_°ock_ôem_c›y
 (c⁄° GtkStockIãm *
ôem
);

64 
gtk_°ock_ôem_‰ì
 (
GtkStockIãm
 *
ôem
);

66 
gtk_°ock_£t_å™¶©e_func
 (c⁄° 
gch¨
 *
domaö
,

67 
GtkTøn¶©eFunc
 
func
,

68 
gpoöãr
 
d©a
,

69 
GDe°royNŸify
 
nŸify
);

72 
	#GTK_STOCK_DIALOG_AUTHENTICATION
 \

73 "gtk-dülog-authítiˇti⁄"

	)

74 
	#GTK_STOCK_DIALOG_INFO
 "gtk-dülog-öfo"

	)

75 
	#GTK_STOCK_DIALOG_WARNING
 "gtk-dülog-w¨nög"

	)

76 
	#GTK_STOCK_DIALOG_ERROR
 "gtk-dülog-îr‹"

	)

77 
	#GTK_STOCK_DIALOG_QUESTION
 "gtk-dülog-que°i⁄"

	)

79 
	#GTK_STOCK_DND
 "gtk-dnd"

	)

80 
	#GTK_STOCK_DND_MULTIPLE
 "gtk-dnd-mu…ùÀ"

	)

82 
	#GTK_STOCK_ABOUT
 "gtk-about"

	)

83 
	#GTK_STOCK_ADD
 "gtk-add"

	)

84 
	#GTK_STOCK_APPLY
 "gtk-≠∂y"

	)

85 
	#GTK_STOCK_BOLD
 "gtk-bﬁd"

	)

86 
	#GTK_STOCK_CANCEL
 "gtk-ˇn˚l"

	)

87 
	#GTK_STOCK_CAPS_LOCK_WARNING
 "gtk-ˇps-lock-w¨nög"

	)

88 
	#GTK_STOCK_CDROM
 "gtk-cdrom"

	)

89 
	#GTK_STOCK_CLEAR
 "gtk-˛ór"

	)

90 
	#GTK_STOCK_CLOSE
 "gtk-˛o£"

	)

91 
	#GTK_STOCK_COLOR_PICKER
 "gtk-cﬁ‹-pickî"

	)

92 
	#GTK_STOCK_CONVERT
 "gtk-c⁄vît"

	)

93 
	#GTK_STOCK_CONNECT
 "gtk-c⁄√˘"

	)

94 
	#GTK_STOCK_COPY
 "gtk-c›y"

	)

95 
	#GTK_STOCK_CUT
 "gtk-cut"

	)

96 
	#GTK_STOCK_DELETE
 "gtk-dñëe"

	)

97 
	#GTK_STOCK_DIRECTORY
 "gtk-dúe˘‹y"

	)

98 
	#GTK_STOCK_DISCARD
 "gtk-disˇrd"

	)

99 
	#GTK_STOCK_DISCONNECT
 "gtk-disc⁄√˘"

	)

100 
	#GTK_STOCK_EDIT
 "gtk-edô"

	)

101 
	#GTK_STOCK_EXECUTE
 "gtk-execuã"

	)

102 
	#GTK_STOCK_FILE
 "gtk-fûe"

	)

103 
	#GTK_STOCK_FIND
 "gtk-föd"

	)

104 
	#GTK_STOCK_FIND_AND_REPLACE
 "gtk-föd-™d-ª∂a˚"

	)

105 
	#GTK_STOCK_FLOPPY
 "gtk-Ê›py"

	)

106 
	#GTK_STOCK_FULLSCREEN
 "gtk-fuŒs¸ìn"

	)

107 
	#GTK_STOCK_GOTO_BOTTOM
 "gtk-gŸo-bŸtom"

	)

108 
	#GTK_STOCK_GOTO_FIRST
 "gtk-gŸo-fú°"

	)

109 
	#GTK_STOCK_GOTO_LAST
 "gtk-gŸo-œ°"

	)

110 
	#GTK_STOCK_GOTO_TOP
 "gtk-gŸo-t›"

	)

111 
	#GTK_STOCK_GO_BACK
 "gtk-go-back"

	)

112 
	#GTK_STOCK_GO_DOWN
 "gtk-go-down"

	)

113 
	#GTK_STOCK_GO_FORWARD
 "gtk-go-f‹w¨d"

	)

114 
	#GTK_STOCK_GO_UP
 "gtk-go-up"

	)

115 
	#GTK_STOCK_HARDDISK
 "gtk-h¨ddisk"

	)

116 
	#GTK_STOCK_HELP
 "gtk-hñp"

	)

117 
	#GTK_STOCK_HOME
 "gtk-home"

	)

118 
	#GTK_STOCK_INDEX
 "gtk-ödex"

	)

119 
	#GTK_STOCK_INDENT
 "gtk-ödít"

	)

120 
	#GTK_STOCK_INFO
 "gtk-öfo"

	)

121 
	#GTK_STOCK_UNINDENT
 "gtk-unödít"

	)

122 
	#GTK_STOCK_ITALIC
 "gtk-ôÆic"

	)

123 
	#GTK_STOCK_JUMP_TO
 "gtk-jump-to"

	)

124 
	#GTK_STOCK_JUSTIFY_CENTER
 "gtk-ju°ify-˚¡î"

	)

125 
	#GTK_STOCK_JUSTIFY_FILL
 "gtk-ju°ify-fûl"

	)

126 
	#GTK_STOCK_JUSTIFY_LEFT
 "gtk-ju°ify-À·"

	)

127 
	#GTK_STOCK_JUSTIFY_RIGHT
 "gtk-ju°ify-right"

	)

128 
	#GTK_STOCK_LEAVE_FULLSCREEN
 "gtk-Àave-fuŒs¸ìn"

	)

129 
	#GTK_STOCK_MISSING_IMAGE
 "gtk-missög-image"

	)

130 
	#GTK_STOCK_MEDIA_FORWARD
 "gtk-medü-f‹w¨d"

	)

131 
	#GTK_STOCK_MEDIA_NEXT
 "gtk-medü-√xt"

	)

132 
	#GTK_STOCK_MEDIA_PAUSE
 "gtk-medü-∑u£"

	)

133 
	#GTK_STOCK_MEDIA_PLAY
 "gtk-medü-∂ay"

	)

134 
	#GTK_STOCK_MEDIA_PREVIOUS
 "gtk-medü-¥evious"

	)

135 
	#GTK_STOCK_MEDIA_RECORD
 "gtk-medü-ªc‹d"

	)

136 
	#GTK_STOCK_MEDIA_REWIND
 "gtk-medü-ªwöd"

	)

137 
	#GTK_STOCK_MEDIA_STOP
 "gtk-medü-°›"

	)

138 
	#GTK_STOCK_NETWORK
 "gtk-√tw‹k"

	)

139 
	#GTK_STOCK_NEW
 "gtk-√w"

	)

140 
	#GTK_STOCK_NO
 "gtk-no"

	)

141 
	#GTK_STOCK_OK
 "gtk-ok"

	)

142 
	#GTK_STOCK_OPEN
 "gtk-›í"

	)

143 
	#GTK_STOCK_ORIENTATION_PORTRAIT
 "gtk-‹õ¡©i⁄-p‹åaô"

	)

144 
	#GTK_STOCK_ORIENTATION_LANDSCAPE
 "gtk-‹õ¡©i⁄-œndsˇ≥"

	)

145 
	#GTK_STOCK_ORIENTATION_REVERSE_LANDSCAPE
 "gtk-‹õ¡©i⁄-ªvî£-œndsˇ≥"

	)

146 
	#GTK_STOCK_ORIENTATION_REVERSE_PORTRAIT
 "gtk-‹õ¡©i⁄-ªvî£-p‹åaô"

	)

147 
	#GTK_STOCK_PAGE_SETUP
 "gtk-∑ge-£tup"

	)

148 
	#GTK_STOCK_PASTE
 "gtk-∑°e"

	)

149 
	#GTK_STOCK_PREFERENCES
 "gtk-¥e„ªn˚s"

	)

150 
	#GTK_STOCK_PRINT
 "gtk-¥öt"

	)

151 
	#GTK_STOCK_PRINT_ERROR
 "gtk-¥öt-îr‹"

	)

152 
	#GTK_STOCK_PRINT_PAUSED
 "gtk-¥öt-∑u£d"

	)

153 
	#GTK_STOCK_PRINT_PREVIEW
 "gtk-¥öt-¥evõw"

	)

154 
	#GTK_STOCK_PRINT_REPORT
 "gtk-¥öt-ªp‹t"

	)

155 
	#GTK_STOCK_PRINT_WARNING
 "gtk-¥öt-w¨nög"

	)

156 
	#GTK_STOCK_PROPERTIES
 "gtk-¥›îtõs"

	)

157 
	#GTK_STOCK_QUIT
 "gtk-quô"

	)

158 
	#GTK_STOCK_REDO
 "gtk-ªdo"

	)

159 
	#GTK_STOCK_REFRESH
 "gtk-ª‰esh"

	)

160 
	#GTK_STOCK_REMOVE
 "gtk-ªmove"

	)

161 
	#GTK_STOCK_REVERT_TO_SAVED
 "gtk-ªvît-to-ßved"

	)

162 
	#GTK_STOCK_SAVE
 "gtk-ßve"

	)

163 
	#GTK_STOCK_SAVE_AS
 "gtk-ßve-as"

	)

164 
	#GTK_STOCK_SELECT_ALL
 "gtk-£À˘-Æl"

	)

165 
	#GTK_STOCK_SELECT_COLOR
 "gtk-£À˘-cﬁ‹"

	)

166 
	#GTK_STOCK_SELECT_FONT
 "gtk-£À˘-f⁄t"

	)

167 
	#GTK_STOCK_SORT_ASCENDING
 "gtk-s‹t-as˚ndög"

	)

168 
	#GTK_STOCK_SORT_DESCENDING
 "gtk-s‹t-des˚ndög"

	)

169 
	#GTK_STOCK_SPELL_CHECK
 "gtk-•ñl-check"

	)

170 
	#GTK_STOCK_STOP
 "gtk-°›"

	)

171 
	#GTK_STOCK_STRIKETHROUGH
 "gtk-°rikëhrough"

	)

172 
	#GTK_STOCK_UNDELETE
 "gtk-undñëe"

	)

173 
	#GTK_STOCK_UNDERLINE
 "gtk-undîlöe"

	)

174 
	#GTK_STOCK_UNDO
 "gtk-undo"

	)

175 
	#GTK_STOCK_YES
 "gtk-yes"

	)

176 
	#GTK_STOCK_ZOOM_100
 "gtk-zoom-100"

	)

177 
	#GTK_STOCK_ZOOM_FIT
 "gtk-zoom-fô"

	)

178 
	#GTK_STOCK_ZOOM_IN
 "gtk-zoom-ö"

	)

179 
	#GTK_STOCK_ZOOM_OUT
 "gtk-zoom-out"

	)

181 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkstyle.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_STYLE_H__


32 
	#__GTK_STYLE_H__


	)

35 
	~<gdk/gdk.h
>

36 
	~<gtk/gtkíums.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_STYLE
 (
	`gtk_°yÀ_gë_ty≥
 ())

	)

42 
	#GTK_STYLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_STYLE
, 
GtkStyÀ
))

	)

43 
	#GTK_STYLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_STYLE
, 
GtkStyÀCœss
))

	)

44 
	#GTK_IS_STYLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_STYLE
))

	)

45 
	#GTK_IS_STYLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_STYLE
))

	)

46 
	#GTK_STYLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_STYLE
, 
GtkStyÀCœss
))

	)

48 
	#GTK_TYPE_BORDER
 (
	`gtk_b‹dî_gë_ty≥
 ())

	)

53 
_GtkB‹dî
 
	tGtkB‹dî
;

54 
_GtkStyÀ
 
	tGtkStyÀ
;

55 
_GtkStyÀCœss
 
	tGtkStyÀCœss
;

56 
_GtkThemeEngöe
 
	tGtkThemeEngöe
;

57 
_GtkRcStyÀ
 
	tGtkRcStyÀ
;

58 
_GtkIc⁄Së
 
	tGtkIc⁄Së
;

59 
_GtkIc⁄Sour˚
 
	tGtkIc⁄Sour˚
;

60 
_GtkRcPr›îty
 
	tGtkRcPr›îty
;

61 
_GtkSëtögs
 
	tGtkSëtögs
;

62 
	$gboﬁón
 (*
	tGtkRcPr›îtyP¨£r
Ë(c⁄° 
	tGP¨amS≥c
 *
	tp•ec
,

63 c⁄° 
	tGSåög
 *
	trc_°rög
,

64 
	tGVÆue
 *
	t¥›îty_vÆue
);

69 
_GtkWidgë
 
	tGtkWidgë
;

71 
	#GTK_STYLE_ATTACHED
(
°yÀ
Ë(
	`GTK_STYLE
 (°yÀ)->
©èch_cou¡
 > 0)

	)

73 
	s_GtkStyÀ


75 
GObje˘
 
∑ª¡_ö°™˚
;

79 
GdkCﬁ‹
 
fg
[5];

80 
GdkCﬁ‹
 
bg
[5];

81 
GdkCﬁ‹
 
light
[5];

82 
GdkCﬁ‹
 
d¨k
[5];

83 
GdkCﬁ‹
 
mid
[5];

84 
GdkCﬁ‹
 
ãxt
[5];

85 
GdkCﬁ‹
 
ba£
[5];

86 
GdkCﬁ‹
 
ãxt_Ø
[5];

88 
GdkCﬁ‹
 
bœck
;

89 
GdkCﬁ‹
 
whôe
;

90 
P™goF⁄tDes¸ùti⁄
 *
f⁄t_desc
;

92 
göt
 
xthick√ss
;

93 
göt
 
ythick√ss
;

95 
GdkGC
 *
fg_gc
[5];

96 
GdkGC
 *
bg_gc
[5];

97 
GdkGC
 *
light_gc
[5];

98 
GdkGC
 *
d¨k_gc
[5];

99 
GdkGC
 *
mid_gc
[5];

100 
GdkGC
 *
ãxt_gc
[5];

101 
GdkGC
 *
ba£_gc
[5];

102 
GdkGC
 *
ãxt_Ø_gc
[5];

103 
GdkGC
 *
bœck_gc
;

104 
GdkGC
 *
whôe_gc
;

106 
GdkPixm≠
 *
bg_pixm≠
[5];

110 
göt
 
©èch_cou¡
;

112 
göt
 
dïth
;

113 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
;

114 
GdkF⁄t
 *
¥iv©e_f⁄t
;

115 
P™goF⁄tDes¸ùti⁄
 *
¥iv©e_f⁄t_desc
;

118 
GtkRcStyÀ
 *
rc_°yÀ
;

120 
GSLi°
 *
°yÀs
;

121 
GAºay
 *
¥›îty_ˇche
;

122 
GSLi°
 *
ic⁄_Á˘‹õs
;

125 
	s_GtkStyÀCœss


127 
GObje˘Cœss
 
∑ª¡_˛ass
;

133 (*
ªÆize
Ë(
GtkStyÀ
 *
°yÀ
);

138 (*
uƒólize
Ë(
GtkStyÀ
 *
°yÀ
);

142 (*
c›y
Ë(
GtkStyÀ
 *
°yÀ
,

143 
GtkStyÀ
 *
§c
);

150 
GtkStyÀ
 *(*
˛⁄e
Ë(GtkStyÀ *
°yÀ
);

155 (*
öô_‰om_rc
Ë(
GtkStyÀ
 *
°yÀ
,

156 
GtkRcStyÀ
 *
rc_°yÀ
);

158 (*
£t_background
Ë(
GtkStyÀ
 *
°yÀ
,

159 
GdkWödow
 *
wödow
,

160 
GtkSèãTy≥
 
°©e_ty≥
);

163 
GdkPixbuf
 * (* 
ªndî_ic⁄
Ë(
GtkStyÀ
 *
°yÀ
,

164 c⁄° 
GtkIc⁄Sour˚
 *
sour˚
,

165 
GtkTextDúe˘i⁄
 
dúe˘i⁄
,

166 
GtkSèãTy≥
 
°©e
,

167 
GtkIc⁄Size
 
size
,

168 
GtkWidgë
 *
widgë
,

169 c⁄° 
gch¨
 *
dëaû
);

174 (*
døw_hlöe
Ë(
GtkStyÀ
 *
°yÀ
,

175 
GdkWödow
 *
wödow
,

176 
GtkSèãTy≥
 
°©e_ty≥
,

177 
GdkRe˘™gÀ
 *
¨ó
,

178 
GtkWidgë
 *
widgë
,

179 c⁄° 
gch¨
 *
dëaû
,

180 
göt
 
x1
,

181 
göt
 
x2
,

182 
göt
 
y
);

183 (*
døw_vlöe
Ë(
GtkStyÀ
 *
°yÀ
,

184 
GdkWödow
 *
wödow
,

185 
GtkSèãTy≥
 
°©e_ty≥
,

186 
GdkRe˘™gÀ
 *
¨ó
,

187 
GtkWidgë
 *
widgë
,

188 c⁄° 
gch¨
 *
dëaû
,

189 
göt
 
y1_
,

190 
göt
 
y2_
,

191 
göt
 
x
);

192 (*
døw_shadow
Ë(
GtkStyÀ
 *
°yÀ
,

193 
GdkWödow
 *
wödow
,

194 
GtkSèãTy≥
 
°©e_ty≥
,

195 
GtkShadowTy≥
 
shadow_ty≥
,

196 
GdkRe˘™gÀ
 *
¨ó
,

197 
GtkWidgë
 *
widgë
,

198 c⁄° 
gch¨
 *
dëaû
,

199 
göt
 
x
,

200 
göt
 
y
,

201 
göt
 
width
,

202 
göt
 
height
);

203 (*
døw_pﬁyg⁄
Ë(
GtkStyÀ
 *
°yÀ
,

204 
GdkWödow
 *
wödow
,

205 
GtkSèãTy≥
 
°©e_ty≥
,

206 
GtkShadowTy≥
 
shadow_ty≥
,

207 
GdkRe˘™gÀ
 *
¨ó
,

208 
GtkWidgë
 *
widgë
,

209 c⁄° 
gch¨
 *
dëaû
,

210 
GdkPoöt
 *
poöt
,

211 
göt
 
≈oöts
,

212 
gboﬁón
 
fûl
);

213 (*
døw_¨row
Ë(
GtkStyÀ
 *
°yÀ
,

214 
GdkWödow
 *
wödow
,

215 
GtkSèãTy≥
 
°©e_ty≥
,

216 
GtkShadowTy≥
 
shadow_ty≥
,

217 
GdkRe˘™gÀ
 *
¨ó
,

218 
GtkWidgë
 *
widgë
,

219 c⁄° 
gch¨
 *
dëaû
,

220 
GtkAºowTy≥
 
¨row_ty≥
,

221 
gboﬁón
 
fûl
,

222 
göt
 
x
,

223 
göt
 
y
,

224 
göt
 
width
,

225 
göt
 
height
);

226 (*
døw_düm⁄d
Ë(
GtkStyÀ
 *
°yÀ
,

227 
GdkWödow
 *
wödow
,

228 
GtkSèãTy≥
 
°©e_ty≥
,

229 
GtkShadowTy≥
 
shadow_ty≥
,

230 
GdkRe˘™gÀ
 *
¨ó
,

231 
GtkWidgë
 *
widgë
,

232 c⁄° 
gch¨
 *
dëaû
,

233 
göt
 
x
,

234 
göt
 
y
,

235 
göt
 
width
,

236 
göt
 
height
);

237 (*
døw_°rög
Ë(
GtkStyÀ
 *
°yÀ
,

238 
GdkWödow
 *
wödow
,

239 
GtkSèãTy≥
 
°©e_ty≥
,

240 
GdkRe˘™gÀ
 *
¨ó
,

241 
GtkWidgë
 *
widgë
,

242 c⁄° 
gch¨
 *
dëaû
,

243 
göt
 
x
,

244 
göt
 
y
,

245 c⁄° 
gch¨
 *
°rög
);

246 (*
døw_box
Ë(
GtkStyÀ
 *
°yÀ
,

247 
GdkWödow
 *
wödow
,

248 
GtkSèãTy≥
 
°©e_ty≥
,

249 
GtkShadowTy≥
 
shadow_ty≥
,

250 
GdkRe˘™gÀ
 *
¨ó
,

251 
GtkWidgë
 *
widgë
,

252 c⁄° 
gch¨
 *
dëaû
,

253 
göt
 
x
,

254 
göt
 
y
,

255 
göt
 
width
,

256 
göt
 
height
);

257 (*
døw_Ê©_box
Ë(
GtkStyÀ
 *
°yÀ
,

258 
GdkWödow
 *
wödow
,

259 
GtkSèãTy≥
 
°©e_ty≥
,

260 
GtkShadowTy≥
 
shadow_ty≥
,

261 
GdkRe˘™gÀ
 *
¨ó
,

262 
GtkWidgë
 *
widgë
,

263 c⁄° 
gch¨
 *
dëaû
,

264 
göt
 
x
,

265 
göt
 
y
,

266 
göt
 
width
,

267 
göt
 
height
);

268 (*
døw_check
Ë(
GtkStyÀ
 *
°yÀ
,

269 
GdkWödow
 *
wödow
,

270 
GtkSèãTy≥
 
°©e_ty≥
,

271 
GtkShadowTy≥
 
shadow_ty≥
,

272 
GdkRe˘™gÀ
 *
¨ó
,

273 
GtkWidgë
 *
widgë
,

274 c⁄° 
gch¨
 *
dëaû
,

275 
göt
 
x
,

276 
göt
 
y
,

277 
göt
 
width
,

278 
göt
 
height
);

279 (*
døw_›ti⁄
Ë(
GtkStyÀ
 *
°yÀ
,

280 
GdkWödow
 *
wödow
,

281 
GtkSèãTy≥
 
°©e_ty≥
,

282 
GtkShadowTy≥
 
shadow_ty≥
,

283 
GdkRe˘™gÀ
 *
¨ó
,

284 
GtkWidgë
 *
widgë
,

285 c⁄° 
gch¨
 *
dëaû
,

286 
göt
 
x
,

287 
göt
 
y
,

288 
göt
 
width
,

289 
göt
 
height
);

290 (*
døw_èb
Ë(
GtkStyÀ
 *
°yÀ
,

291 
GdkWödow
 *
wödow
,

292 
GtkSèãTy≥
 
°©e_ty≥
,

293 
GtkShadowTy≥
 
shadow_ty≥
,

294 
GdkRe˘™gÀ
 *
¨ó
,

295 
GtkWidgë
 *
widgë
,

296 c⁄° 
gch¨
 *
dëaû
,

297 
göt
 
x
,

298 
göt
 
y
,

299 
göt
 
width
,

300 
göt
 
height
);

301 (*
døw_shadow_g≠
Ë(
GtkStyÀ
 *
°yÀ
,

302 
GdkWödow
 *
wödow
,

303 
GtkSèãTy≥
 
°©e_ty≥
,

304 
GtkShadowTy≥
 
shadow_ty≥
,

305 
GdkRe˘™gÀ
 *
¨ó
,

306 
GtkWidgë
 *
widgë
,

307 c⁄° 
gch¨
 *
dëaû
,

308 
göt
 
x
,

309 
göt
 
y
,

310 
göt
 
width
,

311 
göt
 
height
,

312 
GtkPosôi⁄Ty≥
 
g≠_side
,

313 
göt
 
g≠_x
,

314 
göt
 
g≠_width
);

315 (*
døw_box_g≠
Ë(
GtkStyÀ
 *
°yÀ
,

316 
GdkWödow
 *
wödow
,

317 
GtkSèãTy≥
 
°©e_ty≥
,

318 
GtkShadowTy≥
 
shadow_ty≥
,

319 
GdkRe˘™gÀ
 *
¨ó
,

320 
GtkWidgë
 *
widgë
,

321 c⁄° 
gch¨
 *
dëaû
,

322 
göt
 
x
,

323 
göt
 
y
,

324 
göt
 
width
,

325 
göt
 
height
,

326 
GtkPosôi⁄Ty≥
 
g≠_side
,

327 
göt
 
g≠_x
,

328 
göt
 
g≠_width
);

329 (*
døw_exãnsi⁄
Ë(
GtkStyÀ
 *
°yÀ
,

330 
GdkWödow
 *
wödow
,

331 
GtkSèãTy≥
 
°©e_ty≥
,

332 
GtkShadowTy≥
 
shadow_ty≥
,

333 
GdkRe˘™gÀ
 *
¨ó
,

334 
GtkWidgë
 *
widgë
,

335 c⁄° 
gch¨
 *
dëaû
,

336 
göt
 
x
,

337 
göt
 
y
,

338 
göt
 
width
,

339 
göt
 
height
,

340 
GtkPosôi⁄Ty≥
 
g≠_side
);

341 (*
døw_focus
Ë(
GtkStyÀ
 *
°yÀ
,

342 
GdkWödow
 *
wödow
,

343 
GtkSèãTy≥
 
°©e_ty≥
,

344 
GdkRe˘™gÀ
 *
¨ó
,

345 
GtkWidgë
 *
widgë
,

346 c⁄° 
gch¨
 *
dëaû
,

347 
göt
 
x
,

348 
göt
 
y
,

349 
göt
 
width
,

350 
göt
 
height
);

351 (*
døw_¶idî
Ë(
GtkStyÀ
 *
°yÀ
,

352 
GdkWödow
 *
wödow
,

353 
GtkSèãTy≥
 
°©e_ty≥
,

354 
GtkShadowTy≥
 
shadow_ty≥
,

355 
GdkRe˘™gÀ
 *
¨ó
,

356 
GtkWidgë
 *
widgë
,

357 c⁄° 
gch¨
 *
dëaû
,

358 
göt
 
x
,

359 
göt
 
y
,

360 
göt
 
width
,

361 
göt
 
height
,

362 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

363 (*
døw_h™dÀ
Ë(
GtkStyÀ
 *
°yÀ
,

364 
GdkWödow
 *
wödow
,

365 
GtkSèãTy≥
 
°©e_ty≥
,

366 
GtkShadowTy≥
 
shadow_ty≥
,

367 
GdkRe˘™gÀ
 *
¨ó
,

368 
GtkWidgë
 *
widgë
,

369 c⁄° 
gch¨
 *
dëaû
,

370 
göt
 
x
,

371 
göt
 
y
,

372 
göt
 
width
,

373 
göt
 
height
,

374 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

376 (*
døw_ex∑ndî
Ë(
GtkStyÀ
 *
°yÀ
,

377 
GdkWödow
 *
wödow
,

378 
GtkSèãTy≥
 
°©e_ty≥
,

379 
GdkRe˘™gÀ
 *
¨ó
,

380 
GtkWidgë
 *
widgë
,

381 c⁄° 
gch¨
 *
dëaû
,

382 
göt
 
x
,

383 
göt
 
y
,

384 
GtkEx∑ndîStyÀ
 
ex∑ndî_°yÀ
);

385 (*
døw_œyout
Ë(
GtkStyÀ
 *
°yÀ
,

386 
GdkWödow
 *
wödow
,

387 
GtkSèãTy≥
 
°©e_ty≥
,

388 
gboﬁón
 
u£_ãxt
,

389 
GdkRe˘™gÀ
 *
¨ó
,

390 
GtkWidgë
 *
widgë
,

391 c⁄° 
gch¨
 *
dëaû
,

392 
göt
 
x
,

393 
göt
 
y
,

394 
P™goLayout
 *
œyout
);

395 (*
døw_ªsize_grù
Ë(
GtkStyÀ
 *
°yÀ
,

396 
GdkWödow
 *
wödow
,

397 
GtkSèãTy≥
 
°©e_ty≥
,

398 
GdkRe˘™gÀ
 *
¨ó
,

399 
GtkWidgë
 *
widgë
,

400 c⁄° 
gch¨
 *
dëaû
,

401 
GdkWödowEdge
 
edge
,

402 
göt
 
x
,

403 
göt
 
y
,

404 
göt
 
width
,

405 
göt
 
height
);

408 (*
_gtk_ª£rved1
) ();

409 (*
_gtk_ª£rved2
) ();

410 (*
_gtk_ª£rved3
) ();

411 (*
_gtk_ª£rved4
) ();

412 (*
_gtk_ª£rved5
) ();

413 (*
_gtk_ª£rved6
) ();

414 (*
_gtk_ª£rved7
) ();

415 (*
_gtk_ª£rved8
) ();

416 (*
_gtk_ª£rved9
) ();

417 (*
_gtk_ª£rved10
) ();

418 (*
_gtk_ª£rved11
) ();

419 (*
_gtk_ª£rved12
) ();

422 
	s_GtkB‹dî


424 
göt
 
À·
;

425 
göt
 
right
;

426 
göt
 
t›
;

427 
göt
 
bŸtom
;

430 
GTy≥
 
	$gtk_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

431 
GtkStyÀ
* 
	`gtk_°yÀ_√w
 ();

432 
GtkStyÀ
* 
	`gtk_°yÀ_c›y
 (GtkStyÀ *
°yÀ
);

433 
GtkStyÀ
* 
	$gtk_°yÀ_©èch
 (
GtkStyÀ
 *
°yÀ
,

434 
GdkWödow
 *
wödow
Ë
G_GNUC_WARN_UNUSED_RESULT
;

435 
	`gtk_°yÀ_dëach
 (
GtkStyÀ
 *
°yÀ
);

437 #i‚de‡
GTK_DISABLE_DEPRECATED


438 
GtkStyÀ
* 
	`gtk_°yÀ_ªf
 (GtkStyÀ *
°yÀ
);

439 
	`gtk_°yÀ_uƒef
 (
GtkStyÀ
 *
°yÀ
);

441 
GdkF⁄t
 * 
	`gtk_°yÀ_gë_f⁄t
 (
GtkStyÀ
 *
°yÀ
);

442 
	`gtk_°yÀ_£t_f⁄t
 (
GtkStyÀ
 *
°yÀ
,

443 
GdkF⁄t
 *
f⁄t
);

446 
	`gtk_°yÀ_£t_background
 (
GtkStyÀ
 *
°yÀ
,

447 
GdkWödow
 *
wödow
,

448 
GtkSèãTy≥
 
°©e_ty≥
);

449 
	`gtk_°yÀ_≠∂y_deÁu…_background
 (
GtkStyÀ
 *
°yÀ
,

450 
GdkWödow
 *
wödow
,

451 
gboﬁón
 
£t_bg
,

452 
GtkSèãTy≥
 
°©e_ty≥
,

453 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

454 
göt
 
x
,

455 
göt
 
y
,

456 
göt
 
width
,

457 
göt
 
height
);

459 
GtkIc⁄Së
* 
	`gtk_°yÀ_lookup_ic⁄_£t
 (
GtkStyÀ
 *
°yÀ
,

460 c⁄° 
gch¨
 *
°ock_id
);

461 
gboﬁón
 
	`gtk_°yÀ_lookup_cﬁ‹
 (
GtkStyÀ
 *
°yÀ
,

462 c⁄° 
gch¨
 *
cﬁ‹_«me
,

463 
GdkCﬁ‹
 *
cﬁ‹
);

465 
GdkPixbuf
* 
	`gtk_°yÀ_ªndî_ic⁄
 (
GtkStyÀ
 *
°yÀ
,

466 c⁄° 
GtkIc⁄Sour˚
 *
sour˚
,

467 
GtkTextDúe˘i⁄
 
dúe˘i⁄
,

468 
GtkSèãTy≥
 
°©e
,

469 
GtkIc⁄Size
 
size
,

470 
GtkWidgë
 *
widgë
,

471 c⁄° 
gch¨
 *
dëaû
);

473 #i‚de‡
GTK_DISABLE_DEPRECATED


474 
	`gtk_døw_hlöe
 (
GtkStyÀ
 *
°yÀ
,

475 
GdkWödow
 *
wödow
,

476 
GtkSèãTy≥
 
°©e_ty≥
,

477 
göt
 
x1
,

478 
göt
 
x2
,

479 
göt
 
y
);

480 
	`gtk_døw_vlöe
 (
GtkStyÀ
 *
°yÀ
,

481 
GdkWödow
 *
wödow
,

482 
GtkSèãTy≥
 
°©e_ty≥
,

483 
göt
 
y1_
,

484 
göt
 
y2_
,

485 
göt
 
x
);

486 
	`gtk_døw_shadow
 (
GtkStyÀ
 *
°yÀ
,

487 
GdkWödow
 *
wödow
,

488 
GtkSèãTy≥
 
°©e_ty≥
,

489 
GtkShadowTy≥
 
shadow_ty≥
,

490 
göt
 
x
,

491 
göt
 
y
,

492 
göt
 
width
,

493 
göt
 
height
);

494 
	`gtk_døw_pﬁyg⁄
 (
GtkStyÀ
 *
°yÀ
,

495 
GdkWödow
 *
wödow
,

496 
GtkSèãTy≥
 
°©e_ty≥
,

497 
GtkShadowTy≥
 
shadow_ty≥
,

498 
GdkPoöt
 *
poöts
,

499 
göt
 
≈oöts
,

500 
gboﬁón
 
fûl
);

501 
	`gtk_døw_¨row
 (
GtkStyÀ
 *
°yÀ
,

502 
GdkWödow
 *
wödow
,

503 
GtkSèãTy≥
 
°©e_ty≥
,

504 
GtkShadowTy≥
 
shadow_ty≥
,

505 
GtkAºowTy≥
 
¨row_ty≥
,

506 
gboﬁón
 
fûl
,

507 
göt
 
x
,

508 
göt
 
y
,

509 
göt
 
width
,

510 
göt
 
height
);

511 
	`gtk_døw_düm⁄d
 (
GtkStyÀ
 *
°yÀ
,

512 
GdkWödow
 *
wödow
,

513 
GtkSèãTy≥
 
°©e_ty≥
,

514 
GtkShadowTy≥
 
shadow_ty≥
,

515 
göt
 
x
,

516 
göt
 
y
,

517 
göt
 
width
,

518 
göt
 
height
);

519 
	`gtk_døw_box
 (
GtkStyÀ
 *
°yÀ
,

520 
GdkWödow
 *
wödow
,

521 
GtkSèãTy≥
 
°©e_ty≥
,

522 
GtkShadowTy≥
 
shadow_ty≥
,

523 
göt
 
x
,

524 
göt
 
y
,

525 
göt
 
width
,

526 
göt
 
height
);

527 
	`gtk_døw_Ê©_box
 (
GtkStyÀ
 *
°yÀ
,

528 
GdkWödow
 *
wödow
,

529 
GtkSèãTy≥
 
°©e_ty≥
,

530 
GtkShadowTy≥
 
shadow_ty≥
,

531 
göt
 
x
,

532 
göt
 
y
,

533 
göt
 
width
,

534 
göt
 
height
);

535 
	`gtk_døw_check
 (
GtkStyÀ
 *
°yÀ
,

536 
GdkWödow
 *
wödow
,

537 
GtkSèãTy≥
 
°©e_ty≥
,

538 
GtkShadowTy≥
 
shadow_ty≥
,

539 
göt
 
x
,

540 
göt
 
y
,

541 
göt
 
width
,

542 
göt
 
height
);

543 
	`gtk_døw_›ti⁄
 (
GtkStyÀ
 *
°yÀ
,

544 
GdkWödow
 *
wödow
,

545 
GtkSèãTy≥
 
°©e_ty≥
,

546 
GtkShadowTy≥
 
shadow_ty≥
,

547 
göt
 
x
,

548 
göt
 
y
,

549 
göt
 
width
,

550 
göt
 
height
);

551 
	`gtk_døw_èb
 (
GtkStyÀ
 *
°yÀ
,

552 
GdkWödow
 *
wödow
,

553 
GtkSèãTy≥
 
°©e_ty≥
,

554 
GtkShadowTy≥
 
shadow_ty≥
,

555 
göt
 
x
,

556 
göt
 
y
,

557 
göt
 
width
,

558 
göt
 
height
);

559 
	`gtk_døw_shadow_g≠
 (
GtkStyÀ
 *
°yÀ
,

560 
GdkWödow
 *
wödow
,

561 
GtkSèãTy≥
 
°©e_ty≥
,

562 
GtkShadowTy≥
 
shadow_ty≥
,

563 
göt
 
x
,

564 
göt
 
y
,

565 
göt
 
width
,

566 
göt
 
height
,

567 
GtkPosôi⁄Ty≥
 
g≠_side
,

568 
göt
 
g≠_x
,

569 
göt
 
g≠_width
);

570 
	`gtk_døw_box_g≠
 (
GtkStyÀ
 *
°yÀ
,

571 
GdkWödow
 *
wödow
,

572 
GtkSèãTy≥
 
°©e_ty≥
,

573 
GtkShadowTy≥
 
shadow_ty≥
,

574 
göt
 
x
,

575 
göt
 
y
,

576 
göt
 
width
,

577 
göt
 
height
,

578 
GtkPosôi⁄Ty≥
 
g≠_side
,

579 
göt
 
g≠_x
,

580 
göt
 
g≠_width
);

581 
	`gtk_døw_exãnsi⁄
 (
GtkStyÀ
 *
°yÀ
,

582 
GdkWödow
 *
wödow
,

583 
GtkSèãTy≥
 
°©e_ty≥
,

584 
GtkShadowTy≥
 
shadow_ty≥
,

585 
göt
 
x
,

586 
göt
 
y
,

587 
göt
 
width
,

588 
göt
 
height
,

589 
GtkPosôi⁄Ty≥
 
g≠_side
);

590 
	`gtk_døw_focus
 (
GtkStyÀ
 *
°yÀ
,

591 
GdkWödow
 *
wödow
,

592 
göt
 
x
,

593 
göt
 
y
,

594 
göt
 
width
,

595 
göt
 
height
);

596 
	`gtk_døw_¶idî
 (
GtkStyÀ
 *
°yÀ
,

597 
GdkWödow
 *
wödow
,

598 
GtkSèãTy≥
 
°©e_ty≥
,

599 
GtkShadowTy≥
 
shadow_ty≥
,

600 
göt
 
x
,

601 
göt
 
y
,

602 
göt
 
width
,

603 
göt
 
height
,

604 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

605 
	`gtk_døw_h™dÀ
 (
GtkStyÀ
 *
°yÀ
,

606 
GdkWödow
 *
wödow
,

607 
GtkSèãTy≥
 
°©e_ty≥
,

608 
GtkShadowTy≥
 
shadow_ty≥
,

609 
göt
 
x
,

610 
göt
 
y
,

611 
göt
 
width
,

612 
göt
 
height
,

613 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

614 
	`gtk_døw_ex∑ndî
 (
GtkStyÀ
 *
°yÀ
,

615 
GdkWödow
 *
wödow
,

616 
GtkSèãTy≥
 
°©e_ty≥
,

617 
göt
 
x
,

618 
göt
 
y
,

619 
GtkEx∑ndîStyÀ
 
ex∑ndî_°yÀ
);

620 
	`gtk_døw_œyout
 (
GtkStyÀ
 *
°yÀ
,

621 
GdkWödow
 *
wödow
,

622 
GtkSèãTy≥
 
°©e_ty≥
,

623 
gboﬁón
 
u£_ãxt
,

624 
göt
 
x
,

625 
göt
 
y
,

626 
P™goLayout
 *
œyout
);

627 
	`gtk_døw_ªsize_grù
 (
GtkStyÀ
 *
°yÀ
,

628 
GdkWödow
 *
wödow
,

629 
GtkSèãTy≥
 
°©e_ty≥
,

630 
GdkWödowEdge
 
edge
,

631 
göt
 
x
,

632 
göt
 
y
,

633 
göt
 
width
,

634 
göt
 
height
);

637 
	`gtk_∑öt_hlöe
 (
GtkStyÀ
 *
°yÀ
,

638 
GdkWödow
 *
wödow
,

639 
GtkSèãTy≥
 
°©e_ty≥
,

640 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

641 
GtkWidgë
 *
widgë
,

642 c⁄° 
gch¨
 *
dëaû
,

643 
göt
 
x1
,

644 
göt
 
x2
,

645 
göt
 
y
);

646 
	`gtk_∑öt_vlöe
 (
GtkStyÀ
 *
°yÀ
,

647 
GdkWödow
 *
wödow
,

648 
GtkSèãTy≥
 
°©e_ty≥
,

649 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

650 
GtkWidgë
 *
widgë
,

651 c⁄° 
gch¨
 *
dëaû
,

652 
göt
 
y1_
,

653 
göt
 
y2_
,

654 
göt
 
x
);

655 
	`gtk_∑öt_shadow
 (
GtkStyÀ
 *
°yÀ
,

656 
GdkWödow
 *
wödow
,

657 
GtkSèãTy≥
 
°©e_ty≥
,

658 
GtkShadowTy≥
 
shadow_ty≥
,

659 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

660 
GtkWidgë
 *
widgë
,

661 c⁄° 
gch¨
 *
dëaû
,

662 
göt
 
x
,

663 
göt
 
y
,

664 
göt
 
width
,

665 
göt
 
height
);

666 
	`gtk_∑öt_pﬁyg⁄
 (
GtkStyÀ
 *
°yÀ
,

667 
GdkWödow
 *
wödow
,

668 
GtkSèãTy≥
 
°©e_ty≥
,

669 
GtkShadowTy≥
 
shadow_ty≥
,

670 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

671 
GtkWidgë
 *
widgë
,

672 c⁄° 
gch¨
 *
dëaû
,

673 c⁄° 
GdkPoöt
 *
poöts
,

674 
göt
 
n_poöts
,

675 
gboﬁón
 
fûl
);

676 
	`gtk_∑öt_¨row
 (
GtkStyÀ
 *
°yÀ
,

677 
GdkWödow
 *
wödow
,

678 
GtkSèãTy≥
 
°©e_ty≥
,

679 
GtkShadowTy≥
 
shadow_ty≥
,

680 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

681 
GtkWidgë
 *
widgë
,

682 c⁄° 
gch¨
 *
dëaû
,

683 
GtkAºowTy≥
 
¨row_ty≥
,

684 
gboﬁón
 
fûl
,

685 
göt
 
x
,

686 
göt
 
y
,

687 
göt
 
width
,

688 
göt
 
height
);

689 
	`gtk_∑öt_düm⁄d
 (
GtkStyÀ
 *
°yÀ
,

690 
GdkWödow
 *
wödow
,

691 
GtkSèãTy≥
 
°©e_ty≥
,

692 
GtkShadowTy≥
 
shadow_ty≥
,

693 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

694 
GtkWidgë
 *
widgë
,

695 c⁄° 
gch¨
 *
dëaû
,

696 
göt
 
x
,

697 
göt
 
y
,

698 
göt
 
width
,

699 
göt
 
height
);

700 
	`gtk_∑öt_box
 (
GtkStyÀ
 *
°yÀ
,

701 
GdkWödow
 *
wödow
,

702 
GtkSèãTy≥
 
°©e_ty≥
,

703 
GtkShadowTy≥
 
shadow_ty≥
,

704 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

705 
GtkWidgë
 *
widgë
,

706 c⁄° 
gch¨
 *
dëaû
,

707 
göt
 
x
,

708 
göt
 
y
,

709 
göt
 
width
,

710 
göt
 
height
);

711 
	`gtk_∑öt_Ê©_box
 (
GtkStyÀ
 *
°yÀ
,

712 
GdkWödow
 *
wödow
,

713 
GtkSèãTy≥
 
°©e_ty≥
,

714 
GtkShadowTy≥
 
shadow_ty≥
,

715 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

716 
GtkWidgë
 *
widgë
,

717 c⁄° 
gch¨
 *
dëaû
,

718 
göt
 
x
,

719 
göt
 
y
,

720 
göt
 
width
,

721 
göt
 
height
);

722 
	`gtk_∑öt_check
 (
GtkStyÀ
 *
°yÀ
,

723 
GdkWödow
 *
wödow
,

724 
GtkSèãTy≥
 
°©e_ty≥
,

725 
GtkShadowTy≥
 
shadow_ty≥
,

726 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

727 
GtkWidgë
 *
widgë
,

728 c⁄° 
gch¨
 *
dëaû
,

729 
göt
 
x
,

730 
göt
 
y
,

731 
göt
 
width
,

732 
göt
 
height
);

733 
	`gtk_∑öt_›ti⁄
 (
GtkStyÀ
 *
°yÀ
,

734 
GdkWödow
 *
wödow
,

735 
GtkSèãTy≥
 
°©e_ty≥
,

736 
GtkShadowTy≥
 
shadow_ty≥
,

737 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

738 
GtkWidgë
 *
widgë
,

739 c⁄° 
gch¨
 *
dëaû
,

740 
göt
 
x
,

741 
göt
 
y
,

742 
göt
 
width
,

743 
göt
 
height
);

744 
	`gtk_∑öt_èb
 (
GtkStyÀ
 *
°yÀ
,

745 
GdkWödow
 *
wödow
,

746 
GtkSèãTy≥
 
°©e_ty≥
,

747 
GtkShadowTy≥
 
shadow_ty≥
,

748 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

749 
GtkWidgë
 *
widgë
,

750 c⁄° 
gch¨
 *
dëaû
,

751 
göt
 
x
,

752 
göt
 
y
,

753 
göt
 
width
,

754 
göt
 
height
);

755 
	`gtk_∑öt_shadow_g≠
 (
GtkStyÀ
 *
°yÀ
,

756 
GdkWödow
 *
wödow
,

757 
GtkSèãTy≥
 
°©e_ty≥
,

758 
GtkShadowTy≥
 
shadow_ty≥
,

759 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

760 
GtkWidgë
 *
widgë
,

761 c⁄° 
gch¨
 *
dëaû
,

762 
göt
 
x
,

763 
göt
 
y
,

764 
göt
 
width
,

765 
göt
 
height
,

766 
GtkPosôi⁄Ty≥
 
g≠_side
,

767 
göt
 
g≠_x
,

768 
göt
 
g≠_width
);

769 
	`gtk_∑öt_box_g≠
 (
GtkStyÀ
 *
°yÀ
,

770 
GdkWödow
 *
wödow
,

771 
GtkSèãTy≥
 
°©e_ty≥
,

772 
GtkShadowTy≥
 
shadow_ty≥
,

773 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

774 
GtkWidgë
 *
widgë
,

775 c⁄° 
gch¨
 *
dëaû
,

776 
göt
 
x
,

777 
göt
 
y
,

778 
göt
 
width
,

779 
göt
 
height
,

780 
GtkPosôi⁄Ty≥
 
g≠_side
,

781 
göt
 
g≠_x
,

782 
göt
 
g≠_width
);

783 
	`gtk_∑öt_exãnsi⁄
 (
GtkStyÀ
 *
°yÀ
,

784 
GdkWödow
 *
wödow
,

785 
GtkSèãTy≥
 
°©e_ty≥
,

786 
GtkShadowTy≥
 
shadow_ty≥
,

787 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

788 
GtkWidgë
 *
widgë
,

789 c⁄° 
gch¨
 *
dëaû
,

790 
göt
 
x
,

791 
göt
 
y
,

792 
göt
 
width
,

793 
göt
 
height
,

794 
GtkPosôi⁄Ty≥
 
g≠_side
);

795 
	`gtk_∑öt_focus
 (
GtkStyÀ
 *
°yÀ
,

796 
GdkWödow
 *
wödow
,

797 
GtkSèãTy≥
 
°©e_ty≥
,

798 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

799 
GtkWidgë
 *
widgë
,

800 c⁄° 
gch¨
 *
dëaû
,

801 
göt
 
x
,

802 
göt
 
y
,

803 
göt
 
width
,

804 
göt
 
height
);

805 
	`gtk_∑öt_¶idî
 (
GtkStyÀ
 *
°yÀ
,

806 
GdkWödow
 *
wödow
,

807 
GtkSèãTy≥
 
°©e_ty≥
,

808 
GtkShadowTy≥
 
shadow_ty≥
,

809 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

810 
GtkWidgë
 *
widgë
,

811 c⁄° 
gch¨
 *
dëaû
,

812 
göt
 
x
,

813 
göt
 
y
,

814 
göt
 
width
,

815 
göt
 
height
,

816 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

817 
	`gtk_∑öt_h™dÀ
 (
GtkStyÀ
 *
°yÀ
,

818 
GdkWödow
 *
wödow
,

819 
GtkSèãTy≥
 
°©e_ty≥
,

820 
GtkShadowTy≥
 
shadow_ty≥
,

821 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

822 
GtkWidgë
 *
widgë
,

823 c⁄° 
gch¨
 *
dëaû
,

824 
göt
 
x
,

825 
göt
 
y
,

826 
göt
 
width
,

827 
göt
 
height
,

828 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

829 
	`gtk_∑öt_ex∑ndî
 (
GtkStyÀ
 *
°yÀ
,

830 
GdkWödow
 *
wödow
,

831 
GtkSèãTy≥
 
°©e_ty≥
,

832 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

833 
GtkWidgë
 *
widgë
,

834 c⁄° 
gch¨
 *
dëaû
,

835 
göt
 
x
,

836 
göt
 
y
,

837 
GtkEx∑ndîStyÀ
 
ex∑ndî_°yÀ
);

838 
	`gtk_∑öt_œyout
 (
GtkStyÀ
 *
°yÀ
,

839 
GdkWödow
 *
wödow
,

840 
GtkSèãTy≥
 
°©e_ty≥
,

841 
gboﬁón
 
u£_ãxt
,

842 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

843 
GtkWidgë
 *
widgë
,

844 c⁄° 
gch¨
 *
dëaû
,

845 
göt
 
x
,

846 
göt
 
y
,

847 
P™goLayout
 *
œyout
);

848 
	`gtk_∑öt_ªsize_grù
 (
GtkStyÀ
 *
°yÀ
,

849 
GdkWödow
 *
wödow
,

850 
GtkSèãTy≥
 
°©e_ty≥
,

851 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

852 
GtkWidgë
 *
widgë
,

853 c⁄° 
gch¨
 *
dëaû
,

854 
GdkWödowEdge
 
edge
,

855 
göt
 
x
,

856 
göt
 
y
,

857 
göt
 
width
,

858 
göt
 
height
);

861 
GTy≥
 
	$gtk_b‹dî_gë_ty≥
 (Ë
G_GNUC_CONST
;

862 
GtkB‹dî
 *
	$gtk_b‹dî_√w
 (Ë
G_GNUC_MALLOC
;

863 
GtkB‹dî
 *
	`gtk_b‹dî_c›y
 (c⁄° GtkB‹dî *
b‹dî_
);

864 
	`gtk_b‹dî_‰ì
 (
GtkB‹dî
 *
b‹dî_
);

866 
	`gtk_°yÀ_gë_°yÀ_¥›îty
 (
GtkStyÀ
 *
°yÀ
,

867 
GTy≥
 
widgë_ty≥
,

868 c⁄° 
gch¨
 *
¥›îty_«me
,

869 
GVÆue
 *
vÆue
);

870 
	`gtk_°yÀ_gë_vÆi°
 (
GtkStyÀ
 *
°yÀ
,

871 
GTy≥
 
widgë_ty≥
,

872 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

873 
va_li°
 
v¨_¨gs
);

874 
	$gtk_°yÀ_gë
 (
GtkStyÀ
 *
°yÀ
,

875 
GTy≥
 
widgë_ty≥
,

876 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

877 ...Ë
G_GNUC_NULL_TERMINATED
;

880 c⁄° 
GVÆue
* 
	`_gtk_°yÀ_≥ek_¥›îty_vÆue
 (
GtkStyÀ
 *
°yÀ
,

881 
GTy≥
 
widgë_ty≥
,

882 
GP¨amS≥c
 *
p•ec
,

883 
GtkRcPr›îtyP¨£r
 
∑r£r
);

885 
	`_gtk_°yÀ_öô_f‹_£âögs
 (
GtkStyÀ
 *
°yÀ
,

886 
GtkSëtögs
 *
£âögs
);

888 
	`_gtk_°yÀ_shade
 (c⁄° 
GdkCﬁ‹
 *
a
,

889 
GdkCﬁ‹
 *
b
,

890 
gdoubÀ
 
k
);

893 #i‚de‡
GTK_DISABLE_DEPRECATED


894 
	#gtk_°yÀ_≠∂y_deÁu…_pixm≠
(
s
,
gw
,
°
,
a
,
x
,
y
,
w
,
h
Ë
	`gtk_°yÀ_≠∂y_deÁu…_background
 (s,gw,1,°,a,x,y,w,h)

	)

895 
	`gtk_døw_°rög
 (
GtkStyÀ
 *
°yÀ
,

896 
GdkWödow
 *
wödow
,

897 
GtkSèãTy≥
 
°©e_ty≥
,

898 
göt
 
x
,

899 
göt
 
y
,

900 c⁄° 
gch¨
 *
°rög
);

901 
	`gtk_∑öt_°rög
 (
GtkStyÀ
 *
°yÀ
,

902 
GdkWödow
 *
wödow
,

903 
GtkSèãTy≥
 
°©e_ty≥
,

904 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

905 
GtkWidgë
 *
widgë
,

906 c⁄° 
gch¨
 *
dëaû
,

907 
göt
 
x
,

908 
göt
 
y
,

909 c⁄° 
gch¨
 *
°rög
);

912 
	`gtk_døw_ö£πi⁄_curs‹
 (
GtkWidgë
 *
widgë
,

913 
GdkDøwabÀ
 *
døwabÀ
,

914 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

915 c⁄° 
GdkRe˘™gÀ
 *
loˇti⁄
,

916 
gboﬁón
 
is_¥im¨y
,

917 
GtkTextDúe˘i⁄
 
dúe˘i⁄
,

918 
gboﬁón
 
døw_¨row
);

919 
GdkGC
 *
	`_gtk_widgë_gë_curs‹_gc
 (
GtkWidgë
 *
widgë
);

920 
	`_gtk_widgë_gë_curs‹_cﬁ‹
 (
GtkWidgë
 *
widgë
,

921 
GdkCﬁ‹
 *
cﬁ‹
);

923 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktable.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TABLE_H__


32 
	#__GTK_TABLE_H__


	)

35 
	~<gtk/gtkc⁄èöî.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_TABLE
 (
	`gtk_èbÀ_gë_ty≥
 ())

	)

41 
	#GTK_TABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TABLE
, 
GtkTabÀ
))

	)

42 
	#GTK_TABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TABLE
, 
GtkTabÀCœss
))

	)

43 
	#GTK_IS_TABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TABLE
))

	)

44 
	#GTK_IS_TABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TABLE
))

	)

45 
	#GTK_TABLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TABLE
, 
GtkTabÀCœss
))

	)

48 
_GtkTabÀ
 
	tGtkTabÀ
;

49 
_GtkTabÀCœss
 
	tGtkTabÀCœss
;

50 
_GtkTabÀChûd
 
	tGtkTabÀChûd
;

51 
_GtkTabÀRowCﬁ
 
	tGtkTabÀRowCﬁ
;

53 
	s_GtkTabÀ


55 
GtkC⁄èöî
 
	mc⁄èöî
;

57 
GLi°
 *
GSEAL
 (
chûdªn
);

58 
GtkTabÀRowCﬁ
 *
GSEAL
 (
rows
);

59 
GtkTabÀRowCﬁ
 *
GSEAL
 (
cﬁs
);

60 
guöt16
 
GSEAL
 (
ƒows
);

61 
guöt16
 
GSEAL
 (
ncﬁs
);

62 
guöt16
 
GSEAL
 (
cﬁumn_•acög
);

63 
guöt16
 
GSEAL
 (
row_•acög
);

64 
guöt
 
GSEAL
 (
homogíeous
) : 1;

67 
	s_GtkTabÀCœss


69 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

72 
	s_GtkTabÀChûd


74 
GtkWidgë
 *
	mwidgë
;

75 
guöt16
 
	mÀ·_©èch
;

76 
guöt16
 
	mright_©èch
;

77 
guöt16
 
	mt›_©èch
;

78 
guöt16
 
	mbŸtom_©èch
;

79 
guöt16
 
	mx∑ddög
;

80 
guöt16
 
	my∑ddög
;

81 
guöt
 
	mxex∑nd
 : 1;

82 
guöt
 
	myex∑nd
 : 1;

83 
guöt
 
	mxshrök
 : 1;

84 
guöt
 
	myshrök
 : 1;

85 
guöt
 
	mxfûl
 : 1;

86 
guöt
 
	myfûl
 : 1;

89 
	s_GtkTabÀRowCﬁ


91 
guöt16
 
	mªquisôi⁄
;

92 
guöt16
 
	mÆloˇti⁄
;

93 
guöt16
 
	m•acög
;

94 
guöt
 
	m√ed_ex∑nd
 : 1;

95 
guöt
 
	m√ed_shrök
 : 1;

96 
guöt
 
	mex∑nd
 : 1;

97 
guöt
 
	mshrök
 : 1;

98 
guöt
 
	mem±y
 : 1;

102 
GTy≥
 
	$gtk_èbÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

103 
GtkWidgë
* 
	`gtk_èbÀ_√w
 (
guöt
 
rows
,

104 
guöt
 
cﬁumns
,

105 
gboﬁón
 
homogíeous
);

106 
	`gtk_èbÀ_ªsize
 (
GtkTabÀ
 *
èbÀ
,

107 
guöt
 
rows
,

108 
guöt
 
cﬁumns
);

109 
	`gtk_èbÀ_©èch
 (
GtkTabÀ
 *
èbÀ
,

110 
GtkWidgë
 *
chûd
,

111 
guöt
 
À·_©èch
,

112 
guöt
 
right_©èch
,

113 
guöt
 
t›_©èch
,

114 
guöt
 
bŸtom_©èch
,

115 
GtkAâachO±i⁄s
 
x›ti⁄s
,

116 
GtkAâachO±i⁄s
 
y›ti⁄s
,

117 
guöt
 
x∑ddög
,

118 
guöt
 
y∑ddög
);

119 
	`gtk_èbÀ_©èch_deÁu…s
 (
GtkTabÀ
 *
èbÀ
,

120 
GtkWidgë
 *
widgë
,

121 
guöt
 
À·_©èch
,

122 
guöt
 
right_©èch
,

123 
guöt
 
t›_©èch
,

124 
guöt
 
bŸtom_©èch
);

125 
	`gtk_èbÀ_£t_row_•acög
 (
GtkTabÀ
 *
èbÀ
,

126 
guöt
 
row
,

127 
guöt
 
•acög
);

128 
guöt
 
	`gtk_èbÀ_gë_row_•acög
 (
GtkTabÀ
 *
èbÀ
,

129 
guöt
 
row
);

130 
	`gtk_èbÀ_£t_cﬁ_•acög
 (
GtkTabÀ
 *
èbÀ
,

131 
guöt
 
cﬁumn
,

132 
guöt
 
•acög
);

133 
guöt
 
	`gtk_èbÀ_gë_cﬁ_•acög
 (
GtkTabÀ
 *
èbÀ
,

134 
guöt
 
cﬁumn
);

135 
	`gtk_èbÀ_£t_row_•acögs
 (
GtkTabÀ
 *
èbÀ
,

136 
guöt
 
•acög
);

137 
guöt
 
	`gtk_èbÀ_gë_deÁu…_row_•acög
 (
GtkTabÀ
 *
èbÀ
);

138 
	`gtk_èbÀ_£t_cﬁ_•acögs
 (
GtkTabÀ
 *
èbÀ
,

139 
guöt
 
•acög
);

140 
guöt
 
	`gtk_èbÀ_gë_deÁu…_cﬁ_•acög
 (
GtkTabÀ
 *
èbÀ
);

141 
	`gtk_èbÀ_£t_homogíeous
 (
GtkTabÀ
 *
èbÀ
,

142 
gboﬁón
 
homogíeous
);

143 
gboﬁón
 
	`gtk_èbÀ_gë_homogíeous
 (
GtkTabÀ
 *
èbÀ
);

146 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktearoffmenuitem.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TEAROFF_MENU_ITEM_H__


32 
	#__GTK_TEAROFF_MENU_ITEM_H__


	)

35 
	~<gtk/gtkmíuôem.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_TEAROFF_MENU_ITEM
 (
	`gtk_ã¨off_míu_ôem_gë_ty≥
 ())

	)

41 
	#GTK_TEAROFF_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TEAROFF_MENU_ITEM
, 
GtkTóroffMíuIãm
))

	)

42 
	#GTK_TEAROFF_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEAROFF_MENU_ITEM
, 
GtkTóroffMíuIãmCœss
))

	)

43 
	#GTK_IS_TEAROFF_MENU_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TEAROFF_MENU_ITEM
))

	)

44 
	#GTK_IS_TEAROFF_MENU_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEAROFF_MENU_ITEM
))

	)

45 
	#GTK_TEAROFF_MENU_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEAROFF_MENU_ITEM
, 
GtkTóroffMíuIãmCœss
))

	)

48 
_GtkTóroffMíuIãm
 
	tGtkTóroffMíuIãm
;

49 
_GtkTóroffMíuIãmCœss
 
	tGtkTóroffMíuIãmCœss
;

51 
	s_GtkTóroffMíuIãm


53 
GtkMíuIãm
 
	mmíu_ôem
;

55 
guöt
 
GSEAL
 (
t‹n_off
) : 1;

58 
	s_GtkTóroffMíuIãmCœss


60 
GtkMíuIãmCœss
 
	m∑ª¡_˛ass
;

63 (*
	m_gtk_ª£rved1
) ();

64 (*
	m_gtk_ª£rved2
) ();

65 (*
	m_gtk_ª£rved3
) ();

66 (*
	m_gtk_ª£rved4
) ();

70 
GTy≥
 
	$gtk_ã¨off_míu_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
GtkWidgë
* 
	`gtk_ã¨off_míu_ôem_√w
 ();

73 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktestutils.h

21 #i‡!
deföed
 (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_TEST_UTILS_H__


26 
	#__GTK_TEST_UTILS_H__


	)

28 
G_BEGIN_DECLS


31 
gtk_ã°_öô
 (*
¨g˝
,

32 ***
¨gvp
,

34 
gtk_ã°_ªgi°î_Æl_ty≥s
 ();

35 c⁄° 
GTy≥
* 
gtk_ã°_li°_Æl_ty≥s
 (
guöt
 *
n_ty≥s
);

36 
GtkWidgë
* 
gtk_ã°_föd_widgë
 (GtkWidgë *
widgë
,

37 c⁄° 
gch¨
 *
œbñ_∑âîn
,

38 
GTy≥
 
widgë_ty≥
);

39 
GtkWidgë
* 
gtk_ã°_¸óã_widgë
 (
GTy≥
 
widgë_ty≥
,

40 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

42 
GtkWidgë
* 
gtk_ã°_¸óã_sim∂e_wödow
 (c⁄° 
gch¨
 *
wödow_tôÀ
,

43 c⁄° 
gch¨
 *
dülog_ãxt
);

44 
GtkWidgë
* 
gtk_ã°_di•œy_buâ⁄_wödow
 (c⁄° 
gch¨
 *
wödow_tôÀ
,

45 c⁄° 
gch¨
 *
dülog_ãxt
,

47 
gtk_ã°_¶idî_£t_≥rc
 (
GtkWidgë
 *
widgë
,

48 
≥r˚¡age
);

49 
gtk_ã°_¶idî_gë_vÆue
 (
GtkWidgë
 *
widgë
);

50 
gboﬁón
 
gtk_ã°_•ö_buâ⁄_˛ick
 (
GtkSpöBuâ⁄
 *
•ö√r
,

51 
guöt
 
buâ⁄
,

52 
gboﬁón
 
upw¨ds
);

53 
gboﬁón
 
gtk_ã°_widgë_˛ick
 (
GtkWidgë
 *
widgë
,

54 
guöt
 
buâ⁄
,

55 
GdkModifõrTy≥
 
modifõrs
);

56 
gboﬁón
 
gtk_ã°_widgë_£nd_key
 (
GtkWidgë
 *
widgë
,

57 
guöt
 
keyvÆ
,

58 
GdkModifõrTy≥
 
modifõrs
);

60 
gtk_ã°_ãxt_£t
 (
GtkWidgë
 *
widgë
,

61 c⁄° 
gch¨
 *
°rög
);

62 
gch¨
* 
gtk_ã°_ãxt_gë
 (
GtkWidgë
 *
widgë
);

65 
GtkWidgë
* 
gtk_ã°_föd_siblög
 (GtkWidgë *
ba£_widgë
,

66 
GTy≥
 
widgë_ty≥
);

67 
GtkWidgë
* 
gtk_ã°_föd_œbñ
 (GtkWidgë *
widgë
,

68 c⁄° 
gch¨
 *
œbñ_∑âîn
);

69 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktext.h

27 #ifde‡
GTK_ENABLE_BROKEN


29 #i‚de‡
__GTK_TEXT_H__


30 
	#__GTK_TEXT_H__


	)

33 
	~<gtk/gtkﬁdedôabÀ.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_TEXT
 (
	`gtk_ãxt_gë_ty≥
 ())

	)

39 
	#GTK_TEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TEXT
, 
GtkText
))

	)

40 
	#GTK_TEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT
, 
GtkTextCœss
))

	)

41 
	#GTK_IS_TEXT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TEXT
))

	)

42 
	#GTK_IS_TEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT
))

	)

43 
	#GTK_TEXT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT
, 
GtkTextCœss
))

	)

46 
_GtkTextF⁄t
 
	tGtkTextF⁄t
;

47 
_GtkPr›îtyM¨k
 
	tGtkPr›îtyM¨k
;

48 
_GtkText
 
	tGtkText
;

49 
_GtkTextCœss
 
	tGtkTextCœss
;

51 
	s_GtkPr›îtyM¨k


54 
GLi°
* 
	m¥›îty
;

57 
guöt
 
	moff£t
;

60 
guöt
 
	mödex
;

63 
	s_GtkText


65 
GtkOldEdôabÀ
 
	mﬁd_edôabÀ
;

67 
GdkWödow
 *
	mãxt_¨ó
;

69 
GtkAdju°mít
 *
	mhadj
;

70 
GtkAdju°mít
 *
	mvadj
;

72 
GdkGC
 *
	mgc
;

74 
GdkPixm≠
* 
	mlöe_wøp_bôm≠
;

75 
GdkPixm≠
* 
	mlöe_¨row_bôm≠
;

81 uni⁄ { 
GdkWCh¨
 *
	mwc
; 
guch¨
 *
	mch
; } 
	mãxt
;

83 
guöt
 
	mãxt_Àn
;

86 
guöt
 
	mg≠_posôi⁄
;

89 
guöt
 
	mg≠_size
;

93 
guöt
 
	mãxt_íd
;

97 
GLi°
 *
	mlöe_°¨t_ˇche
;

99 
guöt
 
	mfú°_löe_°¨t_ödex
;

101 
guöt
 
	mfú°_cut_pixñs
;

103 
guöt
 
	mfú°_⁄s¸ìn_h‹_pixñ
;

105 
guöt
 
	mfú°_⁄s¸ìn_vî_pixñ
;

111 
guöt
 
	mlöe_wøp
 : 1;

112 
guöt
 
	mw‹d_wøp
 : 1;

115 
guöt
 
	mu£_wch¨
 : 1;

118 
guöt
 
	m‰ìze_cou¡
;

122 
GLi°
 *
	mãxt_¥›îtõs
;

124 
GLi°
 *
	mãxt_¥›îtõs_íd
;

129 
GtkPr›îtyM¨k
 
	mpoöt
;

133 uni⁄ { 
GdkWCh¨
 *
	mwc
; 
guch¨
 *
	mch
; } 
	ms¸©ch_buf„r
;

134 
guöt
 
	ms¸©ch_buf„r_Àn
;

138 
göt
 
	mœ°_vî_vÆue
;

142 
göt
 
	mcurs‹_pos_x
;

143 
göt
 
	mcurs‹_pos_y
;

144 
GtkPr›îtyM¨k
 
	mcurs‹_m¨k
;

145 
GdkWCh¨
 
	mcurs‹_ch¨
;

146 
gch¨
 
	mcurs‹_ch¨_off£t
;

147 
göt
 
	mcurs‹_vútuÆ_x
;

148 
göt
 
	mcurs‹_døwn_Àvñ
;

152 
GLi°
 *
	mcuºít_löe
;

156 
GLi°
 *
	mèb_°›s
;

157 
göt
 
	mdeÁu…_èb_width
;

159 
GtkTextF⁄t
 *
	mcuºít_f⁄t
;

162 
göt
 
	mtimî
;

164 
guöt
 
	mbuâ⁄
;

165 
GdkGC
 *
	mbg_gc
;

168 
	s_GtkTextCœss


170 
GtkOldEdôabÀCœss
 
	m∑ª¡_˛ass
;

172 (*
	m£t_s¸ﬁl_adju°míts
Ë(
GtkText
 *
	mãxt
,

173 
GtkAdju°mít
 *
	mhadju°mít
,

174 
GtkAdju°mít
 *
	mvadju°mít
);

178 
GTy≥
 
	$gtk_ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

179 
GtkWidgë
* 
	`gtk_ãxt_√w
 (
GtkAdju°mít
 *
hadj
,

180 
GtkAdju°mít
 *
vadj
);

181 
	`gtk_ãxt_£t_edôabÀ
 (
GtkText
 *
ãxt
,

182 
gboﬁón
 
edôabÀ
);

183 
	`gtk_ãxt_£t_w‹d_wøp
 (
GtkText
 *
ãxt
,

184 
gboﬁón
 
w‹d_wøp
);

185 
	`gtk_ãxt_£t_löe_wøp
 (
GtkText
 *
ãxt
,

186 
gboﬁón
 
löe_wøp
);

187 
	`gtk_ãxt_£t_adju°míts
 (
GtkText
 *
ãxt
,

188 
GtkAdju°mít
 *
hadj
,

189 
GtkAdju°mít
 *
vadj
);

190 
	`gtk_ãxt_£t_poöt
 (
GtkText
 *
ãxt
,

191 
guöt
 
ödex
);

192 
guöt
 
	`gtk_ãxt_gë_poöt
 (
GtkText
 *
ãxt
);

193 
guöt
 
	`gtk_ãxt_gë_Àngth
 (
GtkText
 *
ãxt
);

194 
	`gtk_ãxt_‰ìze
 (
GtkText
 *
ãxt
);

195 
	`gtk_ãxt_thaw
 (
GtkText
 *
ãxt
);

196 
	`gtk_ãxt_ö£π
 (
GtkText
 *
ãxt
,

197 
GdkF⁄t
 *
f⁄t
,

198 c⁄° 
GdkCﬁ‹
 *
f‹e
,

199 c⁄° 
GdkCﬁ‹
 *
back
,

200 c⁄° *
ch¨s
,

201 
göt
 
Àngth
);

202 
gboﬁón
 
	`gtk_ãxt_backw¨d_dñëe
 (
GtkText
 *
ãxt
,

203 
guöt
 
nch¨s
);

204 
gboﬁón
 
	`gtk_ãxt_f‹w¨d_dñëe
 (
GtkText
 *
ãxt
,

205 
guöt
 
nch¨s
);

207 
	#GTK_TEXT_INDEX
(
t
, 
ödex
Ë((—)->
u£_wch¨
) \

208 ? ((
ödex
Ë< (
t
)->
g≠_posôi⁄
 ? (t)->
ãxt
.
wc
[index] : \

209 (
t
)->
ãxt
.
wc
[(
ödex
)+—)->
g≠_size
]) \

210 : ((
ödex
Ë< (
t
)->
g≠_posôi⁄
 ? (t)->
ãxt
.
ch
[index] : \

211 (
t
)->
ãxt
.
ch
[(
ödex
)+—)->
g≠_size
]))

	)

213 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktextbuffer.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TEXT_BUFFER_H__


32 
	#__GTK_TEXT_BUFFER_H__


	)

34 
	~<gtk/gtkwidgë.h
>

35 
	~<gtk/gtk˛ùbﬂrd.h
>

36 
	~<gtk/gtkãxâagèbÀ.h
>

37 
	~<gtk/gtkãxtôî.h
>

38 
	~<gtk/gtkãxtm¨k.h
>

39 
	~<gtk/gtkãxtchûd.h
>

41 
G_BEGIN_DECLS


56 
	mGTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS
 = - 1,

57 
	mGTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT
 = - 2,

58 
	mGTK_TEXT_BUFFER_TARGET_INFO_TEXT
 = - 3

59 } 
	tGtkTextBuf„rT¨gëInfo
;

61 
_GtkTextBTªe
 
	tGtkTextBTªe
;

63 
_GtkTextLogAârCache
 
	tGtkTextLogAârCache
;

65 
	#GTK_TYPE_TEXT_BUFFER
 (
	`gtk_ãxt_buf„r_gë_ty≥
 ())

	)

66 
	#GTK_TEXT_BUFFER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TEXT_BUFFER
, 
GtkTextBuf„r
))

	)

67 
	#GTK_TEXT_BUFFER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT_BUFFER
, 
GtkTextBuf„rCœss
))

	)

68 
	#GTK_IS_TEXT_BUFFER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TEXT_BUFFER
))

	)

69 
	#GTK_IS_TEXT_BUFFER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT_BUFFER
))

	)

70 
	#GTK_TEXT_BUFFER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT_BUFFER
, 
GtkTextBuf„rCœss
))

	)

72 
_GtkTextBuf„rCœss
 
	tGtkTextBuf„rCœss
;

74 
	s_GtkTextBuf„r


76 
GObje˘
 
	m∑ª¡_ö°™˚
;

78 
GtkTextTagTabÀ
 *
GSEAL
 (
èg_èbÀ
);

79 
GtkTextBTªe
 *
GSEAL
 (
båì
);

81 
GSLi°
 *
GSEAL
 (
˛ùbﬂrd_c⁄ã¡s_buf„rs
);

82 
GSLi°
 *
GSEAL
 (
£À˘i⁄_˛ùbﬂrds
);

84 
GtkTextLogAârCache
 *
GSEAL
 (
log_©å_ˇche
);

86 
guöt
 
GSEAL
 (
u£r_a˘i⁄_cou¡
);

89 
guöt
 
GSEAL
 (
modifõd
) : 1;

91 
guöt
 
GSEAL
 (
has_£À˘i⁄
) : 1;

94 
	s_GtkTextBuf„rCœss


96 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

98 (* 
	mö£π_ãxt
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

99 
GtkTextIãr
 *
	mpos
,

100 c⁄° 
gch¨
 *
	mãxt
,

101 
göt
 
	mÀngth
);

103 (* 
	mö£π_pixbuf
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

104 
GtkTextIãr
 *
	mpos
,

105 
GdkPixbuf
 *
	mpixbuf
);

107 (* 
	mö£π_chûd_™ch‹
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

108 
GtkTextIãr
 *
	mpos
,

109 
GtkTextChûdAnch‹
 *
	m™ch‹
);

111 (* 
	mdñëe_ønge
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

112 
GtkTextIãr
 *
	m°¨t
,

113 
GtkTextIãr
 *
	míd
);

118 (* 
	mch™ged
Ë(
GtkTextBuf„r
 *
	mbuf„r
);

122 (* 
	mmodifõd_ch™ged
Ë(
GtkTextBuf„r
 *
	mbuf„r
);

125 (* 
	mm¨k_£t
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

126 c⁄° 
GtkTextIãr
 *
	mloˇti⁄
,

127 
GtkTextM¨k
 *
	mm¨k
);

129 (* 
	mm¨k_dñëed
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

130 
GtkTextM¨k
 *
	mm¨k
);

132 (* 
	m≠∂y_èg
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

133 
GtkTextTag
 *
	mèg
,

134 c⁄° 
GtkTextIãr
 *
	m°¨t_ch¨
,

135 c⁄° 
GtkTextIãr
 *
	míd_ch¨
);

137 (* 
	mªmove_èg
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

138 
GtkTextTag
 *
	mèg
,

139 c⁄° 
GtkTextIãr
 *
	m°¨t_ch¨
,

140 c⁄° 
GtkTextIãr
 *
	míd_ch¨
);

143 (* 
	mbegö_u£r_a˘i⁄
Ë(
GtkTextBuf„r
 *
	mbuf„r
);

144 (* 
	míd_u£r_a˘i⁄
Ë(
GtkTextBuf„r
 *
	mbuf„r
);

146 (* 
	m∑°e_d⁄e
Ë(
GtkTextBuf„r
 *
	mbuf„r
,

147 
GtkClùbﬂrd
 *
	m˛ùbﬂrd
);

150 (*
	m_gtk_ª£rved1
) ();

151 (*
	m_gtk_ª£rved2
) ();

152 (*
	m_gtk_ª£rved3
) ();

153 (*
	m_gtk_ª£rved4
) ();

154 (*
	m_gtk_ª£rved5
) ();

157 
GTy≥
 
	$gtk_ãxt_buf„r_gë_ty≥
 (Ë
G_GNUC_CONST
;

162 
GtkTextBuf„r
 *
	`gtk_ãxt_buf„r_√w
 (
GtkTextTagTabÀ
 *
èbÀ
);

163 
göt
 
	`gtk_ãxt_buf„r_gë_löe_cou¡
 (
GtkTextBuf„r
 *
buf„r
);

164 
göt
 
	`gtk_ãxt_buf„r_gë_ch¨_cou¡
 (
GtkTextBuf„r
 *
buf„r
);

167 
GtkTextTagTabÀ
* 
	`gtk_ãxt_buf„r_gë_èg_èbÀ
 (
GtkTextBuf„r
 *
buf„r
);

170 
	`gtk_ãxt_buf„r_£t_ãxt
 (
GtkTextBuf„r
 *
buf„r
,

171 c⁄° 
gch¨
 *
ãxt
,

172 
göt
 
Àn
);

175 
	`gtk_ãxt_buf„r_ö£π
 (
GtkTextBuf„r
 *
buf„r
,

176 
GtkTextIãr
 *
ôî
,

177 c⁄° 
gch¨
 *
ãxt
,

178 
göt
 
Àn
);

179 
	`gtk_ãxt_buf„r_ö£π_©_curs‹
 (
GtkTextBuf„r
 *
buf„r
,

180 c⁄° 
gch¨
 *
ãxt
,

181 
göt
 
Àn
);

183 
gboﬁón
 
	`gtk_ãxt_buf„r_ö£π_öãø˘ive
 (
GtkTextBuf„r
 *
buf„r
,

184 
GtkTextIãr
 *
ôî
,

185 c⁄° 
gch¨
 *
ãxt
,

186 
göt
 
Àn
,

187 
gboﬁón
 
deÁu…_edôabÀ
);

188 
gboﬁón
 
	`gtk_ãxt_buf„r_ö£π_öãø˘ive_©_curs‹
 (
GtkTextBuf„r
 *
buf„r
,

189 c⁄° 
gch¨
 *
ãxt
,

190 
göt
 
Àn
,

191 
gboﬁón
 
deÁu…_edôabÀ
);

193 
	`gtk_ãxt_buf„r_ö£π_ønge
 (
GtkTextBuf„r
 *
buf„r
,

194 
GtkTextIãr
 *
ôî
,

195 c⁄° 
GtkTextIãr
 *
°¨t
,

196 c⁄° 
GtkTextIãr
 *
íd
);

197 
gboﬁón
 
	`gtk_ãxt_buf„r_ö£π_ønge_öãø˘ive
 (
GtkTextBuf„r
 *
buf„r
,

198 
GtkTextIãr
 *
ôî
,

199 c⁄° 
GtkTextIãr
 *
°¨t
,

200 c⁄° 
GtkTextIãr
 *
íd
,

201 
gboﬁón
 
deÁu…_edôabÀ
);

203 
	$gtk_ãxt_buf„r_ö£π_wôh_ègs
 (
GtkTextBuf„r
 *
buf„r
,

204 
GtkTextIãr
 *
ôî
,

205 c⁄° 
gch¨
 *
ãxt
,

206 
göt
 
Àn
,

207 
GtkTextTag
 *
fú°_èg
,

208 ...Ë
G_GNUC_NULL_TERMINATED
;

210 
	$gtk_ãxt_buf„r_ö£π_wôh_ègs_by_«me
 (
GtkTextBuf„r
 *
buf„r
,

211 
GtkTextIãr
 *
ôî
,

212 c⁄° 
gch¨
 *
ãxt
,

213 
göt
 
Àn
,

214 c⁄° 
gch¨
 *
fú°_èg_«me
,

215 ...Ë
G_GNUC_NULL_TERMINATED
;

218 
	`gtk_ãxt_buf„r_dñëe
 (
GtkTextBuf„r
 *
buf„r
,

219 
GtkTextIãr
 *
°¨t
,

220 
GtkTextIãr
 *
íd
);

221 
gboﬁón
 
	`gtk_ãxt_buf„r_dñëe_öãø˘ive
 (
GtkTextBuf„r
 *
buf„r
,

222 
GtkTextIãr
 *
°¨t_ôî
,

223 
GtkTextIãr
 *
íd_ôî
,

224 
gboﬁón
 
deÁu…_edôabÀ
);

225 
gboﬁón
 
	`gtk_ãxt_buf„r_back•a˚
 (
GtkTextBuf„r
 *
buf„r
,

226 
GtkTextIãr
 *
ôî
,

227 
gboﬁón
 
öãø˘ive
,

228 
gboﬁón
 
deÁu…_edôabÀ
);

231 
gch¨
 *
	`gtk_ãxt_buf„r_gë_ãxt
 (
GtkTextBuf„r
 *
buf„r
,

232 c⁄° 
GtkTextIãr
 *
°¨t
,

233 c⁄° 
GtkTextIãr
 *
íd
,

234 
gboﬁón
 
ö˛ude_hiddí_ch¨s
);

236 
gch¨
 *
	`gtk_ãxt_buf„r_gë_¶i˚
 (
GtkTextBuf„r
 *
buf„r
,

237 c⁄° 
GtkTextIãr
 *
°¨t
,

238 c⁄° 
GtkTextIãr
 *
íd
,

239 
gboﬁón
 
ö˛ude_hiddí_ch¨s
);

242 
	`gtk_ãxt_buf„r_ö£π_pixbuf
 (
GtkTextBuf„r
 *
buf„r
,

243 
GtkTextIãr
 *
ôî
,

244 
GdkPixbuf
 *
pixbuf
);

247 
	`gtk_ãxt_buf„r_ö£π_chûd_™ch‹
 (
GtkTextBuf„r
 *
buf„r
,

248 
GtkTextIãr
 *
ôî
,

249 
GtkTextChûdAnch‹
 *
™ch‹
);

252 
GtkTextChûdAnch‹
 *
	`gtk_ãxt_buf„r_¸óã_chûd_™ch‹
 (
GtkTextBuf„r
 *
buf„r
,

253 
GtkTextIãr
 *
ôî
);

256 
	`gtk_ãxt_buf„r_add_m¨k
 (
GtkTextBuf„r
 *
buf„r
,

257 
GtkTextM¨k
 *
m¨k
,

258 c⁄° 
GtkTextIãr
 *
whîe
);

259 
GtkTextM¨k
 *
	`gtk_ãxt_buf„r_¸óã_m¨k
 (
GtkTextBuf„r
 *
buf„r
,

260 c⁄° 
gch¨
 *
m¨k_«me
,

261 c⁄° 
GtkTextIãr
 *
whîe
,

262 
gboﬁón
 
À·_gøvôy
);

263 
	`gtk_ãxt_buf„r_move_m¨k
 (
GtkTextBuf„r
 *
buf„r
,

264 
GtkTextM¨k
 *
m¨k
,

265 c⁄° 
GtkTextIãr
 *
whîe
);

266 
	`gtk_ãxt_buf„r_dñëe_m¨k
 (
GtkTextBuf„r
 *
buf„r
,

267 
GtkTextM¨k
 *
m¨k
);

268 
GtkTextM¨k
* 
	`gtk_ãxt_buf„r_gë_m¨k
 (
GtkTextBuf„r
 *
buf„r
,

269 c⁄° 
gch¨
 *
«me
);

271 
	`gtk_ãxt_buf„r_move_m¨k_by_«me
 (
GtkTextBuf„r
 *
buf„r
,

272 c⁄° 
gch¨
 *
«me
,

273 c⁄° 
GtkTextIãr
 *
whîe
);

274 
	`gtk_ãxt_buf„r_dñëe_m¨k_by_«me
 (
GtkTextBuf„r
 *
buf„r
,

275 c⁄° 
gch¨
 *
«me
);

277 
GtkTextM¨k
* 
	`gtk_ãxt_buf„r_gë_ö£π
 (
GtkTextBuf„r
 *
buf„r
);

278 
GtkTextM¨k
* 
	`gtk_ãxt_buf„r_gë_£À˘i⁄_bound
 (
GtkTextBuf„r
 *
buf„r
);

281 
	`gtk_ãxt_buf„r_∂a˚_curs‹
 (
GtkTextBuf„r
 *
buf„r
,

282 c⁄° 
GtkTextIãr
 *
whîe
);

283 
	`gtk_ãxt_buf„r_£À˘_ønge
 (
GtkTextBuf„r
 *
buf„r
,

284 c⁄° 
GtkTextIãr
 *
ös
,

285 c⁄° 
GtkTextIãr
 *
bound
);

290 
	`gtk_ãxt_buf„r_≠∂y_èg
 (
GtkTextBuf„r
 *
buf„r
,

291 
GtkTextTag
 *
èg
,

292 c⁄° 
GtkTextIãr
 *
°¨t
,

293 c⁄° 
GtkTextIãr
 *
íd
);

294 
	`gtk_ãxt_buf„r_ªmove_èg
 (
GtkTextBuf„r
 *
buf„r
,

295 
GtkTextTag
 *
èg
,

296 c⁄° 
GtkTextIãr
 *
°¨t
,

297 c⁄° 
GtkTextIãr
 *
íd
);

298 
	`gtk_ãxt_buf„r_≠∂y_èg_by_«me
 (
GtkTextBuf„r
 *
buf„r
,

299 c⁄° 
gch¨
 *
«me
,

300 c⁄° 
GtkTextIãr
 *
°¨t
,

301 c⁄° 
GtkTextIãr
 *
íd
);

302 
	`gtk_ãxt_buf„r_ªmove_èg_by_«me
 (
GtkTextBuf„r
 *
buf„r
,

303 c⁄° 
gch¨
 *
«me
,

304 c⁄° 
GtkTextIãr
 *
°¨t
,

305 c⁄° 
GtkTextIãr
 *
íd
);

306 
	`gtk_ãxt_buf„r_ªmove_Æl_ègs
 (
GtkTextBuf„r
 *
buf„r
,

307 c⁄° 
GtkTextIãr
 *
°¨t
,

308 c⁄° 
GtkTextIãr
 *
íd
);

314 
GtkTextTag
 *
	`gtk_ãxt_buf„r_¸óã_èg
 (
GtkTextBuf„r
 *
buf„r
,

315 c⁄° 
gch¨
 *
èg_«me
,

316 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

322 
	`gtk_ãxt_buf„r_gë_ôî_©_löe_off£t
 (
GtkTextBuf„r
 *
buf„r
,

323 
GtkTextIãr
 *
ôî
,

324 
göt
 
löe_numbî
,

325 
göt
 
ch¨_off£t
);

326 
	`gtk_ãxt_buf„r_gë_ôî_©_löe_ödex
 (
GtkTextBuf„r
 *
buf„r
,

327 
GtkTextIãr
 *
ôî
,

328 
göt
 
löe_numbî
,

329 
göt
 
byã_ödex
);

330 
	`gtk_ãxt_buf„r_gë_ôî_©_off£t
 (
GtkTextBuf„r
 *
buf„r
,

331 
GtkTextIãr
 *
ôî
,

332 
göt
 
ch¨_off£t
);

333 
	`gtk_ãxt_buf„r_gë_ôî_©_löe
 (
GtkTextBuf„r
 *
buf„r
,

334 
GtkTextIãr
 *
ôî
,

335 
göt
 
löe_numbî
);

336 
	`gtk_ãxt_buf„r_gë_°¨t_ôî
 (
GtkTextBuf„r
 *
buf„r
,

337 
GtkTextIãr
 *
ôî
);

338 
	`gtk_ãxt_buf„r_gë_íd_ôî
 (
GtkTextBuf„r
 *
buf„r
,

339 
GtkTextIãr
 *
ôî
);

340 
	`gtk_ãxt_buf„r_gë_bounds
 (
GtkTextBuf„r
 *
buf„r
,

341 
GtkTextIãr
 *
°¨t
,

342 
GtkTextIãr
 *
íd
);

343 
	`gtk_ãxt_buf„r_gë_ôî_©_m¨k
 (
GtkTextBuf„r
 *
buf„r
,

344 
GtkTextIãr
 *
ôî
,

345 
GtkTextM¨k
 *
m¨k
);

347 
	`gtk_ãxt_buf„r_gë_ôî_©_chûd_™ch‹
 (
GtkTextBuf„r
 *
buf„r
,

348 
GtkTextIãr
 *
ôî
,

349 
GtkTextChûdAnch‹
 *
™ch‹
);

360 
gboﬁón
 
	`gtk_ãxt_buf„r_gë_modifõd
 (
GtkTextBuf„r
 *
buf„r
);

361 
	`gtk_ãxt_buf„r_£t_modifõd
 (
GtkTextBuf„r
 *
buf„r
,

362 
gboﬁón
 
£âög
);

364 
gboﬁón
 
	`gtk_ãxt_buf„r_gë_has_£À˘i⁄
 (
GtkTextBuf„r
 *
buf„r
);

366 
	`gtk_ãxt_buf„r_add_£À˘i⁄_˛ùbﬂrd
 (
GtkTextBuf„r
 *
buf„r
,

367 
GtkClùbﬂrd
 *
˛ùbﬂrd
);

368 
	`gtk_ãxt_buf„r_ªmove_£À˘i⁄_˛ùbﬂrd
 (
GtkTextBuf„r
 *
buf„r
,

369 
GtkClùbﬂrd
 *
˛ùbﬂrd
);

371 
	`gtk_ãxt_buf„r_cut_˛ùbﬂrd
 (
GtkTextBuf„r
 *
buf„r
,

372 
GtkClùbﬂrd
 *
˛ùbﬂrd
,

373 
gboﬁón
 
deÁu…_edôabÀ
);

374 
	`gtk_ãxt_buf„r_c›y_˛ùbﬂrd
 (
GtkTextBuf„r
 *
buf„r
,

375 
GtkClùbﬂrd
 *
˛ùbﬂrd
);

376 
	`gtk_ãxt_buf„r_∑°e_˛ùbﬂrd
 (
GtkTextBuf„r
 *
buf„r
,

377 
GtkClùbﬂrd
 *
˛ùbﬂrd
,

378 
GtkTextIãr
 *
ovîride_loˇti⁄
,

379 
gboﬁón
 
deÁu…_edôabÀ
);

381 
gboﬁón
 
	`gtk_ãxt_buf„r_gë_£À˘i⁄_bounds
 (
GtkTextBuf„r
 *
buf„r
,

382 
GtkTextIãr
 *
°¨t
,

383 
GtkTextIãr
 *
íd
);

384 
gboﬁón
 
	`gtk_ãxt_buf„r_dñëe_£À˘i⁄
 (
GtkTextBuf„r
 *
buf„r
,

385 
gboﬁón
 
öãø˘ive
,

386 
gboﬁón
 
deÁu…_edôabÀ
);

389 
	`gtk_ãxt_buf„r_begö_u£r_a˘i⁄
 (
GtkTextBuf„r
 *
buf„r
);

390 
	`gtk_ãxt_buf„r_íd_u£r_a˘i⁄
 (
GtkTextBuf„r
 *
buf„r
);

392 
GtkT¨gëLi°
 * 
	`gtk_ãxt_buf„r_gë_c›y_èrgë_li°
 (
GtkTextBuf„r
 *
buf„r
);

393 
GtkT¨gëLi°
 * 
	`gtk_ãxt_buf„r_gë_∑°e_èrgë_li°
 (
GtkTextBuf„r
 *
buf„r
);

396 
	`_gtk_ãxt_buf„r_•ew
 (
GtkTextBuf„r
 *
buf„r
);

398 
GtkTextBTªe
* 
	`_gtk_ãxt_buf„r_gë_båì
 (
GtkTextBuf„r
 *
buf„r
);

400 c⁄° 
P™goLogAâr
* 
	`_gtk_ãxt_buf„r_gë_löe_log_©ås
 (
GtkTextBuf„r
 *
buf„r
,

401 c⁄° 
GtkTextIãr
 *
™ywhîe_ö_löe
,

402 
göt
 *
ch¨_Àn
);

404 
	`_gtk_ãxt_buf„r_nŸify_wûl_ªmove_èg
 (
GtkTextBuf„r
 *
buf„r
,

405 
GtkTextTag
 *
èg
);

407 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_TEXT_BUFFER_RICH_TEXT_H__


27 
	#__GTK_TEXT_BUFFER_RICH_TEXT_H__


	)

29 
	~<gtk/gtkãxtbuf„r.h
>

31 
G_BEGIN_DECLS


33 
	gguöt8
 * (* 
	tGtkTextBuf„rSîülizeFunc
Ë(
	tGtkTextBuf„r
 *
	tªgi°î_buf„r
,

34 
	tGtkTextBuf„r
 *
	tc⁄ã¡_buf„r
,

35 c⁄° 
	tGtkTextIãr
 *
	t°¨t
,

36 c⁄° 
	tGtkTextIãr
 *
	tíd
,

37 
	tgsize
 *
	tÀngth
,

38 
	tgpoöãr
 
	tu£r_d©a
);

39 
	$gboﬁón
 (* 
	tGtkTextBuf„rDe£rülizeFunc
Ë(
	tGtkTextBuf„r
 *
	tªgi°î_buf„r
,

40 
	tGtkTextBuf„r
 *
	tc⁄ã¡_buf„r
,

41 
	tGtkTextIãr
 *
	tôî
,

42 c⁄° 
	tguöt8
 *
	td©a
,

43 
	tgsize
 
	tÀngth
,

44 
	tgboﬁón
 
	t¸óã_ègs
,

45 
	tgpoöãr
 
	tu£r_d©a
,

46 
	tGEº‹
 **
	tîr‹
);

48 
GdkAtom
 
	`gtk_ãxt_buf„r_ªgi°î_£rülize_f‹m©
 (
GtkTextBuf„r
 *
buf„r
,

49 c⁄° 
gch¨
 *
mime_ty≥
,

50 
GtkTextBuf„rSîülizeFunc
 
fun˘i⁄
,

51 
gpoöãr
 
u£r_d©a
,

52 
GDe°royNŸify
 
u£r_d©a_de°roy
);

53 
GdkAtom
 
	`gtk_ãxt_buf„r_ªgi°î_£rülize_èg£t
 (
GtkTextBuf„r
 *
buf„r
,

54 c⁄° 
gch¨
 *
èg£t_«me
);

56 
GdkAtom
 
	`gtk_ãxt_buf„r_ªgi°î_de£rülize_f‹m©
 (
GtkTextBuf„r
 *
buf„r
,

57 c⁄° 
gch¨
 *
mime_ty≥
,

58 
GtkTextBuf„rDe£rülizeFunc
 
fun˘i⁄
,

59 
gpoöãr
 
u£r_d©a
,

60 
GDe°royNŸify
 
u£r_d©a_de°roy
);

61 
GdkAtom
 
	`gtk_ãxt_buf„r_ªgi°î_de£rülize_èg£t
 (
GtkTextBuf„r
 *
buf„r
,

62 c⁄° 
gch¨
 *
èg£t_«me
);

64 
	`gtk_ãxt_buf„r_uƒegi°î_£rülize_f‹m©
 (
GtkTextBuf„r
 *
buf„r
,

65 
GdkAtom
 
f‹m©
);

66 
	`gtk_ãxt_buf„r_uƒegi°î_de£rülize_f‹m©
 (
GtkTextBuf„r
 *
buf„r
,

67 
GdkAtom
 
f‹m©
);

69 
	`gtk_ãxt_buf„r_de£rülize_£t_ˇn_¸óã_ègs
 (
GtkTextBuf„r
 *
buf„r
,

70 
GdkAtom
 
f‹m©
,

71 
gboﬁón
 
ˇn_¸óã_ègs
);

72 
gboﬁón
 
	`gtk_ãxt_buf„r_de£rülize_gë_ˇn_¸óã_ègs
 (
GtkTextBuf„r
 *
buf„r
,

73 
GdkAtom
 
f‹m©
);

75 
GdkAtom
 * 
	`gtk_ãxt_buf„r_gë_£rülize_f‹m©s
 (
GtkTextBuf„r
 *
buf„r
,

76 
göt
 *
n_f‹m©s
);

77 
GdkAtom
 * 
	`gtk_ãxt_buf„r_gë_de£rülize_f‹m©s
 (
GtkTextBuf„r
 *
buf„r
,

78 
göt
 *
n_f‹m©s
);

80 
guöt8
 * 
	`gtk_ãxt_buf„r_£rülize
 (
GtkTextBuf„r
 *
ªgi°î_buf„r
,

81 
GtkTextBuf„r
 *
c⁄ã¡_buf„r
,

82 
GdkAtom
 
f‹m©
,

83 c⁄° 
GtkTextIãr
 *
°¨t
,

84 c⁄° 
GtkTextIãr
 *
íd
,

85 
gsize
 *
Àngth
);

86 
gboﬁón
 
	`gtk_ãxt_buf„r_de£rülize
 (
GtkTextBuf„r
 *
ªgi°î_buf„r
,

87 
GtkTextBuf„r
 *
c⁄ã¡_buf„r
,

88 
GdkAtom
 
f‹m©
,

89 
GtkTextIãr
 *
ôî
,

90 c⁄° 
guöt8
 *
d©a
,

91 
gsize
 
Àngth
,

92 
GEº‹
 **
îr‹
);

94 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktextchild.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TEXT_CHILD_H__


32 
	#__GTK_TEXT_CHILD_H__


	)

34 
	~<gdkc⁄fig.h
>

35 
	~<glib-obje˘.h
>

37 
G_BEGIN_DECLS


45 
_GtkTextChûdAnch‹
 
	tGtkTextChûdAnch‹
;

46 
_GtkTextChûdAnch‹Cœss
 
	tGtkTextChûdAnch‹Cœss
;

48 
	#GTK_TYPE_TEXT_CHILD_ANCHOR
 (
	`gtk_ãxt_chûd_™ch‹_gë_ty≥
 ())

	)

49 
	#GTK_TEXT_CHILD_ANCHOR
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_TEXT_CHILD_ANCHOR
, 
GtkTextChûdAnch‹
))

	)

50 
	#GTK_TEXT_CHILD_ANCHOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT_CHILD_ANCHOR
, 
GtkTextChûdAnch‹Cœss
))

	)

51 
	#GTK_IS_TEXT_CHILD_ANCHOR
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_TEXT_CHILD_ANCHOR
))

	)

52 
	#GTK_IS_TEXT_CHILD_ANCHOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT_CHILD_ANCHOR
))

	)

53 
	#GTK_TEXT_CHILD_ANCHOR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT_CHILD_ANCHOR
, 
GtkTextChûdAnch‹Cœss
))

	)

55 
	s_GtkTextChûdAnch‹


57 
GObje˘
 
	m∑ª¡_ö°™˚
;

59 
gpoöãr
 
GSEAL
 (
£gmít
);

62 
	s_GtkTextChûdAnch‹Cœss


64 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

67 (*
	m_gtk_ª£rved1
) ();

68 (*
	m_gtk_ª£rved2
) ();

69 (*
	m_gtk_ª£rved3
) ();

70 (*
	m_gtk_ª£rved4
) ();

73 
GTy≥
 
	$gtk_ãxt_chûd_™ch‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
GtkTextChûdAnch‹
* 
	`gtk_ãxt_chûd_™ch‹_√w
 ();

77 
GLi°
* 
	`gtk_ãxt_chûd_™ch‹_gë_widgës
 (
GtkTextChûdAnch‹
 *
™ch‹
);

78 
gboﬁón
 
	`gtk_ãxt_chûd_™ch‹_gë_dñëed
 (
GtkTextChûdAnch‹
 *
™ch‹
);

80 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktextiter.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TEXT_ITER_H__


32 
	#__GTK_TEXT_ITER_H__


	)

34 
	~<gtk/gtkãxâag.h
>

35 
	~<gtk/gtkãxtchûd.h
>

37 
G_BEGIN_DECLS


40 
	mGTK_TEXT_SEARCH_VISIBLE_ONLY
 = 1 << 0,

41 
	mGTK_TEXT_SEARCH_TEXT_ONLY
 = 1 << 1

43 } 
	tGtkTextSórchFœgs
;

51 
_GtkTextBuf„r
 
	tGtkTextBuf„r
;

53 
	#GTK_TYPE_TEXT_ITER
 (
	`gtk_ãxt_ôî_gë_ty≥
 ())

	)

55 
	s_GtkTextIãr
 {

61 
gpoöãr
 
	mdummy1
;

62 
gpoöãr
 
	mdummy2
;

63 
göt
 
	mdummy3
;

64 
göt
 
	mdummy4
;

65 
göt
 
	mdummy5
;

66 
göt
 
	mdummy6
;

67 
göt
 
	mdummy7
;

68 
göt
 
	mdummy8
;

69 
gpoöãr
 
	mdummy9
;

70 
gpoöãr
 
	mdummy10
;

71 
göt
 
	mdummy11
;

72 
göt
 
	mdummy12
;

74 
göt
 
	mdummy13
;

75 
gpoöãr
 
	mdummy14
;

81 
GtkTextBuf„r
 *
gtk_ãxt_ôî_gë_buf„r
 (c⁄° 
GtkTextIãr
 *
ôî
);

87 
GtkTextIãr
 *
gtk_ãxt_ôî_c›y
 (c⁄° GtkTextIã∏*
ôî
);

88 
gtk_ãxt_ôî_‰ì
 (
GtkTextIãr
 *
ôî
);

90 
GTy≥
 
	$gtk_ãxt_ôî_gë_ty≥
 (Ë
G_GNUC_CONST
;

96 
göt
 
	`gtk_ãxt_ôî_gë_off£t
 (c⁄° 
GtkTextIãr
 *
ôî
);

97 
göt
 
	`gtk_ãxt_ôî_gë_löe
 (c⁄° 
GtkTextIãr
 *
ôî
);

98 
göt
 
	`gtk_ãxt_ôî_gë_löe_off£t
 (c⁄° 
GtkTextIãr
 *
ôî
);

99 
göt
 
	`gtk_ãxt_ôî_gë_löe_ödex
 (c⁄° 
GtkTextIãr
 *
ôî
);

101 
göt
 
	`gtk_ãxt_ôî_gë_visibÀ_löe_off£t
 (c⁄° 
GtkTextIãr
 *
ôî
);

102 
göt
 
	`gtk_ãxt_ôî_gë_visibÀ_löe_ödex
 (c⁄° 
GtkTextIãr
 *
ôî
);

108 
gunich¨
 
	`gtk_ãxt_ôî_gë_ch¨
 (c⁄° 
GtkTextIãr
 *
ôî
);

113 
gch¨
 *
	`gtk_ãxt_ôî_gë_¶i˚
 (c⁄° 
GtkTextIãr
 *
°¨t
,

114 c⁄° 
GtkTextIãr
 *
íd
);

117 
gch¨
 *
	`gtk_ãxt_ôî_gë_ãxt
 (c⁄° 
GtkTextIãr
 *
°¨t
,

118 c⁄° 
GtkTextIãr
 *
íd
);

120 
gch¨
 *
	`gtk_ãxt_ôî_gë_visibÀ_¶i˚
 (c⁄° 
GtkTextIãr
 *
°¨t
,

121 c⁄° 
GtkTextIãr
 *
íd
);

122 
gch¨
 *
	`gtk_ãxt_ôî_gë_visibÀ_ãxt
 (c⁄° 
GtkTextIãr
 *
°¨t
,

123 c⁄° 
GtkTextIãr
 *
íd
);

125 
GdkPixbuf
* 
	`gtk_ãxt_ôî_gë_pixbuf
 (c⁄° 
GtkTextIãr
 *
ôî
);

126 
GSLi°
 * 
	`gtk_ãxt_ôî_gë_m¨ks
 (c⁄° 
GtkTextIãr
 *
ôî
);

128 
GtkTextChûdAnch‹
* 
	`gtk_ãxt_ôî_gë_chûd_™ch‹
 (c⁄° 
GtkTextIãr
 *
ôî
);

133 
GSLi°
 *
	`gtk_ãxt_ôî_gë_toggÀd_ègs
 (c⁄° 
GtkTextIãr
 *
ôî
,

134 
gboﬁón
 
toggÀd_⁄
);

136 
gboﬁón
 
	`gtk_ãxt_ôî_begös_èg
 (c⁄° 
GtkTextIãr
 *
ôî
,

137 
GtkTextTag
 *
èg
);

139 
gboﬁón
 
	`gtk_ãxt_ôî_íds_èg
 (c⁄° 
GtkTextIãr
 *
ôî
,

140 
GtkTextTag
 *
èg
);

142 
gboﬁón
 
	`gtk_ãxt_ôî_toggÀs_èg
 (c⁄° 
GtkTextIãr
 *
ôî
,

143 
GtkTextTag
 *
èg
);

145 
gboﬁón
 
	`gtk_ãxt_ôî_has_èg
 (c⁄° 
GtkTextIãr
 *
ôî
,

146 
GtkTextTag
 *
èg
);

147 
GSLi°
 *
	`gtk_ãxt_ôî_gë_ègs
 (c⁄° 
GtkTextIãr
 *
ôî
);

149 
gboﬁón
 
	`gtk_ãxt_ôî_edôabÀ
 (c⁄° 
GtkTextIãr
 *
ôî
,

150 
gboﬁón
 
deÁu…_£âög
);

151 
gboﬁón
 
	`gtk_ãxt_ôî_ˇn_ö£π
 (c⁄° 
GtkTextIãr
 *
ôî
,

152 
gboﬁón
 
deÁu…_edôabûôy
);

154 
gboﬁón
 
	`gtk_ãxt_ôî_°¨ts_w‹d
 (c⁄° 
GtkTextIãr
 *
ôî
);

155 
gboﬁón
 
	`gtk_ãxt_ôî_íds_w‹d
 (c⁄° 
GtkTextIãr
 *
ôî
);

156 
gboﬁón
 
	`gtk_ãxt_ôî_öside_w‹d
 (c⁄° 
GtkTextIãr
 *
ôî
);

157 
gboﬁón
 
	`gtk_ãxt_ôî_°¨ts_£¡í˚
 (c⁄° 
GtkTextIãr
 *
ôî
);

158 
gboﬁón
 
	`gtk_ãxt_ôî_íds_£¡í˚
 (c⁄° 
GtkTextIãr
 *
ôî
);

159 
gboﬁón
 
	`gtk_ãxt_ôî_öside_£¡í˚
 (c⁄° 
GtkTextIãr
 *
ôî
);

160 
gboﬁón
 
	`gtk_ãxt_ôî_°¨ts_löe
 (c⁄° 
GtkTextIãr
 *
ôî
);

161 
gboﬁón
 
	`gtk_ãxt_ôî_íds_löe
 (c⁄° 
GtkTextIãr
 *
ôî
);

162 
gboﬁón
 
	`gtk_ãxt_ôî_is_curs‹_posôi⁄
 (c⁄° 
GtkTextIãr
 *
ôî
);

164 
göt
 
	`gtk_ãxt_ôî_gë_ch¨s_ö_löe
 (c⁄° 
GtkTextIãr
 *
ôî
);

165 
göt
 
	`gtk_ãxt_ôî_gë_byãs_ö_löe
 (c⁄° 
GtkTextIãr
 *
ôî
);

167 
gboﬁón
 
	`gtk_ãxt_ôî_gë_©åibuãs
 (c⁄° 
GtkTextIãr
 *
ôî
,

168 
GtkTextAâribuãs
 *
vÆues
);

169 
P™goL™guage
* 
	`gtk_ãxt_ôî_gë_œnguage
 (c⁄° 
GtkTextIãr
 *
ôî
);

170 
gboﬁón
 
	`gtk_ãxt_ôî_is_íd
 (c⁄° 
GtkTextIãr
 *
ôî
);

171 
gboﬁón
 
	`gtk_ãxt_ôî_is_°¨t
 (c⁄° 
GtkTextIãr
 *
ôî
);

177 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_ch¨
 (
GtkTextIãr
 *
ôî
);

178 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_ch¨
 (
GtkTextIãr
 *
ôî
);

179 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_ch¨s
 (
GtkTextIãr
 *
ôî
,

180 
göt
 
cou¡
);

181 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_ch¨s
 (
GtkTextIãr
 *
ôî
,

182 
göt
 
cou¡
);

183 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_löe
 (
GtkTextIãr
 *
ôî
);

184 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_löe
 (
GtkTextIãr
 *
ôî
);

185 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_löes
 (
GtkTextIãr
 *
ôî
,

186 
göt
 
cou¡
);

187 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_löes
 (
GtkTextIãr
 *
ôî
,

188 
göt
 
cou¡
);

189 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_w‹d_íd
 (
GtkTextIãr
 *
ôî
);

190 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_w‹d_°¨t
 (
GtkTextIãr
 *
ôî
);

191 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_w‹d_íds
 (
GtkTextIãr
 *
ôî
,

192 
göt
 
cou¡
);

193 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_w‹d_°¨ts
 (
GtkTextIãr
 *
ôî
,

194 
göt
 
cou¡
);

196 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_visibÀ_löe
 (
GtkTextIãr
 *
ôî
);

197 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_visibÀ_löe
 (
GtkTextIãr
 *
ôî
);

198 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_visibÀ_löes
 (
GtkTextIãr
 *
ôî
,

199 
göt
 
cou¡
);

200 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_visibÀ_löes
 (
GtkTextIãr
 *
ôî
,

201 
göt
 
cou¡
);

203 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_visibÀ_w‹d_íd
 (
GtkTextIãr
 *
ôî
);

204 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_visibÀ_w‹d_°¨t
 (
GtkTextIãr
 *
ôî
);

205 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_visibÀ_w‹d_íds
 (
GtkTextIãr
 *
ôî
,

206 
göt
 
cou¡
);

207 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_visibÀ_w‹d_°¨ts
 (
GtkTextIãr
 *
ôî
,

208 
göt
 
cou¡
);

210 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_£¡í˚_íd
 (
GtkTextIãr
 *
ôî
);

211 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_£¡í˚_°¨t
 (
GtkTextIãr
 *
ôî
);

212 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_£¡í˚_íds
 (
GtkTextIãr
 *
ôî
,

213 
göt
 
cou¡
);

214 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_£¡í˚_°¨ts
 (
GtkTextIãr
 *
ôî
,

215 
göt
 
cou¡
);

221 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_curs‹_posôi⁄
 (
GtkTextIãr
 *
ôî
);

222 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_curs‹_posôi⁄
 (
GtkTextIãr
 *
ôî
);

223 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_curs‹_posôi⁄s
 (
GtkTextIãr
 *
ôî
,

224 
göt
 
cou¡
);

225 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_curs‹_posôi⁄s
 (
GtkTextIãr
 *
ôî
,

226 
göt
 
cou¡
);

228 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_visibÀ_curs‹_posôi⁄
 (
GtkTextIãr
 *
ôî
);

229 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_visibÀ_curs‹_posôi⁄
 (
GtkTextIãr
 *
ôî
);

230 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_visibÀ_curs‹_posôi⁄s
 (
GtkTextIãr
 *
ôî
,

231 
göt
 
cou¡
);

232 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_visibÀ_curs‹_posôi⁄s
 (
GtkTextIãr
 *
ôî
,

233 
göt
 
cou¡
);

236 
	`gtk_ãxt_ôî_£t_off£t
 (
GtkTextIãr
 *
ôî
,

237 
göt
 
ch¨_off£t
);

238 
	`gtk_ãxt_ôî_£t_löe
 (
GtkTextIãr
 *
ôî
,

239 
göt
 
löe_numbî
);

240 
	`gtk_ãxt_ôî_£t_löe_off£t
 (
GtkTextIãr
 *
ôî
,

241 
göt
 
ch¨_⁄_löe
);

242 
	`gtk_ãxt_ôî_£t_löe_ödex
 (
GtkTextIãr
 *
ôî
,

243 
göt
 
byã_⁄_löe
);

244 
	`gtk_ãxt_ôî_f‹w¨d_to_íd
 (
GtkTextIãr
 *
ôî
);

245 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_to_löe_íd
 (
GtkTextIãr
 *
ôî
);

247 
	`gtk_ãxt_ôî_£t_visibÀ_löe_off£t
 (
GtkTextIãr
 *
ôî
,

248 
göt
 
ch¨_⁄_löe
);

249 
	`gtk_ãxt_ôî_£t_visibÀ_löe_ödex
 (
GtkTextIãr
 *
ôî
,

250 
göt
 
byã_⁄_löe
);

256 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_to_èg_toggÀ
 (
GtkTextIãr
 *
ôî
,

257 
GtkTextTag
 *
èg
);

259 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_to_èg_toggÀ
 (
GtkTextIãr
 *
ôî
,

260 
GtkTextTag
 *
èg
);

262 
	$gboﬁón
 (* 
	tGtkTextCh¨Pªdiˇã
Ë(
	tgunich¨
 
	tch
, 
	tgpoöãr
 
	tu£r_d©a
);

264 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_föd_ch¨
 (
GtkTextIãr
 *
ôî
,

265 
GtkTextCh¨Pªdiˇã
 
¥ed
,

266 
gpoöãr
 
u£r_d©a
,

267 c⁄° 
GtkTextIãr
 *
limô
);

268 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_föd_ch¨
 (
GtkTextIãr
 *
ôî
,

269 
GtkTextCh¨Pªdiˇã
 
¥ed
,

270 
gpoöãr
 
u£r_d©a
,

271 c⁄° 
GtkTextIãr
 *
limô
);

273 
gboﬁón
 
	`gtk_ãxt_ôî_f‹w¨d_£¨ch
 (c⁄° 
GtkTextIãr
 *
ôî
,

274 c⁄° 
gch¨
 *
°r
,

275 
GtkTextSórchFœgs
 
Êags
,

276 
GtkTextIãr
 *
m©ch_°¨t
,

277 
GtkTextIãr
 *
m©ch_íd
,

278 c⁄° 
GtkTextIãr
 *
limô
);

280 
gboﬁón
 
	`gtk_ãxt_ôî_backw¨d_£¨ch
 (c⁄° 
GtkTextIãr
 *
ôî
,

281 c⁄° 
gch¨
 *
°r
,

282 
GtkTextSórchFœgs
 
Êags
,

283 
GtkTextIãr
 *
m©ch_°¨t
,

284 
GtkTextIãr
 *
m©ch_íd
,

285 c⁄° 
GtkTextIãr
 *
limô
);

291 
gboﬁón
 
	`gtk_ãxt_ôî_equÆ
 (c⁄° 
GtkTextIãr
 *
lhs
,

292 c⁄° 
GtkTextIãr
 *
rhs
);

293 
göt
 
	`gtk_ãxt_ôî_com∑ª
 (c⁄° 
GtkTextIãr
 *
lhs
,

294 c⁄° 
GtkTextIãr
 *
rhs
);

295 
gboﬁón
 
	`gtk_ãxt_ôî_ö_ønge
 (c⁄° 
GtkTextIãr
 *
ôî
,

296 c⁄° 
GtkTextIãr
 *
°¨t
,

297 c⁄° 
GtkTextIãr
 *
íd
);

300 
	`gtk_ãxt_ôî_‹dî
 (
GtkTextIãr
 *
fú°
,

301 
GtkTextIãr
 *
£c⁄d
);

303 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktextmark.h

50 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

54 #i‚de‡
__GTK_TEXT_MARK_H__


55 
	#__GTK_TEXT_MARK_H__


	)

57 
G_BEGIN_DECLS


61 
_GtkTextM¨k
 
	tGtkTextM¨k
;

62 
_GtkTextM¨kCœss
 
	tGtkTextM¨kCœss
;

64 
	#GTK_TYPE_TEXT_MARK
 (
	`gtk_ãxt_m¨k_gë_ty≥
 ())

	)

65 
	#GTK_TEXT_MARK
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GTK_TYPE_TEXT_MARK
, 
GtkTextM¨k
))

	)

66 
	#GTK_TEXT_MARK_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT_MARK
, 
GtkTextM¨kCœss
))

	)

67 
	#GTK_IS_TEXT_MARK
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GTK_TYPE_TEXT_MARK
))

	)

68 
	#GTK_IS_TEXT_MARK_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT_MARK
))

	)

69 
	#GTK_TEXT_MARK_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT_MARK
, 
GtkTextM¨kCœss
))

	)

71 
	s_GtkTextM¨k


73 
GObje˘
 
	m∑ª¡_ö°™˚
;

75 
gpoöãr
 
GSEAL
 (
£gmít
);

78 
	s_GtkTextM¨kCœss


80 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

83 (*
	m_gtk_ª£rved1
) ();

84 (*
	m_gtk_ª£rved2
) ();

85 (*
	m_gtk_ª£rved3
) ();

86 (*
	m_gtk_ª£rved4
) ();

89 
GTy≥
 
	$gtk_ãxt_m¨k_gë_ty≥
 (Ë
G_GNUC_CONST
;

91 
	`gtk_ãxt_m¨k_£t_visibÀ
 (
GtkTextM¨k
 *
m¨k
,

92 
gboﬁón
 
£âög
);

93 
gboﬁón
 
	`gtk_ãxt_m¨k_gë_visibÀ
 (
GtkTextM¨k
 *
m¨k
);

95 
GtkTextM¨k
 *
	`gtk_ãxt_m¨k_√w
 (c⁄° 
gch¨
 *
«me
,

96 
gboﬁón
 
À·_gøvôy
);

97 
G_CONST_RETURN
 
gch¨
* 
	`gtk_ãxt_m¨k_gë_«me
 (
GtkTextM¨k
 *
m¨k
);

98 
gboﬁón
 
	`gtk_ãxt_m¨k_gë_dñëed
 (
GtkTextM¨k
 *
m¨k
);

99 
GtkTextBuf„r
* 
	`gtk_ãxt_m¨k_gë_buf„r
 (
GtkTextM¨k
 *
m¨k
);

100 
gboﬁón
 
	`gtk_ãxt_m¨k_gë_À·_gøvôy
 (
GtkTextM¨k
 *
m¨k
);

102 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktexttag.h

50 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

54 #i‚de‡
__GTK_TEXT_TAG_H__


55 
	#__GTK_TEXT_TAG_H__


	)

58 
	~<gdk/gdk.h
>

59 
	~<gtk/gtkíums.h
>

62 
	~<gtk/gtkobje˘.h
>

65 
G_BEGIN_DECLS


67 
_GtkTextIãr
 
	tGtkTextIãr
;

68 
_GtkTextTagTabÀ
 
	tGtkTextTagTabÀ
;

70 
_GtkTextAâribuãs
 
	tGtkTextAâribuãs
;

72 
	#GTK_TYPE_TEXT_TAG
 (
	`gtk_ãxt_èg_gë_ty≥
 ())

	)

73 
	#GTK_TEXT_TAG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TEXT_TAG
, 
GtkTextTag
))

	)

74 
	#GTK_TEXT_TAG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT_TAG
, 
GtkTextTagCœss
))

	)

75 
	#GTK_IS_TEXT_TAG
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TEXT_TAG
))

	)

76 
	#GTK_IS_TEXT_TAG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT_TAG
))

	)

77 
	#GTK_TEXT_TAG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT_TAG
, 
GtkTextTagCœss
))

	)

79 
	#GTK_TYPE_TEXT_ATTRIBUTES
 (
	`gtk_ãxt_©åibuãs_gë_ty≥
 ())

	)

81 
_GtkTextTag
 
	tGtkTextTag
;

82 
_GtkTextTagCœss
 
	tGtkTextTagCœss
;

84 
	s_GtkTextTag


86 
GObje˘
 
	m∑ª¡_ö°™˚
;

88 
GtkTextTagTabÀ
 *
	mèbÀ
;

90 *
	m«me
;

94 
	m¥i‹ôy
;

106 
GtkTextAâribuãs
 *
	mvÆues
;

111 
guöt
 
	mbg_cﬁ‹_£t
 : 1;

112 
guöt
 
	mbg_°ù∂e_£t
 : 1;

113 
guöt
 
	mfg_cﬁ‹_£t
 : 1;

114 
guöt
 
	msˇÀ_£t
 : 1;

115 
guöt
 
	mfg_°ù∂e_£t
 : 1;

116 
guöt
 
	mju°ifiˇti⁄_£t
 : 1;

117 
guöt
 
	mÀ·_m¨gö_£t
 : 1;

118 
guöt
 
	mödít_£t
 : 1;

119 
guöt
 
	mri£_£t
 : 1;

120 
guöt
 
	m°rikëhrough_£t
 : 1;

121 
guöt
 
	mright_m¨gö_£t
 : 1;

122 
guöt
 
	mpixñs_above_löes_£t
 : 1;

123 
guöt
 
	mpixñs_bñow_löes_£t
 : 1;

124 
guöt
 
	mpixñs_öside_wøp_£t
 : 1;

125 
guöt
 
	mèbs_£t
 : 1;

126 
guöt
 
	mundîlöe_£t
 : 1;

127 
guöt
 
	mwøp_mode_£t
 : 1;

128 
guöt
 
	mbg_fuŒ_height_£t
 : 1;

129 
guöt
 
	mövisibÀ_£t
 : 1;

130 
guöt
 
	medôabÀ_£t
 : 1;

131 
guöt
 
	mœnguage_£t
 : 1;

132 
guöt
 
	mpg_bg_cﬁ‹_£t
 : 1;

135 
guöt
 
	maccumuœtive_m¨gö
 : 1;

137 
guöt
 
	m∑d1
 : 1;

140 
	s_GtkTextTagCœss


142 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

144 
gboﬁón
 (* 
evít
Ë(
GtkTextTag
 *
	mèg
,

145 
GObje˘
 *
	mevít_obje˘
,

146 
GdkEvít
 *
	mevít
,

147 c⁄° 
GtkTextIãr
 *
	môî
);

150 (*
	m_gtk_ª£rved1
) ();

151 (*
	m_gtk_ª£rved2
) ();

152 (*
	m_gtk_ª£rved3
) ();

153 (*
	m_gtk_ª£rved4
) ();

156 
GTy≥
 
	$gtk_ãxt_èg_gë_ty≥
 (Ë
G_GNUC_CONST
;

157 
GtkTextTag
 *
	`gtk_ãxt_èg_√w
 (c⁄° 
gch¨
 *
«me
);

158 
göt
 
	`gtk_ãxt_èg_gë_¥i‹ôy
 (
GtkTextTag
 *
èg
);

159 
	`gtk_ãxt_èg_£t_¥i‹ôy
 (
GtkTextTag
 *
èg
,

160 
göt
 
¥i‹ôy
);

161 
gboﬁón
 
	`gtk_ãxt_èg_evít
 (
GtkTextTag
 *
èg
,

162 
GObje˘
 *
evít_obje˘
,

163 
GdkEvít
 *
evít
,

164 c⁄° 
GtkTextIãr
 *
ôî
);

170 
_GtkTextAµóøn˚
 
	tGtkTextAµóøn˚
;

172 
	s_GtkTextAµóøn˚


175 
GdkCﬁ‹
 
bg_cﬁ‹
;

176 
GdkCﬁ‹
 
fg_cﬁ‹
;

177 
GdkBôm≠
 *
bg_°ù∂e
;

178 
GdkBôm≠
 *
fg_°ù∂e
;

181 
göt
 
ri£
;

187 
gpoöãr
 
∑ddög1
;

190 
guöt
 
undîlöe
 : 4;

191 
guöt
 
°rikëhrough
 : 1;

198 
guöt
 
døw_bg
 : 1;

204 
guöt
 
öside_£À˘i⁄
 : 1;

205 
guöt
 
is_ãxt
 : 1;

208 
guöt
 
∑d1
 : 1;

209 
guöt
 
∑d2
 : 1;

210 
guöt
 
∑d3
 : 1;

211 
guöt
 
∑d4
 : 1;

214 
	s_GtkTextAâribuãs


217 
guöt
 
ªfcou¡
;

220 
GtkTextAµóøn˚
 
≠≥¨™˚
;

222 
GtkJu°ifiˇti⁄
 
ju°ifiˇti⁄
;

223 
GtkTextDúe˘i⁄
 
dúe˘i⁄
;

226 
P™goF⁄tDes¸ùti⁄
 *
f⁄t
;

228 
gdoubÀ
 
f⁄t_sˇÀ
;

230 
göt
 
À·_m¨gö
;

232 
göt
 
ödít
;

234 
göt
 
right_m¨gö
;

236 
göt
 
pixñs_above_löes
;

238 
göt
 
pixñs_bñow_löes
;

240 
göt
 
pixñs_öside_wøp
;

242 
P™goTabAºay
 *
èbs
;

244 
GtkWøpMode
 
wøp_mode
;

249 
P™goL™guage
 *
œnguage
;

252 
GdkCﬁ‹
 *
pg_bg_cﬁ‹
;

256 
guöt
 
övisibÀ
 : 1;

261 
guöt
 
bg_fuŒ_height
 : 1;

264 
guöt
 
edôabÀ
 : 1;

267 
guöt
 
ªÆized
 : 1;

270 
guöt
 
∑d1
 : 1;

271 
guöt
 
∑d2
 : 1;

272 
guöt
 
∑d3
 : 1;

273 
guöt
 
∑d4
 : 1;

276 
GtkTextAâribuãs
* 
	`gtk_ãxt_©åibuãs_√w
 ();

277 
GtkTextAâribuãs
* 
	`gtk_ãxt_©åibuãs_c›y
 (GtkTextAâribuã†*
§c
);

278 
	`gtk_ãxt_©åibuãs_c›y_vÆues
 (
GtkTextAâribuãs
 *
§c
,

279 
GtkTextAâribuãs
 *
de°
);

280 
	`gtk_ãxt_©åibuãs_uƒef
 (
GtkTextAâribuãs
 *
vÆues
);

281 
GtkTextAâribuãs
 *
	`gtk_ãxt_©åibuãs_ªf
 (GtkTextAâribuã†*
vÆues
);

283 
GTy≥
 
	$gtk_ãxt_©åibuãs_gë_ty≥
 (Ë
G_GNUC_CONST
;

286 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktexttagtable.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TEXT_TAG_TABLE_H__


32 
	#__GTK_TEXT_TAG_TABLE_H__


	)

34 
	~<gtk/gtkãxâag.h
>

36 
G_BEGIN_DECLS


38 (* 
	tGtkTextTagTabÀF‹óch
Ë(
	tGtkTextTag
 *
	tèg
, 
	tgpoöãr
 
	td©a
);

40 
	#GTK_TYPE_TEXT_TAG_TABLE
 (
	`gtk_ãxt_èg_èbÀ_gë_ty≥
 ())

	)

41 
	#GTK_TEXT_TAG_TABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TEXT_TAG_TABLE
, 
GtkTextTagTabÀ
))

	)

42 
	#GTK_TEXT_TAG_TABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT_TAG_TABLE
, 
GtkTextTagTabÀCœss
))

	)

43 
	#GTK_IS_TEXT_TAG_TABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TEXT_TAG_TABLE
))

	)

44 
	#GTK_IS_TEXT_TAG_TABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT_TAG_TABLE
))

	)

45 
	#GTK_TEXT_TAG_TABLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT_TAG_TABLE
, 
GtkTextTagTabÀCœss
))

	)

47 
_GtkTextTagTabÀCœss
 
	tGtkTextTagTabÀCœss
;

49 
	s_GtkTextTagTabÀ


51 
GObje˘
 
∑ª¡_ö°™˚
;

53 
GHashTabÀ
 *
	`GSEAL
 (
hash
);

54 
GSLi°
 *
	`GSEAL
 (
™⁄ymous
);

55 
göt
 
	`GSEAL
 (
™⁄_cou¡
);

57 
GSLi°
 *
	`GSEAL
 (
buf„rs
);

60 
	s_GtkTextTagTabÀCœss


62 
GObje˘Cœss
 
∑ª¡_˛ass
;

64 (* 
èg_ch™ged
Ë(
GtkTextTagTabÀ
 *
èbÀ
, 
GtkTextTag
 *
èg
, 
gboﬁón
 
size_ch™ged
);

65 (* 
èg_added
Ë(
GtkTextTagTabÀ
 *
èbÀ
, 
GtkTextTag
 *
èg
);

66 (* 
èg_ªmoved
Ë(
GtkTextTagTabÀ
 *
èbÀ
, 
GtkTextTag
 *
èg
);

69 (*
_gtk_ª£rved1
) ();

70 (*
_gtk_ª£rved2
) ();

71 (*
_gtk_ª£rved3
) ();

72 (*
_gtk_ª£rved4
) ();

75 
GTy≥
 
	$gtk_ãxt_èg_èbÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

77 
GtkTextTagTabÀ
 *
	`gtk_ãxt_èg_èbÀ_√w
 ();

78 
	`gtk_ãxt_èg_èbÀ_add
 (
GtkTextTagTabÀ
 *
èbÀ
,

79 
GtkTextTag
 *
èg
);

80 
	`gtk_ãxt_èg_èbÀ_ªmove
 (
GtkTextTagTabÀ
 *
èbÀ
,

81 
GtkTextTag
 *
èg
);

82 
GtkTextTag
 *
	`gtk_ãxt_èg_èbÀ_lookup
 (
GtkTextTagTabÀ
 *
èbÀ
,

83 c⁄° 
gch¨
 *
«me
);

84 
	`gtk_ãxt_èg_èbÀ_f‹óch
 (
GtkTextTagTabÀ
 *
èbÀ
,

85 
GtkTextTagTabÀF‹óch
 
func
,

86 
gpoöãr
 
d©a
);

87 
göt
 
	`gtk_ãxt_èg_èbÀ_gë_size
 (
GtkTextTagTabÀ
 *
èbÀ
);

93 
	`_gtk_ãxt_èg_èbÀ_add_buf„r
 (
GtkTextTagTabÀ
 *
èbÀ
,

94 
gpoöãr
 
buf„r
);

95 
	`_gtk_ãxt_èg_èbÀ_ªmove_buf„r
 (
GtkTextTagTabÀ
 *
èbÀ
,

96 
gpoöãr
 
buf„r
);

98 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktextview.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TEXT_VIEW_H__


32 
	#__GTK_TEXT_VIEW_H__


	)

34 
	~<gtk/gtkc⁄èöî.h
>

35 
	~<gtk/gtkimc⁄ãxt.h
>

36 
	~<gtk/gtkãxtbuf„r.h
>

37 
	~<gtk/gtkmíu.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_TEXT_VIEW
 (
	`gtk_ãxt_võw_gë_ty≥
 ())

	)

42 
	#GTK_TEXT_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TEXT_VIEW
, 
GtkTextVõw
))

	)

43 
	#GTK_TEXT_VIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TEXT_VIEW
, 
GtkTextVõwCœss
))

	)

44 
	#GTK_IS_TEXT_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TEXT_VIEW
))

	)

45 
	#GTK_IS_TEXT_VIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TEXT_VIEW
))

	)

46 
	#GTK_TEXT_VIEW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TEXT_VIEW
, 
GtkTextVõwCœss
))

	)

50 
	mGTK_TEXT_WINDOW_PRIVATE
,

51 
	mGTK_TEXT_WINDOW_WIDGET
,

52 
	mGTK_TEXT_WINDOW_TEXT
,

53 
	mGTK_TEXT_WINDOW_LEFT
,

54 
	mGTK_TEXT_WINDOW_RIGHT
,

55 
	mGTK_TEXT_WINDOW_TOP
,

56 
	mGTK_TEXT_WINDOW_BOTTOM


57 } 
	tGtkTextWödowTy≥
;

59 
	#GTK_TEXT_VIEW_PRIORITY_VALIDATE
 (
GDK_PRIORITY_REDRAW
 + 5)

	)

61 
_GtkTextVõw
 
	tGtkTextVõw
;

62 
_GtkTextVõwCœss
 
	tGtkTextVõwCœss
;

65 
_GtkTextWödow
 
	tGtkTextWödow
;

66 
_GtkTextPídögS¸ﬁl
 
	tGtkTextPídögS¸ﬁl
;

68 
	s_GtkTextVõw


70 
GtkC⁄èöî
 
	m∑ª¡_ö°™˚
;

72 
_GtkTextLayout
 *
GSEAL
 (
œyout
);

73 
GtkTextBuf„r
 *
GSEAL
 (
buf„r
);

75 
guöt
 
GSEAL
 (
£À˘i⁄_døg_h™dÀr
);

76 
guöt
 
GSEAL
 (
s¸ﬁl_timeout
);

79 
göt
 
GSEAL
 (
pixñs_above_löes
);

80 
göt
 
GSEAL
 (
pixñs_bñow_löes
);

81 
göt
 
GSEAL
 (
pixñs_öside_wøp
);

82 
GtkWøpMode
 
GSEAL
 (
wøp_mode
);

83 
GtkJu°ifiˇti⁄
 
GSEAL
 (
ju°ify
);

84 
göt
 
GSEAL
 (
À·_m¨gö
);

85 
göt
 
GSEAL
 (
right_m¨gö
);

86 
göt
 
GSEAL
 (
ödít
);

87 
P™goTabAºay
 *
GSEAL
 (
èbs
);

88 
guöt
 
GSEAL
 (
edôabÀ
) : 1;

90 
guöt
 
GSEAL
 (
ovîwrôe_mode
) : 1;

91 
guöt
 
GSEAL
 (
curs‹_visibÀ
) : 1;

94 
guöt
 
GSEAL
 (
√ed_im_ª£t
) : 1;

96 
guöt
 
GSEAL
 (
ac˚±s_èb
) : 1;

98 
guöt
 
GSEAL
 (
width_ch™ged
) : 1;

103 
guöt
 
GSEAL
 (
⁄s¸ìn_vÆid©ed
) : 1;

105 
guöt
 
GSEAL
 (
mou£_curs‹_obscuªd
) : 1;

107 
GtkTextWödow
 *
GSEAL
 (
ãxt_wödow
);

108 
GtkTextWödow
 *
GSEAL
 (
À·_wödow
);

109 
GtkTextWödow
 *
GSEAL
 (
right_wödow
);

110 
GtkTextWödow
 *
GSEAL
 (
t›_wödow
);

111 
GtkTextWödow
 *
GSEAL
 (
bŸtom_wödow
);

113 
GtkAdju°mít
 *
GSEAL
 (
hadju°mít
);

114 
GtkAdju°mít
 *
GSEAL
 (
vadju°mít
);

116 
göt
 
GSEAL
 (
xoff£t
);

117 
göt
 
GSEAL
 (
yoff£t
);

118 
göt
 
GSEAL
 (
width
);

119 
göt
 
GSEAL
 (
height
);

130 
göt
 
GSEAL
 (
vútuÆ_curs‹_x
);

131 
göt
 
GSEAL
 (
vútuÆ_curs‹_y
);

133 
GtkTextM¨k
 *
GSEAL
 (
fú°_∑ø_m¨k
);

134 
göt
 
GSEAL
 (
fú°_∑ø_pixñs
);

136 
GtkTextM¨k
 *
GSEAL
 (
dnd_m¨k
);

137 
guöt
 
GSEAL
 (
blök_timeout
);

139 
guöt
 
GSEAL
 (
fú°_vÆid©e_idÀ
);

140 
guöt
 
GSEAL
 (
ö¸emíèl_vÆid©e_idÀ
);

142 
GtkIMC⁄ãxt
 *
GSEAL
 (
im_c⁄ãxt
);

143 
GtkWidgë
 *
GSEAL
 (
p›up_míu
);

145 
göt
 
GSEAL
 (
døg_°¨t_x
);

146 
göt
 
GSEAL
 (
døg_°¨t_y
);

148 
GSLi°
 *
GSEAL
 (
chûdªn
);

150 
GtkTextPídögS¸ﬁl
 *
GSEAL
 (
≥ndög_s¸ﬁl
);

152 
göt
 
GSEAL
 (
≥ndög_∂a˚_curs‹_buâ⁄
);

155 
	s_GtkTextVõwCœss


157 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

159 (* 
	m£t_s¸ﬁl_adju°míts
Ë(
GtkTextVõw
 *
	mãxt_võw
,

160 
GtkAdju°mít
 *
	mhadju°mít
,

161 
GtkAdju°mít
 *
	mvadju°mít
);

163 (* 
	mp›uœã_p›up
Ë(
GtkTextVõw
 *
	mãxt_võw
,

164 
GtkMíu
 *
	mmíu
);

169 (* 
	mmove_curs‹
Ë(
GtkTextVõw
 *
	mãxt_võw
,

170 
GtkMovemítSãp
 
	m°ï
,

171 
göt
 
	mcou¡
,

172 
gboﬁón
 
	mexãnd_£À˘i⁄
);

178 (* 
	m∑ge_h‹iz⁄èŒy
Ë(
GtkTextVõw
 *
	mãxt_võw
,

179 
göt
 
	mcou¡
,

180 
gboﬁón
 
	mexãnd_£À˘i⁄
);

183 (* 
	m£t_™ch‹
Ë(
GtkTextVõw
 *
	mãxt_võw
);

186 (* 
	mö£π_©_curs‹
Ë(
GtkTextVõw
 *
	mãxt_võw
,

187 c⁄° 
gch¨
 *
	m°r
);

188 (* 
	mdñëe_‰om_curs‹
Ë(
GtkTextVõw
 *
	mãxt_võw
,

189 
GtkDñëeTy≥
 
	mty≥
,

190 
göt
 
	mcou¡
);

191 (* 
	mback•a˚
Ë(
GtkTextVõw
 *
	mãxt_võw
);

194 (* 
	mcut_˛ùbﬂrd
Ë(
GtkTextVõw
 *
	mãxt_võw
);

195 (* 
	mc›y_˛ùbﬂrd
Ë(
GtkTextVõw
 *
	mãxt_võw
);

196 (* 
	m∑°e_˛ùbﬂrd
Ë(
GtkTextVõw
 *
	mãxt_võw
);

198 (* 
	mtoggÀ_ovîwrôe
Ë(
GtkTextVõw
 *
	mãxt_võw
);

204 (* 
	mmove_focus
Ë(
GtkTextVõw
 *
	mãxt_võw
,

205 
GtkDúe˘i⁄Ty≥
 
	mdúe˘i⁄
);

208 (*
	m_gtk_ª£rved1
) ();

209 (*
	m_gtk_ª£rved2
) ();

210 (*
	m_gtk_ª£rved3
) ();

211 (*
	m_gtk_ª£rved4
) ();

212 (*
	m_gtk_ª£rved5
) ();

213 (*
	m_gtk_ª£rved6
) ();

214 (*
	m_gtk_ª£rved7
) ();

217 
GTy≥
 
	$gtk_ãxt_võw_gë_ty≥
 (Ë
G_GNUC_CONST
;

218 
GtkWidgë
 * 
	`gtk_ãxt_võw_√w
 ();

219 
GtkWidgë
 * 
	`gtk_ãxt_võw_√w_wôh_buf„r
 (
GtkTextBuf„r
 *
buf„r
);

220 
	`gtk_ãxt_võw_£t_buf„r
 (
GtkTextVõw
 *
ãxt_võw
,

221 
GtkTextBuf„r
 *
buf„r
);

222 
GtkTextBuf„r
 *
	`gtk_ãxt_võw_gë_buf„r
 (
GtkTextVõw
 *
ãxt_võw
);

223 
gboﬁón
 
	`gtk_ãxt_võw_s¸ﬁl_to_ôî
 (
GtkTextVõw
 *
ãxt_võw
,

224 
GtkTextIãr
 *
ôî
,

225 
gdoubÀ
 
wôhö_m¨gö
,

226 
gboﬁón
 
u£_Æign
,

227 
gdoubÀ
 
xÆign
,

228 
gdoubÀ
 
yÆign
);

229 
	`gtk_ãxt_võw_s¸ﬁl_to_m¨k
 (
GtkTextVõw
 *
ãxt_võw
,

230 
GtkTextM¨k
 *
m¨k
,

231 
gdoubÀ
 
wôhö_m¨gö
,

232 
gboﬁón
 
u£_Æign
,

233 
gdoubÀ
 
xÆign
,

234 
gdoubÀ
 
yÆign
);

235 
	`gtk_ãxt_võw_s¸ﬁl_m¨k_⁄s¸ìn
 (
GtkTextVõw
 *
ãxt_võw
,

236 
GtkTextM¨k
 *
m¨k
);

237 
gboﬁón
 
	`gtk_ãxt_võw_move_m¨k_⁄s¸ìn
 (
GtkTextVõw
 *
ãxt_võw
,

238 
GtkTextM¨k
 *
m¨k
);

239 
gboﬁón
 
	`gtk_ãxt_võw_∂a˚_curs‹_⁄s¸ìn
 (
GtkTextVõw
 *
ãxt_võw
);

241 
	`gtk_ãxt_võw_gë_visibÀ_ª˘
 (
GtkTextVõw
 *
ãxt_võw
,

242 
GdkRe˘™gÀ
 *
visibÀ_ª˘
);

243 
	`gtk_ãxt_võw_£t_curs‹_visibÀ
 (
GtkTextVõw
 *
ãxt_võw
,

244 
gboﬁón
 
£âög
);

245 
gboﬁón
 
	`gtk_ãxt_võw_gë_curs‹_visibÀ
 (
GtkTextVõw
 *
ãxt_võw
);

247 
	`gtk_ãxt_võw_gë_ôî_loˇti⁄
 (
GtkTextVõw
 *
ãxt_võw
,

248 c⁄° 
GtkTextIãr
 *
ôî
,

249 
GdkRe˘™gÀ
 *
loˇti⁄
);

250 
	`gtk_ãxt_võw_gë_ôî_©_loˇti⁄
 (
GtkTextVõw
 *
ãxt_võw
,

251 
GtkTextIãr
 *
ôî
,

252 
göt
 
x
,

253 
göt
 
y
);

254 
	`gtk_ãxt_võw_gë_ôî_©_posôi⁄
 (
GtkTextVõw
 *
ãxt_võw
,

255 
GtkTextIãr
 *
ôî
,

256 
göt
 *
åaûög
,

257 
göt
 
x
,

258 
göt
 
y
);

259 
	`gtk_ãxt_võw_gë_löe_yønge
 (
GtkTextVõw
 *
ãxt_võw
,

260 c⁄° 
GtkTextIãr
 *
ôî
,

261 
göt
 *
y
,

262 
göt
 *
height
);

264 
	`gtk_ãxt_võw_gë_löe_©_y
 (
GtkTextVõw
 *
ãxt_võw
,

265 
GtkTextIãr
 *
èrgë_ôî
,

266 
göt
 
y
,

267 
göt
 *
löe_t›
);

269 
	`gtk_ãxt_võw_buf„r_to_wödow_co‹ds
 (
GtkTextVõw
 *
ãxt_võw
,

270 
GtkTextWödowTy≥
 
wö
,

271 
göt
 
buf„r_x
,

272 
göt
 
buf„r_y
,

273 
göt
 *
wödow_x
,

274 
göt
 *
wödow_y
);

275 
	`gtk_ãxt_võw_wödow_to_buf„r_co‹ds
 (
GtkTextVõw
 *
ãxt_võw
,

276 
GtkTextWödowTy≥
 
wö
,

277 
göt
 
wödow_x
,

278 
göt
 
wödow_y
,

279 
göt
 *
buf„r_x
,

280 
göt
 *
buf„r_y
);

282 
GdkWödow
* 
	`gtk_ãxt_võw_gë_wödow
 (
GtkTextVõw
 *
ãxt_võw
,

283 
GtkTextWödowTy≥
 
wö
);

284 
GtkTextWödowTy≥
 
	`gtk_ãxt_võw_gë_wödow_ty≥
 (
GtkTextVõw
 *
ãxt_võw
,

285 
GdkWödow
 *
wödow
);

287 
	`gtk_ãxt_võw_£t_b‹dî_wödow_size
 (
GtkTextVõw
 *
ãxt_võw
,

288 
GtkTextWödowTy≥
 
ty≥
,

289 
göt
 
size
);

290 
göt
 
	`gtk_ãxt_võw_gë_b‹dî_wödow_size
 (
GtkTextVõw
 *
ãxt_võw
,

291 
GtkTextWödowTy≥
 
ty≥
);

293 
gboﬁón
 
	`gtk_ãxt_võw_f‹w¨d_di•œy_löe
 (
GtkTextVõw
 *
ãxt_võw
,

294 
GtkTextIãr
 *
ôî
);

295 
gboﬁón
 
	`gtk_ãxt_võw_backw¨d_di•œy_löe
 (
GtkTextVõw
 *
ãxt_võw
,

296 
GtkTextIãr
 *
ôî
);

297 
gboﬁón
 
	`gtk_ãxt_võw_f‹w¨d_di•œy_löe_íd
 (
GtkTextVõw
 *
ãxt_võw
,

298 
GtkTextIãr
 *
ôî
);

299 
gboﬁón
 
	`gtk_ãxt_võw_backw¨d_di•œy_löe_°¨t
 (
GtkTextVõw
 *
ãxt_võw
,

300 
GtkTextIãr
 *
ôî
);

301 
gboﬁón
 
	`gtk_ãxt_võw_°¨ts_di•œy_löe
 (
GtkTextVõw
 *
ãxt_võw
,

302 c⁄° 
GtkTextIãr
 *
ôî
);

303 
gboﬁón
 
	`gtk_ãxt_võw_move_visuÆly
 (
GtkTextVõw
 *
ãxt_võw
,

304 
GtkTextIãr
 *
ôî
,

305 
göt
 
cou¡
);

308 
	`gtk_ãxt_võw_add_chûd_©_™ch‹
 (
GtkTextVõw
 *
ãxt_võw
,

309 
GtkWidgë
 *
chûd
,

310 
GtkTextChûdAnch‹
 *
™ch‹
);

312 
	`gtk_ãxt_võw_add_chûd_ö_wödow
 (
GtkTextVõw
 *
ãxt_võw
,

313 
GtkWidgë
 *
chûd
,

314 
GtkTextWödowTy≥
 
which_wödow
,

316 
göt
 
xpos
,

317 
göt
 
ypos
);

319 
	`gtk_ãxt_võw_move_chûd
 (
GtkTextVõw
 *
ãxt_võw
,

320 
GtkWidgë
 *
chûd
,

322 
göt
 
xpos
,

323 
göt
 
ypos
);

327 
	`gtk_ãxt_võw_£t_wøp_mode
 (
GtkTextVõw
 *
ãxt_võw
,

328 
GtkWøpMode
 
wøp_mode
);

329 
GtkWøpMode
 
	`gtk_ãxt_võw_gë_wøp_mode
 (
GtkTextVõw
 *
ãxt_võw
);

330 
	`gtk_ãxt_võw_£t_edôabÀ
 (
GtkTextVõw
 *
ãxt_võw
,

331 
gboﬁón
 
£âög
);

332 
gboﬁón
 
	`gtk_ãxt_võw_gë_edôabÀ
 (
GtkTextVõw
 *
ãxt_võw
);

333 
	`gtk_ãxt_võw_£t_ovîwrôe
 (
GtkTextVõw
 *
ãxt_võw
,

334 
gboﬁón
 
ovîwrôe
);

335 
gboﬁón
 
	`gtk_ãxt_võw_gë_ovîwrôe
 (
GtkTextVõw
 *
ãxt_võw
);

336 
	`gtk_ãxt_võw_£t_ac˚±s_èb
 (
GtkTextVõw
 *
ãxt_võw
,

337 
gboﬁón
 
ac˚±s_èb
);

338 
gboﬁón
 
	`gtk_ãxt_võw_gë_ac˚±s_èb
 (
GtkTextVõw
 *
ãxt_võw
);

339 
	`gtk_ãxt_võw_£t_pixñs_above_löes
 (
GtkTextVõw
 *
ãxt_võw
,

340 
göt
 
pixñs_above_löes
);

341 
göt
 
	`gtk_ãxt_võw_gë_pixñs_above_löes
 (
GtkTextVõw
 *
ãxt_võw
);

342 
	`gtk_ãxt_võw_£t_pixñs_bñow_löes
 (
GtkTextVõw
 *
ãxt_võw
,

343 
göt
 
pixñs_bñow_löes
);

344 
göt
 
	`gtk_ãxt_võw_gë_pixñs_bñow_löes
 (
GtkTextVõw
 *
ãxt_võw
);

345 
	`gtk_ãxt_võw_£t_pixñs_öside_wøp
 (
GtkTextVõw
 *
ãxt_võw
,

346 
göt
 
pixñs_öside_wøp
);

347 
göt
 
	`gtk_ãxt_võw_gë_pixñs_öside_wøp
 (
GtkTextVõw
 *
ãxt_võw
);

348 
	`gtk_ãxt_võw_£t_ju°ifiˇti⁄
 (
GtkTextVõw
 *
ãxt_võw
,

349 
GtkJu°ifiˇti⁄
 
ju°ifiˇti⁄
);

350 
GtkJu°ifiˇti⁄
 
	`gtk_ãxt_võw_gë_ju°ifiˇti⁄
 (
GtkTextVõw
 *
ãxt_võw
);

351 
	`gtk_ãxt_võw_£t_À·_m¨gö
 (
GtkTextVõw
 *
ãxt_võw
,

352 
göt
 
À·_m¨gö
);

353 
göt
 
	`gtk_ãxt_võw_gë_À·_m¨gö
 (
GtkTextVõw
 *
ãxt_võw
);

354 
	`gtk_ãxt_võw_£t_right_m¨gö
 (
GtkTextVõw
 *
ãxt_võw
,

355 
göt
 
right_m¨gö
);

356 
göt
 
	`gtk_ãxt_võw_gë_right_m¨gö
 (
GtkTextVõw
 *
ãxt_võw
);

357 
	`gtk_ãxt_võw_£t_ödít
 (
GtkTextVõw
 *
ãxt_võw
,

358 
göt
 
ödít
);

359 
göt
 
	`gtk_ãxt_võw_gë_ödít
 (
GtkTextVõw
 *
ãxt_võw
);

360 
	`gtk_ãxt_võw_£t_èbs
 (
GtkTextVõw
 *
ãxt_võw
,

361 
P™goTabAºay
 *
èbs
);

362 
P™goTabAºay
* 
	`gtk_ãxt_võw_gë_èbs
 (
GtkTextVõw
 *
ãxt_võw
);

365 
GtkTextAâribuãs
* 
	`gtk_ãxt_võw_gë_deÁu…_©åibuãs
 (
GtkTextVõw
 *
ãxt_võw
);

367 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktipsquery.h

30 #i‚de‡
GTK_DISABLE_DEPRECATED


32 #i‚de‡
__GTK_TIPS_QUERY_H__


33 
	#__GTK_TIPS_QUERY_H__


	)

36 
	~<gtk/gtk.h
>

39 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_TIPS_QUERY
 (
	`gtk_tùs_quîy_gë_ty≥
 ())

	)

43 
	#GTK_TIPS_QUERY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TIPS_QUERY
, 
GtkTùsQuîy
))

	)

44 
	#GTK_TIPS_QUERY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TIPS_QUERY
, 
GtkTùsQuîyCœss
))

	)

45 
	#GTK_IS_TIPS_QUERY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TIPS_QUERY
))

	)

46 
	#GTK_IS_TIPS_QUERY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TIPS_QUERY
))

	)

47 
	#GTK_TIPS_QUERY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TIPS_QUERY
, 
GtkTùsQuîyCœss
))

	)

51 
_GtkTùsQuîy
 
	tGtkTùsQuîy
;

52 
_GtkTùsQuîyCœss
 
	tGtkTùsQuîyCœss
;

56 
	s_GtkTùsQuîy


58 
GtkLabñ
 
	mœbñ
;

60 
guöt
 
	memô_Æways
 : 1;

61 
guöt
 
	mö_quîy
 : 1;

62 
gch¨
 *
	mœbñ_öa˘ive
;

63 
gch¨
 *
	mœbñ_no_tù
;

65 
GtkWidgë
 *
	mˇŒî
;

66 
GtkWidgë
 *
	mœ°_¸os£d
;

68 
GdkCurs‹
 *
	mquîy_curs‹
;

71 
	s_GtkTùsQuîyCœss


73 
GtkLabñCœss
 
	m∑ª¡_˛ass
;

75 (*
	m°¨t_quîy
Ë(
GtkTùsQuîy
 *
	mtùs_quîy
);

76 (*
	m°›_quîy
Ë(
GtkTùsQuîy
 *
	mtùs_quîy
);

77 (*
	mwidgë_íãªd
Ë(
GtkTùsQuîy
 *
	mtùs_quîy
,

78 
GtkWidgë
 *
	mwidgë
,

79 c⁄° 
gch¨
 *
	mtù_ãxt
,

80 c⁄° 
gch¨
 *
	mtù_¥iv©e
);

81 
göt
 (*
widgë_£À˘ed
Ë(
GtkTùsQuîy
 *
	mtùs_quîy
,

82 
GtkWidgë
 *
	mwidgë
,

83 c⁄° 
gch¨
 *
	mtù_ãxt
,

84 c⁄° 
gch¨
 *
	mtù_¥iv©e
,

85 
GdkEvítBuâ⁄
 *
	mevít
);

88 (*
	m_gtk_ª£rved1
) ();

89 (*
	m_gtk_ª£rved2
) ();

90 (*
	m_gtk_ª£rved3
) ();

91 (*
	m_gtk_ª£rved4
) ();

96 
GTy≥
 
	$gtk_tùs_quîy_gë_ty≥
 (Ë
G_GNUC_CONST
;

97 
GtkWidgë
* 
	`gtk_tùs_quîy_√w
 ();

98 
	`gtk_tùs_quîy_°¨t_quîy
 (
GtkTùsQuîy
 *
tùs_quîy
);

99 
	`gtk_tùs_quîy_°›_quîy
 (
GtkTùsQuîy
 *
tùs_quîy
);

100 
	`gtk_tùs_quîy_£t_ˇŒî
 (
GtkTùsQuîy
 *
tùs_quîy
,

101 
GtkWidgë
 *
ˇŒî
);

102 
	`gtk_tùs_quîy_£t_œbñs
 (
GtkTùsQuîy
 *
tùs_quîy
,

103 c⁄° 
gch¨
 *
œbñ_öa˘ive
,

104 c⁄° 
gch¨
 *
œbñ_no_tù
);

106 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktoggleaction.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_TOGGLE_ACTION_H__


36 
	#__GTK_TOGGLE_ACTION_H__


	)

38 
	~<gtk/gtka˘i⁄.h
>

40 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_TOGGLE_ACTION
 (
	`gtk_toggÀ_a˘i⁄_gë_ty≥
 ())

	)

43 
	#GTK_TOGGLE_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOGGLE_ACTION
, 
GtkToggÀA˘i⁄
))

	)

44 
	#GTK_TOGGLE_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOGGLE_ACTION
, 
GtkToggÀA˘i⁄Cœss
))

	)

45 
	#GTK_IS_TOGGLE_ACTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOGGLE_ACTION
))

	)

46 
	#GTK_IS_TOGGLE_ACTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOGGLE_ACTION
))

	)

47 
	#GTK_TOGGLE_ACTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_TOGGLE_ACTION
, 
GtkToggÀA˘i⁄Cœss
))

	)

49 
_GtkToggÀA˘i⁄
 
	tGtkToggÀA˘i⁄
;

50 
_GtkToggÀA˘i⁄Priv©e
 
	tGtkToggÀA˘i⁄Priv©e
;

51 
_GtkToggÀA˘i⁄Cœss
 
	tGtkToggÀA˘i⁄Cœss
;

53 
	s_GtkToggÀA˘i⁄


55 
GtkA˘i⁄
 
	m∑ª¡
;

59 
GtkToggÀA˘i⁄Priv©e
 *
GSEAL
 (
¥iv©e_d©a
);

62 
	s_GtkToggÀA˘i⁄Cœss


64 
GtkA˘i⁄Cœss
 
	m∑ª¡_˛ass
;

66 (* 
	mtoggÀd
Ë(
GtkToggÀA˘i⁄
 *
	ma˘i⁄
);

69 (*
	m_gtk_ª£rved1
) ();

70 (*
	m_gtk_ª£rved2
) ();

71 (*
	m_gtk_ª£rved3
) ();

72 (*
	m_gtk_ª£rved4
) ();

75 
GTy≥
 
	$gtk_toggÀ_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

76 
GtkToggÀA˘i⁄
 *
	`gtk_toggÀ_a˘i⁄_√w
 (c⁄° 
gch¨
 *
«me
,

77 c⁄° 
gch¨
 *
œbñ
,

78 c⁄° 
gch¨
 *
toﬁtù
,

79 c⁄° 
gch¨
 *
°ock_id
);

80 
	`gtk_toggÀ_a˘i⁄_toggÀd
 (
GtkToggÀA˘i⁄
 *
a˘i⁄
);

81 
	`gtk_toggÀ_a˘i⁄_£t_a˘ive
 (
GtkToggÀA˘i⁄
 *
a˘i⁄
,

82 
gboﬁón
 
is_a˘ive
);

83 
gboﬁón
 
	`gtk_toggÀ_a˘i⁄_gë_a˘ive
 (
GtkToggÀA˘i⁄
 *
a˘i⁄
);

84 
	`gtk_toggÀ_a˘i⁄_£t_døw_as_ødio
 (
GtkToggÀA˘i⁄
 *
a˘i⁄
,

85 
gboﬁón
 
døw_as_ødio
);

86 
gboﬁón
 
	`gtk_toggÀ_a˘i⁄_gë_døw_as_ødio
 (
GtkToggÀA˘i⁄
 *
a˘i⁄
);

89 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktogglebutton.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TOGGLE_BUTTON_H__


32 
	#__GTK_TOGGLE_BUTTON_H__


	)

35 
	~<gtk/gtkbuâ⁄.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_TOGGLE_BUTTON
 (
	`gtk_toggÀ_buâ⁄_gë_ty≥
 ())

	)

41 
	#GTK_TOGGLE_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOGGLE_BUTTON
, 
GtkToggÀBuâ⁄
))

	)

42 
	#GTK_TOGGLE_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOGGLE_BUTTON
, 
GtkToggÀBuâ⁄Cœss
))

	)

43 
	#GTK_IS_TOGGLE_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOGGLE_BUTTON
))

	)

44 
	#GTK_IS_TOGGLE_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOGGLE_BUTTON
))

	)

45 
	#GTK_TOGGLE_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TOGGLE_BUTTON
, 
GtkToggÀBuâ⁄Cœss
))

	)

48 
_GtkToggÀBuâ⁄
 
	tGtkToggÀBuâ⁄
;

49 
_GtkToggÀBuâ⁄Cœss
 
	tGtkToggÀBuâ⁄Cœss
;

51 
	s_GtkToggÀBuâ⁄


53 
GtkBuâ⁄
 
	mbuâ⁄
;

55 
guöt
 
GSEAL
 (
a˘ive
) : 1;

56 
guöt
 
GSEAL
 (
døw_ödiˇt‹
) : 1;

57 
guöt
 
GSEAL
 (
öc⁄si°ít
) : 1;

60 
	s_GtkToggÀBuâ⁄Cœss


62 
GtkBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

64 (* 
	mtoggÀd
Ë(
GtkToggÀBuâ⁄
 *
	mtoggÀ_buâ⁄
);

67 (*
	m_gtk_ª£rved1
) ();

68 (*
	m_gtk_ª£rved2
) ();

69 (*
	m_gtk_ª£rved3
) ();

70 (*
	m_gtk_ª£rved4
) ();

74 
GTy≥
 
	$gtk_toggÀ_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

76 
GtkWidgë
* 
	`gtk_toggÀ_buâ⁄_√w
 ();

77 
GtkWidgë
* 
	`gtk_toggÀ_buâ⁄_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

78 
GtkWidgë
* 
	`gtk_toggÀ_buâ⁄_√w_wôh_m√m⁄ic
 (c⁄° 
gch¨
 *
œbñ
);

79 
	`gtk_toggÀ_buâ⁄_£t_mode
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
,

80 
gboﬁón
 
døw_ödiˇt‹
);

81 
gboﬁón
 
	`gtk_toggÀ_buâ⁄_gë_mode
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
);

82 
	`gtk_toggÀ_buâ⁄_£t_a˘ive
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
,

83 
gboﬁón
 
is_a˘ive
);

84 
gboﬁón
 
	`gtk_toggÀ_buâ⁄_gë_a˘ive
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
);

85 
	`gtk_toggÀ_buâ⁄_toggÀd
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
);

86 
	`gtk_toggÀ_buâ⁄_£t_öc⁄si°ít
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
,

87 
gboﬁón
 
£âög
);

88 
gboﬁón
 
	`gtk_toggÀ_buâ⁄_gë_öc⁄si°ít
 (
GtkToggÀBuâ⁄
 *
toggÀ_buâ⁄
);

91 #i‚de‡
GTK_DISABLE_DEPRECATED


92 
	#gtk_toggÀ_buâ⁄_£t_°©e
 
gtk_toggÀ_buâ⁄_£t_a˘ive


	)

95 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h

23 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

27 #i‚de‡
__GTK_TOGGLE_TOOL_BUTTON_H__


28 
	#__GTK_TOGGLE_TOOL_BUTTON_H__


	)

30 
	~<gtk/gtktoﬁbuâ⁄.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_TOGGLE_TOOL_BUTTON
 (
	`gtk_toggÀ_toﬁ_buâ⁄_gë_ty≥
 ())

	)

35 
	#GTK_TOGGLE_TOOL_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOGGLE_TOOL_BUTTON
, 
GtkToggÀToﬁBuâ⁄
))

	)

36 
	#GTK_TOGGLE_TOOL_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOGGLE_TOOL_BUTTON
, 
GtkToggÀToﬁBuâ⁄Cœss
))

	)

37 
	#GTK_IS_TOGGLE_TOOL_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOGGLE_TOOL_BUTTON
))

	)

38 
	#GTK_IS_TOGGLE_TOOL_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOGGLE_TOOL_BUTTON
))

	)

39 
	#GTK_TOGGLE_TOOL_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_TOGGLE_TOOL_BUTTON
, 
GtkToggÀToﬁBuâ⁄Cœss
))

	)

41 
_GtkToggÀToﬁBuâ⁄
 
	tGtkToggÀToﬁBuâ⁄
;

42 
_GtkToggÀToﬁBuâ⁄Cœss
 
	tGtkToggÀToﬁBuâ⁄Cœss
;

43 
_GtkToggÀToﬁBuâ⁄Priv©e
 
	tGtkToggÀToﬁBuâ⁄Priv©e
;

45 
	s_GtkToggÀToﬁBuâ⁄


47 
GtkToﬁBuâ⁄
 
	m∑ª¡
;

50 
GtkToggÀToﬁBuâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

53 
	s_GtkToggÀToﬁBuâ⁄Cœss


55 
GtkToﬁBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

58 (* 
	mtoggÀd
Ë(
GtkToggÀToﬁBuâ⁄
 *
	mbuâ⁄
);

61 (* 
	m_gtk_ª£rved1
) ();

62 (* 
	m_gtk_ª£rved2
) ();

63 (* 
	m_gtk_ª£rved3
) ();

64 (* 
	m_gtk_ª£rved4
) ();

67 
GTy≥
 
	$gtk_toggÀ_toﬁ_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

68 
GtkToﬁIãm
 *
	`gtk_toggÀ_toﬁ_buâ⁄_√w
 ();

69 
GtkToﬁIãm
 *
	`gtk_toggÀ_toﬁ_buâ⁄_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
);

71 
	`gtk_toggÀ_toﬁ_buâ⁄_£t_a˘ive
 (
GtkToggÀToﬁBuâ⁄
 *
buâ⁄
,

72 
gboﬁón
 
is_a˘ive
);

73 
gboﬁón
 
	`gtk_toggÀ_toﬁ_buâ⁄_gë_a˘ive
 (
GtkToggÀToﬁBuâ⁄
 *
buâ⁄
);

75 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktoolbar.h

32 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

36 #i‚de‡
__GTK_TOOLBAR_H__


37 
	#__GTK_TOOLBAR_H__


	)

40 
	~<gtk/gtkc⁄èöî.h
>

41 
	~<gtk/gtktoﬁtùs.h
>

42 
	~<gtk/gtktoﬁôem.h
>

44 #i‚de‡
GTK_DISABLE_DEPRECATED


47 
	~<gtk/gtkpixm≠.h
>

48 
	~<gtk/gtksig«l.h
>

52 
	gG_BEGIN_DECLS


54 
	#GTK_TYPE_TOOLBAR
 (
	`gtk_toﬁb¨_gë_ty≥
 ())

	)

55 
	#GTK_TOOLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOOLBAR
, 
GtkToﬁb¨
))

	)

56 
	#GTK_TOOLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOOLBAR
, 
GtkToﬁb¨Cœss
))

	)

57 
	#GTK_IS_TOOLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOOLBAR
))

	)

58 
	#GTK_IS_TOOLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOOLBAR
))

	)

59 
	#GTK_TOOLBAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TOOLBAR
, 
GtkToﬁb¨Cœss
))

	)

61 #i‚de‡
GTK_DISABLE_DEPRECATED


64 
	mGTK_TOOLBAR_CHILD_SPACE
,

65 
	mGTK_TOOLBAR_CHILD_BUTTON
,

66 
	mGTK_TOOLBAR_CHILD_TOGGLEBUTTON
,

67 
	mGTK_TOOLBAR_CHILD_RADIOBUTTON
,

68 
	mGTK_TOOLBAR_CHILD_WIDGET


69 } 
	tGtkToﬁb¨ChûdTy≥
;

71 
_GtkToﬁb¨Chûd
 
	tGtkToﬁb¨Chûd
;

73 
	s_GtkToﬁb¨Chûd


75 
GtkToﬁb¨ChûdTy≥
 
	mty≥
;

76 
GtkWidgë
 *
	mwidgë
;

77 
GtkWidgë
 *
	mic⁄
;

78 
GtkWidgë
 *
	mœbñ
;

85 
	mGTK_TOOLBAR_SPACE_EMPTY
,

86 
	mGTK_TOOLBAR_SPACE_LINE


87 } 
	tGtkToﬁb¨S∑˚StyÀ
;

89 
_GtkToﬁb¨
 
	tGtkToﬁb¨
;

90 
_GtkToﬁb¨Cœss
 
	tGtkToﬁb¨Cœss
;

91 
_GtkToﬁb¨Priv©e
 
	tGtkToﬁb¨Priv©e
;

93 
	s_GtkToﬁb¨


95 
GtkC⁄èöî
 
	mc⁄èöî
;

98 
göt
 
GSEAL
 (
num_chûdªn
);

99 
GLi°
 *
GSEAL
 (
chûdªn
);

100 
GtkOrõ¡©i⁄
 
GSEAL
 (
‹õ¡©i⁄
);

101 
GtkToﬁb¨StyÀ
 
GSEAL
 (
°yÀ
);

102 
GtkIc⁄Size
 
GSEAL
 (
ic⁄_size
);

104 #i‚de‡
GTK_DISABLE_DEPRECATED


105 
GtkToﬁtùs
 *
GSEAL
 (
toﬁtùs
);

107 
gpoöãr
 
GSEAL
 (
_toﬁtùs
);

111 
göt
 
GSEAL
 (
buâ⁄_maxw
);

112 
göt
 
GSEAL
 (
buâ⁄_maxh
);

114 
guöt
 
	m_gtk_ª£rved1
;

115 
guöt
 
	m_gtk_ª£rved2
;

117 
guöt
 
GSEAL
 (
°yÀ_£t
) : 1;

118 
guöt
 
GSEAL
 (
ic⁄_size_£t
) : 1;

121 
	s_GtkToﬁb¨Cœss


123 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

126 (* 
	m‹õ¡©i⁄_ch™ged
Ë(
GtkToﬁb¨
 *
	mtoﬁb¨
,

127 
GtkOrõ¡©i⁄
 
	m‹õ¡©i⁄
);

128 (* 
	m°yÀ_ch™ged
Ë(
GtkToﬁb¨
 *
	mtoﬁb¨
,

129 
GtkToﬁb¨StyÀ
 
	m°yÀ
);

130 
gboﬁón
 (* 
p›up_c⁄ãxt_míu
Ë(
GtkToﬁb¨
 *
	mtoﬁb¨
,

131 
göt
 
	mx
,

132 
göt
 
	my
,

133 
göt
 
	mbuâ⁄_numbî
);

136 (*
	m_gtk_ª£rved1
) ();

137 (*
	m_gtk_ª£rved2
) ();

138 (*
	m_gtk_ª£rved3
) ();

141 
GTy≥
 
	$gtk_toﬁb¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

142 
GtkWidgë
 * 
	`gtk_toﬁb¨_√w
 ();

144 
	`gtk_toﬁb¨_ö£π
 (
GtkToﬁb¨
 *
toﬁb¨
,

145 
GtkToﬁIãm
 *
ôem
,

146 
göt
 
pos
);

148 
göt
 
	`gtk_toﬁb¨_gë_ôem_ödex
 (
GtkToﬁb¨
 *
toﬁb¨
,

149 
GtkToﬁIãm
 *
ôem
);

150 
göt
 
	`gtk_toﬁb¨_gë_n_ôems
 (
GtkToﬁb¨
 *
toﬁb¨
);

151 
GtkToﬁIãm
 * 
	`gtk_toﬁb¨_gë_¡h_ôem
 (
GtkToﬁb¨
 *
toﬁb¨
,

152 
göt
 
n
);

154 
gboﬁón
 
	`gtk_toﬁb¨_gë_show_¨row
 (
GtkToﬁb¨
 *
toﬁb¨
);

155 
	`gtk_toﬁb¨_£t_show_¨row
 (
GtkToﬁb¨
 *
toﬁb¨
,

156 
gboﬁón
 
show_¨row
);

158 
GtkToﬁb¨StyÀ
 
	`gtk_toﬁb¨_gë_°yÀ
 (
GtkToﬁb¨
 *
toﬁb¨
);

159 
	`gtk_toﬁb¨_£t_°yÀ
 (
GtkToﬁb¨
 *
toﬁb¨
,

160 
GtkToﬁb¨StyÀ
 
°yÀ
);

161 
	`gtk_toﬁb¨_un£t_°yÀ
 (
GtkToﬁb¨
 *
toﬁb¨
);

163 
GtkIc⁄Size
 
	`gtk_toﬁb¨_gë_ic⁄_size
 (
GtkToﬁb¨
 *
toﬁb¨
);

164 
	`gtk_toﬁb¨_£t_ic⁄_size
 (
GtkToﬁb¨
 *
toﬁb¨
,

165 
GtkIc⁄Size
 
ic⁄_size
);

166 
	`gtk_toﬁb¨_un£t_ic⁄_size
 (
GtkToﬁb¨
 *
toﬁb¨
);

168 
GtkRñõfStyÀ
 
	`gtk_toﬁb¨_gë_ªlõf_°yÀ
 (
GtkToﬁb¨
 *
toﬁb¨
);

169 
göt
 
	`gtk_toﬁb¨_gë_dr›_ödex
 (
GtkToﬁb¨
 *
toﬁb¨
,

170 
göt
 
x
,

171 
göt
 
y
);

172 
	`gtk_toﬁb¨_£t_dr›_highlight_ôem
 (
GtkToﬁb¨
 *
toﬁb¨
,

173 
GtkToﬁIãm
 *
toﬁ_ôem
,

174 
göt
 
ödex_
);

178 
gch¨
 * 
	`_gtk_toﬁb¨_ñide_undîsc‹es
 (c⁄° gch¨ *
‹igöÆ
);

179 
	`_gtk_toﬁb¨_∑öt_•a˚_löe
 (
GtkWidgë
 *
widgë
,

180 
GtkToﬁb¨
 *
toﬁb¨
,

181 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

182 c⁄° 
GtkAŒoˇti⁄
 *
Æloˇti⁄
);

183 
göt
 
	`_gtk_toﬁb¨_gë_deÁu…_•a˚_size
 ();

187 #i‚de‡
GTK_DISABLE_DEPRECATED


189 
GtkOrõ¡©i⁄
 
	`gtk_toﬁb¨_gë_‹õ¡©i⁄
 (
GtkToﬁb¨
 *
toﬁb¨
);

190 
	`gtk_toﬁb¨_£t_‹õ¡©i⁄
 (
GtkToﬁb¨
 *
toﬁb¨
,

191 
GtkOrõ¡©i⁄
 
‹õ¡©i⁄
);

192 
gboﬁón
 
	`gtk_toﬁb¨_gë_toﬁtùs
 (
GtkToﬁb¨
 *
toﬁb¨
);

193 
	`gtk_toﬁb¨_£t_toﬁtùs
 (
GtkToﬁb¨
 *
toﬁb¨
,

194 
gboﬁón
 
íabÀ
);

197 
GtkWidgë
* 
	`gtk_toﬁb¨_≠≥nd_ôem
 (
GtkToﬁb¨
 *
toﬁb¨
,

198 c⁄° *
ãxt
,

199 c⁄° *
toﬁtù_ãxt
,

200 c⁄° *
toﬁtù_¥iv©e_ãxt
,

201 
GtkWidgë
 *
ic⁄
,

202 
GCÆlback
 
ˇŒback
,

203 
gpoöãr
 
u£r_d©a
);

204 
GtkWidgë
* 
	`gtk_toﬁb¨_¥ïíd_ôem
 (
GtkToﬁb¨
 *
toﬁb¨
,

205 c⁄° *
ãxt
,

206 c⁄° *
toﬁtù_ãxt
,

207 c⁄° *
toﬁtù_¥iv©e_ãxt
,

208 
GtkWidgë
 *
ic⁄
,

209 
GCÆlback
 
ˇŒback
,

210 
gpoöãr
 
u£r_d©a
);

211 
GtkWidgë
* 
	`gtk_toﬁb¨_ö£π_ôem
 (
GtkToﬁb¨
 *
toﬁb¨
,

212 c⁄° *
ãxt
,

213 c⁄° *
toﬁtù_ãxt
,

214 c⁄° *
toﬁtù_¥iv©e_ãxt
,

215 
GtkWidgë
 *
ic⁄
,

216 
GCÆlback
 
ˇŒback
,

217 
gpoöãr
 
u£r_d©a
,

218 
göt
 
posôi⁄
);

221 
GtkWidgë
* 
	`gtk_toﬁb¨_ö£π_°ock
 (
GtkToﬁb¨
 *
toﬁb¨
,

222 c⁄° 
gch¨
 *
°ock_id
,

223 c⁄° *
toﬁtù_ãxt
,

224 c⁄° *
toﬁtù_¥iv©e_ãxt
,

225 
GCÆlback
 
ˇŒback
,

226 
gpoöãr
 
u£r_d©a
,

227 
göt
 
posôi⁄
);

230 
	`gtk_toﬁb¨_≠≥nd_•a˚
 (
GtkToﬁb¨
 *
toﬁb¨
);

231 
	`gtk_toﬁb¨_¥ïíd_•a˚
 (
GtkToﬁb¨
 *
toﬁb¨
);

232 
	`gtk_toﬁb¨_ö£π_•a˚
 (
GtkToﬁb¨
 *
toﬁb¨
,

233 
göt
 
posôi⁄
);

234 
	`gtk_toﬁb¨_ªmove_•a˚
 (
GtkToﬁb¨
 *
toﬁb¨
,

235 
göt
 
posôi⁄
);

237 
GtkWidgë
* 
	`gtk_toﬁb¨_≠≥nd_ñemít
 (
GtkToﬁb¨
 *
toﬁb¨
,

238 
GtkToﬁb¨ChûdTy≥
 
ty≥
,

239 
GtkWidgë
 *
widgë
,

240 c⁄° *
ãxt
,

241 c⁄° *
toﬁtù_ãxt
,

242 c⁄° *
toﬁtù_¥iv©e_ãxt
,

243 
GtkWidgë
 *
ic⁄
,

244 
GCÆlback
 
ˇŒback
,

245 
gpoöãr
 
u£r_d©a
);

247 
GtkWidgë
* 
	`gtk_toﬁb¨_¥ïíd_ñemít
 (
GtkToﬁb¨
 *
toﬁb¨
,

248 
GtkToﬁb¨ChûdTy≥
 
ty≥
,

249 
GtkWidgë
 *
widgë
,

250 c⁄° *
ãxt
,

251 c⁄° *
toﬁtù_ãxt
,

252 c⁄° *
toﬁtù_¥iv©e_ãxt
,

253 
GtkWidgë
 *
ic⁄
,

254 
GCÆlback
 
ˇŒback
,

255 
gpoöãr
 
u£r_d©a
);

257 
GtkWidgë
* 
	`gtk_toﬁb¨_ö£π_ñemít
 (
GtkToﬁb¨
 *
toﬁb¨
,

258 
GtkToﬁb¨ChûdTy≥
 
ty≥
,

259 
GtkWidgë
 *
widgë
,

260 c⁄° *
ãxt
,

261 c⁄° *
toﬁtù_ãxt
,

262 c⁄° *
toﬁtù_¥iv©e_ãxt
,

263 
GtkWidgë
 *
ic⁄
,

264 
GCÆlback
 
ˇŒback
,

265 
gpoöãr
 
u£r_d©a
,

266 
göt
 
posôi⁄
);

269 
	`gtk_toﬁb¨_≠≥nd_widgë
 (
GtkToﬁb¨
 *
toﬁb¨
,

270 
GtkWidgë
 *
widgë
,

271 c⁄° *
toﬁtù_ãxt
,

272 c⁄° *
toﬁtù_¥iv©e_ãxt
);

273 
	`gtk_toﬁb¨_¥ïíd_widgë
 (
GtkToﬁb¨
 *
toﬁb¨
,

274 
GtkWidgë
 *
widgë
,

275 c⁄° *
toﬁtù_ãxt
,

276 c⁄° *
toﬁtù_¥iv©e_ãxt
);

277 
	`gtk_toﬁb¨_ö£π_widgë
 (
GtkToﬁb¨
 *
toﬁb¨
,

278 
GtkWidgë
 *
widgë
,

279 c⁄° *
toﬁtù_ãxt
,

280 c⁄° *
toﬁtù_¥iv©e_ãxt
,

281 
göt
 
posôi⁄
);

286 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktoolbutton.h

23 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

27 #i‚de‡
__GTK_TOOL_BUTTON_H__


28 
	#__GTK_TOOL_BUTTON_H__


	)

30 
	~<gtk/gtktoﬁôem.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_TOOL_BUTTON
 (
	`gtk_toﬁ_buâ⁄_gë_ty≥
 ())

	)

35 
	#GTK_TOOL_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOOL_BUTTON
, 
GtkToﬁBuâ⁄
))

	)

36 
	#GTK_TOOL_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOOL_BUTTON
, 
GtkToﬁBuâ⁄Cœss
))

	)

37 
	#GTK_IS_TOOL_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOOL_BUTTON
))

	)

38 
	#GTK_IS_TOOL_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOOL_BUTTON
))

	)

39 
	#GTK_TOOL_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_TOOL_BUTTON
, 
GtkToﬁBuâ⁄Cœss
))

	)

41 
_GtkToﬁBuâ⁄
 
	tGtkToﬁBuâ⁄
;

42 
_GtkToﬁBuâ⁄Cœss
 
	tGtkToﬁBuâ⁄Cœss
;

43 
_GtkToﬁBuâ⁄Priv©e
 
	tGtkToﬁBuâ⁄Priv©e
;

45 
	s_GtkToﬁBuâ⁄


47 
GtkToﬁIãm
 
	m∑ª¡
;

50 
GtkToﬁBuâ⁄Priv©e
 *
GSEAL
 (
¥iv
);

53 
	s_GtkToﬁBuâ⁄Cœss


55 
GtkToﬁIãmCœss
 
	m∑ª¡_˛ass
;

57 
GTy≥
 
	mbuâ⁄_ty≥
;

60 (* 
	m˛icked
Ë(
GtkToﬁBuâ⁄
 *
	mtoﬁ_ôem
);

63 (* 
	m_gtk_ª£rved1
) ();

64 (* 
	m_gtk_ª£rved2
) ();

65 (* 
	m_gtk_ª£rved3
) ();

66 (* 
	m_gtk_ª£rved4
) ();

69 
GTy≥
 
	$gtk_toﬁ_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GtkToﬁIãm
 *
	`gtk_toﬁ_buâ⁄_√w
 (
GtkWidgë
 *
ic⁄_widgë
,

71 c⁄° 
gch¨
 *
œbñ
);

72 
GtkToﬁIãm
 *
	`gtk_toﬁ_buâ⁄_√w_‰om_°ock
 (c⁄° 
gch¨
 *
°ock_id
);

74 
	`gtk_toﬁ_buâ⁄_£t_œbñ
 (
GtkToﬁBuâ⁄
 *
buâ⁄
,

75 c⁄° 
gch¨
 *
œbñ
);

76 
G_CONST_RETURN
 
gch¨
 *
	`gtk_toﬁ_buâ⁄_gë_œbñ
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

77 
	`gtk_toﬁ_buâ⁄_£t_u£_undîlöe
 (
GtkToﬁBuâ⁄
 *
buâ⁄
,

78 
gboﬁón
 
u£_undîlöe
);

79 
gboﬁón
 
	`gtk_toﬁ_buâ⁄_gë_u£_undîlöe
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

80 
	`gtk_toﬁ_buâ⁄_£t_°ock_id
 (
GtkToﬁBuâ⁄
 *
buâ⁄
,

81 c⁄° 
gch¨
 *
°ock_id
);

82 
G_CONST_RETURN
 
gch¨
 *
	`gtk_toﬁ_buâ⁄_gë_°ock_id
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

83 
	`gtk_toﬁ_buâ⁄_£t_ic⁄_«me
 (
GtkToﬁBuâ⁄
 *
buâ⁄
,

84 c⁄° 
gch¨
 *
ic⁄_«me
);

85 
G_CONST_RETURN
 
gch¨
 *
	`gtk_toﬁ_buâ⁄_gë_ic⁄_«me
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

86 
	`gtk_toﬁ_buâ⁄_£t_ic⁄_widgë
 (
GtkToﬁBuâ⁄
 *
buâ⁄
,

87 
GtkWidgë
 *
ic⁄_widgë
);

88 
GtkWidgë
 * 
	`gtk_toﬁ_buâ⁄_gë_ic⁄_widgë
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

89 
	`gtk_toﬁ_buâ⁄_£t_œbñ_widgë
 (
GtkToﬁBuâ⁄
 *
buâ⁄
,

90 
GtkWidgë
 *
œbñ_widgë
);

91 
GtkWidgë
 * 
	`gtk_toﬁ_buâ⁄_gë_œbñ_widgë
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

95 
GtkWidgë
 *
	`_gtk_toﬁ_buâ⁄_gë_buâ⁄
 (
GtkToﬁBuâ⁄
 *
buâ⁄
);

97 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktoolitem.h

23 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

27 #i‚de‡
__GTK_TOOL_ITEM_H__


28 
	#__GTK_TOOL_ITEM_H__


	)

30 
	~<gtk/gtkbö.h
>

31 
	~<gtk/gtktoﬁtùs.h
>

32 
	~<gtk/gtkmíuôem.h
>

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_TOOL_ITEM
 (
	`gtk_toﬁ_ôem_gë_ty≥
 ())

	)

37 
	#GTK_TOOL_ITEM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
GTK_TYPE_TOOL_ITEM
, 
GtkToﬁIãm
))

	)

38 
	#GTK_TOOL_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOOL_ITEM
, 
GtkToﬁIãmCœss
))

	)

39 
	#GTK_IS_TOOL_ITEM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
GTK_TYPE_TOOL_ITEM
))

	)

40 
	#GTK_IS_TOOL_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOOL_ITEM
))

	)

41 
	#GTK_TOOL_ITEM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((o), 
GTK_TYPE_TOOL_ITEM
, 
GtkToﬁIãmCœss
))

	)

43 
_GtkToﬁIãm
 
	tGtkToﬁIãm
;

44 
_GtkToﬁIãmCœss
 
	tGtkToﬁIãmCœss
;

45 
_GtkToﬁIãmPriv©e
 
	tGtkToﬁIãmPriv©e
;

47 
	s_GtkToﬁIãm


49 
GtkBö
 
	m∑ª¡
;

52 
GtkToﬁIãmPriv©e
 *
GSEAL
 (
¥iv
);

55 
	s_GtkToﬁIãmCœss


57 
GtkBöCœss
 
	m∑ª¡_˛ass
;

60 
gboﬁón
 (* 
¸óã_míu_¥oxy
Ë(
GtkToﬁIãm
 *
	mtoﬁ_ôem
);

61 (* 
	mtoﬁb¨_ªc⁄figuªd
Ë(
GtkToﬁIãm
 *
	mtoﬁ_ôem
);

62 #i‚de‡
GTK_DISABLE_DEPRECATED


63 
gboﬁón
 (* 
£t_toﬁtù
Ë(
GtkToﬁIãm
 *
	mtoﬁ_ôem
,

64 
GtkToﬁtùs
 *
	mtoﬁtùs
,

65 c⁄° 
gch¨
 *
	mtù_ãxt
,

66 c⁄° 
gch¨
 *
	mtù_¥iv©e
);

68 
gpoöãr
 
	m_£t_toﬁtù
;

72 (* 
	m_gtk_ª£rved1
) ();

73 (* 
	m_gtk_ª£rved2
) ();

74 (* 
	m_gtk_ª£rved3
) ();

75 (* 
	m_gtk_ª£rved4
) ();

78 
GTy≥
 
	$gtk_toﬁ_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
GtkToﬁIãm
 *
	`gtk_toﬁ_ôem_√w
 ();

81 
	`gtk_toﬁ_ôem_£t_homogíeous
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

82 
gboﬁón
 
homogíeous
);

83 
gboﬁón
 
	`gtk_toﬁ_ôem_gë_homogíeous
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

85 
	`gtk_toﬁ_ôem_£t_ex∑nd
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

86 
gboﬁón
 
ex∑nd
);

87 
gboﬁón
 
	`gtk_toﬁ_ôem_gë_ex∑nd
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

89 #i‚de‡
GTK_DISABLE_DEPRECATED


90 
	`gtk_toﬁ_ôem_£t_toﬁtù
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

91 
GtkToﬁtùs
 *
toﬁtùs
,

92 c⁄° 
gch¨
 *
tù_ãxt
,

93 c⁄° 
gch¨
 *
tù_¥iv©e
);

95 
	`gtk_toﬁ_ôem_£t_toﬁtù_ãxt
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

96 c⁄° 
gch¨
 *
ãxt
);

97 
	`gtk_toﬁ_ôem_£t_toﬁtù_m¨kup
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

98 c⁄° 
gch¨
 *
m¨kup
);

100 
	`gtk_toﬁ_ôem_£t_u£_døg_wödow
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

101 
gboﬁón
 
u£_døg_wödow
);

102 
gboﬁón
 
	`gtk_toﬁ_ôem_gë_u£_døg_wödow
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

104 
	`gtk_toﬁ_ôem_£t_visibÀ_h‹iz⁄èl
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

105 
gboﬁón
 
visibÀ_h‹iz⁄èl
);

106 
gboﬁón
 
	`gtk_toﬁ_ôem_gë_visibÀ_h‹iz⁄èl
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

108 
	`gtk_toﬁ_ôem_£t_visibÀ_vîtiˇl
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

109 
gboﬁón
 
visibÀ_vîtiˇl
);

110 
gboﬁón
 
	`gtk_toﬁ_ôem_gë_visibÀ_vîtiˇl
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

112 
gboﬁón
 
	`gtk_toﬁ_ôem_gë_is_imp‹è¡
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

113 
	`gtk_toﬁ_ôem_£t_is_imp‹è¡
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

114 
gboﬁón
 
is_imp‹è¡
);

116 
GtkIc⁄Size
 
	`gtk_toﬁ_ôem_gë_ic⁄_size
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

117 
GtkOrõ¡©i⁄
 
	`gtk_toﬁ_ôem_gë_‹õ¡©i⁄
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

118 
GtkToﬁb¨StyÀ
 
	`gtk_toﬁ_ôem_gë_toﬁb¨_°yÀ
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

119 
GtkRñõfStyÀ
 
	`gtk_toﬁ_ôem_gë_ªlõf_°yÀ
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

121 
GtkWidgë
 * 
	`gtk_toﬁ_ôem_ªåõve_¥oxy_míu_ôem
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

122 
GtkWidgë
 * 
	`gtk_toﬁ_ôem_gë_¥oxy_míu_ôem
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

123 c⁄° 
gch¨
 *
míu_ôem_id
);

124 
	`gtk_toﬁ_ôem_£t_¥oxy_míu_ôem
 (
GtkToﬁIãm
 *
toﬁ_ôem
,

125 c⁄° 
gch¨
 *
míu_ôem_id
,

126 
GtkWidgë
 *
míu_ôem
);

127 
	`gtk_toﬁ_ôem_ªbuûd_míu
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

129 
	`gtk_toﬁ_ôem_toﬁb¨_ªc⁄figuªd
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

133 
gboﬁón
 
	`_gtk_toﬁ_ôem_¸óã_míu_¥oxy
 (
GtkToﬁIãm
 *
toﬁ_ôem
);

135 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktoolshell.h

23 #i‡!
deföed
 (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

27 #i‚de‡
__GTK_TOOL_SHELL_H__


28 
	#__GTK_TOOL_SHELL_H__


	)

31 
	~<gtk/gtkíums.h
>

34 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_TOOL_SHELL
 (
	`gtk_toﬁ_shñl_gë_ty≥
 ())

	)

37 
	#GTK_TOOL_SHELL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOOL_SHELL
, 
GtkToﬁShñl
))

	)

38 
	#GTK_IS_TOOL_SHELL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOOL_SHELL
))

	)

39 
	#GTK_TOOL_SHELL_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_TOOL_SHELL
, 
GtkToﬁShñlIÁ˚
))

	)

41 
_GtkToﬁShñl
 
	tGtkToﬁShñl
;

42 
_GtkToﬁShñlIÁ˚
 
	tGtkToﬁShñlIÁ˚
;

54 
	s_GtkToﬁShñlIÁ˚


57 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

60 
GtkIc⁄Size
 (*
gë_ic⁄_size
Ë(
GtkToﬁShñl
 *
	mshñl
);

61 
GtkOrõ¡©i⁄
 (*
gë_‹õ¡©i⁄
Ë(
GtkToﬁShñl
 *
	mshñl
);

62 
GtkToﬁb¨StyÀ
 (*
gë_°yÀ
Ë(
GtkToﬁShñl
 *
	mshñl
);

63 
GtkRñõfStyÀ
 (*
gë_ªlõf_°yÀ
Ë(
GtkToﬁShñl
 *
	mshñl
);

64 (*
	mªbuûd_míu
Ë(
GtkToﬁShñl
 *
	mshñl
);

67 
GTy≥
 
	$gtk_toﬁ_shñl_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GtkIc⁄Size
 
	`gtk_toﬁ_shñl_gë_ic⁄_size
 (
GtkToﬁShñl
 *
shñl
);

70 
GtkOrõ¡©i⁄
 
	`gtk_toﬁ_shñl_gë_‹õ¡©i⁄
 (
GtkToﬁShñl
 *
shñl
);

71 
GtkToﬁb¨StyÀ
 
	`gtk_toﬁ_shñl_gë_°yÀ
 (
GtkToﬁShñl
 *
shñl
);

72 
GtkRñõfStyÀ
 
	`gtk_toﬁ_shñl_gë_ªlõf_°yÀ
 (
GtkToﬁShñl
 *
shñl
);

73 
	`gtk_toﬁ_shñl_ªbuûd_míu
 (
GtkToﬁShñl
 *
shñl
);

75 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktooltip.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

26 #i‚de‡
__GTK_TOOLTIP_H__


27 
	#__GTK_TOOLTIP_H__


	)

29 
	~<gtk/gtkwödow.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_TOOLTIP
 (
	`gtk_toﬁtù_gë_ty≥
 ())

	)

34 
	#GTK_TOOLTIP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOOLTIP
, 
GtkToﬁtù
))

	)

35 
	#GTK_IS_TOOLTIP
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOOLTIP
))

	)

37 
GTy≥
 
gtk_toﬁtù_gë_ty≥
 ();

39 
gtk_toﬁtù_£t_m¨kup
 (
GtkToﬁtù
 *
toﬁtù
,

40 c⁄° 
gch¨
 *
m¨kup
);

41 
gtk_toﬁtù_£t_ãxt
 (
GtkToﬁtù
 *
toﬁtù
,

42 c⁄° 
gch¨
 *
ãxt
);

43 
gtk_toﬁtù_£t_ic⁄
 (
GtkToﬁtù
 *
toﬁtù
,

44 
GdkPixbuf
 *
pixbuf
);

45 
gtk_toﬁtù_£t_ic⁄_‰om_°ock
 (
GtkToﬁtù
 *
toﬁtù
,

46 c⁄° 
gch¨
 *
°ock_id
,

47 
GtkIc⁄Size
 
size
);

48 
gtk_toﬁtù_£t_ic⁄_‰om_ic⁄_«me
 (
GtkToﬁtù
 *
toﬁtù
,

49 c⁄° 
gch¨
 *
ic⁄_«me
,

50 
GtkIc⁄Size
 
size
);

51 
gtk_toﬁtù_£t_cu°om
 (
GtkToﬁtù
 *
toﬁtù
,

52 
GtkWidgë
 *
cu°om_widgë
);

54 
gtk_toﬁtù_£t_tù_¨ó
 (
GtkToﬁtù
 *
toﬁtù
,

55 c⁄° 
GdkRe˘™gÀ
 *
ª˘
);

57 
gtk_toﬁtù_åiggî_toﬁtù_quîy
 (
GdkDi•œy
 *
di•œy
);

60 
_gtk_toﬁtù_focus_ö
 (
GtkWidgë
 *
widgë
);

61 
_gtk_toﬁtù_focus_out
 (
GtkWidgë
 *
widgë
);

62 
_gtk_toﬁtù_toggÀ_keybﬂrd_mode
 (
GtkWidgë
 *
widgë
);

63 
_gtk_toﬁtù_h™dÀ_evít
 (
GdkEvít
 *
evít
);

64 
_gtk_toﬁtù_hide
 (
GtkWidgë
 *
widgë
);

66 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktooltips.h

27 #i‚de‡
GTK_DISABLE_DEPRECATED


29 #i‚de‡
__GTK_TOOLTIPS_H__


30 
	#__GTK_TOOLTIPS_H__


	)

32 
	~<gtk/gtkwidgë.h
>

33 
	~<gtk/gtkwödow.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_TOOLTIPS
 (
	`gtk_toﬁtùs_gë_ty≥
 ())

	)

39 
	#GTK_TOOLTIPS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TOOLTIPS
, 
GtkToﬁtùs
))

	)

40 
	#GTK_TOOLTIPS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TOOLTIPS
, 
GtkToﬁtùsCœss
))

	)

41 
	#GTK_IS_TOOLTIPS
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TOOLTIPS
))

	)

42 
	#GTK_IS_TOOLTIPS_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TOOLTIPS
))

	)

43 
	#GTK_TOOLTIPS_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TOOLTIPS
, 
GtkToﬁtùsCœss
))

	)

46 
_GtkToﬁtùs
 
	tGtkToﬁtùs
;

47 
_GtkToﬁtùsCœss
 
	tGtkToﬁtùsCœss
;

48 
_GtkToﬁtùsD©a
 
	tGtkToﬁtùsD©a
;

50 
	s_GtkToﬁtùsD©a


52 
GtkToﬁtùs
 *
	mtoﬁtùs
;

53 
GtkWidgë
 *
	mwidgë
;

54 
gch¨
 *
	mtù_ãxt
;

55 
gch¨
 *
	mtù_¥iv©e
;

58 
	s_GtkToﬁtùs


60 
GtkObje˘
 
	m∑ª¡_ö°™˚
;

63 
GtkWidgë
 *
	mtù_wödow
;

64 
GtkWidgë
 *
	mtù_œbñ
;

65 
GtkToﬁtùsD©a
 *
	ma˘ive_tùs_d©a
;

66 
GLi°
 *
	mtùs_d©a_li°
;

68 
guöt
 
	mdñay
 : 30;

69 
guöt
 
	míabÀd
 : 1;

70 
guöt
 
	mhave_gøb
 : 1;

71 
guöt
 
	mu£_°icky_dñay
 : 1;

72 
göt
 
	mtimî_èg
;

73 
GTimeVÆ
 
	mœ°_p›down
;

76 
	s_GtkToﬁtùsCœss


78 
GtkObje˘Cœss
 
	m∑ª¡_˛ass
;

81 (*
	m_gtk_ª£rved1
) ();

82 (*
	m_gtk_ª£rved2
) ();

83 (*
	m_gtk_ª£rved3
) ();

84 (*
	m_gtk_ª£rved4
) ();

87 
GTy≥
 
	$gtk_toﬁtùs_gë_ty≥
 (Ë
G_GNUC_CONST
;

88 
GtkToﬁtùs
* 
	`gtk_toﬁtùs_√w
 ();

90 
	`gtk_toﬁtùs_íabÀ
 (
GtkToﬁtùs
 *
toﬁtùs
);

91 
	`gtk_toﬁtùs_dißbÀ
 (
GtkToﬁtùs
 *
toﬁtùs
);

92 
	`gtk_toﬁtùs_£t_dñay
 (
GtkToﬁtùs
 *
toﬁtùs
,

93 
guöt
 
dñay
);

94 
	`gtk_toﬁtùs_£t_tù
 (
GtkToﬁtùs
 *
toﬁtùs
,

95 
GtkWidgë
 *
widgë
,

96 c⁄° 
gch¨
 *
tù_ãxt
,

97 c⁄° 
gch¨
 *
tù_¥iv©e
);

98 
GtkToﬁtùsD©a
* 
	`gtk_toﬁtùs_d©a_gë
 (
GtkWidgë
 *
widgë
);

99 
	`gtk_toﬁtùs_f‹˚_wödow
 (
GtkToﬁtùs
 *
toﬁtùs
);

101 
gboﬁón
 
	`gtk_toﬁtùs_gë_öfo_‰om_tù_wödow
 (
GtkWödow
 *
tù_wödow
,

102 
GtkToﬁtùs
 **
toﬁtùs
,

103 
GtkWidgë
 **
cuºít_widgë
);

105 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktree.h

27 #ifde‡
GTK_ENABLE_BROKEN


29 #i‚de‡
__GTK_TREE_H__


30 
	#__GTK_TREE_H__


	)

33 
	~<gtk/gtkc⁄èöî.h
>

36 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_TREE
 (
	`gtk_åì_gë_ty≥
 ())

	)

42 
	#GTK_TREE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE
, 
GtkTªe
))

	)

43 
	#GTK_TREE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE
, 
GtkTªeCœss
))

	)

44 
	#GTK_IS_TREE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE
))

	)

45 
	#GTK_IS_TREE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE
))

	)

46 
	#GTK_TREE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE
, 
GtkTªeCœss
))

	)

49 
	#GTK_IS_ROOT_TREE
(
obj
Ë((
GtkObje˘
*Ë
	`GTK_TREE
(obj)->
roŸ_åì
 =(GtkObje˘*)obj)

	)

50 
	#GTK_TREE_ROOT_TREE
(
obj
Ë(
	`GTK_TREE
(obj)->
roŸ_åì
 ? GTK_TREE(obj)->roŸ_åì : GTK_TREE(obj))

	)

51 
	#GTK_TREE_SELECTION_OLD
(
obj
Ë(
	`GTK_TREE_ROOT_TREE
(obj)->
£À˘i⁄
)

	)

55 
	mGTK_TREE_VIEW_LINE
,

56 
	mGTK_TREE_VIEW_ITEM


57 } 
	tGtkTªeVõwMode
;

59 
_GtkTªe
 
	tGtkTªe
;

60 
_GtkTªeCœss
 
	tGtkTªeCœss
;

62 
	s_GtkTªe


64 
GtkC⁄èöî
 
	mc⁄èöî
;

66 
GLi°
 *
	mchûdªn
;

68 
GtkTªe
* 
	mroŸ_åì
;

69 
GtkWidgë
* 
	måì_ow√r
;

70 
GLi°
 *
	m£À˘i⁄
;

71 
guöt
 
	mÀvñ
;

72 
guöt
 
	mödít_vÆue
;

73 
guöt
 
	mcuºít_ödít
;

74 
guöt
 
	m£À˘i⁄_mode
 : 2;

75 
guöt
 
	mvõw_mode
 : 1;

76 
guöt
 
	mvõw_löe
 : 1;

79 
	s_GtkTªeCœss


81 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

83 (* 
	m£À˘i⁄_ch™ged
Ë(
GtkTªe
 *
	måì
);

84 (* 
	m£À˘_chûd
Ë(
GtkTªe
 *
	måì
,

85 
GtkWidgë
 *
	mchûd
);

86 (* 
	mun£À˘_chûd
Ë(
GtkTªe
 *
	måì
,

87 
GtkWidgë
 *
	mchûd
);

91 
GTy≥
 
	$gtk_åì_gë_ty≥
 (Ë
G_GNUC_CONST
;

92 
GtkWidgë
* 
	`gtk_åì_√w
 ();

93 
	`gtk_åì_≠≥nd
 (
GtkTªe
 *
åì
,

94 
GtkWidgë
 *
åì_ôem
);

95 
	`gtk_åì_¥ïíd
 (
GtkTªe
 *
åì
,

96 
GtkWidgë
 *
åì_ôem
);

97 
	`gtk_åì_ö£π
 (
GtkTªe
 *
åì
,

98 
GtkWidgë
 *
åì_ôem
,

99 
göt
 
posôi⁄
);

100 
	`gtk_åì_ªmove_ôems
 (
GtkTªe
 *
åì
,

101 
GLi°
 *
ôems
);

102 
	`gtk_åì_˛ór_ôems
 (
GtkTªe
 *
åì
,

103 
göt
 
°¨t
,

104 
göt
 
íd
);

105 
	`gtk_åì_£À˘_ôem
 (
GtkTªe
 *
åì
,

106 
göt
 
ôem
);

107 
	`gtk_åì_un£À˘_ôem
 (
GtkTªe
 *
åì
,

108 
göt
 
ôem
);

109 
	`gtk_åì_£À˘_chûd
 (
GtkTªe
 *
åì
,

110 
GtkWidgë
 *
åì_ôem
);

111 
	`gtk_åì_un£À˘_chûd
 (
GtkTªe
 *
åì
,

112 
GtkWidgë
 *
åì_ôem
);

113 
göt
 
	`gtk_åì_chûd_posôi⁄
 (
GtkTªe
 *
åì
,

114 
GtkWidgë
 *
chûd
);

115 
	`gtk_åì_£t_£À˘i⁄_mode
 (
GtkTªe
 *
åì
,

116 
GtkSñe˘i⁄Mode
 
mode
);

117 
	`gtk_åì_£t_võw_mode
 (
GtkTªe
 *
åì
,

118 
GtkTªeVõwMode
 
mode
);

119 
	`gtk_åì_£t_võw_löes
 (
GtkTªe
 *
åì
,

120 
gboﬁón
 
Êag
);

124 
	`gtk_åì_ªmove_ôem
 (
GtkTªe
 *
åì
,

125 
GtkWidgë
 *
chûd
);

128 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreednd.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_DND_H__


25 
	#__GTK_TREE_DND_H__


	)

27 
	~<gtk/gtkåìmodñ.h
>

28 
	~<gtk/gtkdnd.h
>

30 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_TREE_DRAG_SOURCE
 (
	`gtk_åì_døg_sour˚_gë_ty≥
 ())

	)

33 
	#GTK_TREE_DRAG_SOURCE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_DRAG_SOURCE
, 
GtkTªeDøgSour˚
))

	)

34 
	#GTK_IS_TREE_DRAG_SOURCE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_DRAG_SOURCE
))

	)

35 
	#GTK_TREE_DRAG_SOURCE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_TREE_DRAG_SOURCE
, 
GtkTªeDøgSour˚IÁ˚
))

	)

37 
_GtkTªeDøgSour˚
 
	tGtkTªeDøgSour˚
;

38 
_GtkTªeDøgSour˚IÁ˚
 
	tGtkTªeDøgSour˚IÁ˚
;

40 
	s_GtkTªeDøgSour˚IÁ˚


42 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

46 
gboﬁón
 (* 
row_døggabÀ
Ë(
GtkTªeDøgSour˚
 *
	mdøg_sour˚
,

47 
GtkTªeP©h
 *
	m∑th
);

49 
gboﬁón
 (* 
døg_d©a_gë
Ë(
GtkTªeDøgSour˚
 *
	mdøg_sour˚
,

50 
GtkTªeP©h
 *
	m∑th
,

51 
GtkSñe˘i⁄D©a
 *
	m£À˘i⁄_d©a
);

53 
gboﬁón
 (* 
døg_d©a_dñëe
Ë(
GtkTªeDøgSour˚
 *
	mdøg_sour˚
,

54 
GtkTªeP©h
 *
	m∑th
);

57 
GTy≥
 
	$gtk_åì_døg_sour˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

60 
gboﬁón
 
	`gtk_åì_døg_sour˚_row_døggabÀ
 (
GtkTªeDøgSour˚
 *
døg_sour˚
,

61 
GtkTªeP©h
 *
∑th
);

64 
gboﬁón
 
	`gtk_åì_døg_sour˚_døg_d©a_dñëe
 (
GtkTªeDøgSour˚
 *
døg_sour˚
,

65 
GtkTªeP©h
 *
∑th
);

70 
gboﬁón
 
	`gtk_åì_døg_sour˚_døg_d©a_gë
 (
GtkTªeDøgSour˚
 *
døg_sour˚
,

71 
GtkTªeP©h
 *
∑th
,

72 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

74 
	#GTK_TYPE_TREE_DRAG_DEST
 (
	`gtk_åì_døg_de°_gë_ty≥
 ())

	)

75 
	#GTK_TREE_DRAG_DEST
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_DRAG_DEST
, 
GtkTªeDøgDe°
))

	)

76 
	#GTK_IS_TREE_DRAG_DEST
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_DRAG_DEST
))

	)

77 
	#GTK_TREE_DRAG_DEST_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_TREE_DRAG_DEST
, 
GtkTªeDøgDe°IÁ˚
))

	)

79 
_GtkTªeDøgDe°
 
	tGtkTªeDøgDe°
;

80 
_GtkTªeDøgDe°IÁ˚
 
	tGtkTªeDøgDe°IÁ˚
;

82 
	s_GtkTªeDøgDe°IÁ˚


84 
GTy≥I¡îÁ˚
 
g_iÁ˚
;

88 
	`gboﬁón
 (* 
døg_d©a_ª˚ived
Ë(
GtkTªeDøgDe°
 *
døg_de°
,

89 
GtkTªeP©h
 *
de°
,

90 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

92 
	`gboﬁón
 (* 
row_dr›_possibÀ
Ë(
GtkTªeDøgDe°
 *
døg_de°
,

93 
GtkTªeP©h
 *
de°_∑th
,

94 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

97 
GTy≥
 
	$gtk_åì_døg_de°_gë_ty≥
 (Ë
G_GNUC_CONST
;

102 
gboﬁón
 
	`gtk_åì_døg_de°_døg_d©a_ª˚ived
 (
GtkTªeDøgDe°
 *
døg_de°
,

103 
GtkTªeP©h
 *
de°
,

104 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

108 
gboﬁón
 
	`gtk_åì_døg_de°_row_dr›_possibÀ
 (
GtkTªeDøgDe°
 *
døg_de°
,

109 
GtkTªeP©h
 *
de°_∑th
,

110 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
);

116 
gboﬁón
 
	`gtk_åì_£t_row_døg_d©a
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

117 
GtkTªeModñ
 *
åì_modñ
,

118 
GtkTªeP©h
 *
∑th
);

119 
gboﬁón
 
	`gtk_åì_gë_row_døg_d©a
 (
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

120 
GtkTªeModñ
 **
åì_modñ
,

121 
GtkTªeP©h
 **
∑th
);

123 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreeitem.h

27 #ifde‡
GTK_ENABLE_BROKEN


29 #i‚de‡
__GTK_TREE_ITEM_H__


30 
	#__GTK_TREE_ITEM_H__


	)

33 
	~<gtk/gtkôem.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_TREE_ITEM
 (
	`gtk_åì_ôem_gë_ty≥
 ())

	)

39 
	#GTK_TREE_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_ITEM
, 
GtkTªeIãm
))

	)

40 
	#GTK_TREE_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE_ITEM
, 
GtkTªeIãmCœss
))

	)

41 
	#GTK_IS_TREE_ITEM
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_ITEM
))

	)

42 
	#GTK_IS_TREE_ITEM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE_ITEM
))

	)

43 
	#GTK_TREE_ITEM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE_ITEM
, 
GtkTªeIãmCœss
))

	)

46 
	#GTK_TREE_ITEM_SUBTREE
(
obj
Ë(
	`GTK_TREE_ITEM
(obj)->
subåì
)

	)

49 
_GtkTªeIãm
 
	tGtkTªeIãm
;

50 
_GtkTªeIãmCœss
 
	tGtkTªeIãmCœss
;

52 
	s_GtkTªeIãm


54 
GtkIãm
 
	môem
;

56 
GtkWidgë
 *
	msubåì
;

57 
GtkWidgë
 *
	mpixm≠s_box
;

58 
GtkWidgë
 *
	m∂us_pix_widgë
, *
	mmöus_pix_widgë
;

60 
GLi°
 *
	mpixm≠s
;

62 
guöt
 
	mex∑nded
 : 1;

65 
	s_GtkTªeIãmCœss


67 
GtkIãmCœss
 
	m∑ª¡_˛ass
;

69 (* 
	mex∑nd
Ë(
GtkTªeIãm
 *
	måì_ôem
);

70 (* 
	mcﬁœp£
Ë(
GtkTªeIãm
 *
	måì_ôem
);

74 
GTy≥
 
	$gtk_åì_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
GtkWidgë
* 
	`gtk_åì_ôem_√w
 ();

76 
GtkWidgë
* 
	`gtk_åì_ôem_√w_wôh_œbñ
 (c⁄° 
gch¨
 *
œbñ
);

77 
	`gtk_åì_ôem_£t_subåì
 (
GtkTªeIãm
 *
åì_ôem
,

78 
GtkWidgë
 *
subåì
);

79 
	`gtk_åì_ôem_ªmove_subåì
 (
GtkTªeIãm
 *
åì_ôem
);

80 
	`gtk_åì_ôem_£À˘
 (
GtkTªeIãm
 *
åì_ôem
);

81 
	`gtk_åì_ôem_de£À˘
 (
GtkTªeIãm
 *
åì_ôem
);

82 
	`gtk_åì_ôem_ex∑nd
 (
GtkTªeIãm
 *
åì_ôem
);

83 
	`gtk_åì_ôem_cﬁœp£
 (
GtkTªeIãm
 *
åì_ôem
);

86 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreemodel.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_MODEL_H__


25 
	#__GTK_TREE_MODEL_H__


	)

27 
	~<glib-obje˘.h
>

30 
	~<gtk/gtkobje˘.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_TREE_MODEL
 (
	`gtk_åì_modñ_gë_ty≥
 ())

	)

35 
	#GTK_TREE_MODEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_MODEL
, 
GtkTªeModñ
))

	)

36 
	#GTK_IS_TREE_MODEL
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_MODEL
))

	)

37 
	#GTK_TREE_MODEL_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_TREE_MODEL
, 
GtkTªeModñIÁ˚
))

	)

39 
	#GTK_TYPE_TREE_ITER
 (
	`gtk_åì_ôî_gë_ty≥
 ())

	)

40 
	#GTK_TYPE_TREE_PATH
 (
	`gtk_åì_∑th_gë_ty≥
 ())

	)

41 
	#GTK_TYPE_TREE_ROW_REFERENCE
 (
	`gtk_åì_row_ª„ªn˚_gë_ty≥
 ())

	)

43 
_GtkTªeIãr
 
	tGtkTªeIãr
;

44 
_GtkTªeP©h
 
	tGtkTªeP©h
;

45 
_GtkTªeRowRe„ªn˚
 
	tGtkTªeRowRe„ªn˚
;

46 
_GtkTªeModñ
 
	tGtkTªeModñ
;

47 
_GtkTªeModñIÁ˚
 
	tGtkTªeModñIÁ˚
;

48 
	$gboﬁón
 (* 
	tGtkTªeModñF‹óchFunc
Ë(
	tGtkTªeModñ
 *
	tmodñ
, 
	tGtkTªeP©h
 *
	t∑th
, 
	tGtkTªeIãr
 *
	tôî
, 
	tgpoöãr
 
	td©a
);

53 
GTK_TREE_MODEL_ITERS_PERSIST
 = 1 << 0,

54 
GTK_TREE_MODEL_LIST_ONLY
 = 1 << 1

55 } 
	tGtkTªeModñFœgs
;

57 
	s_GtkTªeIãr


59 
göt
 
°amp
;

60 
gpoöãr
 
u£r_d©a
;

61 
gpoöãr
 
u£r_d©a2
;

62 
gpoöãr
 
u£r_d©a3
;

65 
	s_GtkTªeModñIÁ˚


67 
GTy≥I¡îÁ˚
 
g_iÁ˚
;

70 (* 
row_ch™ged
Ë(
GtkTªeModñ
 *
åì_modñ
,

71 
GtkTªeP©h
 *
∑th
,

72 
GtkTªeIãr
 *
ôî
);

73 (* 
row_ö£πed
Ë(
GtkTªeModñ
 *
åì_modñ
,

74 
GtkTªeP©h
 *
∑th
,

75 
GtkTªeIãr
 *
ôî
);

76 (* 
row_has_chûd_toggÀd
Ë(
GtkTªeModñ
 *
åì_modñ
,

77 
GtkTªeP©h
 *
∑th
,

78 
GtkTªeIãr
 *
ôî
);

79 (* 
row_dñëed
Ë(
GtkTªeModñ
 *
åì_modñ
,

80 
GtkTªeP©h
 *
∑th
);

81 (* 
rows_ª‹dîed
Ë(
GtkTªeModñ
 *
åì_modñ
,

82 
GtkTªeP©h
 *
∑th
,

83 
GtkTªeIãr
 *
ôî
,

84 
göt
 *
√w_‹dî
);

87 
	`GtkTªeModñFœgs
 (* 
gë_Êags
Ë(
GtkTªeModñ
 *
åì_modñ
);

89 
	`göt
 (* 
gë_n_cﬁumns
Ë(
GtkTªeModñ
 *
åì_modñ
);

90 
	`GTy≥
 (* 
gë_cﬁumn_ty≥
Ë(
GtkTªeModñ
 *
åì_modñ
,

91 
göt
 
ödex_
);

92 
	`gboﬁón
 (* 
gë_ôî
Ë(
GtkTªeModñ
 *
åì_modñ
,

93 
GtkTªeIãr
 *
ôî
,

94 
GtkTªeP©h
 *
∑th
);

95 
GtkTªeP©h
 *(* 
gë_∑th
Ë(
GtkTªeModñ
 *
åì_modñ
,

96 
GtkTªeIãr
 *
ôî
);

97 (* 
gë_vÆue
Ë(
GtkTªeModñ
 *
åì_modñ
,

98 
GtkTªeIãr
 *
ôî
,

99 
göt
 
cﬁumn
,

100 
GVÆue
 *
vÆue
);

101 
	`gboﬁón
 (* 
ôî_√xt
Ë(
GtkTªeModñ
 *
åì_modñ
,

102 
GtkTªeIãr
 *
ôî
);

103 
	`gboﬁón
 (* 
ôî_chûdªn
Ë(
GtkTªeModñ
 *
åì_modñ
,

104 
GtkTªeIãr
 *
ôî
,

105 
GtkTªeIãr
 *
∑ª¡
);

106 
	`gboﬁón
 (* 
ôî_has_chûd
Ë(
GtkTªeModñ
 *
åì_modñ
,

107 
GtkTªeIãr
 *
ôî
);

108 
	`göt
 (* 
ôî_n_chûdªn
Ë(
GtkTªeModñ
 *
åì_modñ
,

109 
GtkTªeIãr
 *
ôî
);

110 
	`gboﬁón
 (* 
ôî_¡h_chûd
Ë(
GtkTªeModñ
 *
åì_modñ
,

111 
GtkTªeIãr
 *
ôî
,

112 
GtkTªeIãr
 *
∑ª¡
,

113 
göt
 
n
);

114 
	`gboﬁón
 (* 
ôî_∑ª¡
Ë(
GtkTªeModñ
 *
åì_modñ
,

115 
GtkTªeIãr
 *
ôî
,

116 
GtkTªeIãr
 *
chûd
);

117 (* 
ªf_node
Ë(
GtkTªeModñ
 *
åì_modñ
,

118 
GtkTªeIãr
 *
ôî
);

119 (* 
uƒef_node
Ë(
GtkTªeModñ
 *
åì_modñ
,

120 
GtkTªeIãr
 *
ôî
);

125 
GtkTªeP©h
 *
	`gtk_åì_∑th_√w
 ();

126 
GtkTªeP©h
 *
	`gtk_åì_∑th_√w_‰om_°rög
 (c⁄° 
gch¨
 *
∑th
);

127 
GtkTªeP©h
 *
	`gtk_åì_∑th_√w_‰om_ödi˚s
 (
göt
 
fú°_ödex
,

129 
gch¨
 *
	`gtk_åì_∑th_to_°rög
 (
GtkTªeP©h
 *
∑th
);

130 
GtkTªeP©h
 *
	`gtk_åì_∑th_√w_fú°
 ();

131 
	`gtk_åì_∑th_≠≥nd_ödex
 (
GtkTªeP©h
 *
∑th
,

132 
göt
 
ödex_
);

133 
	`gtk_åì_∑th_¥ïíd_ödex
 (
GtkTªeP©h
 *
∑th
,

134 
göt
 
ödex_
);

135 
göt
 
	`gtk_åì_∑th_gë_dïth
 (
GtkTªeP©h
 *
∑th
);

136 
göt
 *
	`gtk_åì_∑th_gë_ödi˚s
 (
GtkTªeP©h
 *
∑th
);

137 
	`gtk_åì_∑th_‰ì
 (
GtkTªeP©h
 *
∑th
);

138 
GtkTªeP©h
 *
	`gtk_åì_∑th_c›y
 (c⁄° GtkTªeP©h *
∑th
);

139 
GTy≥
 
	$gtk_åì_∑th_gë_ty≥
 (Ë
G_GNUC_CONST
;

140 
göt
 
	`gtk_åì_∑th_com∑ª
 (c⁄° 
GtkTªeP©h
 *
a
,

141 c⁄° 
GtkTªeP©h
 *
b
);

142 
	`gtk_åì_∑th_√xt
 (
GtkTªeP©h
 *
∑th
);

143 
gboﬁón
 
	`gtk_åì_∑th_¥ev
 (
GtkTªeP©h
 *
∑th
);

144 
gboﬁón
 
	`gtk_åì_∑th_up
 (
GtkTªeP©h
 *
∑th
);

145 
	`gtk_åì_∑th_down
 (
GtkTªeP©h
 *
∑th
);

147 
gboﬁón
 
	`gtk_åì_∑th_is_™˚°‹
 (
GtkTªeP©h
 *
∑th
,

148 
GtkTªeP©h
 *
des˚nd™t
);

149 
gboﬁón
 
	`gtk_åì_∑th_is_des˚nd™t
 (
GtkTªeP©h
 *
∑th
,

150 
GtkTªeP©h
 *
™˚°‹
);

152 #i‚de‡
GTK_DISABLE_DEPRECATED


153 
	#gtk_åì_∑th_√w_roŸ
(Ë
	`gtk_åì_∑th_√w_fú°
()

	)

161 
GTy≥
 
	$gtk_åì_row_ª„ªn˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

162 
GtkTªeRowRe„ªn˚
 *
	`gtk_åì_row_ª„ªn˚_√w
 (
GtkTªeModñ
 *
modñ
,

163 
GtkTªeP©h
 *
∑th
);

164 
GtkTªeRowRe„ªn˚
 *
	`gtk_åì_row_ª„ªn˚_√w_¥oxy
 (
GObje˘
 *
¥oxy
,

165 
GtkTªeModñ
 *
modñ
,

166 
GtkTªeP©h
 *
∑th
);

167 
GtkTªeP©h
 *
	`gtk_åì_row_ª„ªn˚_gë_∑th
 (
GtkTªeRowRe„ªn˚
 *
ª„ªn˚
);

168 
GtkTªeModñ
 *
	`gtk_åì_row_ª„ªn˚_gë_modñ
 (
GtkTªeRowRe„ªn˚
 *
ª„ªn˚
);

169 
gboﬁón
 
	`gtk_åì_row_ª„ªn˚_vÆid
 (
GtkTªeRowRe„ªn˚
 *
ª„ªn˚
);

170 
GtkTªeRowRe„ªn˚
 *
	`gtk_åì_row_ª„ªn˚_c›y
 (GtkTªeRowRe„ªn˚ *
ª„ªn˚
);

171 
	`gtk_åì_row_ª„ªn˚_‰ì
 (
GtkTªeRowRe„ªn˚
 *
ª„ªn˚
);

174 
	`gtk_åì_row_ª„ªn˚_ö£πed
 (
GObje˘
 *
¥oxy
,

175 
GtkTªeP©h
 *
∑th
);

176 
	`gtk_åì_row_ª„ªn˚_dñëed
 (
GObje˘
 *
¥oxy
,

177 
GtkTªeP©h
 *
∑th
);

178 
	`gtk_åì_row_ª„ªn˚_ª‹dîed
 (
GObje˘
 *
¥oxy
,

179 
GtkTªeP©h
 *
∑th
,

180 
GtkTªeIãr
 *
ôî
,

181 
göt
 *
√w_‹dî
);

184 
GtkTªeIãr
 * 
	`gtk_åì_ôî_c›y
 (GtkTªeIã∏*
ôî
);

185 
	`gtk_åì_ôî_‰ì
 (
GtkTªeIãr
 *
ôî
);

186 
GTy≥
 
	$gtk_åì_ôî_gë_ty≥
 (Ë
G_GNUC_CONST
;

188 
GTy≥
 
	$gtk_åì_modñ_gë_ty≥
 (Ë
G_GNUC_CONST
;

189 
GtkTªeModñFœgs
 
	`gtk_åì_modñ_gë_Êags
 (
GtkTªeModñ
 *
åì_modñ
);

190 
göt
 
	`gtk_åì_modñ_gë_n_cﬁumns
 (
GtkTªeModñ
 *
åì_modñ
);

191 
GTy≥
 
	`gtk_åì_modñ_gë_cﬁumn_ty≥
 (
GtkTªeModñ
 *
åì_modñ
,

192 
göt
 
ödex_
);

196 
gboﬁón
 
	`gtk_åì_modñ_gë_ôî
 (
GtkTªeModñ
 *
åì_modñ
,

197 
GtkTªeIãr
 *
ôî
,

198 
GtkTªeP©h
 *
∑th
);

199 
gboﬁón
 
	`gtk_åì_modñ_gë_ôî_‰om_°rög
 (
GtkTªeModñ
 *
åì_modñ
,

200 
GtkTªeIãr
 *
ôî
,

201 c⁄° 
gch¨
 *
∑th_°rög
);

202 
gch¨
 * 
	`gtk_åì_modñ_gë_°rög_‰om_ôî
 (
GtkTªeModñ
 *
åì_modñ
,

203 
GtkTªeIãr
 *
ôî
);

204 
gboﬁón
 
	`gtk_åì_modñ_gë_ôî_fú°
 (
GtkTªeModñ
 *
åì_modñ
,

205 
GtkTªeIãr
 *
ôî
);

206 
GtkTªeP©h
 * 
	`gtk_åì_modñ_gë_∑th
 (
GtkTªeModñ
 *
åì_modñ
,

207 
GtkTªeIãr
 *
ôî
);

208 
	`gtk_åì_modñ_gë_vÆue
 (
GtkTªeModñ
 *
åì_modñ
,

209 
GtkTªeIãr
 *
ôî
,

210 
göt
 
cﬁumn
,

211 
GVÆue
 *
vÆue
);

212 
gboﬁón
 
	`gtk_åì_modñ_ôî_√xt
 (
GtkTªeModñ
 *
åì_modñ
,

213 
GtkTªeIãr
 *
ôî
);

214 
gboﬁón
 
	`gtk_åì_modñ_ôî_chûdªn
 (
GtkTªeModñ
 *
åì_modñ
,

215 
GtkTªeIãr
 *
ôî
,

216 
GtkTªeIãr
 *
∑ª¡
);

217 
gboﬁón
 
	`gtk_åì_modñ_ôî_has_chûd
 (
GtkTªeModñ
 *
åì_modñ
,

218 
GtkTªeIãr
 *
ôî
);

219 
göt
 
	`gtk_åì_modñ_ôî_n_chûdªn
 (
GtkTªeModñ
 *
åì_modñ
,

220 
GtkTªeIãr
 *
ôî
);

221 
gboﬁón
 
	`gtk_åì_modñ_ôî_¡h_chûd
 (
GtkTªeModñ
 *
åì_modñ
,

222 
GtkTªeIãr
 *
ôî
,

223 
GtkTªeIãr
 *
∑ª¡
,

224 
göt
 
n
);

225 
gboﬁón
 
	`gtk_åì_modñ_ôî_∑ª¡
 (
GtkTªeModñ
 *
åì_modñ
,

226 
GtkTªeIãr
 *
ôî
,

227 
GtkTªeIãr
 *
chûd
);

228 
	`gtk_åì_modñ_ªf_node
 (
GtkTªeModñ
 *
åì_modñ
,

229 
GtkTªeIãr
 *
ôî
);

230 
	`gtk_åì_modñ_uƒef_node
 (
GtkTªeModñ
 *
åì_modñ
,

231 
GtkTªeIãr
 *
ôî
);

232 
	`gtk_åì_modñ_gë
 (
GtkTªeModñ
 *
åì_modñ
,

233 
GtkTªeIãr
 *
ôî
,

235 
	`gtk_åì_modñ_gë_vÆi°
 (
GtkTªeModñ
 *
åì_modñ
,

236 
GtkTªeIãr
 *
ôî
,

237 
va_li°
 
v¨_¨gs
);

240 
	`gtk_åì_modñ_f‹óch
 (
GtkTªeModñ
 *
modñ
,

241 
GtkTªeModñF‹óchFunc
 
func
,

242 
gpoöãr
 
u£r_d©a
);

245 #i‚de‡
GTK_DISABLE_DEPRECATED


246 
	#gtk_åì_modñ_gë_ôî_roŸ
(
åì_modñ
, 
ôî
Ë
	`gtk_åì_modñ_gë_ôî_fú°
—ªe_modñ, iãr)

	)

250 
	`gtk_åì_modñ_row_ch™ged
 (
GtkTªeModñ
 *
åì_modñ
,

251 
GtkTªeP©h
 *
∑th
,

252 
GtkTªeIãr
 *
ôî
);

253 
	`gtk_åì_modñ_row_ö£πed
 (
GtkTªeModñ
 *
åì_modñ
,

254 
GtkTªeP©h
 *
∑th
,

255 
GtkTªeIãr
 *
ôî
);

256 
	`gtk_åì_modñ_row_has_chûd_toggÀd
 (
GtkTªeModñ
 *
åì_modñ
,

257 
GtkTªeP©h
 *
∑th
,

258 
GtkTªeIãr
 *
ôî
);

259 
	`gtk_åì_modñ_row_dñëed
 (
GtkTªeModñ
 *
åì_modñ
,

260 
GtkTªeP©h
 *
∑th
);

261 
	`gtk_åì_modñ_rows_ª‹dîed
 (
GtkTªeModñ
 *
åì_modñ
,

262 
GtkTªeP©h
 *
∑th
,

263 
GtkTªeIãr
 *
ôî
,

264 
göt
 *
√w_‹dî
);

266 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreemodelfilter.h

21 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

25 #i‚de‡
__GTK_TREE_MODEL_FILTER_H__


26 
	#__GTK_TREE_MODEL_FILTER_H__


	)

28 
	~<gdkc⁄fig.h
>

29 
	~<gtk/gtkåìmodñ.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_TREE_MODEL_FILTER
 (
	`gtk_åì_modñ_fûãr_gë_ty≥
 ())

	)

34 
	#GTK_TREE_MODEL_FILTER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_MODEL_FILTER
, 
GtkTªeModñFûãr
))

	)

35 
	#GTK_TREE_MODEL_FILTER_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
GTK_TYPE_TREE_MODEL_FILTER
, 
GtkTªeModñFûãrCœss
))

	)

36 
	#GTK_IS_TREE_MODEL_FILTER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_MODEL_FILTER
))

	)

37 
	#GTK_IS_TREE_MODEL_FILTER_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
GTK_TYPE_TREE_MODEL_FILTER
))

	)

38 
	#GTK_TREE_MODEL_FILTER_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((
obj
), 
GTK_TYPE_TREE_MODEL_FILTER
, 
GtkTªeModñFûãrCœss
))

	)

40 
	$gboﬁón
 (* 
	tGtkTªeModñFûãrVisibÀFunc
Ë(
	tGtkTªeModñ
 *
	tmodñ
,

41 
	tGtkTªeIãr
 *
	tôî
,

42 
	tgpoöãr
 
	td©a
);

43 (* 
	tGtkTªeModñFûãrModifyFunc
Ë(
	tGtkTªeModñ
 *
	tmodñ
,

44 
	tGtkTªeIãr
 *
	tôî
,

45 
	tGVÆue
 *
	tvÆue
,

46 
	tgöt
 
	tcﬁumn
,

47 
	tgpoöãr
 
	td©a
);

49 
_GtkTªeModñFûãr
 
	tGtkTªeModñFûãr
;

50 
_GtkTªeModñFûãrCœss
 
	tGtkTªeModñFûãrCœss
;

51 
_GtkTªeModñFûãrPriv©e
 
	tGtkTªeModñFûãrPriv©e
;

53 
	s_GtkTªeModñFûãr


55 
GObje˘
 
∑ª¡
;

58 
GtkTªeModñFûãrPriv©e
 *
	`GSEAL
 (
¥iv
);

61 
	s_GtkTªeModñFûãrCœss


63 
GObje˘Cœss
 
∑ª¡_˛ass
;

66 (*
_gtk_ª£rved0
) ();

67 (*
_gtk_ª£rved1
) ();

68 (*
_gtk_ª£rved2
) ();

69 (*
_gtk_ª£rved3
) ();

73 
GTy≥
 
	$gtk_åì_modñ_fûãr_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
GtkTªeModñ
 *
	`gtk_åì_modñ_fûãr_√w
 (GtkTªeModñ *
chûd_modñ
,

75 
GtkTªeP©h
 *
roŸ
);

76 
	`gtk_åì_modñ_fûãr_£t_visibÀ_func
 (
GtkTªeModñFûãr
 *
fûãr
,

77 
GtkTªeModñFûãrVisibÀFunc
 
func
,

78 
gpoöãr
 
d©a
,

79 
GDe°royNŸify
 
de°roy
);

80 
	`gtk_åì_modñ_fûãr_£t_modify_func
 (
GtkTªeModñFûãr
 *
fûãr
,

81 
göt
 
n_cﬁumns
,

82 
GTy≥
 *
ty≥s
,

83 
GtkTªeModñFûãrModifyFunc
 
func
,

84 
gpoöãr
 
d©a
,

85 
GDe°royNŸify
 
de°roy
);

86 
	`gtk_åì_modñ_fûãr_£t_visibÀ_cﬁumn
 (
GtkTªeModñFûãr
 *
fûãr
,

87 
göt
 
cﬁumn
);

89 
GtkTªeModñ
 *
	`gtk_åì_modñ_fûãr_gë_modñ
 (
GtkTªeModñFûãr
 *
fûãr
);

92 
gboﬁón
 
	`gtk_åì_modñ_fûãr_c⁄vît_chûd_ôî_to_ôî
 (
GtkTªeModñFûãr
 *
fûãr
,

93 
GtkTªeIãr
 *
fûãr_ôî
,

94 
GtkTªeIãr
 *
chûd_ôî
);

95 
	`gtk_åì_modñ_fûãr_c⁄vît_ôî_to_chûd_ôî
 (
GtkTªeModñFûãr
 *
fûãr
,

96 
GtkTªeIãr
 *
chûd_ôî
,

97 
GtkTªeIãr
 *
fûãr_ôî
);

98 
GtkTªeP©h
 *
	`gtk_åì_modñ_fûãr_c⁄vît_chûd_∑th_to_∑th
 (
GtkTªeModñFûãr
 *
fûãr
,

99 
GtkTªeP©h
 *
chûd_∑th
);

100 
GtkTªeP©h
 *
	`gtk_åì_modñ_fûãr_c⁄vît_∑th_to_chûd_∑th
 (
GtkTªeModñFûãr
 *
fûãr
,

101 
GtkTªeP©h
 *
fûãr_∑th
);

104 
	`gtk_åì_modñ_fûãr_ªfûãr
 (
GtkTªeModñFûãr
 *
fûãr
);

105 
	`gtk_åì_modñ_fûãr_˛ór_ˇche
 (
GtkTªeModñFûãr
 *
fûãr
);

107 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreemodelsort.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_MODEL_SORT_H__


25 
	#__GTK_TREE_MODEL_SORT_H__


	)

27 
	~<gdkc⁄fig.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkåìs‹èbÀ.h
>

31 
	gG_BEGIN_DECLS


33 
	#GTK_TYPE_TREE_MODEL_SORT
 (
	`gtk_åì_modñ_s‹t_gë_ty≥
 ())

	)

34 
	#GTK_TREE_MODEL_SORT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_MODEL_SORT
, 
GtkTªeModñS‹t
))

	)

35 
	#GTK_TREE_MODEL_SORT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE_MODEL_SORT
, 
GtkTªeModñS‹tCœss
))

	)

36 
	#GTK_IS_TREE_MODEL_SORT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_MODEL_SORT
))

	)

37 
	#GTK_IS_TREE_MODEL_SORT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE_MODEL_SORT
))

	)

38 
	#GTK_TREE_MODEL_SORT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE_MODEL_SORT
, 
GtkTªeModñS‹tCœss
))

	)

40 
_GtkTªeModñS‹t
 
	tGtkTªeModñS‹t
;

41 
_GtkTªeModñS‹tCœss
 
	tGtkTªeModñS‹tCœss
;

43 
	s_GtkTªeModñS‹t


45 
GObje˘
 
	m∑ª¡
;

48 
gpoöãr
 
GSEAL
 (
roŸ
);

49 
göt
 
GSEAL
 (
°amp
);

50 
guöt
 
GSEAL
 (
chûd_Êags
);

51 
GtkTªeModñ
 *
GSEAL
 (
chûd_modñ
);

52 
göt
 
GSEAL
 (
zîo_ªf_cou¡
);

55 
GLi°
 *
GSEAL
 (
s‹t_li°
);

56 
göt
 
GSEAL
 (
s‹t_cﬁumn_id
);

57 
GtkS‹tTy≥
 
GSEAL
 (
‹dî
);

60 
GtkTªeIãrCom∑ªFunc
 
GSEAL
 (
deÁu…_s‹t_func
);

61 
gpoöãr
 
GSEAL
 (
deÁu…_s‹t_d©a
);

62 
GDe°royNŸify
 
GSEAL
 (
deÁu…_s‹t_de°roy
);

65 
guöt
 
GSEAL
 (
ch™ged_id
);

66 
guöt
 
GSEAL
 (
ö£πed_id
);

67 
guöt
 
GSEAL
 (
has_chûd_toggÀd_id
);

68 
guöt
 
GSEAL
 (
dñëed_id
);

69 
guöt
 
GSEAL
 (
ª‹dîed_id
);

72 
	s_GtkTªeModñS‹tCœss


74 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

77 (*
	m_gtk_ª£rved1
) ();

78 (*
	m_gtk_ª£rved2
) ();

79 (*
	m_gtk_ª£rved3
) ();

80 (*
	m_gtk_ª£rved4
) ();

84 
GTy≥
 
	$gtk_åì_modñ_s‹t_gë_ty≥
 (Ë
G_GNUC_CONST
;

85 
GtkTªeModñ
 *
	`gtk_åì_modñ_s‹t_√w_wôh_modñ
 (GtkTªeModñ *
chûd_modñ
);

87 
GtkTªeModñ
 *
	`gtk_åì_modñ_s‹t_gë_modñ
 (
GtkTªeModñS‹t
 *
åì_modñ
);

88 
GtkTªeP©h
 *
	`gtk_åì_modñ_s‹t_c⁄vît_chûd_∑th_to_∑th
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
,

89 
GtkTªeP©h
 *
chûd_∑th
);

90 
gboﬁón
 
	`gtk_åì_modñ_s‹t_c⁄vît_chûd_ôî_to_ôî
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
,

91 
GtkTªeIãr
 *
s‹t_ôî
,

92 
GtkTªeIãr
 *
chûd_ôî
);

93 
GtkTªeP©h
 *
	`gtk_åì_modñ_s‹t_c⁄vît_∑th_to_chûd_∑th
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
,

94 
GtkTªeP©h
 *
s‹ãd_∑th
);

95 
	`gtk_åì_modñ_s‹t_c⁄vît_ôî_to_chûd_ôî
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
,

96 
GtkTªeIãr
 *
chûd_ôî
,

97 
GtkTªeIãr
 *
s‹ãd_ôî
);

98 
	`gtk_åì_modñ_s‹t_ª£t_deÁu…_s‹t_func
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
);

99 
	`gtk_åì_modñ_s‹t_˛ór_ˇche
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
);

100 
gboﬁón
 
	`gtk_åì_modñ_s‹t_ôî_is_vÆid
 (
GtkTªeModñS‹t
 *
åì_modñ_s‹t
,

101 
GtkTªeIãr
 *
ôî
);

104 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreeselection.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_SELECTION_H__


25 
	#__GTK_TREE_SELECTION_H__


	)

27 
	~<gtk/gtkåìvõw.h
>

29 
	gG_BEGIN_DECLS


32 
	#GTK_TYPE_TREE_SELECTION
 (
	`gtk_åì_£À˘i⁄_gë_ty≥
 ())

	)

33 
	#GTK_TREE_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_SELECTION
, 
GtkTªeSñe˘i⁄
))

	)

34 
	#GTK_TREE_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE_SELECTION
, 
GtkTªeSñe˘i⁄Cœss
))

	)

35 
	#GTK_IS_TREE_SELECTION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_SELECTION
))

	)

36 
	#GTK_IS_TREE_SELECTION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE_SELECTION
))

	)

37 
	#GTK_TREE_SELECTION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE_SELECTION
, 
GtkTªeSñe˘i⁄Cœss
))

	)

39 
	$gboﬁón
 (* 
	tGtkTªeSñe˘i⁄Func
Ë(
	tGtkTªeSñe˘i⁄
 *
	t£À˘i⁄
,

40 
	tGtkTªeModñ
 *
	tmodñ
,

41 
	tGtkTªeP©h
 *
	t∑th
,

42 
	tgboﬁón
 
	t∑th_cuºíéy_£À˘ed
,

43 
	tgpoöãr
 
	td©a
);

44 (* 
	tGtkTªeSñe˘i⁄F‹óchFunc
Ë(
	tGtkTªeModñ
 *
	tmodñ
,

45 
	tGtkTªeP©h
 *
	t∑th
,

46 
	tGtkTªeIãr
 *
	tôî
,

47 
	tgpoöãr
 
	td©a
);

49 
	s_GtkTªeSñe˘i⁄


51 
GObje˘
 
∑ª¡
;

55 
GtkTªeVõw
 *
	`GSEAL
 (
åì_võw
);

56 
GtkSñe˘i⁄Mode
 
	`GSEAL
 (
ty≥
);

57 
GtkTªeSñe˘i⁄Func
 
	`GSEAL
 (
u£r_func
);

58 
gpoöãr
 
	`GSEAL
 (
u£r_d©a
);

59 
GDe°royNŸify
 
	`GSEAL
 (
de°roy
);

62 
	s_GtkTªeSñe˘i⁄Cœss


64 
GObje˘Cœss
 
∑ª¡_˛ass
;

66 (* 
ch™ged
Ë(
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

69 (*
_gtk_ª£rved1
) ();

70 (*
_gtk_ª£rved2
) ();

71 (*
_gtk_ª£rved3
) ();

72 (*
_gtk_ª£rved4
) ();

76 
GTy≥
 
	$gtk_åì_£À˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

78 
	`gtk_åì_£À˘i⁄_£t_mode
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

79 
GtkSñe˘i⁄Mode
 
ty≥
);

80 
GtkSñe˘i⁄Mode
 
	`gtk_åì_£À˘i⁄_gë_mode
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

81 
	`gtk_åì_£À˘i⁄_£t_£À˘_fun˘i⁄
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

82 
GtkTªeSñe˘i⁄Func
 
func
,

83 
gpoöãr
 
d©a
,

84 
GDe°royNŸify
 
de°roy
);

85 
gpoöãr
 
	`gtk_åì_£À˘i⁄_gë_u£r_d©a
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

86 
GtkTªeVõw
* 
	`gtk_åì_£À˘i⁄_gë_åì_võw
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

88 
GtkTªeSñe˘i⁄Func
 
	`gtk_åì_£À˘i⁄_gë_£À˘_fun˘i⁄
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

92 
gboﬁón
 
	`gtk_åì_£À˘i⁄_gë_£À˘ed
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

93 
GtkTªeModñ
 **
modñ
,

94 
GtkTªeIãr
 *
ôî
);

95 
GLi°
 * 
	`gtk_åì_£À˘i⁄_gë_£À˘ed_rows
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

96 
GtkTªeModñ
 **
modñ
);

97 
göt
 
	`gtk_åì_£À˘i⁄_cou¡_£À˘ed_rows
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

98 
	`gtk_åì_£À˘i⁄_£À˘ed_f‹óch
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

99 
GtkTªeSñe˘i⁄F‹óchFunc
 
func
,

100 
gpoöãr
 
d©a
);

101 
	`gtk_åì_£À˘i⁄_£À˘_∑th
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

102 
GtkTªeP©h
 *
∑th
);

103 
	`gtk_åì_£À˘i⁄_un£À˘_∑th
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

104 
GtkTªeP©h
 *
∑th
);

105 
	`gtk_åì_£À˘i⁄_£À˘_ôî
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

106 
GtkTªeIãr
 *
ôî
);

107 
	`gtk_åì_£À˘i⁄_un£À˘_ôî
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

108 
GtkTªeIãr
 *
ôî
);

109 
gboﬁón
 
	`gtk_åì_£À˘i⁄_∑th_is_£À˘ed
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

110 
GtkTªeP©h
 *
∑th
);

111 
gboﬁón
 
	`gtk_åì_£À˘i⁄_ôî_is_£À˘ed
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

112 
GtkTªeIãr
 *
ôî
);

113 
	`gtk_åì_£À˘i⁄_£À˘_Æl
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

114 
	`gtk_åì_£À˘i⁄_un£À˘_Æl
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
);

115 
	`gtk_åì_£À˘i⁄_£À˘_ønge
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

116 
GtkTªeP©h
 *
°¨t_∑th
,

117 
GtkTªeP©h
 *
íd_∑th
);

118 
	`gtk_åì_£À˘i⁄_un£À˘_ønge
 (
GtkTªeSñe˘i⁄
 *
£À˘i⁄
,

119 
GtkTªeP©h
 *
°¨t_∑th
,

120 
GtkTªeP©h
 *
íd_∑th
);

123 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreesortable.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_SORTABLE_H__


25 
	#__GTK_TREE_SORTABLE_H__


	)

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkty≥utûs.h
>

32 
	gG_BEGIN_DECLS


34 
	#GTK_TYPE_TREE_SORTABLE
 (
	`gtk_åì_s‹èbÀ_gë_ty≥
 ())

	)

35 
	#GTK_TREE_SORTABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_SORTABLE
, 
GtkTªeS‹èbÀ
))

	)

36 
	#GTK_TREE_SORTABLE_CLASS
(
obj
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((obj), 
GTK_TYPE_TREE_SORTABLE
, 
GtkTªeS‹èbÀIÁ˚
))

	)

37 
	#GTK_IS_TREE_SORTABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_SORTABLE
))

	)

38 
	#GTK_TREE_SORTABLE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
GTK_TYPE_TREE_SORTABLE
, 
GtkTªeS‹èbÀIÁ˚
))

	)

41 
	mGTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID
 = -1,

42 
	mGTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID
 = -2

45 
_GtkTªeS‹èbÀ
 
	tGtkTªeS‹èbÀ
;

46 
_GtkTªeS‹èbÀIÁ˚
 
	tGtkTªeS‹èbÀIÁ˚
;

48 
	$göt
 (* 
	tGtkTªeIãrCom∑ªFunc
Ë(
	tGtkTªeModñ
 *
	tmodñ
,

49 
	tGtkTªeIãr
 *
	ta
,

50 
	tGtkTªeIãr
 *
	tb
,

51 
	tgpoöãr
 
	tu£r_d©a
);

54 
	s_GtkTªeS‹èbÀIÁ˚


56 
GTy≥I¡îÁ˚
 
g_iÁ˚
;

59 (* 
s‹t_cﬁumn_ch™ged
Ë(
GtkTªeS‹èbÀ
 *
s‹èbÀ
);

62 
	`gboﬁón
 (* 
gë_s‹t_cﬁumn_id
Ë(
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

63 
göt
 *
s‹t_cﬁumn_id
,

64 
GtkS‹tTy≥
 *
‹dî
);

65 (* 
£t_s‹t_cﬁumn_id
Ë(
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

66 
göt
 
s‹t_cﬁumn_id
,

67 
GtkS‹tTy≥
 
‹dî
);

68 (* 
£t_s‹t_func
Ë(
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

69 
göt
 
s‹t_cﬁumn_id
,

70 
GtkTªeIãrCom∑ªFunc
 
func
,

71 
gpoöãr
 
d©a
,

72 
GDe°royNŸify
 
de°roy
);

73 (* 
£t_deÁu…_s‹t_func
Ë(
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

74 
GtkTªeIãrCom∑ªFunc
 
func
,

75 
gpoöãr
 
d©a
,

76 
GDe°royNŸify
 
de°roy
);

77 
	`gboﬁón
 (* 
has_deÁu…_s‹t_func
Ë(
GtkTªeS‹èbÀ
 *
s‹èbÀ
);

81 
GTy≥
 
	$gtk_åì_s‹èbÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

83 
	`gtk_åì_s‹èbÀ_s‹t_cﬁumn_ch™ged
 (
GtkTªeS‹èbÀ
 *
s‹èbÀ
);

84 
gboﬁón
 
	`gtk_åì_s‹èbÀ_gë_s‹t_cﬁumn_id
 (
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

85 
göt
 *
s‹t_cﬁumn_id
,

86 
GtkS‹tTy≥
 *
‹dî
);

87 
	`gtk_åì_s‹èbÀ_£t_s‹t_cﬁumn_id
 (
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

88 
göt
 
s‹t_cﬁumn_id
,

89 
GtkS‹tTy≥
 
‹dî
);

90 
	`gtk_åì_s‹èbÀ_£t_s‹t_func
 (
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

91 
göt
 
s‹t_cﬁumn_id
,

92 
GtkTªeIãrCom∑ªFunc
 
s‹t_func
,

93 
gpoöãr
 
u£r_d©a
,

94 
GDe°royNŸify
 
de°roy
);

95 
	`gtk_åì_s‹èbÀ_£t_deÁu…_s‹t_func
 (
GtkTªeS‹èbÀ
 *
s‹èbÀ
,

96 
GtkTªeIãrCom∑ªFunc
 
s‹t_func
,

97 
gpoöãr
 
u£r_d©a
,

98 
GDe°royNŸify
 
de°roy
);

99 
gboﬁón
 
	`gtk_åì_s‹èbÀ_has_deÁu…_s‹t_func
 (
GtkTªeS‹èbÀ
 *
s‹èbÀ
);

101 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreestore.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_STORE_H__


25 
	#__GTK_TREE_STORE_H__


	)

27 
	~<gdkc⁄fig.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkåìs‹èbÀ.h
>

30 
	~<°d¨g.h
>

33 
	gG_BEGIN_DECLS


36 
	#GTK_TYPE_TREE_STORE
 (
	`gtk_åì_°‹e_gë_ty≥
 ())

	)

37 
	#GTK_TREE_STORE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_STORE
, 
GtkTªeSt‹e
))

	)

38 
	#GTK_TREE_STORE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE_STORE
, 
GtkTªeSt‹eCœss
))

	)

39 
	#GTK_IS_TREE_STORE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_STORE
))

	)

40 
	#GTK_IS_TREE_STORE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE_STORE
))

	)

41 
	#GTK_TREE_STORE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE_STORE
, 
GtkTªeSt‹eCœss
))

	)

43 
_GtkTªeSt‹e
 
	tGtkTªeSt‹e
;

44 
_GtkTªeSt‹eCœss
 
	tGtkTªeSt‹eCœss
;

46 
	s_GtkTªeSt‹e


48 
GObje˘
 
	m∑ª¡
;

50 
göt
 
GSEAL
 (
°amp
);

51 
gpoöãr
 
GSEAL
 (
roŸ
);

52 
gpoöãr
 
GSEAL
 (
œ°
);

53 
göt
 
GSEAL
 (
n_cﬁumns
);

54 
göt
 
GSEAL
 (
s‹t_cﬁumn_id
);

55 
GLi°
 *
GSEAL
 (
s‹t_li°
);

56 
GtkS‹tTy≥
 
GSEAL
 (
‹dî
);

57 
GTy≥
 *
GSEAL
 (
cﬁumn_hódîs
);

58 
GtkTªeIãrCom∑ªFunc
 
GSEAL
 (
deÁu…_s‹t_func
);

59 
gpoöãr
 
GSEAL
 (
deÁu…_s‹t_d©a
);

60 
GDe°royNŸify
 
GSEAL
 (
deÁu…_s‹t_de°roy
);

61 
guöt
 
GSEAL
 (
cﬁumns_dúty
) : 1;

64 
	s_GtkTªeSt‹eCœss


66 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

69 (*
	m_gtk_ª£rved1
) ();

70 (*
	m_gtk_ª£rved2
) ();

71 (*
	m_gtk_ª£rved3
) ();

72 (*
	m_gtk_ª£rved4
) ();

76 
GTy≥
 
	$gtk_åì_°‹e_gë_ty≥
 (Ë
G_GNUC_CONST
;

77 
GtkTªeSt‹e
 *
	`gtk_åì_°‹e_√w
 (
göt
 
n_cﬁumns
,

79 
GtkTªeSt‹e
 *
	`gtk_åì_°‹e_√wv
 (
göt
 
n_cﬁumns
,

80 
GTy≥
 *
ty≥s
);

81 
	`gtk_åì_°‹e_£t_cﬁumn_ty≥s
 (
GtkTªeSt‹e
 *
åì_°‹e
,

82 
göt
 
n_cﬁumns
,

83 
GTy≥
 *
ty≥s
);

87 
	`gtk_åì_°‹e_£t_vÆue
 (
GtkTªeSt‹e
 *
åì_°‹e
,

88 
GtkTªeIãr
 *
ôî
,

89 
göt
 
cﬁumn
,

90 
GVÆue
 *
vÆue
);

91 
	`gtk_åì_°‹e_£t
 (
GtkTªeSt‹e
 *
åì_°‹e
,

92 
GtkTªeIãr
 *
ôî
,

94 
	`gtk_åì_°‹e_£t_vÆuesv
 (
GtkTªeSt‹e
 *
åì_°‹e
,

95 
GtkTªeIãr
 *
ôî
,

96 
göt
 *
cﬁumns
,

97 
GVÆue
 *
vÆues
,

98 
göt
 
n_vÆues
);

99 
	`gtk_åì_°‹e_£t_vÆi°
 (
GtkTªeSt‹e
 *
åì_°‹e
,

100 
GtkTªeIãr
 *
ôî
,

101 
va_li°
 
v¨_¨gs
);

102 
gboﬁón
 
	`gtk_åì_°‹e_ªmove
 (
GtkTªeSt‹e
 *
åì_°‹e
,

103 
GtkTªeIãr
 *
ôî
);

104 
	`gtk_åì_°‹e_ö£π
 (
GtkTªeSt‹e
 *
åì_°‹e
,

105 
GtkTªeIãr
 *
ôî
,

106 
GtkTªeIãr
 *
∑ª¡
,

107 
göt
 
posôi⁄
);

108 
	`gtk_åì_°‹e_ö£π_bef‹e
 (
GtkTªeSt‹e
 *
åì_°‹e
,

109 
GtkTªeIãr
 *
ôî
,

110 
GtkTªeIãr
 *
∑ª¡
,

111 
GtkTªeIãr
 *
siblög
);

112 
	`gtk_åì_°‹e_ö£π_a·î
 (
GtkTªeSt‹e
 *
åì_°‹e
,

113 
GtkTªeIãr
 *
ôî
,

114 
GtkTªeIãr
 *
∑ª¡
,

115 
GtkTªeIãr
 *
siblög
);

116 
	`gtk_åì_°‹e_ö£π_wôh_vÆues
 (
GtkTªeSt‹e
 *
åì_°‹e
,

117 
GtkTªeIãr
 *
ôî
,

118 
GtkTªeIãr
 *
∑ª¡
,

119 
göt
 
posôi⁄
,

121 
	`gtk_åì_°‹e_ö£π_wôh_vÆuesv
 (
GtkTªeSt‹e
 *
åì_°‹e
,

122 
GtkTªeIãr
 *
ôî
,

123 
GtkTªeIãr
 *
∑ª¡
,

124 
göt
 
posôi⁄
,

125 
göt
 *
cﬁumns
,

126 
GVÆue
 *
vÆues
,

127 
göt
 
n_vÆues
);

128 
	`gtk_åì_°‹e_¥ïíd
 (
GtkTªeSt‹e
 *
åì_°‹e
,

129 
GtkTªeIãr
 *
ôî
,

130 
GtkTªeIãr
 *
∑ª¡
);

131 
	`gtk_åì_°‹e_≠≥nd
 (
GtkTªeSt‹e
 *
åì_°‹e
,

132 
GtkTªeIãr
 *
ôî
,

133 
GtkTªeIãr
 *
∑ª¡
);

134 
gboﬁón
 
	`gtk_åì_°‹e_is_™˚°‹
 (
GtkTªeSt‹e
 *
åì_°‹e
,

135 
GtkTªeIãr
 *
ôî
,

136 
GtkTªeIãr
 *
des˚nd™t
);

137 
göt
 
	`gtk_åì_°‹e_ôî_dïth
 (
GtkTªeSt‹e
 *
åì_°‹e
,

138 
GtkTªeIãr
 *
ôî
);

139 
	`gtk_åì_°‹e_˛ór
 (
GtkTªeSt‹e
 *
åì_°‹e
);

140 
gboﬁón
 
	`gtk_åì_°‹e_ôî_is_vÆid
 (
GtkTªeSt‹e
 *
åì_°‹e
,

141 
GtkTªeIãr
 *
ôî
);

142 
	`gtk_åì_°‹e_ª‹dî
 (
GtkTªeSt‹e
 *
åì_°‹e
,

143 
GtkTªeIãr
 *
∑ª¡
,

144 
göt
 *
√w_‹dî
);

145 
	`gtk_åì_°‹e_sw≠
 (
GtkTªeSt‹e
 *
åì_°‹e
,

146 
GtkTªeIãr
 *
a
,

147 
GtkTªeIãr
 *
b
);

148 
	`gtk_åì_°‹e_move_bef‹e
 (
GtkTªeSt‹e
 *
åì_°‹e
,

149 
GtkTªeIãr
 *
ôî
,

150 
GtkTªeIãr
 *
posôi⁄
);

151 
	`gtk_åì_°‹e_move_a·î
 (
GtkTªeSt‹e
 *
åì_°‹e
,

152 
GtkTªeIãr
 *
ôî
,

153 
GtkTªeIãr
 *
posôi⁄
);

156 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreeview.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_VIEW_H__


25 
	#__GTK_TREE_VIEW_H__


	)

27 
	~<gtk/gtkc⁄èöî.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkåìvõwcﬁumn.h
>

30 
	~<gtk/gtkdnd.h
>

31 
	~<gtk/gtkíåy.h
>

33 
G_BEGIN_DECLS


39 
	mGTK_TREE_VIEW_DROP_BEFORE
,

40 
	mGTK_TREE_VIEW_DROP_AFTER
,

44 
	mGTK_TREE_VIEW_DROP_INTO_OR_BEFORE
,

45 
	mGTK_TREE_VIEW_DROP_INTO_OR_AFTER


46 } 
	tGtkTªeVõwDr›Posôi⁄
;

48 
	#GTK_TYPE_TREE_VIEW
 (
	`gtk_åì_võw_gë_ty≥
 ())

	)

49 
	#GTK_TREE_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_VIEW
, 
GtkTªeVõw
))

	)

50 
	#GTK_TREE_VIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE_VIEW
, 
GtkTªeVõwCœss
))

	)

51 
	#GTK_IS_TREE_VIEW
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_VIEW
))

	)

52 
	#GTK_IS_TREE_VIEW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE_VIEW
))

	)

53 
	#GTK_TREE_VIEW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE_VIEW
, 
GtkTªeVõwCœss
))

	)

55 
_GtkTªeVõw
 
	tGtkTªeVõw
;

56 
_GtkTªeVõwCœss
 
	tGtkTªeVõwCœss
;

57 
_GtkTªeVõwPriv©e
 
	tGtkTªeVõwPriv©e
;

58 
_GtkTªeSñe˘i⁄
 
	tGtkTªeSñe˘i⁄
;

59 
_GtkTªeSñe˘i⁄Cœss
 
	tGtkTªeSñe˘i⁄Cœss
;

61 
	s_GtkTªeVõw


63 
GtkC⁄èöî
 
	m∑ª¡
;

65 
GtkTªeVõwPriv©e
 *
GSEAL
 (
¥iv
);

68 
	s_GtkTªeVõwCœss


70 
GtkC⁄èöîCœss
 
	m∑ª¡_˛ass
;

72 (* 
	m£t_s¸ﬁl_adju°míts
Ë(
GtkTªeVõw
 *
	måì_võw
,

73 
GtkAdju°mít
 *
	mhadju°mít
,

74 
GtkAdju°mít
 *
	mvadju°mít
);

75 (* 
	mrow_a˘iv©ed
Ë(
GtkTªeVõw
 *
	måì_võw
,

76 
GtkTªeP©h
 *
	m∑th
,

77 
GtkTªeVõwCﬁumn
 *
	mcﬁumn
);

78 
gboﬁón
 (* 
ã°_ex∑nd_row
Ë(
GtkTªeVõw
 *
	måì_võw
,

79 
GtkTªeIãr
 *
	môî
,

80 
GtkTªeP©h
 *
	m∑th
);

81 
gboﬁón
 (* 
ã°_cﬁœp£_row
Ë(
GtkTªeVõw
 *
	måì_võw
,

82 
GtkTªeIãr
 *
	môî
,

83 
GtkTªeP©h
 *
	m∑th
);

84 (* 
	mrow_ex∑nded
Ë(
GtkTªeVõw
 *
	måì_võw
,

85 
GtkTªeIãr
 *
	môî
,

86 
GtkTªeP©h
 *
	m∑th
);

87 (* 
	mrow_cﬁœp£d
Ë(
GtkTªeVõw
 *
	måì_võw
,

88 
GtkTªeIãr
 *
	môî
,

89 
GtkTªeP©h
 *
	m∑th
);

90 (* 
	mcﬁumns_ch™ged
Ë(
GtkTªeVõw
 *
	måì_võw
);

91 (* 
	mcurs‹_ch™ged
Ë(
GtkTªeVõw
 *
	måì_võw
);

94 
gboﬁón
 (* 
move_curs‹
Ë(
GtkTªeVõw
 *
	måì_võw
,

95 
GtkMovemítSãp
 
	m°ï
,

96 
göt
 
	mcou¡
);

97 
gboﬁón
 (* 
£À˘_Æl
Ë(
GtkTªeVõw
 *
	måì_võw
);

98 
gboﬁón
 (* 
un£À˘_Æl
Ë(
GtkTªeVõw
 *
	måì_võw
);

99 
gboﬁón
 (* 
£À˘_curs‹_row
Ë(
GtkTªeVõw
 *
	måì_võw
,

100 
gboﬁón
 
	m°¨t_edôög
);

101 
gboﬁón
 (* 
toggÀ_curs‹_row
Ë(
GtkTªeVõw
 *
	måì_võw
);

102 
gboﬁón
 (* 
ex∑nd_cﬁœp£_curs‹_row
Ë(
GtkTªeVõw
 *
	måì_võw
,

103 
gboﬁón
 
	mlogiˇl
,

104 
gboﬁón
 
	mex∑nd
,

105 
gboﬁón
 
	m›í_Æl
);

106 
gboﬁón
 (* 
£À˘_curs‹_∑ª¡
Ë(
GtkTªeVõw
 *
	måì_võw
);

107 
gboﬁón
 (* 
°¨t_öãø˘ive_£¨ch
Ë(
GtkTªeVõw
 *
	måì_võw
);

110 (*
	m_gtk_ª£rved0
) ();

111 (*
	m_gtk_ª£rved1
) ();

112 (*
	m_gtk_ª£rved2
) ();

113 (*
	m_gtk_ª£rved3
) ();

114 (*
	m_gtk_ª£rved4
) ();

118 
	$gboﬁón
 (* 
	tGtkTªeVõwCﬁumnDr›Func
Ë(
	tGtkTªeVõw
 *
	tåì_võw
,

119 
	tGtkTªeVõwCﬁumn
 *
	tcﬁumn
,

120 
	tGtkTªeVõwCﬁumn
 *
	t¥ev_cﬁumn
,

121 
	tGtkTªeVõwCﬁumn
 *
	t√xt_cﬁumn
,

122 
	tgpoöãr
 
	td©a
);

123 (* 
	tGtkTªeVõwM≠pögFunc
Ë(
	tGtkTªeVõw
 *
	tåì_võw
,

124 
	tGtkTªeP©h
 *
	t∑th
,

125 
	tgpoöãr
 
	tu£r_d©a
);

126 
	$gboﬁón
 (*
	tGtkTªeVõwSórchEquÆFunc
Ë(
	tGtkTªeModñ
 *
	tmodñ
,

127 
	tgöt
 
	tcﬁumn
,

128 c⁄° 
	tgch¨
 *
	tkey
,

129 
	tGtkTªeIãr
 *
	tôî
,

130 
	tgpoöãr
 
	t£¨ch_d©a
);

131 
	$gboﬁón
 (*
	tGtkTªeVõwRowSï¨©‹Func
Ë(
	tGtkTªeModñ
 *
	tmodñ
,

132 
	tGtkTªeIãr
 *
	tôî
,

133 
	tgpoöãr
 
	td©a
);

134 (*
	tGtkTªeVõwSórchPosôi⁄Func
Ë(
	tGtkTªeVõw
 *
	tåì_võw
,

135 
	tGtkWidgë
 *
	t£¨ch_dülog
,

136 
	tgpoöãr
 
	tu£r_d©a
);

140 
GTy≥
 
	$gtk_åì_võw_gë_ty≥
 (Ë
G_GNUC_CONST
;

141 
GtkWidgë
 *
	`gtk_åì_võw_√w
 ();

142 
GtkWidgë
 *
	`gtk_åì_võw_√w_wôh_modñ
 (
GtkTªeModñ
 *
modñ
);

145 
GtkTªeModñ
 *
	`gtk_åì_võw_gë_modñ
 (
GtkTªeVõw
 *
åì_võw
);

146 
	`gtk_åì_võw_£t_modñ
 (
GtkTªeVõw
 *
åì_võw
,

147 
GtkTªeModñ
 *
modñ
);

148 
GtkTªeSñe˘i⁄
 *
	`gtk_åì_võw_gë_£À˘i⁄
 (
GtkTªeVõw
 *
åì_võw
);

149 
GtkAdju°mít
 *
	`gtk_åì_võw_gë_hadju°mít
 (
GtkTªeVõw
 *
åì_võw
);

150 
	`gtk_åì_võw_£t_hadju°mít
 (
GtkTªeVõw
 *
åì_võw
,

151 
GtkAdju°mít
 *
adju°mít
);

152 
GtkAdju°mít
 *
	`gtk_åì_võw_gë_vadju°mít
 (
GtkTªeVõw
 *
åì_võw
);

153 
	`gtk_åì_võw_£t_vadju°mít
 (
GtkTªeVõw
 *
åì_võw
,

154 
GtkAdju°mít
 *
adju°mít
);

155 
gboﬁón
 
	`gtk_åì_võw_gë_hódîs_visibÀ
 (
GtkTªeVõw
 *
åì_võw
);

156 
	`gtk_åì_võw_£t_hódîs_visibÀ
 (
GtkTªeVõw
 *
åì_võw
,

157 
gboﬁón
 
hódîs_visibÀ
);

158 
	`gtk_åì_võw_cﬁumns_autosize
 (
GtkTªeVõw
 *
åì_võw
);

159 
gboﬁón
 
	`gtk_åì_võw_gë_hódîs_˛ickabÀ
 (
GtkTªeVõw
 *
åì_võw
);

160 
	`gtk_åì_võw_£t_hódîs_˛ickabÀ
 (
GtkTªeVõw
 *
åì_võw
,

161 
gboﬁón
 
£âög
);

162 
	`gtk_åì_võw_£t_ruÀs_höt
 (
GtkTªeVõw
 *
åì_võw
,

163 
gboﬁón
 
£âög
);

164 
gboﬁón
 
	`gtk_åì_võw_gë_ruÀs_höt
 (
GtkTªeVõw
 *
åì_võw
);

167 
göt
 
	`gtk_åì_võw_≠≥nd_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

168 
GtkTªeVõwCﬁumn
 *
cﬁumn
);

169 
göt
 
	`gtk_åì_võw_ªmove_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

170 
GtkTªeVõwCﬁumn
 *
cﬁumn
);

171 
göt
 
	`gtk_åì_võw_ö£π_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

172 
GtkTªeVõwCﬁumn
 *
cﬁumn
,

173 
göt
 
posôi⁄
);

174 
göt
 
	$gtk_åì_võw_ö£π_cﬁumn_wôh_©åibuãs
 (
GtkTªeVõw
 *
åì_võw
,

175 
göt
 
posôi⁄
,

176 c⁄° 
gch¨
 *
tôÀ
,

177 
GtkCñlRídîî
 *
˚Œ
,

178 ...Ë
G_GNUC_NULL_TERMINATED
;

179 
göt
 
	`gtk_åì_võw_ö£π_cﬁumn_wôh_d©a_func
 (
GtkTªeVõw
 *
åì_võw
,

180 
göt
 
posôi⁄
,

181 c⁄° 
gch¨
 *
tôÀ
,

182 
GtkCñlRídîî
 *
˚Œ
,

183 
GtkTªeCñlD©aFunc
 
func
,

184 
gpoöãr
 
d©a
,

185 
GDe°royNŸify
 
dnŸify
);

186 
GtkTªeVõwCﬁumn
 *
	`gtk_åì_võw_gë_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

187 
göt
 
n
);

188 
GLi°
 *
	`gtk_åì_võw_gë_cﬁumns
 (
GtkTªeVõw
 *
åì_võw
);

189 
	`gtk_åì_võw_move_cﬁumn_a·î
 (
GtkTªeVõw
 *
åì_võw
,

190 
GtkTªeVõwCﬁumn
 *
cﬁumn
,

191 
GtkTªeVõwCﬁumn
 *
ba£_cﬁumn
);

192 
	`gtk_åì_võw_£t_ex∑ndî_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

193 
GtkTªeVõwCﬁumn
 *
cﬁumn
);

194 
GtkTªeVõwCﬁumn
 *
	`gtk_åì_võw_gë_ex∑ndî_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
);

195 
	`gtk_åì_võw_£t_cﬁumn_døg_fun˘i⁄
 (
GtkTªeVõw
 *
åì_võw
,

196 
GtkTªeVõwCﬁumnDr›Func
 
func
,

197 
gpoöãr
 
u£r_d©a
,

198 
GDe°royNŸify
 
de°roy
);

201 
	`gtk_åì_võw_s¸ﬁl_to_poöt
 (
GtkTªeVõw
 *
åì_võw
,

202 
göt
 
åì_x
,

203 
göt
 
åì_y
);

204 
	`gtk_åì_võw_s¸ﬁl_to_˚Œ
 (
GtkTªeVõw
 *
åì_võw
,

205 
GtkTªeP©h
 *
∑th
,

206 
GtkTªeVõwCﬁumn
 *
cﬁumn
,

207 
gboﬁón
 
u£_Æign
,

208 
gÊﬂt
 
row_Æign
,

209 
gÊﬂt
 
cﬁ_Æign
);

210 
	`gtk_åì_võw_row_a˘iv©ed
 (
GtkTªeVõw
 *
åì_võw
,

211 
GtkTªeP©h
 *
∑th
,

212 
GtkTªeVõwCﬁumn
 *
cﬁumn
);

213 
	`gtk_åì_võw_ex∑nd_Æl
 (
GtkTªeVõw
 *
åì_võw
);

214 
	`gtk_åì_võw_cﬁœp£_Æl
 (
GtkTªeVõw
 *
åì_võw
);

215 
	`gtk_åì_võw_ex∑nd_to_∑th
 (
GtkTªeVõw
 *
åì_võw
,

216 
GtkTªeP©h
 *
∑th
);

217 
gboﬁón
 
	`gtk_åì_võw_ex∑nd_row
 (
GtkTªeVõw
 *
åì_võw
,

218 
GtkTªeP©h
 *
∑th
,

219 
gboﬁón
 
›í_Æl
);

220 
gboﬁón
 
	`gtk_åì_võw_cﬁœp£_row
 (
GtkTªeVõw
 *
åì_võw
,

221 
GtkTªeP©h
 *
∑th
);

222 
	`gtk_åì_võw_m≠_ex∑nded_rows
 (
GtkTªeVõw
 *
åì_võw
,

223 
GtkTªeVõwM≠pögFunc
 
func
,

224 
gpoöãr
 
d©a
);

225 
gboﬁón
 
	`gtk_åì_võw_row_ex∑nded
 (
GtkTªeVõw
 *
åì_võw
,

226 
GtkTªeP©h
 *
∑th
);

227 
	`gtk_åì_võw_£t_ª‹dîabÀ
 (
GtkTªeVõw
 *
åì_võw
,

228 
gboﬁón
 
ª‹dîabÀ
);

229 
gboﬁón
 
	`gtk_åì_võw_gë_ª‹dîabÀ
 (
GtkTªeVõw
 *
åì_võw
);

230 
	`gtk_åì_võw_£t_curs‹
 (
GtkTªeVõw
 *
åì_võw
,

231 
GtkTªeP©h
 *
∑th
,

232 
GtkTªeVõwCﬁumn
 *
focus_cﬁumn
,

233 
gboﬁón
 
°¨t_edôög
);

234 
	`gtk_åì_võw_£t_curs‹_⁄_˚Œ
 (
GtkTªeVõw
 *
åì_võw
,

235 
GtkTªeP©h
 *
∑th
,

236 
GtkTªeVõwCﬁumn
 *
focus_cﬁumn
,

237 
GtkCñlRídîî
 *
focus_˚Œ
,

238 
gboﬁón
 
°¨t_edôög
);

239 
	`gtk_åì_võw_gë_curs‹
 (
GtkTªeVõw
 *
åì_võw
,

240 
GtkTªeP©h
 **
∑th
,

241 
GtkTªeVõwCﬁumn
 **
focus_cﬁumn
);

245 
GdkWödow
 *
	`gtk_åì_võw_gë_bö_wödow
 (
GtkTªeVõw
 *
åì_võw
);

246 
gboﬁón
 
	`gtk_åì_võw_gë_∑th_©_pos
 (
GtkTªeVõw
 *
åì_võw
,

247 
göt
 
x
,

248 
göt
 
y
,

249 
GtkTªeP©h
 **
∑th
,

250 
GtkTªeVõwCﬁumn
 **
cﬁumn
,

251 
göt
 *
˚Œ_x
,

252 
göt
 *
˚Œ_y
);

253 
	`gtk_åì_võw_gë_˚Œ_¨ó
 (
GtkTªeVõw
 *
åì_võw
,

254 
GtkTªeP©h
 *
∑th
,

255 
GtkTªeVõwCﬁumn
 *
cﬁumn
,

256 
GdkRe˘™gÀ
 *
ª˘
);

257 
	`gtk_åì_võw_gë_background_¨ó
 (
GtkTªeVõw
 *
åì_võw
,

258 
GtkTªeP©h
 *
∑th
,

259 
GtkTªeVõwCﬁumn
 *
cﬁumn
,

260 
GdkRe˘™gÀ
 *
ª˘
);

261 
	`gtk_åì_võw_gë_visibÀ_ª˘
 (
GtkTªeVõw
 *
åì_võw
,

262 
GdkRe˘™gÀ
 *
visibÀ_ª˘
);

264 #i‚de‡
GTK_DISABLE_DEPRECATED


265 
	`gtk_åì_võw_widgë_to_åì_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

266 
göt
 
wx
,

267 
göt
 
wy
,

268 
göt
 *
tx
,

269 
göt
 *
ty
);

270 
	`gtk_åì_võw_åì_to_widgë_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

271 
göt
 
tx
,

272 
göt
 
ty
,

273 
göt
 *
wx
,

274 
göt
 *
wy
);

276 
gboﬁón
 
	`gtk_åì_võw_gë_visibÀ_ønge
 (
GtkTªeVõw
 *
åì_võw
,

277 
GtkTªeP©h
 **
°¨t_∑th
,

278 
GtkTªeP©h
 **
íd_∑th
);

281 
	`gtk_åì_võw_íabÀ_modñ_døg_sour˚
 (
GtkTªeVõw
 *
åì_võw
,

282 
GdkModifõrTy≥
 
°¨t_buâ⁄_mask
,

283 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

284 
göt
 
n_èrgës
,

285 
GdkDøgA˘i⁄
 
a˘i⁄s
);

286 
	`gtk_åì_võw_íabÀ_modñ_døg_de°
 (
GtkTªeVõw
 *
åì_võw
,

287 c⁄° 
GtkT¨gëE¡ry
 *
èrgës
,

288 
göt
 
n_èrgës
,

289 
GdkDøgA˘i⁄
 
a˘i⁄s
);

290 
	`gtk_åì_võw_un£t_rows_døg_sour˚
 (
GtkTªeVõw
 *
åì_võw
);

291 
	`gtk_åì_võw_un£t_rows_døg_de°
 (
GtkTªeVõw
 *
åì_võw
);

295 
	`gtk_åì_võw_£t_døg_de°_row
 (
GtkTªeVõw
 *
åì_võw
,

296 
GtkTªeP©h
 *
∑th
,

297 
GtkTªeVõwDr›Posôi⁄
 
pos
);

298 
	`gtk_åì_võw_gë_døg_de°_row
 (
GtkTªeVõw
 *
åì_võw
,

299 
GtkTªeP©h
 **
∑th
,

300 
GtkTªeVõwDr›Posôi⁄
 *
pos
);

301 
gboﬁón
 
	`gtk_åì_võw_gë_de°_row_©_pos
 (
GtkTªeVõw
 *
åì_võw
,

302 
göt
 
døg_x
,

303 
göt
 
døg_y
,

304 
GtkTªeP©h
 **
∑th
,

305 
GtkTªeVõwDr›Posôi⁄
 *
pos
);

306 
GdkPixm≠
 *
	`gtk_åì_võw_¸óã_row_døg_ic⁄
 (
GtkTªeVõw
 *
åì_võw
,

307 
GtkTªeP©h
 *
∑th
);

310 
	`gtk_åì_võw_£t_íabÀ_£¨ch
 (
GtkTªeVõw
 *
åì_võw
,

311 
gboﬁón
 
íabÀ_£¨ch
);

312 
gboﬁón
 
	`gtk_åì_võw_gë_íabÀ_£¨ch
 (
GtkTªeVõw
 *
åì_võw
);

313 
göt
 
	`gtk_åì_võw_gë_£¨ch_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
);

314 
	`gtk_åì_võw_£t_£¨ch_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

315 
göt
 
cﬁumn
);

316 
GtkTªeVõwSórchEquÆFunc
 
	`gtk_åì_võw_gë_£¨ch_equÆ_func
 (
GtkTªeVõw
 *
åì_võw
);

317 
	`gtk_åì_võw_£t_£¨ch_equÆ_func
 (
GtkTªeVõw
 *
åì_võw
,

318 
GtkTªeVõwSórchEquÆFunc
 
£¨ch_equÆ_func
,

319 
gpoöãr
 
£¨ch_u£r_d©a
,

320 
GDe°royNŸify
 
£¨ch_de°roy
);

322 
GtkE¡ry
 *
	`gtk_åì_võw_gë_£¨ch_íåy
 (
GtkTªeVõw
 *
åì_võw
);

323 
	`gtk_åì_võw_£t_£¨ch_íåy
 (
GtkTªeVõw
 *
åì_võw
,

324 
GtkE¡ry
 *
íåy
);

325 
GtkTªeVõwSórchPosôi⁄Func
 
	`gtk_åì_võw_gë_£¨ch_posôi⁄_func
 (
GtkTªeVõw
 *
åì_võw
);

326 
	`gtk_åì_võw_£t_£¨ch_posôi⁄_func
 (
GtkTªeVõw
 *
åì_võw
,

327 
GtkTªeVõwSórchPosôi⁄Func
 
func
,

328 
gpoöãr
 
d©a
,

329 
GDe°royNŸify
 
de°roy
);

332 
	`gtk_åì_võw_c⁄vît_widgë_to_åì_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

333 
göt
 
wx
,

334 
göt
 
wy
,

335 
göt
 *
tx
,

336 
göt
 *
ty
);

337 
	`gtk_åì_võw_c⁄vît_åì_to_widgë_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

338 
göt
 
tx
,

339 
göt
 
ty
,

340 
göt
 *
wx
,

341 
göt
 *
wy
);

342 
	`gtk_åì_võw_c⁄vît_widgë_to_bö_wödow_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

343 
göt
 
wx
,

344 
göt
 
wy
,

345 
göt
 *
bx
,

346 
göt
 *
by
);

347 
	`gtk_åì_võw_c⁄vît_bö_wödow_to_widgë_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

348 
göt
 
bx
,

349 
göt
 
by
,

350 
göt
 *
wx
,

351 
göt
 *
wy
);

352 
	`gtk_åì_võw_c⁄vît_åì_to_bö_wödow_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

353 
göt
 
tx
,

354 
göt
 
ty
,

355 
göt
 *
bx
,

356 
göt
 *
by
);

357 
	`gtk_åì_võw_c⁄vît_bö_wödow_to_åì_co‹ds
 (
GtkTªeVõw
 *
åì_võw
,

358 
göt
 
bx
,

359 
göt
 
by
,

360 
göt
 *
tx
,

361 
göt
 *
ty
);

365 (* 
	tGtkTªeDe°royCou¡Func
Ë(
	tGtkTªeVõw
 *
	tåì_võw
,

366 
	tGtkTªeP©h
 *
	t∑th
,

367 
	tgöt
 
	tchûdªn
,

368 
	tgpoöãr
 
	tu£r_d©a
);

369 
	`gtk_åì_võw_£t_de°roy_cou¡_func
 (
GtkTªeVõw
 *
åì_võw
,

370 
GtkTªeDe°royCou¡Func
 
func
,

371 
gpoöãr
 
d©a
,

372 
GDe°royNŸify
 
de°roy
);

374 
	`gtk_åì_võw_£t_fixed_height_mode
 (
GtkTªeVõw
 *
åì_võw
,

375 
gboﬁón
 
íabÀ
);

376 
gboﬁón
 
	`gtk_åì_võw_gë_fixed_height_mode
 (
GtkTªeVõw
 *
åì_võw
);

377 
	`gtk_åì_võw_£t_hovî_£À˘i⁄
 (
GtkTªeVõw
 *
åì_võw
,

378 
gboﬁón
 
hovî
);

379 
gboﬁón
 
	`gtk_åì_võw_gë_hovî_£À˘i⁄
 (
GtkTªeVõw
 *
åì_võw
);

380 
	`gtk_åì_võw_£t_hovî_ex∑nd
 (
GtkTªeVõw
 *
åì_võw
,

381 
gboﬁón
 
ex∑nd
);

382 
gboﬁón
 
	`gtk_åì_võw_gë_hovî_ex∑nd
 (
GtkTªeVõw
 *
åì_võw
);

383 
	`gtk_åì_võw_£t_rubbî_b™dög
 (
GtkTªeVõw
 *
åì_võw
,

384 
gboﬁón
 
íabÀ
);

385 
gboﬁón
 
	`gtk_åì_võw_gë_rubbî_b™dög
 (
GtkTªeVõw
 *
åì_võw
);

387 
gboﬁón
 
	`gtk_åì_võw_is_rubbî_b™dög_a˘ive
 (
GtkTªeVõw
 *
åì_võw
);

389 
GtkTªeVõwRowSï¨©‹Func
 
	`gtk_åì_võw_gë_row_£∑øt‹_func
 (
GtkTªeVõw
 *
åì_võw
);

390 
	`gtk_åì_võw_£t_row_£∑øt‹_func
 (
GtkTªeVõw
 *
åì_võw
,

391 
GtkTªeVõwRowSï¨©‹Func
 
func
,

392 
gpoöãr
 
d©a
,

393 
GDe°royNŸify
 
de°roy
);

395 
GtkTªeVõwGridLöes
 
	`gtk_åì_võw_gë_grid_löes
 (
GtkTªeVõw
 *
åì_võw
);

396 
	`gtk_åì_võw_£t_grid_löes
 (
GtkTªeVõw
 *
åì_võw
,

397 
GtkTªeVõwGridLöes
 
grid_löes
);

398 
gboﬁón
 
	`gtk_åì_võw_gë_íabÀ_åì_löes
 (
GtkTªeVõw
 *
åì_võw
);

399 
	`gtk_åì_võw_£t_íabÀ_åì_löes
 (
GtkTªeVõw
 *
åì_võw
,

400 
gboﬁón
 
íabÀd
);

401 
	`gtk_åì_võw_£t_show_ex∑ndîs
 (
GtkTªeVõw
 *
åì_võw
,

402 
gboﬁón
 
íabÀd
);

403 
gboﬁón
 
	`gtk_åì_võw_gë_show_ex∑ndîs
 (
GtkTªeVõw
 *
åì_võw
);

404 
	`gtk_åì_võw_£t_Àvñ_ödíèti⁄
 (
GtkTªeVõw
 *
åì_võw
,

405 
göt
 
ödíèti⁄
);

406 
göt
 
	`gtk_åì_võw_gë_Àvñ_ödíèti⁄
 (
GtkTªeVõw
 *
åì_võw
);

409 
	`gtk_åì_võw_£t_toﬁtù_row
 (
GtkTªeVõw
 *
åì_võw
,

410 
GtkToﬁtù
 *
toﬁtù
,

411 
GtkTªeP©h
 *
∑th
);

412 
	`gtk_åì_võw_£t_toﬁtù_˚Œ
 (
GtkTªeVõw
 *
åì_võw
,

413 
GtkToﬁtù
 *
toﬁtù
,

414 
GtkTªeP©h
 *
∑th
,

415 
GtkTªeVõwCﬁumn
 *
cﬁumn
,

416 
GtkCñlRídîî
 *
˚Œ
);

417 
gboﬁón
 
	`gtk_åì_võw_gë_toﬁtù_c⁄ãxt
(
GtkTªeVõw
 *
åì_võw
,

418 
göt
 *
x
,

419 
göt
 *
y
,

420 
gboﬁón
 
keybﬂrd_tù
,

421 
GtkTªeModñ
 **
modñ
,

422 
GtkTªeP©h
 **
∑th
,

423 
GtkTªeIãr
 *
ôî
);

424 
	`gtk_åì_võw_£t_toﬁtù_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
,

425 
göt
 
cﬁumn
);

426 
göt
 
	`gtk_åì_võw_gë_toﬁtù_cﬁumn
 (
GtkTªeVõw
 *
åì_võw
);

428 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

24 #i‚de‡
__GTK_TREE_VIEW_COLUMN_H__


25 
	#__GTK_TREE_VIEW_COLUMN_H__


	)

27 
	~<gtk/gtk˚Œªndîî.h
>

28 
	~<gtk/gtkåìmodñ.h
>

29 
	~<gtk/gtkåìs‹èbÀ.h
>

32 
	~<gtk/gtkobje˘.h
>

35 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_TREE_VIEW_COLUMN
 (
	`gtk_åì_võw_cﬁumn_gë_ty≥
 ())

	)

39 
	#GTK_TREE_VIEW_COLUMN
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_TREE_VIEW_COLUMN
, 
GtkTªeVõwCﬁumn
))

	)

40 
	#GTK_TREE_VIEW_COLUMN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_TREE_VIEW_COLUMN
, 
GtkTªeVõwCﬁumnCœss
))

	)

41 
	#GTK_IS_TREE_VIEW_COLUMN
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_TREE_VIEW_COLUMN
))

	)

42 
	#GTK_IS_TREE_VIEW_COLUMN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_TREE_VIEW_COLUMN
))

	)

43 
	#GTK_TREE_VIEW_COLUMN_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_TREE_VIEW_COLUMN
, 
GtkTªeVõwCﬁumnCœss
))

	)

47 
	mGTK_TREE_VIEW_COLUMN_GROW_ONLY
,

48 
	mGTK_TREE_VIEW_COLUMN_AUTOSIZE
,

49 
	mGTK_TREE_VIEW_COLUMN_FIXED


50 } 
	tGtkTªeVõwCﬁumnSizög
;

52 
_GtkTªeVõwCﬁumn
 
	tGtkTªeVõwCﬁumn
;

53 
_GtkTªeVõwCﬁumnCœss
 
	tGtkTªeVõwCﬁumnCœss
;

55 (* 
	tGtkTªeCñlD©aFunc
Ë(
	tGtkTªeVõwCﬁumn
 *
	tåì_cﬁumn
,

56 
	tGtkCñlRídîî
 *
	t˚Œ
,

57 
	tGtkTªeModñ
 *
	tåì_modñ
,

58 
	tGtkTªeIãr
 *
	tôî
,

59 
	tgpoöãr
 
	td©a
);

62 
	s_GtkTªeVõwCﬁumn


64 
GtkObje˘
 
∑ª¡
;

66 
GtkWidgë
 *
	`GSEAL
 (
åì_võw
);

67 
GtkWidgë
 *
	`GSEAL
 (
buâ⁄
);

68 
GtkWidgë
 *
	`GSEAL
 (
chûd
);

69 
GtkWidgë
 *
	`GSEAL
 (
¨row
);

70 
GtkWidgë
 *
	`GSEAL
 (
Æignmít
);

71 
GdkWödow
 *
	`GSEAL
 (
wödow
);

72 
GtkCñlEdôabÀ
 *
	`GSEAL
 (
edôabÀ_widgë
);

73 
gÊﬂt
 
	`GSEAL
 (
xÆign
);

74 
guöt
 
	`GSEAL
 (
¥›îty_ch™ged_sig«l
);

75 
göt
 
	`GSEAL
 (
•acög
);

79 
GtkTªeVõwCﬁumnSizög
 
	`GSEAL
 (
cﬁumn_ty≥
);

80 
göt
 
	`GSEAL
 (
ªque°ed_width
);

81 
göt
 
	`GSEAL
 (
buâ⁄_ªque°
);

82 
göt
 
	`GSEAL
 (
ªsized_width
);

83 
göt
 
	`GSEAL
 (
width
);

84 
göt
 
	`GSEAL
 (
fixed_width
);

85 
göt
 
	`GSEAL
 (
mö_width
);

86 
göt
 
	`GSEAL
 (
max_width
);

89 
göt
 
	`GSEAL
 (
døg_x
);

90 
göt
 
	`GSEAL
 (
døg_y
);

92 
gch¨
 *
	`GSEAL
 (
tôÀ
);

93 
GLi°
 *
	`GSEAL
 (
˚Œ_li°
);

96 
guöt
 
	`GSEAL
 (
s‹t_˛icked_sig«l
);

97 
guöt
 
	`GSEAL
 (
s‹t_cﬁumn_ch™ged_sig«l
);

98 
göt
 
	`GSEAL
 (
s‹t_cﬁumn_id
);

99 
GtkS‹tTy≥
 
	`GSEAL
 (
s‹t_‹dî
);

102 
guöt
 
	`GSEAL
 (
visibÀ
) : 1;

103 
guöt
 
	`GSEAL
 (
ªsizabÀ
) : 1;

104 
guöt
 
	`GSEAL
 (
˛ickabÀ
) : 1;

105 
guöt
 
	`GSEAL
 (
dúty
) : 1;

106 
guöt
 
	`GSEAL
 (
show_s‹t_ödiˇt‹
) : 1;

107 
guöt
 
	`GSEAL
 (
maybe_ª‹dîed
) : 1;

108 
guöt
 
	`GSEAL
 (
ª‹dîabÀ
) : 1;

109 
guöt
 
	`GSEAL
 (
u£_ªsized_width
) : 1;

110 
guöt
 
	`GSEAL
 (
ex∑nd
) : 1;

113 
	s_GtkTªeVõwCﬁumnCœss


115 
GtkObje˘Cœss
 
∑ª¡_˛ass
;

117 (*
˛icked
Ë(
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

120 (*
_gtk_ª£rved1
) ();

121 (*
_gtk_ª£rved2
) ();

122 (*
_gtk_ª£rved3
) ();

123 (*
_gtk_ª£rved4
) ();

126 
GTy≥
 
	$gtk_åì_võw_cﬁumn_gë_ty≥
 (Ë
G_GNUC_CONST
;

127 
GtkTªeVõwCﬁumn
 *
	`gtk_åì_võw_cﬁumn_√w
 ();

128 
GtkTªeVõwCﬁumn
 *
	$gtk_åì_võw_cﬁumn_√w_wôh_©åibuãs
 (c⁄° 
gch¨
 *
tôÀ
,

129 
GtkCñlRídîî
 *
˚Œ
,

130 ...Ë
G_GNUC_NULL_TERMINATED
;

131 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

132 
GtkCñlRídîî
 *
˚Œ
,

133 
gboﬁón
 
ex∑nd
);

134 
	`gtk_åì_võw_cﬁumn_∑ck_íd
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

135 
GtkCñlRídîî
 *
˚Œ
,

136 
gboﬁón
 
ex∑nd
);

137 
	`gtk_åì_võw_cﬁumn_˛ór
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

138 
GLi°
 *
	`gtk_åì_võw_cﬁumn_gë_˚Œ_ªndîîs
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

139 
	`gtk_åì_võw_cﬁumn_add_©åibuã
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

140 
GtkCñlRídîî
 *
˚Œ_ªndîî
,

141 c⁄° 
gch¨
 *
©åibuã
,

142 
göt
 
cﬁumn
);

143 
	$gtk_åì_võw_cﬁumn_£t_©åibuãs
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

144 
GtkCñlRídîî
 *
˚Œ_ªndîî
,

145 ...Ë
G_GNUC_NULL_TERMINATED
;

146 
	`gtk_åì_võw_cﬁumn_£t_˚Œ_d©a_func
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

147 
GtkCñlRídîî
 *
˚Œ_ªndîî
,

148 
GtkTªeCñlD©aFunc
 
func
,

149 
gpoöãr
 
func_d©a
,

150 
GDe°royNŸify
 
de°roy
);

151 
	`gtk_åì_võw_cﬁumn_˛ór_©åibuãs
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

152 
GtkCñlRídîî
 *
˚Œ_ªndîî
);

153 
	`gtk_åì_võw_cﬁumn_£t_•acög
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

154 
göt
 
•acög
);

155 
göt
 
	`gtk_åì_võw_cﬁumn_gë_•acög
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

156 
	`gtk_åì_võw_cﬁumn_£t_visibÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

157 
gboﬁón
 
visibÀ
);

158 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_gë_visibÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

159 
	`gtk_åì_võw_cﬁumn_£t_ªsizabÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

160 
gboﬁón
 
ªsizabÀ
);

161 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_gë_ªsizabÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

162 
	`gtk_åì_võw_cﬁumn_£t_sizög
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

163 
GtkTªeVõwCﬁumnSizög
 
ty≥
);

164 
GtkTªeVõwCﬁumnSizög
 
	`gtk_åì_võw_cﬁumn_gë_sizög
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

165 
göt
 
	`gtk_åì_võw_cﬁumn_gë_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

166 
göt
 
	`gtk_åì_võw_cﬁumn_gë_fixed_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

167 
	`gtk_åì_võw_cﬁumn_£t_fixed_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

168 
göt
 
fixed_width
);

169 
	`gtk_åì_võw_cﬁumn_£t_mö_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

170 
göt
 
mö_width
);

171 
göt
 
	`gtk_åì_võw_cﬁumn_gë_mö_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

172 
	`gtk_åì_võw_cﬁumn_£t_max_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

173 
göt
 
max_width
);

174 
göt
 
	`gtk_åì_võw_cﬁumn_gë_max_width
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

175 
	`gtk_åì_võw_cﬁumn_˛icked
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

181 
	`gtk_åì_võw_cﬁumn_£t_tôÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

182 c⁄° 
gch¨
 *
tôÀ
);

183 
G_CONST_RETURN
 
gch¨
 *
	`gtk_åì_võw_cﬁumn_gë_tôÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

184 
	`gtk_åì_võw_cﬁumn_£t_ex∑nd
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

185 
gboﬁón
 
ex∑nd
);

186 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_gë_ex∑nd
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

187 
	`gtk_åì_võw_cﬁumn_£t_˛ickabÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

188 
gboﬁón
 
˛ickabÀ
);

189 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_gë_˛ickabÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

190 
	`gtk_åì_võw_cﬁumn_£t_widgë
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

191 
GtkWidgë
 *
widgë
);

192 
GtkWidgë
 *
	`gtk_åì_võw_cﬁumn_gë_widgë
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

193 
	`gtk_åì_võw_cﬁumn_£t_Æignmít
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

194 
gÊﬂt
 
xÆign
);

195 
gÊﬂt
 
	`gtk_åì_võw_cﬁumn_gë_Æignmít
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

196 
	`gtk_åì_võw_cﬁumn_£t_ª‹dîabÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

197 
gboﬁón
 
ª‹dîabÀ
);

198 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_gë_ª‹dîabÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

205 
	`gtk_åì_võw_cﬁumn_£t_s‹t_cﬁumn_id
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

206 
göt
 
s‹t_cﬁumn_id
);

207 
göt
 
	`gtk_åì_võw_cﬁumn_gë_s‹t_cﬁumn_id
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

208 
	`gtk_åì_võw_cﬁumn_£t_s‹t_ödiˇt‹
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

209 
gboﬁón
 
£âög
);

210 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_gë_s‹t_ödiˇt‹
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

211 
	`gtk_åì_võw_cﬁumn_£t_s‹t_‹dî
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

212 
GtkS‹tTy≥
 
‹dî
);

213 
GtkS‹tTy≥
 
	`gtk_åì_võw_cﬁumn_gë_s‹t_‹dî
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

218 
	`gtk_åì_võw_cﬁumn_˚Œ_£t_˚Œ_d©a
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

219 
GtkTªeModñ
 *
åì_modñ
,

220 
GtkTªeIãr
 *
ôî
,

221 
gboﬁón
 
is_ex∑ndî
,

222 
gboﬁón
 
is_ex∑nded
);

223 
	`gtk_åì_võw_cﬁumn_˚Œ_gë_size
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

224 c⁄° 
GdkRe˘™gÀ
 *
˚Œ_¨ó
,

225 
göt
 *
x_off£t
,

226 
göt
 *
y_off£t
,

227 
göt
 *
width
,

228 
göt
 *
height
);

229 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_˚Œ_is_visibÀ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

230 
	`gtk_åì_võw_cﬁumn_focus_˚Œ
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

231 
GtkCñlRídîî
 *
˚Œ
);

232 
gboﬁón
 
	`gtk_åì_võw_cﬁumn_˚Œ_gë_posôi⁄
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
,

233 
GtkCñlRídîî
 *
˚Œ_ªndîî
,

234 
göt
 *
°¨t_pos
,

235 
göt
 *
width
);

236 
	`gtk_åì_võw_cﬁumn_queue_ªsize
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

237 
GtkWidgë
 *
	`gtk_åì_võw_cﬁumn_gë_åì_võw
 (
GtkTªeVõwCﬁumn
 *
åì_cﬁumn
);

240 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktypeutils.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_TYPE_UTILS_H__


32 
	#__GTK_TYPE_UTILS_H__


	)

36 
	~<gtk/gtkty≥buûtös.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_IDENTIFIER
 (
	`gtk_idítifõr_gë_ty≥
 ())

	)

42 
GTy≥
 
	$gtk_idítifõr_gë_ty≥
 (Ë
G_GNUC_CONST
;

48 
_GtkArg
 
	tGtkArg
;

49 
_GtkObje˘
 
	tGtkObje˘
;

50 
	$gboﬁón
 (*
	tGtkFun˘i⁄
Ë(
	tgpoöãr
 
	td©a
);

51 (*
	tGtkCÆlbackM¨shÆ
Ë(
	tGtkObje˘
 *
	tobje˘
,

52 
	tgpoöãr
 
	td©a
,

53 
	tguöt
 
	tn_¨gs
,

54 
	tGtkArg
 *
	t¨gs
);

59 
gch¨
 * (*
	tGtkTøn¶©eFunc
Ë(c⁄° 
	tgch¨
 *
	t∑th
,

60 
	tgpoöãr
 
	tfunc_d©a
);

66 #i‚de‡
GTK_DISABLE_DEPRECATED


73 
	#GTK_TYPE_INVALID
 
G_TYPE_INVALID


	)

74 
	#GTK_TYPE_NONE
 
G_TYPE_NONE


	)

75 
	#GTK_TYPE_ENUM
 
G_TYPE_ENUM


	)

76 
	#GTK_TYPE_FLAGS
 
G_TYPE_FLAGS


	)

79 
	#GTK_TYPE_CHAR
 
G_TYPE_CHAR


	)

80 
	#GTK_TYPE_UCHAR
 
G_TYPE_UCHAR


	)

81 
	#GTK_TYPE_BOOL
 
G_TYPE_BOOLEAN


	)

82 
	#GTK_TYPE_INT
 
G_TYPE_INT


	)

83 
	#GTK_TYPE_UINT
 
G_TYPE_UINT


	)

84 
	#GTK_TYPE_LONG
 
G_TYPE_LONG


	)

85 
	#GTK_TYPE_ULONG
 
G_TYPE_ULONG


	)

86 
	#GTK_TYPE_FLOAT
 
G_TYPE_FLOAT


	)

87 
	#GTK_TYPE_DOUBLE
 
G_TYPE_DOUBLE


	)

88 
	#GTK_TYPE_STRING
 
G_TYPE_STRING


	)

89 
	#GTK_TYPE_BOXED
 
G_TYPE_BOXED


	)

90 
	#GTK_TYPE_POINTER
 
G_TYPE_POINTER


	)

92 
GTy≥
 
	tGtkFundamíèlTy≥
;

95 
	#GTK_CLASS_NAME
(
˛ass
Ë(
	`g_ty≥_«me
 (
	`G_TYPE_FROM_CLASS
 (˛ass)))

	)

96 
	#GTK_CLASS_TYPE
(
˛ass
Ë(
	`G_TYPE_FROM_CLASS
 (˛ass))

	)

97 
	#GTK_TYPE_IS_OBJECT
(
ty≥
Ë(
	`g_ty≥_is_a
 (—y≥), 
GTK_TYPE_OBJECT
))

	)

102 
	#GTK_TYPE_FUNDAMENTAL_LAST
 (
G_TYPE_LAST_RESERVED_FUNDAMENTAL
 - 1)

	)

103 
	#GTK_TYPE_FUNDAMENTAL_MAX
 (
G_TYPE_FUNDAMENTAL_MAX
)

	)

105 
	#GTK_FUNDAMENTAL_TYPE
 
G_TYPE_FUNDAMENTAL


	)

106 
	#GTK_STRUCT_OFFSET
 
G_STRUCT_OFFSET


	)

109 
	#GTK_CHECK_CAST
 
G_TYPE_CHECK_INSTANCE_CAST


	)

110 
	#GTK_CHECK_CLASS_CAST
 
G_TYPE_CHECK_CLASS_CAST


	)

111 
	#GTK_CHECK_GET_CLASS
 
G_TYPE_INSTANCE_GET_CLASS


	)

112 
	#GTK_CHECK_TYPE
 
G_TYPE_CHECK_INSTANCE_TYPE


	)

113 
	#GTK_CHECK_CLASS_TYPE
 
G_TYPE_CHECK_CLASS_TYPE


	)

117 
GTy≥
 
	tGtkTy≥
;

118 
GTy≥In°™˚
 
	tGtkTy≥Obje˘
;

119 
GTy≥Cœss
 
	tGtkTy≥Cœss
;

120 
GBa£InôFunc
 
	tGtkCœssInôFunc
;

121 
GIn°™˚InôFunc
 
	tGtkObje˘InôFunc
;

122 
GSig«lCM¨shÆÀr
 
	tGtkSig«lM¨shÆÀr
;

124 (*
	tGtkDe°royNŸify
Ë(
	tgpoöãr
 
	td©a
);

125 (*
	tGtkSig«lFunc
) ();

127 
	#GTK_SIGNAL_FUNC
(
f
Ë
	`G_CALLBACK
(f)

	)

131 #i‡!
	`deföed
 (
GTK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
)

136 
	s_GtkArg


138 
GTy≥
 
ty≥
;

139 
gch¨
 *
«me
;

149 
gch¨
 
ch¨_d©a
;

150 
guch¨
 
uch¨_d©a
;

151 
gboﬁón
 
boﬁ_d©a
;

152 
göt
 
öt_d©a
;

153 
guöt
 
uöt_d©a
;

154 
gl⁄g
 
l⁄g_d©a
;

155 
gul⁄g
 
ul⁄g_d©a
;

156 
gÊﬂt
 
Êﬂt_d©a
;

157 
gdoubÀ
 
doubÀ_d©a
;

158 
gch¨
 *
°rög_d©a
;

159 
GtkObje˘
 *
obje˘_d©a
;

160 
gpoöãr
 
poöãr_d©a
;

164 
GCÆlback
 
f
;

165 
gpoöãr
 
d
;

166 } 
sig«l_d©a
;

167 } 
d
;

174 
	#GTK_VALUE_CHAR
(
a
Ë(◊).
d
.
ch¨_d©a
)

	)

175 
	#GTK_VALUE_UCHAR
(
a
Ë(◊).
d
.
uch¨_d©a
)

	)

176 
	#GTK_VALUE_BOOL
(
a
Ë(◊).
d
.
boﬁ_d©a
)

	)

177 
	#GTK_VALUE_INT
(
a
Ë(◊).
d
.
öt_d©a
)

	)

178 
	#GTK_VALUE_UINT
(
a
Ë(◊).
d
.
uöt_d©a
)

	)

179 
	#GTK_VALUE_LONG
(
a
Ë(◊).
d
.
l⁄g_d©a
)

	)

180 
	#GTK_VALUE_ULONG
(
a
Ë(◊).
d
.
ul⁄g_d©a
)

	)

181 
	#GTK_VALUE_FLOAT
(
a
Ë(◊).
d
.
Êﬂt_d©a
)

	)

182 
	#GTK_VALUE_DOUBLE
(
a
Ë(◊).
d
.
doubÀ_d©a
)

	)

183 
	#GTK_VALUE_STRING
(
a
Ë(◊).
d
.
°rög_d©a
)

	)

184 
	#GTK_VALUE_ENUM
(
a
Ë(◊).
d
.
öt_d©a
)

	)

185 
	#GTK_VALUE_FLAGS
(
a
Ë(◊).
d
.
uöt_d©a
)

	)

186 
	#GTK_VALUE_BOXED
(
a
Ë(◊).
d
.
poöãr_d©a
)

	)

187 
	#GTK_VALUE_OBJECT
(
a
Ë(◊).
d
.
obje˘_d©a
)

	)

188 
	#GTK_VALUE_POINTER
(
a
Ë(◊).
d
.
poöãr_d©a
)

	)

189 
	#GTK_VALUE_SIGNAL
(
a
Ë(◊).
d
.
sig«l_d©a
)

	)

193 #i‚de‡
GTK_DISABLE_DEPRECATED


199 
	#GTK_RETLOC_CHAR
(
a
Ë((
gch¨
*Ë◊).
d
.
poöãr_d©a
)

	)

200 
	#GTK_RETLOC_UCHAR
(
a
Ë((
guch¨
*Ë◊).
d
.
poöãr_d©a
)

	)

201 
	#GTK_RETLOC_BOOL
(
a
Ë((
gboﬁón
*Ë◊).
d
.
poöãr_d©a
)

	)

202 
	#GTK_RETLOC_INT
(
a
Ë((
göt
*Ë◊).
d
.
poöãr_d©a
)

	)

203 
	#GTK_RETLOC_UINT
(
a
Ë((
guöt
*Ë◊).
d
.
poöãr_d©a
)

	)

204 
	#GTK_RETLOC_LONG
(
a
Ë((
gl⁄g
*Ë◊).
d
.
poöãr_d©a
)

	)

205 
	#GTK_RETLOC_ULONG
(
a
Ë((
gul⁄g
*Ë◊).
d
.
poöãr_d©a
)

	)

206 
	#GTK_RETLOC_FLOAT
(
a
Ë((
gÊﬂt
*Ë◊).
d
.
poöãr_d©a
)

	)

207 
	#GTK_RETLOC_DOUBLE
(
a
Ë((
gdoubÀ
*Ë◊).
d
.
poöãr_d©a
)

	)

208 
	#GTK_RETLOC_STRING
(
a
Ë((
gch¨
**Ë◊).
d
.
poöãr_d©a
)

	)

209 
	#GTK_RETLOC_ENUM
(
a
Ë((
göt
*Ë◊).
d
.
poöãr_d©a
)

	)

210 
	#GTK_RETLOC_FLAGS
(
a
Ë((
guöt
*Ë◊).
d
.
poöãr_d©a
)

	)

211 
	#GTK_RETLOC_BOXED
(
a
Ë((
gpoöãr
*Ë◊).
d
.
poöãr_d©a
)

	)

212 
	#GTK_RETLOC_OBJECT
(
a
Ë((
GtkObje˘
**Ë◊).
d
.
poöãr_d©a
)

	)

213 
	#GTK_RETLOC_POINTER
(
a
Ë((
gpoöãr
*Ë◊).
d
.
poöãr_d©a
)

	)

220 
_GtkTy≥Info
 
	tGtkTy≥Info
;

222 
	s_GtkTy≥Info


224 
gch¨
 *
ty≥_«me
;

225 
guöt
 
obje˘_size
;

226 
guöt
 
˛ass_size
;

227 
GtkCœssInôFunc
 
˛ass_öô_func
;

228 
GtkObje˘InôFunc
 
obje˘_öô_func
;

229 
gpoöãr
 
ª£rved_1
;

230 
gpoöãr
 
ª£rved_2
;

231 
GtkCœssInôFunc
 
ba£_˛ass_öô_func
;

234 
	`gtk_ty≥_öô
 (
GTy≥DebugFœgs
 
debug_Êags
);

235 
GtkTy≥
 
	`gtk_ty≥_unique
 (GtkTy≥ 
∑ª¡_ty≥
,

236 c⁄° 
GtkTy≥Info
 *
gtköfo
);

237 
gpoöãr
 
	`gtk_ty≥_˛ass
 (
GtkTy≥
 
ty≥
);

238 
gpoöãr
 
	`gtk_ty≥_√w
 (
GtkTy≥
 
ty≥
);

241 
	#gtk_ty≥_«me
(
ty≥
Ë
	`g_ty≥_«me
 (ty≥)

	)

242 
	#gtk_ty≥_‰om_«me
(
«me
Ë
	`g_ty≥_‰om_«me
 («me)

	)

243 
	#gtk_ty≥_∑ª¡
(
ty≥
Ë
	`g_ty≥_∑ª¡
 (ty≥)

	)

244 
	#gtk_ty≥_is_a
(
ty≥
, 
is_a_ty≥
Ë
	`g_ty≥_is_a
 (—y≥), (is_a_ty≥))

	)

249 
GEnumVÆue
 
	tGtkEnumVÆue
;

250 
GFœgsVÆue
 
	tGtkFœgVÆue
;

251 
GtkEnumVÆue
* 
	`gtk_ty≥_íum_gë_vÆues
 (
GtkTy≥
 
íum_ty≥
);

252 
GtkFœgVÆue
* 
	`gtk_ty≥_Êags_gë_vÆues
 (
GtkTy≥
 
Êags_ty≥
);

253 
GtkEnumVÆue
* 
	`gtk_ty≥_íum_föd_vÆue
 (
GtkTy≥
 
íum_ty≥
,

254 c⁄° 
gch¨
 *
vÆue_«me
);

255 
GtkFœgVÆue
* 
	`gtk_ty≥_Êags_föd_vÆue
 (
GtkTy≥
 
Êags_ty≥
,

256 c⁄° 
gch¨
 *
vÆue_«me
);

260 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkuimanager.h

31 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

35 #i‚de‡
__GTK_UI_MANAGER_H__


36 
	#__GTK_UI_MANAGER_H__


	)

38 
	~<gtk/gtkac˚lgroup.h
>

39 
	~<gtk/gtkwidgë.h
>

40 
	~<gtk/gtka˘i⁄.h
>

41 
	~<gtk/gtka˘i⁄group.h
>

43 
	gG_BEGIN_DECLS


45 
	#GTK_TYPE_UI_MANAGER
 (
	`gtk_ui_m™agî_gë_ty≥
 ())

	)

46 
	#GTK_UI_MANAGER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_UI_MANAGER
, 
GtkUIM™agî
))

	)

47 
	#GTK_UI_MANAGER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_UI_MANAGER
, 
GtkUIM™agîCœss
))

	)

48 
	#GTK_IS_UI_MANAGER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_UI_MANAGER
))

	)

49 
	#GTK_IS_UI_MANAGER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_UI_MANAGER
))

	)

50 
	#GTK_UI_MANAGER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
((obj), 
GTK_TYPE_UI_MANAGER
, 
GtkUIM™agîCœss
))

	)

52 
_GtkUIM™agî
 
	tGtkUIM™agî
;

53 
_GtkUIM™agîCœss
 
	tGtkUIM™agîCœss
;

54 
_GtkUIM™agîPriv©e
 
	tGtkUIM™agîPriv©e
;

57 
	s_GtkUIM™agî
 {

58 
GObje˘
 
	m∑ª¡
;

62 
GtkUIM™agîPriv©e
 *
GSEAL
 (
¥iv©e_d©a
);

65 
	s_GtkUIM™agîCœss
 {

66 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

69 (* 
	madd_widgë
Ë(
GtkUIM™agî
 *
	mmîge
,

70 
GtkWidgë
 *
	mwidgë
);

71 (* 
	ma˘i⁄s_ch™ged
Ë(
GtkUIM™agî
 *
	mmîge
);

72 (* 
	mc⁄√˘_¥oxy
Ë(
GtkUIM™agî
 *
	mmîge
,

73 
GtkA˘i⁄
 *
	ma˘i⁄
,

74 
GtkWidgë
 *
	m¥oxy
);

75 (* 
	mdisc⁄√˘_¥oxy
Ë(
GtkUIM™agî
 *
	mmîge
,

76 
GtkA˘i⁄
 *
	ma˘i⁄
,

77 
GtkWidgë
 *
	m¥oxy
);

78 (* 
	m¥e_a˘iv©e
Ë(
GtkUIM™agî
 *
	mmîge
,

79 
GtkA˘i⁄
 *
	ma˘i⁄
);

80 (* 
	mpo°_a˘iv©e
Ë(
GtkUIM™agî
 *
	mmîge
,

81 
GtkA˘i⁄
 *
	ma˘i⁄
);

84 
	mGtkWidgë
 * (* 
	mgë_widgë
Ë(
GtkUIM™agî
 *
	mm™agî
,

85 c⁄° 
gch¨
 *
	m∑th
);

86 
	mGtkA˘i⁄
 * (* 
	mgë_a˘i⁄
Ë(
GtkUIM™agî
 *
	mm™agî
,

87 c⁄° 
gch¨
 *
	m∑th
);

90 (*
	m_gtk_ª£rved1
) ();

91 (*
	m_gtk_ª£rved2
) ();

95 
	mGTK_UI_MANAGER_AUTO
 = 0,

96 
	mGTK_UI_MANAGER_MENUBAR
 = 1 << 0,

97 
	mGTK_UI_MANAGER_MENU
 = 1 << 1,

98 
	mGTK_UI_MANAGER_TOOLBAR
 = 1 << 2,

99 
	mGTK_UI_MANAGER_PLACEHOLDER
 = 1 << 3,

100 
	mGTK_UI_MANAGER_POPUP
 = 1 << 4,

101 
	mGTK_UI_MANAGER_MENUITEM
 = 1 << 5,

102 
	mGTK_UI_MANAGER_TOOLITEM
 = 1 << 6,

103 
	mGTK_UI_MANAGER_SEPARATOR
 = 1 << 7,

104 
	mGTK_UI_MANAGER_ACCELERATOR
 = 1 << 8,

105 
	mGTK_UI_MANAGER_POPUP_WITH_ACCELS
 = 1 << 9

106 } 
	tGtkUIM™agîIãmTy≥
;

108 #ifde‡
G_OS_WIN32


110 
	#gtk_ui_m™agî_add_ui_‰om_fûe
 
gtk_ui_m™agî_add_ui_‰om_fûe_utf8


	)

113 
GTy≥
 
	$gtk_ui_m™agî_gë_ty≥
 (Ë
G_GNUC_CONST
;

114 
GtkUIM™agî
 *
	`gtk_ui_m™agî_√w
 ();

115 
	`gtk_ui_m™agî_£t_add_ã¨offs
 (
GtkUIM™agî
 *
£lf
,

116 
gboﬁón
 
add_ã¨offs
);

117 
gboﬁón
 
	`gtk_ui_m™agî_gë_add_ã¨offs
 (
GtkUIM™agî
 *
£lf
);

118 
	`gtk_ui_m™agî_ö£π_a˘i⁄_group
 (
GtkUIM™agî
 *
£lf
,

119 
GtkA˘i⁄Group
 *
a˘i⁄_group
,

120 
göt
 
pos
);

121 
	`gtk_ui_m™agî_ªmove_a˘i⁄_group
 (
GtkUIM™agî
 *
£lf
,

122 
GtkA˘i⁄Group
 *
a˘i⁄_group
);

123 
GLi°
 *
	`gtk_ui_m™agî_gë_a˘i⁄_groups
 (
GtkUIM™agî
 *
£lf
);

124 
GtkAc˚lGroup
 *
	`gtk_ui_m™agî_gë_ac˚l_group
 (
GtkUIM™agî
 *
£lf
);

125 
GtkWidgë
 *
	`gtk_ui_m™agî_gë_widgë
 (
GtkUIM™agî
 *
£lf
,

126 c⁄° 
gch¨
 *
∑th
);

127 
GSLi°
 *
	`gtk_ui_m™agî_gë_t›Àvñs
 (
GtkUIM™agî
 *
£lf
,

128 
GtkUIM™agîIãmTy≥
 
ty≥s
);

129 
GtkA˘i⁄
 *
	`gtk_ui_m™agî_gë_a˘i⁄
 (
GtkUIM™agî
 *
£lf
,

130 c⁄° 
gch¨
 *
∑th
);

131 
guöt
 
	`gtk_ui_m™agî_add_ui_‰om_°rög
 (
GtkUIM™agî
 *
£lf
,

132 c⁄° 
gch¨
 *
buf„r
,

133 
gssize
 
Àngth
,

134 
GEº‹
 **
îr‹
);

135 
guöt
 
	`gtk_ui_m™agî_add_ui_‰om_fûe
 (
GtkUIM™agî
 *
£lf
,

136 c⁄° 
gch¨
 *
fûíame
,

137 
GEº‹
 **
îr‹
);

138 
	`gtk_ui_m™agî_add_ui
 (
GtkUIM™agî
 *
£lf
,

139 
guöt
 
mîge_id
,

140 c⁄° 
gch¨
 *
∑th
,

141 c⁄° 
gch¨
 *
«me
,

142 c⁄° 
gch¨
 *
a˘i⁄
,

143 
GtkUIM™agîIãmTy≥
 
ty≥
,

144 
gboﬁón
 
t›
);

145 
	`gtk_ui_m™agî_ªmove_ui
 (
GtkUIM™agî
 *
£lf
,

146 
guöt
 
mîge_id
);

147 
gch¨
 *
	`gtk_ui_m™agî_gë_ui
 (
GtkUIM™agî
 *
£lf
);

148 
	`gtk_ui_m™agî_ísuª_upd©e
 (
GtkUIM™agî
 *
£lf
);

149 
guöt
 
	`gtk_ui_m™agî_√w_mîge_id
 (
GtkUIM™agî
 *
£lf
);

151 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvbbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VBBOX_H__


32 
	#__GTK_VBBOX_H__


	)

35 
	~<gtk/gtkbbox.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_VBUTTON_BOX
 (
	`gtk_vbuâ⁄_box_gë_ty≥
 ())

	)

42 
	#GTK_VBUTTON_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VBUTTON_BOX
, 
GtkVBuâ⁄Box
))

	)

43 
	#GTK_VBUTTON_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VBUTTON_BOX
, 
GtkVBuâ⁄BoxCœss
))

	)

44 
	#GTK_IS_VBUTTON_BOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VBUTTON_BOX
))

	)

45 
	#GTK_IS_VBUTTON_BOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VBUTTON_BOX
))

	)

46 
	#GTK_VBUTTON_BOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VBUTTON_BOX
, 
GtkVBuâ⁄BoxCœss
))

	)

49 
_GtkVBuâ⁄Box
 
	tGtkVBuâ⁄Box
;

50 
_GtkVBuâ⁄BoxCœss
 
	tGtkVBuâ⁄BoxCœss
;

52 
	s_GtkVBuâ⁄Box


54 
GtkBuâ⁄Box
 
	mbuâ⁄_box
;

57 
	s_GtkVBuâ⁄BoxCœss


59 
GtkBuâ⁄BoxCœss
 
	m∑ª¡_˛ass
;

63 
GTy≥
 
	$gtk_vbuâ⁄_box_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkWidgë
 *
	`gtk_vbuâ⁄_box_√w
 ();

68 #i‚de‡
GTK_DISABLE_DEPRECATED


69 
göt
 
	`gtk_vbuâ⁄_box_gë_•acög_deÁu…
 ();

70 
	`gtk_vbuâ⁄_box_£t_•acög_deÁu…
 (
göt
 
•acög
);

72 
GtkBuâ⁄BoxStyÀ
 
	`gtk_vbuâ⁄_box_gë_œyout_deÁu…
 ();

73 
	`gtk_vbuâ⁄_box_£t_œyout_deÁu…
 (
GtkBuâ⁄BoxStyÀ
 
œyout
);

77 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvbox.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VBOX_H__


32 
	#__GTK_VBOX_H__


	)

35 
	~<gtk/gtkbox.h
>

38 
	gG_BEGIN_DECLS


40 
	#GTK_TYPE_VBOX
 (
	`gtk_vbox_gë_ty≥
 ())

	)

41 
	#GTK_VBOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VBOX
, 
GtkVBox
))

	)

42 
	#GTK_VBOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VBOX
, 
GtkVBoxCœss
))

	)

43 
	#GTK_IS_VBOX
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VBOX
))

	)

44 
	#GTK_IS_VBOX_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VBOX
))

	)

45 
	#GTK_VBOX_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VBOX
, 
GtkVBoxCœss
))

	)

48 
_GtkVBox
 
	tGtkVBox
;

49 
_GtkVBoxCœss
 
	tGtkVBoxCœss
;

51 
	s_GtkVBox


53 
GtkBox
 
	mbox
;

56 
	s_GtkVBoxCœss


58 
GtkBoxCœss
 
	m∑ª¡_˛ass
;

62 
GTy≥
 
	$gtk_vbox_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
GtkWidgë
 * 
	`gtk_vbox_√w
 (
gboﬁón
 
homogíeous
,

64 
göt
 
•acög
);

66 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkversion.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VERSION_H__


32 
	#__GTK_VERSION_H__


	)

36 
	#GTK_MAJOR_VERSION
 (2)

	)

37 
	#GTK_MINOR_VERSION
 (16)

	)

38 
	#GTK_MICRO_VERSION
 (1)

	)

39 
	#GTK_BINARY_AGE
 (1601)

	)

40 
	#GTK_INTERFACE_AGE
 (1)

	)

45 
	#GTK_CHECK_VERSION
(
maj‹
,
mö‹
,
mi¸o
) \

46 (
GTK_MAJOR_VERSION
 > (
maj‹
) || \

47 (
GTK_MAJOR_VERSION
 =(
maj‹
Ë&& 
GTK_MINOR_VERSION
 > (
mö‹
)) || \

48 (
GTK_MAJOR_VERSION
 =(
maj‹
Ë&& 
GTK_MINOR_VERSION
 =(
mö‹
) && \

49 
GTK_MICRO_VERSION
 >(
mi¸o
)))

	)

	@/usr/include/gtk-2.0/gtk/gtkviewport.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VIEWPORT_H__


32 
	#__GTK_VIEWPORT_H__


	)

35 
	~<gtk/gtkadju°mít.h
>

36 
	~<gtk/gtkbö.h
>

39 
	gG_BEGIN_DECLS


42 
	#GTK_TYPE_VIEWPORT
 (
	`gtk_võwp‹t_gë_ty≥
 ())

	)

43 
	#GTK_VIEWPORT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VIEWPORT
, 
GtkVõwp‹t
))

	)

44 
	#GTK_VIEWPORT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VIEWPORT
, 
GtkVõwp‹tCœss
))

	)

45 
	#GTK_IS_VIEWPORT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VIEWPORT
))

	)

46 
	#GTK_IS_VIEWPORT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VIEWPORT
))

	)

47 
	#GTK_VIEWPORT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VIEWPORT
, 
GtkVõwp‹tCœss
))

	)

50 
_GtkVõwp‹t
 
	tGtkVõwp‹t
;

51 
_GtkVõwp‹tCœss
 
	tGtkVõwp‹tCœss
;

53 
	s_GtkVõwp‹t


55 
GtkBö
 
	mbö
;

57 
GtkShadowTy≥
 
GSEAL
 (
shadow_ty≥
);

58 
GdkWödow
 *
GSEAL
 (
võw_wödow
);

59 
GdkWödow
 *
GSEAL
 (
bö_wödow
);

60 
GtkAdju°mít
 *
GSEAL
 (
hadju°mít
);

61 
GtkAdju°mít
 *
GSEAL
 (
vadju°mít
);

64 
	s_GtkVõwp‹tCœss


66 
GtkBöCœss
 
	m∑ª¡_˛ass
;

68 (*
	m£t_s¸ﬁl_adju°míts
Ë(
GtkVõwp‹t
 *
	mvõwp‹t
,

69 
GtkAdju°mít
 *
	mhadju°mít
,

70 
GtkAdju°mít
 *
	mvadju°mít
);

74 
GTy≥
 
	$gtk_võwp‹t_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
GtkWidgë
* 
	`gtk_võwp‹t_√w
 (
GtkAdju°mít
 *
hadju°mít
,

76 
GtkAdju°mít
 *
vadju°mít
);

77 
GtkAdju°mít
* 
	`gtk_võwp‹t_gë_hadju°mít
 (
GtkVõwp‹t
 *
võwp‹t
);

78 
GtkAdju°mít
* 
	`gtk_võwp‹t_gë_vadju°mít
 (
GtkVõwp‹t
 *
võwp‹t
);

79 
	`gtk_võwp‹t_£t_hadju°mít
 (
GtkVõwp‹t
 *
võwp‹t
,

80 
GtkAdju°mít
 *
adju°mít
);

81 
	`gtk_võwp‹t_£t_vadju°mít
 (
GtkVõwp‹t
 *
võwp‹t
,

82 
GtkAdju°mít
 *
adju°mít
);

83 
	`gtk_võwp‹t_£t_shadow_ty≥
 (
GtkVõwp‹t
 *
võwp‹t
,

84 
GtkShadowTy≥
 
ty≥
);

85 
GtkShadowTy≥
 
	`gtk_võwp‹t_gë_shadow_ty≥
 (
GtkVõwp‹t
 *
võwp‹t
);

88 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvolumebutton.h

30 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

34 #i‚de‡
__GTK_VOLUME_BUTTON_H__


35 
	#__GTK_VOLUME_BUTTON_H__


	)

37 
	~<gtk/gtksˇÀbuâ⁄.h
>

39 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_VOLUME_BUTTON
 (
	`gtk_vﬁume_buâ⁄_gë_ty≥
 ())

	)

42 
	#GTK_VOLUME_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VOLUME_BUTTON
, 
GtkVﬁumeBuâ⁄
))

	)

43 
	#GTK_VOLUME_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VOLUME_BUTTON
, 
GtkVﬁumìBuâ⁄Cœss
))

	)

44 
	#GTK_IS_VOLUME_BUTTON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VOLUME_BUTTON
))

	)

45 
	#GTK_IS_VOLUME_BUTTON_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VOLUME_BUTTON
))

	)

46 
	#GTK_VOLUME_BUTTON_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VOLUME_BUTTON
, 
GtkVﬁumeBuâ⁄Cœss
))

	)

48 
_GtkVﬁumeBuâ⁄
 
	tGtkVﬁumeBuâ⁄
;

49 
_GtkVﬁumeBuâ⁄Cœss
 
	tGtkVﬁumeBuâ⁄Cœss
;

51 
	s_GtkVﬁumeBuâ⁄


53 
GtkSˇÀBuâ⁄
 
	m∑ª¡
;

56 
	s_GtkVﬁumeBuâ⁄Cœss


58 
GtkSˇÀBuâ⁄Cœss
 
	m∑ª¡_˛ass
;

61 (*
	m_gtk_ª£rved1
) ();

62 (*
	m_gtk_ª£rved2
) ();

63 (*
	m_gtk_ª£rved3
) ();

64 (*
	m_gtk_ª£rved4
) ();

67 
GTy≥
 
	$gtk_vﬁume_buâ⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

68 
GtkWidgë
* 
	`gtk_vﬁume_buâ⁄_√w
 ();

70 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvpaned.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VPANED_H__


32 
	#__GTK_VPANED_H__


	)

34 
	~<gtk/gtk∑√d.h
>

36 
	gG_BEGIN_DECLS


38 
	#GTK_TYPE_VPANED
 (
	`gtk_v∑√d_gë_ty≥
 ())

	)

39 
	#GTK_VPANED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VPANED
, 
GtkVP™ed
))

	)

40 
	#GTK_VPANED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VPANED
, 
GtkVP™edCœss
))

	)

41 
	#GTK_IS_VPANED
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VPANED
))

	)

42 
	#GTK_IS_VPANED_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VPANED
))

	)

43 
	#GTK_VPANED_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VPANED
, 
GtkVP™edCœss
))

	)

46 
_GtkVP™ed
 
	tGtkVP™ed
;

47 
_GtkVP™edCœss
 
	tGtkVP™edCœss
;

49 
	s_GtkVP™ed


51 
GtkP™ed
 
	m∑√d
;

54 
	s_GtkVP™edCœss


56 
GtkP™edCœss
 
	m∑ª¡_˛ass
;

60 
GTy≥
 
	$gtk_v∑√d_gë_ty≥
 (Ë
G_GNUC_CONST
;

61 
GtkWidgë
 * 
	`gtk_v∑√d_√w
 ();

63 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvruler.h

37 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

41 #i‚de‡
__GTK_VRULER_H__


42 
	#__GTK_VRULER_H__


	)

45 
	~<gtk/gtkruÀr.h
>

48 
	gG_BEGIN_DECLS


51 
	#GTK_TYPE_VRULER
 (
	`gtk_vruÀr_gë_ty≥
 ())

	)

52 
	#GTK_VRULER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VRULER
, 
GtkVRuÀr
))

	)

53 
	#GTK_VRULER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VRULER
, 
GtkVRuÀrCœss
))

	)

54 
	#GTK_IS_VRULER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VRULER
))

	)

55 
	#GTK_IS_VRULER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VRULER
))

	)

56 
	#GTK_VRULER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VRULER
, 
GtkVRuÀrCœss
))

	)

59 
_GtkVRuÀr
 
	tGtkVRuÀr
;

60 
_GtkVRuÀrCœss
 
	tGtkVRuÀrCœss
;

62 
	s_GtkVRuÀr


64 
GtkRuÀr
 
	mruÀr
;

67 
	s_GtkVRuÀrCœss


69 
GtkRuÀrCœss
 
	m∑ª¡_˛ass
;

73 
GTy≥
 
	$gtk_vruÀr_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
GtkWidgë
* 
	`gtk_vruÀr_√w
 ();

77 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvscale.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VSCALE_H__


32 
	#__GTK_VSCALE_H__


	)

35 
	~<gtk/gtksˇÀ.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_VSCALE
 (
	`gtk_vsˇÀ_gë_ty≥
 ())

	)

42 
	#GTK_VSCALE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VSCALE
, 
GtkVSˇÀ
))

	)

43 
	#GTK_VSCALE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VSCALE
, 
GtkVSˇÀCœss
))

	)

44 
	#GTK_IS_VSCALE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VSCALE
))

	)

45 
	#GTK_IS_VSCALE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VSCALE
))

	)

46 
	#GTK_VSCALE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VSCALE
, 
GtkVSˇÀCœss
))

	)

49 
_GtkVSˇÀ
 
	tGtkVSˇÀ
;

50 
_GtkVSˇÀCœss
 
	tGtkVSˇÀCœss
;

52 
	s_GtkVSˇÀ


54 
GtkSˇÀ
 
	msˇÀ
;

57 
	s_GtkVSˇÀCœss


59 
GtkSˇÀCœss
 
	m∑ª¡_˛ass
;

63 
GTy≥
 
	$gtk_vsˇÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkWidgë
* 
	`gtk_vsˇÀ_√w
 (
GtkAdju°mít
 *
adju°mít
);

65 
GtkWidgë
* 
	`gtk_vsˇÀ_√w_wôh_ønge
 (
gdoubÀ
 
mö
,

66 
gdoubÀ
 
max
,

67 
gdoubÀ
 
°ï
);

70 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvscrollbar.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VSCROLLBAR_H__


32 
	#__GTK_VSCROLLBAR_H__


	)

35 
	~<gtk/gtks¸ﬁlb¨.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_VSCROLLBAR
 (
	`gtk_vs¸ﬁlb¨_gë_ty≥
 ())

	)

42 
	#GTK_VSCROLLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VSCROLLBAR
, 
GtkVS¸ﬁlb¨
))

	)

43 
	#GTK_VSCROLLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VSCROLLBAR
, 
GtkVS¸ﬁlb¨Cœss
))

	)

44 
	#GTK_IS_VSCROLLBAR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VSCROLLBAR
))

	)

45 
	#GTK_IS_VSCROLLBAR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VSCROLLBAR
))

	)

46 
	#GTK_VSCROLLBAR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VSCROLLBAR
, 
GtkVS¸ﬁlb¨Cœss
))

	)

49 
_GtkVS¸ﬁlb¨
 
	tGtkVS¸ﬁlb¨
;

50 
_GtkVS¸ﬁlb¨Cœss
 
	tGtkVS¸ﬁlb¨Cœss
;

52 
	s_GtkVS¸ﬁlb¨


54 
GtkS¸ﬁlb¨
 
	ms¸ﬁlb¨
;

57 
	s_GtkVS¸ﬁlb¨Cœss


59 
GtkS¸ﬁlb¨Cœss
 
	m∑ª¡_˛ass
;

63 
GTy≥
 
	$gtk_vs¸ﬁlb¨_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkWidgë
* 
	`gtk_vs¸ﬁlb¨_√w
 (
GtkAdju°mít
 *
adju°mít
);

67 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkvseparator.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_VSEPARATOR_H__


32 
	#__GTK_VSEPARATOR_H__


	)

35 
	~<gtk/gtk£∑øt‹.h
>

38 
	gG_BEGIN_DECLS


41 
	#GTK_TYPE_VSEPARATOR
 (
	`gtk_v£∑øt‹_gë_ty≥
 ())

	)

42 
	#GTK_VSEPARATOR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GTK_TYPE_VSEPARATOR
, 
GtkVSï¨©‹
))

	)

43 
	#GTK_VSEPARATOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_VSEPARATOR
, 
GtkVSï¨©‹Cœss
))

	)

44 
	#GTK_IS_VSEPARATOR
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GTK_TYPE_VSEPARATOR
))

	)

45 
	#GTK_IS_VSEPARATOR_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_VSEPARATOR
))

	)

46 
	#GTK_VSEPARATOR_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_VSEPARATOR
, 
GtkVSï¨©‹Cœss
))

	)

49 
_GtkVSï¨©‹
 
	tGtkVSï¨©‹
;

50 
_GtkVSï¨©‹Cœss
 
	tGtkVSï¨©‹Cœss
;

52 
	s_GtkVSï¨©‹


54 
GtkSï¨©‹
 
	m£∑øt‹
;

57 
	s_GtkVSï¨©‹Cœss


59 
GtkSï¨©‹Cœss
 
	m∑ª¡_˛ass
;

63 
GTy≥
 
	$gtk_v£∑øt‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

64 
GtkWidgë
* 
	`gtk_v£∑øt‹_√w
 ();

67 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkwidget.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

31 #i‚de‡
__GTK_WIDGET_H__


32 
	#__GTK_WIDGET_H__


	)

34 
	~<gdk/gdk.h
>

35 
	~<gtk/gtkac˚lgroup.h
>

36 
	~<gtk/gtkobje˘.h
>

37 
	~<gtk/gtkadju°mít.h
>

38 
	~<gtk/gtk°yÀ.h
>

39 
	~<gtk/gtk£âögs.h
>

40 
	~<©k/©k.h
>

42 
G_BEGIN_DECLS


49 
	mGTK_TOPLEVEL
 = 1 << 4,

50 
	mGTK_NO_WINDOW
 = 1 << 5,

51 
	mGTK_REALIZED
 = 1 << 6,

52 
	mGTK_MAPPED
 = 1 << 7,

53 
	mGTK_VISIBLE
 = 1 << 8,

54 
	mGTK_SENSITIVE
 = 1 << 9,

55 
	mGTK_PARENT_SENSITIVE
 = 1 << 10,

56 
	mGTK_CAN_FOCUS
 = 1 << 11,

57 
	mGTK_HAS_FOCUS
 = 1 << 12,

62 
	mGTK_CAN_DEFAULT
 = 1 << 13,

67 
	mGTK_HAS_DEFAULT
 = 1 << 14,

69 
	mGTK_HAS_GRAB
 = 1 << 15,

70 
	mGTK_RC_STYLE
 = 1 << 16,

71 
	mGTK_COMPOSITE_CHILD
 = 1 << 17,

72 
	mGTK_NO_REPARENT
 = 1 << 18,

73 
	mGTK_APP_PAINTABLE
 = 1 << 19,

78 
	mGTK_RECEIVES_DEFAULT
 = 1 << 20,

80 
	mGTK_DOUBLE_BUFFERED
 = 1 << 21,

81 
	mGTK_NO_SHOW_ALL
 = 1 << 22

82 } 
	tGtkWidgëFœgs
;

87 
	mGTK_WIDGET_HELP_TOOLTIP
,

88 
	mGTK_WIDGET_HELP_WHATS_THIS


89 } 
	tGtkWidgëHñpTy≥
;

94 
	#GTK_TYPE_WIDGET
 (
	`gtk_widgë_gë_ty≥
 ())

	)

95 
	#GTK_WIDGET
(
widgë
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((widgë), 
GTK_TYPE_WIDGET
, 
GtkWidgë
))

	)

96 
	#GTK_WIDGET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GTK_TYPE_WIDGET
, 
GtkWidgëCœss
))

	)

97 
	#GTK_IS_WIDGET
(
widgë
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((widgë), 
GTK_TYPE_WIDGET
))

	)

98 
	#GTK_IS_WIDGET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GTK_TYPE_WIDGET
))

	)

99 
	#GTK_WIDGET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GTK_TYPE_WIDGET
, 
GtkWidgëCœss
))

	)

103 
	#GTK_WIDGET_TYPE
(
wid
Ë(
	`GTK_OBJECT_TYPE
 (wid))

	)

104 
	#GTK_WIDGET_STATE
(
wid
Ë(
	`GTK_WIDGET
 (wid)->
°©e
)

	)

105 
	#GTK_WIDGET_SAVED_STATE
(
wid
Ë(
	`GTK_WIDGET
 (wid)->
ßved_°©e
)

	)

109 
	#GTK_WIDGET_FLAGS
(
wid
Ë(
	`GTK_OBJECT_FLAGS
 (wid))

	)

110 
	#GTK_WIDGET_TOPLEVEL
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_TOPLEVEL
Ë!0)

	)

111 
	#GTK_WIDGET_NO_WINDOW
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_NO_WINDOW
Ë!0)

	)

112 
	#GTK_WIDGET_REALIZED
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_REALIZED
Ë!0)

	)

113 
	#GTK_WIDGET_MAPPED
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_MAPPED
Ë!0)

	)

114 
	#GTK_WIDGET_VISIBLE
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_VISIBLE
Ë!0)

	)

115 
	#GTK_WIDGET_DRAWABLE
(
wid
Ë(
	`GTK_WIDGET_VISIBLE
 (widË&& 
	`GTK_WIDGET_MAPPED
 (wid))

	)

116 
	#GTK_WIDGET_SENSITIVE
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_SENSITIVE
Ë!0)

	)

117 
	#GTK_WIDGET_PARENT_SENSITIVE
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_PARENT_SENSITIVE
Ë!0)

	)

118 
	#GTK_WIDGET_IS_SENSITIVE
(
wid
Ë(
	`GTK_WIDGET_SENSITIVE
 (wid) && \

119 
	`GTK_WIDGET_PARENT_SENSITIVE
 (
wid
))

	)

120 
	#GTK_WIDGET_CAN_FOCUS
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_CAN_FOCUS
Ë!0)

	)

121 
	#GTK_WIDGET_HAS_FOCUS
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_HAS_FOCUS
Ë!0)

	)

122 
	#GTK_WIDGET_CAN_DEFAULT
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_CAN_DEFAULT
Ë!0)

	)

123 
	#GTK_WIDGET_HAS_DEFAULT
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_HAS_DEFAULT
Ë!0)

	)

124 
	#GTK_WIDGET_HAS_GRAB
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_HAS_GRAB
Ë!0)

	)

125 
	#GTK_WIDGET_RC_STYLE
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_RC_STYLE
Ë!0)

	)

126 
	#GTK_WIDGET_COMPOSITE_CHILD
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_COMPOSITE_CHILD
Ë!0)

	)

127 
	#GTK_WIDGET_APP_PAINTABLE
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_APP_PAINTABLE
Ë!0)

	)

128 
	#GTK_WIDGET_RECEIVES_DEFAULT
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_RECEIVES_DEFAULT
Ë!0)

	)

129 
	#GTK_WIDGET_DOUBLE_BUFFERED
(
wid
Ë((
	`GTK_WIDGET_FLAGS
 (widË& 
GTK_DOUBLE_BUFFERED
Ë!0)

	)

133 
	#GTK_WIDGET_SET_FLAGS
(
wid
,
Êag
Ë
G_STMT_START
{ (
	`GTK_WIDGET_FLAGS
 (widË|(Êag)); }
G_STMT_END


	)

134 
	#GTK_WIDGET_UNSET_FLAGS
(
wid
,
Êag
Ë
G_STMT_START
{ (
	`GTK_WIDGET_FLAGS
 (widË&~(Êag)); }
G_STMT_END


	)

136 
	#GTK_TYPE_REQUISITION
 (
	`gtk_ªquisôi⁄_gë_ty≥
 ())

	)

140 
_GtkRequisôi⁄
 
	tGtkRequisôi⁄
;

141 
GdkRe˘™gÀ
 
	tGtkAŒoˇti⁄
;

142 
_GtkSñe˘i⁄D©a
 
	tGtkSñe˘i⁄D©a
;

143 
_GtkWidgëCœss
 
	tGtkWidgëCœss
;

144 
_GtkWidgëAuxInfo
 
	tGtkWidgëAuxInfo
;

145 
_GtkWidgëSh≠eInfo
 
	tGtkWidgëSh≠eInfo
;

146 
_GtkClùbﬂrd
 
	tGtkClùbﬂrd
;

147 
_GtkToﬁtù
 
	tGtkToﬁtù
;

148 
_GtkWödow
 
	tGtkWödow
;

149 (*
	tGtkCÆlback
Ë(
	tGtkWidgë
 *
	twidgë
,

150 
	tgpoöãr
 
	td©a
);

155 
	s_GtkRequisôi⁄


157 
göt
 
width
;

158 
göt
 
height
;

166 
	s_GtkWidgë


174 
GtkObje˘
 
obje˘
;

181 
guöt16
 
	`GSEAL
 (
¥iv©e_Êags
);

186 
guöt8
 
	`GSEAL
 (
°©e
);

194 
guöt8
 
	`GSEAL
 (
ßved_°©e
);

202 
gch¨
 *
	`GSEAL
 (
«me
);

211 
GtkStyÀ
 *
	`GSEAL
 (
°yÀ
);

215 
GtkRequisôi⁄
 
	`GSEAL
 (
ªquisôi⁄
);

219 
GtkAŒoˇti⁄
 
	`GSEAL
 (
Æloˇti⁄
);

225 
GdkWödow
 *
	`GSEAL
 (
wödow
);

229 
GtkWidgë
 *
	`GSEAL
 (
∑ª¡
);

232 
	s_GtkWidgëCœss


240 
GtkObje˘Cœss
 
∑ª¡_˛ass
;

244 
guöt
 
a˘iv©e_sig«l
;

246 
guöt
 
£t_s¸ﬁl_adju°míts_sig«l
;

251 (*
di•©ch_chûd_¥›îtõs_ch™ged
Ë(
GtkWidgë
 *
widgë
,

252 
guöt
 
n_p•ecs
,

253 
GP¨amS≥c
 **
p•ecs
);

256 (* 
show
Ë(
GtkWidgë
 *
widgë
);

257 (* 
show_Æl
Ë(
GtkWidgë
 *
widgë
);

258 (* 
hide
Ë(
GtkWidgë
 *
widgë
);

259 (* 
hide_Æl
Ë(
GtkWidgë
 *
widgë
);

260 (* 
m≠
Ë(
GtkWidgë
 *
widgë
);

261 (* 
unm≠
Ë(
GtkWidgë
 *
widgë
);

262 (* 
ªÆize
Ë(
GtkWidgë
 *
widgë
);

263 (* 
uƒólize
Ë(
GtkWidgë
 *
widgë
);

264 (* 
size_ªque°
Ë(
GtkWidgë
 *
widgë
,

265 
GtkRequisôi⁄
 *
ªquisôi⁄
);

266 (* 
size_Æloˇã
Ë(
GtkWidgë
 *
widgë
,

267 
GtkAŒoˇti⁄
 *
Æloˇti⁄
);

268 (* 
°©e_ch™ged
Ë(
GtkWidgë
 *
widgë
,

269 
GtkSèãTy≥
 
¥evious_°©e
);

270 (* 
∑ª¡_£t
Ë(
GtkWidgë
 *
widgë
,

271 
GtkWidgë
 *
¥evious_∑ª¡
);

272 (* 
hõørchy_ch™ged
Ë(
GtkWidgë
 *
widgë
,

273 
GtkWidgë
 *
¥evious_t›Àvñ
);

274 (* 
°yÀ_£t
Ë(
GtkWidgë
 *
widgë
,

275 
GtkStyÀ
 *
¥evious_°yÀ
);

276 (* 
dúe˘i⁄_ch™ged
Ë(
GtkWidgë
 *
widgë
,

277 
GtkTextDúe˘i⁄
 
¥evious_dúe˘i⁄
);

278 (* 
gøb_nŸify
Ë(
GtkWidgë
 *
widgë
,

279 
gboﬁón
 
was_gøbbed
);

280 (* 
chûd_nŸify
Ë(
GtkWidgë
 *
widgë
,

281 
GP¨amS≥c
 *
p•ec
);

284 
	`gboﬁón
 (* 
m√m⁄ic_a˘iv©e
Ë(
GtkWidgë
 *
widgë
,

285 
gboﬁón
 
group_cy˛ög
);

288 (* 
gøb_focus
Ë(
GtkWidgë
 *
widgë
);

289 
	`gboﬁón
 (* 
focus
Ë(
GtkWidgë
 *
widgë
,

290 
GtkDúe˘i⁄Ty≥
 
dúe˘i⁄
);

293 
	`gboﬁón
 (* 
evít
Ë(
GtkWidgë
 *
widgë
,

294 
GdkEvít
 *
evít
);

295 
	`gboﬁón
 (* 
buâ⁄_¥ess_evít
Ë(
GtkWidgë
 *
widgë
,

296 
GdkEvítBuâ⁄
 *
evít
);

297 
	`gboﬁón
 (* 
buâ⁄_ªÀa£_evít
Ë(
GtkWidgë
 *
widgë
,

298 
GdkEvítBuâ⁄
 *
evít
);

299 
	`gboﬁón
 (* 
s¸ﬁl_evít
Ë(
GtkWidgë
 *
widgë
,

300 
GdkEvítS¸ﬁl
 *
evít
);

301 
	`gboﬁón
 (* 
mŸi⁄_nŸify_evít
Ë(
GtkWidgë
 *
widgë
,

302 
GdkEvítMŸi⁄
 *
evít
);

303 
	`gboﬁón
 (* 
dñëe_evít
Ë(
GtkWidgë
 *
widgë
,

304 
GdkEvítAny
 *
evít
);

305 
	`gboﬁón
 (* 
de°roy_evít
Ë(
GtkWidgë
 *
widgë
,

306 
GdkEvítAny
 *
evít
);

307 
	`gboﬁón
 (* 
expo£_evít
Ë(
GtkWidgë
 *
widgë
,

308 
GdkEvítExpo£
 *
evít
);

309 
	`gboﬁón
 (* 
key_¥ess_evít
Ë(
GtkWidgë
 *
widgë
,

310 
GdkEvítKey
 *
evít
);

311 
	`gboﬁón
 (* 
key_ªÀa£_evít
Ë(
GtkWidgë
 *
widgë
,

312 
GdkEvítKey
 *
evít
);

313 
	`gboﬁón
 (* 
íãr_nŸify_evít
Ë(
GtkWidgë
 *
widgë
,

314 
GdkEvítCrossög
 *
evít
);

315 
	`gboﬁón
 (* 
Àave_nŸify_evít
Ë(
GtkWidgë
 *
widgë
,

316 
GdkEvítCrossög
 *
evít
);

317 
	`gboﬁón
 (* 
c⁄figuª_evít
Ë(
GtkWidgë
 *
widgë
,

318 
GdkEvítC⁄figuª
 *
evít
);

319 
	`gboﬁón
 (* 
focus_ö_evít
Ë(
GtkWidgë
 *
widgë
,

320 
GdkEvítFocus
 *
evít
);

321 
	`gboﬁón
 (* 
focus_out_evít
Ë(
GtkWidgë
 *
widgë
,

322 
GdkEvítFocus
 *
evít
);

323 
	`gboﬁón
 (* 
m≠_evít
Ë(
GtkWidgë
 *
widgë
,

324 
GdkEvítAny
 *
evít
);

325 
	`gboﬁón
 (* 
unm≠_evít
Ë(
GtkWidgë
 *
widgë
,

326 
GdkEvítAny
 *
evít
);

327 
	`gboﬁón
 (* 
¥›îty_nŸify_evít
Ë(
GtkWidgë
 *
widgë
,

328 
GdkEvítPr›îty
 *
evít
);

329 
	`gboﬁón
 (* 
£À˘i⁄_˛ór_evít
Ë(
GtkWidgë
 *
widgë
,

330 
GdkEvítSñe˘i⁄
 *
evít
);

331 
	`gboﬁón
 (* 
£À˘i⁄_ªque°_evít
Ë(
GtkWidgë
 *
widgë
,

332 
GdkEvítSñe˘i⁄
 *
evít
);

333 
	`gboﬁón
 (* 
£À˘i⁄_nŸify_evít
Ë(
GtkWidgë
 *
widgë
,

334 
GdkEvítSñe˘i⁄
 *
evít
);

335 
	`gboﬁón
 (* 
¥oximôy_ö_evít
Ë(
GtkWidgë
 *
widgë
,

336 
GdkEvítProximôy
 *
evít
);

337 
	`gboﬁón
 (* 
¥oximôy_out_evít
Ë(
GtkWidgë
 *
widgë
,

338 
GdkEvítProximôy
 *
evít
);

339 
	`gboﬁón
 (* 
visibûôy_nŸify_evít
Ë(
GtkWidgë
 *
widgë
,

340 
GdkEvítVisibûôy
 *
evít
);

341 
	`gboﬁón
 (* 
˛õ¡_evít
Ë(
GtkWidgë
 *
widgë
,

342 
GdkEvítClõ¡
 *
evít
);

343 
	`gboﬁón
 (* 
no_expo£_evít
Ë(
GtkWidgë
 *
widgë
,

344 
GdkEvítAny
 *
evít
);

345 
	`gboﬁón
 (* 
wödow_°©e_evít
Ë(
GtkWidgë
 *
widgë
,

346 
GdkEvítWödowSèã
 *
evít
);

349 (* 
£À˘i⁄_gë
Ë(
GtkWidgë
 *
widgë
,

350 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

351 
guöt
 
öfo
,

352 
guöt
 
time_
);

353 (* 
£À˘i⁄_ª˚ived
Ë(
GtkWidgë
 *
widgë
,

354 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

355 
guöt
 
time_
);

358 (* 
døg_begö
Ë(
GtkWidgë
 *
widgë
,

359 
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

360 (* 
døg_íd
Ë(
GtkWidgë
 *
widgë
,

361 
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

362 (* 
døg_d©a_gë
Ë(
GtkWidgë
 *
widgë
,

363 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

364 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

365 
guöt
 
öfo
,

366 
guöt
 
time_
);

367 (* 
døg_d©a_dñëe
Ë(
GtkWidgë
 *
widgë
,

368 
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

371 (* 
døg_Àave
Ë(
GtkWidgë
 *
widgë
,

372 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

373 
guöt
 
time_
);

374 
	`gboﬁón
 (* 
døg_mŸi⁄
Ë(
GtkWidgë
 *
widgë
,

375 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

376 
göt
 
x
,

377 
göt
 
y
,

378 
guöt
 
time_
);

379 
	`gboﬁón
 (* 
døg_dr›
Ë(
GtkWidgë
 *
widgë
,

380 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

381 
göt
 
x
,

382 
göt
 
y
,

383 
guöt
 
time_
);

384 (* 
døg_d©a_ª˚ived
Ë(
GtkWidgë
 *
widgë
,

385 
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

386 
göt
 
x
,

387 
göt
 
y
,

388 
GtkSñe˘i⁄D©a
 *
£À˘i⁄_d©a
,

389 
guöt
 
öfo
,

390 
guöt
 
time_
);

393 
	`gboﬁón
 (* 
p›up_míu
Ë(
GtkWidgë
 *
widgë
);

400 
	`gboﬁón
 (* 
show_hñp
Ë(
GtkWidgë
 *
widgë
,

401 
GtkWidgëHñpTy≥
 
hñp_ty≥
);

405 
AtkObje˘
* (*
gë_ac˚ssibÀ
Ë(
GtkWidgë
 *
widgë
);

407 (*
s¸ìn_ch™ged
Ë(
GtkWidgë
 *
widgë
,

408 
GdkS¸ìn
 *
¥evious_s¸ìn
);

409 
	`gboﬁón
 (*
ˇn_a˘iv©e_ac˚l
Ë(
GtkWidgë
 *
widgë
,

410 
guöt
 
sig«l_id
);

413 
	`gboﬁón
 (*
gøb_brokí_evít
Ë(
GtkWidgë
 *
widgë
,

414 
GdkEvítGøbBrokí
 *
evít
);

416 (* 
composôed_ch™ged
Ë(
GtkWidgë
 *
widgë
);

418 
	`gboﬁón
 (* 
quîy_toﬁtù
Ë(
GtkWidgë
 *
widgë
,

419 
göt
 
x
,

420 
göt
 
y
,

421 
gboﬁón
 
keybﬂrd_toﬁtù
,

422 
GtkToﬁtù
 *
toﬁtù
);

429 (*
_gtk_ª£rved5
) ();

430 (*
_gtk_ª£rved6
) ();

431 (*
_gtk_ª£rved7
) ();

434 
	s_GtkWidgëAuxInfo


436 
göt
 
x
;

437 
göt
 
y
;

438 
göt
 
width
;

439 
göt
 
height
;

440 
guöt
 
x_£t
 : 1;

441 
guöt
 
y_£t
 : 1;

444 
	s_GtkWidgëSh≠eInfo


446 
göt16
 
off£t_x
;

447 
göt16
 
off£t_y
;

448 
GdkBôm≠
 *
sh≠e_mask
;

451 
GTy≥
 
	$gtk_widgë_gë_ty≥
 (Ë
G_GNUC_CONST
;

452 
GtkWidgë
* 
	`gtk_widgë_√w
 (
GTy≥
 
ty≥
,

453 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

455 
	`gtk_widgë_de°roy
 (
GtkWidgë
 *
widgë
);

456 
	`gtk_widgë_de°royed
 (
GtkWidgë
 *
widgë
,

457 
GtkWidgë
 **
widgë_poöãr
);

458 #i‚de‡
GTK_DISABLE_DEPRECATED


459 
GtkWidgë
* 
	`gtk_widgë_ªf
 (GtkWidgë *
widgë
);

460 
	`gtk_widgë_uƒef
 (
GtkWidgë
 *
widgë
);

461 
	$gtk_widgë_£t
 (
GtkWidgë
 *
widgë
,

462 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

463 ...Ë
G_GNUC_NULL_TERMINATED
;

465 
	`gtk_widgë_u≈¨ít
 (
GtkWidgë
 *
widgë
);

466 
	`gtk_widgë_show
 (
GtkWidgë
 *
widgë
);

467 
	`gtk_widgë_show_now
 (
GtkWidgë
 *
widgë
);

468 
	`gtk_widgë_hide
 (
GtkWidgë
 *
widgë
);

469 
	`gtk_widgë_show_Æl
 (
GtkWidgë
 *
widgë
);

470 
	`gtk_widgë_hide_Æl
 (
GtkWidgë
 *
widgë
);

471 
	`gtk_widgë_£t_no_show_Æl
 (
GtkWidgë
 *
widgë
,

472 
gboﬁón
 
no_show_Æl
);

473 
gboﬁón
 
	`gtk_widgë_gë_no_show_Æl
 (
GtkWidgë
 *
widgë
);

474 
	`gtk_widgë_m≠
 (
GtkWidgë
 *
widgë
);

475 
	`gtk_widgë_unm≠
 (
GtkWidgë
 *
widgë
);

476 
	`gtk_widgë_ªÆize
 (
GtkWidgë
 *
widgë
);

477 
	`gtk_widgë_uƒólize
 (
GtkWidgë
 *
widgë
);

480 
	`gtk_widgë_queue_døw
 (
GtkWidgë
 *
widgë
);

481 
	`gtk_widgë_queue_døw_¨ó
 (
GtkWidgë
 *
widgë
,

482 
göt
 
x
,

483 
göt
 
y
,

484 
göt
 
width
,

485 
göt
 
height
);

486 #i‚de‡
GTK_DISABLE_DEPRECATED


487 
	`gtk_widgë_queue_˛ór
 (
GtkWidgë
 *
widgë
);

488 
	`gtk_widgë_queue_˛ór_¨ó
 (
GtkWidgë
 *
widgë
,

489 
göt
 
x
,

490 
göt
 
y
,

491 
göt
 
width
,

492 
göt
 
height
);

496 
	`gtk_widgë_queue_ªsize
 (
GtkWidgë
 *
widgë
);

497 
	`gtk_widgë_queue_ªsize_no_ªdøw
 (
GtkWidgë
 *
widgë
);

498 #i‚de‡
GTK_DISABLE_DEPRECATED


499 
	`gtk_widgë_døw
 (
GtkWidgë
 *
widgë
,

500 c⁄° 
GdkRe˘™gÀ
 *
¨ó
);

502 
	`gtk_widgë_size_ªque°
 (
GtkWidgë
 *
widgë
,

503 
GtkRequisôi⁄
 *
ªquisôi⁄
);

504 
	`gtk_widgë_size_Æloˇã
 (
GtkWidgë
 *
widgë
,

505 
GtkAŒoˇti⁄
 *
Æloˇti⁄
);

506 
	`gtk_widgë_gë_chûd_ªquisôi⁄
 (
GtkWidgë
 *
widgë
,

507 
GtkRequisôi⁄
 *
ªquisôi⁄
);

508 
	`gtk_widgë_add_ac˚Àøt‹
 (
GtkWidgë
 *
widgë
,

509 c⁄° 
gch¨
 *
ac˚l_sig«l
,

510 
GtkAc˚lGroup
 *
ac˚l_group
,

511 
guöt
 
ac˚l_key
,

512 
GdkModifõrTy≥
 
ac˚l_mods
,

513 
GtkAc˚lFœgs
 
ac˚l_Êags
);

514 
gboﬁón
 
	`gtk_widgë_ªmove_ac˚Àøt‹
 (
GtkWidgë
 *
widgë
,

515 
GtkAc˚lGroup
 *
ac˚l_group
,

516 
guöt
 
ac˚l_key
,

517 
GdkModifõrTy≥
 
ac˚l_mods
);

518 
	`gtk_widgë_£t_ac˚l_∑th
 (
GtkWidgë
 *
widgë
,

519 c⁄° 
gch¨
 *
ac˚l_∑th
,

520 
GtkAc˚lGroup
 *
ac˚l_group
);

521 c⁄° 
gch¨
* 
	`_gtk_widgë_gë_ac˚l_∑th
 (
GtkWidgë
 *
widgë
,

522 
gboﬁón
 *
locked
);

523 
GLi°
* 
	`gtk_widgë_li°_ac˚l_˛osuªs
 (
GtkWidgë
 *
widgë
);

524 
gboﬁón
 
	`gtk_widgë_ˇn_a˘iv©e_ac˚l
 (
GtkWidgë
 *
widgë
,

525 
guöt
 
sig«l_id
);

526 
gboﬁón
 
	`gtk_widgë_m√m⁄ic_a˘iv©e
 (
GtkWidgë
 *
widgë
,

527 
gboﬁón
 
group_cy˛ög
);

528 
gboﬁón
 
	`gtk_widgë_evít
 (
GtkWidgë
 *
widgë
,

529 
GdkEvít
 *
evít
);

530 
göt
 
	`gtk_widgë_£nd_expo£
 (
GtkWidgë
 *
widgë
,

531 
GdkEvít
 *
evít
);

533 
gboﬁón
 
	`gtk_widgë_a˘iv©e
 (
GtkWidgë
 *
widgë
);

534 
gboﬁón
 
	`gtk_widgë_£t_s¸ﬁl_adju°míts
 (
GtkWidgë
 *
widgë
,

535 
GtkAdju°mít
 *
hadju°mít
,

536 
GtkAdju°mít
 *
vadju°mít
);

538 
	`gtk_widgë_ª∑ª¡
 (
GtkWidgë
 *
widgë
,

539 
GtkWidgë
 *
√w_∑ª¡
);

540 
gboﬁón
 
	`gtk_widgë_öãr£˘
 (
GtkWidgë
 *
widgë
,

541 c⁄° 
GdkRe˘™gÀ
 *
¨ó
,

542 
GdkRe˘™gÀ
 *
öãr£˘i⁄
);

543 
GdkRegi⁄
 *
	`gtk_widgë_ªgi⁄_öãr£˘
 (
GtkWidgë
 *
widgë
,

544 c⁄° 
GdkRegi⁄
 *
ªgi⁄
);

546 
	`gtk_widgë_‰ìze_chûd_nŸify
 (
GtkWidgë
 *
widgë
);

547 
	`gtk_widgë_chûd_nŸify
 (
GtkWidgë
 *
widgë
,

548 c⁄° 
gch¨
 *
chûd_¥›îty
);

549 
	`gtk_widgë_thaw_chûd_nŸify
 (
GtkWidgë
 *
widgë
);

551 
gboﬁón
 
	`gtk_widgë_is_focus
 (
GtkWidgë
 *
widgë
);

552 
	`gtk_widgë_gøb_focus
 (
GtkWidgë
 *
widgë
);

553 
	`gtk_widgë_gøb_deÁu…
 (
GtkWidgë
 *
widgë
);

555 
	`gtk_widgë_£t_«me
 (
GtkWidgë
 *
widgë
,

556 c⁄° 
gch¨
 *
«me
);

557 
G_CONST_RETURN
 
gch¨
* 
	`gtk_widgë_gë_«me
 (
GtkWidgë
 *
widgë
);

558 
	`gtk_widgë_£t_°©e
 (
GtkWidgë
 *
widgë
,

559 
GtkSèãTy≥
 
°©e
);

560 
	`gtk_widgë_£t_£nsôive
 (
GtkWidgë
 *
widgë
,

561 
gboﬁón
 
£nsôive
);

562 
	`gtk_widgë_£t_≠p_∑öèbÀ
 (
GtkWidgë
 *
widgë
,

563 
gboﬁón
 
≠p_∑öèbÀ
);

564 
	`gtk_widgë_£t_doubÀ_buf„ªd
 (
GtkWidgë
 *
widgë
,

565 
gboﬁón
 
doubÀ_buf„ªd
);

566 
	`gtk_widgë_£t_ªdøw_⁄_Æloˇã
 (
GtkWidgë
 *
widgë
,

567 
gboﬁón
 
ªdøw_⁄_Æloˇã
);

568 
	`gtk_widgë_£t_∑ª¡
 (
GtkWidgë
 *
widgë
,

569 
GtkWidgë
 *
∑ª¡
);

570 
GtkWidgë
 * 
	`gtk_widgë_gë_∑ª¡
 (GtkWidgë *
widgë
);

571 
	`gtk_widgë_£t_∑ª¡_wödow
 (
GtkWidgë
 *
widgë
,

572 
GdkWödow
 *
∑ª¡_wödow
);

573 
GdkWödow
 * 
	`gtk_widgë_gë_∑ª¡_wödow
 (
GtkWidgë
 *
widgë
);

574 
	`gtk_widgë_£t_chûd_visibÀ
 (
GtkWidgë
 *
widgë
,

575 
gboﬁón
 
is_visibÀ
);

576 
gboﬁón
 
	`gtk_widgë_gë_chûd_visibÀ
 (
GtkWidgë
 *
widgë
);

577 
GdkWödow
* 
	`gtk_widgë_gë_wödow
 (
GtkWidgë
 *
widgë
);

579 
gboﬁón
 
	`gtk_widgë_chûd_focus
 (
GtkWidgë
 *
widgë
,

580 
GtkDúe˘i⁄Ty≥
 
dúe˘i⁄
);

581 
gboﬁón
 
	`gtk_widgë_key«v_Áûed
 (
GtkWidgë
 *
widgë
,

582 
GtkDúe˘i⁄Ty≥
 
dúe˘i⁄
);

583 
	`gtk_widgë_îr‹_bñl
 (
GtkWidgë
 *
widgë
);

585 
	`gtk_widgë_£t_size_ªque°
 (
GtkWidgë
 *
widgë
,

586 
göt
 
width
,

587 
göt
 
height
);

588 
	`gtk_widgë_gë_size_ªque°
 (
GtkWidgë
 *
widgë
,

589 
göt
 *
width
,

590 
göt
 *
height
);

591 #i‚de‡
GTK_DISABLE_DEPRECATED


592 
	`gtk_widgë_£t_uposôi⁄
 (
GtkWidgë
 *
widgë
,

593 
göt
 
x
,

594 
göt
 
y
);

595 
	`gtk_widgë_£t_usize
 (
GtkWidgë
 *
widgë
,

596 
göt
 
width
,

597 
göt
 
height
);

600 
	`gtk_widgë_£t_evíts
 (
GtkWidgë
 *
widgë
,

601 
göt
 
evíts
);

602 
	`gtk_widgë_add_evíts
 (
GtkWidgë
 *
widgë
,

603 
göt
 
evíts
);

604 
	`gtk_widgë_£t_exãnsi⁄_evíts
 (
GtkWidgë
 *
widgë
,

605 
GdkExãnsi⁄Mode
 
mode
);

607 
GdkExãnsi⁄Mode
 
	`gtk_widgë_gë_exãnsi⁄_evíts
 (
GtkWidgë
 *
widgë
);

608 
GtkWidgë
* 
	`gtk_widgë_gë_t›Àvñ
 (GtkWidgë *
widgë
);

609 
GtkWidgë
* 
	`gtk_widgë_gë_™˚°‹
 (GtkWidgë *
widgë
,

610 
GTy≥
 
widgë_ty≥
);

611 
GdkCﬁ‹m≠
* 
	`gtk_widgë_gë_cﬁ‹m≠
 (
GtkWidgë
 *
widgë
);

612 
GdkVisuÆ
* 
	`gtk_widgë_gë_visuÆ
 (
GtkWidgë
 *
widgë
);

614 
GdkS¸ìn
 * 
	`gtk_widgë_gë_s¸ìn
 (
GtkWidgë
 *
widgë
);

615 
gboﬁón
 
	`gtk_widgë_has_s¸ìn
 (
GtkWidgë
 *
widgë
);

616 
GdkDi•œy
 * 
	`gtk_widgë_gë_di•œy
 (
GtkWidgë
 *
widgë
);

617 
GdkWödow
 * 
	`gtk_widgë_gë_roŸ_wödow
 (
GtkWidgë
 *
widgë
);

618 
GtkSëtögs
* 
	`gtk_widgë_gë_£âögs
 (
GtkWidgë
 *
widgë
);

619 
GtkClùbﬂrd
 *
	`gtk_widgë_gë_˛ùbﬂrd
 (
GtkWidgë
 *
widgë
,

620 
GdkAtom
 
£À˘i⁄
);

621 
GdkPixm≠
 * 
	`gtk_widgë_gë_¢≠shŸ
 (
GtkWidgë
 *
widgë
,

622 
GdkRe˘™gÀ
 *
˛ù_ª˘
);

624 #i‚de‡
GTK_DISABLE_DEPRECATED


625 
	#gtk_widgë_£t_visuÆ
(
widgë
,
visuÆ
Ë((Ë0)

	)

626 
	#gtk_widgë_push_visuÆ
(
visuÆ
Ë((Ë0)

	)

627 
	#gtk_widgë_p›_visuÆ
(Ë((Ë0)

	)

628 
	#gtk_widgë_£t_deÁu…_visuÆ
(
visuÆ
Ë((Ë0)

	)

632 
AtkObje˘
* 
	`gtk_widgë_gë_ac˚ssibÀ
 (
GtkWidgë
 *
widgë
);

640 
	`gtk_widgë_£t_cﬁ‹m≠
 (
GtkWidgë
 *
widgë
,

641 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

643 
göt
 
	`gtk_widgë_gë_evíts
 (
GtkWidgë
 *
widgë
);

644 
	`gtk_widgë_gë_poöãr
 (
GtkWidgë
 *
widgë
,

645 
göt
 *
x
,

646 
göt
 *
y
);

648 
gboﬁón
 
	`gtk_widgë_is_™˚°‹
 (
GtkWidgë
 *
widgë
,

649 
GtkWidgë
 *
™˚°‹
);

651 
gboﬁón
 
	`gtk_widgë_å™¶©e_co‹dö©es
 (
GtkWidgë
 *
§c_widgë
,

652 
GtkWidgë
 *
de°_widgë
,

653 
göt
 
§c_x
,

654 
göt
 
§c_y
,

655 
göt
 *
de°_x
,

656 
göt
 *
de°_y
);

660 
gboﬁón
 
	`gtk_widgë_hide_⁄_dñëe
 (
GtkWidgë
 *
widgë
);

664 
	`gtk_widgë_£t_°yÀ
 (
GtkWidgë
 *
widgë
,

665 
GtkStyÀ
 *
°yÀ
);

666 
	`gtk_widgë_ísuª_°yÀ
 (
GtkWidgë
 *
widgë
);

667 
GtkStyÀ
* 
	`gtk_widgë_gë_°yÀ
 (
GtkWidgë
 *
widgë
);

669 
	`gtk_widgë_modify_°yÀ
 (
GtkWidgë
 *
widgë
,

670 
GtkRcStyÀ
 *
°yÀ
);

671 
GtkRcStyÀ
 *
	`gtk_widgë_gë_modifõr_°yÀ
 (
GtkWidgë
 *
widgë
);

672 
	`gtk_widgë_modify_fg
 (
GtkWidgë
 *
widgë
,

673 
GtkSèãTy≥
 
°©e
,

674 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

675 
	`gtk_widgë_modify_bg
 (
GtkWidgë
 *
widgë
,

676 
GtkSèãTy≥
 
°©e
,

677 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

678 
	`gtk_widgë_modify_ãxt
 (
GtkWidgë
 *
widgë
,

679 
GtkSèãTy≥
 
°©e
,

680 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

681 
	`gtk_widgë_modify_ba£
 (
GtkWidgë
 *
widgë
,

682 
GtkSèãTy≥
 
°©e
,

683 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

684 
	`gtk_widgë_modify_curs‹
 (
GtkWidgë
 *
widgë
,

685 c⁄° 
GdkCﬁ‹
 *
¥im¨y
,

686 c⁄° 
GdkCﬁ‹
 *
£c⁄d¨y
);

687 
	`gtk_widgë_modify_f⁄t
 (
GtkWidgë
 *
widgë
,

688 
P™goF⁄tDes¸ùti⁄
 *
f⁄t_desc
);

690 #i‚de‡
GTK_DISABLE_DEPRECATED


691 
	#gtk_widgë_£t_rc_°yÀ
(
widgë
Ë(
	`gtk_widgë_£t_°yÀ
 (widgë, 
NULL
))

	)

692 
	#gtk_widgë_ª°‹e_deÁu…_°yÀ
(
widgë
Ë(
	`gtk_widgë_£t_°yÀ
 (widgë, 
NULL
))

	)

695 
P™goC⁄ãxt
 *
	`gtk_widgë_¸óã_∑ngo_c⁄ãxt
 (
GtkWidgë
 *
widgë
);

696 
P™goC⁄ãxt
 *
	`gtk_widgë_gë_∑ngo_c⁄ãxt
 (
GtkWidgë
 *
widgë
);

697 
P™goLayout
 *
	`gtk_widgë_¸óã_∑ngo_œyout
 (
GtkWidgë
 *
widgë
,

698 c⁄° 
gch¨
 *
ãxt
);

700 
GdkPixbuf
 *
	`gtk_widgë_ªndî_ic⁄
 (
GtkWidgë
 *
widgë
,

701 c⁄° 
gch¨
 *
°ock_id
,

702 
GtkIc⁄Size
 
size
,

703 c⁄° 
gch¨
 *
dëaû
);

708 
	`gtk_widgë_£t_composôe_«me
 (
GtkWidgë
 *
widgë
,

709 c⁄° 
gch¨
 *
«me
);

710 
gch¨
* 
	`gtk_widgë_gë_composôe_«me
 (
GtkWidgë
 *
widgë
);

713 
	`gtk_widgë_ª£t_rc_°yÀs
 (
GtkWidgë
 *
widgë
);

719 
	`gtk_widgë_push_cﬁ‹m≠
 (
GdkCﬁ‹m≠
 *
cm≠
);

720 
	`gtk_widgë_push_composôe_chûd
 ();

721 
	`gtk_widgë_p›_composôe_chûd
 ();

722 
	`gtk_widgë_p›_cﬁ‹m≠
 ();

726 
	`gtk_widgë_˛ass_ö°Æl_°yÀ_¥›îty
 (
GtkWidgëCœss
 *
kœss
,

727 
GP¨amS≥c
 *
p•ec
);

728 
	`gtk_widgë_˛ass_ö°Æl_°yÀ_¥›îty_∑r£r
 (
GtkWidgëCœss
 *
kœss
,

729 
GP¨amS≥c
 *
p•ec
,

730 
GtkRcPr›îtyP¨£r
 
∑r£r
);

731 
GP¨amS≥c
* 
	`gtk_widgë_˛ass_föd_°yÀ_¥›îty
 (
GtkWidgëCœss
 *
kœss
,

732 c⁄° 
gch¨
 *
¥›îty_«me
);

733 
GP¨amS≥c
** 
	`gtk_widgë_˛ass_li°_°yÀ_¥›îtõs
 (
GtkWidgëCœss
 *
kœss
,

734 
guöt
 *
n_¥›îtõs
);

735 
	`gtk_widgë_°yÀ_gë_¥›îty
 (
GtkWidgë
 *
widgë
,

736 c⁄° 
gch¨
 *
¥›îty_«me
,

737 
GVÆue
 *
vÆue
);

738 
	`gtk_widgë_°yÀ_gë_vÆi°
 (
GtkWidgë
 *
widgë
,

739 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

740 
va_li°
 
v¨_¨gs
);

741 
	$gtk_widgë_°yÀ_gë
 (
GtkWidgë
 *
widgë
,

742 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

743 ...Ë
G_GNUC_NULL_TERMINATED
;

748 
	`gtk_widgë_£t_deÁu…_cﬁ‹m≠
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

749 
GtkStyÀ
* 
	`gtk_widgë_gë_deÁu…_°yÀ
 ();

750 #i‚de‡
GDK_MULTIHEAD_SAFE


751 
GdkCﬁ‹m≠
* 
	`gtk_widgë_gë_deÁu…_cﬁ‹m≠
 ();

752 
GdkVisuÆ
* 
	`gtk_widgë_gë_deÁu…_visuÆ
 ();

758 
	`gtk_widgë_£t_dúe˘i⁄
 (
GtkWidgë
 *
widgë
,

759 
GtkTextDúe˘i⁄
 
dú
);

760 
GtkTextDúe˘i⁄
 
	`gtk_widgë_gë_dúe˘i⁄
 (
GtkWidgë
 *
widgë
);

762 
	`gtk_widgë_£t_deÁu…_dúe˘i⁄
 (
GtkTextDúe˘i⁄
 
dú
);

763 
GtkTextDúe˘i⁄
 
	`gtk_widgë_gë_deÁu…_dúe˘i⁄
 ();

766 
gboﬁón
 
	`gtk_widgë_is_composôed
 (
GtkWidgë
 *
widgë
);

770 
	`gtk_widgë_sh≠e_comböe_mask
 (
GtkWidgë
 *
widgë
,

771 
GdkBôm≠
 *
sh≠e_mask
,

772 
göt
 
off£t_x
,

773 
göt
 
off£t_y
);

774 
	`gtk_widgë_öput_sh≠e_comböe_mask
 (
GtkWidgë
 *
widgë
,

775 
GdkBôm≠
 *
sh≠e_mask
,

776 
göt
 
off£t_x
,

777 
göt
 
off£t_y
);

780 
	`gtk_widgë_ª£t_sh≠es
 (
GtkWidgë
 *
widgë
);

785 
	`gtk_widgë_∑th
 (
GtkWidgë
 *
widgë
,

786 
guöt
 *
∑th_Àngth
,

787 
gch¨
 **
∑th
,

788 
gch¨
 **
∑th_ªvî£d
);

789 
	`gtk_widgë_˛ass_∑th
 (
GtkWidgë
 *
widgë
,

790 
guöt
 *
∑th_Àngth
,

791 
gch¨
 **
∑th
,

792 
gch¨
 **
∑th_ªvî£d
);

794 
GLi°
* 
	`gtk_widgë_li°_m√m⁄ic_œbñs
 (
GtkWidgë
 *
widgë
);

795 
	`gtk_widgë_add_m√m⁄ic_œbñ
 (
GtkWidgë
 *
widgë
,

796 
GtkWidgë
 *
œbñ
);

797 
	`gtk_widgë_ªmove_m√m⁄ic_œbñ
 (
GtkWidgë
 *
widgë
,

798 
GtkWidgë
 *
œbñ
);

800 
	`gtk_widgë_£t_toﬁtù_wödow
 (
GtkWidgë
 *
widgë
,

801 
GtkWödow
 *
cu°om_wödow
);

802 
GtkWödow
 *
	`gtk_widgë_gë_toﬁtù_wödow
 (
GtkWidgë
 *
widgë
);

803 
	`gtk_widgë_åiggî_toﬁtù_quîy
 (
GtkWidgë
 *
widgë
);

804 
	`gtk_widgë_£t_toﬁtù_ãxt
 (
GtkWidgë
 *
widgë
,

805 c⁄° 
gch¨
 *
ãxt
);

806 
gch¨
 * 
	`gtk_widgë_gë_toﬁtù_ãxt
 (
GtkWidgë
 *
widgë
);

807 
	`gtk_widgë_£t_toﬁtù_m¨kup
 (
GtkWidgë
 *
widgë
,

808 c⁄° 
gch¨
 *
m¨kup
);

809 
gch¨
 * 
	`gtk_widgë_gë_toﬁtù_m¨kup
 (
GtkWidgë
 *
widgë
);

810 
	`gtk_widgë_£t_has_toﬁtù
 (
GtkWidgë
 *
widgë
,

811 
gboﬁón
 
has_toﬁtù
);

812 
gboﬁón
 
	`gtk_widgë_gë_has_toﬁtù
 (
GtkWidgë
 *
widgë
);

814 
GTy≥
 
	$gtk_ªquisôi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

815 
GtkRequisôi⁄
 *
	`gtk_ªquisôi⁄_c›y
 (c⁄° GtkRequisôi⁄ *
ªquisôi⁄
);

816 
	`gtk_ªquisôi⁄_‰ì
 (
GtkRequisôi⁄
 *
ªquisôi⁄
);

818 #if 
	`deföed
 (
GTK_TRACE_OBJECTS
Ë&& deföed (
__GNUC__
)

819 
	#gtk_widgë_ªf
 
gtk_obje˘_ªf


	)

820 
	#gtk_widgë_uƒef
 
gtk_obje˘_uƒef


	)

823 
	`_gtk_widgë_gøb_nŸify
 (
GtkWidgë
 *
widgë
,

824 
gboﬁón
 
was_gøbbed
);

826 
GtkWidgëAuxInfo
 *
	`_gtk_widgë_gë_aux_öfo
 (
GtkWidgë
 *
widgë
,

827 
gboﬁón
 
¸óã
);

828 
	`_gtk_widgë_¥›ag©e_hõørchy_ch™ged
 (
GtkWidgë
 *
widgë
,

829 
GtkWidgë
 *
¥evious_t›Àvñ
);

830 
	`_gtk_widgë_¥›ag©e_s¸ìn_ch™ged
 (
GtkWidgë
 *
widgë
,

831 
GdkS¸ìn
 *
¥evious_s¸ìn
);

832 
	`_gtk_widgë_¥›ag©e_composôed_ch™ged
 (
GtkWidgë
 *
widgë
);

834 
	`_gtk_widgë_£t_poöãr_wödow
 (
GtkWidgë
 *
widgë
,

835 
GdkWödow
 *
poöãr_wödow
);

836 
GdkWödow
 *
	`_gtk_widgë_gë_poöãr_wödow
 (
GtkWidgë
 *
widgë
);

837 
gboﬁón
 
	`_gtk_widgë_is_poöãr_widgë
 (
GtkWidgë
 *
widgë
);

838 
	`_gtk_widgë_sy¡hesize_¸ossög
 (
GtkWidgë
 *
‰om
,

839 
GtkWidgë
 *
to
,

840 
GdkCrossögMode
 
mode
);

842 
GdkCﬁ‹m≠
* 
	`_gtk_widgë_≥ek_cﬁ‹m≠
 ();

844 
G_END_DECLS


	@/usr/include/libbonobo-2.0/bonobo/Bonobo.h

5 #i‚de‡
B⁄obo_H


6 
	#B⁄obo_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_Unknown.h
>

18 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_GíîicFa˘‹y.h
>

19 #unde‡
ex_B⁄obo_NŸSuµ‹ãd


20 
	#ex_B⁄obo_NŸSuµ‹ãd
 "IDL:B⁄obo/NŸSuµ‹ãd:1.0"

	)

21 #i‡!
deföed
(
_B⁄obo_NŸSuµ‹ãd_deföed
)

22 
	#_B⁄obo_NŸSuµ‹ãd_deföed
 1

	)

23 
B⁄obo_NŸSuµ‹ãd_ty≥
 
	tB⁄obo_NŸSuµ‹ãd
;

24 
	sB⁄obo_NŸSuµ‹ãd_ty≥
 {

25 
	mdummy
;

28 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_0
)

29 
	#TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_0
 'B'

	)

30 
	#TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_1
 'o'

	)

31 
	#TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_2
 'n'

	)

32 
	#TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_3
 'o'

	)

33 
	#TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_4
 'b'

	)

34 
	#TC_IMPL_TC_B⁄obo_NŸSuµ‹ãd_5
 'o'

	)

35 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


40 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_NŸSuµ‹ãd_°ru˘
;

41 
	#TC_B⁄obo_NŸSuµ‹ãd
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_NŸSuµ‹ãd_°ru˘
)

	)

43 
	#B⁄obo_NŸSuµ‹ãd__Æloc
(Ë((
B⁄obo_NŸSuµ‹ãd
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_NŸSuµ‹ãd
))

	)

44 
	#B⁄obo_NŸSuµ‹ãd__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_NŸSuµ‹ãd
,(m),(d))

	)

46 #unde‡
ex_B⁄obo_NŸIm∂emíãd


47 
	#ex_B⁄obo_NŸIm∂emíãd
 "IDL:B⁄obo/NŸIm∂emíãd:1.0"

	)

48 #i‡!
deföed
(
_B⁄obo_NŸIm∂emíãd_deföed
)

49 
	#_B⁄obo_NŸIm∂emíãd_deföed
 1

	)

50 
B⁄obo_NŸIm∂emíãd_ty≥
 
	tB⁄obo_NŸIm∂emíãd
;

51 
	sB⁄obo_NŸIm∂emíãd_ty≥
 {

52 
	gdummy
;

55 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_0
)

56 
	#TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_0
 'B'

	)

57 
	#TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_1
 'o'

	)

58 
	#TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_2
 'n'

	)

59 
	#TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_3
 'o'

	)

60 
	#TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_4
 'b'

	)

61 
	#TC_IMPL_TC_B⁄obo_NŸIm∂emíãd_5
 'o'

	)

62 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


67 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_NŸIm∂emíãd_°ru˘
;

68 
	#TC_B⁄obo_NŸIm∂emíãd
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_NŸIm∂emíãd_°ru˘
)

	)

70 
	#B⁄obo_NŸIm∂emíãd__Æloc
(Ë((
B⁄obo_NŸIm∂emíãd
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_NŸIm∂emíãd
))

	)

71 
	#B⁄obo_NŸIm∂emíãd__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_NŸIm∂emíãd
,(m),(d))

	)

73 #unde‡
ex_B⁄obo_IOEº‹


74 
	#ex_B⁄obo_IOEº‹
 "IDL:B⁄obo/IOEº‹:1.0"

	)

75 #i‡!
deföed
(
_B⁄obo_IOEº‹_deföed
)

76 
	#_B⁄obo_IOEº‹_deföed
 1

	)

77 
B⁄obo_IOEº‹_ty≥
 
	tB⁄obo_IOEº‹
;

78 
	sB⁄obo_IOEº‹_ty≥
 {

79 
	gdummy
;

82 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_IOEº‹_0
)

83 
	#TC_IMPL_TC_B⁄obo_IOEº‹_0
 'B'

	)

84 
	#TC_IMPL_TC_B⁄obo_IOEº‹_1
 'o'

	)

85 
	#TC_IMPL_TC_B⁄obo_IOEº‹_2
 'n'

	)

86 
	#TC_IMPL_TC_B⁄obo_IOEº‹_3
 'o'

	)

87 
	#TC_IMPL_TC_B⁄obo_IOEº‹_4
 'b'

	)

88 
	#TC_IMPL_TC_B⁄obo_IOEº‹_5
 'o'

	)

89 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


94 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_IOEº‹_°ru˘
;

95 
	#TC_B⁄obo_IOEº‹
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_IOEº‹_°ru˘
)

	)

97 
	#B⁄obo_IOEº‹__Æloc
(Ë((
B⁄obo_IOEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_IOEº‹
))

	)

98 
	#B⁄obo_IOEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_IOEº‹
,(m),(d))

	)

100 #unde‡
ex_B⁄obo_BadArg


101 
	#ex_B⁄obo_BadArg
 "IDL:B⁄obo/BadArg:1.0"

	)

102 #i‡!
deföed
(
_B⁄obo_BadArg_deföed
)

103 
	#_B⁄obo_BadArg_deföed
 1

	)

104 
B⁄obo_BadArg_ty≥
 
	tB⁄obo_BadArg
;

105 
	sB⁄obo_BadArg_ty≥
 {

106 
	gdummy
;

109 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_BadArg_0
)

110 
	#TC_IMPL_TC_B⁄obo_BadArg_0
 'B'

	)

111 
	#TC_IMPL_TC_B⁄obo_BadArg_1
 'o'

	)

112 
	#TC_IMPL_TC_B⁄obo_BadArg_2
 'n'

	)

113 
	#TC_IMPL_TC_B⁄obo_BadArg_3
 'o'

	)

114 
	#TC_IMPL_TC_B⁄obo_BadArg_4
 'b'

	)

115 
	#TC_IMPL_TC_B⁄obo_BadArg_5
 'o'

	)

116 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


121 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_BadArg_°ru˘
;

122 
	#TC_B⁄obo_BadArg
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_BadArg_°ru˘
)

	)

124 
	#B⁄obo_BadArg__Æloc
(Ë((
B⁄obo_BadArg
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_BadArg
))

	)

125 
	#B⁄obo_BadArg__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_BadArg
,(m),(d))

	)

127 #i‡!
deföed
(
_B⁄obo_ResﬁveFœg_deföed
)

128 
	#_B⁄obo_ResﬁveFœg_deföed
 1

	)

129 
CORBA_l⁄g
 
	tB⁄obo_ResﬁveFœg
;

130 
	#B⁄obo_ResﬁveFœg_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

131 
	#B⁄obo_ResﬁveFœg_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

132 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ResﬁveFœg_0
)

133 
	#TC_IMPL_TC_B⁄obo_ResﬁveFœg_0
 'B'

	)

134 
	#TC_IMPL_TC_B⁄obo_ResﬁveFœg_1
 'o'

	)

135 
	#TC_IMPL_TC_B⁄obo_ResﬁveFœg_2
 'n'

	)

136 
	#TC_IMPL_TC_B⁄obo_ResﬁveFœg_3
 'o'

	)

137 
	#TC_IMPL_TC_B⁄obo_ResﬁveFœg_4
 'b'

	)

138 
	#TC_IMPL_TC_B⁄obo_ResﬁveFœg_5
 'o'

	)

139 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


144 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ResﬁveFœg_°ru˘
;

145 
	#TC_B⁄obo_ResﬁveFœg
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ResﬁveFœg_°ru˘
)

	)

147 
	#B⁄obo_ResﬁveFœg__Æloc
(Ë((
B⁄obo_ResﬁveFœg
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

148 
	#B⁄obo_ResﬁveFœg__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

150 #i‚de‡
B⁄obo_MONIKER_ALLOW_USER_INTERACTION


151 
	#B⁄obo_MONIKER_ALLOW_USER_INTERACTION
 1

	)

154 #i‡!
deföed
(
_B⁄obo_ResﬁveO±i⁄s_deföed
)

155 
	#_B⁄obo_ResﬁveO±i⁄s_deföed
 1

	)

156 
B⁄obo_ResﬁveO±i⁄s_ty≥
 
	tB⁄obo_ResﬁveO±i⁄s
;

157 
	sB⁄obo_ResﬁveO±i⁄s_ty≥
 {

158 
B⁄obo_ResﬁveFœg
 
	gÊags
;

159 
CORBA_l⁄g
 
	gtimeout
;

162 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_0
)

163 
	#TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_0
 'B'

	)

164 
	#TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_1
 'o'

	)

165 
	#TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_2
 'n'

	)

166 
	#TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_3
 'o'

	)

167 
	#TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_4
 'b'

	)

168 
	#TC_IMPL_TC_B⁄obo_ResﬁveO±i⁄s_5
 'o'

	)

169 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


174 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ResﬁveO±i⁄s_°ru˘
;

175 
	#TC_B⁄obo_ResﬁveO±i⁄s
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ResﬁveO±i⁄s_°ru˘
)

	)

177 
	#B⁄obo_ResﬁveO±i⁄s__Æloc
(Ë((
B⁄obo_ResﬁveO±i⁄s
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_ResﬁveO±i⁄s
))

	)

178 
	#B⁄obo_ResﬁveO±i⁄s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_ResﬁveO±i⁄s
,(m),(d))

	)

180 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_M⁄ikî
Ë&& !deföed(
_B⁄obo_M⁄ikî_deföed
)

181 
	#ORBIT_DECL_B⁄obo_M⁄ikî
 1

	)

182 
	#_B⁄obo_M⁄ikî_deföed
 1

	)

183 
	#B⁄obo_M⁄ikî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

184 
CORBA_Obje˘
 
	tB⁄obo_M⁄ikî
;

185 
CORBA_unsig√d_l⁄g
 
B⁄obo_M⁄ikî__˛assid
;

186 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikî_0
)

187 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_0
 'B'

	)

188 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_1
 'o'

	)

189 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_2
 'n'

	)

190 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_3
 'o'

	)

191 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_4
 'b'

	)

192 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_5
 'o'

	)

193 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


198 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikî_°ru˘
;

199 
	#TC_B⁄obo_M⁄ikî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikî_°ru˘
)

	)

202 #unde‡
ex_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound


203 
	#ex_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound
 "IDL:B⁄obo/M⁄ikî/I¡îÁ˚NŸFound:1.0"

	)

204 #i‡!
deföed
(
_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_deföed
)

205 
	#_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_deföed
 1

	)

206 
B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_ty≥
 
	tB⁄obo_M⁄ikî_I¡îÁ˚NŸFound
;

207 
	sB⁄obo_M⁄ikî_I¡îÁ˚NŸFound_ty≥
 {

208 
	gdummy
;

211 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_0
)

212 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_0
 'B'

	)

213 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_1
 'o'

	)

214 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_2
 'n'

	)

215 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_3
 'o'

	)

216 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_4
 'b'

	)

217 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_5
 'o'

	)

218 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


223 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_°ru˘
;

224 
	#TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound_°ru˘
)

	)

226 
	#B⁄obo_M⁄ikî_I¡îÁ˚NŸFound__Æloc
(Ë((
B⁄obo_M⁄ikî_I¡îÁ˚NŸFound
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound
))

	)

227 
	#B⁄obo_M⁄ikî_I¡îÁ˚NŸFound__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_M⁄ikî_I¡îÁ˚NŸFound
,(m),(d))

	)

229 #unde‡
ex_B⁄obo_M⁄ikî_TimeOut


230 
	#ex_B⁄obo_M⁄ikî_TimeOut
 "IDL:B⁄obo/M⁄ikî/TimeOut:1.0"

	)

231 #i‡!
deföed
(
_B⁄obo_M⁄ikî_TimeOut_deföed
)

232 
	#_B⁄obo_M⁄ikî_TimeOut_deföed
 1

	)

233 
B⁄obo_M⁄ikî_TimeOut_ty≥
 
	tB⁄obo_M⁄ikî_TimeOut
;

234 
	sB⁄obo_M⁄ikî_TimeOut_ty≥
 {

235 
	gdummy
;

238 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_0
)

239 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_0
 'B'

	)

240 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_1
 'o'

	)

241 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_2
 'n'

	)

242 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_3
 'o'

	)

243 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_4
 'b'

	)

244 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_TimeOut_5
 'o'

	)

245 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


250 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikî_TimeOut_°ru˘
;

251 
	#TC_B⁄obo_M⁄ikî_TimeOut
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikî_TimeOut_°ru˘
)

	)

253 
	#B⁄obo_M⁄ikî_TimeOut__Æloc
(Ë((
B⁄obo_M⁄ikî_TimeOut
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_M⁄ikî_TimeOut
))

	)

254 
	#B⁄obo_M⁄ikî_TimeOut__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_M⁄ikî_TimeOut
,(m),(d))

	)

256 #unde‡
ex_B⁄obo_M⁄ikî_InvÆidSy¡ax


257 
	#ex_B⁄obo_M⁄ikî_InvÆidSy¡ax
 "IDL:B⁄obo/M⁄ikî/InvÆidSy¡ax:1.0"

	)

258 #i‡!
deföed
(
_B⁄obo_M⁄ikî_InvÆidSy¡ax_deföed
)

259 
	#_B⁄obo_M⁄ikî_InvÆidSy¡ax_deföed
 1

	)

260 
B⁄obo_M⁄ikî_InvÆidSy¡ax_ty≥
 
	tB⁄obo_M⁄ikî_InvÆidSy¡ax
;

261 
	sB⁄obo_M⁄ikî_InvÆidSy¡ax_ty≥
 {

262 
	gdummy
;

265 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_0
)

266 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_0
 'B'

	)

267 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_1
 'o'

	)

268 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_2
 'n'

	)

269 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_3
 'o'

	)

270 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_4
 'b'

	)

271 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_5
 'o'

	)

272 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


277 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_°ru˘
;

278 
	#TC_B⁄obo_M⁄ikî_InvÆidSy¡ax
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikî_InvÆidSy¡ax_°ru˘
)

	)

280 
	#B⁄obo_M⁄ikî_InvÆidSy¡ax__Æloc
(Ë((
B⁄obo_M⁄ikî_InvÆidSy¡ax
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_M⁄ikî_InvÆidSy¡ax
))

	)

281 
	#B⁄obo_M⁄ikî_InvÆidSy¡ax__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_M⁄ikî_InvÆidSy¡ax
,(m),(d))

	)

283 #unde‡
ex_B⁄obo_M⁄ikî_UnknownPªfix


284 
	#ex_B⁄obo_M⁄ikî_UnknownPªfix
 "IDL:B⁄obo/M⁄ikî/UnknownPªfix:1.0"

	)

285 #i‡!
deföed
(
_B⁄obo_M⁄ikî_UnknownPªfix_deföed
)

286 
	#_B⁄obo_M⁄ikî_UnknownPªfix_deföed
 1

	)

287 
B⁄obo_M⁄ikî_UnknownPªfix_ty≥
 
	tB⁄obo_M⁄ikî_UnknownPªfix
;

288 
	sB⁄obo_M⁄ikî_UnknownPªfix_ty≥
 {

289 
	gdummy
;

292 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_0
)

293 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_0
 'B'

	)

294 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_1
 'o'

	)

295 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_2
 'n'

	)

296 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_3
 'o'

	)

297 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_4
 'b'

	)

298 
	#TC_IMPL_TC_B⁄obo_M⁄ikî_UnknownPªfix_5
 'o'

	)

299 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


304 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikî_UnknownPªfix_°ru˘
;

305 
	#TC_B⁄obo_M⁄ikî_UnknownPªfix
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikî_UnknownPªfix_°ru˘
)

	)

307 
	#B⁄obo_M⁄ikî_UnknownPªfix__Æloc
(Ë((
B⁄obo_M⁄ikî_UnknownPªfix
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_M⁄ikî_UnknownPªfix
))

	)

308 
	#B⁄obo_M⁄ikî_UnknownPªfix__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_M⁄ikî_UnknownPªfix
,(m),(d))

	)

310 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_M⁄ikîExãndî
Ë&& !deföed(
_B⁄obo_M⁄ikîExãndî_deföed
)

311 
	#ORBIT_DECL_B⁄obo_M⁄ikîExãndî
 1

	)

312 
	#_B⁄obo_M⁄ikîExãndî_deföed
 1

	)

313 
	#B⁄obo_M⁄ikîExãndî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

314 
CORBA_Obje˘
 
	tB⁄obo_M⁄ikîExãndî
;

315 
CORBA_unsig√d_l⁄g
 
B⁄obo_M⁄ikîExãndî__˛assid
;

316 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_0
)

317 
	#TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_0
 'B'

	)

318 
	#TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_1
 'o'

	)

319 
	#TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_2
 'n'

	)

320 
	#TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_3
 'o'

	)

321 
	#TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_4
 'b'

	)

322 
	#TC_IMPL_TC_B⁄obo_M⁄ikîExãndî_5
 'o'

	)

323 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


328 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikîExãndî_°ru˘
;

329 
	#TC_B⁄obo_M⁄ikîExãndî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikîExãndî_°ru˘
)

	)

332 #i‡!
deföed
(
_B⁄obo_St‹ageInfoFõlds_deföed
)

333 
	#_B⁄obo_St‹ageInfoFõlds_deföed
 1

	)

334 
CORBA_l⁄g
 
	tB⁄obo_St‹ageInfoFõlds
;

335 
	#B⁄obo_St‹ageInfoFõlds_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

336 
	#B⁄obo_St‹ageInfoFõlds_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

337 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_0
)

338 
	#TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_0
 'B'

	)

339 
	#TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_1
 'o'

	)

340 
	#TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_2
 'n'

	)

341 
	#TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_3
 'o'

	)

342 
	#TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_4
 'b'

	)

343 
	#TC_IMPL_TC_B⁄obo_St‹ageInfoFõlds_5
 'o'

	)

344 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


349 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹ageInfoFõlds_°ru˘
;

350 
	#TC_B⁄obo_St‹ageInfoFõlds
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹ageInfoFõlds_°ru˘
)

	)

352 
	#B⁄obo_St‹ageInfoFõlds__Æloc
(Ë((
B⁄obo_St‹ageInfoFõlds
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

353 
	#B⁄obo_St‹ageInfoFõlds__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

355 #i‚de‡
B⁄obo_FIELD_CONTENT_TYPE


356 
	#B⁄obo_FIELD_CONTENT_TYPE
 1

	)

359 #i‚de‡
B⁄obo_FIELD_SIZE


360 
	#B⁄obo_FIELD_SIZE
 2

	)

363 #i‚de‡
B⁄obo_FIELD_TYPE


364 
	#B⁄obo_FIELD_TYPE
 4

	)

367 #i‡!
deföed
(
_B⁄obo_C⁄ã¡Ty≥_deföed
)

368 
	#_B⁄obo_C⁄ã¡Ty≥_deföed
 1

	)

369 
CORBA_°rög
 
	tB⁄obo_C⁄ã¡Ty≥
;

370 
	#B⁄obo_C⁄ã¡Ty≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

371 
	#B⁄obo_C⁄ã¡Ty≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

372 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_0
)

373 
	#TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_0
 'B'

	)

374 
	#TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_1
 'o'

	)

375 
	#TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_2
 'n'

	)

376 
	#TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_3
 'o'

	)

377 
	#TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_4
 'b'

	)

378 
	#TC_IMPL_TC_B⁄obo_C⁄ã¡Ty≥_5
 'o'

	)

379 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


384 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄ã¡Ty≥_°ru˘
;

385 
	#TC_B⁄obo_C⁄ã¡Ty≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄ã¡Ty≥_°ru˘
)

	)

387 
	#B⁄obo_C⁄ã¡Ty≥__Æloc
(Ë((
B⁄obo_C⁄ã¡Ty≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

388 
	#B⁄obo_C⁄ã¡Ty≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

390 #i‡!
deföed
(
_B⁄obo_St‹ageTy≥_deföed
)

391 
	#_B⁄obo_St‹ageTy≥_deföed
 1

	)

393 
	gB⁄obo_STORAGE_TYPE_REGULAR
,

394 
	gB⁄obo_STORAGE_TYPE_DIRECTORY


395 } 
	tB⁄obo_St‹ageTy≥
;

396 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹ageTy≥_0
)

397 
	#TC_IMPL_TC_B⁄obo_St‹ageTy≥_0
 'B'

	)

398 
	#TC_IMPL_TC_B⁄obo_St‹ageTy≥_1
 'o'

	)

399 
	#TC_IMPL_TC_B⁄obo_St‹ageTy≥_2
 'n'

	)

400 
	#TC_IMPL_TC_B⁄obo_St‹ageTy≥_3
 'o'

	)

401 
	#TC_IMPL_TC_B⁄obo_St‹ageTy≥_4
 'b'

	)

402 
	#TC_IMPL_TC_B⁄obo_St‹ageTy≥_5
 'o'

	)

403 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


408 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹ageTy≥_°ru˘
;

409 
	#TC_B⁄obo_St‹ageTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹ageTy≥_°ru˘
)

	)

412 #i‡!
deföed
(
_B⁄obo_St‹ageInfo_deföed
)

413 
	#_B⁄obo_St‹ageInfo_deföed
 1

	)

414 
B⁄obo_St‹ageInfo_ty≥
 
	tB⁄obo_St‹ageInfo
;

415 
	sB⁄obo_St‹ageInfo_ty≥
 {

416 
CORBA_°rög
 
	g«me
;

417 
B⁄obo_St‹ageTy≥
 
	gty≥
;

418 
B⁄obo_C⁄ã¡Ty≥
 
	gc⁄ã¡_ty≥
;

419 
CORBA_l⁄g
 
	gsize
;

422 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹ageInfo_0
)

423 
	#TC_IMPL_TC_B⁄obo_St‹ageInfo_0
 'B'

	)

424 
	#TC_IMPL_TC_B⁄obo_St‹ageInfo_1
 'o'

	)

425 
	#TC_IMPL_TC_B⁄obo_St‹ageInfo_2
 'n'

	)

426 
	#TC_IMPL_TC_B⁄obo_St‹ageInfo_3
 'o'

	)

427 
	#TC_IMPL_TC_B⁄obo_St‹ageInfo_4
 'b'

	)

428 
	#TC_IMPL_TC_B⁄obo_St‹ageInfo_5
 'o'

	)

429 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


434 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹ageInfo_°ru˘
;

435 
	#TC_B⁄obo_St‹ageInfo
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹ageInfo_°ru˘
)

	)

437 
	#B⁄obo_St‹ageInfo__Æloc
(Ë((
B⁄obo_St‹ageInfo
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹ageInfo
))

	)

438 
	#B⁄obo_St‹ageInfo__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹ageInfo
,(m),(d))

	)

440 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Såóm
Ë&& !deföed(
_B⁄obo_Såóm_deföed
)

441 
	#ORBIT_DECL_B⁄obo_Såóm
 1

	)

442 
	#_B⁄obo_Såóm_deföed
 1

	)

443 
	#B⁄obo_Såóm__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

444 
CORBA_Obje˘
 
	tB⁄obo_Såóm
;

445 
CORBA_unsig√d_l⁄g
 
B⁄obo_Såóm__˛assid
;

446 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Såóm_0
)

447 
	#TC_IMPL_TC_B⁄obo_Såóm_0
 'B'

	)

448 
	#TC_IMPL_TC_B⁄obo_Såóm_1
 'o'

	)

449 
	#TC_IMPL_TC_B⁄obo_Såóm_2
 'n'

	)

450 
	#TC_IMPL_TC_B⁄obo_Såóm_3
 'o'

	)

451 
	#TC_IMPL_TC_B⁄obo_Såóm_4
 'b'

	)

452 
	#TC_IMPL_TC_B⁄obo_Såóm_5
 'o'

	)

453 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


458 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Såóm_°ru˘
;

459 
	#TC_B⁄obo_Såóm
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Såóm_°ru˘
)

	)

462 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

463 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

464 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'B'

	)

465 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

466 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'n'

	)

467 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 'o'

	)

468 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'b'

	)

469 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'o'

	)

470 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

471 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

472 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

474 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

475 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'B'

	)

476 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

477 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'n'

	)

478 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 'o'

	)

479 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'b'

	)

480 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'o'

	)

481 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


486 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

487 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

489 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

490 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

491 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

492 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

494 #i‡!
deföed
(
_B⁄obo_Såóm_iobuf_deföed
)

495 
	#_B⁄obo_Såóm_iobuf_deföed
 1

	)

496 
CORBA_£quí˚_CORBA_o˘ë
 
	tB⁄obo_Såóm_iobuf
;

497 
	#B⁄obo_Såóm_iobuf_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

498 
	#B⁄obo_Såóm_iobuf_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

499 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Såóm_iobuf_0
)

500 
	#TC_IMPL_TC_B⁄obo_Såóm_iobuf_0
 'B'

	)

501 
	#TC_IMPL_TC_B⁄obo_Såóm_iobuf_1
 'o'

	)

502 
	#TC_IMPL_TC_B⁄obo_Såóm_iobuf_2
 'n'

	)

503 
	#TC_IMPL_TC_B⁄obo_Såóm_iobuf_3
 'o'

	)

504 
	#TC_IMPL_TC_B⁄obo_Såóm_iobuf_4
 'b'

	)

505 
	#TC_IMPL_TC_B⁄obo_Såóm_iobuf_5
 'o'

	)

506 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


511 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Såóm_iobuf_°ru˘
;

512 
	#TC_B⁄obo_Såóm_iobuf
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Såóm_iobuf_°ru˘
)

	)

514 
	#B⁄obo_Såóm_iobuf__Æloc
(Ë((
B⁄obo_Såóm_iobuf
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

515 
	#B⁄obo_Såóm_iobuf__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

516 
	#B⁄obo_Såóm_iobuf_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

518 #unde‡
ex_B⁄obo_Såóm_NoPîmissi⁄


519 
	#ex_B⁄obo_Såóm_NoPîmissi⁄
 "IDL:B⁄obo/Såóm/NoPîmissi⁄:1.0"

	)

520 #i‡!
deföed
(
_B⁄obo_Såóm_NoPîmissi⁄_deföed
)

521 
	#_B⁄obo_Såóm_NoPîmissi⁄_deföed
 1

	)

522 
B⁄obo_Såóm_NoPîmissi⁄_ty≥
 
	tB⁄obo_Såóm_NoPîmissi⁄
;

523 
	sB⁄obo_Såóm_NoPîmissi⁄_ty≥
 {

524 
	gdummy
;

527 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_0
)

528 
	#TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_0
 'B'

	)

529 
	#TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_1
 'o'

	)

530 
	#TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_2
 'n'

	)

531 
	#TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_3
 'o'

	)

532 
	#TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_4
 'b'

	)

533 
	#TC_IMPL_TC_B⁄obo_Såóm_NoPîmissi⁄_5
 'o'

	)

534 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


539 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Såóm_NoPîmissi⁄_°ru˘
;

540 
	#TC_B⁄obo_Såóm_NoPîmissi⁄
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Såóm_NoPîmissi⁄_°ru˘
)

	)

542 
	#B⁄obo_Såóm_NoPîmissi⁄__Æloc
(Ë((
B⁄obo_Såóm_NoPîmissi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Såóm_NoPîmissi⁄
))

	)

543 
	#B⁄obo_Såóm_NoPîmissi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Såóm_NoPîmissi⁄
,(m),(d))

	)

545 #unde‡
ex_B⁄obo_Såóm_NŸSuµ‹ãd


546 
	#ex_B⁄obo_Såóm_NŸSuµ‹ãd
 "IDL:B⁄obo/Såóm/NŸSuµ‹ãd:1.0"

	)

547 #i‡!
deföed
(
_B⁄obo_Såóm_NŸSuµ‹ãd_deföed
)

548 
	#_B⁄obo_Såóm_NŸSuµ‹ãd_deföed
 1

	)

549 
B⁄obo_Såóm_NŸSuµ‹ãd_ty≥
 
	tB⁄obo_Såóm_NŸSuµ‹ãd
;

550 
	sB⁄obo_Såóm_NŸSuµ‹ãd_ty≥
 {

551 
	gdummy
;

554 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_0
)

555 
	#TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_0
 'B'

	)

556 
	#TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_1
 'o'

	)

557 
	#TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_2
 'n'

	)

558 
	#TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_3
 'o'

	)

559 
	#TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_4
 'b'

	)

560 
	#TC_IMPL_TC_B⁄obo_Såóm_NŸSuµ‹ãd_5
 'o'

	)

561 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


566 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Såóm_NŸSuµ‹ãd_°ru˘
;

567 
	#TC_B⁄obo_Såóm_NŸSuµ‹ãd
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Såóm_NŸSuµ‹ãd_°ru˘
)

	)

569 
	#B⁄obo_Såóm_NŸSuµ‹ãd__Æloc
(Ë((
B⁄obo_Såóm_NŸSuµ‹ãd
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Såóm_NŸSuµ‹ãd
))

	)

570 
	#B⁄obo_Såóm_NŸSuµ‹ãd__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Såóm_NŸSuµ‹ãd
,(m),(d))

	)

572 #unde‡
ex_B⁄obo_Såóm_IOEº‹


573 
	#ex_B⁄obo_Såóm_IOEº‹
 "IDL:B⁄obo/Såóm/IOEº‹:1.0"

	)

574 #i‡!
deföed
(
_B⁄obo_Såóm_IOEº‹_deföed
)

575 
	#_B⁄obo_Såóm_IOEº‹_deföed
 1

	)

576 
B⁄obo_Såóm_IOEº‹_ty≥
 
	tB⁄obo_Såóm_IOEº‹
;

577 
	sB⁄obo_Såóm_IOEº‹_ty≥
 {

578 
	gdummy
;

581 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_0
)

582 
	#TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_0
 'B'

	)

583 
	#TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_1
 'o'

	)

584 
	#TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_2
 'n'

	)

585 
	#TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_3
 'o'

	)

586 
	#TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_4
 'b'

	)

587 
	#TC_IMPL_TC_B⁄obo_Såóm_IOEº‹_5
 'o'

	)

588 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


593 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Såóm_IOEº‹_°ru˘
;

594 
	#TC_B⁄obo_Såóm_IOEº‹
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Såóm_IOEº‹_°ru˘
)

	)

596 
	#B⁄obo_Såóm_IOEº‹__Æloc
(Ë((
B⁄obo_Såóm_IOEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Såóm_IOEº‹
))

	)

597 
	#B⁄obo_Såóm_IOEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Såóm_IOEº‹
,(m),(d))

	)

599 #i‡!
deföed
(
_B⁄obo_Såóm_SìkTy≥_deföed
)

600 
	#_B⁄obo_Såóm_SìkTy≥_deföed
 1

	)

602 
	gB⁄obo_Såóm_SìkSë
,

603 
	gB⁄obo_Såóm_SìkCur
,

604 
	gB⁄obo_Såóm_SìkEnd


605 } 
	tB⁄obo_Såóm_SìkTy≥
;

606 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_0
)

607 
	#TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_0
 'B'

	)

608 
	#TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_1
 'o'

	)

609 
	#TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_2
 'n'

	)

610 
	#TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_3
 'o'

	)

611 
	#TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_4
 'b'

	)

612 
	#TC_IMPL_TC_B⁄obo_Såóm_SìkTy≥_5
 'o'

	)

613 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


618 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Såóm_SìkTy≥_°ru˘
;

619 
	#TC_B⁄obo_Såóm_SìkTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Såóm_SìkTy≥_°ru˘
)

	)

622 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_St‹age
Ë&& !deföed(
_B⁄obo_St‹age_deföed
)

623 
	#ORBIT_DECL_B⁄obo_St‹age
 1

	)

624 
	#_B⁄obo_St‹age_deföed
 1

	)

625 
	#B⁄obo_St‹age__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

626 
CORBA_Obje˘
 
	tB⁄obo_St‹age
;

627 
CORBA_unsig√d_l⁄g
 
B⁄obo_St‹age__˛assid
;

628 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_0
)

629 
	#TC_IMPL_TC_B⁄obo_St‹age_0
 'B'

	)

630 
	#TC_IMPL_TC_B⁄obo_St‹age_1
 'o'

	)

631 
	#TC_IMPL_TC_B⁄obo_St‹age_2
 'n'

	)

632 
	#TC_IMPL_TC_B⁄obo_St‹age_3
 'o'

	)

633 
	#TC_IMPL_TC_B⁄obo_St‹age_4
 'b'

	)

634 
	#TC_IMPL_TC_B⁄obo_St‹age_5
 'o'

	)

635 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


640 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_°ru˘
;

641 
	#TC_B⁄obo_St‹age
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_°ru˘
)

	)

644 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_St‹ageInfo
)

645 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_St‹ageInfo
 1

	)

646 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_St‹ageInfo_0
 'B'

	)

647 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_St‹ageInfo_1
 'o'

	)

648 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_St‹ageInfo_2
 'n'

	)

649 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_St‹ageInfo_3
 'o'

	)

650 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_St‹ageInfo_4
 'b'

	)

651 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_St‹ageInfo_5
 'o'

	)

652 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_St‹ageInfo_deföed
)

653 
	#_CORBA_£quí˚_B⁄obo_St‹ageInfo_deföed
 1

	)

654 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_St‹ageInfo
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_St‹ageInfo
;

656 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_0
)

657 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_0
 'B'

	)

658 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_1
 'o'

	)

659 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_2
 'n'

	)

660 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_3
 'o'

	)

661 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_4
 'b'

	)

662 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_5
 'o'

	)

663 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


668 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_°ru˘
;

669 
	#TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo_°ru˘
)

	)

671 
	#CORBA_£quí˚_B⁄obo_St‹ageInfo__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_St‹ageInfo
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
))

	)

672 
	#CORBA_£quí˚_B⁄obo_St‹ageInfo__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
,(m),(d))

	)

673 
	#CORBA_£quí˚_B⁄obo_St‹ageInfo_Ælocbuf
(
l
Ë((
B⁄obo_St‹ageInfo
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
, (l)))

	)

674 
	#CORBA_£quí˚_B⁄obo_St‹ageInfo_Ælocbuf
(
l
Ë((
B⁄obo_St‹ageInfo
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
, (l)))

	)

676 #i‡!
deföed
(
_B⁄obo_St‹age_Dúe˘‹yLi°_deföed
)

677 
	#_B⁄obo_St‹age_Dúe˘‹yLi°_deföed
 1

	)

678 
CORBA_£quí˚_B⁄obo_St‹ageInfo
 
	tB⁄obo_St‹age_Dúe˘‹yLi°
;

679 
	#B⁄obo_St‹age_Dúe˘‹yLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_St‹ageInfo_m¨shÆ
((x),(y),(z))

	)

680 
	#B⁄obo_St‹age_Dúe˘‹yLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_St‹ageInfo_dem¨shÆ
((x),(y),(z),(i))

	)

681 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_0
)

682 
	#TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_0
 'B'

	)

683 
	#TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_1
 'o'

	)

684 
	#TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_2
 'n'

	)

685 
	#TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_3
 'o'

	)

686 
	#TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_4
 'b'

	)

687 
	#TC_IMPL_TC_B⁄obo_St‹age_Dúe˘‹yLi°_5
 'o'

	)

688 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


693 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_Dúe˘‹yLi°_°ru˘
;

694 
	#TC_B⁄obo_St‹age_Dúe˘‹yLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_Dúe˘‹yLi°_°ru˘
)

	)

696 
	#B⁄obo_St‹age_Dúe˘‹yLi°__Æloc
(Ë((
B⁄obo_St‹age_Dúe˘‹yLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
))

	)

697 
	#B⁄obo_St‹age_Dúe˘‹yLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
,(m),(d))

	)

698 
	#B⁄obo_St‹age_Dúe˘‹yLi°_Ælocbuf
(
l
Ë((
B⁄obo_St‹ageInfo
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_St‹ageInfo
, (l)))

	)

700 #i‡!
deföed
(
_B⁄obo_St‹age_O≥nMode_deföed
)

701 
	#_B⁄obo_St‹age_O≥nMode_deföed
 1

	)

702 
CORBA_l⁄g
 
	tB⁄obo_St‹age_O≥nMode
;

703 
	#B⁄obo_St‹age_O≥nMode_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

704 
	#B⁄obo_St‹age_O≥nMode_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

705 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_0
)

706 
	#TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_0
 'B'

	)

707 
	#TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_1
 'o'

	)

708 
	#TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_2
 'n'

	)

709 
	#TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_3
 'o'

	)

710 
	#TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_4
 'b'

	)

711 
	#TC_IMPL_TC_B⁄obo_St‹age_O≥nMode_5
 'o'

	)

712 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


717 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_O≥nMode_°ru˘
;

718 
	#TC_B⁄obo_St‹age_O≥nMode
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_O≥nMode_°ru˘
)

	)

720 
	#B⁄obo_St‹age_O≥nMode__Æloc
(Ë((
B⁄obo_St‹age_O≥nMode
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

721 
	#B⁄obo_St‹age_O≥nMode__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

723 #i‚de‡
B⁄obo_St‹age_READ


724 
	#B⁄obo_St‹age_READ
 1

	)

727 #i‚de‡
B⁄obo_St‹age_WRITE


728 
	#B⁄obo_St‹age_WRITE
 2

	)

731 #i‚de‡
B⁄obo_St‹age_CREATE


732 
	#B⁄obo_St‹age_CREATE
 4

	)

735 #i‚de‡
B⁄obo_St‹age_FAILIFEXIST


736 
	#B⁄obo_St‹age_FAILIFEXIST
 8

	)

739 #i‚de‡
B⁄obo_St‹age_COMPRESSED


740 
	#B⁄obo_St‹age_COMPRESSED
 16

	)

743 #i‚de‡
B⁄obo_St‹age_TRANSACTED


744 
	#B⁄obo_St‹age_TRANSACTED
 32

	)

747 #unde‡
ex_B⁄obo_St‹age_IOEº‹


748 
	#ex_B⁄obo_St‹age_IOEº‹
 "IDL:B⁄obo/St‹age/IOEº‹:1.0"

	)

749 #i‡!
deföed
(
_B⁄obo_St‹age_IOEº‹_deföed
)

750 
	#_B⁄obo_St‹age_IOEº‹_deföed
 1

	)

751 
B⁄obo_St‹age_IOEº‹_ty≥
 
	tB⁄obo_St‹age_IOEº‹
;

752 
	sB⁄obo_St‹age_IOEº‹_ty≥
 {

753 
	gdummy
;

756 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_0
)

757 
	#TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_0
 'B'

	)

758 
	#TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_1
 'o'

	)

759 
	#TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_2
 'n'

	)

760 
	#TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_3
 'o'

	)

761 
	#TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_4
 'b'

	)

762 
	#TC_IMPL_TC_B⁄obo_St‹age_IOEº‹_5
 'o'

	)

763 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


768 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_IOEº‹_°ru˘
;

769 
	#TC_B⁄obo_St‹age_IOEº‹
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_IOEº‹_°ru˘
)

	)

771 
	#B⁄obo_St‹age_IOEº‹__Æloc
(Ë((
B⁄obo_St‹age_IOEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_IOEº‹
))

	)

772 
	#B⁄obo_St‹age_IOEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_IOEº‹
,(m),(d))

	)

774 #unde‡
ex_B⁄obo_St‹age_NameExi°s


775 
	#ex_B⁄obo_St‹age_NameExi°s
 "IDL:B⁄obo/St‹age/NameExi°s:1.0"

	)

776 #i‡!
deföed
(
_B⁄obo_St‹age_NameExi°s_deföed
)

777 
	#_B⁄obo_St‹age_NameExi°s_deföed
 1

	)

778 
B⁄obo_St‹age_NameExi°s_ty≥
 
	tB⁄obo_St‹age_NameExi°s
;

779 
	sB⁄obo_St‹age_NameExi°s_ty≥
 {

780 
	gdummy
;

783 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_0
)

784 
	#TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_0
 'B'

	)

785 
	#TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_1
 'o'

	)

786 
	#TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_2
 'n'

	)

787 
	#TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_3
 'o'

	)

788 
	#TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_4
 'b'

	)

789 
	#TC_IMPL_TC_B⁄obo_St‹age_NameExi°s_5
 'o'

	)

790 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


795 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NameExi°s_°ru˘
;

796 
	#TC_B⁄obo_St‹age_NameExi°s
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NameExi°s_°ru˘
)

	)

798 
	#B⁄obo_St‹age_NameExi°s__Æloc
(Ë((
B⁄obo_St‹age_NameExi°s
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NameExi°s
))

	)

799 
	#B⁄obo_St‹age_NameExi°s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NameExi°s
,(m),(d))

	)

801 #unde‡
ex_B⁄obo_St‹age_NŸFound


802 
	#ex_B⁄obo_St‹age_NŸFound
 "IDL:B⁄obo/St‹age/NŸFound:1.0"

	)

803 #i‡!
deföed
(
_B⁄obo_St‹age_NŸFound_deföed
)

804 
	#_B⁄obo_St‹age_NŸFound_deföed
 1

	)

805 
B⁄obo_St‹age_NŸFound_ty≥
 
	tB⁄obo_St‹age_NŸFound
;

806 
	sB⁄obo_St‹age_NŸFound_ty≥
 {

807 
	gdummy
;

810 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NŸFound_0
)

811 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸFound_0
 'B'

	)

812 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸFound_1
 'o'

	)

813 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸFound_2
 'n'

	)

814 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸFound_3
 'o'

	)

815 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸFound_4
 'b'

	)

816 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸFound_5
 'o'

	)

817 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


822 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NŸFound_°ru˘
;

823 
	#TC_B⁄obo_St‹age_NŸFound
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NŸFound_°ru˘
)

	)

825 
	#B⁄obo_St‹age_NŸFound__Æloc
(Ë((
B⁄obo_St‹age_NŸFound
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NŸFound
))

	)

826 
	#B⁄obo_St‹age_NŸFound__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NŸFound
,(m),(d))

	)

828 #unde‡
ex_B⁄obo_St‹age_NoPîmissi⁄


829 
	#ex_B⁄obo_St‹age_NoPîmissi⁄
 "IDL:B⁄obo/St‹age/NoPîmissi⁄:1.0"

	)

830 #i‡!
deföed
(
_B⁄obo_St‹age_NoPîmissi⁄_deföed
)

831 
	#_B⁄obo_St‹age_NoPîmissi⁄_deföed
 1

	)

832 
B⁄obo_St‹age_NoPîmissi⁄_ty≥
 
	tB⁄obo_St‹age_NoPîmissi⁄
;

833 
	sB⁄obo_St‹age_NoPîmissi⁄_ty≥
 {

834 
	gdummy
;

837 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_0
)

838 
	#TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_0
 'B'

	)

839 
	#TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_1
 'o'

	)

840 
	#TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_2
 'n'

	)

841 
	#TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_3
 'o'

	)

842 
	#TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_4
 'b'

	)

843 
	#TC_IMPL_TC_B⁄obo_St‹age_NoPîmissi⁄_5
 'o'

	)

844 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


849 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NoPîmissi⁄_°ru˘
;

850 
	#TC_B⁄obo_St‹age_NoPîmissi⁄
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NoPîmissi⁄_°ru˘
)

	)

852 
	#B⁄obo_St‹age_NoPîmissi⁄__Æloc
(Ë((
B⁄obo_St‹age_NoPîmissi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NoPîmissi⁄
))

	)

853 
	#B⁄obo_St‹age_NoPîmissi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NoPîmissi⁄
,(m),(d))

	)

855 #unde‡
ex_B⁄obo_St‹age_NŸSuµ‹ãd


856 
	#ex_B⁄obo_St‹age_NŸSuµ‹ãd
 "IDL:B⁄obo/St‹age/NŸSuµ‹ãd:1.0"

	)

857 #i‡!
deföed
(
_B⁄obo_St‹age_NŸSuµ‹ãd_deföed
)

858 
	#_B⁄obo_St‹age_NŸSuµ‹ãd_deföed
 1

	)

859 
B⁄obo_St‹age_NŸSuµ‹ãd_ty≥
 
	tB⁄obo_St‹age_NŸSuµ‹ãd
;

860 
	sB⁄obo_St‹age_NŸSuµ‹ãd_ty≥
 {

861 
	gdummy
;

864 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_0
)

865 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_0
 'B'

	)

866 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_1
 'o'

	)

867 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_2
 'n'

	)

868 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_3
 'o'

	)

869 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_4
 'b'

	)

870 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSuµ‹ãd_5
 'o'

	)

871 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


876 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NŸSuµ‹ãd_°ru˘
;

877 
	#TC_B⁄obo_St‹age_NŸSuµ‹ãd
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NŸSuµ‹ãd_°ru˘
)

	)

879 
	#B⁄obo_St‹age_NŸSuµ‹ãd__Æloc
(Ë((
B⁄obo_St‹age_NŸSuµ‹ãd
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NŸSuµ‹ãd
))

	)

880 
	#B⁄obo_St‹age_NŸSuµ‹ãd__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NŸSuµ‹ãd
,(m),(d))

	)

882 #unde‡
ex_B⁄obo_St‹age_NŸSåóm


883 
	#ex_B⁄obo_St‹age_NŸSåóm
 "IDL:B⁄obo/St‹age/NŸSåóm:1.0"

	)

884 #i‡!
deföed
(
_B⁄obo_St‹age_NŸSåóm_deföed
)

885 
	#_B⁄obo_St‹age_NŸSåóm_deföed
 1

	)

886 
B⁄obo_St‹age_NŸSåóm_ty≥
 
	tB⁄obo_St‹age_NŸSåóm
;

887 
	sB⁄obo_St‹age_NŸSåóm_ty≥
 {

888 
	gdummy
;

891 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_0
)

892 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_0
 'B'

	)

893 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_1
 'o'

	)

894 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_2
 'n'

	)

895 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_3
 'o'

	)

896 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_4
 'b'

	)

897 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSåóm_5
 'o'

	)

898 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


903 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NŸSåóm_°ru˘
;

904 
	#TC_B⁄obo_St‹age_NŸSåóm
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NŸSåóm_°ru˘
)

	)

906 
	#B⁄obo_St‹age_NŸSåóm__Æloc
(Ë((
B⁄obo_St‹age_NŸSåóm
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NŸSåóm
))

	)

907 
	#B⁄obo_St‹age_NŸSåóm__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NŸSåóm
,(m),(d))

	)

909 #unde‡
ex_B⁄obo_St‹age_NŸSt‹age


910 
	#ex_B⁄obo_St‹age_NŸSt‹age
 "IDL:B⁄obo/St‹age/NŸSt‹age:1.0"

	)

911 #i‡!
deföed
(
_B⁄obo_St‹age_NŸSt‹age_deföed
)

912 
	#_B⁄obo_St‹age_NŸSt‹age_deföed
 1

	)

913 
B⁄obo_St‹age_NŸSt‹age_ty≥
 
	tB⁄obo_St‹age_NŸSt‹age
;

914 
	sB⁄obo_St‹age_NŸSt‹age_ty≥
 {

915 
	gdummy
;

918 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_0
)

919 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_0
 'B'

	)

920 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_1
 'o'

	)

921 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_2
 'n'

	)

922 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_3
 'o'

	)

923 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_4
 'b'

	)

924 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸSt‹age_5
 'o'

	)

925 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


930 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NŸSt‹age_°ru˘
;

931 
	#TC_B⁄obo_St‹age_NŸSt‹age
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NŸSt‹age_°ru˘
)

	)

933 
	#B⁄obo_St‹age_NŸSt‹age__Æloc
(Ë((
B⁄obo_St‹age_NŸSt‹age
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NŸSt‹age
))

	)

934 
	#B⁄obo_St‹age_NŸSt‹age__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NŸSt‹age
,(m),(d))

	)

936 #unde‡
ex_B⁄obo_St‹age_NŸEm±y


937 
	#ex_B⁄obo_St‹age_NŸEm±y
 "IDL:B⁄obo/St‹age/NŸEm±y:1.0"

	)

938 #i‡!
deföed
(
_B⁄obo_St‹age_NŸEm±y_deföed
)

939 
	#_B⁄obo_St‹age_NŸEm±y_deföed
 1

	)

940 
B⁄obo_St‹age_NŸEm±y_ty≥
 
	tB⁄obo_St‹age_NŸEm±y
;

941 
	sB⁄obo_St‹age_NŸEm±y_ty≥
 {

942 
	gdummy
;

945 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_0
)

946 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_0
 'B'

	)

947 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_1
 'o'

	)

948 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_2
 'n'

	)

949 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_3
 'o'

	)

950 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_4
 'b'

	)

951 
	#TC_IMPL_TC_B⁄obo_St‹age_NŸEm±y_5
 'o'

	)

952 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


957 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_St‹age_NŸEm±y_°ru˘
;

958 
	#TC_B⁄obo_St‹age_NŸEm±y
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_St‹age_NŸEm±y_°ru˘
)

	)

960 
	#B⁄obo_St‹age_NŸEm±y__Æloc
(Ë((
B⁄obo_St‹age_NŸEm±y
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_St‹age_NŸEm±y
))

	)

961 
	#B⁄obo_St‹age_NŸEm±y__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_St‹age_NŸEm±y
,(m),(d))

	)

963 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_M⁄ikîC⁄ãxt
Ë&& !deföed(
_B⁄obo_M⁄ikîC⁄ãxt_deföed
)

964 
	#ORBIT_DECL_B⁄obo_M⁄ikîC⁄ãxt
 1

	)

965 
	#_B⁄obo_M⁄ikîC⁄ãxt_deföed
 1

	)

966 
	#B⁄obo_M⁄ikîC⁄ãxt__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

967 
CORBA_Obje˘
 
	tB⁄obo_M⁄ikîC⁄ãxt
;

968 
CORBA_unsig√d_l⁄g
 
B⁄obo_M⁄ikîC⁄ãxt__˛assid
;

969 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_0
)

970 
	#TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_0
 'B'

	)

971 
	#TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_1
 'o'

	)

972 
	#TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_2
 'n'

	)

973 
	#TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_3
 'o'

	)

974 
	#TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_4
 'b'

	)

975 
	#TC_IMPL_TC_B⁄obo_M⁄ikîC⁄ãxt_5
 'o'

	)

976 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


981 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_M⁄ikîC⁄ãxt_°ru˘
;

982 
	#TC_B⁄obo_M⁄ikîC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_M⁄ikîC⁄ãxt_°ru˘
)

	)

985 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Ru¬ögC⁄ãxt
Ë&& !deföed(
_B⁄obo_Ru¬ögC⁄ãxt_deföed
)

986 
	#ORBIT_DECL_B⁄obo_Ru¬ögC⁄ãxt
 1

	)

987 
	#_B⁄obo_Ru¬ögC⁄ãxt_deföed
 1

	)

988 
	#B⁄obo_Ru¬ögC⁄ãxt__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

989 
CORBA_Obje˘
 
	tB⁄obo_Ru¬ögC⁄ãxt
;

990 
CORBA_unsig√d_l⁄g
 
B⁄obo_Ru¬ögC⁄ãxt__˛assid
;

991 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_0
)

992 
	#TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_0
 'B'

	)

993 
	#TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_1
 'o'

	)

994 
	#TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_2
 'n'

	)

995 
	#TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_3
 'o'

	)

996 
	#TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_4
 'b'

	)

997 
	#TC_IMPL_TC_B⁄obo_Ru¬ögC⁄ãxt_5
 'o'

	)

998 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1003 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Ru¬ögC⁄ãxt_°ru˘
;

1004 
	#TC_B⁄obo_Ru¬ögC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Ru¬ögC⁄ãxt_°ru˘
)

	)

1007 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pîsi°
Ë&& !deföed(
_B⁄obo_Pîsi°_deföed
)

1008 
	#ORBIT_DECL_B⁄obo_Pîsi°
 1

	)

1009 
	#_B⁄obo_Pîsi°_deföed
 1

	)

1010 
	#B⁄obo_Pîsi°__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1011 
CORBA_Obje˘
 
	tB⁄obo_Pîsi°
;

1012 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pîsi°__˛assid
;

1013 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_0
)

1014 
	#TC_IMPL_TC_B⁄obo_Pîsi°_0
 'B'

	)

1015 
	#TC_IMPL_TC_B⁄obo_Pîsi°_1
 'o'

	)

1016 
	#TC_IMPL_TC_B⁄obo_Pîsi°_2
 'n'

	)

1017 
	#TC_IMPL_TC_B⁄obo_Pîsi°_3
 'o'

	)

1018 
	#TC_IMPL_TC_B⁄obo_Pîsi°_4
 'b'

	)

1019 
	#TC_IMPL_TC_B⁄obo_Pîsi°_5
 'o'

	)

1020 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1025 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_°ru˘
;

1026 
	#TC_B⁄obo_Pîsi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_°ru˘
)

	)

1029 #i‡!
deföed
(
_B⁄obo_Pîsi°_Sètus_deföed
)

1030 
	#_B⁄obo_Pîsi°_Sètus_deföed
 1

	)

1032 
	gB⁄obo_Pîsi°_SAVE_OK
,

1033 
	gB⁄obo_Pîsi°_SAVE_CANCEL
,

1034 
	gB⁄obo_Pîsi°_SAVE_FAILED


1035 } 
	tB⁄obo_Pîsi°_Sètus
;

1036 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_0
)

1037 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_0
 'B'

	)

1038 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_1
 'o'

	)

1039 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_2
 'n'

	)

1040 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_3
 'o'

	)

1041 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_4
 'b'

	)

1042 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Sètus_5
 'o'

	)

1043 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1048 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_Sètus_°ru˘
;

1049 
	#TC_B⁄obo_Pîsi°_Sètus
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_Sètus_°ru˘
)

	)

1052 #unde‡
ex_B⁄obo_Pîsi°_Wr⁄gD©aTy≥


1053 
	#ex_B⁄obo_Pîsi°_Wr⁄gD©aTy≥
 "IDL:B⁄obo/Pîsi°/Wr⁄gD©aTy≥:1.0"

	)

1054 #i‡!
deföed
(
_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_deföed
)

1055 
	#_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_deföed
 1

	)

1056 
B⁄obo_Pîsi°_Wr⁄gD©aTy≥_ty≥
 
	tB⁄obo_Pîsi°_Wr⁄gD©aTy≥
;

1057 
	sB⁄obo_Pîsi°_Wr⁄gD©aTy≥_ty≥
 {

1058 
	gdummy
;

1061 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_0
)

1062 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_0
 'B'

	)

1063 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_1
 'o'

	)

1064 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_2
 'n'

	)

1065 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_3
 'o'

	)

1066 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_4
 'b'

	)

1067 
	#TC_IMPL_TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_5
 'o'

	)

1068 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1073 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_°ru˘
;

1074 
	#TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥_°ru˘
)

	)

1076 
	#B⁄obo_Pîsi°_Wr⁄gD©aTy≥__Æloc
(Ë((
B⁄obo_Pîsi°_Wr⁄gD©aTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥
))

	)

1077 
	#B⁄obo_Pîsi°_Wr⁄gD©aTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pîsi°_Wr⁄gD©aTy≥
,(m),(d))

	)

1079 #unde‡
ex_B⁄obo_Pîsi°_FûeNŸFound


1080 
	#ex_B⁄obo_Pîsi°_FûeNŸFound
 "IDL:B⁄obo/Pîsi°/FûeNŸFound:1.0"

	)

1081 #i‡!
deföed
(
_B⁄obo_Pîsi°_FûeNŸFound_deföed
)

1082 
	#_B⁄obo_Pîsi°_FûeNŸFound_deföed
 1

	)

1083 
B⁄obo_Pîsi°_FûeNŸFound_ty≥
 
	tB⁄obo_Pîsi°_FûeNŸFound
;

1084 
	sB⁄obo_Pîsi°_FûeNŸFound_ty≥
 {

1085 
	gdummy
;

1088 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_0
)

1089 
	#TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_0
 'B'

	)

1090 
	#TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_1
 'o'

	)

1091 
	#TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_2
 'n'

	)

1092 
	#TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_3
 'o'

	)

1093 
	#TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_4
 'b'

	)

1094 
	#TC_IMPL_TC_B⁄obo_Pîsi°_FûeNŸFound_5
 'o'

	)

1095 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1100 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_FûeNŸFound_°ru˘
;

1101 
	#TC_B⁄obo_Pîsi°_FûeNŸFound
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_FûeNŸFound_°ru˘
)

	)

1103 
	#B⁄obo_Pîsi°_FûeNŸFound__Æloc
(Ë((
B⁄obo_Pîsi°_FûeNŸFound
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pîsi°_FûeNŸFound
))

	)

1104 
	#B⁄obo_Pîsi°_FûeNŸFound__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pîsi°_FûeNŸFound
,(m),(d))

	)

1106 #i‡!
deföed
(
_B⁄obo_Pîsi°_C⁄ã¡Ty≥_deföed
)

1107 
	#_B⁄obo_Pîsi°_C⁄ã¡Ty≥_deföed
 1

	)

1108 
CORBA_°rög
 
	tB⁄obo_Pîsi°_C⁄ã¡Ty≥
;

1109 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

1110 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

1111 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_0
)

1112 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_0
 'B'

	)

1113 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_1
 'o'

	)

1114 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_2
 'n'

	)

1115 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_3
 'o'

	)

1116 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_4
 'b'

	)

1117 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_5
 'o'

	)

1118 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1123 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_°ru˘
;

1124 
	#TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥_°ru˘
)

	)

1126 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥__Æloc
(Ë((
B⁄obo_Pîsi°_C⁄ã¡Ty≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

1127 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

1129 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

1130 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

1131 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

1132 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

1133 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

1134 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

1135 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

1136 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

1137 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

1138 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

1139 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

1141 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

1142 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

1143 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

1144 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

1145 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

1146 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

1147 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

1148 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1153 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

1154 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

1156 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

1157 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

1158 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

1159 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

1161 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
)

1162 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
 1

	)

1163 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_0
 'B'

	)

1164 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_1
 'o'

	)

1165 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_2
 'n'

	)

1166 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_3
 'o'

	)

1167 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_4
 'b'

	)

1168 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_5
 'o'

	)

1169 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_deföed
)

1170 
	#_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_deföed
 1

	)

1171 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
;

1173 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_0
)

1174 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_0
 'B'

	)

1175 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_1
 'o'

	)

1176 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_2
 'n'

	)

1177 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_3
 'o'

	)

1178 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_4
 'b'

	)

1179 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_5
 'o'

	)

1180 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1185 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_°ru˘
;

1186 
	#TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_°ru˘
)

	)

1188 
	#CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥__Æloc
 
CORBA_£quí˚_CORBA_°rög__Æloc


	)

1189 
	#CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥__‰ìkids
 
CORBA_£quí˚_CORBA_°rög__‰ìkids


	)

1190 
	#CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_Ælocbuf
 
CORBA_£quí˚_CORBA_°rög_Ælocbuf


	)

1191 
	#CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

1192 
	#CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

1194 #i‡!
deföed
(
_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_deföed
)

1195 
	#_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_deföed
 1

	)

1196 
CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
 
	tB⁄obo_Pîsi°_C⁄ã¡Ty≥Li°
;

1197 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_m¨shÆ
((x),(y),(z))

	)

1198 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥_dem¨shÆ
((x),(y),(z),(i))

	)

1199 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_0
)

1200 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_0
 'B'

	)

1201 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_1
 'o'

	)

1202 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_2
 'n'

	)

1203 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_3
 'o'

	)

1204 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_4
 'b'

	)

1205 
	#TC_IMPL_TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_5
 'o'

	)

1206 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1211 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_°ru˘
;

1212 
	#TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_°ru˘
)

	)

1214 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°__Æloc
(Ë((
B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
))

	)

1215 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
,(m),(d))

	)

1216 
	#B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°_Ælocbuf
(
l
Ë((
B⁄obo_Pîsi°_C⁄ã¡Ty≥
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Pîsi°_C⁄ã¡Ty≥
, (l)))

	)

1218 #i‡!
deföed
(
_B⁄obo_Pîsi°_IID_deföed
)

1219 
	#_B⁄obo_Pîsi°_IID_deföed
 1

	)

1220 
CORBA_°rög
 
	tB⁄obo_Pîsi°_IID
;

1221 
	#B⁄obo_Pîsi°_IID_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

1222 
	#B⁄obo_Pîsi°_IID_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

1223 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°_IID_0
)

1224 
	#TC_IMPL_TC_B⁄obo_Pîsi°_IID_0
 'B'

	)

1225 
	#TC_IMPL_TC_B⁄obo_Pîsi°_IID_1
 'o'

	)

1226 
	#TC_IMPL_TC_B⁄obo_Pîsi°_IID_2
 'n'

	)

1227 
	#TC_IMPL_TC_B⁄obo_Pîsi°_IID_3
 'o'

	)

1228 
	#TC_IMPL_TC_B⁄obo_Pîsi°_IID_4
 'b'

	)

1229 
	#TC_IMPL_TC_B⁄obo_Pîsi°_IID_5
 'o'

	)

1230 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1235 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°_IID_°ru˘
;

1236 
	#TC_B⁄obo_Pîsi°_IID
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°_IID_°ru˘
)

	)

1238 
	#B⁄obo_Pîsi°_IID__Æloc
(Ë((
B⁄obo_Pîsi°_IID
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

1239 
	#B⁄obo_Pîsi°_IID__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

1241 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pîsi°Fûe
Ë&& !deföed(
_B⁄obo_Pîsi°Fûe_deföed
)

1242 
	#ORBIT_DECL_B⁄obo_Pîsi°Fûe
 1

	)

1243 
	#_B⁄obo_Pîsi°Fûe_deföed
 1

	)

1244 
	#B⁄obo_Pîsi°Fûe__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1245 
CORBA_Obje˘
 
	tB⁄obo_Pîsi°Fûe
;

1246 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pîsi°Fûe__˛assid
;

1247 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°Fûe_0
)

1248 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_0
 'B'

	)

1249 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_1
 'o'

	)

1250 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_2
 'n'

	)

1251 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_3
 'o'

	)

1252 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_4
 'b'

	)

1253 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_5
 'o'

	)

1254 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1259 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°Fûe_°ru˘
;

1260 
	#TC_B⁄obo_Pîsi°Fûe
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°Fûe_°ru˘
)

	)

1263 #unde‡
ex_B⁄obo_Pîsi°Fûe_NoCuºítName


1264 
	#ex_B⁄obo_Pîsi°Fûe_NoCuºítName
 "IDL:B⁄obo/Pîsi°Fûe/NoCuºítName:1.0"

	)

1265 #i‡!
deföed
(
_B⁄obo_Pîsi°Fûe_NoCuºítName_deföed
)

1266 
	#_B⁄obo_Pîsi°Fûe_NoCuºítName_deföed
 1

	)

1267 
B⁄obo_Pîsi°Fûe_NoCuºítName_ty≥
 
	tB⁄obo_Pîsi°Fûe_NoCuºítName
;

1268 
	sB⁄obo_Pîsi°Fûe_NoCuºítName_ty≥
 {

1269 
CORBA_°rög
 
	gexãnsi⁄
;

1272 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_0
)

1273 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_0
 'B'

	)

1274 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_1
 'o'

	)

1275 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_2
 'n'

	)

1276 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_3
 'o'

	)

1277 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_4
 'b'

	)

1278 
	#TC_IMPL_TC_B⁄obo_Pîsi°Fûe_NoCuºítName_5
 'o'

	)

1279 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1284 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°Fûe_NoCuºítName_°ru˘
;

1285 
	#TC_B⁄obo_Pîsi°Fûe_NoCuºítName
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°Fûe_NoCuºítName_°ru˘
)

	)

1287 
	#B⁄obo_Pîsi°Fûe_NoCuºítName__Æloc
(Ë((
B⁄obo_Pîsi°Fûe_NoCuºítName
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pîsi°Fûe_NoCuºítName
))

	)

1288 
	#B⁄obo_Pîsi°Fûe_NoCuºítName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pîsi°Fûe_NoCuºítName
,(m),(d))

	)

1290 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pîsi°St‹age
Ë&& !deföed(
_B⁄obo_Pîsi°St‹age_deföed
)

1291 
	#ORBIT_DECL_B⁄obo_Pîsi°St‹age
 1

	)

1292 
	#_B⁄obo_Pîsi°St‹age_deföed
 1

	)

1293 
	#B⁄obo_Pîsi°St‹age__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1294 
CORBA_Obje˘
 
	tB⁄obo_Pîsi°St‹age
;

1295 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pîsi°St‹age__˛assid
;

1296 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°St‹age_0
)

1297 
	#TC_IMPL_TC_B⁄obo_Pîsi°St‹age_0
 'B'

	)

1298 
	#TC_IMPL_TC_B⁄obo_Pîsi°St‹age_1
 'o'

	)

1299 
	#TC_IMPL_TC_B⁄obo_Pîsi°St‹age_2
 'n'

	)

1300 
	#TC_IMPL_TC_B⁄obo_Pîsi°St‹age_3
 'o'

	)

1301 
	#TC_IMPL_TC_B⁄obo_Pîsi°St‹age_4
 'b'

	)

1302 
	#TC_IMPL_TC_B⁄obo_Pîsi°St‹age_5
 'o'

	)

1303 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1308 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°St‹age_°ru˘
;

1309 
	#TC_B⁄obo_Pîsi°St‹age
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°St‹age_°ru˘
)

	)

1312 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pîsi°Såóm
Ë&& !deföed(
_B⁄obo_Pîsi°Såóm_deföed
)

1313 
	#ORBIT_DECL_B⁄obo_Pîsi°Såóm
 1

	)

1314 
	#_B⁄obo_Pîsi°Såóm_deföed
 1

	)

1315 
	#B⁄obo_Pîsi°Såóm__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1316 
CORBA_Obje˘
 
	tB⁄obo_Pîsi°Såóm
;

1317 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pîsi°Såóm__˛assid
;

1318 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pîsi°Såóm_0
)

1319 
	#TC_IMPL_TC_B⁄obo_Pîsi°Såóm_0
 'B'

	)

1320 
	#TC_IMPL_TC_B⁄obo_Pîsi°Såóm_1
 'o'

	)

1321 
	#TC_IMPL_TC_B⁄obo_Pîsi°Såóm_2
 'n'

	)

1322 
	#TC_IMPL_TC_B⁄obo_Pîsi°Såóm_3
 'o'

	)

1323 
	#TC_IMPL_TC_B⁄obo_Pîsi°Såóm_4
 'b'

	)

1324 
	#TC_IMPL_TC_B⁄obo_Pîsi°Såóm_5
 'o'

	)

1325 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1330 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pîsi°Såóm_°ru˘
;

1331 
	#TC_B⁄obo_Pîsi°Såóm
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pîsi°Såóm_°ru˘
)

	)

1334 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Li°íî
Ë&& !deföed(
_B⁄obo_Li°íî_deföed
)

1335 
	#ORBIT_DECL_B⁄obo_Li°íî
 1

	)

1336 
	#_B⁄obo_Li°íî_deföed
 1

	)

1337 
	#B⁄obo_Li°íî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1338 
CORBA_Obje˘
 
	tB⁄obo_Li°íî
;

1339 
CORBA_unsig√d_l⁄g
 
B⁄obo_Li°íî__˛assid
;

1340 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Li°íî_0
)

1341 
	#TC_IMPL_TC_B⁄obo_Li°íî_0
 'B'

	)

1342 
	#TC_IMPL_TC_B⁄obo_Li°íî_1
 'o'

	)

1343 
	#TC_IMPL_TC_B⁄obo_Li°íî_2
 'n'

	)

1344 
	#TC_IMPL_TC_B⁄obo_Li°íî_3
 'o'

	)

1345 
	#TC_IMPL_TC_B⁄obo_Li°íî_4
 'b'

	)

1346 
	#TC_IMPL_TC_B⁄obo_Li°íî_5
 'o'

	)

1347 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1352 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Li°íî_°ru˘
;

1353 
	#TC_B⁄obo_Li°íî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Li°íî_°ru˘
)

	)

1356 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_EvítSour˚
Ë&& !deföed(
_B⁄obo_EvítSour˚_deföed
)

1357 
	#ORBIT_DECL_B⁄obo_EvítSour˚
 1

	)

1358 
	#_B⁄obo_EvítSour˚_deföed
 1

	)

1359 
	#B⁄obo_EvítSour˚__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1360 
CORBA_Obje˘
 
	tB⁄obo_EvítSour˚
;

1361 
CORBA_unsig√d_l⁄g
 
B⁄obo_EvítSour˚__˛assid
;

1362 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_EvítSour˚_0
)

1363 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_0
 'B'

	)

1364 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_1
 'o'

	)

1365 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_2
 'n'

	)

1366 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_3
 'o'

	)

1367 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_4
 'b'

	)

1368 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_5
 'o'

	)

1369 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1374 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_EvítSour˚_°ru˘
;

1375 
	#TC_B⁄obo_EvítSour˚
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_EvítSour˚_°ru˘
)

	)

1378 #unde‡
ex_B⁄obo_EvítSour˚_UnknownLi°íî


1379 
	#ex_B⁄obo_EvítSour˚_UnknownLi°íî
 "IDL:B⁄obo/EvítSour˚/UnknownLi°íî:1.0"

	)

1380 #i‡!
deföed
(
_B⁄obo_EvítSour˚_UnknownLi°íî_deföed
)

1381 
	#_B⁄obo_EvítSour˚_UnknownLi°íî_deföed
 1

	)

1382 
B⁄obo_EvítSour˚_UnknownLi°íî_ty≥
 
	tB⁄obo_EvítSour˚_UnknownLi°íî
;

1383 
	sB⁄obo_EvítSour˚_UnknownLi°íî_ty≥
 {

1384 
	gdummy
;

1387 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_0
)

1388 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_0
 'B'

	)

1389 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_1
 'o'

	)

1390 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_2
 'n'

	)

1391 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_3
 'o'

	)

1392 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_4
 'b'

	)

1393 
	#TC_IMPL_TC_B⁄obo_EvítSour˚_UnknownLi°íî_5
 'o'

	)

1394 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1399 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_EvítSour˚_UnknownLi°íî_°ru˘
;

1400 
	#TC_B⁄obo_EvítSour˚_UnknownLi°íî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_EvítSour˚_UnknownLi°íî_°ru˘
)

	)

1402 
	#B⁄obo_EvítSour˚_UnknownLi°íî__Æloc
(Ë((
B⁄obo_EvítSour˚_UnknownLi°íî
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_EvítSour˚_UnknownLi°íî
))

	)

1403 
	#B⁄obo_EvítSour˚_UnknownLi°íî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_EvítSour˚_UnknownLi°íî
,(m),(d))

	)

1405 #i‡!
deföed
(
_B⁄obo_Gdk_EvítTy≥_deföed
)

1406 
	#_B⁄obo_Gdk_EvítTy≥_deföed
 1

	)

1408 
	gB⁄obo_Gdk_FOCUS
,

1409 
	gB⁄obo_Gdk_KEY
,

1410 
	gB⁄obo_Gdk_MOTION
,

1411 
	gB⁄obo_Gdk_BUTTON
,

1412 
	gB⁄obo_Gdk_CROSSING


1413 } 
	tB⁄obo_Gdk_EvítTy≥
;

1414 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_0
)

1415 
	#TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_0
 'B'

	)

1416 
	#TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_1
 'o'

	)

1417 
	#TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_2
 'n'

	)

1418 
	#TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_3
 'o'

	)

1419 
	#TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_4
 'b'

	)

1420 
	#TC_IMPL_TC_B⁄obo_Gdk_EvítTy≥_5
 'o'

	)

1421 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1426 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_EvítTy≥_°ru˘
;

1427 
	#TC_B⁄obo_Gdk_EvítTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_EvítTy≥_°ru˘
)

	)

1430 #i‡!
deföed
(
_B⁄obo_Gdk_Buâ⁄Ty≥_deföed
)

1431 
	#_B⁄obo_Gdk_Buâ⁄Ty≥_deföed
 1

	)

1433 
	gB⁄obo_Gdk_BUTTON_PRESS
,

1434 
	gB⁄obo_Gdk_BUTTON_2_PRESS
,

1435 
	gB⁄obo_Gdk_BUTTON_3_PRESS
,

1436 
	gB⁄obo_Gdk_BUTTON_RELEASE


1437 } 
	tB⁄obo_Gdk_Buâ⁄Ty≥
;

1438 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_0
)

1439 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_0
 'B'

	)

1440 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_1
 'o'

	)

1441 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_2
 'n'

	)

1442 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_3
 'o'

	)

1443 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_4
 'b'

	)

1444 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Ty≥_5
 'o'

	)

1445 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1450 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_Buâ⁄Ty≥_°ru˘
;

1451 
	#TC_B⁄obo_Gdk_Buâ⁄Ty≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_Buâ⁄Ty≥_°ru˘
)

	)

1454 #i‡!
deföed
(
_B⁄obo_Gdk_KeyTy≥_deföed
)

1455 
	#_B⁄obo_Gdk_KeyTy≥_deföed
 1

	)

1457 
	gB⁄obo_Gdk_KEY_PRESS
,

1458 
	gB⁄obo_Gdk_KEY_RELEASE


1459 } 
	tB⁄obo_Gdk_KeyTy≥
;

1460 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_0
)

1461 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_0
 'B'

	)

1462 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_1
 'o'

	)

1463 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_2
 'n'

	)

1464 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_3
 'o'

	)

1465 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_4
 'b'

	)

1466 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyTy≥_5
 'o'

	)

1467 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1472 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_KeyTy≥_°ru˘
;

1473 
	#TC_B⁄obo_Gdk_KeyTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_KeyTy≥_°ru˘
)

	)

1476 #i‡!
deföed
(
_B⁄obo_Gdk_CrossTy≥_deföed
)

1477 
	#_B⁄obo_Gdk_CrossTy≥_deföed
 1

	)

1479 
	gB⁄obo_Gdk_ENTER
,

1480 
	gB⁄obo_Gdk_LEAVE


1481 } 
	tB⁄obo_Gdk_CrossTy≥
;

1482 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_0
)

1483 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_0
 'B'

	)

1484 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_1
 'o'

	)

1485 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_2
 'n'

	)

1486 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_3
 'o'

	)

1487 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_4
 'b'

	)

1488 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossTy≥_5
 'o'

	)

1489 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1494 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_CrossTy≥_°ru˘
;

1495 
	#TC_B⁄obo_Gdk_CrossTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_CrossTy≥_°ru˘
)

	)

1498 #i‡!
deföed
(
_B⁄obo_Gdk_CrossMode_deföed
)

1499 
	#_B⁄obo_Gdk_CrossMode_deföed
 1

	)

1501 
	gB⁄obo_Gdk_NORMAL
,

1502 
	gB⁄obo_Gdk_GRAB
,

1503 
	gB⁄obo_Gdk_UNGRAB


1504 } 
	tB⁄obo_Gdk_CrossMode
;

1505 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_CrossMode_0
)

1506 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossMode_0
 'B'

	)

1507 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossMode_1
 'o'

	)

1508 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossMode_2
 'n'

	)

1509 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossMode_3
 'o'

	)

1510 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossMode_4
 'b'

	)

1511 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossMode_5
 'o'

	)

1512 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1517 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_CrossMode_°ru˘
;

1518 
	#TC_B⁄obo_Gdk_CrossMode
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_CrossMode_°ru˘
)

	)

1521 #i‡!
deföed
(
_B⁄obo_Gdk_Time_deföed
)

1522 
	#_B⁄obo_Gdk_Time_deföed
 1

	)

1523 
CORBA_l⁄g
 
	tB⁄obo_Gdk_Time
;

1524 
	#B⁄obo_Gdk_Time_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

1525 
	#B⁄obo_Gdk_Time_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

1526 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_Time_0
)

1527 
	#TC_IMPL_TC_B⁄obo_Gdk_Time_0
 'B'

	)

1528 
	#TC_IMPL_TC_B⁄obo_Gdk_Time_1
 'o'

	)

1529 
	#TC_IMPL_TC_B⁄obo_Gdk_Time_2
 'n'

	)

1530 
	#TC_IMPL_TC_B⁄obo_Gdk_Time_3
 'o'

	)

1531 
	#TC_IMPL_TC_B⁄obo_Gdk_Time_4
 'b'

	)

1532 
	#TC_IMPL_TC_B⁄obo_Gdk_Time_5
 'o'

	)

1533 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1538 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_Time_°ru˘
;

1539 
	#TC_B⁄obo_Gdk_Time
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_Time_°ru˘
)

	)

1541 
	#B⁄obo_Gdk_Time__Æloc
(Ë((
B⁄obo_Gdk_Time
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

1542 
	#B⁄obo_Gdk_Time__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

1544 #i‡!
deföed
(
_B⁄obo_Gdk_MŸi⁄Evít_deföed
)

1545 
	#_B⁄obo_Gdk_MŸi⁄Evít_deföed
 1

	)

1546 
B⁄obo_Gdk_MŸi⁄Evít_ty≥
 
	tB⁄obo_Gdk_MŸi⁄Evít
;

1547 
	sB⁄obo_Gdk_MŸi⁄Evít_ty≥
 {

1548 
B⁄obo_Gdk_Time
 
	gtime
;

1549 
CORBA_doubÀ
 
	gx
;

1550 
CORBA_doubÀ
 
	gy
;

1551 
CORBA_doubÀ
 
	gx_roŸ
;

1552 
CORBA_doubÀ
 
	gy_roŸ
;

1553 
CORBA_doubÀ
 
	g¥essuª
;

1554 
CORBA_doubÀ
 
	gxtût
;

1555 
CORBA_doubÀ
 
	gytût
;

1556 
CORBA_l⁄g
 
	g°©e
;

1557 
CORBA_boﬁón
 
	gis_höt
;

1560 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_0
)

1561 
	#TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_0
 'B'

	)

1562 
	#TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_1
 'o'

	)

1563 
	#TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_2
 'n'

	)

1564 
	#TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_3
 'o'

	)

1565 
	#TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_4
 'b'

	)

1566 
	#TC_IMPL_TC_B⁄obo_Gdk_MŸi⁄Evít_5
 'o'

	)

1567 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1572 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_MŸi⁄Evít_°ru˘
;

1573 
	#TC_B⁄obo_Gdk_MŸi⁄Evít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_MŸi⁄Evít_°ru˘
)

	)

1575 
	#B⁄obo_Gdk_MŸi⁄Evít__Æloc
(Ë((
B⁄obo_Gdk_MŸi⁄Evít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gdk_MŸi⁄Evít
))

	)

1576 
	#B⁄obo_Gdk_MŸi⁄Evít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gdk_MŸi⁄Evít
,(m),(d))

	)

1578 #i‡!
deföed
(
_B⁄obo_Gdk_Buâ⁄Evít_deföed
)

1579 
	#_B⁄obo_Gdk_Buâ⁄Evít_deföed
 1

	)

1580 
B⁄obo_Gdk_Buâ⁄Evít_ty≥
 
	tB⁄obo_Gdk_Buâ⁄Evít
;

1581 
	sB⁄obo_Gdk_Buâ⁄Evít_ty≥
 {

1582 
B⁄obo_Gdk_Buâ⁄Ty≥
 
	gty≥
;

1583 
B⁄obo_Gdk_Time
 
	gtime
;

1584 
CORBA_doubÀ
 
	gx
;

1585 
CORBA_doubÀ
 
	gy
;

1586 
CORBA_doubÀ
 
	gx_roŸ
;

1587 
CORBA_doubÀ
 
	gy_roŸ
;

1588 
CORBA_sh‹t
 
	gbuâ⁄
;

1591 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_0
)

1592 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_0
 'B'

	)

1593 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_1
 'o'

	)

1594 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_2
 'n'

	)

1595 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_3
 'o'

	)

1596 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_4
 'b'

	)

1597 
	#TC_IMPL_TC_B⁄obo_Gdk_Buâ⁄Evít_5
 'o'

	)

1598 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1603 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_Buâ⁄Evít_°ru˘
;

1604 
	#TC_B⁄obo_Gdk_Buâ⁄Evít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_Buâ⁄Evít_°ru˘
)

	)

1606 
	#B⁄obo_Gdk_Buâ⁄Evít__Æloc
(Ë((
B⁄obo_Gdk_Buâ⁄Evít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gdk_Buâ⁄Evít
))

	)

1607 
	#B⁄obo_Gdk_Buâ⁄Evít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gdk_Buâ⁄Evít
,(m),(d))

	)

1609 #i‡!
deföed
(
_B⁄obo_Gdk_KeyEvít_deföed
)

1610 
	#_B⁄obo_Gdk_KeyEvít_deföed
 1

	)

1611 
B⁄obo_Gdk_KeyEvít_ty≥
 
	tB⁄obo_Gdk_KeyEvít
;

1612 
	sB⁄obo_Gdk_KeyEvít_ty≥
 {

1613 
B⁄obo_Gdk_KeyTy≥
 
	gty≥
;

1614 
B⁄obo_Gdk_Time
 
	gtime
;

1615 
CORBA_sh‹t
 
	g°©e
;

1616 
CORBA_sh‹t
 
	gkeyvÆ
;

1617 
CORBA_sh‹t
 
	gÀngth
;

1618 
CORBA_°rög
 
	g°r
;

1621 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_0
)

1622 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_0
 'B'

	)

1623 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_1
 'o'

	)

1624 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_2
 'n'

	)

1625 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_3
 'o'

	)

1626 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_4
 'b'

	)

1627 
	#TC_IMPL_TC_B⁄obo_Gdk_KeyEvít_5
 'o'

	)

1628 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1633 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_KeyEvít_°ru˘
;

1634 
	#TC_B⁄obo_Gdk_KeyEvít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_KeyEvít_°ru˘
)

	)

1636 
	#B⁄obo_Gdk_KeyEvít__Æloc
(Ë((
B⁄obo_Gdk_KeyEvít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gdk_KeyEvít
))

	)

1637 
	#B⁄obo_Gdk_KeyEvít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gdk_KeyEvít
,(m),(d))

	)

1639 #i‡!
deföed
(
_B⁄obo_Gdk_CrossögEvít_deföed
)

1640 
	#_B⁄obo_Gdk_CrossögEvít_deföed
 1

	)

1641 
B⁄obo_Gdk_CrossögEvít_ty≥
 
	tB⁄obo_Gdk_CrossögEvít
;

1642 
	sB⁄obo_Gdk_CrossögEvít_ty≥
 {

1643 
B⁄obo_Gdk_CrossTy≥
 
	gty≥
;

1644 
B⁄obo_Gdk_Time
 
	gtime
;

1645 
CORBA_doubÀ
 
	gx
;

1646 
CORBA_doubÀ
 
	gy
;

1647 
CORBA_doubÀ
 
	gx_roŸ
;

1648 
CORBA_doubÀ
 
	gy_roŸ
;

1649 
B⁄obo_Gdk_CrossMode
 
	gmode
;

1650 
CORBA_boﬁón
 
	gfocus
;

1651 
CORBA_sh‹t
 
	g°©e
;

1654 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_0
)

1655 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_0
 'B'

	)

1656 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_1
 'o'

	)

1657 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_2
 'n'

	)

1658 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_3
 'o'

	)

1659 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_4
 'b'

	)

1660 
	#TC_IMPL_TC_B⁄obo_Gdk_CrossögEvít_5
 'o'

	)

1661 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1666 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_CrossögEvít_°ru˘
;

1667 
	#TC_B⁄obo_Gdk_CrossögEvít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_CrossögEvít_°ru˘
)

	)

1669 
	#B⁄obo_Gdk_CrossögEvít__Æloc
(Ë((
B⁄obo_Gdk_CrossögEvít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gdk_CrossögEvít
))

	)

1670 
	#B⁄obo_Gdk_CrossögEvít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gdk_CrossögEvít
,(m),(d))

	)

1672 #i‡!
deföed
(
_B⁄obo_Gdk_FocusEvít_deföed
)

1673 
	#_B⁄obo_Gdk_FocusEvít_deföed
 1

	)

1674 
B⁄obo_Gdk_FocusEvít_ty≥
 
	tB⁄obo_Gdk_FocusEvít
;

1675 
	sB⁄obo_Gdk_FocusEvít_ty≥
 {

1676 
CORBA_boﬁón
 
	göside
;

1679 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_0
)

1680 
	#TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_0
 'B'

	)

1681 
	#TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_1
 'o'

	)

1682 
	#TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_2
 'n'

	)

1683 
	#TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_3
 'o'

	)

1684 
	#TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_4
 'b'

	)

1685 
	#TC_IMPL_TC_B⁄obo_Gdk_FocusEvít_5
 'o'

	)

1686 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1691 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_FocusEvít_°ru˘
;

1692 
	#TC_B⁄obo_Gdk_FocusEvít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_FocusEvít_°ru˘
)

	)

1694 
	#B⁄obo_Gdk_FocusEvít__Æloc
(Ë((
B⁄obo_Gdk_FocusEvít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gdk_FocusEvít
))

	)

1695 
	#B⁄obo_Gdk_FocusEvít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gdk_FocusEvít
,(m),(d))

	)

1697 #i‡!
deföed
(
_B⁄obo_Gdk_Evít_deföed
)

1698 
	#_B⁄obo_Gdk_Evít_deföed
 1

	)

1699 
B⁄obo_Gdk_Evít_ty≥
 
	tB⁄obo_Gdk_Evít
;

1700 
	sB⁄obo_Gdk_Evít_ty≥
 {

1701 
B⁄obo_Gdk_EvítTy≥
 
	g_d
;

1703 
B⁄obo_Gdk_FocusEvít
 
	gfocus
;

1704 
B⁄obo_Gdk_KeyEvít
 
	gkey
;

1705 
B⁄obo_Gdk_MŸi⁄Evít
 
	gmŸi⁄
;

1706 
B⁄obo_Gdk_Buâ⁄Evít
 
	gbuâ⁄
;

1707 
B⁄obo_Gdk_CrossögEvít
 
	g¸ossög
;

1708 } 
	g_u
;

1710 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_Evít_0
)

1711 
	#TC_IMPL_TC_B⁄obo_Gdk_Evít_0
 'B'

	)

1712 
	#TC_IMPL_TC_B⁄obo_Gdk_Evít_1
 'o'

	)

1713 
	#TC_IMPL_TC_B⁄obo_Gdk_Evít_2
 'n'

	)

1714 
	#TC_IMPL_TC_B⁄obo_Gdk_Evít_3
 'o'

	)

1715 
	#TC_IMPL_TC_B⁄obo_Gdk_Evít_4
 'b'

	)

1716 
	#TC_IMPL_TC_B⁄obo_Gdk_Evít_5
 'o'

	)

1717 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1722 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_Evít_°ru˘
;

1723 
	#TC_B⁄obo_Gdk_Evít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_Evít_°ru˘
)

	)

1725 
	#B⁄obo_Gdk_Evít__Æloc
(Ë((
B⁄obo_Gdk_Evít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gdk_Evít
))

	)

1726 
	#B⁄obo_Gdk_Evít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gdk_Evít
,(m),(d))

	)

1728 #i‡!
deföed
(
_B⁄obo_Gdk_WödowId_deföed
)

1729 
	#_B⁄obo_Gdk_WödowId_deföed
 1

	)

1730 
CORBA_°rög
 
	tB⁄obo_Gdk_WödowId
;

1731 
	#B⁄obo_Gdk_WödowId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

1732 
	#B⁄obo_Gdk_WödowId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

1733 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gdk_WödowId_0
)

1734 
	#TC_IMPL_TC_B⁄obo_Gdk_WödowId_0
 'B'

	)

1735 
	#TC_IMPL_TC_B⁄obo_Gdk_WödowId_1
 'o'

	)

1736 
	#TC_IMPL_TC_B⁄obo_Gdk_WödowId_2
 'n'

	)

1737 
	#TC_IMPL_TC_B⁄obo_Gdk_WödowId_3
 'o'

	)

1738 
	#TC_IMPL_TC_B⁄obo_Gdk_WödowId_4
 'b'

	)

1739 
	#TC_IMPL_TC_B⁄obo_Gdk_WödowId_5
 'o'

	)

1740 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1745 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gdk_WödowId_°ru˘
;

1746 
	#TC_B⁄obo_Gdk_WödowId
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gdk_WödowId_°ru˘
)

	)

1748 
	#B⁄obo_Gdk_WödowId__Æloc
(Ë((
B⁄obo_Gdk_WödowId
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

1749 
	#B⁄obo_Gdk_WödowId__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

1751 #i‡!
deföed
(
_B⁄obo_Gtk_Requisôi⁄_deföed
)

1752 
	#_B⁄obo_Gtk_Requisôi⁄_deföed
 1

	)

1753 
B⁄obo_Gtk_Requisôi⁄_ty≥
 
	tB⁄obo_Gtk_Requisôi⁄
;

1754 
	sB⁄obo_Gtk_Requisôi⁄_ty≥
 {

1755 
CORBA_l⁄g
 
	gwidth
;

1756 
CORBA_l⁄g
 
	gheight
;

1759 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_0
)

1760 
	#TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_0
 'B'

	)

1761 
	#TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_1
 'o'

	)

1762 
	#TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_2
 'n'

	)

1763 
	#TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_3
 'o'

	)

1764 
	#TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_4
 'b'

	)

1765 
	#TC_IMPL_TC_B⁄obo_Gtk_Requisôi⁄_5
 'o'

	)

1766 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1771 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gtk_Requisôi⁄_°ru˘
;

1772 
	#TC_B⁄obo_Gtk_Requisôi⁄
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gtk_Requisôi⁄_°ru˘
)

	)

1774 
	#B⁄obo_Gtk_Requisôi⁄__Æloc
(Ë((
B⁄obo_Gtk_Requisôi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Gtk_Requisôi⁄
))

	)

1775 
	#B⁄obo_Gtk_Requisôi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Gtk_Requisôi⁄
,(m),(d))

	)

1777 #i‡!
deföed
(
_B⁄obo_Gtk_Sèã_deföed
)

1778 
	#_B⁄obo_Gtk_Sèã_deföed
 1

	)

1780 
	gB⁄obo_Gtk_SèãN‹mÆ
,

1781 
	gB⁄obo_Gtk_SèãA˘ive
,

1782 
	gB⁄obo_Gtk_SèãPªlight
,

1783 
	gB⁄obo_Gtk_SèãSñe˘ed
,

1784 
	gB⁄obo_Gtk_SèãIn£nsôive


1785 } 
	tB⁄obo_Gtk_Sèã
;

1786 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gtk_Sèã_0
)

1787 
	#TC_IMPL_TC_B⁄obo_Gtk_Sèã_0
 'B'

	)

1788 
	#TC_IMPL_TC_B⁄obo_Gtk_Sèã_1
 'o'

	)

1789 
	#TC_IMPL_TC_B⁄obo_Gtk_Sèã_2
 'n'

	)

1790 
	#TC_IMPL_TC_B⁄obo_Gtk_Sèã_3
 'o'

	)

1791 
	#TC_IMPL_TC_B⁄obo_Gtk_Sèã_4
 'b'

	)

1792 
	#TC_IMPL_TC_B⁄obo_Gtk_Sèã_5
 'o'

	)

1793 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1798 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gtk_Sèã_°ru˘
;

1799 
	#TC_B⁄obo_Gtk_Sèã
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gtk_Sèã_°ru˘
)

	)

1802 #i‡!
deföed
(
_B⁄obo_Gtk_Dúe˘i⁄_deföed
)

1803 
	#_B⁄obo_Gtk_Dúe˘i⁄_deföed
 1

	)

1805 
	gB⁄obo_Gtk_Dúe˘i⁄TabF‹w¨d
,

1806 
	gB⁄obo_Gtk_Dúe˘i⁄TabBackw¨d
,

1807 
	gB⁄obo_Gtk_Dúe˘i⁄Up
,

1808 
	gB⁄obo_Gtk_Dúe˘i⁄Down
,

1809 
	gB⁄obo_Gtk_Dúe˘i⁄Le·
,

1810 
	gB⁄obo_Gtk_Dúe˘i⁄Right


1811 } 
	tB⁄obo_Gtk_Dúe˘i⁄
;

1812 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_0
)

1813 
	#TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_0
 'B'

	)

1814 
	#TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_1
 'o'

	)

1815 
	#TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_2
 'n'

	)

1816 
	#TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_3
 'o'

	)

1817 
	#TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_4
 'b'

	)

1818 
	#TC_IMPL_TC_B⁄obo_Gtk_Dúe˘i⁄_5
 'o'

	)

1819 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1824 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Gtk_Dúe˘i⁄_°ru˘
;

1825 
	#TC_B⁄obo_Gtk_Dúe˘i⁄
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Gtk_Dúe˘i⁄_°ru˘
)

	)

1828 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_UIC⁄èöî
Ë&& !deföed(
_B⁄obo_UIC⁄èöî_deföed
)

1829 
	#ORBIT_DECL_B⁄obo_UIC⁄èöî
 1

	)

1830 
	#_B⁄obo_UIC⁄èöî_deföed
 1

	)

1831 
	#B⁄obo_UIC⁄èöî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1832 
CORBA_Obje˘
 
	tB⁄obo_UIC⁄èöî
;

1833 
CORBA_unsig√d_l⁄g
 
B⁄obo_UIC⁄èöî__˛assid
;

1834 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_0
)

1835 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_0
 'B'

	)

1836 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_1
 'o'

	)

1837 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_2
 'n'

	)

1838 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_3
 'o'

	)

1839 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_4
 'b'

	)

1840 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_5
 'o'

	)

1841 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1846 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_°ru˘
;

1847 
	#TC_B⁄obo_UIC⁄èöî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_°ru˘
)

	)

1850 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_UIComp⁄ít
Ë&& !deföed(
_B⁄obo_UIComp⁄ít_deföed
)

1851 
	#ORBIT_DECL_B⁄obo_UIComp⁄ít
 1

	)

1852 
	#_B⁄obo_UIComp⁄ít_deföed
 1

	)

1853 
	#B⁄obo_UIComp⁄ít__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1854 
CORBA_Obje˘
 
	tB⁄obo_UIComp⁄ít
;

1855 
CORBA_unsig√d_l⁄g
 
B⁄obo_UIComp⁄ít__˛assid
;

1856 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIComp⁄ít_0
)

1857 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_0
 'B'

	)

1858 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_1
 'o'

	)

1859 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_2
 'n'

	)

1860 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_3
 'o'

	)

1861 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_4
 'b'

	)

1862 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_5
 'o'

	)

1863 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1868 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIComp⁄ít_°ru˘
;

1869 
	#TC_B⁄obo_UIComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIComp⁄ít_°ru˘
)

	)

1872 #i‡!
deföed
(
_B⁄obo_UIComp⁄ít_EvítTy≥_deföed
)

1873 
	#_B⁄obo_UIComp⁄ít_EvítTy≥_deföed
 1

	)

1875 
	gB⁄obo_UIComp⁄ít_STATE_CHANGED
,

1876 
	gB⁄obo_UIComp⁄ít_OTHER


1877 } 
	tB⁄obo_UIComp⁄ít_EvítTy≥
;

1878 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_0
)

1879 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_0
 'B'

	)

1880 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_1
 'o'

	)

1881 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_2
 'n'

	)

1882 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_3
 'o'

	)

1883 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_4
 'b'

	)

1884 
	#TC_IMPL_TC_B⁄obo_UIComp⁄ít_EvítTy≥_5
 'o'

	)

1885 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1890 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIComp⁄ít_EvítTy≥_°ru˘
;

1891 
	#TC_B⁄obo_UIComp⁄ít_EvítTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIComp⁄ít_EvítTy≥_°ru˘
)

	)

1894 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_UIC⁄èöî
Ë&& !deföed(
_B⁄obo_UIC⁄èöî_deföed
)

1895 
	#ORBIT_DECL_B⁄obo_UIC⁄èöî
 1

	)

1896 
	#_B⁄obo_UIC⁄èöî_deföed
 1

	)

1897 
	#B⁄obo_UIC⁄èöî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

1898 
CORBA_Obje˘
 
	tB⁄obo_UIC⁄èöî
;

1899 
CORBA_unsig√d_l⁄g
 
B⁄obo_UIC⁄èöî__˛assid
;

1900 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_0
)

1901 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_0
 'B'

	)

1902 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_1
 'o'

	)

1903 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_2
 'n'

	)

1904 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_3
 'o'

	)

1905 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_4
 'b'

	)

1906 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_5
 'o'

	)

1907 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1912 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_°ru˘
;

1913 
	#TC_B⁄obo_UIC⁄èöî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_°ru˘
)

	)

1916 #unde‡
ex_B⁄obo_UIC⁄èöî_MÆf‹medXML


1917 
	#ex_B⁄obo_UIC⁄èöî_MÆf‹medXML
 "IDL:B⁄obo/UIC⁄èöî/MÆf‹medXML:1.0"

	)

1918 #i‡!
deföed
(
_B⁄obo_UIC⁄èöî_MÆf‹medXML_deföed
)

1919 
	#_B⁄obo_UIC⁄èöî_MÆf‹medXML_deföed
 1

	)

1920 
B⁄obo_UIC⁄èöî_MÆf‹medXML_ty≥
 
	tB⁄obo_UIC⁄èöî_MÆf‹medXML
;

1921 
	sB⁄obo_UIC⁄èöî_MÆf‹medXML_ty≥
 {

1922 
	gdummy
;

1925 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_0
)

1926 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_0
 'B'

	)

1927 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_1
 'o'

	)

1928 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_2
 'n'

	)

1929 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_3
 'o'

	)

1930 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_4
 'b'

	)

1931 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_5
 'o'

	)

1932 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1937 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_°ru˘
;

1938 
	#TC_B⁄obo_UIC⁄èöî_MÆf‹medXML
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_MÆf‹medXML_°ru˘
)

	)

1940 
	#B⁄obo_UIC⁄èöî_MÆf‹medXML__Æloc
(Ë((
B⁄obo_UIC⁄èöî_MÆf‹medXML
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_UIC⁄èöî_MÆf‹medXML
))

	)

1941 
	#B⁄obo_UIC⁄èöî_MÆf‹medXML__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_UIC⁄èöî_MÆf‹medXML
,(m),(d))

	)

1943 #unde‡
ex_B⁄obo_UIC⁄èöî_InvÆidP©h


1944 
	#ex_B⁄obo_UIC⁄èöî_InvÆidP©h
 "IDL:B⁄obo/UIC⁄èöî/InvÆidP©h:1.0"

	)

1945 #i‡!
deföed
(
_B⁄obo_UIC⁄èöî_InvÆidP©h_deföed
)

1946 
	#_B⁄obo_UIC⁄èöî_InvÆidP©h_deföed
 1

	)

1947 
B⁄obo_UIC⁄èöî_InvÆidP©h_ty≥
 
	tB⁄obo_UIC⁄èöî_InvÆidP©h
;

1948 
	sB⁄obo_UIC⁄èöî_InvÆidP©h_ty≥
 {

1949 
	gdummy
;

1952 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_0
)

1953 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_0
 'B'

	)

1954 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_1
 'o'

	)

1955 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_2
 'n'

	)

1956 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_3
 'o'

	)

1957 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_4
 'b'

	)

1958 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_InvÆidP©h_5
 'o'

	)

1959 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1964 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_InvÆidP©h_°ru˘
;

1965 
	#TC_B⁄obo_UIC⁄èöî_InvÆidP©h
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_InvÆidP©h_°ru˘
)

	)

1967 
	#B⁄obo_UIC⁄èöî_InvÆidP©h__Æloc
(Ë((
B⁄obo_UIC⁄èöî_InvÆidP©h
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_UIC⁄èöî_InvÆidP©h
))

	)

1968 
	#B⁄obo_UIC⁄èöî_InvÆidP©h__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_UIC⁄èöî_InvÆidP©h
,(m),(d))

	)

1970 #unde‡
ex_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr


1971 
	#ex_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr
 "IDL:B⁄obo/UIC⁄èöî/N⁄Exi°ítAâr:1.0"

	)

1972 #i‡!
deföed
(
_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_deföed
)

1973 
	#_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_deföed
 1

	)

1974 
B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_ty≥
 
	tB⁄obo_UIC⁄èöî_N⁄Exi°ítAâr
;

1975 
	sB⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_ty≥
 {

1976 
	gdummy
;

1979 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_0
)

1980 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_0
 'B'

	)

1981 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_1
 'o'

	)

1982 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_2
 'n'

	)

1983 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_3
 'o'

	)

1984 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_4
 'b'

	)

1985 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_5
 'o'

	)

1986 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


1991 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_°ru˘
;

1992 
	#TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr_°ru˘
)

	)

1994 
	#B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr__Æloc
(Ë((
B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr
))

	)

1995 
	#B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_UIC⁄èöî_N⁄Exi°ítAâr
,(m),(d))

	)

1997 #unde‡
ex_B⁄obo_UIC⁄èöî_In£nsôive


1998 
	#ex_B⁄obo_UIC⁄èöî_In£nsôive
 "IDL:B⁄obo/UIC⁄èöî/In£nsôive:1.0"

	)

1999 #i‡!
deföed
(
_B⁄obo_UIC⁄èöî_In£nsôive_deföed
)

2000 
	#_B⁄obo_UIC⁄èöî_In£nsôive_deföed
 1

	)

2001 
B⁄obo_UIC⁄èöî_In£nsôive_ty≥
 
	tB⁄obo_UIC⁄èöî_In£nsôive
;

2002 
	sB⁄obo_UIC⁄èöî_In£nsôive_ty≥
 {

2003 
	gdummy
;

2006 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_0
)

2007 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_0
 'B'

	)

2008 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_1
 'o'

	)

2009 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_2
 'n'

	)

2010 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_3
 'o'

	)

2011 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_4
 'b'

	)

2012 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_In£nsôive_5
 'o'

	)

2013 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2018 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_In£nsôive_°ru˘
;

2019 
	#TC_B⁄obo_UIC⁄èöî_In£nsôive
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_In£nsôive_°ru˘
)

	)

2021 
	#B⁄obo_UIC⁄èöî_In£nsôive__Æloc
(Ë((
B⁄obo_UIC⁄èöî_In£nsôive
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_UIC⁄èöî_In£nsôive
))

	)

2022 
	#B⁄obo_UIC⁄èöî_In£nsôive__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_UIC⁄èöî_In£nsôive
,(m),(d))

	)

2024 #unde‡
ex_B⁄obo_UIC⁄èöî_Unknown


2025 
	#ex_B⁄obo_UIC⁄èöî_Unknown
 "IDL:B⁄obo/UIC⁄èöî/Unknown:1.0"

	)

2026 #i‡!
deföed
(
_B⁄obo_UIC⁄èöî_Unknown_deföed
)

2027 
	#_B⁄obo_UIC⁄èöî_Unknown_deföed
 1

	)

2028 
B⁄obo_UIC⁄èöî_Unknown_ty≥
 
	tB⁄obo_UIC⁄èöî_Unknown
;

2029 
	sB⁄obo_UIC⁄èöî_Unknown_ty≥
 {

2030 
	gdummy
;

2033 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_0
)

2034 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_0
 'B'

	)

2035 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_1
 'o'

	)

2036 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_2
 'n'

	)

2037 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_3
 'o'

	)

2038 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_4
 'b'

	)

2039 
	#TC_IMPL_TC_B⁄obo_UIC⁄èöî_Unknown_5
 'o'

	)

2040 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2045 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_UIC⁄èöî_Unknown_°ru˘
;

2046 
	#TC_B⁄obo_UIC⁄èöî_Unknown
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_UIC⁄èöî_Unknown_°ru˘
)

	)

2048 
	#B⁄obo_UIC⁄èöî_Unknown__Æloc
(Ë((
B⁄obo_UIC⁄èöî_Unknown
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_UIC⁄èöî_Unknown
))

	)

2049 
	#B⁄obo_UIC⁄èöî_Unknown__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_UIC⁄èöî_Unknown
,(m),(d))

	)

2051 #i‡!
deföed
(
_B⁄obo_Paú_deföed
)

2052 
	#_B⁄obo_Paú_deföed
 1

	)

2053 
B⁄obo_Paú_ty≥
 
	tB⁄obo_Paú
;

2054 
	sB⁄obo_Paú_ty≥
 {

2055 
CORBA_°rög
 
	g«me
;

2056 
CORBA_™y
 
	gvÆue
;

2059 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Paú_0
)

2060 
	#TC_IMPL_TC_B⁄obo_Paú_0
 'B'

	)

2061 
	#TC_IMPL_TC_B⁄obo_Paú_1
 'o'

	)

2062 
	#TC_IMPL_TC_B⁄obo_Paú_2
 'n'

	)

2063 
	#TC_IMPL_TC_B⁄obo_Paú_3
 'o'

	)

2064 
	#TC_IMPL_TC_B⁄obo_Paú_4
 'b'

	)

2065 
	#TC_IMPL_TC_B⁄obo_Paú_5
 'o'

	)

2066 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2071 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Paú_°ru˘
;

2072 
	#TC_B⁄obo_Paú
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Paú_°ru˘
)

	)

2074 
	#B⁄obo_Paú__Æloc
(Ë((
B⁄obo_Paú
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Paú
))

	)

2075 
	#B⁄obo_Paú__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Paú
,(m),(d))

	)

2077 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_Paú
)

2078 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_Paú
 1

	)

2079 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Paú_0
 'B'

	)

2080 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Paú_1
 'o'

	)

2081 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Paú_2
 'n'

	)

2082 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Paú_3
 'o'

	)

2083 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Paú_4
 'b'

	)

2084 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Paú_5
 'o'

	)

2085 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_Paú_deföed
)

2086 
	#_CORBA_£quí˚_B⁄obo_Paú_deföed
 1

	)

2087 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_Paú
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_Paú
;

2089 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_0
)

2090 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_0
 'B'

	)

2091 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_1
 'o'

	)

2092 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_2
 'n'

	)

2093 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_3
 'o'

	)

2094 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_4
 'b'

	)

2095 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Paú_5
 'o'

	)

2096 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2101 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_Paú_°ru˘
;

2102 
	#TC_CORBA_£quí˚_B⁄obo_Paú
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_Paú_°ru˘
)

	)

2104 
	#CORBA_£quí˚_B⁄obo_Paú__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_Paú
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_Paú
))

	)

2105 
	#CORBA_£quí˚_B⁄obo_Paú__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_Paú
,(m),(d))

	)

2106 
	#CORBA_£quí˚_B⁄obo_Paú_Ælocbuf
(
l
Ë((
B⁄obo_Paú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Paú
, (l)))

	)

2107 
	#CORBA_£quí˚_B⁄obo_Paú_Ælocbuf
(
l
Ë((
B⁄obo_Paú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Paú
, (l)))

	)

2109 #i‡!
deföed
(
_B⁄obo_Pr›îtySë_deföed
)

2110 
	#_B⁄obo_Pr›îtySë_deföed
 1

	)

2111 
CORBA_£quí˚_B⁄obo_Paú
 
	tB⁄obo_Pr›îtySë
;

2112 
	#B⁄obo_Pr›îtySë_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_Paú_m¨shÆ
((x),(y),(z))

	)

2113 
	#B⁄obo_Pr›îtySë_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_Paú_dem¨shÆ
((x),(y),(z),(i))

	)

2114 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtySë_0
)

2115 
	#TC_IMPL_TC_B⁄obo_Pr›îtySë_0
 'B'

	)

2116 
	#TC_IMPL_TC_B⁄obo_Pr›îtySë_1
 'o'

	)

2117 
	#TC_IMPL_TC_B⁄obo_Pr›îtySë_2
 'n'

	)

2118 
	#TC_IMPL_TC_B⁄obo_Pr›îtySë_3
 'o'

	)

2119 
	#TC_IMPL_TC_B⁄obo_Pr›îtySë_4
 'b'

	)

2120 
	#TC_IMPL_TC_B⁄obo_Pr›îtySë_5
 'o'

	)

2121 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2126 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtySë_°ru˘
;

2127 
	#TC_B⁄obo_Pr›îtySë
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtySë_°ru˘
)

	)

2129 
	#B⁄obo_Pr›îtySë__Æloc
(Ë((
B⁄obo_Pr›îtySë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_Paú
))

	)

2130 
	#B⁄obo_Pr›îtySë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_Paú
,(m),(d))

	)

2131 
	#B⁄obo_Pr›îtySë_Ælocbuf
(
l
Ë((
B⁄obo_Paú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Paú
, (l)))

	)

2133 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

2134 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

2135 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

2136 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

2137 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

2138 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

2139 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

2140 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

2141 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

2142 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

2143 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

2145 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

2146 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

2147 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

2148 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

2149 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

2150 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

2151 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

2152 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2157 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

2158 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

2160 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

2161 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

2162 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2163 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2165 #i‡!
deföed
(
_B⁄obo_KeyLi°_deföed
)

2166 
	#_B⁄obo_KeyLi°_deföed
 1

	)

2167 
CORBA_£quí˚_CORBA_°rög
 
	tB⁄obo_KeyLi°
;

2168 
	#B⁄obo_KeyLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2169 
	#B⁄obo_KeyLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2170 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_KeyLi°_0
)

2171 
	#TC_IMPL_TC_B⁄obo_KeyLi°_0
 'B'

	)

2172 
	#TC_IMPL_TC_B⁄obo_KeyLi°_1
 'o'

	)

2173 
	#TC_IMPL_TC_B⁄obo_KeyLi°_2
 'n'

	)

2174 
	#TC_IMPL_TC_B⁄obo_KeyLi°_3
 'o'

	)

2175 
	#TC_IMPL_TC_B⁄obo_KeyLi°_4
 'b'

	)

2176 
	#TC_IMPL_TC_B⁄obo_KeyLi°_5
 'o'

	)

2177 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2182 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_KeyLi°_°ru˘
;

2183 
	#TC_B⁄obo_KeyLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_KeyLi°_°ru˘
)

	)

2185 
	#B⁄obo_KeyLi°__Æloc
(Ë((
B⁄obo_KeyLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

2186 
	#B⁄obo_KeyLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

2187 
	#B⁄obo_KeyLi°_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2189 #i‡!
deföed
(
_B⁄obo_Pr›îtyFœgs_deföed
)

2190 
	#_B⁄obo_Pr›îtyFœgs_deföed
 1

	)

2191 
CORBA_l⁄g
 
	tB⁄obo_Pr›îtyFœgs
;

2192 
	#B⁄obo_Pr›îtyFœgs_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

2193 
	#B⁄obo_Pr›îtyFœgs_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

2194 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_0
)

2195 
	#TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_0
 'B'

	)

2196 
	#TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_1
 'o'

	)

2197 
	#TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_2
 'n'

	)

2198 
	#TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_3
 'o'

	)

2199 
	#TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_4
 'b'

	)

2200 
	#TC_IMPL_TC_B⁄obo_Pr›îtyFœgs_5
 'o'

	)

2201 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2206 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyFœgs_°ru˘
;

2207 
	#TC_B⁄obo_Pr›îtyFœgs
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyFœgs_°ru˘
)

	)

2209 
	#B⁄obo_Pr›îtyFœgs__Æloc
(Ë((
B⁄obo_Pr›îtyFœgs
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

2210 
	#B⁄obo_Pr›îtyFœgs__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

2212 #i‚de‡
B⁄obo_PROPERTY_READABLE


2213 
	#B⁄obo_PROPERTY_READABLE
 1

	)

2216 #i‚de‡
B⁄obo_PROPERTY_WRITEABLE


2217 
	#B⁄obo_PROPERTY_WRITEABLE
 2

	)

2220 #i‚de‡
B⁄obo_PROPERTY_NO_LISTENING


2221 
	#B⁄obo_PROPERTY_NO_LISTENING
 4

	)

2224 #i‚de‡
B⁄obo_PROPERTY_NO_AUTONOTIFY


2225 
	#B⁄obo_PROPERTY_NO_AUTONOTIFY
 8

	)

2228 #i‚de‡
B⁄obo_PROPERTY_NO_PERSIST


2229 
	#B⁄obo_PROPERTY_NO_PERSIST
 16

	)

2232 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pr›îtyBag
Ë&& !deföed(
_B⁄obo_Pr›îtyBag_deföed
)

2233 
	#ORBIT_DECL_B⁄obo_Pr›îtyBag
 1

	)

2234 
	#_B⁄obo_Pr›îtyBag_deföed
 1

	)

2235 
	#B⁄obo_Pr›îtyBag__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2236 
CORBA_Obje˘
 
	tB⁄obo_Pr›îtyBag
;

2237 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pr›îtyBag__˛assid
;

2238 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyBag_0
)

2239 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_0
 'B'

	)

2240 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_1
 'o'

	)

2241 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_2
 'n'

	)

2242 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_3
 'o'

	)

2243 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_4
 'b'

	)

2244 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_5
 'o'

	)

2245 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2250 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyBag_°ru˘
;

2251 
	#TC_B⁄obo_Pr›îtyBag
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyBag_°ru˘
)

	)

2254 #unde‡
ex_B⁄obo_Pr›îtyBag_NŸFound


2255 
	#ex_B⁄obo_Pr›îtyBag_NŸFound
 "IDL:B⁄obo/Pr›îtyBag/NŸFound:1.0"

	)

2256 #i‡!
deföed
(
_B⁄obo_Pr›îtyBag_NŸFound_deföed
)

2257 
	#_B⁄obo_Pr›îtyBag_NŸFound_deföed
 1

	)

2258 
B⁄obo_Pr›îtyBag_NŸFound_ty≥
 
	tB⁄obo_Pr›îtyBag_NŸFound
;

2259 
	sB⁄obo_Pr›îtyBag_NŸFound_ty≥
 {

2260 
	gdummy
;

2263 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_0
)

2264 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_0
 'B'

	)

2265 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_1
 'o'

	)

2266 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_2
 'n'

	)

2267 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_3
 'o'

	)

2268 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_4
 'b'

	)

2269 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_NŸFound_5
 'o'

	)

2270 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2275 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyBag_NŸFound_°ru˘
;

2276 
	#TC_B⁄obo_Pr›îtyBag_NŸFound
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyBag_NŸFound_°ru˘
)

	)

2278 
	#B⁄obo_Pr›îtyBag_NŸFound__Æloc
(Ë((
B⁄obo_Pr›îtyBag_NŸFound
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pr›îtyBag_NŸFound
))

	)

2279 
	#B⁄obo_Pr›îtyBag_NŸFound__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pr›îtyBag_NŸFound
,(m),(d))

	)

2281 #unde‡
ex_B⁄obo_Pr›îtyBag_InvÆidTy≥


2282 
	#ex_B⁄obo_Pr›îtyBag_InvÆidTy≥
 "IDL:B⁄obo/Pr›îtyBag/InvÆidTy≥:1.0"

	)

2283 #i‡!
deföed
(
_B⁄obo_Pr›îtyBag_InvÆidTy≥_deföed
)

2284 
	#_B⁄obo_Pr›îtyBag_InvÆidTy≥_deföed
 1

	)

2285 
B⁄obo_Pr›îtyBag_InvÆidTy≥_ty≥
 
	tB⁄obo_Pr›îtyBag_InvÆidTy≥
;

2286 
	sB⁄obo_Pr›îtyBag_InvÆidTy≥_ty≥
 {

2287 
	gdummy
;

2290 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_0
)

2291 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_0
 'B'

	)

2292 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_1
 'o'

	)

2293 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_2
 'n'

	)

2294 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_3
 'o'

	)

2295 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_4
 'b'

	)

2296 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_5
 'o'

	)

2297 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2302 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_°ru˘
;

2303 
	#TC_B⁄obo_Pr›îtyBag_InvÆidTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyBag_InvÆidTy≥_°ru˘
)

	)

2305 
	#B⁄obo_Pr›îtyBag_InvÆidTy≥__Æloc
(Ë((
B⁄obo_Pr›îtyBag_InvÆidTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pr›îtyBag_InvÆidTy≥
))

	)

2306 
	#B⁄obo_Pr›îtyBag_InvÆidTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pr›îtyBag_InvÆidTy≥
,(m),(d))

	)

2308 #unde‡
ex_B⁄obo_Pr›îtyBag_RódO∆y


2309 
	#ex_B⁄obo_Pr›îtyBag_RódO∆y
 "IDL:B⁄obo/Pr›îtyBag/RódO∆y:1.0"

	)

2310 #i‡!
deföed
(
_B⁄obo_Pr›îtyBag_RódO∆y_deföed
)

2311 
	#_B⁄obo_Pr›îtyBag_RódO∆y_deföed
 1

	)

2312 
B⁄obo_Pr›îtyBag_RódO∆y_ty≥
 
	tB⁄obo_Pr›îtyBag_RódO∆y
;

2313 
	sB⁄obo_Pr›îtyBag_RódO∆y_ty≥
 {

2314 
	gdummy
;

2317 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_0
)

2318 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_0
 'B'

	)

2319 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_1
 'o'

	)

2320 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_2
 'n'

	)

2321 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_3
 'o'

	)

2322 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_4
 'b'

	)

2323 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_RódO∆y_5
 'o'

	)

2324 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2329 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyBag_RódO∆y_°ru˘
;

2330 
	#TC_B⁄obo_Pr›îtyBag_RódO∆y
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyBag_RódO∆y_°ru˘
)

	)

2332 
	#B⁄obo_Pr›îtyBag_RódO∆y__Æloc
(Ë((
B⁄obo_Pr›îtyBag_RódO∆y
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pr›îtyBag_RódO∆y
))

	)

2333 
	#B⁄obo_Pr›îtyBag_RódO∆y__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pr›îtyBag_RódO∆y
,(m),(d))

	)

2335 #unde‡
ex_B⁄obo_Pr›îtyBag_BackídFaûed


2336 
	#ex_B⁄obo_Pr›îtyBag_BackídFaûed
 "IDL:B⁄obo/Pr›îtyBag/BackídFaûed:1.0"

	)

2337 #i‡!
deföed
(
_B⁄obo_Pr›îtyBag_BackídFaûed_deföed
)

2338 
	#_B⁄obo_Pr›îtyBag_BackídFaûed_deföed
 1

	)

2339 
B⁄obo_Pr›îtyBag_BackídFaûed_ty≥
 
	tB⁄obo_Pr›îtyBag_BackídFaûed
;

2340 
	sB⁄obo_Pr›îtyBag_BackídFaûed_ty≥
 {

2341 
	gdummy
;

2344 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_0
)

2345 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_0
 'B'

	)

2346 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_1
 'o'

	)

2347 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_2
 'n'

	)

2348 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_3
 'o'

	)

2349 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_4
 'b'

	)

2350 
	#TC_IMPL_TC_B⁄obo_Pr›îtyBag_BackídFaûed_5
 'o'

	)

2351 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2356 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyBag_BackídFaûed_°ru˘
;

2357 
	#TC_B⁄obo_Pr›îtyBag_BackídFaûed
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyBag_BackídFaûed_°ru˘
)

	)

2359 
	#B⁄obo_Pr›îtyBag_BackídFaûed__Æloc
(Ë((
B⁄obo_Pr›îtyBag_BackídFaûed
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pr›îtyBag_BackídFaûed
))

	)

2360 
	#B⁄obo_Pr›îtyBag_BackídFaûed__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pr›îtyBag_BackídFaûed
,(m),(d))

	)

2362 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C⁄figD©aba£
Ë&& !deföed(
_B⁄obo_C⁄figD©aba£_deföed
)

2363 
	#ORBIT_DECL_B⁄obo_C⁄figD©aba£
 1

	)

2364 
	#_B⁄obo_C⁄figD©aba£_deföed
 1

	)

2365 
	#B⁄obo_C⁄figD©aba£__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2366 
CORBA_Obje˘
 
	tB⁄obo_C⁄figD©aba£
;

2367 
CORBA_unsig√d_l⁄g
 
B⁄obo_C⁄figD©aba£__˛assid
;

2368 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄figD©aba£_0
)

2369 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_0
 'B'

	)

2370 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_1
 'o'

	)

2371 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_2
 'n'

	)

2372 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_3
 'o'

	)

2373 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_4
 'b'

	)

2374 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_5
 'o'

	)

2375 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2380 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄figD©aba£_°ru˘
;

2381 
	#TC_B⁄obo_C⁄figD©aba£
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄figD©aba£_°ru˘
)

	)

2384 #i‡!
deföed
(
_B⁄obo_C⁄figD©aba£_DBFœgs_deföed
)

2385 
	#_B⁄obo_C⁄figD©aba£_DBFœgs_deföed
 1

	)

2387 
	gB⁄obo_C⁄figD©aba£_DEFAULT
,

2388 
	gB⁄obo_C⁄figD©aba£_WRITE
,

2389 
	gB⁄obo_C⁄figD©aba£_MANDATORY


2390 } 
	tB⁄obo_C⁄figD©aba£_DBFœgs
;

2391 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_0
)

2392 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_0
 'B'

	)

2393 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_1
 'o'

	)

2394 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_2
 'n'

	)

2395 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_3
 'o'

	)

2396 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_4
 'b'

	)

2397 
	#TC_IMPL_TC_B⁄obo_C⁄figD©aba£_DBFœgs_5
 'o'

	)

2398 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2403 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄figD©aba£_DBFœgs_°ru˘
;

2404 
	#TC_B⁄obo_C⁄figD©aba£_DBFœgs
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄figD©aba£_DBFœgs_°ru˘
)

	)

2407 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C⁄åﬁFøme
Ë&& !deföed(
_B⁄obo_C⁄åﬁFøme_deföed
)

2408 
	#ORBIT_DECL_B⁄obo_C⁄åﬁFøme
 1

	)

2409 
	#_B⁄obo_C⁄åﬁFøme_deföed
 1

	)

2410 
	#B⁄obo_C⁄åﬁFøme__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2411 
CORBA_Obje˘
 
	tB⁄obo_C⁄åﬁFøme
;

2412 
CORBA_unsig√d_l⁄g
 
B⁄obo_C⁄åﬁFøme__˛assid
;

2413 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_0
)

2414 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_0
 'B'

	)

2415 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_1
 'o'

	)

2416 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_2
 'n'

	)

2417 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_3
 'o'

	)

2418 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_4
 'b'

	)

2419 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFøme_5
 'o'

	)

2420 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2425 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄åﬁFøme_°ru˘
;

2426 
	#TC_B⁄obo_C⁄åﬁFøme
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄åﬁFøme_°ru˘
)

	)

2429 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C⁄åﬁ
Ë&& !deföed(
_B⁄obo_C⁄åﬁ_deföed
)

2430 
	#ORBIT_DECL_B⁄obo_C⁄åﬁ
 1

	)

2431 
	#_B⁄obo_C⁄åﬁ_deföed
 1

	)

2432 
	#B⁄obo_C⁄åﬁ__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2433 
CORBA_Obje˘
 
	tB⁄obo_C⁄åﬁ
;

2434 
CORBA_unsig√d_l⁄g
 
B⁄obo_C⁄åﬁ__˛assid
;

2435 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄åﬁ_0
)

2436 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_0
 'B'

	)

2437 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_1
 'o'

	)

2438 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_2
 'n'

	)

2439 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_3
 'o'

	)

2440 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_4
 'b'

	)

2441 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_5
 'o'

	)

2442 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2447 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄åﬁ_°ru˘
;

2448 
	#TC_B⁄obo_C⁄åﬁ
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄åﬁ_°ru˘
)

	)

2451 #unde‡
ex_B⁄obo_C⁄åﬁ_NoC⁄ã¡s


2452 
	#ex_B⁄obo_C⁄åﬁ_NoC⁄ã¡s
 "IDL:B⁄obo/C⁄åﬁ/NoC⁄ã¡s:1.0"

	)

2453 #i‡!
deföed
(
_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_deföed
)

2454 
	#_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_deföed
 1

	)

2455 
B⁄obo_C⁄åﬁ_NoC⁄ã¡s_ty≥
 
	tB⁄obo_C⁄åﬁ_NoC⁄ã¡s
;

2456 
	sB⁄obo_C⁄åﬁ_NoC⁄ã¡s_ty≥
 {

2457 
	gdummy
;

2460 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_0
)

2461 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_0
 'B'

	)

2462 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_1
 'o'

	)

2463 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_2
 'n'

	)

2464 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_3
 'o'

	)

2465 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_4
 'b'

	)

2466 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_5
 'o'

	)

2467 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2472 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_°ru˘
;

2473 
	#TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s_°ru˘
)

	)

2475 
	#B⁄obo_C⁄åﬁ_NoC⁄ã¡s__Æloc
(Ë((
B⁄obo_C⁄åﬁ_NoC⁄ã¡s
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s
))

	)

2476 
	#B⁄obo_C⁄åﬁ_NoC⁄ã¡s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C⁄åﬁ_NoC⁄ã¡s
,(m),(d))

	)

2478 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pr›îtyC⁄åﬁ
Ë&& !deföed(
_B⁄obo_Pr›îtyC⁄åﬁ_deföed
)

2479 
	#ORBIT_DECL_B⁄obo_Pr›îtyC⁄åﬁ
 1

	)

2480 
	#_B⁄obo_Pr›îtyC⁄åﬁ_deföed
 1

	)

2481 
	#B⁄obo_Pr›îtyC⁄åﬁ__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2482 
CORBA_Obje˘
 
	tB⁄obo_Pr›îtyC⁄åﬁ
;

2483 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pr›îtyC⁄åﬁ__˛assid
;

2484 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_0
)

2485 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_0
 'B'

	)

2486 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_1
 'o'

	)

2487 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_2
 'n'

	)

2488 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_3
 'o'

	)

2489 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_4
 'b'

	)

2490 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_5
 'o'

	)

2491 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2496 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyC⁄åﬁ_°ru˘
;

2497 
	#TC_B⁄obo_Pr›îtyC⁄åﬁ
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyC⁄åﬁ_°ru˘
)

	)

2500 #i‡!
deföed
(
_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_deföed
)

2501 
	#_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_deföed
 1

	)

2503 
	gB⁄obo_Pr›îtyC⁄åﬁ_APPLY
,

2504 
	gB⁄obo_Pr›îtyC⁄åﬁ_HELP


2505 } 
	tB⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄
;

2506 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_0
)

2507 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_0
 'B'

	)

2508 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_1
 'o'

	)

2509 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_2
 'n'

	)

2510 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_3
 'o'

	)

2511 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_4
 'b'

	)

2512 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_5
 'o'

	)

2513 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2518 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_°ru˘
;

2519 
	#TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄_°ru˘
)

	)

2522 #unde‡
ex_B⁄obo_Pr›îtyC⁄åﬁ_NoPage


2523 
	#ex_B⁄obo_Pr›îtyC⁄åﬁ_NoPage
 "IDL:B⁄obo/Pr›îtyC⁄åﬁ/NoPage:1.0"

	)

2524 #i‡!
deföed
(
_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_deföed
)

2525 
	#_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_deföed
 1

	)

2526 
B⁄obo_Pr›îtyC⁄åﬁ_NoPage_ty≥
 
	tB⁄obo_Pr›îtyC⁄åﬁ_NoPage
;

2527 
	sB⁄obo_Pr›îtyC⁄åﬁ_NoPage_ty≥
 {

2528 
	gdummy
;

2531 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_0
)

2532 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_0
 'B'

	)

2533 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_1
 'o'

	)

2534 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_2
 'n'

	)

2535 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_3
 'o'

	)

2536 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_4
 'b'

	)

2537 
	#TC_IMPL_TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_5
 'o'

	)

2538 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2543 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_°ru˘
;

2544 
	#TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage_°ru˘
)

	)

2546 
	#B⁄obo_Pr›îtyC⁄åﬁ_NoPage__Æloc
(Ë((
B⁄obo_Pr›îtyC⁄åﬁ_NoPage
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage
))

	)

2547 
	#B⁄obo_Pr›îtyC⁄åﬁ_NoPage__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Pr›îtyC⁄åﬁ_NoPage
,(m),(d))

	)

2549 #i‡!
deföed
(
_B⁄obo_ZoomLevñ_deföed
)

2550 
	#_B⁄obo_ZoomLevñ_deföed
 1

	)

2551 
CORBA_Êﬂt
 
	tB⁄obo_ZoomLevñ
;

2552 
	#B⁄obo_ZoomLevñ_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_Êﬂt_m¨shÆ
((x),(y),(z))

	)

2553 
	#B⁄obo_ZoomLevñ_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_Êﬂt_dem¨shÆ
((x),(y),(z),(i))

	)

2554 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ZoomLevñ_0
)

2555 
	#TC_IMPL_TC_B⁄obo_ZoomLevñ_0
 'B'

	)

2556 
	#TC_IMPL_TC_B⁄obo_ZoomLevñ_1
 'o'

	)

2557 
	#TC_IMPL_TC_B⁄obo_ZoomLevñ_2
 'n'

	)

2558 
	#TC_IMPL_TC_B⁄obo_ZoomLevñ_3
 'o'

	)

2559 
	#TC_IMPL_TC_B⁄obo_ZoomLevñ_4
 'b'

	)

2560 
	#TC_IMPL_TC_B⁄obo_ZoomLevñ_5
 'o'

	)

2561 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2566 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ZoomLevñ_°ru˘
;

2567 
	#TC_B⁄obo_ZoomLevñ
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ZoomLevñ_°ru˘
)

	)

2569 
	#B⁄obo_ZoomLevñ__Æloc
(Ë((
B⁄obo_ZoomLevñ
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Êﬂt
))

	)

2570 
	#B⁄obo_ZoomLevñ__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Êﬂt
,(m),(d))

	)

2572 #i‡!
deföed
(
_B⁄obo_ZoomLevñName_deföed
)

2573 
	#_B⁄obo_ZoomLevñName_deföed
 1

	)

2574 
CORBA_°rög
 
	tB⁄obo_ZoomLevñName
;

2575 
	#B⁄obo_ZoomLevñName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2576 
	#B⁄obo_ZoomLevñName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2577 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ZoomLevñName_0
)

2578 
	#TC_IMPL_TC_B⁄obo_ZoomLevñName_0
 'B'

	)

2579 
	#TC_IMPL_TC_B⁄obo_ZoomLevñName_1
 'o'

	)

2580 
	#TC_IMPL_TC_B⁄obo_ZoomLevñName_2
 'n'

	)

2581 
	#TC_IMPL_TC_B⁄obo_ZoomLevñName_3
 'o'

	)

2582 
	#TC_IMPL_TC_B⁄obo_ZoomLevñName_4
 'b'

	)

2583 
	#TC_IMPL_TC_B⁄obo_ZoomLevñName_5
 'o'

	)

2584 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2589 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ZoomLevñName_°ru˘
;

2590 
	#TC_B⁄obo_ZoomLevñName
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ZoomLevñName_°ru˘
)

	)

2592 
	#B⁄obo_ZoomLevñName__Æloc
(Ë((
B⁄obo_ZoomLevñName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

2593 
	#B⁄obo_ZoomLevñName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

2595 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Êﬂt
)

2596 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Êﬂt
 1

	)

2597 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_0
 'B'

	)

2598 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_1
 'o'

	)

2599 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_2
 'n'

	)

2600 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_3
 'o'

	)

2601 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_4
 'b'

	)

2602 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_5
 'o'

	)

2603 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Êﬂt_deföed
)

2604 
	#_CORBA_£quí˚_CORBA_Êﬂt_deföed
 1

	)

2605 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Êﬂt
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Êﬂt
;

2607 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_0
)

2608 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_0
 'B'

	)

2609 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_1
 'o'

	)

2610 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_2
 'n'

	)

2611 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_3
 'o'

	)

2612 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_4
 'b'

	)

2613 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_5
 'o'

	)

2614 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2619 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Êﬂt_°ru˘
;

2620 
	#TC_CORBA_£quí˚_CORBA_Êﬂt
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Êﬂt_°ru˘
)

	)

2622 
	#CORBA_£quí˚_CORBA_Êﬂt__Æloc
(Ë((
CORBA_£quí˚_CORBA_Êﬂt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
))

	)

2623 
	#CORBA_£quí˚_CORBA_Êﬂt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
,(m),(d))

	)

2624 
	#CORBA_£quí˚_CORBA_Êﬂt_Ælocbuf
(
l
Ë((
CORBA_Êﬂt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
, (l)))

	)

2625 
	#CORBA_£quí˚_CORBA_Êﬂt_Ælocbuf
(
l
Ë((
CORBA_Êﬂt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
, (l)))

	)

2627 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_ZoomLevñ
)

2628 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_ZoomLevñ
 1

	)

2629 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñ_0
 'B'

	)

2630 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñ_1
 'o'

	)

2631 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñ_2
 'n'

	)

2632 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñ_3
 'o'

	)

2633 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñ_4
 'b'

	)

2634 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñ_5
 'o'

	)

2635 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_ZoomLevñ_deföed
)

2636 
	#_CORBA_£quí˚_B⁄obo_ZoomLevñ_deföed
 1

	)

2637 
CORBA_£quí˚_CORBA_Êﬂt
 
	tCORBA_£quí˚_B⁄obo_ZoomLevñ
;

2639 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_0
)

2640 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_0
 'B'

	)

2641 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_1
 'o'

	)

2642 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_2
 'n'

	)

2643 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_3
 'o'

	)

2644 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_4
 'b'

	)

2645 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_5
 'o'

	)

2646 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2651 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_°ru˘
;

2652 
	#TC_CORBA_£quí˚_B⁄obo_ZoomLevñ
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_ZoomLevñ_°ru˘
)

	)

2654 
	#CORBA_£quí˚_B⁄obo_ZoomLevñ__Æloc
 
CORBA_£quí˚_CORBA_Êﬂt__Æloc


	)

2655 
	#CORBA_£quí˚_B⁄obo_ZoomLevñ__‰ìkids
 
CORBA_£quí˚_CORBA_Êﬂt__‰ìkids


	)

2656 
	#CORBA_£quí˚_B⁄obo_ZoomLevñ_Ælocbuf
 
CORBA_£quí˚_CORBA_Êﬂt_Ælocbuf


	)

2657 
	#CORBA_£quí˚_B⁄obo_ZoomLevñ_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Êﬂt_m¨shÆ
((x),(y),(z))

	)

2658 
	#CORBA_£quí˚_B⁄obo_ZoomLevñ_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Êﬂt_dem¨shÆ
((x),(y),(z),(i))

	)

2660 #i‡!
deföed
(
_B⁄obo_ZoomLevñLi°_deföed
)

2661 
	#_B⁄obo_ZoomLevñLi°_deföed
 1

	)

2662 
CORBA_£quí˚_B⁄obo_ZoomLevñ
 
	tB⁄obo_ZoomLevñLi°
;

2663 
	#B⁄obo_ZoomLevñLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_ZoomLevñ_m¨shÆ
((x),(y),(z))

	)

2664 
	#B⁄obo_ZoomLevñLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_ZoomLevñ_dem¨shÆ
((x),(y),(z),(i))

	)

2665 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ZoomLevñLi°_0
)

2666 
	#TC_IMPL_TC_B⁄obo_ZoomLevñLi°_0
 'B'

	)

2667 
	#TC_IMPL_TC_B⁄obo_ZoomLevñLi°_1
 'o'

	)

2668 
	#TC_IMPL_TC_B⁄obo_ZoomLevñLi°_2
 'n'

	)

2669 
	#TC_IMPL_TC_B⁄obo_ZoomLevñLi°_3
 'o'

	)

2670 
	#TC_IMPL_TC_B⁄obo_ZoomLevñLi°_4
 'b'

	)

2671 
	#TC_IMPL_TC_B⁄obo_ZoomLevñLi°_5
 'o'

	)

2672 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2677 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ZoomLevñLi°_°ru˘
;

2678 
	#TC_B⁄obo_ZoomLevñLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ZoomLevñLi°_°ru˘
)

	)

2680 
	#B⁄obo_ZoomLevñLi°__Æloc
(Ë((
B⁄obo_ZoomLevñLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_ZoomLevñ
))

	)

2681 
	#B⁄obo_ZoomLevñLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_ZoomLevñ
,(m),(d))

	)

2682 
	#B⁄obo_ZoomLevñLi°_Ælocbuf
(
l
Ë((
B⁄obo_ZoomLevñ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_ZoomLevñ
, (l)))

	)

2684 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

2685 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

2686 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

2687 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

2688 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

2689 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

2690 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

2691 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

2692 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

2693 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

2694 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

2696 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

2697 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

2698 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

2699 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

2700 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

2701 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

2702 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

2703 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2708 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

2709 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

2711 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

2712 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

2713 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2714 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2716 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_ZoomLevñName
)

2717 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_ZoomLevñName
 1

	)

2718 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñName_0
 'B'

	)

2719 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñName_1
 'o'

	)

2720 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñName_2
 'n'

	)

2721 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñName_3
 'o'

	)

2722 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñName_4
 'b'

	)

2723 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_ZoomLevñName_5
 'o'

	)

2724 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_ZoomLevñName_deföed
)

2725 
	#_CORBA_£quí˚_B⁄obo_ZoomLevñName_deföed
 1

	)

2726 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_£quí˚_B⁄obo_ZoomLevñName
;

2728 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_0
)

2729 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_0
 'B'

	)

2730 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_1
 'o'

	)

2731 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_2
 'n'

	)

2732 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_3
 'o'

	)

2733 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_4
 'b'

	)

2734 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_5
 'o'

	)

2735 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2740 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_°ru˘
;

2741 
	#TC_CORBA_£quí˚_B⁄obo_ZoomLevñName
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_ZoomLevñName_°ru˘
)

	)

2743 
	#CORBA_£quí˚_B⁄obo_ZoomLevñName__Æloc
 
CORBA_£quí˚_CORBA_°rög__Æloc


	)

2744 
	#CORBA_£quí˚_B⁄obo_ZoomLevñName__‰ìkids
 
CORBA_£quí˚_CORBA_°rög__‰ìkids


	)

2745 
	#CORBA_£quí˚_B⁄obo_ZoomLevñName_Ælocbuf
 
CORBA_£quí˚_CORBA_°rög_Ælocbuf


	)

2746 
	#CORBA_£quí˚_B⁄obo_ZoomLevñName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2747 
	#CORBA_£quí˚_B⁄obo_ZoomLevñName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2749 #i‡!
deföed
(
_B⁄obo_ZoomLevñNameLi°_deföed
)

2750 
	#_B⁄obo_ZoomLevñNameLi°_deföed
 1

	)

2751 
CORBA_£quí˚_B⁄obo_ZoomLevñName
 
	tB⁄obo_ZoomLevñNameLi°
;

2752 
	#B⁄obo_ZoomLevñNameLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_ZoomLevñName_m¨shÆ
((x),(y),(z))

	)

2753 
	#B⁄obo_ZoomLevñNameLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_ZoomLevñName_dem¨shÆ
((x),(y),(z),(i))

	)

2754 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_0
)

2755 
	#TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_0
 'B'

	)

2756 
	#TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_1
 'o'

	)

2757 
	#TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_2
 'n'

	)

2758 
	#TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_3
 'o'

	)

2759 
	#TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_4
 'b'

	)

2760 
	#TC_IMPL_TC_B⁄obo_ZoomLevñNameLi°_5
 'o'

	)

2761 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2766 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ZoomLevñNameLi°_°ru˘
;

2767 
	#TC_B⁄obo_ZoomLevñNameLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ZoomLevñNameLi°_°ru˘
)

	)

2769 
	#B⁄obo_ZoomLevñNameLi°__Æloc
(Ë((
B⁄obo_ZoomLevñNameLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_ZoomLevñName
))

	)

2770 
	#B⁄obo_ZoomLevñNameLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_ZoomLevñName
,(m),(d))

	)

2771 
	#B⁄obo_ZoomLevñNameLi°_Ælocbuf
(
l
Ë((
B⁄obo_ZoomLevñName
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_ZoomLevñName
, (l)))

	)

2773 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_ZoomabÀFøme
Ë&& !deföed(
_B⁄obo_ZoomabÀFøme_deföed
)

2774 
	#ORBIT_DECL_B⁄obo_ZoomabÀFøme
 1

	)

2775 
	#_B⁄obo_ZoomabÀFøme_deföed
 1

	)

2776 
	#B⁄obo_ZoomabÀFøme__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2777 
CORBA_Obje˘
 
	tB⁄obo_ZoomabÀFøme
;

2778 
CORBA_unsig√d_l⁄g
 
B⁄obo_ZoomabÀFøme__˛assid
;

2779 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ZoomabÀFøme_0
)

2780 
	#TC_IMPL_TC_B⁄obo_ZoomabÀFøme_0
 'B'

	)

2781 
	#TC_IMPL_TC_B⁄obo_ZoomabÀFøme_1
 'o'

	)

2782 
	#TC_IMPL_TC_B⁄obo_ZoomabÀFøme_2
 'n'

	)

2783 
	#TC_IMPL_TC_B⁄obo_ZoomabÀFøme_3
 'o'

	)

2784 
	#TC_IMPL_TC_B⁄obo_ZoomabÀFøme_4
 'b'

	)

2785 
	#TC_IMPL_TC_B⁄obo_ZoomabÀFøme_5
 'o'

	)

2786 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2791 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ZoomabÀFøme_°ru˘
;

2792 
	#TC_B⁄obo_ZoomabÀFøme
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ZoomabÀFøme_°ru˘
)

	)

2795 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_ZoomabÀ
Ë&& !deföed(
_B⁄obo_ZoomabÀ_deföed
)

2796 
	#ORBIT_DECL_B⁄obo_ZoomabÀ
 1

	)

2797 
	#_B⁄obo_ZoomabÀ_deföed
 1

	)

2798 
	#B⁄obo_ZoomabÀ__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2799 
CORBA_Obje˘
 
	tB⁄obo_ZoomabÀ
;

2800 
CORBA_unsig√d_l⁄g
 
B⁄obo_ZoomabÀ__˛assid
;

2801 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ZoomabÀ_0
)

2802 
	#TC_IMPL_TC_B⁄obo_ZoomabÀ_0
 'B'

	)

2803 
	#TC_IMPL_TC_B⁄obo_ZoomabÀ_1
 'o'

	)

2804 
	#TC_IMPL_TC_B⁄obo_ZoomabÀ_2
 'n'

	)

2805 
	#TC_IMPL_TC_B⁄obo_ZoomabÀ_3
 'o'

	)

2806 
	#TC_IMPL_TC_B⁄obo_ZoomabÀ_4
 'b'

	)

2807 
	#TC_IMPL_TC_B⁄obo_ZoomabÀ_5
 'o'

	)

2808 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2813 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ZoomabÀ_°ru˘
;

2814 
	#TC_B⁄obo_ZoomabÀ
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ZoomabÀ_°ru˘
)

	)

2817 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_IãmC⁄èöî
Ë&& !deföed(
_B⁄obo_IãmC⁄èöî_deföed
)

2818 
	#ORBIT_DECL_B⁄obo_IãmC⁄èöî
 1

	)

2819 
	#_B⁄obo_IãmC⁄èöî_deföed
 1

	)

2820 
	#B⁄obo_IãmC⁄èöî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2821 
CORBA_Obje˘
 
	tB⁄obo_IãmC⁄èöî
;

2822 
CORBA_unsig√d_l⁄g
 
B⁄obo_IãmC⁄èöî__˛assid
;

2823 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_IãmC⁄èöî_0
)

2824 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_0
 'B'

	)

2825 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_1
 'o'

	)

2826 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_2
 'n'

	)

2827 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_3
 'o'

	)

2828 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_4
 'b'

	)

2829 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_5
 'o'

	)

2830 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2835 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_IãmC⁄èöî_°ru˘
;

2836 
	#TC_B⁄obo_IãmC⁄èöî
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_IãmC⁄èöî_°ru˘
)

	)

2839 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

2840 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

2841 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

2842 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

2843 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

2844 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

2845 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

2846 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

2847 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

2848 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

2849 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

2851 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

2852 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

2853 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

2854 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

2855 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

2856 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

2857 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

2858 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2863 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

2864 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

2866 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

2867 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

2868 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2869 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2871 #i‡!
deföed
(
_B⁄obo_IãmC⁄èöî_Obje˘Names_deföed
)

2872 
	#_B⁄obo_IãmC⁄èöî_Obje˘Names_deföed
 1

	)

2873 
CORBA_£quí˚_CORBA_°rög
 
	tB⁄obo_IãmC⁄èöî_Obje˘Names
;

2874 
	#B⁄obo_IãmC⁄èöî_Obje˘Names_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2875 
	#B⁄obo_IãmC⁄èöî_Obje˘Names_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2876 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_0
)

2877 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_0
 'B'

	)

2878 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_1
 'o'

	)

2879 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_2
 'n'

	)

2880 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_3
 'o'

	)

2881 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_4
 'b'

	)

2882 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Obje˘Names_5
 'o'

	)

2883 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2888 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_IãmC⁄èöî_Obje˘Names_°ru˘
;

2889 
	#TC_B⁄obo_IãmC⁄èöî_Obje˘Names
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_IãmC⁄èöî_Obje˘Names_°ru˘
)

	)

2891 
	#B⁄obo_IãmC⁄èöî_Obje˘Names__Æloc
(Ë((
B⁄obo_IãmC⁄èöî_Obje˘Names
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

2892 
	#B⁄obo_IãmC⁄èöî_Obje˘Names__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

2893 
	#B⁄obo_IãmC⁄èöî_Obje˘Names_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

2895 #unde‡
ex_B⁄obo_IãmC⁄èöî_NŸFound


2896 
	#ex_B⁄obo_IãmC⁄èöî_NŸFound
 "IDL:B⁄obo/IãmC⁄èöî/NŸFound:1.0"

	)

2897 #i‡!
deföed
(
_B⁄obo_IãmC⁄èöî_NŸFound_deföed
)

2898 
	#_B⁄obo_IãmC⁄èöî_NŸFound_deföed
 1

	)

2899 
B⁄obo_IãmC⁄èöî_NŸFound_ty≥
 
	tB⁄obo_IãmC⁄èöî_NŸFound
;

2900 
	sB⁄obo_IãmC⁄èöî_NŸFound_ty≥
 {

2901 
	gdummy
;

2904 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_0
)

2905 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_0
 'B'

	)

2906 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_1
 'o'

	)

2907 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_2
 'n'

	)

2908 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_3
 'o'

	)

2909 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_4
 'b'

	)

2910 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_NŸFound_5
 'o'

	)

2911 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2916 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_IãmC⁄èöî_NŸFound_°ru˘
;

2917 
	#TC_B⁄obo_IãmC⁄èöî_NŸFound
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_IãmC⁄èöî_NŸFound_°ru˘
)

	)

2919 
	#B⁄obo_IãmC⁄èöî_NŸFound__Æloc
(Ë((
B⁄obo_IãmC⁄èöî_NŸFound
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_IãmC⁄èöî_NŸFound
))

	)

2920 
	#B⁄obo_IãmC⁄èöî_NŸFound__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_IãmC⁄èöî_NŸFound
,(m),(d))

	)

2922 #unde‡
ex_B⁄obo_IãmC⁄èöî_Sy¡axEº‹


2923 
	#ex_B⁄obo_IãmC⁄èöî_Sy¡axEº‹
 "IDL:B⁄obo/IãmC⁄èöî/Sy¡axEº‹:1.0"

	)

2924 #i‡!
deföed
(
_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_deföed
)

2925 
	#_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_deföed
 1

	)

2926 
B⁄obo_IãmC⁄èöî_Sy¡axEº‹_ty≥
 
	tB⁄obo_IãmC⁄èöî_Sy¡axEº‹
;

2927 
	sB⁄obo_IãmC⁄èöî_Sy¡axEº‹_ty≥
 {

2928 
	gdummy
;

2931 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_0
)

2932 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_0
 'B'

	)

2933 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_1
 'o'

	)

2934 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_2
 'n'

	)

2935 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_3
 'o'

	)

2936 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_4
 'b'

	)

2937 
	#TC_IMPL_TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_5
 'o'

	)

2938 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2943 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_°ru˘
;

2944 
	#TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹_°ru˘
)

	)

2946 
	#B⁄obo_IãmC⁄èöî_Sy¡axEº‹__Æloc
(Ë((
B⁄obo_IãmC⁄èöî_Sy¡axEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹
))

	)

2947 
	#B⁄obo_IãmC⁄èöî_Sy¡axEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_IãmC⁄èöî_Sy¡axEº‹
,(m),(d))

	)

2949 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2950 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2951 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'B'

	)

2952 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2953 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'n'

	)

2954 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 'o'

	)

2955 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'b'

	)

2956 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'o'

	)

2957 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2958 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2959 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2961 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2962 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'B'

	)

2963 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2964 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'n'

	)

2965 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 'o'

	)

2966 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'b'

	)

2967 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'o'

	)

2968 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2973 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2974 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2976 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2977 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2978 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2979 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2981 #i‡!
deföed
(
_B⁄obo_C™vas_pixbuf_deföed
)

2982 
	#_B⁄obo_C™vas_pixbuf_deföed
 1

	)

2983 
CORBA_£quí˚_CORBA_o˘ë
 
	tB⁄obo_C™vas_pixbuf
;

2984 
	#B⁄obo_C™vas_pixbuf_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2985 
	#B⁄obo_C™vas_pixbuf_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2986 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_pixbuf_0
)

2987 
	#TC_IMPL_TC_B⁄obo_C™vas_pixbuf_0
 'B'

	)

2988 
	#TC_IMPL_TC_B⁄obo_C™vas_pixbuf_1
 'o'

	)

2989 
	#TC_IMPL_TC_B⁄obo_C™vas_pixbuf_2
 'n'

	)

2990 
	#TC_IMPL_TC_B⁄obo_C™vas_pixbuf_3
 'o'

	)

2991 
	#TC_IMPL_TC_B⁄obo_C™vas_pixbuf_4
 'b'

	)

2992 
	#TC_IMPL_TC_B⁄obo_C™vas_pixbuf_5
 'o'

	)

2993 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


2998 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_pixbuf_°ru˘
;

2999 
	#TC_B⁄obo_C™vas_pixbuf
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_pixbuf_°ru˘
)

	)

3001 
	#B⁄obo_C™vas_pixbuf__Æloc
(Ë((
B⁄obo_C™vas_pixbuf
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3002 
	#B⁄obo_C™vas_pixbuf__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3003 
	#B⁄obo_C™vas_pixbuf_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3005 #i‡!
deföed
(
_B⁄obo_C™vas_öt32_deföed
)

3006 
	#_B⁄obo_C™vas_öt32_deföed
 1

	)

3007 
CORBA_l⁄g
 
	tB⁄obo_C™vas_öt32
;

3008 
	#B⁄obo_C™vas_öt32_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

3009 
	#B⁄obo_C™vas_öt32_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

3010 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_öt32_0
)

3011 
	#TC_IMPL_TC_B⁄obo_C™vas_öt32_0
 'B'

	)

3012 
	#TC_IMPL_TC_B⁄obo_C™vas_öt32_1
 'o'

	)

3013 
	#TC_IMPL_TC_B⁄obo_C™vas_öt32_2
 'n'

	)

3014 
	#TC_IMPL_TC_B⁄obo_C™vas_öt32_3
 'o'

	)

3015 
	#TC_IMPL_TC_B⁄obo_C™vas_öt32_4
 'b'

	)

3016 
	#TC_IMPL_TC_B⁄obo_C™vas_öt32_5
 'o'

	)

3017 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3022 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_öt32_°ru˘
;

3023 
	#TC_B⁄obo_C™vas_öt32
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_öt32_°ru˘
)

	)

3025 
	#B⁄obo_C™vas_öt32__Æloc
(Ë((
B⁄obo_C™vas_öt32
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

3026 
	#B⁄obo_C™vas_öt32__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

3028 #i‡!
deföed
(
_B⁄obo_C™vas_IRe˘_deföed
)

3029 
	#_B⁄obo_C™vas_IRe˘_deföed
 1

	)

3030 
B⁄obo_C™vas_IRe˘_ty≥
 
	tB⁄obo_C™vas_IRe˘
;

3031 
	sB⁄obo_C™vas_IRe˘_ty≥
 {

3032 
CORBA_l⁄g
 
	gx0
;

3033 
CORBA_l⁄g
 
	gy0
;

3034 
CORBA_l⁄g
 
	gx1
;

3035 
CORBA_l⁄g
 
	gy1
;

3038 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_IRe˘_0
)

3039 
	#TC_IMPL_TC_B⁄obo_C™vas_IRe˘_0
 'B'

	)

3040 
	#TC_IMPL_TC_B⁄obo_C™vas_IRe˘_1
 'o'

	)

3041 
	#TC_IMPL_TC_B⁄obo_C™vas_IRe˘_2
 'n'

	)

3042 
	#TC_IMPL_TC_B⁄obo_C™vas_IRe˘_3
 'o'

	)

3043 
	#TC_IMPL_TC_B⁄obo_C™vas_IRe˘_4
 'b'

	)

3044 
	#TC_IMPL_TC_B⁄obo_C™vas_IRe˘_5
 'o'

	)

3045 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3050 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_IRe˘_°ru˘
;

3051 
	#TC_B⁄obo_C™vas_IRe˘
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_IRe˘_°ru˘
)

	)

3053 
	#B⁄obo_C™vas_IRe˘__Æloc
(Ë((
B⁄obo_C™vas_IRe˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_IRe˘
))

	)

3054 
	#B⁄obo_C™vas_IRe˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_IRe˘
,(m),(d))

	)

3056 #i‡!
deföed
(
_B⁄obo_C™vas_DRe˘_deföed
)

3057 
	#_B⁄obo_C™vas_DRe˘_deföed
 1

	)

3058 
B⁄obo_C™vas_DRe˘_ty≥
 
	tB⁄obo_C™vas_DRe˘
;

3059 
	sB⁄obo_C™vas_DRe˘_ty≥
 {

3060 
CORBA_doubÀ
 
	gx0
;

3061 
CORBA_doubÀ
 
	gy0
;

3062 
CORBA_doubÀ
 
	gx1
;

3063 
CORBA_doubÀ
 
	gy1
;

3066 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_DRe˘_0
)

3067 
	#TC_IMPL_TC_B⁄obo_C™vas_DRe˘_0
 'B'

	)

3068 
	#TC_IMPL_TC_B⁄obo_C™vas_DRe˘_1
 'o'

	)

3069 
	#TC_IMPL_TC_B⁄obo_C™vas_DRe˘_2
 'n'

	)

3070 
	#TC_IMPL_TC_B⁄obo_C™vas_DRe˘_3
 'o'

	)

3071 
	#TC_IMPL_TC_B⁄obo_C™vas_DRe˘_4
 'b'

	)

3072 
	#TC_IMPL_TC_B⁄obo_C™vas_DRe˘_5
 'o'

	)

3073 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3078 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_DRe˘_°ru˘
;

3079 
	#TC_B⁄obo_C™vas_DRe˘
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_DRe˘_°ru˘
)

	)

3081 
	#B⁄obo_C™vas_DRe˘__Æloc
(Ë((
B⁄obo_C™vas_DRe˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_DRe˘
))

	)

3082 
	#B⁄obo_C™vas_DRe˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_DRe˘
,(m),(d))

	)

3084 #i‚de‡
B⁄obo_C™vas_IS_BG


3085 
	#B⁄obo_C™vas_IS_BG
 1

	)

3088 #i‚de‡
B⁄obo_C™vas_IS_BUF


3089 
	#B⁄obo_C™vas_IS_BUF
 2

	)

3092 #i‡!
deföed
(
_B⁄obo_C™vas_afföe_deföed
)

3093 
	#_B⁄obo_C™vas_afföe_deföed
 1

	)

3094 
CORBA_doubÀ
 
	tB⁄obo_C™vas_afföe
[6];

3095 
CORBA_doubÀ
 
	tB⁄obo_C™vas_afföe_¶i˚
;

3096 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_afföe_0
)

3097 
	#TC_IMPL_TC_B⁄obo_C™vas_afföe_0
 'B'

	)

3098 
	#TC_IMPL_TC_B⁄obo_C™vas_afföe_1
 'o'

	)

3099 
	#TC_IMPL_TC_B⁄obo_C™vas_afföe_2
 'n'

	)

3100 
	#TC_IMPL_TC_B⁄obo_C™vas_afföe_3
 'o'

	)

3101 
	#TC_IMPL_TC_B⁄obo_C™vas_afföe_4
 'b'

	)

3102 
	#TC_IMPL_TC_B⁄obo_C™vas_afföe_5
 'o'

	)

3103 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3108 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_afföe_°ru˘
;

3109 
	#TC_B⁄obo_C™vas_afföe
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_afföe_°ru˘
)

	)

3111 
	#B⁄obo_C™vas_afföe__Æloc
(Ë((
B⁄obo_C™vas_afföe_¶i˚
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_afföe
))

	)

3112 
	#B⁄obo_C™vas_afföe__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_afföe
,(m),(d))

	)

3114 #i‡!
deföed
(
_B⁄obo_C™vas_Buf_deföed
)

3115 
	#_B⁄obo_C™vas_Buf_deföed
 1

	)

3116 
B⁄obo_C™vas_Buf_ty≥
 
	tB⁄obo_C™vas_Buf
;

3117 
	sB⁄obo_C™vas_Buf_ty≥
 {

3118 
B⁄obo_C™vas_pixbuf
 
	grgb_buf
;

3119 
CORBA_l⁄g
 
	grow_°ride
;

3120 
B⁄obo_C™vas_IRe˘
 
	gª˘
;

3121 
B⁄obo_C™vas_öt32
 
	gbg_cﬁ‹
;

3122 
CORBA_sh‹t
 
	gÊags
;

3125 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_Buf_0
)

3126 
	#TC_IMPL_TC_B⁄obo_C™vas_Buf_0
 'B'

	)

3127 
	#TC_IMPL_TC_B⁄obo_C™vas_Buf_1
 'o'

	)

3128 
	#TC_IMPL_TC_B⁄obo_C™vas_Buf_2
 'n'

	)

3129 
	#TC_IMPL_TC_B⁄obo_C™vas_Buf_3
 'o'

	)

3130 
	#TC_IMPL_TC_B⁄obo_C™vas_Buf_4
 'b'

	)

3131 
	#TC_IMPL_TC_B⁄obo_C™vas_Buf_5
 'o'

	)

3132 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3137 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_Buf_°ru˘
;

3138 
	#TC_B⁄obo_C™vas_Buf
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_Buf_°ru˘
)

	)

3140 
	#B⁄obo_C™vas_Buf__Æloc
(Ë((
B⁄obo_C™vas_Buf
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_Buf
))

	)

3141 
	#B⁄obo_C™vas_Buf__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_Buf
,(m),(d))

	)

3143 #i‡!
deföed
(
_B⁄obo_C™vas_Poöt_deföed
)

3144 
	#_B⁄obo_C™vas_Poöt_deföed
 1

	)

3145 
B⁄obo_C™vas_Poöt_ty≥
 
	tB⁄obo_C™vas_Poöt
;

3146 
	sB⁄obo_C™vas_Poöt_ty≥
 {

3147 
CORBA_doubÀ
 
	gx
;

3148 
CORBA_doubÀ
 
	gy
;

3151 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_Poöt_0
)

3152 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöt_0
 'B'

	)

3153 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöt_1
 'o'

	)

3154 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöt_2
 'n'

	)

3155 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöt_3
 'o'

	)

3156 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöt_4
 'b'

	)

3157 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöt_5
 'o'

	)

3158 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3163 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_Poöt_°ru˘
;

3164 
	#TC_B⁄obo_C™vas_Poöt
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_Poöt_°ru˘
)

	)

3166 
	#B⁄obo_C™vas_Poöt__Æloc
(Ë((
B⁄obo_C™vas_Poöt
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_Poöt
))

	)

3167 
	#B⁄obo_C™vas_Poöt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_Poöt
,(m),(d))

	)

3169 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_C™vas_Poöt
)

3170 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_C™vas_Poöt
 1

	)

3171 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_Poöt_0
 'B'

	)

3172 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_Poöt_1
 'o'

	)

3173 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_Poöt_2
 'n'

	)

3174 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_Poöt_3
 'o'

	)

3175 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_Poöt_4
 'b'

	)

3176 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_Poöt_5
 'o'

	)

3177 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_C™vas_Poöt_deföed
)

3178 
	#_CORBA_£quí˚_B⁄obo_C™vas_Poöt_deföed
 1

	)

3179 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_C™vas_Poöt
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_C™vas_Poöt
;

3181 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_0
)

3182 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_0
 'B'

	)

3183 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_1
 'o'

	)

3184 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_2
 'n'

	)

3185 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_3
 'o'

	)

3186 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_4
 'b'

	)

3187 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_5
 'o'

	)

3188 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3193 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_°ru˘
;

3194 
	#TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt_°ru˘
)

	)

3196 
	#CORBA_£quí˚_B⁄obo_C™vas_Poöt__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_C™vas_Poöt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
))

	)

3197 
	#CORBA_£quí˚_B⁄obo_C™vas_Poöt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
,(m),(d))

	)

3198 
	#CORBA_£quí˚_B⁄obo_C™vas_Poöt_Ælocbuf
(
l
Ë((
B⁄obo_C™vas_Poöt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
, (l)))

	)

3199 
	#CORBA_£quí˚_B⁄obo_C™vas_Poöt_Ælocbuf
(
l
Ë((
B⁄obo_C™vas_Poöt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
, (l)))

	)

3201 #i‡!
deföed
(
_B⁄obo_C™vas_Poöts_deföed
)

3202 
	#_B⁄obo_C™vas_Poöts_deföed
 1

	)

3203 
CORBA_£quí˚_B⁄obo_C™vas_Poöt
 
	tB⁄obo_C™vas_Poöts
;

3204 
	#B⁄obo_C™vas_Poöts_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_C™vas_Poöt_m¨shÆ
((x),(y),(z))

	)

3205 
	#B⁄obo_C™vas_Poöts_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_C™vas_Poöt_dem¨shÆ
((x),(y),(z),(i))

	)

3206 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_Poöts_0
)

3207 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöts_0
 'B'

	)

3208 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöts_1
 'o'

	)

3209 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöts_2
 'n'

	)

3210 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöts_3
 'o'

	)

3211 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöts_4
 'b'

	)

3212 
	#TC_IMPL_TC_B⁄obo_C™vas_Poöts_5
 'o'

	)

3213 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3218 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_Poöts_°ru˘
;

3219 
	#TC_B⁄obo_C™vas_Poöts
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_Poöts_°ru˘
)

	)

3221 
	#B⁄obo_C™vas_Poöts__Æloc
(Ë((
B⁄obo_C™vas_Poöts
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
))

	)

3222 
	#B⁄obo_C™vas_Poöts__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
,(m),(d))

	)

3223 
	#B⁄obo_C™vas_Poöts_Ælocbuf
(
l
Ë((
B⁄obo_C™vas_Poöt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_Poöt
, (l)))

	)

3225 #i‡!
deföed
(
_B⁄obo_C™vas_SVPSegmít_deföed
)

3226 
	#_B⁄obo_C™vas_SVPSegmít_deföed
 1

	)

3227 
B⁄obo_C™vas_SVPSegmít_ty≥
 
	tB⁄obo_C™vas_SVPSegmít
;

3228 
	sB⁄obo_C™vas_SVPSegmít_ty≥
 {

3229 
CORBA_boﬁón
 
	gup
;

3230 
B⁄obo_C™vas_DRe˘
 
	gbbox
;

3231 
B⁄obo_C™vas_Poöts
 
	gpoöts
;

3234 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_0
)

3235 
	#TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_0
 'B'

	)

3236 
	#TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_1
 'o'

	)

3237 
	#TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_2
 'n'

	)

3238 
	#TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_3
 'o'

	)

3239 
	#TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_4
 'b'

	)

3240 
	#TC_IMPL_TC_B⁄obo_C™vas_SVPSegmít_5
 'o'

	)

3241 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3246 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_SVPSegmít_°ru˘
;

3247 
	#TC_B⁄obo_C™vas_SVPSegmít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_SVPSegmít_°ru˘
)

	)

3249 
	#B⁄obo_C™vas_SVPSegmít__Æloc
(Ë((
B⁄obo_C™vas_SVPSegmít
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_SVPSegmít
))

	)

3250 
	#B⁄obo_C™vas_SVPSegmít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_SVPSegmít
,(m),(d))

	)

3252 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
)

3253 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
 1

	)

3254 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_0
 'B'

	)

3255 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_1
 'o'

	)

3256 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_2
 'n'

	)

3257 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_3
 'o'

	)

3258 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_4
 'b'

	)

3259 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_5
 'o'

	)

3260 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_deföed
)

3261 
	#_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_deföed
 1

	)

3262 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_C™vas_SVPSegmít
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
;

3264 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_0
)

3265 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_0
 'B'

	)

3266 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_1
 'o'

	)

3267 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_2
 'n'

	)

3268 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_3
 'o'

	)

3269 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_4
 'b'

	)

3270 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_5
 'o'

	)

3271 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3276 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_°ru˘
;

3277 
	#TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_°ru˘
)

	)

3279 
	#CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
))

	)

3280 
	#CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
,(m),(d))

	)

3281 
	#CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_Ælocbuf
(
l
Ë((
B⁄obo_C™vas_SVPSegmít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
, (l)))

	)

3282 
	#CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_Ælocbuf
(
l
Ë((
B⁄obo_C™vas_SVPSegmít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
, (l)))

	)

3284 #i‡!
deföed
(
_B⁄obo_C™vas_SVP_deföed
)

3285 
	#_B⁄obo_C™vas_SVP_deföed
 1

	)

3286 
CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
 
	tB⁄obo_C™vas_SVP
;

3287 
	#B⁄obo_C™vas_SVP_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_m¨shÆ
((x),(y),(z))

	)

3288 
	#B⁄obo_C™vas_SVP_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít_dem¨shÆ
((x),(y),(z),(i))

	)

3289 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_SVP_0
)

3290 
	#TC_IMPL_TC_B⁄obo_C™vas_SVP_0
 'B'

	)

3291 
	#TC_IMPL_TC_B⁄obo_C™vas_SVP_1
 'o'

	)

3292 
	#TC_IMPL_TC_B⁄obo_C™vas_SVP_2
 'n'

	)

3293 
	#TC_IMPL_TC_B⁄obo_C™vas_SVP_3
 'o'

	)

3294 
	#TC_IMPL_TC_B⁄obo_C™vas_SVP_4
 'b'

	)

3295 
	#TC_IMPL_TC_B⁄obo_C™vas_SVP_5
 'o'

	)

3296 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3301 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_SVP_°ru˘
;

3302 
	#TC_B⁄obo_C™vas_SVP
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_SVP_°ru˘
)

	)

3304 
	#B⁄obo_C™vas_SVP__Æloc
(Ë((
B⁄obo_C™vas_SVP
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
))

	)

3305 
	#B⁄obo_C™vas_SVP__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
,(m),(d))

	)

3306 
	#B⁄obo_C™vas_SVP_Ælocbuf
(
l
Ë((
B⁄obo_C™vas_SVPSegmít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_C™vas_SVPSegmít
, (l)))

	)

3308 #i‡!
deföed
(
_B⁄obo_C™vas_AπUTA_deföed
)

3309 
	#_B⁄obo_C™vas_AπUTA_deföed
 1

	)

3310 
B⁄obo_C™vas_AπUTA_ty≥
 
	tB⁄obo_C™vas_AπUTA
;

3311 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g
)

3312 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g
 1

	)

3313 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_0
 'B'

	)

3314 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_1
 'o'

	)

3315 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_2
 'n'

	)

3316 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_3
 'o'

	)

3317 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_4
 'b'

	)

3318 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_5
 'o'

	)

3319 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_l⁄g_deföed
)

3320 
	#_CORBA_£quí˚_CORBA_l⁄g_deföed
 1

	)

3321 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_l⁄g
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_l⁄g
;

3323 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_0
)

3324 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_0
 'B'

	)

3325 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_1
 'o'

	)

3326 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_2
 'n'

	)

3327 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_3
 'o'

	)

3328 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_4
 'b'

	)

3329 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_5
 'o'

	)

3330 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3335 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_l⁄g_°ru˘
;

3336 
	#TC_CORBA_£quí˚_CORBA_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_l⁄g_°ru˘
)

	)

3338 
	#CORBA_£quí˚_CORBA_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g
))

	)

3339 
	#CORBA_£quí˚_CORBA_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g
,(m),(d))

	)

3340 
	#CORBA_£quí˚_CORBA_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

3341 
	#CORBA_£quí˚_CORBA_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

3343 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_C™vas_öt32
)

3344 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_C™vas_öt32
 1

	)

3345 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_öt32_0
 'B'

	)

3346 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_öt32_1
 'o'

	)

3347 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_öt32_2
 'n'

	)

3348 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_öt32_3
 'o'

	)

3349 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_öt32_4
 'b'

	)

3350 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_C™vas_öt32_5
 'o'

	)

3351 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_C™vas_öt32_deföed
)

3352 
	#_CORBA_£quí˚_B⁄obo_C™vas_öt32_deföed
 1

	)

3353 
CORBA_£quí˚_CORBA_l⁄g
 
	tCORBA_£quí˚_B⁄obo_C™vas_öt32
;

3355 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_0
)

3356 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_0
 'B'

	)

3357 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_1
 'o'

	)

3358 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_2
 'n'

	)

3359 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_3
 'o'

	)

3360 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_4
 'b'

	)

3361 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_5
 'o'

	)

3362 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3367 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_°ru˘
;

3368 
	#TC_CORBA_£quí˚_B⁄obo_C™vas_öt32
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_C™vas_öt32_°ru˘
)

	)

3370 
	#CORBA_£quí˚_B⁄obo_C™vas_öt32__Æloc
 
CORBA_£quí˚_CORBA_l⁄g__Æloc


	)

3371 
	#CORBA_£quí˚_B⁄obo_C™vas_öt32__‰ìkids
 
CORBA_£quí˚_CORBA_l⁄g__‰ìkids


	)

3372 
	#CORBA_£quí˚_B⁄obo_C™vas_öt32_Ælocbuf
 
CORBA_£quí˚_CORBA_l⁄g_Ælocbuf


	)

3373 
	#CORBA_£quí˚_B⁄obo_C™vas_öt32_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

3374 
	#CORBA_£quí˚_B⁄obo_C™vas_öt32_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

3376 
	sB⁄obo_C™vas_AπUTA_ty≥
 {

3377 
CORBA_sh‹t
 
	gx0
;

3378 
CORBA_sh‹t
 
	gy0
;

3379 
CORBA_sh‹t
 
	gwidth
;

3380 
CORBA_sh‹t
 
	gheight
;

3381 
CORBA_£quí˚_B⁄obo_C™vas_öt32
 
	gutûes
;

3384 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_AπUTA_0
)

3385 
	#TC_IMPL_TC_B⁄obo_C™vas_AπUTA_0
 'B'

	)

3386 
	#TC_IMPL_TC_B⁄obo_C™vas_AπUTA_1
 'o'

	)

3387 
	#TC_IMPL_TC_B⁄obo_C™vas_AπUTA_2
 'n'

	)

3388 
	#TC_IMPL_TC_B⁄obo_C™vas_AπUTA_3
 'o'

	)

3389 
	#TC_IMPL_TC_B⁄obo_C™vas_AπUTA_4
 'b'

	)

3390 
	#TC_IMPL_TC_B⁄obo_C™vas_AπUTA_5
 'o'

	)

3391 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3396 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_AπUTA_°ru˘
;

3397 
	#TC_B⁄obo_C™vas_AπUTA
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_AπUTA_°ru˘
)

	)

3399 
	#B⁄obo_C™vas_AπUTA__Æloc
(Ë((
B⁄obo_C™vas_AπUTA
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_AπUTA
))

	)

3400 
	#B⁄obo_C™vas_AπUTA__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_AπUTA
,(m),(d))

	)

3402 #i‡!
deföed
(
_B⁄obo_C™vas_Sèã_deföed
)

3403 
	#_B⁄obo_C™vas_Sèã_deföed
 1

	)

3404 
B⁄obo_C™vas_Sèã_ty≥
 
	tB⁄obo_C™vas_Sèã
;

3405 
	sB⁄obo_C™vas_Sèã_ty≥
 {

3406 
B⁄obo_C™vas_afföe
 
	gôem_aff
;

3407 
CORBA_doubÀ
 
	gpixñs_≥r_unô
;

3408 
CORBA_doubÀ
 
	gˇnvas_s¸ﬁl_x1
;

3409 
CORBA_doubÀ
 
	gˇnvas_s¸ﬁl_y1
;

3410 
CORBA_l⁄g
 
	gzoom_xofs
;

3411 
CORBA_l⁄g
 
	gzoom_yofs
;

3412 
CORBA_l⁄g
 
	gxoff£t
;

3413 
CORBA_l⁄g
 
	gyoff£t
;

3416 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_Sèã_0
)

3417 
	#TC_IMPL_TC_B⁄obo_C™vas_Sèã_0
 'B'

	)

3418 
	#TC_IMPL_TC_B⁄obo_C™vas_Sèã_1
 'o'

	)

3419 
	#TC_IMPL_TC_B⁄obo_C™vas_Sèã_2
 'n'

	)

3420 
	#TC_IMPL_TC_B⁄obo_C™vas_Sèã_3
 'o'

	)

3421 
	#TC_IMPL_TC_B⁄obo_C™vas_Sèã_4
 'b'

	)

3422 
	#TC_IMPL_TC_B⁄obo_C™vas_Sèã_5
 'o'

	)

3423 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3428 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_Sèã_°ru˘
;

3429 
	#TC_B⁄obo_C™vas_Sèã
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_Sèã_°ru˘
)

	)

3431 
	#B⁄obo_C™vas_Sèã__Æloc
(Ë((
B⁄obo_C™vas_Sèã
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_C™vas_Sèã
))

	)

3432 
	#B⁄obo_C™vas_Sèã__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_C™vas_Sèã
,(m),(d))

	)

3434 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C™vas_Comp⁄ít
Ë&& !deföed(
_B⁄obo_C™vas_Comp⁄ít_deföed
)

3435 
	#ORBIT_DECL_B⁄obo_C™vas_Comp⁄ít
 1

	)

3436 
	#_B⁄obo_C™vas_Comp⁄ít_deföed
 1

	)

3437 
	#B⁄obo_C™vas_Comp⁄ít__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3438 
CORBA_Obje˘
 
	tB⁄obo_C™vas_Comp⁄ít
;

3439 
CORBA_unsig√d_l⁄g
 
B⁄obo_C™vas_Comp⁄ít__˛assid
;

3440 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_0
)

3441 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_0
 'B'

	)

3442 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_1
 'o'

	)

3443 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_2
 'n'

	)

3444 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_3
 'o'

	)

3445 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_4
 'b'

	)

3446 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ít_5
 'o'

	)

3447 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3452 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_Comp⁄ít_°ru˘
;

3453 
	#TC_B⁄obo_C™vas_Comp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_Comp⁄ít_°ru˘
)

	)

3456 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C™vas_Comp⁄ítProxy
Ë&& !deföed(
_B⁄obo_C™vas_Comp⁄ítProxy_deföed
)

3457 
	#ORBIT_DECL_B⁄obo_C™vas_Comp⁄ítProxy
 1

	)

3458 
	#_B⁄obo_C™vas_Comp⁄ítProxy_deföed
 1

	)

3459 
	#B⁄obo_C™vas_Comp⁄ítProxy__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3460 
CORBA_Obje˘
 
	tB⁄obo_C™vas_Comp⁄ítProxy
;

3461 
CORBA_unsig√d_l⁄g
 
B⁄obo_C™vas_Comp⁄ítProxy__˛assid
;

3462 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_0
)

3463 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_0
 'B'

	)

3464 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_1
 'o'

	)

3465 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_2
 'n'

	)

3466 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_3
 'o'

	)

3467 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_4
 'b'

	)

3468 
	#TC_IMPL_TC_B⁄obo_C™vas_Comp⁄ítProxy_5
 'o'

	)

3469 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3474 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vas_Comp⁄ítProxy_°ru˘
;

3475 
	#TC_B⁄obo_C™vas_Comp⁄ítProxy
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vas_Comp⁄ítProxy_°ru˘
)

	)

3478 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C⁄åﬁFa˘‹y
Ë&& !deföed(
_B⁄obo_C⁄åﬁFa˘‹y_deföed
)

3479 
	#ORBIT_DECL_B⁄obo_C⁄åﬁFa˘‹y
 1

	)

3480 
	#_B⁄obo_C⁄åﬁFa˘‹y_deföed
 1

	)

3481 
	#B⁄obo_C⁄åﬁFa˘‹y__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3482 
CORBA_Obje˘
 
	tB⁄obo_C⁄åﬁFa˘‹y
;

3483 
CORBA_unsig√d_l⁄g
 
B⁄obo_C⁄åﬁFa˘‹y__˛assid
;

3484 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_0
)

3485 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_0
 'B'

	)

3486 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_1
 'o'

	)

3487 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_2
 'n'

	)

3488 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_3
 'o'

	)

3489 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_4
 'b'

	)

3490 
	#TC_IMPL_TC_B⁄obo_C⁄åﬁFa˘‹y_5
 'o'

	)

3491 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3496 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C⁄åﬁFa˘‹y_°ru˘
;

3497 
	#TC_B⁄obo_C⁄åﬁFa˘‹y
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C⁄åﬁFa˘‹y_°ru˘
)

	)

3500 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_C™vasComp⁄ítFa˘‹y
Ë&& !deföed(
_B⁄obo_C™vasComp⁄ítFa˘‹y_deföed
)

3501 
	#ORBIT_DECL_B⁄obo_C™vasComp⁄ítFa˘‹y
 1

	)

3502 
	#_B⁄obo_C™vasComp⁄ítFa˘‹y_deföed
 1

	)

3503 
	#B⁄obo_C™vasComp⁄ítFa˘‹y__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3504 
CORBA_Obje˘
 
	tB⁄obo_C™vasComp⁄ítFa˘‹y
;

3505 
CORBA_unsig√d_l⁄g
 
B⁄obo_C™vasComp⁄ítFa˘‹y__˛assid
;

3506 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_0
)

3507 
	#TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_0
 'B'

	)

3508 
	#TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_1
 'o'

	)

3509 
	#TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_2
 'n'

	)

3510 
	#TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_3
 'o'

	)

3511 
	#TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_4
 'b'

	)

3512 
	#TC_IMPL_TC_B⁄obo_C™vasComp⁄ítFa˘‹y_5
 'o'

	)

3513 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3518 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_C™vasComp⁄ítFa˘‹y_°ru˘
;

3519 
	#TC_B⁄obo_C™vasComp⁄ítFa˘‹y
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_C™vasComp⁄ítFa˘‹y_°ru˘
)

	)

3522 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_EmbeddabÀ
Ë&& !deföed(
_B⁄obo_EmbeddabÀ_deföed
)

3523 
	#ORBIT_DECL_B⁄obo_EmbeddabÀ
 1

	)

3524 
	#_B⁄obo_EmbeddabÀ_deföed
 1

	)

3525 
	#B⁄obo_EmbeddabÀ__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3526 
CORBA_Obje˘
 
	tB⁄obo_EmbeddabÀ
;

3527 
CORBA_unsig√d_l⁄g
 
B⁄obo_EmbeddabÀ__˛assid
;

3528 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_EmbeddabÀ_0
)

3529 
	#TC_IMPL_TC_B⁄obo_EmbeddabÀ_0
 'B'

	)

3530 
	#TC_IMPL_TC_B⁄obo_EmbeddabÀ_1
 'o'

	)

3531 
	#TC_IMPL_TC_B⁄obo_EmbeddabÀ_2
 'n'

	)

3532 
	#TC_IMPL_TC_B⁄obo_EmbeddabÀ_3
 'o'

	)

3533 
	#TC_IMPL_TC_B⁄obo_EmbeddabÀ_4
 'b'

	)

3534 
	#TC_IMPL_TC_B⁄obo_EmbeddabÀ_5
 'o'

	)

3535 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3540 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_EmbeddabÀ_°ru˘
;

3541 
	#TC_B⁄obo_EmbeddabÀ
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_EmbeddabÀ_°ru˘
)

	)

3544 #i‡!
deföed
(
_B⁄obo_PrötSciss‹_deföed
)

3545 
	#_B⁄obo_PrötSciss‹_deföed
 1

	)

3546 
B⁄obo_PrötSciss‹_ty≥
 
	tB⁄obo_PrötSciss‹
;

3547 
	sB⁄obo_PrötSciss‹_ty≥
 {

3548 
CORBA_doubÀ
 
	gwidth_fú°_∑ge
;

3549 
CORBA_doubÀ
 
	gwidth_≥r_∑ge
;

3550 
CORBA_doubÀ
 
	gheight_fú°_∑ge
;

3551 
CORBA_doubÀ
 
	gheight_≥r_∑ge
;

3554 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_PrötSciss‹_0
)

3555 
	#TC_IMPL_TC_B⁄obo_PrötSciss‹_0
 'B'

	)

3556 
	#TC_IMPL_TC_B⁄obo_PrötSciss‹_1
 'o'

	)

3557 
	#TC_IMPL_TC_B⁄obo_PrötSciss‹_2
 'n'

	)

3558 
	#TC_IMPL_TC_B⁄obo_PrötSciss‹_3
 'o'

	)

3559 
	#TC_IMPL_TC_B⁄obo_PrötSciss‹_4
 'b'

	)

3560 
	#TC_IMPL_TC_B⁄obo_PrötSciss‹_5
 'o'

	)

3561 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3566 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_PrötSciss‹_°ru˘
;

3567 
	#TC_B⁄obo_PrötSciss‹
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_PrötSciss‹_°ru˘
)

	)

3569 
	#B⁄obo_PrötSciss‹__Æloc
(Ë((
B⁄obo_PrötSciss‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_PrötSciss‹
))

	)

3570 
	#B⁄obo_PrötSciss‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_PrötSciss‹
,(m),(d))

	)

3572 #i‡!
deföed
(
_B⁄obo_PrötDimísi⁄s_deföed
)

3573 
	#_B⁄obo_PrötDimísi⁄s_deföed
 1

	)

3574 
B⁄obo_PrötDimísi⁄s_ty≥
 
	tB⁄obo_PrötDimísi⁄s
;

3575 
	sB⁄obo_PrötDimísi⁄s_ty≥
 {

3576 
CORBA_doubÀ
 
	gwidth
;

3577 
CORBA_doubÀ
 
	gheight
;

3580 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_0
)

3581 
	#TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_0
 'B'

	)

3582 
	#TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_1
 'o'

	)

3583 
	#TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_2
 'n'

	)

3584 
	#TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_3
 'o'

	)

3585 
	#TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_4
 'b'

	)

3586 
	#TC_IMPL_TC_B⁄obo_PrötDimísi⁄s_5
 'o'

	)

3587 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3592 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_PrötDimísi⁄s_°ru˘
;

3593 
	#TC_B⁄obo_PrötDimísi⁄s
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_PrötDimísi⁄s_°ru˘
)

	)

3595 
	#B⁄obo_PrötDimísi⁄s__Æloc
(Ë((
B⁄obo_PrötDimísi⁄s
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_PrötDimísi⁄s
))

	)

3596 
	#B⁄obo_PrötDimísi⁄s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_PrötDimísi⁄s
,(m),(d))

	)

3598 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Pröt
Ë&& !deföed(
_B⁄obo_Pröt_deföed
)

3599 
	#ORBIT_DECL_B⁄obo_Pröt
 1

	)

3600 
	#_B⁄obo_Pröt_deföed
 1

	)

3601 
	#B⁄obo_Pröt__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3602 
CORBA_Obje˘
 
	tB⁄obo_Pröt
;

3603 
CORBA_unsig√d_l⁄g
 
B⁄obo_Pröt__˛assid
;

3604 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Pröt_0
)

3605 
	#TC_IMPL_TC_B⁄obo_Pröt_0
 'B'

	)

3606 
	#TC_IMPL_TC_B⁄obo_Pröt_1
 'o'

	)

3607 
	#TC_IMPL_TC_B⁄obo_Pröt_2
 'n'

	)

3608 
	#TC_IMPL_TC_B⁄obo_Pröt_3
 'o'

	)

3609 
	#TC_IMPL_TC_B⁄obo_Pröt_4
 'b'

	)

3610 
	#TC_IMPL_TC_B⁄obo_Pröt_5
 'o'

	)

3611 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3616 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Pröt_°ru˘
;

3617 
	#TC_B⁄obo_Pröt
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Pröt_°ru˘
)

	)

3620 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Clùbﬂrd
Ë&& !deföed(
_B⁄obo_Clùbﬂrd_deföed
)

3621 
	#ORBIT_DECL_B⁄obo_Clùbﬂrd
 1

	)

3622 
	#_B⁄obo_Clùbﬂrd_deföed
 1

	)

3623 
	#B⁄obo_Clùbﬂrd__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3624 
CORBA_Obje˘
 
	tB⁄obo_Clùbﬂrd
;

3625 
CORBA_unsig√d_l⁄g
 
B⁄obo_Clùbﬂrd__˛assid
;

3626 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Clùbﬂrd_0
)

3627 
	#TC_IMPL_TC_B⁄obo_Clùbﬂrd_0
 'B'

	)

3628 
	#TC_IMPL_TC_B⁄obo_Clùbﬂrd_1
 'o'

	)

3629 
	#TC_IMPL_TC_B⁄obo_Clùbﬂrd_2
 'n'

	)

3630 
	#TC_IMPL_TC_B⁄obo_Clùbﬂrd_3
 'o'

	)

3631 
	#TC_IMPL_TC_B⁄obo_Clùbﬂrd_4
 'b'

	)

3632 
	#TC_IMPL_TC_B⁄obo_Clùbﬂrd_5
 'o'

	)

3633 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3638 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Clùbﬂrd_°ru˘
;

3639 
	#TC_B⁄obo_Clùbﬂrd
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Clùbﬂrd_°ru˘
)

	)

3642 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_ClùbﬂrdSt‹e
Ë&& !deföed(
_B⁄obo_ClùbﬂrdSt‹e_deföed
)

3643 
	#ORBIT_DECL_B⁄obo_ClùbﬂrdSt‹e
 1

	)

3644 
	#_B⁄obo_ClùbﬂrdSt‹e_deföed
 1

	)

3645 
	#B⁄obo_ClùbﬂrdSt‹e__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3646 
CORBA_Obje˘
 
	tB⁄obo_ClùbﬂrdSt‹e
;

3647 
CORBA_unsig√d_l⁄g
 
B⁄obo_ClùbﬂrdSt‹e__˛assid
;

3648 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_0
)

3649 
	#TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_0
 'B'

	)

3650 
	#TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_1
 'o'

	)

3651 
	#TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_2
 'n'

	)

3652 
	#TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_3
 'o'

	)

3653 
	#TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_4
 'b'

	)

3654 
	#TC_IMPL_TC_B⁄obo_ClùbﬂrdSt‹e_5
 'o'

	)

3655 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3660 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_ClùbﬂrdSt‹e_°ru˘
;

3661 
	#TC_B⁄obo_ClùbﬂrdSt‹e
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_ClùbﬂrdSt‹e_°ru˘
)

	)

3664 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_Aµliˇti⁄
Ë&& !deföed(
_B⁄obo_Aµliˇti⁄_deföed
)

3665 
	#ORBIT_DECL_B⁄obo_Aµliˇti⁄
 1

	)

3666 
	#_B⁄obo_Aµliˇti⁄_deföed
 1

	)

3667 
	#B⁄obo_Aµliˇti⁄__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3668 
CORBA_Obje˘
 
	tB⁄obo_Aµliˇti⁄
;

3669 
CORBA_unsig√d_l⁄g
 
B⁄obo_Aµliˇti⁄__˛assid
;

3670 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Aµliˇti⁄_0
)

3671 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_0
 'B'

	)

3672 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_1
 'o'

	)

3673 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_2
 'n'

	)

3674 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_3
 'o'

	)

3675 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_4
 'b'

	)

3676 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_5
 'o'

	)

3677 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3682 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Aµliˇti⁄_°ru˘
;

3683 
	#TC_B⁄obo_Aµliˇti⁄
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Aµliˇti⁄_°ru˘
)

	)

3686 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_™y
)

3687 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_™y
 1

	)

3688 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_0
 'B'

	)

3689 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_1
 'o'

	)

3690 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_2
 'n'

	)

3691 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_3
 'o'

	)

3692 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_4
 'b'

	)

3693 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_5
 'o'

	)

3694 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_™y_deföed
)

3695 
	#_CORBA_£quí˚_CORBA_™y_deföed
 1

	)

3696 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_™y
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_™y
;

3698 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_0
)

3699 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_0
 'B'

	)

3700 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_1
 'o'

	)

3701 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_2
 'n'

	)

3702 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_3
 'o'

	)

3703 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_4
 'b'

	)

3704 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_5
 'o'

	)

3705 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3710 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_™y_°ru˘
;

3711 
	#TC_CORBA_£quí˚_CORBA_™y
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_™y_°ru˘
)

	)

3713 
	#CORBA_£quí˚_CORBA_™y__Æloc
(Ë((
CORBA_£quí˚_CORBA_™y
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_™y
))

	)

3714 
	#CORBA_£quí˚_CORBA_™y__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_™y
,(m),(d))

	)

3715 
	#CORBA_£quí˚_CORBA_™y_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

3716 
	#CORBA_£quí˚_CORBA_™y_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

3718 #i‡!
deföed
(
_B⁄obo_Aµliˇti⁄_ArgLi°_deföed
)

3719 
	#_B⁄obo_Aµliˇti⁄_ArgLi°_deföed
 1

	)

3720 
CORBA_£quí˚_CORBA_™y
 
	tB⁄obo_Aµliˇti⁄_ArgLi°
;

3721 
	#B⁄obo_Aµliˇti⁄_ArgLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_™y_m¨shÆ
((x),(y),(z))

	)

3722 
	#B⁄obo_Aµliˇti⁄_ArgLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_™y_dem¨shÆ
((x),(y),(z),(i))

	)

3723 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_0
)

3724 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_0
 'B'

	)

3725 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_1
 'o'

	)

3726 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_2
 'n'

	)

3727 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_3
 'o'

	)

3728 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_4
 'b'

	)

3729 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_ArgLi°_5
 'o'

	)

3730 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3735 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Aµliˇti⁄_ArgLi°_°ru˘
;

3736 
	#TC_B⁄obo_Aµliˇti⁄_ArgLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Aµliˇti⁄_ArgLi°_°ru˘
)

	)

3738 
	#B⁄obo_Aµliˇti⁄_ArgLi°__Æloc
(Ë((
B⁄obo_Aµliˇti⁄_ArgLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_™y
))

	)

3739 
	#B⁄obo_Aµliˇti⁄_ArgLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_™y
,(m),(d))

	)

3740 
	#B⁄obo_Aµliˇti⁄_ArgLi°_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

3742 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

3743 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

3744 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

3745 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

3746 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

3747 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

3748 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

3749 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

3750 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

3751 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

3752 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

3754 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

3755 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

3756 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

3757 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

3758 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

3759 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

3760 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

3761 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3766 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

3767 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

3769 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

3770 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

3771 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

3772 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

3774 #i‡!
deföed
(
_B⁄obo_Aµliˇti⁄_¨gv_t_deföed
)

3775 
	#_B⁄obo_Aµliˇti⁄_¨gv_t_deföed
 1

	)

3776 
CORBA_£quí˚_CORBA_°rög
 
	tB⁄obo_Aµliˇti⁄_¨gv_t
;

3777 
	#B⁄obo_Aµliˇti⁄_¨gv_t_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

3778 
	#B⁄obo_Aµliˇti⁄_¨gv_t_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

3779 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_0
)

3780 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_0
 'B'

	)

3781 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_1
 'o'

	)

3782 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_2
 'n'

	)

3783 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_3
 'o'

	)

3784 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_4
 'b'

	)

3785 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_¨gv_t_5
 'o'

	)

3786 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3791 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Aµliˇti⁄_¨gv_t_°ru˘
;

3792 
	#TC_B⁄obo_Aµliˇti⁄_¨gv_t
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Aµliˇti⁄_¨gv_t_°ru˘
)

	)

3794 
	#B⁄obo_Aµliˇti⁄_¨gv_t__Æloc
(Ë((
B⁄obo_Aµliˇti⁄_¨gv_t
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

3795 
	#B⁄obo_Aµliˇti⁄_¨gv_t__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

3796 
	#B⁄obo_Aµliˇti⁄_¨gv_t_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

3798 #i‡!
deföed
(
_B⁄obo_Aµliˇti⁄_MesßgeDesc_deföed
)

3799 
	#_B⁄obo_Aµliˇti⁄_MesßgeDesc_deföed
 1

	)

3800 
B⁄obo_Aµliˇti⁄_MesßgeDesc_ty≥
 
	tB⁄obo_Aµliˇti⁄_MesßgeDesc
;

3801 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Ty≥Code
)

3802 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Ty≥Code
 1

	)

3803 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_0
 'B'

	)

3804 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_1
 'o'

	)

3805 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_2
 'n'

	)

3806 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_3
 'o'

	)

3807 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_4
 'b'

	)

3808 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_5
 'o'

	)

3809 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Ty≥Code_deföed
)

3810 
	#_CORBA_£quí˚_CORBA_Ty≥Code_deföed
 1

	)

3811 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Ty≥Code
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Ty≥Code
;

3813 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_0
)

3814 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_0
 'B'

	)

3815 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_1
 'o'

	)

3816 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_2
 'n'

	)

3817 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_3
 'o'

	)

3818 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_4
 'b'

	)

3819 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_5
 'o'

	)

3820 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3825 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Ty≥Code_°ru˘
;

3826 
	#TC_CORBA_£quí˚_CORBA_Ty≥Code
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Ty≥Code_°ru˘
)

	)

3828 
	#CORBA_£quí˚_CORBA_Ty≥Code__Æloc
(Ë((
CORBA_£quí˚_CORBA_Ty≥Code
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
))

	)

3829 
	#CORBA_£quí˚_CORBA_Ty≥Code__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
,(m),(d))

	)

3830 
	#CORBA_£quí˚_CORBA_Ty≥Code_Ælocbuf
(
l
Ë((
CORBA_Ty≥Code
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
, (l)))

	)

3831 
	#CORBA_£quí˚_CORBA_Ty≥Code_Ælocbuf
(
l
Ë((
CORBA_Ty≥Code
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
, (l)))

	)

3833 
	sB⁄obo_Aµliˇti⁄_MesßgeDesc_ty≥
 {

3834 
CORBA_°rög
 
	g«me
;

3835 
CORBA_£quí˚_CORBA_Ty≥Code
 
	gty≥s
;

3836 
CORBA_Ty≥Code
 
	gªtu∫_ty≥
;

3837 
CORBA_°rög
 
	gdes¸ùti⁄
;

3840 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_0
)

3841 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_0
 'B'

	)

3842 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_1
 'o'

	)

3843 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_2
 'n'

	)

3844 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_3
 'o'

	)

3845 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_4
 'b'

	)

3846 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_5
 'o'

	)

3847 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3852 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_°ru˘
;

3853 
	#TC_B⁄obo_Aµliˇti⁄_MesßgeDesc
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Aµliˇti⁄_MesßgeDesc_°ru˘
)

	)

3855 
	#B⁄obo_Aµliˇti⁄_MesßgeDesc__Æloc
(Ë((
B⁄obo_Aµliˇti⁄_MesßgeDesc
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_Aµliˇti⁄_MesßgeDesc
))

	)

3856 
	#B⁄obo_Aµliˇti⁄_MesßgeDesc__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_Aµliˇti⁄_MesßgeDesc
,(m),(d))

	)

3858 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
)

3859 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
 1

	)

3860 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_0
 'B'

	)

3861 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_1
 'o'

	)

3862 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_2
 'n'

	)

3863 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_3
 'o'

	)

3864 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_4
 'b'

	)

3865 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_5
 'o'

	)

3866 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_deföed
)

3867 
	#_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_deföed
 1

	)

3868 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_Aµliˇti⁄_MesßgeDesc
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
;

3870 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_0
)

3871 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_0
 'B'

	)

3872 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_1
 'o'

	)

3873 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_2
 'n'

	)

3874 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_3
 'o'

	)

3875 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_4
 'b'

	)

3876 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_5
 'o'

	)

3877 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3882 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_°ru˘
;

3883 
	#TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_°ru˘
)

	)

3885 
	#CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
))

	)

3886 
	#CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
,(m),(d))

	)

3887 
	#CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_Ælocbuf
(
l
Ë((
B⁄obo_Aµliˇti⁄_MesßgeDesc
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
, (l)))

	)

3888 
	#CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_Ælocbuf
(
l
Ë((
B⁄obo_Aµliˇti⁄_MesßgeDesc
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
, (l)))

	)

3890 #i‡!
deföed
(
_B⁄obo_Aµliˇti⁄_MesßgeLi°_deföed
)

3891 
	#_B⁄obo_Aµliˇti⁄_MesßgeLi°_deföed
 1

	)

3892 
CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
 
	tB⁄obo_Aµliˇti⁄_MesßgeLi°
;

3893 
	#B⁄obo_Aµliˇti⁄_MesßgeLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_m¨shÆ
((x),(y),(z))

	)

3894 
	#B⁄obo_Aµliˇti⁄_MesßgeLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc_dem¨shÆ
((x),(y),(z),(i))

	)

3895 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_0
)

3896 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_0
 'B'

	)

3897 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_1
 'o'

	)

3898 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_2
 'n'

	)

3899 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_3
 'o'

	)

3900 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_4
 'b'

	)

3901 
	#TC_IMPL_TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_5
 'o'

	)

3902 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


3907 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_°ru˘
;

3908 
	#TC_B⁄obo_Aµliˇti⁄_MesßgeLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Aµliˇti⁄_MesßgeLi°_°ru˘
)

	)

3910 
	#B⁄obo_Aµliˇti⁄_MesßgeLi°__Æloc
(Ë((
B⁄obo_Aµliˇti⁄_MesßgeLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
))

	)

3911 
	#B⁄obo_Aµliˇti⁄_MesßgeLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
,(m),(d))

	)

3912 
	#B⁄obo_Aµliˇti⁄_MesßgeLi°_Ælocbuf
(
l
Ë((
B⁄obo_Aµliˇti⁄_MesßgeDesc
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_Aµliˇti⁄_MesßgeDesc
, (l)))

	)

3916 #i‚de‡
_deföed_POA_B⁄obo_M⁄ikî


3917 
	#_deföed_POA_B⁄obo_M⁄ikî
 1

	)

3919 *
	g_¥iv©e
;

3920 
B⁄obo_M⁄ikî
 (*
gëP¨ít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3921 (*
	g£tP¨ít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_M⁄ikî
 
	g∑ª¡
, 
CORBA_Envú⁄mít
 *
	gev
);

3922 
CORBA_°rög
 (*
gëName
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3923 (*
	g£tName
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g«me
, 
CORBA_Envú⁄mít
 *
	gev
);

3924 
B⁄obo_Unknown
 (*
ªsﬁve
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_ResﬁveO±i⁄s
* 
	g›ti⁄s
, c⁄° 
CORBA_ch¨
 * 
	gªque°edI¡îÁ˚
, 
CORBA_Envú⁄mít
 *
	gev
);

3925 
CORBA_l⁄g
 (*
equÆ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g«me
, 
CORBA_Envú⁄mít
 *
	gev
);

3926 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3927 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3928 } 
	tPOA_B⁄obo_M⁄ikî__ïv
;

3930 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

3931 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

3932 
POA_B⁄obo_M⁄ikî__ïv
 *
	gB⁄obo_M⁄ikî_ïv
;

3933 } 
	tPOA_B⁄obo_M⁄ikî__vïv
;

3935 *
	g_¥iv©e
;

3936 
POA_B⁄obo_M⁄ikî__vïv
 *
	gvïv
;

3937 } 
	tPOA_B⁄obo_M⁄ikî
;

3938 
POA_B⁄obo_M⁄ikî__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

3939 
POA_B⁄obo_M⁄ikî__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

3941 #i‚de‡
_deföed_POA_B⁄obo_M⁄ikîExãndî


3942 
	#_deföed_POA_B⁄obo_M⁄ikîExãndî
 1

	)

3944 *
	g_¥iv©e
;

3945 
B⁄obo_Unknown
 (*
ªsﬁve
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_M⁄ikî
 
	gm
, c⁄° 
B⁄obo_ResﬁveO±i⁄s
* 
	g›ti⁄s
, c⁄° 
CORBA_ch¨
 * 
	g«me
, c⁄° CORBA_ch¨ * 
	gªque°edI¡îÁ˚
, 
CORBA_Envú⁄mít
 *
	gev
);

3946 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3947 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3948 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3949 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3950 } 
	tPOA_B⁄obo_M⁄ikîExãndî__ïv
;

3952 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

3953 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

3954 
POA_B⁄obo_M⁄ikîExãndî__ïv
 *
	gB⁄obo_M⁄ikîExãndî_ïv
;

3955 } 
	tPOA_B⁄obo_M⁄ikîExãndî__vïv
;

3957 *
	g_¥iv©e
;

3958 
POA_B⁄obo_M⁄ikîExãndî__vïv
 *
	gvïv
;

3959 } 
	tPOA_B⁄obo_M⁄ikîExãndî
;

3960 
POA_B⁄obo_M⁄ikîExãndî__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

3961 
POA_B⁄obo_M⁄ikîExãndî__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

3963 #i‚de‡
_deföed_POA_B⁄obo_Såóm


3964 
	#_deföed_POA_B⁄obo_Såóm
 1

	)

3966 *
	g_¥iv©e
;

3967 
	gB⁄obo_St‹ageInfo
* (*
	ggëInfo
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
	gmask
, 
CORBA_Envú⁄mít
 *
	gev
);

3968 (*
	g£tInfo
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_St‹ageInfo
* 
	göfo
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
	gmask
, 
CORBA_Envú⁄mít
 *
	gev
);

3969 (*
	gªad
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_l⁄g
 
	gcou¡
, 
B⁄obo_Såóm_iobuf
** 
	gbuf„r
, 
CORBA_Envú⁄mít
 *
	gev
);

3970 (*
	gwrôe
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Såóm_iobuf
* 
	gbuf„r
, 
CORBA_Envú⁄mít
 *
	gev
);

3971 
CORBA_l⁄g
 (*
£ek
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° CORBA_l⁄g 
	goff£t
, c⁄° 
B⁄obo_Såóm_SìkTy≥
 
	gwhí˚
, 
CORBA_Envú⁄mít
 *
	gev
);

3972 (*
	gåunˇã
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_l⁄g
 
	gÀngth
, 
CORBA_Envú⁄mít
 *
	gev
);

3973 (*
	gcommô
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3974 (*
	gªvît
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3975 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3976 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

3977 } 
	tPOA_B⁄obo_Såóm__ïv
;

3979 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

3980 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

3981 
POA_B⁄obo_Såóm__ïv
 *
	gB⁄obo_Såóm_ïv
;

3982 } 
	tPOA_B⁄obo_Såóm__vïv
;

3984 *
	g_¥iv©e
;

3985 
POA_B⁄obo_Såóm__vïv
 *
	gvïv
;

3986 } 
	tPOA_B⁄obo_Såóm
;

3987 
POA_B⁄obo_Såóm__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

3988 
POA_B⁄obo_Såóm__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

3990 #i‚de‡
_deföed_POA_B⁄obo_St‹age


3991 
	#_deföed_POA_B⁄obo_St‹age
 1

	)

3993 *
	g_¥iv©e
;

3994 
	gB⁄obo_St‹ageInfo
* (*
	ggëInfo
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
	gmask
, 
CORBA_Envú⁄mít
 *
	gev
);

3995 (*
	g£tInfo
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
B⁄obo_St‹ageInfo
* 
	göfo
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
	gmask
, 
CORBA_Envú⁄mít
 *
	gev
);

3996 
B⁄obo_Såóm
 (*
›íSåóm
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
B⁄obo_St‹age_O≥nMode
 
	gmode
, 
CORBA_Envú⁄mít
 *
	gev
);

3997 
B⁄obo_St‹age
 (*
›íSt‹age
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
B⁄obo_St‹age_O≥nMode
 
	gmode
, 
CORBA_Envú⁄mít
 *
	gev
);

3998 (*
	gc›yTo
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_St‹age
 
	gèrgë
, 
CORBA_Envú⁄mít
 *
	gev
);

3999 
	gB⁄obo_St‹age_Dúe˘‹yLi°
* (*
	gli°C⁄ã¡s
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
	gmask
, 
CORBA_Envú⁄mít
 *
	gev
);

4000 (*
	gîa£
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, 
CORBA_Envú⁄mít
 *
	gev
);

4001 (*
	gª«me
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th_«me
, c⁄° CORBA_ch¨ * 
	g√w_∑th_«me
, 
CORBA_Envú⁄mít
 *
	gev
);

4002 (*
	gcommô
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4003 (*
	gªvît
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4004 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4005 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4006 } 
	tPOA_B⁄obo_St‹age__ïv
;

4008 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4009 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4010 
POA_B⁄obo_St‹age__ïv
 *
	gB⁄obo_St‹age_ïv
;

4011 } 
	tPOA_B⁄obo_St‹age__vïv
;

4013 *
	g_¥iv©e
;

4014 
POA_B⁄obo_St‹age__vïv
 *
	gvïv
;

4015 } 
	tPOA_B⁄obo_St‹age
;

4016 
POA_B⁄obo_St‹age__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4017 
POA_B⁄obo_St‹age__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4019 #i‚de‡
_deföed_POA_B⁄obo_M⁄ikîC⁄ãxt


4020 
	#_deföed_POA_B⁄obo_M⁄ikîC⁄ãxt
 1

	)

4022 *
	g_¥iv©e
;

4023 
B⁄obo_Unknown
 (*
gëObje˘
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g«me
, c⁄° CORBA_ch¨ * 
	gªpoId
, 
CORBA_Envú⁄mít
 *
	gev
);

4024 
B⁄obo_M⁄ikî
 (*
¸óãFromName
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g«me
, 
CORBA_Envú⁄mít
 *
	gev
);

4025 
B⁄obo_M⁄ikîExãndî
 (*
gëExãndî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gm⁄ikîPªfix
, c⁄° CORBA_ch¨ * 
	göãrÁ˚Id
, 
CORBA_Envú⁄mít
 *
	gev
);

4026 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4027 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4028 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4029 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4030 (*
	gunIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4031 (*
	gunIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4032 } 
	tPOA_B⁄obo_M⁄ikîC⁄ãxt__ïv
;

4034 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4035 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4036 
POA_B⁄obo_M⁄ikîC⁄ãxt__ïv
 *
	gB⁄obo_M⁄ikîC⁄ãxt_ïv
;

4037 } 
	tPOA_B⁄obo_M⁄ikîC⁄ãxt__vïv
;

4039 *
	g_¥iv©e
;

4040 
POA_B⁄obo_M⁄ikîC⁄ãxt__vïv
 *
	gvïv
;

4041 } 
	tPOA_B⁄obo_M⁄ikîC⁄ãxt
;

4042 
POA_B⁄obo_M⁄ikîC⁄ãxt__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4043 
POA_B⁄obo_M⁄ikîC⁄ãxt__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4045 #i‚de‡
_deföed_POA_B⁄obo_Ru¬ögC⁄ãxt


4046 
	#_deföed_POA_B⁄obo_Ru¬ögC⁄ãxt
 1

	)

4048 *
	g_¥iv©e
;

4049 (*
	gaddObje˘
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_Obje˘
 
	gobj
, 
CORBA_Envú⁄mít
 *
	gev
);

4050 (*
	gªmoveObje˘
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_Obje˘
 
	gobj
, 
CORBA_Envú⁄mít
 *
	gev
);

4051 (*
	gaddKey
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4052 (*
	gªmoveKey
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4053 (*
	g©ExôUƒef
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_Obje˘
 
	gobj
, 
CORBA_Envú⁄mít
 *
	gev
);

4054 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4055 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4056 } 
	tPOA_B⁄obo_Ru¬ögC⁄ãxt__ïv
;

4058 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4059 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4060 
POA_B⁄obo_Ru¬ögC⁄ãxt__ïv
 *
	gB⁄obo_Ru¬ögC⁄ãxt_ïv
;

4061 } 
	tPOA_B⁄obo_Ru¬ögC⁄ãxt__vïv
;

4063 *
	g_¥iv©e
;

4064 
POA_B⁄obo_Ru¬ögC⁄ãxt__vïv
 *
	gvïv
;

4065 } 
	tPOA_B⁄obo_Ru¬ögC⁄ãxt
;

4066 
POA_B⁄obo_Ru¬ögC⁄ãxt__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4067 
POA_B⁄obo_Ru¬ögC⁄ãxt__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4069 #i‚de‡
_deföed_POA_B⁄obo_Pîsi°


4070 
	#_deföed_POA_B⁄obo_Pîsi°
 1

	)

4072 *
	g_¥iv©e
;

4073 
	gB⁄obo_Pîsi°_C⁄ã¡Ty≥Li°
* (*
	ggëC⁄ã¡Ty≥s
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4074 
B⁄obo_Pîsi°_IID
 (*
gëIId
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4075 
CORBA_boﬁón
 (*
isDúty
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4076 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4077 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4078 } 
	tPOA_B⁄obo_Pîsi°__ïv
;

4080 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4081 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4082 
POA_B⁄obo_Pîsi°__ïv
 *
	gB⁄obo_Pîsi°_ïv
;

4083 } 
	tPOA_B⁄obo_Pîsi°__vïv
;

4085 *
	g_¥iv©e
;

4086 
POA_B⁄obo_Pîsi°__vïv
 *
	gvïv
;

4087 } 
	tPOA_B⁄obo_Pîsi°
;

4088 
POA_B⁄obo_Pîsi°__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4089 
POA_B⁄obo_Pîsi°__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4091 #i‚de‡
_deföed_POA_B⁄obo_Pîsi°Fûe


4092 
	#_deföed_POA_B⁄obo_Pîsi°Fûe
 1

	)

4094 *
	g_¥iv©e
;

4095 (*
	glﬂd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	guri
, 
CORBA_Envú⁄mít
 *
	gev
);

4096 (*
	gßve
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	guri
, 
CORBA_Envú⁄mít
 *
	gev
);

4097 
CORBA_°rög
 (*
gëCuºítFûe
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4098 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4099 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4100 } 
	tPOA_B⁄obo_Pîsi°Fûe__ïv
;

4102 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4103 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4104 
POA_B⁄obo_Pîsi°__ïv
 *
	gB⁄obo_Pîsi°_ïv
;

4105 
POA_B⁄obo_Pîsi°Fûe__ïv
 *
	gB⁄obo_Pîsi°Fûe_ïv
;

4106 } 
	tPOA_B⁄obo_Pîsi°Fûe__vïv
;

4108 *
	g_¥iv©e
;

4109 
POA_B⁄obo_Pîsi°Fûe__vïv
 *
	gvïv
;

4110 } 
	tPOA_B⁄obo_Pîsi°Fûe
;

4111 
POA_B⁄obo_Pîsi°Fûe__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4112 
POA_B⁄obo_Pîsi°Fûe__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4114 #i‚de‡
_deföed_POA_B⁄obo_Pîsi°St‹age


4115 
	#_deföed_POA_B⁄obo_Pîsi°St‹age
 1

	)

4117 *
	g_¥iv©e
;

4118 (*
	glﬂd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_St‹age
 
	g°‹age
, 
CORBA_Envú⁄mít
 *
	gev
);

4119 (*
	gßve
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_St‹age
 
	g°‹age
, c⁄° 
CORBA_boﬁón
 
	gßme_as_lﬂded
, 
CORBA_Envú⁄mít
 *
	gev
);

4120 } 
	tPOA_B⁄obo_Pîsi°St‹age__ïv
;

4122 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4123 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4124 
POA_B⁄obo_Pîsi°__ïv
 *
	gB⁄obo_Pîsi°_ïv
;

4125 
POA_B⁄obo_Pîsi°St‹age__ïv
 *
	gB⁄obo_Pîsi°St‹age_ïv
;

4126 } 
	tPOA_B⁄obo_Pîsi°St‹age__vïv
;

4128 *
	g_¥iv©e
;

4129 
POA_B⁄obo_Pîsi°St‹age__vïv
 *
	gvïv
;

4130 } 
	tPOA_B⁄obo_Pîsi°St‹age
;

4131 
POA_B⁄obo_Pîsi°St‹age__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4132 
POA_B⁄obo_Pîsi°St‹age__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4134 #i‚de‡
_deföed_POA_B⁄obo_Pîsi°Såóm


4135 
	#_deföed_POA_B⁄obo_Pîsi°Såóm
 1

	)

4137 *
	g_¥iv©e
;

4138 (*
	glﬂd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Såóm
 
	g°ªam
, c⁄° 
CORBA_ch¨
 * 
	gty≥
, 
CORBA_Envú⁄mít
 *
	gev
);

4139 (*
	gßve
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Såóm
 
	g°ªam
, c⁄° 
CORBA_ch¨
 * 
	gty≥
, 
CORBA_Envú⁄mít
 *
	gev
);

4140 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4141 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4142 } 
	tPOA_B⁄obo_Pîsi°Såóm__ïv
;

4144 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4145 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4146 
POA_B⁄obo_Pîsi°__ïv
 *
	gB⁄obo_Pîsi°_ïv
;

4147 
POA_B⁄obo_Pîsi°Såóm__ïv
 *
	gB⁄obo_Pîsi°Såóm_ïv
;

4148 } 
	tPOA_B⁄obo_Pîsi°Såóm__vïv
;

4150 *
	g_¥iv©e
;

4151 
POA_B⁄obo_Pîsi°Såóm__vïv
 *
	gvïv
;

4152 } 
	tPOA_B⁄obo_Pîsi°Såóm
;

4153 
POA_B⁄obo_Pîsi°Såóm__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4154 
POA_B⁄obo_Pîsi°Såóm__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4156 #i‚de‡
_deföed_POA_B⁄obo_Li°íî


4157 
	#_deföed_POA_B⁄obo_Li°íî
 1

	)

4159 *
	g_¥iv©e
;

4160 (*
	gevít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gevít_«me
, c⁄° 
CORBA_™y
* 
	g¨gs
, 
CORBA_Envú⁄mít
 *
	gev
);

4161 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4162 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4163 } 
	tPOA_B⁄obo_Li°íî__ïv
;

4165 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4166 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4167 
POA_B⁄obo_Li°íî__ïv
 *
	gB⁄obo_Li°íî_ïv
;

4168 } 
	tPOA_B⁄obo_Li°íî__vïv
;

4170 *
	g_¥iv©e
;

4171 
POA_B⁄obo_Li°íî__vïv
 *
	gvïv
;

4172 } 
	tPOA_B⁄obo_Li°íî
;

4173 
POA_B⁄obo_Li°íî__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4174 
POA_B⁄obo_Li°íî__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4176 #i‚de‡
_deföed_POA_B⁄obo_EvítSour˚


4177 
	#_deföed_POA_B⁄obo_EvítSour˚
 1

	)

4179 *
	g_¥iv©e
;

4180 (*
	gaddLi°íî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Li°íî
 
	gl
, 
CORBA_Envú⁄mít
 *
	gev
);

4181 (*
	gaddLi°íîWôhMask
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Li°íî
 
	gl
, c⁄° 
CORBA_ch¨
 * 
	gevít_mask
, 
CORBA_Envú⁄mít
 *
	gev
);

4182 (*
	gªmoveLi°íî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Li°íî
 
	gl
, 
CORBA_Envú⁄mít
 *
	gev
);

4183 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4184 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4185 } 
	tPOA_B⁄obo_EvítSour˚__ïv
;

4187 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4188 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4189 
POA_B⁄obo_EvítSour˚__ïv
 *
	gB⁄obo_EvítSour˚_ïv
;

4190 } 
	tPOA_B⁄obo_EvítSour˚__vïv
;

4192 *
	g_¥iv©e
;

4193 
POA_B⁄obo_EvítSour˚__vïv
 *
	gvïv
;

4194 } 
	tPOA_B⁄obo_EvítSour˚
;

4195 
POA_B⁄obo_EvítSour˚__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4196 
POA_B⁄obo_EvítSour˚__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4198 #i‚de‡
_deföed_POA_B⁄obo_UIComp⁄ít


4199 
	#_deföed_POA_B⁄obo_UIComp⁄ít
 1

	)

4201 *
	g_¥iv©e
;

4202 (*
	g£tC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_UIC⁄èöî
 
	gc⁄èöî
, 
CORBA_Envú⁄mít
 *
	gev
);

4203 (*
	gun£tC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4204 
CORBA_°rög
 (*
_gë_«me
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4205 
CORBA_°rög
 (*
des¸ibeVîbs
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4206 (*
	gexecVîb
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g˙ame
, 
CORBA_Envú⁄mít
 *
	gev
);

4207 (*
	guiEvít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gid
, c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
	gty≥
, c⁄° CORBA_ch¨ * 
	g°©e
, 
CORBA_Envú⁄mít
 *
	gev
);

4208 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4209 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4210 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4211 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4212 } 
	tPOA_B⁄obo_UIComp⁄ít__ïv
;

4214 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4215 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4216 
POA_B⁄obo_UIComp⁄ít__ïv
 *
	gB⁄obo_UIComp⁄ít_ïv
;

4217 } 
	tPOA_B⁄obo_UIComp⁄ít__vïv
;

4219 *
	g_¥iv©e
;

4220 
POA_B⁄obo_UIComp⁄ít__vïv
 *
	gvïv
;

4221 } 
	tPOA_B⁄obo_UIComp⁄ít
;

4222 
POA_B⁄obo_UIComp⁄ít__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4223 
POA_B⁄obo_UIComp⁄ít__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4225 #i‚de‡
_deföed_POA_B⁄obo_UIC⁄èöî


4226 
	#_deföed_POA_B⁄obo_UIC⁄èöî
 1

	)

4228 *
	g_¥iv©e
;

4229 (*
	gªgi°îComp⁄ít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gcomp⁄ít_«me
, c⁄° 
B⁄obo_UIComp⁄ít
 
	gcomp⁄ít
, 
CORBA_Envú⁄mít
 *
	gev
);

4230 (*
	gdîegi°îComp⁄ít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gcomp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
	gev
);

4231 (*
	g‰ìze
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4232 (*
	gthaw
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4233 (*
	g£tAâr
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° CORBA_ch¨ * 
	g©å
, c⁄° CORBA_ch¨ * 
	gvÆue
, c⁄° CORBA_ch¨ * 
	gcomp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
	gev
);

4234 
CORBA_°rög
 (*
gëAâr
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° CORBA_ch¨ * 
	g©å
, 
CORBA_Envú⁄mít
 *
	gev
);

4235 (*
	g£tNode
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° CORBA_ch¨ * 
	gxml
, c⁄° CORBA_ch¨ * 
	gcomp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
	gev
);

4236 
CORBA_°rög
 (*
gëNode
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
CORBA_boﬁón
 
	gnodeO∆y
, 
CORBA_Envú⁄mít
 *
	gev
);

4237 (*
	gªmoveNode
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° CORBA_ch¨ * 
	gby_comp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
	gev
);

4238 
CORBA_boﬁón
 (*
exi°s
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, 
CORBA_Envú⁄mít
 *
	gev
);

4239 (*
	gexecVîb
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g˙ame
, 
CORBA_Envú⁄mít
 *
	gev
);

4240 (*
	guiEvít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gid
, c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
	gty≥
, c⁄° CORBA_ch¨ * 
	g°©e
, 
CORBA_Envú⁄mít
 *
	gev
);

4241 (*
	g£tObje˘
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, c⁄° 
B⁄obo_Unknown
 
	gc⁄åﬁ
, 
CORBA_Envú⁄mít
 *
	gev
);

4242 
B⁄obo_Unknown
 (*
gëObje˘
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	g∑th
, 
CORBA_Envú⁄mít
 *
	gev
);

4243 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4244 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4245 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4246 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4247 } 
	tPOA_B⁄obo_UIC⁄èöî__ïv
;

4249 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4250 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4251 
POA_B⁄obo_UIC⁄èöî__ïv
 *
	gB⁄obo_UIC⁄èöî_ïv
;

4252 } 
	tPOA_B⁄obo_UIC⁄èöî__vïv
;

4254 *
	g_¥iv©e
;

4255 
POA_B⁄obo_UIC⁄èöî__vïv
 *
	gvïv
;

4256 } 
	tPOA_B⁄obo_UIC⁄èöî
;

4257 
POA_B⁄obo_UIC⁄èöî__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4258 
POA_B⁄obo_UIC⁄èöî__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4260 #i‚de‡
_deföed_POA_B⁄obo_Pr›îtyBag


4261 
	#_deföed_POA_B⁄obo_Pr›îtyBag
 1

	)

4263 *
	g_¥iv©e
;

4264 
	gB⁄obo_KeyLi°
* (*
	ggëKeys
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gfûãr
, 
CORBA_Envú⁄mít
 *
	gev
);

4265 
CORBA_Ty≥Code
 (*
gëTy≥
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4266 
	gCORBA_™y
* (*
	ggëVÆue
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4267 (*
	g£tVÆue
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, c⁄° 
CORBA_™y
* 
	gvÆue
, 
CORBA_Envú⁄mít
 *
	gev
);

4268 
	gB⁄obo_Pr›îtySë
* (*
	ggëVÆues
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gfûãr
, 
CORBA_Envú⁄mít
 *
	gev
);

4269 (*
	g£tVÆues
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Pr›îtySë
* 
	g£t
, 
CORBA_Envú⁄mít
 *
	gev
);

4270 
	gCORBA_™y
* (*
	ggëDeÁu…
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4271 
CORBA_°rög
 (*
gëDocTôÀ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4272 
CORBA_°rög
 (*
gëDoc
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4273 
B⁄obo_Pr›îtyFœgs
 (*
gëFœgs
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4274 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4275 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4276 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4277 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4278 } 
	tPOA_B⁄obo_Pr›îtyBag__ïv
;

4280 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4281 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4282 
POA_B⁄obo_Pr›îtyBag__ïv
 *
	gB⁄obo_Pr›îtyBag_ïv
;

4283 } 
	tPOA_B⁄obo_Pr›îtyBag__vïv
;

4285 *
	g_¥iv©e
;

4286 
POA_B⁄obo_Pr›îtyBag__vïv
 *
	gvïv
;

4287 } 
	tPOA_B⁄obo_Pr›îtyBag
;

4288 
POA_B⁄obo_Pr›îtyBag__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4289 
POA_B⁄obo_Pr›îtyBag__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4291 #i‚de‡
_deföed_POA_B⁄obo_C⁄figD©aba£


4292 
	#_deföed_POA_B⁄obo_C⁄figD©aba£
 1

	)

4294 *
	g_¥iv©e
;

4295 
CORBA_boﬁón
 (*
_gë_isWrôóbÀ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4296 
	gB⁄obo_KeyLi°
* (*
	ggëDús
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gdú
, 
CORBA_Envú⁄mít
 *
	gev
);

4297 
CORBA_boﬁón
 (*
hasDú
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gdú
, 
CORBA_Envú⁄mít
 *
	gev
);

4298 (*
	gªmoveVÆue
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gkey
, 
CORBA_Envú⁄mít
 *
	gev
);

4299 (*
	gªmoveDú
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gdú
, 
CORBA_Envú⁄mít
 *
	gev
);

4300 (*
	gaddD©aba£
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C⁄figD©aba£
 
	gdb
, c⁄° 
CORBA_ch¨
 * 
	gkey
, c⁄° 
B⁄obo_C⁄figD©aba£_DBFœgs
 
	gÊags
, 
CORBA_Envú⁄mít
 *
	gev
);

4301 (*
	gsync
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4302 (*
	gunIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4303 (*
	gunIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4304 (*
	gunIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4305 (*
	gunIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4306 } 
	tPOA_B⁄obo_C⁄figD©aba£__ïv
;

4308 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4309 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4310 
POA_B⁄obo_Pr›îtyBag__ïv
 *
	gB⁄obo_Pr›îtyBag_ïv
;

4311 
POA_B⁄obo_C⁄figD©aba£__ïv
 *
	gB⁄obo_C⁄figD©aba£_ïv
;

4312 } 
	tPOA_B⁄obo_C⁄figD©aba£__vïv
;

4314 *
	g_¥iv©e
;

4315 
POA_B⁄obo_C⁄figD©aba£__vïv
 *
	gvïv
;

4316 } 
	tPOA_B⁄obo_C⁄figD©aba£
;

4317 
POA_B⁄obo_C⁄figD©aba£__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4318 
POA_B⁄obo_C⁄figD©aba£__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4320 #i‚de‡
_deföed_POA_B⁄obo_C⁄åﬁFøme


4321 
	#_deföed_POA_B⁄obo_C⁄åﬁFøme
 1

	)

4323 *
	g_¥iv©e
;

4324 
B⁄obo_Gdk_WödowId
 (*
gëT›ÀvñId
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4325 
B⁄obo_Pr›îtyBag
 (*
gëAmbõ¡Pr›îtõs
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4326 
B⁄obo_UIC⁄èöî
 (*
gëUIC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4327 (*
	gnŸifyA˘iv©ed
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_boﬁón
 
	g°©e
, 
CORBA_Envú⁄mít
 *
	gev
);

4328 (*
	gqueueResize
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4329 (*
	ga˘iv©eURI
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	guri
, c⁄° 
CORBA_boﬁón
 
	gªœtive
, 
CORBA_Envú⁄mít
 *
	gev
);

4330 
B⁄obo_Unknown
 (*
gëP¨ítAc˚ssibÀ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4331 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4332 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4333 } 
	tPOA_B⁄obo_C⁄åﬁFøme__ïv
;

4335 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4336 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4337 
POA_B⁄obo_C⁄åﬁFøme__ïv
 *
	gB⁄obo_C⁄åﬁFøme_ïv
;

4338 } 
	tPOA_B⁄obo_C⁄åﬁFøme__vïv
;

4340 *
	g_¥iv©e
;

4341 
POA_B⁄obo_C⁄åﬁFøme__vïv
 *
	gvïv
;

4342 } 
	tPOA_B⁄obo_C⁄åﬁFøme
;

4343 
POA_B⁄obo_C⁄åﬁFøme__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4344 
POA_B⁄obo_C⁄åﬁFøme__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4346 #i‚de‡
_deföed_POA_B⁄obo_C⁄åﬁ


4347 
	#_deföed_POA_B⁄obo_C⁄åﬁ
 1

	)

4349 *
	g_¥iv©e
;

4350 
B⁄obo_Pr›îtyBag
 (*
gëPr›îtõs
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4351 
B⁄obo_Gtk_Requisôi⁄
 (*
gëDesúedSize
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4352 
B⁄obo_Unknown
 (*
gëAc˚ssibÀ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4353 
B⁄obo_Gdk_WödowId
 (*
gëWödowId
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gcookõ
, 
CORBA_Envú⁄mít
 *
	gev
);

4354 
B⁄obo_UIC⁄èöî
 (*
gëP›upC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4355 (*
	g£tFøme
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C⁄åﬁFøme
 
	g‰ame
, 
CORBA_Envú⁄mít
 *
	gev
);

4356 (*
	g£tSize
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_sh‹t
 
	gwidth
, c⁄° CORBA_sh‹à
	gheight
, 
CORBA_Envú⁄mít
 *
	gev
);

4357 (*
	g£tSèã
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Gtk_Sèã
 
	g°©e
, 
CORBA_Envú⁄mít
 *
	gev
);

4358 (*
	ga˘iv©e
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_boﬁón
á˘iv©e, 
CORBA_Envú⁄mít
 *
	gev
);

4359 
CORBA_boﬁón
 (*
focus
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Gtk_Dúe˘i⁄
 
	gdúe˘i⁄
, 
CORBA_Envú⁄mít
 *
	gev
);

4360 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4361 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4362 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4363 } 
	tPOA_B⁄obo_C⁄åﬁ__ïv
;

4365 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4366 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4367 
POA_B⁄obo_C⁄åﬁ__ïv
 *
	gB⁄obo_C⁄åﬁ_ïv
;

4368 } 
	tPOA_B⁄obo_C⁄åﬁ__vïv
;

4370 *
	g_¥iv©e
;

4371 
POA_B⁄obo_C⁄åﬁ__vïv
 *
	gvïv
;

4372 } 
	tPOA_B⁄obo_C⁄åﬁ
;

4373 
POA_B⁄obo_C⁄åﬁ__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4374 
POA_B⁄obo_C⁄åﬁ__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4376 #i‚de‡
_deföed_POA_B⁄obo_Pr›îtyC⁄åﬁ


4377 
	#_deföed_POA_B⁄obo_Pr›îtyC⁄åﬁ
 1

	)

4379 *
	g_¥iv©e
;

4380 
CORBA_l⁄g
 (*
_gë_∑geCou¡
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4381 
B⁄obo_C⁄åﬁ
 (*
gëC⁄åﬁ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_l⁄g
 
	g∑gíumbî
, 
CORBA_Envú⁄mít
 *
	gev
);

4382 (*
	gnŸifyA˘i⁄
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_l⁄g
 
	g∑gíumbî
, c⁄° 
B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄
 
	ga˘i⁄
, 
CORBA_Envú⁄mít
 *
	gev
);

4383 (*
	gunIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4384 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4385 } 
	tPOA_B⁄obo_Pr›îtyC⁄åﬁ__ïv
;

4387 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4388 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4389 
POA_B⁄obo_Pr›îtyC⁄åﬁ__ïv
 *
	gB⁄obo_Pr›îtyC⁄åﬁ_ïv
;

4390 } 
	tPOA_B⁄obo_Pr›îtyC⁄åﬁ__vïv
;

4392 *
	g_¥iv©e
;

4393 
POA_B⁄obo_Pr›îtyC⁄åﬁ__vïv
 *
	gvïv
;

4394 } 
	tPOA_B⁄obo_Pr›îtyC⁄åﬁ
;

4395 
POA_B⁄obo_Pr›îtyC⁄åﬁ__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4396 
POA_B⁄obo_Pr›îtyC⁄åﬁ__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4398 #i‚de‡
_deföed_POA_B⁄obo_ZoomabÀFøme


4399 
	#_deföed_POA_B⁄obo_ZoomabÀFøme
 1

	)

4401 *
	g_¥iv©e
;

4402 (*
	g⁄LevñCh™ged
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_Êﬂt
 
	gzoom_Àvñ
, 
CORBA_Envú⁄mít
 *
	gev
);

4403 (*
	g⁄P¨amëîsCh™ged
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4404 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4405 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4406 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4407 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4408 } 
	tPOA_B⁄obo_ZoomabÀFøme__ïv
;

4410 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4411 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4412 
POA_B⁄obo_ZoomabÀFøme__ïv
 *
	gB⁄obo_ZoomabÀFøme_ïv
;

4413 } 
	tPOA_B⁄obo_ZoomabÀFøme__vïv
;

4415 *
	g_¥iv©e
;

4416 
POA_B⁄obo_ZoomabÀFøme__vïv
 *
	gvïv
;

4417 } 
	tPOA_B⁄obo_ZoomabÀFøme
;

4418 
POA_B⁄obo_ZoomabÀFøme__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4419 
POA_B⁄obo_ZoomabÀFøme__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4421 #i‚de‡
_deföed_POA_B⁄obo_ZoomabÀ


4422 
	#_deföed_POA_B⁄obo_ZoomabÀ
 1

	)

4424 *
	g_¥iv©e
;

4425 
CORBA_Êﬂt
 (*
_gë_Àvñ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4426 
CORBA_Êﬂt
 (*
_gë_möLevñ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4427 
CORBA_Êﬂt
 (*
_gë_maxLevñ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4428 
CORBA_boﬁón
 (*
_gë_hasMöLevñ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4429 
CORBA_boﬁón
 (*
_gë_hasMaxLevñ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4430 
CORBA_boﬁón
 (*
_gë_isC⁄töuous
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4431 
	gB⁄obo_ZoomLevñLi°
* (*
	g_gë_¥e„ºedLevñs
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4432 
	gB⁄obo_ZoomLevñNameLi°
* (*
	g_gë_¥e„ºedLevñNames
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4433 (*
	gzoomIn
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4434 (*
	gzoomOut
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4435 (*
	gzoomFô
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4436 (*
	gzoomDeÁu…
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4437 (*
	g£tLevñ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_Êﬂt
 
	gzoom_Àvñ
, 
CORBA_Envú⁄mít
 *
	gev
);

4438 (*
	g£tFøme
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_ZoomabÀFøme
 
	gzoomabÀ_‰ame
, 
CORBA_Envú⁄mít
 *
	gev
);

4439 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4440 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4441 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4442 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4443 } 
	tPOA_B⁄obo_ZoomabÀ__ïv
;

4445 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4446 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4447 
POA_B⁄obo_ZoomabÀ__ïv
 *
	gB⁄obo_ZoomabÀ_ïv
;

4448 } 
	tPOA_B⁄obo_ZoomabÀ__vïv
;

4450 *
	g_¥iv©e
;

4451 
POA_B⁄obo_ZoomabÀ__vïv
 *
	gvïv
;

4452 } 
	tPOA_B⁄obo_ZoomabÀ
;

4453 
POA_B⁄obo_ZoomabÀ__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4454 
POA_B⁄obo_ZoomabÀ__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4456 #i‚de‡
_deföed_POA_B⁄obo_IãmC⁄èöî


4457 
	#_deföed_POA_B⁄obo_IãmC⁄èöî
 1

	)

4459 *
	g_¥iv©e
;

4460 
	gB⁄obo_IãmC⁄èöî_Obje˘Names
* (*
	gíumObje˘s
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4461 
B⁄obo_Unknown
 (*
gëObje˘ByName
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gôem_«me
, c⁄° 
CORBA_boﬁón
 
	g⁄ly_if_exi°s
, 
CORBA_Envú⁄mít
 *
	gev
);

4462 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4463 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4464 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4465 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4466 } 
	tPOA_B⁄obo_IãmC⁄èöî__ïv
;

4468 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4469 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4470 
POA_B⁄obo_IãmC⁄èöî__ïv
 *
	gB⁄obo_IãmC⁄èöî_ïv
;

4471 } 
	tPOA_B⁄obo_IãmC⁄èöî__vïv
;

4473 *
	g_¥iv©e
;

4474 
POA_B⁄obo_IãmC⁄èöî__vïv
 *
	gvïv
;

4475 } 
	tPOA_B⁄obo_IãmC⁄èöî
;

4476 
POA_B⁄obo_IãmC⁄èöî__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4477 
POA_B⁄obo_IãmC⁄èöî__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4479 #i‚de‡
_deföed_POA_B⁄obo_C™vas_Comp⁄ít


4480 
	#_deföed_POA_B⁄obo_C™vas_Comp⁄ít
 1

	)

4482 *
	g_¥iv©e
;

4483 
	gB⁄obo_C™vas_AπUTA
* (*
	gupd©e
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
	g°©e
, c⁄° 
B⁄obo_C™vas_afföe
 
	gaff
, c⁄° 
B⁄obo_C™vas_SVP
* 
	g˛ù_∑th
, c⁄° 
CORBA_l⁄g
 
	gÊags
, 
CORBA_doubÀ
* 
	gx1
, CORBA_doubÀ* 
	gy1
, CORBA_doubÀ* 
	gx2
, CORBA_doubÀ* 
	gy2
, 
CORBA_Envú⁄mít
 *
	gev
);

4484 (*
	gªÆize
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gdøwabÀ
, 
CORBA_Envú⁄mít
 *
	gev
);

4485 (*
	guƒólize
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4486 (*
	gm≠
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4487 (*
	gunm≠
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4488 (*
	gdøw
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
	g°©e
, c⁄° 
CORBA_ch¨
 * 
	gdøwabÀ
, c⁄° 
CORBA_sh‹t
 
	gx
, c⁄° CORBA_sh‹à
	gy
, c⁄° CORBA_sh‹à
	gwidth
, c⁄° CORBA_sh‹à
	gheight
, 
CORBA_Envú⁄mít
 *
	gev
);

4489 (*
	gªndî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
B⁄obo_C™vas_Buf
* 
	gbuf
, 
CORBA_Envú⁄mít
 *
	gev
);

4490 
CORBA_boﬁón
 (*
c⁄èös
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_doubÀ
 
	gx
, c⁄° CORBA_doubÀ 
	gy
, 
CORBA_Envú⁄mít
 *
	gev
);

4491 (*
	gbounds
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
	g°©e
, 
CORBA_doubÀ
* 
	gx1
, CORBA_doubÀ* 
	gx2
, CORBA_doubÀ* 
	gy1
, CORBA_doubÀ* 
	gy2
, 
CORBA_Envú⁄mít
 *
	gev
);

4492 
CORBA_boﬁón
 (*
evít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
	g°©e
, c⁄° 
B⁄obo_Gdk_Evít
* 
	gevít
, 
CORBA_Envú⁄mít
 *
	gev
);

4493 (*
	g£tC™vasSize
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_sh‹t
 
	gx
, c⁄° CORBA_sh‹à
	gy
, c⁄° CORBA_sh‹à
	gwidth
, c⁄° CORBA_sh‹à
	gheight
, 
CORBA_Envú⁄mít
 *
	gev
);

4494 (*
	g£tBounds
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C™vas_DRe˘
* 
	gbbox
, 
CORBA_Envú⁄mít
 *
	gev
);

4495 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4496 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4497 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4498 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4499 (*
	gunIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4500 (*
	gunIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4501 (*
	gunIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4502 (*
	gunIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4503 } 
	tPOA_B⁄obo_C™vas_Comp⁄ít__ïv
;

4505 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4506 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4507 
POA_B⁄obo_C™vas_Comp⁄ít__ïv
 *
	gB⁄obo_C™vas_Comp⁄ít_ïv
;

4508 } 
	tPOA_B⁄obo_C™vas_Comp⁄ít__vïv
;

4510 *
	g_¥iv©e
;

4511 
POA_B⁄obo_C™vas_Comp⁄ít__vïv
 *
	gvïv
;

4512 } 
	tPOA_B⁄obo_C™vas_Comp⁄ít
;

4513 
POA_B⁄obo_C™vas_Comp⁄ít__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4514 
POA_B⁄obo_C™vas_Comp⁄ít__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4516 #i‚de‡
_deföed_POA_B⁄obo_C™vas_Comp⁄ítProxy


4517 
	#_deföed_POA_B⁄obo_C™vas_Comp⁄ítProxy
 1

	)

4519 *
	g_¥iv©e
;

4520 (*
	gªque°Upd©e
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4521 (*
	ggøbFocus
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_unsig√d_l⁄g
 
	gmask
, c⁄° 
CORBA_l⁄g
 
	gcurs‹
, c⁄° CORBA_unsig√d_l⁄g 
	gtime
, 
CORBA_Envú⁄mít
 *
	gev
);

4522 (*
	gungøbFocus
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_unsig√d_l⁄g
 
	gtime
, 
CORBA_Envú⁄mít
 *
	gev
);

4523 
B⁄obo_UIC⁄èöî
 (*
gëUIC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4524 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4525 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4526 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4527 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4528 (*
	gunIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4529 (*
	gunIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4530 (*
	gunIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4531 (*
	gunIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4532 } 
	tPOA_B⁄obo_C™vas_Comp⁄ítProxy__ïv
;

4534 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4535 
POA_B⁄obo_C™vas_Comp⁄ítProxy__ïv
 *
	gB⁄obo_C™vas_Comp⁄ítProxy_ïv
;

4536 } 
	tPOA_B⁄obo_C™vas_Comp⁄ítProxy__vïv
;

4538 *
	g_¥iv©e
;

4539 
POA_B⁄obo_C™vas_Comp⁄ítProxy__vïv
 *
	gvïv
;

4540 } 
	tPOA_B⁄obo_C™vas_Comp⁄ítProxy
;

4541 
POA_B⁄obo_C™vas_Comp⁄ítProxy__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4542 
POA_B⁄obo_C™vas_Comp⁄ítProxy__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4544 #i‚de‡
_deföed_POA_B⁄obo_C⁄åﬁFa˘‹y


4545 
	#_deföed_POA_B⁄obo_C⁄åﬁFa˘‹y
 1

	)

4547 *
	g_¥iv©e
;

4548 
B⁄obo_C⁄åﬁ
 (*
¸óãC⁄åﬁ
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_C⁄åﬁFøme
 
	g‰ame
, c⁄° 
B⁄obo_UIC⁄èöî
 
	guic
, 
CORBA_Envú⁄mít
 *
	gev
);

4549 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4550 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4551 } 
	tPOA_B⁄obo_C⁄åﬁFa˘‹y__ïv
;

4553 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4554 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4555 
POA_B⁄obo_C⁄åﬁFa˘‹y__ïv
 *
	gB⁄obo_C⁄åﬁFa˘‹y_ïv
;

4556 } 
	tPOA_B⁄obo_C⁄åﬁFa˘‹y__vïv
;

4558 *
	g_¥iv©e
;

4559 
POA_B⁄obo_C⁄åﬁFa˘‹y__vïv
 *
	gvïv
;

4560 } 
	tPOA_B⁄obo_C⁄åﬁFa˘‹y
;

4561 
POA_B⁄obo_C⁄åﬁFa˘‹y__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4562 
POA_B⁄obo_C⁄åﬁFa˘‹y__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4564 #i‚de‡
_deföed_POA_B⁄obo_C™vasComp⁄ítFa˘‹y


4565 
	#_deföed_POA_B⁄obo_C™vasComp⁄ítFa˘‹y
 1

	)

4567 *
	g_¥iv©e
;

4568 
B⁄obo_C™vas_Comp⁄ít
 (*
¸óãC™vasComp⁄ít
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_boﬁón
 
	gØ
, c⁄° 
B⁄obo_C™vas_Comp⁄ítProxy
 
	g¥oxy
, 
CORBA_Envú⁄mít
 *
	gev
);

4569 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4570 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4571 } 
	tPOA_B⁄obo_C™vasComp⁄ítFa˘‹y__ïv
;

4573 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4574 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4575 
POA_B⁄obo_C™vasComp⁄ítFa˘‹y__ïv
 *
	gB⁄obo_C™vasComp⁄ítFa˘‹y_ïv
;

4576 } 
	tPOA_B⁄obo_C™vasComp⁄ítFa˘‹y__vïv
;

4578 *
	g_¥iv©e
;

4579 
POA_B⁄obo_C™vasComp⁄ítFa˘‹y__vïv
 *
	gvïv
;

4580 } 
	tPOA_B⁄obo_C™vasComp⁄ítFa˘‹y
;

4581 
POA_B⁄obo_C™vasComp⁄ítFa˘‹y__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4582 
POA_B⁄obo_C™vasComp⁄ítFa˘‹y__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4584 #i‚de‡
_deföed_POA_B⁄obo_EmbeddabÀ


4585 
	#_deföed_POA_B⁄obo_EmbeddabÀ
 1

	)

4587 *
	g_¥iv©e
;

4588 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4589 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4590 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4591 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4592 (*
	gunIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4593 (*
	gunIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4594 (*
	gunIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4595 (*
	gunIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4596 } 
	tPOA_B⁄obo_EmbeddabÀ__ïv
;

4598 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4599 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4600 
POA_B⁄obo_EmbeddabÀ__ïv
 *
	gB⁄obo_EmbeddabÀ_ïv
;

4601 } 
	tPOA_B⁄obo_EmbeddabÀ__vïv
;

4603 *
	g_¥iv©e
;

4604 
POA_B⁄obo_EmbeddabÀ__vïv
 *
	gvïv
;

4605 } 
	tPOA_B⁄obo_EmbeddabÀ
;

4606 
POA_B⁄obo_EmbeddabÀ__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4607 
POA_B⁄obo_EmbeddabÀ__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4609 #i‚de‡
_deföed_POA_B⁄obo_Pröt


4610 
	#_deföed_POA_B⁄obo_Pröt
 1

	)

4612 *
	g_¥iv©e
;

4613 
B⁄obo_Såóm
 (*
ªndî
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_PrötDimísi⁄s
* 
	gpd
, c⁄° 
B⁄obo_PrötSciss‹
* 
	gsciss‹
, 
CORBA_Envú⁄mít
 *
	gev
);

4614 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4615 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4616 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4617 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4618 } 
	tPOA_B⁄obo_Pröt__ïv
;

4620 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4621 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4622 
POA_B⁄obo_Pröt__ïv
 *
	gB⁄obo_Pröt_ïv
;

4623 } 
	tPOA_B⁄obo_Pröt__vïv
;

4625 *
	g_¥iv©e
;

4626 
POA_B⁄obo_Pröt__vïv
 *
	gvïv
;

4627 } 
	tPOA_B⁄obo_Pröt
;

4628 
POA_B⁄obo_Pröt__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4629 
POA_B⁄obo_Pröt__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4631 #i‚de‡
_deföed_POA_B⁄obo_Clùbﬂrd


4632 
	#_deföed_POA_B⁄obo_Clùbﬂrd
 1

	)

4634 *
	g_¥iv©e
;

4635 (*
	g£tClùbﬂrd
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_M⁄ikî
 
	g∑°ög_m⁄ikî
, c⁄° B⁄obo_M⁄ikî 
	glökög_m⁄ikî
, 
CORBA_Envú⁄mít
 *
	gev
);

4636 
B⁄obo_M⁄ikî
 (*
∑°e
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4637 
B⁄obo_M⁄ikî
 (*
lök
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4638 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4639 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4640 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4641 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4642 } 
	tPOA_B⁄obo_Clùbﬂrd__ïv
;

4644 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4645 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4646 
POA_B⁄obo_Clùbﬂrd__ïv
 *
	gB⁄obo_Clùbﬂrd_ïv
;

4647 } 
	tPOA_B⁄obo_Clùbﬂrd__vïv
;

4649 *
	g_¥iv©e
;

4650 
POA_B⁄obo_Clùbﬂrd__vïv
 *
	gvïv
;

4651 } 
	tPOA_B⁄obo_Clùbﬂrd
;

4652 
POA_B⁄obo_Clùbﬂrd__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4653 
POA_B⁄obo_Clùbﬂrd__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4655 #i‚de‡
_deföed_POA_B⁄obo_ClùbﬂrdSt‹e


4656 
	#_deföed_POA_B⁄obo_ClùbﬂrdSt‹e
 1

	)

4658 *
	g_¥iv©e
;

4659 (*
	g„tchSåóm
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Pîsi°Såóm
 
	gsour˚
, c⁄° 
B⁄obo_M⁄ikî
 
	glökög_m⁄ikî
, 
CORBA_Envú⁄mít
 *
	gev
);

4660 (*
	g„tchSt‹age
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Pîsi°St‹age
 
	gsour˚
, c⁄° 
B⁄obo_M⁄ikî
 
	glökög_m⁄ikî
, 
CORBA_Envú⁄mít
 *
	gev
);

4661 (*
	gunIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4662 (*
	gunIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4663 (*
	gunIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4664 (*
	gunIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4665 } 
	tPOA_B⁄obo_ClùbﬂrdSt‹e__ïv
;

4667 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4668 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4669 
POA_B⁄obo_ClùbﬂrdSt‹e__ïv
 *
	gB⁄obo_ClùbﬂrdSt‹e_ïv
;

4670 } 
	tPOA_B⁄obo_ClùbﬂrdSt‹e__vïv
;

4672 *
	g_¥iv©e
;

4673 
POA_B⁄obo_ClùbﬂrdSt‹e__vïv
 *
	gvïv
;

4674 } 
	tPOA_B⁄obo_ClùbﬂrdSt‹e
;

4675 
POA_B⁄obo_ClùbﬂrdSt‹e__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4676 
POA_B⁄obo_ClùbﬂrdSt‹e__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4678 #i‚de‡
_deföed_POA_B⁄obo_Aµliˇti⁄


4679 
	#_deföed_POA_B⁄obo_Aµliˇti⁄
 1

	)

4681 *
	g_¥iv©e
;

4682 
	gCORBA_™y
* (*
	gmesßge
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	gmsg
, c⁄° 
B⁄obo_Aµliˇti⁄_ArgLi°
* 
	g¨gs
, 
CORBA_Envú⁄mít
 *
	gev
);

4683 
CORBA_l⁄g
 (*
√wIn°™˚
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
B⁄obo_Aµliˇti⁄_¨gv_t
* 
	g¨gv
, 
CORBA_Envú⁄mít
 *
	gev
);

4684 
	gB⁄obo_Aµliˇti⁄_MesßgeLi°
* (*
	gli°Mesßges
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4685 
CORBA_°rög
 (*
gëName
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4686 (*
	gunim∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4687 (*
	gunim∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4688 (*
	gunim∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4689 (*
	gunim∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4690 (*
	gunim∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4691 (*
	gunim∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4692 (*
	gunim∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4693 (*
	gunim∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, 
CORBA_Envú⁄mít
 *
	gev
);

4694 } 
	tPOA_B⁄obo_Aµliˇti⁄__ïv
;

4696 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

4697 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

4698 
POA_B⁄obo_Aµliˇti⁄__ïv
 *
	gB⁄obo_Aµliˇti⁄_ïv
;

4699 } 
	tPOA_B⁄obo_Aµliˇti⁄__vïv
;

4701 *
	g_¥iv©e
;

4702 
POA_B⁄obo_Aµliˇti⁄__vïv
 *
	gvïv
;

4703 } 
	tPOA_B⁄obo_Aµliˇti⁄
;

4704 
POA_B⁄obo_Aµliˇti⁄__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4705 
POA_B⁄obo_Aµliˇti⁄__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

4709 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_gëP¨ít
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_M⁄ikî
 (*
_im∂_gëP¨ít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4710 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_£tP¨ít
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tP¨ít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_M⁄ikî
 
∑ª¡
, CORBA_Environment *ev));

4711 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_gëName
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëName
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4712 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_£tName
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tName
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
«me
, CORBA_Environment *ev));

4713 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_ªsﬁve
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_ªsﬁve
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_ResﬁveO±i⁄s
* 
›ti⁄s
, c⁄° 
CORBA_ch¨
 * 
ªque°edI¡îÁ˚
, CORBA_Environment *ev));

4714 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_equÆ
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_l⁄g
 (*
_im∂_equÆ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
«me
, CORBA_Environment *ev));

4715 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_unIm∂emíãd1
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4716 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikî_unIm∂emíãd2
(
POA_B⁄obo_M⁄ikî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4717 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîExãndî_ªsﬁve
(
POA_B⁄obo_M⁄ikîExãndî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_ªsﬁve
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_M⁄ikî
 
m
, c⁄° 
B⁄obo_ResﬁveO±i⁄s
* 
›ti⁄s
, c⁄° 
CORBA_ch¨
 * 
«me
, c⁄° CORBA_ch¨ * 
ªque°edI¡îÁ˚
, CORBA_Environment *ev));

4718 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîExãndî_unIm∂emíãd1
(
POA_B⁄obo_M⁄ikîExãndî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4719 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîExãndî_unIm∂emíãd2
(
POA_B⁄obo_M⁄ikîExãndî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4720 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîExãndî_unIm∂emíãd3
(
POA_B⁄obo_M⁄ikîExãndî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4721 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîExãndî_unIm∂emíãd4
(
POA_B⁄obo_M⁄ikîExãndî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4722 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_gëInfo
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_St‹ageInfo
* (*
_im∂_gëInfo
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, CORBA_Environment *ev));

4723 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_£tInfo
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tInfo
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_St‹ageInfo
* 
öfo
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, CORBA_Environment *ev));

4724 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_ªad
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªad
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_l⁄g
 
cou¡
, 
B⁄obo_Såóm_iobuf
** 
buf„r
, CORBA_Environment *ev));

4725 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_wrôe
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_wrôe
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Såóm_iobuf
* 
buf„r
, CORBA_Environment *ev));

4726 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_£ek
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_l⁄g
 (*
_im∂_£ek
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° CORBA_l⁄g 
off£t
, c⁄° 
B⁄obo_Såóm_SìkTy≥
 
whí˚
, CORBA_Environment *ev));

4727 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_åunˇã
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_åunˇã
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_l⁄g
 
Àngth
, CORBA_Environment *ev));

4728 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_commô
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_commô
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4729 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_ªvît
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªvît
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4730 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_unIm∂emíãd1
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4731 
_ORBIT_skñ_smÆl_B⁄obo_Såóm_unIm∂emíãd2
(
POA_B⁄obo_Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4732 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_gëInfo
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_St‹ageInfo
* (*
_im∂_gëInfo
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, CORBA_Environment *ev));

4733 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_£tInfo
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tInfo
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹ageInfo
* 
öfo
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, CORBA_Environment *ev));

4734 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_›íSåóm
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Såóm
 (*
_im∂_›íSåóm
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹age_O≥nMode
 
mode
, CORBA_Environment *ev));

4735 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_›íSt‹age
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_St‹age
 (*
_im∂_›íSt‹age
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹age_O≥nMode
 
mode
, CORBA_Environment *ev));

4736 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_c›yTo
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_c›yTo
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_St‹age
 
èrgë
, CORBA_Environment *ev));

4737 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_li°C⁄ã¡s
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_St‹age_Dúe˘‹yLi°
* (*
_im∂_li°C⁄ã¡s
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, CORBA_Environment *ev));

4738 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_îa£
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_îa£
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, CORBA_Environment *ev));

4739 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_ª«me
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ª«me
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th_«me
, c⁄° CORBA_ch¨ * 
√w_∑th_«me
, CORBA_Environment *ev));

4740 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_commô
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_commô
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4741 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_ªvît
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªvît
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4742 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_unIm∂emíãd1
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4743 
_ORBIT_skñ_smÆl_B⁄obo_St‹age_unIm∂emíãd2
(
POA_B⁄obo_St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4744 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_gëObje˘
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_gëObje˘
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
«me
, c⁄° CORBA_ch¨ * 
ªpoId
, CORBA_Environment *ev));

4745 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_¸óãFromName
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_M⁄ikî
 (*
_im∂_¸óãFromName
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
«me
, CORBA_Environment *ev));

4746 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_gëExãndî
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_M⁄ikîExãndî
 (*
_im∂_gëExãndî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
m⁄ikîPªfix
, c⁄° CORBA_ch¨ * 
öãrÁ˚Id
, CORBA_Environment *ev));

4747 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd1
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4748 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd2
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4749 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd3
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4750 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd4
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4751 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd5
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4752 
_ORBIT_skñ_smÆl_B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd6
(
POA_B⁄obo_M⁄ikîC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4753 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_addObje˘
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_addObje˘
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_Obje˘
 
obj
, CORBA_Environment *ev));

4754 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_ªmoveObje˘
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªmoveObje˘
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_Obje˘
 
obj
, CORBA_Environment *ev));

4755 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_addKey
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_addKey
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4756 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_ªmoveKey
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªmoveKey
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4757 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_©ExôUƒef
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_©ExôUƒef
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_Obje˘
 
obj
, CORBA_Environment *ev));

4758 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_unIm∂emíãd1
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4759 
_ORBIT_skñ_smÆl_B⁄obo_Ru¬ögC⁄ãxt_unIm∂emíãd2
(
POA_B⁄obo_Ru¬ögC⁄ãxt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4760 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°_gëC⁄ã¡Ty≥s
(
POA_B⁄obo_Pîsi°
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°
* (*
_im∂_gëC⁄ã¡Ty≥s
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4761 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°_gëIId
(
POA_B⁄obo_Pîsi°
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Pîsi°_IID
 (*
_im∂_gëIId
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4762 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°_isDúty
(
POA_B⁄obo_Pîsi°
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂_isDúty
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4763 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°_unIm∂emíãd1
(
POA_B⁄obo_Pîsi°
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4764 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°_unIm∂emíãd2
(
POA_B⁄obo_Pîsi°
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4765 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Fûe_lﬂd
(
POA_B⁄obo_Pîsi°Fûe
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_lﬂd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
uri
, CORBA_Environment *ev));

4766 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Fûe_ßve
(
POA_B⁄obo_Pîsi°Fûe
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ßve
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
uri
, CORBA_Environment *ev));

4767 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Fûe_gëCuºítFûe
(
POA_B⁄obo_Pîsi°Fûe
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëCuºítFûe
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4768 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Fûe_unIm∂emíãd3
(
POA_B⁄obo_Pîsi°Fûe
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4769 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Fûe_unIm∂emíãd4
(
POA_B⁄obo_Pîsi°Fûe
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4770 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°St‹age_lﬂd
(
POA_B⁄obo_Pîsi°St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_lﬂd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_St‹age
 
°‹age
, CORBA_Environment *ev));

4771 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°St‹age_ßve
(
POA_B⁄obo_Pîsi°St‹age
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ßve
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_St‹age
 
°‹age
, c⁄° 
CORBA_boﬁón
 
ßme_as_lﬂded
, CORBA_Environment *ev));

4772 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Såóm_lﬂd
(
POA_B⁄obo_Pîsi°Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_lﬂd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Såóm
 
°ªam
, c⁄° 
CORBA_ch¨
 * 
ty≥
, CORBA_Environment *ev));

4773 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Såóm_ßve
(
POA_B⁄obo_Pîsi°Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ßve
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Såóm
 
°ªam
, c⁄° 
CORBA_ch¨
 * 
ty≥
, CORBA_Environment *ev));

4774 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Såóm_unIm∂emíãd3
(
POA_B⁄obo_Pîsi°Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4775 
_ORBIT_skñ_smÆl_B⁄obo_Pîsi°Såóm_unIm∂emíãd4
(
POA_B⁄obo_Pîsi°Såóm
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4776 
_ORBIT_skñ_smÆl_B⁄obo_Li°íî_evít
(
POA_B⁄obo_Li°íî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_evít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
evít_«me
, c⁄° 
CORBA_™y
* 
¨gs
, CORBA_Environment *ev));

4777 
_ORBIT_skñ_smÆl_B⁄obo_Li°íî_unIm∂emíãd
(
POA_B⁄obo_Li°íî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4778 
_ORBIT_skñ_smÆl_B⁄obo_Li°íî_unIm∂emíãd2
(
POA_B⁄obo_Li°íî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4779 
_ORBIT_skñ_smÆl_B⁄obo_EvítSour˚_addLi°íî
(
POA_B⁄obo_EvítSour˚
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_addLi°íî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Li°íî
 
l
, CORBA_Environment *ev));

4780 
_ORBIT_skñ_smÆl_B⁄obo_EvítSour˚_addLi°íîWôhMask
(
POA_B⁄obo_EvítSour˚
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_addLi°íîWôhMask
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Li°íî
 
l
, c⁄° 
CORBA_ch¨
 * 
evít_mask
, CORBA_Environment *ev));

4781 
_ORBIT_skñ_smÆl_B⁄obo_EvítSour˚_ªmoveLi°íî
(
POA_B⁄obo_EvítSour˚
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªmoveLi°íî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Li°íî
 
l
, CORBA_Environment *ev));

4782 
_ORBIT_skñ_smÆl_B⁄obo_EvítSour˚_unIm∂emíãd
(
POA_B⁄obo_EvítSour˚
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4783 
_ORBIT_skñ_smÆl_B⁄obo_EvítSour˚_unIm∂emíãd2
(
POA_B⁄obo_EvítSour˚
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4784 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_£tC⁄èöî
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_UIC⁄èöî
 
c⁄èöî
, CORBA_Environment *ev));

4785 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_un£tC⁄èöî
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_un£tC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4786 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít__gë_«me
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂__gë_«me
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4787 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_des¸ibeVîbs
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_des¸ibeVîbs
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4788 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_execVîb
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_execVîb
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
˙ame
, CORBA_Environment *ev));

4789 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_uiEvít
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_uiEvít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
ty≥
, c⁄° CORBA_ch¨ * 
°©e
, CORBA_Environment *ev));

4790 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_unIm∂emíãd
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4791 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_unIm∂emíãd2
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4792 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_unIm∂emíãd3
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4793 
_ORBIT_skñ_smÆl_B⁄obo_UIComp⁄ít_unIm∂emíãd4
(
POA_B⁄obo_UIComp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4794 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_ªgi°îComp⁄ít
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªgi°îComp⁄ít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
comp⁄ít_«me
, c⁄° 
B⁄obo_UIComp⁄ít
 
comp⁄ít
, CORBA_Environment *ev));

4795 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_dîegi°îComp⁄ít
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_dîegi°îComp⁄ít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
comp⁄ít_«me
, CORBA_Environment *ev));

4796 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_‰ìze
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_‰ìze
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4797 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_thaw
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_thaw
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4798 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_£tAâr
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tAâr
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
©å
, c⁄° CORBA_ch¨ * 
vÆue
, c⁄° CORBA_ch¨ * 
comp⁄ít_«me
, CORBA_Environment *ev));

4799 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_gëAâr
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëAâr
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
©å
, CORBA_Environment *ev));

4800 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_£tNode
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tNode
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
xml
, c⁄° CORBA_ch¨ * 
comp⁄ít_«me
, CORBA_Environment *ev));

4801 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_gëNode
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëNode
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
CORBA_boﬁón
 
nodeO∆y
, CORBA_Environment *ev));

4802 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_ªmoveNode
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªmoveNode
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
by_comp⁄ít_«me
, CORBA_Environment *ev));

4803 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_exi°s
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂_exi°s
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, CORBA_Environment *ev));

4804 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_execVîb
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_execVîb
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
˙ame
, CORBA_Environment *ev));

4805 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_uiEvít
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_uiEvít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
ty≥
, c⁄° CORBA_ch¨ * 
°©e
, CORBA_Environment *ev));

4806 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_£tObje˘
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tObje˘
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_Unknown
 
c⁄åﬁ
, CORBA_Environment *ev));

4807 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_gëObje˘
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_gëObje˘
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
∑th
, CORBA_Environment *ev));

4808 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_unIm∂emíãd
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4809 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_unIm∂emíãd2
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4810 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_unIm∂emíãd3
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4811 
_ORBIT_skñ_smÆl_B⁄obo_UIC⁄èöî_unIm∂emíãd4
(
POA_B⁄obo_UIC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4812 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëKeys
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_KeyLi°
* (*
_im∂_gëKeys
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
fûãr
, CORBA_Environment *ev));

4813 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëTy≥
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_Ty≥Code
 (*
_im∂_gëTy≥
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4814 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëVÆue
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_™y
* (*
_im∂_gëVÆue
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4815 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_£tVÆue
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tVÆue
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, c⁄° 
CORBA_™y
* 
vÆue
, CORBA_Environment *ev));

4816 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëVÆues
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Pr›îtySë
* (*
_im∂_gëVÆues
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
fûãr
, CORBA_Environment *ev));

4817 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_£tVÆues
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tVÆues
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Pr›îtySë
* 
£t
, CORBA_Environment *ev));

4818 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëDeÁu…
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_™y
* (*
_im∂_gëDeÁu…
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4819 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëDocTôÀ
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëDocTôÀ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4820 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëDoc
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëDoc
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4821 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_gëFœgs
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Pr›îtyFœgs
 (*
_im∂_gëFœgs
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4822 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_unIm∂emíãd1
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4823 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_unIm∂emíãd2
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4824 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_unIm∂emíãd3
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4825 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyBag_unIm∂emíãd4
(
POA_B⁄obo_Pr›îtyBag
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4826 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£__gë_isWrôóbÀ
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂__gë_isWrôóbÀ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4827 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_gëDús
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_KeyLi°
* (*
_im∂_gëDús
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
dú
, CORBA_Environment *ev));

4828 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_hasDú
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂_hasDú
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
dú
, CORBA_Environment *ev));

4829 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_ªmoveVÆue
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªmoveVÆue
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
key
, CORBA_Environment *ev));

4830 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_ªmoveDú
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªmoveDú
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
dú
, CORBA_Environment *ev));

4831 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_addD©aba£
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_addD©aba£
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C⁄figD©aba£
 
db
, c⁄° 
CORBA_ch¨
 * 
key
, c⁄° 
B⁄obo_C⁄figD©aba£_DBFœgs
 
Êags
, CORBA_Environment *ev));

4832 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_sync
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_sync
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4833 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_unIm∂emíãd5
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4834 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_unIm∂emíãd6
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4835 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_unIm∂emíãd7
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4836 
_ORBIT_skñ_smÆl_B⁄obo_C⁄figD©aba£_unIm∂emíãd8
(
POA_B⁄obo_C⁄figD©aba£
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4837 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_gëT›ÀvñId
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Gdk_WödowId
 (*
_im∂_gëT›ÀvñId
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4838 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_gëAmbõ¡Pr›îtõs
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Pr›îtyBag
 (*
_im∂_gëAmbõ¡Pr›îtõs
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4839 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_gëUIC⁄èöî
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_UIC⁄èöî
 (*
_im∂_gëUIC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4840 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_nŸifyA˘iv©ed
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_nŸifyA˘iv©ed
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_boﬁón
 
°©e
, CORBA_Environment *ev));

4841 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_queueResize
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_queueResize
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4842 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_a˘iv©eURI
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_a˘iv©eURI
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
uri
, c⁄° 
CORBA_boﬁón
 
ªœtive
, CORBA_Environment *ev));

4843 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_gëP¨ítAc˚ssibÀ
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_gëP¨ítAc˚ssibÀ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4844 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_unIm∂emíãd
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4845 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFøme_unIm∂emíãd2
(
POA_B⁄obo_C⁄åﬁFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4846 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_gëPr›îtõs
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Pr›îtyBag
 (*
_im∂_gëPr›îtõs
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4847 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_gëDesúedSize
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Gtk_Requisôi⁄
 (*
_im∂_gëDesúedSize
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4848 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_gëAc˚ssibÀ
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_gëAc˚ssibÀ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4849 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_gëWödowId
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Gdk_WödowId
 (*
_im∂_gëWödowId
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
cookõ
, CORBA_Environment *ev));

4850 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_gëP›upC⁄èöî
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_UIC⁄èöî
 (*
_im∂_gëP›upC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4851 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_£tFøme
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tFøme
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C⁄åﬁFøme
 
‰ame
, CORBA_Environment *ev));

4852 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_£tSize
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tSize
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_sh‹t
 
width
, c⁄° CORBA_sh‹à
height
, CORBA_Environment *ev));

4853 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_£tSèã
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tSèã
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Gtk_Sèã
 
°©e
, CORBA_Environment *ev));

4854 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_a˘iv©e
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_a˘iv©e
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_boﬁón
 
a˘iv©e
, CORBA_Environment *ev));

4855 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_focus
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂_focus
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Gtk_Dúe˘i⁄
 
dúe˘i⁄
, CORBA_Environment *ev));

4856 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_unIm∂emíãd
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4857 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_unIm∂emíãd2
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4858 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁ_unIm∂emíãd3
(
POA_B⁄obo_C⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4859 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyC⁄åﬁ__gë_∑geCou¡
(
POA_B⁄obo_Pr›îtyC⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_l⁄g
 (*
_im∂__gë_∑geCou¡
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4860 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyC⁄åﬁ_gëC⁄åﬁ
(
POA_B⁄obo_Pr›îtyC⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_C⁄åﬁ
 (*
_im∂_gëC⁄åﬁ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_l⁄g
 
∑gíumbî
, CORBA_Environment *ev));

4861 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyC⁄åﬁ_nŸifyA˘i⁄
(
POA_B⁄obo_Pr›îtyC⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_nŸifyA˘i⁄
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_l⁄g
 
∑gíumbî
, c⁄° 
B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄
 
a˘i⁄
, CORBA_Environment *ev));

4862 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyC⁄åﬁ_unIm∂emíãd
(
POA_B⁄obo_Pr›îtyC⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4863 
_ORBIT_skñ_smÆl_B⁄obo_Pr›îtyC⁄åﬁ_unIm∂emíãd2
(
POA_B⁄obo_Pr›îtyC⁄åﬁ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4864 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀFøme_⁄LevñCh™ged
(
POA_B⁄obo_ZoomabÀFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_⁄LevñCh™ged
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_Êﬂt
 
zoom_Àvñ
, CORBA_Environment *ev));

4865 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀFøme_⁄P¨amëîsCh™ged
(
POA_B⁄obo_ZoomabÀFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_⁄P¨amëîsCh™ged
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4866 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀFøme_unIm∂emíãd1
(
POA_B⁄obo_ZoomabÀFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4867 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀFøme_unIm∂emíãd2
(
POA_B⁄obo_ZoomabÀFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4868 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀFøme_unIm∂emíãd3
(
POA_B⁄obo_ZoomabÀFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4869 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀFøme_unIm∂emíãd4
(
POA_B⁄obo_ZoomabÀFøme
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4870 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_Àvñ
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_Êﬂt
 (*
_im∂__gë_Àvñ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4871 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_möLevñ
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_Êﬂt
 (*
_im∂__gë_möLevñ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4872 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_maxLevñ
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_Êﬂt
 (*
_im∂__gë_maxLevñ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4873 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_hasMöLevñ
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂__gë_hasMöLevñ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4874 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_hasMaxLevñ
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂__gë_hasMaxLevñ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4875 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_isC⁄töuous
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂__gë_isC⁄töuous
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4876 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_¥e„ºedLevñs
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_ZoomLevñLi°
* (*
_im∂__gë_¥e„ºedLevñs
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4877 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ__gë_¥e„ºedLevñNames
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_ZoomLevñNameLi°
* (*
_im∂__gë_¥e„ºedLevñNames
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4878 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_zoomIn
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_zoomIn
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4879 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_zoomOut
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_zoomOut
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4880 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_zoomFô
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_zoomFô
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4881 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_zoomDeÁu…
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_zoomDeÁu…
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4882 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_£tLevñ
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tLevñ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_Êﬂt
 
zoom_Àvñ
, CORBA_Environment *ev));

4883 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_£tFøme
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tFøme
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_ZoomabÀFøme
 
zoomabÀ_‰ame
, CORBA_Environment *ev));

4884 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_unIm∂emíãd1
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4885 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_unIm∂emíãd2
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4886 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_unIm∂emíãd3
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4887 
_ORBIT_skñ_smÆl_B⁄obo_ZoomabÀ_unIm∂emíãd4
(
POA_B⁄obo_ZoomabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4888 
_ORBIT_skñ_smÆl_B⁄obo_IãmC⁄èöî_íumObje˘s
(
POA_B⁄obo_IãmC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_IãmC⁄èöî_Obje˘Names
* (*
_im∂_íumObje˘s
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4889 
_ORBIT_skñ_smÆl_B⁄obo_IãmC⁄èöî_gëObje˘ByName
(
POA_B⁄obo_IãmC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Unknown
 (*
_im∂_gëObje˘ByName
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
ôem_«me
, c⁄° 
CORBA_boﬁón
 
⁄ly_if_exi°s
, CORBA_Environment *ev));

4890 
_ORBIT_skñ_smÆl_B⁄obo_IãmC⁄èöî_unIm∂emíãd1
(
POA_B⁄obo_IãmC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4891 
_ORBIT_skñ_smÆl_B⁄obo_IãmC⁄èöî_unIm∂emíãd2
(
POA_B⁄obo_IãmC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4892 
_ORBIT_skñ_smÆl_B⁄obo_IãmC⁄èöî_unIm∂emíãd3
(
POA_B⁄obo_IãmC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4893 
_ORBIT_skñ_smÆl_B⁄obo_IãmC⁄èöî_unIm∂emíãd4
(
POA_B⁄obo_IãmC⁄èöî
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4894 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_upd©e
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_C™vas_AπUTA
* (*
_im∂_upd©e
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, c⁄° 
B⁄obo_C™vas_afföe
 
aff
, c⁄° 
B⁄obo_C™vas_SVP
* 
˛ù_∑th
, c⁄° 
CORBA_l⁄g
 
Êags
, 
CORBA_doubÀ
* 
x1
, CORBA_doubÀ* 
y1
, CORBA_doubÀ* 
x2
, CORBA_doubÀ* 
y2
, CORBA_Environment *ev));

4895 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_ªÆize
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªÆize
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
døwabÀ
, CORBA_Environment *ev));

4896 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_uƒólize
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_uƒólize
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4897 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_m≠
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_m≠
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4898 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unm≠
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unm≠
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4899 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_døw
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_døw
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, c⁄° 
CORBA_ch¨
 * 
døwabÀ
, c⁄° 
CORBA_sh‹t
 
x
, c⁄° CORBA_sh‹à
y
, c⁄° CORBA_sh‹à
width
, c⁄° CORBA_sh‹à
height
, CORBA_Environment *ev));

4900 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_ªndî
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªndî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, 
B⁄obo_C™vas_Buf
* 
buf
, CORBA_Environment *ev));

4901 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_c⁄èös
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂_c⁄èös
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_doubÀ
 
x
, c⁄° CORBA_doubÀ 
y
, CORBA_Environment *ev));

4902 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_bounds
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_bounds
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, 
CORBA_doubÀ
* 
x1
, CORBA_doubÀ* 
x2
, CORBA_doubÀ* 
y1
, CORBA_doubÀ* 
y2
, CORBA_Environment *ev));

4903 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_evít
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_boﬁón
 (*
_im∂_evít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, c⁄° 
B⁄obo_Gdk_Evít
* 
evít
, CORBA_Environment *ev));

4904 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_£tC™vasSize
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tC™vasSize
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_sh‹t
 
x
, c⁄° CORBA_sh‹à
y
, c⁄° CORBA_sh‹à
width
, c⁄° CORBA_sh‹à
height
, CORBA_Environment *ev));

4905 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_£tBounds
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tBounds
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C™vas_DRe˘
* 
bbox
, CORBA_Environment *ev));

4906 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd1
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4907 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd2
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4908 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd3
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4909 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd4
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4910 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd5
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4911 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd6
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4912 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd7
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4913 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd8
(
POA_B⁄obo_C™vas_Comp⁄ít
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4914 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_ªque°Upd©e
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ªque°Upd©e
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4915 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_gøbFocus
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_gøbFocus
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_unsig√d_l⁄g
 
mask
, c⁄° 
CORBA_l⁄g
 
curs‹
, c⁄° CORBA_unsig√d_l⁄g 
time
, CORBA_Environment *ev));

4916 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_ungøbFocus
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_ungøbFocus
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_unsig√d_l⁄g
 
time
, CORBA_Environment *ev));

4917 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_gëUIC⁄èöî
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_UIC⁄èöî
 (*
_im∂_gëUIC⁄èöî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4918 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd1
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4919 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd2
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4920 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd3
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4921 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd4
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4922 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd5
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4923 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd6
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4924 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd7
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4925 
_ORBIT_skñ_smÆl_B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd8
(
POA_B⁄obo_C™vas_Comp⁄ítProxy
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4926 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFa˘‹y_¸óãC⁄åﬁ
(
POA_B⁄obo_C⁄åﬁFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_C⁄åﬁ
 (*
_im∂_¸óãC⁄åﬁ
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_C⁄åﬁFøme
 
‰ame
, c⁄° 
B⁄obo_UIC⁄èöî
 
uic
, CORBA_Environment *ev));

4927 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFa˘‹y_unIm∂emíãd1
(
POA_B⁄obo_C⁄åﬁFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4928 
_ORBIT_skñ_smÆl_B⁄obo_C⁄åﬁFa˘‹y_unIm∂emíãd2
(
POA_B⁄obo_C⁄åﬁFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4929 
_ORBIT_skñ_smÆl_B⁄obo_C™vasComp⁄ítFa˘‹y_¸óãC™vasComp⁄ít
(
POA_B⁄obo_C™vasComp⁄ítFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_C™vas_Comp⁄ít
 (*
_im∂_¸óãC™vasComp⁄ít
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_boﬁón
 
Ø
, c⁄° 
B⁄obo_C™vas_Comp⁄ítProxy
 
¥oxy
, CORBA_Environment *ev));

4930 
_ORBIT_skñ_smÆl_B⁄obo_C™vasComp⁄ítFa˘‹y_unIm∂emíãd1
(
POA_B⁄obo_C™vasComp⁄ítFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4931 
_ORBIT_skñ_smÆl_B⁄obo_C™vasComp⁄ítFa˘‹y_unIm∂emíãd2
(
POA_B⁄obo_C™vasComp⁄ítFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4932 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd1
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4933 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd2
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4934 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd3
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4935 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd4
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4936 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd5
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4937 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd6
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4938 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd7
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4939 
_ORBIT_skñ_smÆl_B⁄obo_EmbeddabÀ_unIm∂emíãd8
(
POA_B⁄obo_EmbeddabÀ
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4940 
_ORBIT_skñ_smÆl_B⁄obo_Pröt_ªndî
(
POA_B⁄obo_Pröt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Såóm
 (*
_im∂_ªndî
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_PrötDimísi⁄s
* 
pd
, c⁄° 
B⁄obo_PrötSciss‹
* 
sciss‹
, CORBA_Environment *ev));

4941 
_ORBIT_skñ_smÆl_B⁄obo_Pröt_unIm∂emíãd1
(
POA_B⁄obo_Pröt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4942 
_ORBIT_skñ_smÆl_B⁄obo_Pröt_unIm∂emíãd2
(
POA_B⁄obo_Pröt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4943 
_ORBIT_skñ_smÆl_B⁄obo_Pröt_unIm∂emíãd3
(
POA_B⁄obo_Pröt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4944 
_ORBIT_skñ_smÆl_B⁄obo_Pröt_unIm∂emíãd4
(
POA_B⁄obo_Pröt
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4945 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_£tClùbﬂrd
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_£tClùbﬂrd
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_M⁄ikî
 
∑°ög_m⁄ikî
, c⁄° B⁄obo_M⁄ikî 
lökög_m⁄ikî
, CORBA_Environment *ev));

4946 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_∑°e
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_M⁄ikî
 (*
_im∂_∑°e
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4947 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_lök
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_M⁄ikî
 (*
_im∂_lök
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4948 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_unIm∂emíãd1
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4949 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_unIm∂emíãd2
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4950 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_unIm∂emíãd3
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4951 
_ORBIT_skñ_smÆl_B⁄obo_Clùbﬂrd_unIm∂emíãd4
(
POA_B⁄obo_Clùbﬂrd
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4952 
_ORBIT_skñ_smÆl_B⁄obo_ClùbﬂrdSt‹e_„tchSåóm
(
POA_B⁄obo_ClùbﬂrdSt‹e
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_„tchSåóm
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Pîsi°Såóm
 
sour˚
, c⁄° 
B⁄obo_M⁄ikî
 
lökög_m⁄ikî
, CORBA_Environment *ev));

4953 
_ORBIT_skñ_smÆl_B⁄obo_ClùbﬂrdSt‹e_„tchSt‹age
(
POA_B⁄obo_ClùbﬂrdSt‹e
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_„tchSt‹age
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Pîsi°St‹age
 
sour˚
, c⁄° 
B⁄obo_M⁄ikî
 
lökög_m⁄ikî
, CORBA_Environment *ev));

4954 
_ORBIT_skñ_smÆl_B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd1
(
POA_B⁄obo_ClùbﬂrdSt‹e
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4955 
_ORBIT_skñ_smÆl_B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd2
(
POA_B⁄obo_ClùbﬂrdSt‹e
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4956 
_ORBIT_skñ_smÆl_B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd3
(
POA_B⁄obo_ClùbﬂrdSt‹e
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4957 
_ORBIT_skñ_smÆl_B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd4
(
POA_B⁄obo_ClùbﬂrdSt‹e
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unIm∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4958 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_mesßge
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_™y
* (*
_im∂_mesßge
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
msg
, c⁄° 
B⁄obo_Aµliˇti⁄_ArgLi°
* 
¨gs
, CORBA_Environment *ev));

4959 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_√wIn°™˚
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_l⁄g
 (*
_im∂_√wIn°™˚
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
B⁄obo_Aµliˇti⁄_¨gv_t
* 
¨gv
, CORBA_Environment *ev));

4960 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_li°Mesßges
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
B⁄obo_Aµliˇti⁄_MesßgeLi°
* (*
_im∂_li°Mesßges
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4961 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_gëName
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_°rög
 (*
_im∂_gëName
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4962 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd1
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd1
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4963 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd2
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd2
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4964 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd3
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd3
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4965 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd4
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd4
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4966 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd5
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd5
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4967 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd6
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd6
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4968 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd7
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd7
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4969 
_ORBIT_skñ_smÆl_B⁄obo_Aµliˇti⁄_unim∂emíãd8
(
POA_B⁄obo_Aµliˇti⁄
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, (*
_im∂_unim∂emíãd8
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, CORBA_Environment *ev));

4972 
	#B⁄obo_M⁄ikî_ªf
 
B⁄obo_Unknown_ªf


	)

4973 
	#B⁄obo_M⁄ikî_uƒef
 
B⁄obo_Unknown_uƒef


	)

4974 
	#B⁄obo_M⁄ikî_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

4975 
B⁄obo_M⁄ikî
 
B⁄obo_M⁄ikî_gëP¨ít
(B⁄obo_M⁄ikî 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4976 
B⁄obo_M⁄ikî_£tP¨ít
(
B⁄obo_M⁄ikî
 
_obj
, c⁄° B⁄obo_M⁄ikî 
∑ª¡
, 
CORBA_Envú⁄mít
 *
ev
);

4977 
CORBA_°rög
 
B⁄obo_M⁄ikî_gëName
(
B⁄obo_M⁄ikî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4978 
B⁄obo_M⁄ikî_£tName
(
B⁄obo_M⁄ikî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

4979 
B⁄obo_Unknown
 
B⁄obo_M⁄ikî_ªsﬁve
(
B⁄obo_M⁄ikî
 
_obj
, c⁄° 
B⁄obo_ResﬁveO±i⁄s
* 
›ti⁄s
, c⁄° 
CORBA_ch¨
 * 
ªque°edI¡îÁ˚
, 
CORBA_Envú⁄mít
 *
ev
);

4980 
CORBA_l⁄g
 
B⁄obo_M⁄ikî_equÆ
(
B⁄obo_M⁄ikî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

4981 
B⁄obo_M⁄ikî_unIm∂emíãd1
(
B⁄obo_M⁄ikî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4982 
B⁄obo_M⁄ikî_unIm∂emíãd2
(
B⁄obo_M⁄ikî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4983 
	#B⁄obo_M⁄ikîExãndî_ªf
 
B⁄obo_Unknown_ªf


	)

4984 
	#B⁄obo_M⁄ikîExãndî_uƒef
 
B⁄obo_Unknown_uƒef


	)

4985 
	#B⁄obo_M⁄ikîExãndî_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

4986 
B⁄obo_Unknown
 
B⁄obo_M⁄ikîExãndî_ªsﬁve
(
B⁄obo_M⁄ikîExãndî
 
_obj
, c⁄° 
B⁄obo_M⁄ikî
 
m
, c⁄° 
B⁄obo_ResﬁveO±i⁄s
* 
›ti⁄s
, c⁄° 
CORBA_ch¨
 * 
«me
, c⁄° CORBA_ch¨ * 
ªque°edI¡îÁ˚
, 
CORBA_Envú⁄mít
 *
ev
);

4987 
B⁄obo_M⁄ikîExãndî_unIm∂emíãd1
(
B⁄obo_M⁄ikîExãndî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4988 
B⁄obo_M⁄ikîExãndî_unIm∂emíãd2
(
B⁄obo_M⁄ikîExãndî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4989 
B⁄obo_M⁄ikîExãndî_unIm∂emíãd3
(
B⁄obo_M⁄ikîExãndî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4990 
B⁄obo_M⁄ikîExãndî_unIm∂emíãd4
(
B⁄obo_M⁄ikîExãndî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4991 
	#B⁄obo_Såóm_ªf
 
B⁄obo_Unknown_ªf


	)

4992 
	#B⁄obo_Såóm_uƒef
 
B⁄obo_Unknown_uƒef


	)

4993 
	#B⁄obo_Såóm_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

4994 
B⁄obo_St‹ageInfo
* 
B⁄obo_Såóm_gëInfo
(
B⁄obo_Såóm
 
_obj
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, 
CORBA_Envú⁄mít
 *
ev
);

4995 
B⁄obo_Såóm_£tInfo
(
B⁄obo_Såóm
 
_obj
, c⁄° 
B⁄obo_St‹ageInfo
* 
öfo
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, 
CORBA_Envú⁄mít
 *
ev
);

4996 
B⁄obo_Såóm_ªad
(
B⁄obo_Såóm
 
_obj
, c⁄° 
CORBA_l⁄g
 
cou¡
, 
B⁄obo_Såóm_iobuf
** 
buf„r
, 
CORBA_Envú⁄mít
 *
ev
);

4997 
B⁄obo_Såóm_wrôe
(
B⁄obo_Såóm
 
_obj
, c⁄° 
B⁄obo_Såóm_iobuf
* 
buf„r
, 
CORBA_Envú⁄mít
 *
ev
);

4998 
CORBA_l⁄g
 
B⁄obo_Såóm_£ek
(
B⁄obo_Såóm
 
_obj
, c⁄° CORBA_l⁄g 
off£t
, c⁄° 
B⁄obo_Såóm_SìkTy≥
 
whí˚
, 
CORBA_Envú⁄mít
 *
ev
);

4999 
B⁄obo_Såóm_åunˇã
(
B⁄obo_Såóm
 
_obj
, c⁄° 
CORBA_l⁄g
 
Àngth
, 
CORBA_Envú⁄mít
 *
ev
);

5000 
B⁄obo_Såóm_commô
(
B⁄obo_Såóm
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5001 
B⁄obo_Såóm_ªvît
(
B⁄obo_Såóm
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5002 
B⁄obo_Såóm_unIm∂emíãd1
(
B⁄obo_Såóm
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5003 
B⁄obo_Såóm_unIm∂emíãd2
(
B⁄obo_Såóm
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5004 
	#B⁄obo_St‹age_ªf
 
B⁄obo_Unknown_ªf


	)

5005 
	#B⁄obo_St‹age_uƒef
 
B⁄obo_Unknown_uƒef


	)

5006 
	#B⁄obo_St‹age_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5007 
B⁄obo_St‹ageInfo
* 
B⁄obo_St‹age_gëInfo
(
B⁄obo_St‹age
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, 
CORBA_Envú⁄mít
 *
ev
);

5008 
B⁄obo_St‹age_£tInfo
(
B⁄obo_St‹age
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹ageInfo
* 
öfo
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, 
CORBA_Envú⁄mít
 *
ev
);

5009 
B⁄obo_Såóm
 
B⁄obo_St‹age_›íSåóm
(
B⁄obo_St‹age
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹age_O≥nMode
 
mode
, 
CORBA_Envú⁄mít
 *
ev
);

5010 
B⁄obo_St‹age
 
B⁄obo_St‹age_›íSt‹age
(B⁄obo_St‹agê
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹age_O≥nMode
 
mode
, 
CORBA_Envú⁄mít
 *
ev
);

5011 
B⁄obo_St‹age_c›yTo
(
B⁄obo_St‹age
 
_obj
, c⁄° B⁄obo_St‹agê
èrgë
, 
CORBA_Envú⁄mít
 *
ev
);

5012 
B⁄obo_St‹age_Dúe˘‹yLi°
* 
B⁄obo_St‹age_li°C⁄ã¡s
(
B⁄obo_St‹age
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_St‹ageInfoFõlds
 
mask
, 
CORBA_Envú⁄mít
 *
ev
);

5013 
B⁄obo_St‹age_îa£
(
B⁄obo_St‹age
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, 
CORBA_Envú⁄mít
 *
ev
);

5014 
B⁄obo_St‹age_ª«me
(
B⁄obo_St‹age
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th_«me
, c⁄° CORBA_ch¨ * 
√w_∑th_«me
, 
CORBA_Envú⁄mít
 *
ev
);

5015 
B⁄obo_St‹age_commô
(
B⁄obo_St‹age
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5016 
B⁄obo_St‹age_ªvît
(
B⁄obo_St‹age
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5017 
B⁄obo_St‹age_unIm∂emíãd1
(
B⁄obo_St‹age
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5018 
B⁄obo_St‹age_unIm∂emíãd2
(
B⁄obo_St‹age
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5019 
	#B⁄obo_M⁄ikîC⁄ãxt_ªf
 
B⁄obo_Unknown_ªf


	)

5020 
	#B⁄obo_M⁄ikîC⁄ãxt_uƒef
 
B⁄obo_Unknown_uƒef


	)

5021 
	#B⁄obo_M⁄ikîC⁄ãxt_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5022 
B⁄obo_Unknown
 
B⁄obo_M⁄ikîC⁄ãxt_gëObje˘
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
«me
, c⁄° CORBA_ch¨ * 
ªpoId
, 
CORBA_Envú⁄mít
 *
ev
);

5023 
B⁄obo_M⁄ikî
 
B⁄obo_M⁄ikîC⁄ãxt_¸óãFromName
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

5024 
B⁄obo_M⁄ikîExãndî
 
B⁄obo_M⁄ikîC⁄ãxt_gëExãndî
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
m⁄ikîPªfix
, c⁄° CORBA_ch¨ * 
öãrÁ˚Id
, 
CORBA_Envú⁄mít
 *
ev
);

5025 
B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd1
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5026 
B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd2
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5027 
B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd3
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5028 
B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd4
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5029 
B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd5
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5030 
B⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd6
(
B⁄obo_M⁄ikîC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5031 
	#B⁄obo_Ru¬ögC⁄ãxt_ªf
 
B⁄obo_Unknown_ªf


	)

5032 
	#B⁄obo_Ru¬ögC⁄ãxt_uƒef
 
B⁄obo_Unknown_uƒef


	)

5033 
	#B⁄obo_Ru¬ögC⁄ãxt_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5034 
B⁄obo_Ru¬ögC⁄ãxt_addObje˘
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, c⁄° 
CORBA_Obje˘
 
obj
, 
CORBA_Envú⁄mít
 *
ev
);

5035 
B⁄obo_Ru¬ögC⁄ãxt_ªmoveObje˘
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, c⁄° 
CORBA_Obje˘
 
obj
, 
CORBA_Envú⁄mít
 *
ev
);

5036 
B⁄obo_Ru¬ögC⁄ãxt_addKey
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5037 
B⁄obo_Ru¬ögC⁄ãxt_ªmoveKey
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5038 
B⁄obo_Ru¬ögC⁄ãxt_©ExôUƒef
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, c⁄° 
CORBA_Obje˘
 
obj
, 
CORBA_Envú⁄mít
 *
ev
);

5039 
B⁄obo_Ru¬ögC⁄ãxt_unIm∂emíãd1
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5040 
B⁄obo_Ru¬ögC⁄ãxt_unIm∂emíãd2
(
B⁄obo_Ru¬ögC⁄ãxt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5041 
	#B⁄obo_Pîsi°_ªf
 
B⁄obo_Unknown_ªf


	)

5042 
	#B⁄obo_Pîsi°_uƒef
 
B⁄obo_Unknown_uƒef


	)

5043 
	#B⁄obo_Pîsi°_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5044 
B⁄obo_Pîsi°_C⁄ã¡Ty≥Li°
* 
B⁄obo_Pîsi°_gëC⁄ã¡Ty≥s
(
B⁄obo_Pîsi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5045 
B⁄obo_Pîsi°_IID
 
B⁄obo_Pîsi°_gëIId
(
B⁄obo_Pîsi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5046 
CORBA_boﬁón
 
B⁄obo_Pîsi°_isDúty
(
B⁄obo_Pîsi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5047 
B⁄obo_Pîsi°_unIm∂emíãd1
(
B⁄obo_Pîsi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5048 
B⁄obo_Pîsi°_unIm∂emíãd2
(
B⁄obo_Pîsi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5049 
	#B⁄obo_Pîsi°Fûe_ªf
 
B⁄obo_Unknown_ªf


	)

5050 
	#B⁄obo_Pîsi°Fûe_uƒef
 
B⁄obo_Unknown_uƒef


	)

5051 
	#B⁄obo_Pîsi°Fûe_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5052 
	#B⁄obo_Pîsi°Fûe_gëC⁄ã¡Ty≥s
 
B⁄obo_Pîsi°_gëC⁄ã¡Ty≥s


	)

5053 
	#B⁄obo_Pîsi°Fûe_gëIId
 
B⁄obo_Pîsi°_gëIId


	)

5054 
	#B⁄obo_Pîsi°Fûe_isDúty
 
B⁄obo_Pîsi°_isDúty


	)

5055 
	#B⁄obo_Pîsi°Fûe_unIm∂emíãd1
 
B⁄obo_Pîsi°_unIm∂emíãd1


	)

5056 
	#B⁄obo_Pîsi°Fûe_unIm∂emíãd2
 
B⁄obo_Pîsi°_unIm∂emíãd2


	)

5057 
B⁄obo_Pîsi°Fûe_lﬂd
(
B⁄obo_Pîsi°Fûe
 
_obj
, c⁄° 
CORBA_ch¨
 * 
uri
, 
CORBA_Envú⁄mít
 *
ev
);

5058 
B⁄obo_Pîsi°Fûe_ßve
(
B⁄obo_Pîsi°Fûe
 
_obj
, c⁄° 
CORBA_ch¨
 * 
uri
, 
CORBA_Envú⁄mít
 *
ev
);

5059 
CORBA_°rög
 
B⁄obo_Pîsi°Fûe_gëCuºítFûe
(
B⁄obo_Pîsi°Fûe
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5060 
B⁄obo_Pîsi°Fûe_unIm∂emíãd3
(
B⁄obo_Pîsi°Fûe
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5061 
B⁄obo_Pîsi°Fûe_unIm∂emíãd4
(
B⁄obo_Pîsi°Fûe
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5062 
	#B⁄obo_Pîsi°St‹age_ªf
 
B⁄obo_Unknown_ªf


	)

5063 
	#B⁄obo_Pîsi°St‹age_uƒef
 
B⁄obo_Unknown_uƒef


	)

5064 
	#B⁄obo_Pîsi°St‹age_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5065 
	#B⁄obo_Pîsi°St‹age_gëC⁄ã¡Ty≥s
 
B⁄obo_Pîsi°_gëC⁄ã¡Ty≥s


	)

5066 
	#B⁄obo_Pîsi°St‹age_gëIId
 
B⁄obo_Pîsi°_gëIId


	)

5067 
	#B⁄obo_Pîsi°St‹age_isDúty
 
B⁄obo_Pîsi°_isDúty


	)

5068 
	#B⁄obo_Pîsi°St‹age_unIm∂emíãd1
 
B⁄obo_Pîsi°_unIm∂emíãd1


	)

5069 
	#B⁄obo_Pîsi°St‹age_unIm∂emíãd2
 
B⁄obo_Pîsi°_unIm∂emíãd2


	)

5070 
B⁄obo_Pîsi°St‹age_lﬂd
(
B⁄obo_Pîsi°St‹age
 
_obj
, c⁄° 
B⁄obo_St‹age
 
°‹age
, 
CORBA_Envú⁄mít
 *
ev
);

5071 
B⁄obo_Pîsi°St‹age_ßve
(
B⁄obo_Pîsi°St‹age
 
_obj
, c⁄° 
B⁄obo_St‹age
 
°‹age
, c⁄° 
CORBA_boﬁón
 
ßme_as_lﬂded
, 
CORBA_Envú⁄mít
 *
ev
);

5072 
	#B⁄obo_Pîsi°Såóm_ªf
 
B⁄obo_Unknown_ªf


	)

5073 
	#B⁄obo_Pîsi°Såóm_uƒef
 
B⁄obo_Unknown_uƒef


	)

5074 
	#B⁄obo_Pîsi°Såóm_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5075 
	#B⁄obo_Pîsi°Såóm_gëC⁄ã¡Ty≥s
 
B⁄obo_Pîsi°_gëC⁄ã¡Ty≥s


	)

5076 
	#B⁄obo_Pîsi°Såóm_gëIId
 
B⁄obo_Pîsi°_gëIId


	)

5077 
	#B⁄obo_Pîsi°Såóm_isDúty
 
B⁄obo_Pîsi°_isDúty


	)

5078 
	#B⁄obo_Pîsi°Såóm_unIm∂emíãd1
 
B⁄obo_Pîsi°_unIm∂emíãd1


	)

5079 
	#B⁄obo_Pîsi°Såóm_unIm∂emíãd2
 
B⁄obo_Pîsi°_unIm∂emíãd2


	)

5080 
B⁄obo_Pîsi°Såóm_lﬂd
(
B⁄obo_Pîsi°Såóm
 
_obj
, c⁄° 
B⁄obo_Såóm
 
°ªam
, c⁄° 
CORBA_ch¨
 * 
ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

5081 
B⁄obo_Pîsi°Såóm_ßve
(
B⁄obo_Pîsi°Såóm
 
_obj
, c⁄° 
B⁄obo_Såóm
 
°ªam
, c⁄° 
CORBA_ch¨
 * 
ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

5082 
B⁄obo_Pîsi°Såóm_unIm∂emíãd3
(
B⁄obo_Pîsi°Såóm
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5083 
B⁄obo_Pîsi°Såóm_unIm∂emíãd4
(
B⁄obo_Pîsi°Såóm
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5084 
	#B⁄obo_Li°íî_ªf
 
B⁄obo_Unknown_ªf


	)

5085 
	#B⁄obo_Li°íî_uƒef
 
B⁄obo_Unknown_uƒef


	)

5086 
	#B⁄obo_Li°íî_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5087 
B⁄obo_Li°íî_evít
(
B⁄obo_Li°íî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
evít_«me
, c⁄° 
CORBA_™y
* 
¨gs
, 
CORBA_Envú⁄mít
 *
ev
);

5088 
B⁄obo_Li°íî_unIm∂emíãd
(
B⁄obo_Li°íî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5089 
B⁄obo_Li°íî_unIm∂emíãd2
(
B⁄obo_Li°íî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5090 
	#B⁄obo_EvítSour˚_ªf
 
B⁄obo_Unknown_ªf


	)

5091 
	#B⁄obo_EvítSour˚_uƒef
 
B⁄obo_Unknown_uƒef


	)

5092 
	#B⁄obo_EvítSour˚_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5093 
B⁄obo_EvítSour˚_addLi°íî
(
B⁄obo_EvítSour˚
 
_obj
, c⁄° 
B⁄obo_Li°íî
 
l
, 
CORBA_Envú⁄mít
 *
ev
);

5094 
B⁄obo_EvítSour˚_addLi°íîWôhMask
(
B⁄obo_EvítSour˚
 
_obj
, c⁄° 
B⁄obo_Li°íî
 
l
, c⁄° 
CORBA_ch¨
 * 
evít_mask
, 
CORBA_Envú⁄mít
 *
ev
);

5095 
B⁄obo_EvítSour˚_ªmoveLi°íî
(
B⁄obo_EvítSour˚
 
_obj
, c⁄° 
B⁄obo_Li°íî
 
l
, 
CORBA_Envú⁄mít
 *
ev
);

5096 
B⁄obo_EvítSour˚_unIm∂emíãd
(
B⁄obo_EvítSour˚
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5097 
B⁄obo_EvítSour˚_unIm∂emíãd2
(
B⁄obo_EvítSour˚
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5098 
	#B⁄obo_UIComp⁄ít_ªf
 
B⁄obo_Unknown_ªf


	)

5099 
	#B⁄obo_UIComp⁄ít_uƒef
 
B⁄obo_Unknown_uƒef


	)

5100 
	#B⁄obo_UIComp⁄ít_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5101 
B⁄obo_UIComp⁄ít_£tC⁄èöî
(
B⁄obo_UIComp⁄ít
 
_obj
, c⁄° 
B⁄obo_UIC⁄èöî
 
c⁄èöî
, 
CORBA_Envú⁄mít
 *
ev
);

5102 
B⁄obo_UIComp⁄ít_un£tC⁄èöî
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5103 
CORBA_°rög
 
B⁄obo_UIComp⁄ít__gë_«me
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5104 
CORBA_°rög
 
B⁄obo_UIComp⁄ít_des¸ibeVîbs
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5105 
B⁄obo_UIComp⁄ít_execVîb
(
B⁄obo_UIComp⁄ít
 
_obj
, c⁄° 
CORBA_ch¨
 * 
˙ame
, 
CORBA_Envú⁄mít
 *
ev
);

5106 
B⁄obo_UIComp⁄ít_uiEvít
(
B⁄obo_UIComp⁄ít
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
ty≥
, c⁄° CORBA_ch¨ * 
°©e
, 
CORBA_Envú⁄mít
 *
ev
);

5107 
B⁄obo_UIComp⁄ít_unIm∂emíãd
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5108 
B⁄obo_UIComp⁄ít_unIm∂emíãd2
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5109 
B⁄obo_UIComp⁄ít_unIm∂emíãd3
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5110 
B⁄obo_UIComp⁄ít_unIm∂emíãd4
(
B⁄obo_UIComp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5111 
	#B⁄obo_UIC⁄èöî_ªf
 
B⁄obo_Unknown_ªf


	)

5112 
	#B⁄obo_UIC⁄èöî_uƒef
 
B⁄obo_Unknown_uƒef


	)

5113 
	#B⁄obo_UIC⁄èöî_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5114 
B⁄obo_UIC⁄èöî_ªgi°îComp⁄ít
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
comp⁄ít_«me
, c⁄° 
B⁄obo_UIComp⁄ít
 
comp⁄ít
, 
CORBA_Envú⁄mít
 *
ev
);

5115 
B⁄obo_UIC⁄èöî_dîegi°îComp⁄ít
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
comp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
ev
);

5116 
B⁄obo_UIC⁄èöî_‰ìze
(
B⁄obo_UIC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5117 
B⁄obo_UIC⁄èöî_thaw
(
B⁄obo_UIC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5118 
B⁄obo_UIC⁄èöî_£tAâr
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
©å
, c⁄° CORBA_ch¨ * 
vÆue
, c⁄° CORBA_ch¨ * 
comp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
ev
);

5119 
CORBA_°rög
 
B⁄obo_UIC⁄èöî_gëAâr
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
©å
, 
CORBA_Envú⁄mít
 *
ev
);

5120 
B⁄obo_UIC⁄èöî_£tNode
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
xml
, c⁄° CORBA_ch¨ * 
comp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
ev
);

5121 
CORBA_°rög
 
B⁄obo_UIC⁄èöî_gëNode
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
CORBA_boﬁón
 
nodeO∆y
, 
CORBA_Envú⁄mít
 *
ev
);

5122 
B⁄obo_UIC⁄èöî_ªmoveNode
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° CORBA_ch¨ * 
by_comp⁄ít_«me
, 
CORBA_Envú⁄mít
 *
ev
);

5123 
CORBA_boﬁón
 
B⁄obo_UIC⁄èöî_exi°s
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, 
CORBA_Envú⁄mít
 *
ev
);

5124 
B⁄obo_UIC⁄èöî_execVîb
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
˙ame
, 
CORBA_Envú⁄mít
 *
ev
);

5125 
B⁄obo_UIC⁄èöî_uiEvít
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
ty≥
, c⁄° CORBA_ch¨ * 
°©e
, 
CORBA_Envú⁄mít
 *
ev
);

5126 
B⁄obo_UIC⁄èöî_£tObje˘
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, c⁄° 
B⁄obo_Unknown
 
c⁄åﬁ
, 
CORBA_Envú⁄mít
 *
ev
);

5127 
B⁄obo_Unknown
 
B⁄obo_UIC⁄èöî_gëObje˘
(
B⁄obo_UIC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
∑th
, 
CORBA_Envú⁄mít
 *
ev
);

5128 
B⁄obo_UIC⁄èöî_unIm∂emíãd
(
B⁄obo_UIC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5129 
B⁄obo_UIC⁄èöî_unIm∂emíãd2
(
B⁄obo_UIC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5130 
B⁄obo_UIC⁄èöî_unIm∂emíãd3
(
B⁄obo_UIC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5131 
B⁄obo_UIC⁄èöî_unIm∂emíãd4
(
B⁄obo_UIC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5132 
	#B⁄obo_Pr›îtyBag_ªf
 
B⁄obo_Unknown_ªf


	)

5133 
	#B⁄obo_Pr›îtyBag_uƒef
 
B⁄obo_Unknown_uƒef


	)

5134 
	#B⁄obo_Pr›îtyBag_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5135 
B⁄obo_KeyLi°
* 
B⁄obo_Pr›îtyBag_gëKeys
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
fûãr
, 
CORBA_Envú⁄mít
 *
ev
);

5136 
CORBA_Ty≥Code
 
B⁄obo_Pr›îtyBag_gëTy≥
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5137 
CORBA_™y
* 
B⁄obo_Pr›îtyBag_gëVÆue
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5138 
B⁄obo_Pr›îtyBag_£tVÆue
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

5139 
B⁄obo_Pr›îtySë
* 
B⁄obo_Pr›îtyBag_gëVÆues
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
fûãr
, 
CORBA_Envú⁄mít
 *
ev
);

5140 
B⁄obo_Pr›îtyBag_£tVÆues
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
B⁄obo_Pr›îtySë
* 
£t
, 
CORBA_Envú⁄mít
 *
ev
);

5141 
CORBA_™y
* 
B⁄obo_Pr›îtyBag_gëDeÁu…
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5142 
CORBA_°rög
 
B⁄obo_Pr›îtyBag_gëDocTôÀ
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5143 
CORBA_°rög
 
B⁄obo_Pr›îtyBag_gëDoc
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5144 
B⁄obo_Pr›îtyFœgs
 
B⁄obo_Pr›îtyBag_gëFœgs
(
B⁄obo_Pr›îtyBag
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5145 
B⁄obo_Pr›îtyBag_unIm∂emíãd1
(
B⁄obo_Pr›îtyBag
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5146 
B⁄obo_Pr›îtyBag_unIm∂emíãd2
(
B⁄obo_Pr›îtyBag
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5147 
B⁄obo_Pr›îtyBag_unIm∂emíãd3
(
B⁄obo_Pr›îtyBag
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5148 
B⁄obo_Pr›îtyBag_unIm∂emíãd4
(
B⁄obo_Pr›îtyBag
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5149 
	#B⁄obo_C⁄figD©aba£_ªf
 
B⁄obo_Unknown_ªf


	)

5150 
	#B⁄obo_C⁄figD©aba£_uƒef
 
B⁄obo_Unknown_uƒef


	)

5151 
	#B⁄obo_C⁄figD©aba£_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5152 
	#B⁄obo_C⁄figD©aba£_gëKeys
 
B⁄obo_Pr›îtyBag_gëKeys


	)

5153 
	#B⁄obo_C⁄figD©aba£_gëTy≥
 
B⁄obo_Pr›îtyBag_gëTy≥


	)

5154 
	#B⁄obo_C⁄figD©aba£_gëVÆue
 
B⁄obo_Pr›îtyBag_gëVÆue


	)

5155 
	#B⁄obo_C⁄figD©aba£_£tVÆue
 
B⁄obo_Pr›îtyBag_£tVÆue


	)

5156 
	#B⁄obo_C⁄figD©aba£_gëVÆues
 
B⁄obo_Pr›îtyBag_gëVÆues


	)

5157 
	#B⁄obo_C⁄figD©aba£_£tVÆues
 
B⁄obo_Pr›îtyBag_£tVÆues


	)

5158 
	#B⁄obo_C⁄figD©aba£_gëDeÁu…
 
B⁄obo_Pr›îtyBag_gëDeÁu…


	)

5159 
	#B⁄obo_C⁄figD©aba£_gëDocTôÀ
 
B⁄obo_Pr›îtyBag_gëDocTôÀ


	)

5160 
	#B⁄obo_C⁄figD©aba£_gëDoc
 
B⁄obo_Pr›îtyBag_gëDoc


	)

5161 
	#B⁄obo_C⁄figD©aba£_gëFœgs
 
B⁄obo_Pr›îtyBag_gëFœgs


	)

5162 
	#B⁄obo_C⁄figD©aba£_unIm∂emíãd1
 
B⁄obo_Pr›îtyBag_unIm∂emíãd1


	)

5163 
	#B⁄obo_C⁄figD©aba£_unIm∂emíãd2
 
B⁄obo_Pr›îtyBag_unIm∂emíãd2


	)

5164 
	#B⁄obo_C⁄figD©aba£_unIm∂emíãd3
 
B⁄obo_Pr›îtyBag_unIm∂emíãd3


	)

5165 
	#B⁄obo_C⁄figD©aba£_unIm∂emíãd4
 
B⁄obo_Pr›îtyBag_unIm∂emíãd4


	)

5166 
CORBA_boﬁón
 
B⁄obo_C⁄figD©aba£__gë_isWrôóbÀ
(
B⁄obo_C⁄figD©aba£
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5167 
B⁄obo_KeyLi°
* 
B⁄obo_C⁄figD©aba£_gëDús
(
B⁄obo_C⁄figD©aba£
 
_obj
, c⁄° 
CORBA_ch¨
 * 
dú
, 
CORBA_Envú⁄mít
 *
ev
);

5168 
CORBA_boﬁón
 
B⁄obo_C⁄figD©aba£_hasDú
(
B⁄obo_C⁄figD©aba£
 
_obj
, c⁄° 
CORBA_ch¨
 * 
dú
, 
CORBA_Envú⁄mít
 *
ev
);

5169 
B⁄obo_C⁄figD©aba£_ªmoveVÆue
(
B⁄obo_C⁄figD©aba£
 
_obj
, c⁄° 
CORBA_ch¨
 * 
key
, 
CORBA_Envú⁄mít
 *
ev
);

5170 
B⁄obo_C⁄figD©aba£_ªmoveDú
(
B⁄obo_C⁄figD©aba£
 
_obj
, c⁄° 
CORBA_ch¨
 * 
dú
, 
CORBA_Envú⁄mít
 *
ev
);

5171 
B⁄obo_C⁄figD©aba£_addD©aba£
(
B⁄obo_C⁄figD©aba£
 
_obj
, c⁄° B⁄obo_C⁄figD©aba£ 
db
, c⁄° 
CORBA_ch¨
 * 
key
, c⁄° 
B⁄obo_C⁄figD©aba£_DBFœgs
 
Êags
, 
CORBA_Envú⁄mít
 *
ev
);

5172 
B⁄obo_C⁄figD©aba£_sync
(
B⁄obo_C⁄figD©aba£
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5173 
B⁄obo_C⁄figD©aba£_unIm∂emíãd5
(
B⁄obo_C⁄figD©aba£
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5174 
B⁄obo_C⁄figD©aba£_unIm∂emíãd6
(
B⁄obo_C⁄figD©aba£
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5175 
B⁄obo_C⁄figD©aba£_unIm∂emíãd7
(
B⁄obo_C⁄figD©aba£
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5176 
B⁄obo_C⁄figD©aba£_unIm∂emíãd8
(
B⁄obo_C⁄figD©aba£
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5177 
	#B⁄obo_C⁄åﬁFøme_ªf
 
B⁄obo_Unknown_ªf


	)

5178 
	#B⁄obo_C⁄åﬁFøme_uƒef
 
B⁄obo_Unknown_uƒef


	)

5179 
	#B⁄obo_C⁄åﬁFøme_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5180 
B⁄obo_Gdk_WödowId
 
B⁄obo_C⁄åﬁFøme_gëT›ÀvñId
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5181 
B⁄obo_Pr›îtyBag
 
B⁄obo_C⁄åﬁFøme_gëAmbõ¡Pr›îtõs
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5182 
B⁄obo_UIC⁄èöî
 
B⁄obo_C⁄åﬁFøme_gëUIC⁄èöî
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5183 
B⁄obo_C⁄åﬁFøme_nŸifyA˘iv©ed
(
B⁄obo_C⁄åﬁFøme
 
_obj
, c⁄° 
CORBA_boﬁón
 
°©e
, 
CORBA_Envú⁄mít
 *
ev
);

5184 
B⁄obo_C⁄åﬁFøme_queueResize
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5185 
B⁄obo_C⁄åﬁFøme_a˘iv©eURI
(
B⁄obo_C⁄åﬁFøme
 
_obj
, c⁄° 
CORBA_ch¨
 * 
uri
, c⁄° 
CORBA_boﬁón
 
ªœtive
, 
CORBA_Envú⁄mít
 *
ev
);

5186 
B⁄obo_Unknown
 
B⁄obo_C⁄åﬁFøme_gëP¨ítAc˚ssibÀ
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5187 
B⁄obo_C⁄åﬁFøme_unIm∂emíãd
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5188 
B⁄obo_C⁄åﬁFøme_unIm∂emíãd2
(
B⁄obo_C⁄åﬁFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5189 
	#B⁄obo_C⁄åﬁ_ªf
 
B⁄obo_Unknown_ªf


	)

5190 
	#B⁄obo_C⁄åﬁ_uƒef
 
B⁄obo_Unknown_uƒef


	)

5191 
	#B⁄obo_C⁄åﬁ_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5192 
B⁄obo_Pr›îtyBag
 
B⁄obo_C⁄åﬁ_gëPr›îtõs
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5193 
B⁄obo_Gtk_Requisôi⁄
 
B⁄obo_C⁄åﬁ_gëDesúedSize
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5194 
B⁄obo_Unknown
 
B⁄obo_C⁄åﬁ_gëAc˚ssibÀ
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5195 
B⁄obo_Gdk_WödowId
 
B⁄obo_C⁄åﬁ_gëWödowId
(
B⁄obo_C⁄åﬁ
 
_obj
, c⁄° 
CORBA_ch¨
 * 
cookõ
, 
CORBA_Envú⁄mít
 *
ev
);

5196 
B⁄obo_UIC⁄èöî
 
B⁄obo_C⁄åﬁ_gëP›upC⁄èöî
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5197 
B⁄obo_C⁄åﬁ_£tFøme
(
B⁄obo_C⁄åﬁ
 
_obj
, c⁄° 
B⁄obo_C⁄åﬁFøme
 
‰ame
, 
CORBA_Envú⁄mít
 *
ev
);

5198 
B⁄obo_C⁄åﬁ_£tSize
(
B⁄obo_C⁄åﬁ
 
_obj
, c⁄° 
CORBA_sh‹t
 
width
, c⁄° CORBA_sh‹à
height
, 
CORBA_Envú⁄mít
 *
ev
);

5199 
B⁄obo_C⁄åﬁ_£tSèã
(
B⁄obo_C⁄åﬁ
 
_obj
, c⁄° 
B⁄obo_Gtk_Sèã
 
°©e
, 
CORBA_Envú⁄mít
 *
ev
);

5200 
B⁄obo_C⁄åﬁ_a˘iv©e
(
B⁄obo_C⁄åﬁ
 
_obj
, c⁄° 
CORBA_boﬁón
 
a˘iv©e
, 
CORBA_Envú⁄mít
 *
ev
);

5201 
CORBA_boﬁón
 
B⁄obo_C⁄åﬁ_focus
(
B⁄obo_C⁄åﬁ
 
_obj
, c⁄° 
B⁄obo_Gtk_Dúe˘i⁄
 
dúe˘i⁄
, 
CORBA_Envú⁄mít
 *
ev
);

5202 
B⁄obo_C⁄åﬁ_unIm∂emíãd
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5203 
B⁄obo_C⁄åﬁ_unIm∂emíãd2
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5204 
B⁄obo_C⁄åﬁ_unIm∂emíãd3
(
B⁄obo_C⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5205 
	#B⁄obo_Pr›îtyC⁄åﬁ_ªf
 
B⁄obo_Unknown_ªf


	)

5206 
	#B⁄obo_Pr›îtyC⁄åﬁ_uƒef
 
B⁄obo_Unknown_uƒef


	)

5207 
	#B⁄obo_Pr›îtyC⁄åﬁ_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5208 
CORBA_l⁄g
 
B⁄obo_Pr›îtyC⁄åﬁ__gë_∑geCou¡
(
B⁄obo_Pr›îtyC⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5209 
B⁄obo_C⁄åﬁ
 
B⁄obo_Pr›îtyC⁄åﬁ_gëC⁄åﬁ
(
B⁄obo_Pr›îtyC⁄åﬁ
 
_obj
, c⁄° 
CORBA_l⁄g
 
∑gíumbî
, 
CORBA_Envú⁄mít
 *
ev
);

5210 
B⁄obo_Pr›îtyC⁄åﬁ_nŸifyA˘i⁄
(
B⁄obo_Pr›îtyC⁄åﬁ
 
_obj
, c⁄° 
CORBA_l⁄g
 
∑gíumbî
, c⁄° 
B⁄obo_Pr›îtyC⁄åﬁ_A˘i⁄
 
a˘i⁄
, 
CORBA_Envú⁄mít
 *
ev
);

5211 
B⁄obo_Pr›îtyC⁄åﬁ_unIm∂emíãd
(
B⁄obo_Pr›îtyC⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5212 
B⁄obo_Pr›îtyC⁄åﬁ_unIm∂emíãd2
(
B⁄obo_Pr›îtyC⁄åﬁ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5213 
	#B⁄obo_ZoomabÀFøme_ªf
 
B⁄obo_Unknown_ªf


	)

5214 
	#B⁄obo_ZoomabÀFøme_uƒef
 
B⁄obo_Unknown_uƒef


	)

5215 
	#B⁄obo_ZoomabÀFøme_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5216 
B⁄obo_ZoomabÀFøme_⁄LevñCh™ged
(
B⁄obo_ZoomabÀFøme
 
_obj
, c⁄° 
CORBA_Êﬂt
 
zoom_Àvñ
, 
CORBA_Envú⁄mít
 *
ev
);

5217 
B⁄obo_ZoomabÀFøme_⁄P¨amëîsCh™ged
(
B⁄obo_ZoomabÀFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5218 
B⁄obo_ZoomabÀFøme_unIm∂emíãd1
(
B⁄obo_ZoomabÀFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5219 
B⁄obo_ZoomabÀFøme_unIm∂emíãd2
(
B⁄obo_ZoomabÀFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5220 
B⁄obo_ZoomabÀFøme_unIm∂emíãd3
(
B⁄obo_ZoomabÀFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5221 
B⁄obo_ZoomabÀFøme_unIm∂emíãd4
(
B⁄obo_ZoomabÀFøme
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5222 
	#B⁄obo_ZoomabÀ_ªf
 
B⁄obo_Unknown_ªf


	)

5223 
	#B⁄obo_ZoomabÀ_uƒef
 
B⁄obo_Unknown_uƒef


	)

5224 
	#B⁄obo_ZoomabÀ_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5225 
CORBA_Êﬂt
 
B⁄obo_ZoomabÀ__gë_Àvñ
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5226 
CORBA_Êﬂt
 
B⁄obo_ZoomabÀ__gë_möLevñ
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5227 
CORBA_Êﬂt
 
B⁄obo_ZoomabÀ__gë_maxLevñ
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5228 
CORBA_boﬁón
 
B⁄obo_ZoomabÀ__gë_hasMöLevñ
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5229 
CORBA_boﬁón
 
B⁄obo_ZoomabÀ__gë_hasMaxLevñ
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5230 
CORBA_boﬁón
 
B⁄obo_ZoomabÀ__gë_isC⁄töuous
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5231 
B⁄obo_ZoomLevñLi°
* 
B⁄obo_ZoomabÀ__gë_¥e„ºedLevñs
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5232 
B⁄obo_ZoomLevñNameLi°
* 
B⁄obo_ZoomabÀ__gë_¥e„ºedLevñNames
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5233 
B⁄obo_ZoomabÀ_zoomIn
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5234 
B⁄obo_ZoomabÀ_zoomOut
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5235 
B⁄obo_ZoomabÀ_zoomFô
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5236 
B⁄obo_ZoomabÀ_zoomDeÁu…
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5237 
B⁄obo_ZoomabÀ_£tLevñ
(
B⁄obo_ZoomabÀ
 
_obj
, c⁄° 
CORBA_Êﬂt
 
zoom_Àvñ
, 
CORBA_Envú⁄mít
 *
ev
);

5238 
B⁄obo_ZoomabÀ_£tFøme
(
B⁄obo_ZoomabÀ
 
_obj
, c⁄° 
B⁄obo_ZoomabÀFøme
 
zoomabÀ_‰ame
, 
CORBA_Envú⁄mít
 *
ev
);

5239 
B⁄obo_ZoomabÀ_unIm∂emíãd1
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5240 
B⁄obo_ZoomabÀ_unIm∂emíãd2
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5241 
B⁄obo_ZoomabÀ_unIm∂emíãd3
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5242 
B⁄obo_ZoomabÀ_unIm∂emíãd4
(
B⁄obo_ZoomabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5243 
	#B⁄obo_IãmC⁄èöî_ªf
 
B⁄obo_Unknown_ªf


	)

5244 
	#B⁄obo_IãmC⁄èöî_uƒef
 
B⁄obo_Unknown_uƒef


	)

5245 
	#B⁄obo_IãmC⁄èöî_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5246 
B⁄obo_IãmC⁄èöî_Obje˘Names
* 
B⁄obo_IãmC⁄èöî_íumObje˘s
(
B⁄obo_IãmC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5247 
B⁄obo_Unknown
 
B⁄obo_IãmC⁄èöî_gëObje˘ByName
(
B⁄obo_IãmC⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
ôem_«me
, c⁄° 
CORBA_boﬁón
 
⁄ly_if_exi°s
, 
CORBA_Envú⁄mít
 *
ev
);

5248 
B⁄obo_IãmC⁄èöî_unIm∂emíãd1
(
B⁄obo_IãmC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5249 
B⁄obo_IãmC⁄èöî_unIm∂emíãd2
(
B⁄obo_IãmC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5250 
B⁄obo_IãmC⁄èöî_unIm∂emíãd3
(
B⁄obo_IãmC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5251 
B⁄obo_IãmC⁄èöî_unIm∂emíãd4
(
B⁄obo_IãmC⁄èöî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5252 
	#B⁄obo_C™vas_Comp⁄ít_ªf
 
B⁄obo_Unknown_ªf


	)

5253 
	#B⁄obo_C™vas_Comp⁄ít_uƒef
 
B⁄obo_Unknown_uƒef


	)

5254 
	#B⁄obo_C™vas_Comp⁄ít_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5255 
B⁄obo_C™vas_AπUTA
* 
B⁄obo_C™vas_Comp⁄ít_upd©e
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, c⁄° 
B⁄obo_C™vas_afföe
 
aff
, c⁄° 
B⁄obo_C™vas_SVP
* 
˛ù_∑th
, c⁄° 
CORBA_l⁄g
 
Êags
, 
CORBA_doubÀ
* 
x1
, CORBA_doubÀ* 
y1
, CORBA_doubÀ* 
x2
, CORBA_doubÀ* 
y2
, 
CORBA_Envú⁄mít
 *
ev
);

5256 
B⁄obo_C™vas_Comp⁄ít_ªÆize
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
CORBA_ch¨
 * 
døwabÀ
, 
CORBA_Envú⁄mít
 *
ev
);

5257 
B⁄obo_C™vas_Comp⁄ít_uƒólize
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5258 
B⁄obo_C™vas_Comp⁄ít_m≠
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5259 
B⁄obo_C™vas_Comp⁄ít_unm≠
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5260 
B⁄obo_C™vas_Comp⁄ít_døw
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, c⁄° 
CORBA_ch¨
 * 
døwabÀ
, c⁄° 
CORBA_sh‹t
 
x
, c⁄° CORBA_sh‹à
y
, c⁄° CORBA_sh‹à
width
, c⁄° CORBA_sh‹à
height
, 
CORBA_Envú⁄mít
 *
ev
);

5261 
B⁄obo_C™vas_Comp⁄ít_ªndî
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
B⁄obo_C™vas_Buf
* 
buf
, 
CORBA_Envú⁄mít
 *
ev
);

5262 
CORBA_boﬁón
 
B⁄obo_C™vas_Comp⁄ít_c⁄èös
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
CORBA_doubÀ
 
x
, c⁄° CORBA_doubÀ 
y
, 
CORBA_Envú⁄mít
 *
ev
);

5263 
B⁄obo_C™vas_Comp⁄ít_bounds
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, 
CORBA_doubÀ
* 
x1
, CORBA_doubÀ* 
x2
, CORBA_doubÀ* 
y1
, CORBA_doubÀ* 
y2
, 
CORBA_Envú⁄mít
 *
ev
);

5264 
CORBA_boﬁón
 
B⁄obo_C™vas_Comp⁄ít_evít
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
B⁄obo_C™vas_Sèã
* 
°©e
, c⁄° 
B⁄obo_Gdk_Evít
* 
evít
, 
CORBA_Envú⁄mít
 *
ev
);

5265 
B⁄obo_C™vas_Comp⁄ít_£tC™vasSize
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
CORBA_sh‹t
 
x
, c⁄° CORBA_sh‹à
y
, c⁄° CORBA_sh‹à
width
, c⁄° CORBA_sh‹à
height
, 
CORBA_Envú⁄mít
 *
ev
);

5266 
B⁄obo_C™vas_Comp⁄ít_£tBounds
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, c⁄° 
B⁄obo_C™vas_DRe˘
* 
bbox
, 
CORBA_Envú⁄mít
 *
ev
);

5267 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd1
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5268 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd2
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5269 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd3
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5270 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd4
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5271 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd5
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5272 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd6
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5273 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd7
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5274 
B⁄obo_C™vas_Comp⁄ít_unIm∂emíãd8
(
B⁄obo_C™vas_Comp⁄ít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5275 
B⁄obo_C™vas_Comp⁄ítProxy_ªque°Upd©e
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5276 
B⁄obo_C™vas_Comp⁄ítProxy_gøbFocus
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
mask
, c⁄° 
CORBA_l⁄g
 
curs‹
, c⁄° CORBA_unsig√d_l⁄g 
time
, 
CORBA_Envú⁄mít
 *
ev
);

5277 
B⁄obo_C™vas_Comp⁄ítProxy_ungøbFocus
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
time
, 
CORBA_Envú⁄mít
 *
ev
);

5278 
B⁄obo_UIC⁄èöî
 
B⁄obo_C™vas_Comp⁄ítProxy_gëUIC⁄èöî
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5279 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd1
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5280 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd2
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5281 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd3
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5282 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd4
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5283 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd5
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5284 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd6
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5285 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd7
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5286 
B⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd8
(
B⁄obo_C™vas_Comp⁄ítProxy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5287 
	#B⁄obo_C⁄åﬁFa˘‹y_ªf
 
B⁄obo_Unknown_ªf


	)

5288 
	#B⁄obo_C⁄åﬁFa˘‹y_uƒef
 
B⁄obo_Unknown_uƒef


	)

5289 
	#B⁄obo_C⁄åﬁFa˘‹y_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5290 
B⁄obo_C⁄åﬁ
 
B⁄obo_C⁄åﬁFa˘‹y_¸óãC⁄åﬁ
(
B⁄obo_C⁄åﬁFa˘‹y
 
_obj
, c⁄° 
B⁄obo_C⁄åﬁFøme
 
‰ame
, c⁄° 
B⁄obo_UIC⁄èöî
 
uic
, 
CORBA_Envú⁄mít
 *
ev
);

5291 
B⁄obo_C⁄åﬁFa˘‹y_unIm∂emíãd1
(
B⁄obo_C⁄åﬁFa˘‹y
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5292 
B⁄obo_C⁄åﬁFa˘‹y_unIm∂emíãd2
(
B⁄obo_C⁄åﬁFa˘‹y
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5293 
	#B⁄obo_C™vasComp⁄ítFa˘‹y_ªf
 
B⁄obo_Unknown_ªf


	)

5294 
	#B⁄obo_C™vasComp⁄ítFa˘‹y_uƒef
 
B⁄obo_Unknown_uƒef


	)

5295 
	#B⁄obo_C™vasComp⁄ítFa˘‹y_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5296 
B⁄obo_C™vas_Comp⁄ít
 
B⁄obo_C™vasComp⁄ítFa˘‹y_¸óãC™vasComp⁄ít
(
B⁄obo_C™vasComp⁄ítFa˘‹y
 
_obj
, c⁄° 
CORBA_boﬁón
 
Ø
, c⁄° 
B⁄obo_C™vas_Comp⁄ítProxy
 
¥oxy
, 
CORBA_Envú⁄mít
 *
ev
);

5297 
B⁄obo_C™vasComp⁄ítFa˘‹y_unIm∂emíãd1
(
B⁄obo_C™vasComp⁄ítFa˘‹y
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5298 
B⁄obo_C™vasComp⁄ítFa˘‹y_unIm∂emíãd2
(
B⁄obo_C™vasComp⁄ítFa˘‹y
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5299 
	#B⁄obo_EmbeddabÀ_ªf
 
B⁄obo_Unknown_ªf


	)

5300 
	#B⁄obo_EmbeddabÀ_uƒef
 
B⁄obo_Unknown_uƒef


	)

5301 
	#B⁄obo_EmbeddabÀ_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5302 
B⁄obo_EmbeddabÀ_unIm∂emíãd1
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5303 
B⁄obo_EmbeddabÀ_unIm∂emíãd2
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5304 
B⁄obo_EmbeddabÀ_unIm∂emíãd3
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5305 
B⁄obo_EmbeddabÀ_unIm∂emíãd4
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5306 
B⁄obo_EmbeddabÀ_unIm∂emíãd5
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5307 
B⁄obo_EmbeddabÀ_unIm∂emíãd6
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5308 
B⁄obo_EmbeddabÀ_unIm∂emíãd7
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5309 
B⁄obo_EmbeddabÀ_unIm∂emíãd8
(
B⁄obo_EmbeddabÀ
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5310 
	#B⁄obo_Pröt_ªf
 
B⁄obo_Unknown_ªf


	)

5311 
	#B⁄obo_Pröt_uƒef
 
B⁄obo_Unknown_uƒef


	)

5312 
	#B⁄obo_Pröt_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5313 
B⁄obo_Såóm
 
B⁄obo_Pröt_ªndî
(
B⁄obo_Pröt
 
_obj
, c⁄° 
B⁄obo_PrötDimísi⁄s
* 
pd
, c⁄° 
B⁄obo_PrötSciss‹
* 
sciss‹
, 
CORBA_Envú⁄mít
 *
ev
);

5314 
B⁄obo_Pröt_unIm∂emíãd1
(
B⁄obo_Pröt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5315 
B⁄obo_Pröt_unIm∂emíãd2
(
B⁄obo_Pröt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5316 
B⁄obo_Pröt_unIm∂emíãd3
(
B⁄obo_Pröt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5317 
B⁄obo_Pröt_unIm∂emíãd4
(
B⁄obo_Pröt
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5318 
	#B⁄obo_Clùbﬂrd_ªf
 
B⁄obo_Unknown_ªf


	)

5319 
	#B⁄obo_Clùbﬂrd_uƒef
 
B⁄obo_Unknown_uƒef


	)

5320 
	#B⁄obo_Clùbﬂrd_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5321 
B⁄obo_Clùbﬂrd_£tClùbﬂrd
(
B⁄obo_Clùbﬂrd
 
_obj
, c⁄° 
B⁄obo_M⁄ikî
 
∑°ög_m⁄ikî
, c⁄° B⁄obo_M⁄ikî 
lökög_m⁄ikî
, 
CORBA_Envú⁄mít
 *
ev
);

5322 
B⁄obo_M⁄ikî
 
B⁄obo_Clùbﬂrd_∑°e
(
B⁄obo_Clùbﬂrd
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5323 
B⁄obo_M⁄ikî
 
B⁄obo_Clùbﬂrd_lök
(
B⁄obo_Clùbﬂrd
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5324 
B⁄obo_Clùbﬂrd_unIm∂emíãd1
(
B⁄obo_Clùbﬂrd
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5325 
B⁄obo_Clùbﬂrd_unIm∂emíãd2
(
B⁄obo_Clùbﬂrd
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5326 
B⁄obo_Clùbﬂrd_unIm∂emíãd3
(
B⁄obo_Clùbﬂrd
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5327 
B⁄obo_Clùbﬂrd_unIm∂emíãd4
(
B⁄obo_Clùbﬂrd
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5328 
	#B⁄obo_ClùbﬂrdSt‹e_ªf
 
B⁄obo_Unknown_ªf


	)

5329 
	#B⁄obo_ClùbﬂrdSt‹e_uƒef
 
B⁄obo_Unknown_uƒef


	)

5330 
	#B⁄obo_ClùbﬂrdSt‹e_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5331 
B⁄obo_ClùbﬂrdSt‹e_„tchSåóm
(
B⁄obo_ClùbﬂrdSt‹e
 
_obj
, c⁄° 
B⁄obo_Pîsi°Såóm
 
sour˚
, c⁄° 
B⁄obo_M⁄ikî
 
lökög_m⁄ikî
, 
CORBA_Envú⁄mít
 *
ev
);

5332 
B⁄obo_ClùbﬂrdSt‹e_„tchSt‹age
(
B⁄obo_ClùbﬂrdSt‹e
 
_obj
, c⁄° 
B⁄obo_Pîsi°St‹age
 
sour˚
, c⁄° 
B⁄obo_M⁄ikî
 
lökög_m⁄ikî
, 
CORBA_Envú⁄mít
 *
ev
);

5333 
B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd1
(
B⁄obo_ClùbﬂrdSt‹e
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5334 
B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd2
(
B⁄obo_ClùbﬂrdSt‹e
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5335 
B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd3
(
B⁄obo_ClùbﬂrdSt‹e
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5336 
B⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd4
(
B⁄obo_ClùbﬂrdSt‹e
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5337 
	#B⁄obo_Aµliˇti⁄_ªf
 
B⁄obo_Unknown_ªf


	)

5338 
	#B⁄obo_Aµliˇti⁄_uƒef
 
B⁄obo_Unknown_uƒef


	)

5339 
	#B⁄obo_Aµliˇti⁄_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

5340 
CORBA_™y
* 
B⁄obo_Aµliˇti⁄_mesßge
(
B⁄obo_Aµliˇti⁄
 
_obj
, c⁄° 
CORBA_ch¨
 * 
msg
, c⁄° 
B⁄obo_Aµliˇti⁄_ArgLi°
* 
¨gs
, 
CORBA_Envú⁄mít
 *
ev
);

5341 
CORBA_l⁄g
 
B⁄obo_Aµliˇti⁄_√wIn°™˚
(
B⁄obo_Aµliˇti⁄
 
_obj
, c⁄° 
B⁄obo_Aµliˇti⁄_¨gv_t
* 
¨gv
, 
CORBA_Envú⁄mít
 *
ev
);

5342 
B⁄obo_Aµliˇti⁄_MesßgeLi°
* 
B⁄obo_Aµliˇti⁄_li°Mesßges
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5343 
CORBA_°rög
 
B⁄obo_Aµliˇti⁄_gëName
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5344 
B⁄obo_Aµliˇti⁄_unim∂emíãd1
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5345 
B⁄obo_Aµliˇti⁄_unim∂emíãd2
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5346 
B⁄obo_Aµliˇti⁄_unim∂emíãd3
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5347 
B⁄obo_Aµliˇti⁄_unim∂emíãd4
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5348 
B⁄obo_Aµliˇti⁄_unim∂emíãd5
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5349 
B⁄obo_Aµliˇti⁄_unim∂emíãd6
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5350 
B⁄obo_Aµliˇti⁄_unim∂emíãd7
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5351 
B⁄obo_Aµliˇti⁄_unim∂emíãd8
(
B⁄obo_Aµliˇti⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

5352 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

5354 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5359 
ORBô_II¡îÁ˚
 
B⁄obo_M⁄ikî__iöãrÁ˚
;

5360 
	#B⁄obo_M⁄ikî_IMETHODS_LEN
 8

	)

5361 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5366 
ORBô_IMëhod
 
B⁄obo_M⁄ikî__imëhods
[
B⁄obo_M⁄ikî_IMETHODS_LEN
];

5367 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5372 
ORBô_II¡îÁ˚
 
B⁄obo_M⁄ikîExãndî__iöãrÁ˚
;

5373 
	#B⁄obo_M⁄ikîExãndî_IMETHODS_LEN
 5

	)

5374 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5379 
ORBô_IMëhod
 
B⁄obo_M⁄ikîExãndî__imëhods
[
B⁄obo_M⁄ikîExãndî_IMETHODS_LEN
];

5380 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5385 
ORBô_II¡îÁ˚
 
B⁄obo_Såóm__iöãrÁ˚
;

5386 
	#B⁄obo_Såóm_IMETHODS_LEN
 10

	)

5387 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5392 
ORBô_IMëhod
 
B⁄obo_Såóm__imëhods
[
B⁄obo_Såóm_IMETHODS_LEN
];

5393 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5398 
ORBô_II¡îÁ˚
 
B⁄obo_St‹age__iöãrÁ˚
;

5399 
	#B⁄obo_St‹age_IMETHODS_LEN
 12

	)

5400 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5405 
ORBô_IMëhod
 
B⁄obo_St‹age__imëhods
[
B⁄obo_St‹age_IMETHODS_LEN
];

5406 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5411 
ORBô_II¡îÁ˚
 
B⁄obo_M⁄ikîC⁄ãxt__iöãrÁ˚
;

5412 
	#B⁄obo_M⁄ikîC⁄ãxt_IMETHODS_LEN
 9

	)

5413 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5418 
ORBô_IMëhod
 
B⁄obo_M⁄ikîC⁄ãxt__imëhods
[
B⁄obo_M⁄ikîC⁄ãxt_IMETHODS_LEN
];

5419 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5424 
ORBô_II¡îÁ˚
 
B⁄obo_Ru¬ögC⁄ãxt__iöãrÁ˚
;

5425 
	#B⁄obo_Ru¬ögC⁄ãxt_IMETHODS_LEN
 7

	)

5426 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5431 
ORBô_IMëhod
 
B⁄obo_Ru¬ögC⁄ãxt__imëhods
[
B⁄obo_Ru¬ögC⁄ãxt_IMETHODS_LEN
];

5432 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5437 
ORBô_II¡îÁ˚
 
B⁄obo_Pîsi°__iöãrÁ˚
;

5438 
	#B⁄obo_Pîsi°_IMETHODS_LEN
 5

	)

5439 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5444 
ORBô_IMëhod
 
B⁄obo_Pîsi°__imëhods
[
B⁄obo_Pîsi°_IMETHODS_LEN
];

5445 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5450 
ORBô_II¡îÁ˚
 
B⁄obo_Pîsi°Fûe__iöãrÁ˚
;

5451 
	#B⁄obo_Pîsi°Fûe_IMETHODS_LEN
 5

	)

5452 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5457 
ORBô_IMëhod
 
B⁄obo_Pîsi°Fûe__imëhods
[
B⁄obo_Pîsi°Fûe_IMETHODS_LEN
];

5458 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5463 
ORBô_II¡îÁ˚
 
B⁄obo_Pîsi°St‹age__iöãrÁ˚
;

5464 
	#B⁄obo_Pîsi°St‹age_IMETHODS_LEN
 2

	)

5465 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5470 
ORBô_IMëhod
 
B⁄obo_Pîsi°St‹age__imëhods
[
B⁄obo_Pîsi°St‹age_IMETHODS_LEN
];

5471 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5476 
ORBô_II¡îÁ˚
 
B⁄obo_Pîsi°Såóm__iöãrÁ˚
;

5477 
	#B⁄obo_Pîsi°Såóm_IMETHODS_LEN
 4

	)

5478 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5483 
ORBô_IMëhod
 
B⁄obo_Pîsi°Såóm__imëhods
[
B⁄obo_Pîsi°Såóm_IMETHODS_LEN
];

5484 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5489 
ORBô_II¡îÁ˚
 
B⁄obo_Li°íî__iöãrÁ˚
;

5490 
	#B⁄obo_Li°íî_IMETHODS_LEN
 3

	)

5491 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5496 
ORBô_IMëhod
 
B⁄obo_Li°íî__imëhods
[
B⁄obo_Li°íî_IMETHODS_LEN
];

5497 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5502 
ORBô_II¡îÁ˚
 
B⁄obo_EvítSour˚__iöãrÁ˚
;

5503 
	#B⁄obo_EvítSour˚_IMETHODS_LEN
 5

	)

5504 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5509 
ORBô_IMëhod
 
B⁄obo_EvítSour˚__imëhods
[
B⁄obo_EvítSour˚_IMETHODS_LEN
];

5510 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5515 
ORBô_II¡îÁ˚
 
B⁄obo_UIComp⁄ít__iöãrÁ˚
;

5516 
	#B⁄obo_UIComp⁄ít_IMETHODS_LEN
 10

	)

5517 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5522 
ORBô_IMëhod
 
B⁄obo_UIComp⁄ít__imëhods
[
B⁄obo_UIComp⁄ít_IMETHODS_LEN
];

5523 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5528 
ORBô_II¡îÁ˚
 
B⁄obo_UIC⁄èöî__iöãrÁ˚
;

5529 
	#B⁄obo_UIC⁄èöî_IMETHODS_LEN
 18

	)

5530 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5535 
ORBô_IMëhod
 
B⁄obo_UIC⁄èöî__imëhods
[
B⁄obo_UIC⁄èöî_IMETHODS_LEN
];

5536 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5541 
ORBô_II¡îÁ˚
 
B⁄obo_Pr›îtyBag__iöãrÁ˚
;

5542 
	#B⁄obo_Pr›îtyBag_IMETHODS_LEN
 14

	)

5543 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5548 
ORBô_IMëhod
 
B⁄obo_Pr›îtyBag__imëhods
[
B⁄obo_Pr›îtyBag_IMETHODS_LEN
];

5549 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5554 
ORBô_II¡îÁ˚
 
B⁄obo_C⁄figD©aba£__iöãrÁ˚
;

5555 
	#B⁄obo_C⁄figD©aba£_IMETHODS_LEN
 11

	)

5556 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5561 
ORBô_IMëhod
 
B⁄obo_C⁄figD©aba£__imëhods
[
B⁄obo_C⁄figD©aba£_IMETHODS_LEN
];

5562 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5567 
ORBô_II¡îÁ˚
 
B⁄obo_C⁄åﬁFøme__iöãrÁ˚
;

5568 
	#B⁄obo_C⁄åﬁFøme_IMETHODS_LEN
 9

	)

5569 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5574 
ORBô_IMëhod
 
B⁄obo_C⁄åﬁFøme__imëhods
[
B⁄obo_C⁄åﬁFøme_IMETHODS_LEN
];

5575 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5580 
ORBô_II¡îÁ˚
 
B⁄obo_C⁄åﬁ__iöãrÁ˚
;

5581 
	#B⁄obo_C⁄åﬁ_IMETHODS_LEN
 13

	)

5582 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5587 
ORBô_IMëhod
 
B⁄obo_C⁄åﬁ__imëhods
[
B⁄obo_C⁄åﬁ_IMETHODS_LEN
];

5588 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5593 
ORBô_II¡îÁ˚
 
B⁄obo_Pr›îtyC⁄åﬁ__iöãrÁ˚
;

5594 
	#B⁄obo_Pr›îtyC⁄åﬁ_IMETHODS_LEN
 5

	)

5595 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5600 
ORBô_IMëhod
 
B⁄obo_Pr›îtyC⁄åﬁ__imëhods
[
B⁄obo_Pr›îtyC⁄åﬁ_IMETHODS_LEN
];

5601 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5606 
ORBô_II¡îÁ˚
 
B⁄obo_ZoomabÀFøme__iöãrÁ˚
;

5607 
	#B⁄obo_ZoomabÀFøme_IMETHODS_LEN
 6

	)

5608 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5613 
ORBô_IMëhod
 
B⁄obo_ZoomabÀFøme__imëhods
[
B⁄obo_ZoomabÀFøme_IMETHODS_LEN
];

5614 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5619 
ORBô_II¡îÁ˚
 
B⁄obo_ZoomabÀ__iöãrÁ˚
;

5620 
	#B⁄obo_ZoomabÀ_IMETHODS_LEN
 18

	)

5621 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5626 
ORBô_IMëhod
 
B⁄obo_ZoomabÀ__imëhods
[
B⁄obo_ZoomabÀ_IMETHODS_LEN
];

5627 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5632 
ORBô_II¡îÁ˚
 
B⁄obo_IãmC⁄èöî__iöãrÁ˚
;

5633 
	#B⁄obo_IãmC⁄èöî_IMETHODS_LEN
 6

	)

5634 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5639 
ORBô_IMëhod
 
B⁄obo_IãmC⁄èöî__imëhods
[
B⁄obo_IãmC⁄èöî_IMETHODS_LEN
];

5640 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5645 
ORBô_II¡îÁ˚
 
B⁄obo_C™vas_Comp⁄ít__iöãrÁ˚
;

5646 
	#B⁄obo_C™vas_Comp⁄ít_IMETHODS_LEN
 20

	)

5647 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5652 
ORBô_IMëhod
 
B⁄obo_C™vas_Comp⁄ít__imëhods
[
B⁄obo_C™vas_Comp⁄ít_IMETHODS_LEN
];

5653 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5658 
ORBô_II¡îÁ˚
 
B⁄obo_C™vas_Comp⁄ítProxy__iöãrÁ˚
;

5659 
	#B⁄obo_C™vas_Comp⁄ítProxy_IMETHODS_LEN
 12

	)

5660 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5665 
ORBô_IMëhod
 
B⁄obo_C™vas_Comp⁄ítProxy__imëhods
[
B⁄obo_C™vas_Comp⁄ítProxy_IMETHODS_LEN
];

5666 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5671 
ORBô_II¡îÁ˚
 
B⁄obo_C⁄åﬁFa˘‹y__iöãrÁ˚
;

5672 
	#B⁄obo_C⁄åﬁFa˘‹y_IMETHODS_LEN
 3

	)

5673 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5678 
ORBô_IMëhod
 
B⁄obo_C⁄åﬁFa˘‹y__imëhods
[
B⁄obo_C⁄åﬁFa˘‹y_IMETHODS_LEN
];

5679 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5684 
ORBô_II¡îÁ˚
 
B⁄obo_C™vasComp⁄ítFa˘‹y__iöãrÁ˚
;

5685 
	#B⁄obo_C™vasComp⁄ítFa˘‹y_IMETHODS_LEN
 3

	)

5686 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5691 
ORBô_IMëhod
 
B⁄obo_C™vasComp⁄ítFa˘‹y__imëhods
[
B⁄obo_C™vasComp⁄ítFa˘‹y_IMETHODS_LEN
];

5692 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5697 
ORBô_II¡îÁ˚
 
B⁄obo_EmbeddabÀ__iöãrÁ˚
;

5698 
	#B⁄obo_EmbeddabÀ_IMETHODS_LEN
 8

	)

5699 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5704 
ORBô_IMëhod
 
B⁄obo_EmbeddabÀ__imëhods
[
B⁄obo_EmbeddabÀ_IMETHODS_LEN
];

5705 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5710 
ORBô_II¡îÁ˚
 
B⁄obo_Pröt__iöãrÁ˚
;

5711 
	#B⁄obo_Pröt_IMETHODS_LEN
 5

	)

5712 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5717 
ORBô_IMëhod
 
B⁄obo_Pröt__imëhods
[
B⁄obo_Pröt_IMETHODS_LEN
];

5718 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5723 
ORBô_II¡îÁ˚
 
B⁄obo_Clùbﬂrd__iöãrÁ˚
;

5724 
	#B⁄obo_Clùbﬂrd_IMETHODS_LEN
 7

	)

5725 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5730 
ORBô_IMëhod
 
B⁄obo_Clùbﬂrd__imëhods
[
B⁄obo_Clùbﬂrd_IMETHODS_LEN
];

5731 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5736 
ORBô_II¡îÁ˚
 
B⁄obo_ClùbﬂrdSt‹e__iöãrÁ˚
;

5737 
	#B⁄obo_ClùbﬂrdSt‹e_IMETHODS_LEN
 6

	)

5738 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5743 
ORBô_IMëhod
 
B⁄obo_ClùbﬂrdSt‹e__imëhods
[
B⁄obo_ClùbﬂrdSt‹e_IMETHODS_LEN
];

5744 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5749 
ORBô_II¡îÁ˚
 
B⁄obo_Aµliˇti⁄__iöãrÁ˚
;

5750 
	#B⁄obo_Aµliˇti⁄_IMETHODS_LEN
 12

	)

5751 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo


5756 
ORBô_IMëhod
 
B⁄obo_Aµliˇti⁄__imëhods
[
B⁄obo_Aµliˇti⁄_IMETHODS_LEN
];

5760 #i‚de‡
__B⁄obo_M⁄ikî__imëhods_ödex


5761 
	#__B⁄obo_M⁄ikî__imëhods_ödex


	)

5763 
	gB⁄obo_M⁄ikî_gëP¨ít__imëhods_ödex
,

5764 
	gB⁄obo_M⁄ikî_£tP¨ít__imëhods_ödex
,

5765 
	gB⁄obo_M⁄ikî_gëName__imëhods_ödex
,

5766 
	gB⁄obo_M⁄ikî_£tName__imëhods_ödex
,

5767 
	gB⁄obo_M⁄ikî_ªsﬁve__imëhods_ödex
,

5768 
	gB⁄obo_M⁄ikî_equÆ__imëhods_ödex
,

5769 
	gB⁄obo_M⁄ikî_unIm∂emíãd1__imëhods_ödex
,

5770 
	gB⁄obo_M⁄ikî_unIm∂emíãd2__imëhods_ödex


5771 } 
	tB⁄obo_M⁄ikî__imëhods_ödex
;

5774 #i‚de‡
__B⁄obo_M⁄ikîExãndî__imëhods_ödex


5775 
	#__B⁄obo_M⁄ikîExãndî__imëhods_ödex


	)

5777 
	gB⁄obo_M⁄ikîExãndî_ªsﬁve__imëhods_ödex
,

5778 
	gB⁄obo_M⁄ikîExãndî_unIm∂emíãd1__imëhods_ödex
,

5779 
	gB⁄obo_M⁄ikîExãndî_unIm∂emíãd2__imëhods_ödex
,

5780 
	gB⁄obo_M⁄ikîExãndî_unIm∂emíãd3__imëhods_ödex
,

5781 
	gB⁄obo_M⁄ikîExãndî_unIm∂emíãd4__imëhods_ödex


5782 } 
	tB⁄obo_M⁄ikîExãndî__imëhods_ödex
;

5785 #i‚de‡
__B⁄obo_Såóm__imëhods_ödex


5786 
	#__B⁄obo_Såóm__imëhods_ödex


	)

5788 
	gB⁄obo_Såóm_gëInfo__imëhods_ödex
,

5789 
	gB⁄obo_Såóm_£tInfo__imëhods_ödex
,

5790 
	gB⁄obo_Såóm_ªad__imëhods_ödex
,

5791 
	gB⁄obo_Såóm_wrôe__imëhods_ödex
,

5792 
	gB⁄obo_Såóm_£ek__imëhods_ödex
,

5793 
	gB⁄obo_Såóm_åunˇã__imëhods_ödex
,

5794 
	gB⁄obo_Såóm_commô__imëhods_ödex
,

5795 
	gB⁄obo_Såóm_ªvît__imëhods_ödex
,

5796 
	gB⁄obo_Såóm_unIm∂emíãd1__imëhods_ödex
,

5797 
	gB⁄obo_Såóm_unIm∂emíãd2__imëhods_ödex


5798 } 
	tB⁄obo_Såóm__imëhods_ödex
;

5801 #i‚de‡
__B⁄obo_St‹age__imëhods_ödex


5802 
	#__B⁄obo_St‹age__imëhods_ödex


	)

5804 
	gB⁄obo_St‹age_gëInfo__imëhods_ödex
,

5805 
	gB⁄obo_St‹age_£tInfo__imëhods_ödex
,

5806 
	gB⁄obo_St‹age_›íSåóm__imëhods_ödex
,

5807 
	gB⁄obo_St‹age_›íSt‹age__imëhods_ödex
,

5808 
	gB⁄obo_St‹age_c›yTo__imëhods_ödex
,

5809 
	gB⁄obo_St‹age_li°C⁄ã¡s__imëhods_ödex
,

5810 
	gB⁄obo_St‹age_îa£__imëhods_ödex
,

5811 
	gB⁄obo_St‹age_ª«me__imëhods_ödex
,

5812 
	gB⁄obo_St‹age_commô__imëhods_ödex
,

5813 
	gB⁄obo_St‹age_ªvît__imëhods_ödex
,

5814 
	gB⁄obo_St‹age_unIm∂emíãd1__imëhods_ödex
,

5815 
	gB⁄obo_St‹age_unIm∂emíãd2__imëhods_ödex


5816 } 
	tB⁄obo_St‹age__imëhods_ödex
;

5819 #i‚de‡
__B⁄obo_M⁄ikîC⁄ãxt__imëhods_ödex


5820 
	#__B⁄obo_M⁄ikîC⁄ãxt__imëhods_ödex


	)

5822 
	gB⁄obo_M⁄ikîC⁄ãxt_gëObje˘__imëhods_ödex
,

5823 
	gB⁄obo_M⁄ikîC⁄ãxt_¸óãFromName__imëhods_ödex
,

5824 
	gB⁄obo_M⁄ikîC⁄ãxt_gëExãndî__imëhods_ödex
,

5825 
	gB⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd1__imëhods_ödex
,

5826 
	gB⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd2__imëhods_ödex
,

5827 
	gB⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd3__imëhods_ödex
,

5828 
	gB⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd4__imëhods_ödex
,

5829 
	gB⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd5__imëhods_ödex
,

5830 
	gB⁄obo_M⁄ikîC⁄ãxt_unIm∂emíãd6__imëhods_ödex


5831 } 
	tB⁄obo_M⁄ikîC⁄ãxt__imëhods_ödex
;

5834 #i‚de‡
__B⁄obo_Ru¬ögC⁄ãxt__imëhods_ödex


5835 
	#__B⁄obo_Ru¬ögC⁄ãxt__imëhods_ödex


	)

5837 
	gB⁄obo_Ru¬ögC⁄ãxt_addObje˘__imëhods_ödex
,

5838 
	gB⁄obo_Ru¬ögC⁄ãxt_ªmoveObje˘__imëhods_ödex
,

5839 
	gB⁄obo_Ru¬ögC⁄ãxt_addKey__imëhods_ödex
,

5840 
	gB⁄obo_Ru¬ögC⁄ãxt_ªmoveKey__imëhods_ödex
,

5841 
	gB⁄obo_Ru¬ögC⁄ãxt_©ExôUƒef__imëhods_ödex
,

5842 
	gB⁄obo_Ru¬ögC⁄ãxt_unIm∂emíãd1__imëhods_ödex
,

5843 
	gB⁄obo_Ru¬ögC⁄ãxt_unIm∂emíãd2__imëhods_ödex


5844 } 
	tB⁄obo_Ru¬ögC⁄ãxt__imëhods_ödex
;

5847 #i‚de‡
__B⁄obo_Pîsi°__imëhods_ödex


5848 
	#__B⁄obo_Pîsi°__imëhods_ödex


	)

5850 
	gB⁄obo_Pîsi°_gëC⁄ã¡Ty≥s__imëhods_ödex
,

5851 
	gB⁄obo_Pîsi°_gëIId__imëhods_ödex
,

5852 
	gB⁄obo_Pîsi°_isDúty__imëhods_ödex
,

5853 
	gB⁄obo_Pîsi°_unIm∂emíãd1__imëhods_ödex
,

5854 
	gB⁄obo_Pîsi°_unIm∂emíãd2__imëhods_ödex


5855 } 
	tB⁄obo_Pîsi°__imëhods_ödex
;

5858 #i‚de‡
__B⁄obo_Pîsi°Fûe__imëhods_ödex


5859 
	#__B⁄obo_Pîsi°Fûe__imëhods_ödex


	)

5861 
	gB⁄obo_Pîsi°Fûe_lﬂd__imëhods_ödex
,

5862 
	gB⁄obo_Pîsi°Fûe_ßve__imëhods_ödex
,

5863 
	gB⁄obo_Pîsi°Fûe_gëCuºítFûe__imëhods_ödex
,

5864 
	gB⁄obo_Pîsi°Fûe_unIm∂emíãd3__imëhods_ödex
,

5865 
	gB⁄obo_Pîsi°Fûe_unIm∂emíãd4__imëhods_ödex


5866 } 
	tB⁄obo_Pîsi°Fûe__imëhods_ödex
;

5869 #i‚de‡
__B⁄obo_Pîsi°St‹age__imëhods_ödex


5870 
	#__B⁄obo_Pîsi°St‹age__imëhods_ödex


	)

5872 
	gB⁄obo_Pîsi°St‹age_lﬂd__imëhods_ödex
,

5873 
	gB⁄obo_Pîsi°St‹age_ßve__imëhods_ödex


5874 } 
	tB⁄obo_Pîsi°St‹age__imëhods_ödex
;

5877 #i‚de‡
__B⁄obo_Pîsi°Såóm__imëhods_ödex


5878 
	#__B⁄obo_Pîsi°Såóm__imëhods_ödex


	)

5880 
	gB⁄obo_Pîsi°Såóm_lﬂd__imëhods_ödex
,

5881 
	gB⁄obo_Pîsi°Såóm_ßve__imëhods_ödex
,

5882 
	gB⁄obo_Pîsi°Såóm_unIm∂emíãd3__imëhods_ödex
,

5883 
	gB⁄obo_Pîsi°Såóm_unIm∂emíãd4__imëhods_ödex


5884 } 
	tB⁄obo_Pîsi°Såóm__imëhods_ödex
;

5887 #i‚de‡
__B⁄obo_Li°íî__imëhods_ödex


5888 
	#__B⁄obo_Li°íî__imëhods_ödex


	)

5890 
	gB⁄obo_Li°íî_evít__imëhods_ödex
,

5891 
	gB⁄obo_Li°íî_unIm∂emíãd__imëhods_ödex
,

5892 
	gB⁄obo_Li°íî_unIm∂emíãd2__imëhods_ödex


5893 } 
	tB⁄obo_Li°íî__imëhods_ödex
;

5896 #i‚de‡
__B⁄obo_EvítSour˚__imëhods_ödex


5897 
	#__B⁄obo_EvítSour˚__imëhods_ödex


	)

5899 
	gB⁄obo_EvítSour˚_addLi°íî__imëhods_ödex
,

5900 
	gB⁄obo_EvítSour˚_addLi°íîWôhMask__imëhods_ödex
,

5901 
	gB⁄obo_EvítSour˚_ªmoveLi°íî__imëhods_ödex
,

5902 
	gB⁄obo_EvítSour˚_unIm∂emíãd__imëhods_ödex
,

5903 
	gB⁄obo_EvítSour˚_unIm∂emíãd2__imëhods_ödex


5904 } 
	tB⁄obo_EvítSour˚__imëhods_ödex
;

5907 #i‚de‡
__B⁄obo_UIComp⁄ít__imëhods_ödex


5908 
	#__B⁄obo_UIComp⁄ít__imëhods_ödex


	)

5910 
	gB⁄obo_UIComp⁄ít_£tC⁄èöî__imëhods_ödex
,

5911 
	gB⁄obo_UIComp⁄ít_un£tC⁄èöî__imëhods_ödex
,

5912 
	gB⁄obo_UIComp⁄ít__gë_«me__imëhods_ödex
,

5913 
	gB⁄obo_UIComp⁄ít_des¸ibeVîbs__imëhods_ödex
,

5914 
	gB⁄obo_UIComp⁄ít_execVîb__imëhods_ödex
,

5915 
	gB⁄obo_UIComp⁄ít_uiEvít__imëhods_ödex
,

5916 
	gB⁄obo_UIComp⁄ít_unIm∂emíãd__imëhods_ödex
,

5917 
	gB⁄obo_UIComp⁄ít_unIm∂emíãd2__imëhods_ödex
,

5918 
	gB⁄obo_UIComp⁄ít_unIm∂emíãd3__imëhods_ödex
,

5919 
	gB⁄obo_UIComp⁄ít_unIm∂emíãd4__imëhods_ödex


5920 } 
	tB⁄obo_UIComp⁄ít__imëhods_ödex
;

5923 #i‚de‡
__B⁄obo_UIC⁄èöî__imëhods_ödex


5924 
	#__B⁄obo_UIC⁄èöî__imëhods_ödex


	)

5926 
	gB⁄obo_UIC⁄èöî_ªgi°îComp⁄ít__imëhods_ödex
,

5927 
	gB⁄obo_UIC⁄èöî_dîegi°îComp⁄ít__imëhods_ödex
,

5928 
	gB⁄obo_UIC⁄èöî_‰ìze__imëhods_ödex
,

5929 
	gB⁄obo_UIC⁄èöî_thaw__imëhods_ödex
,

5930 
	gB⁄obo_UIC⁄èöî_£tAâr__imëhods_ödex
,

5931 
	gB⁄obo_UIC⁄èöî_gëAâr__imëhods_ödex
,

5932 
	gB⁄obo_UIC⁄èöî_£tNode__imëhods_ödex
,

5933 
	gB⁄obo_UIC⁄èöî_gëNode__imëhods_ödex
,

5934 
	gB⁄obo_UIC⁄èöî_ªmoveNode__imëhods_ödex
,

5935 
	gB⁄obo_UIC⁄èöî_exi°s__imëhods_ödex
,

5936 
	gB⁄obo_UIC⁄èöî_execVîb__imëhods_ödex
,

5937 
	gB⁄obo_UIC⁄èöî_uiEvít__imëhods_ödex
,

5938 
	gB⁄obo_UIC⁄èöî_£tObje˘__imëhods_ödex
,

5939 
	gB⁄obo_UIC⁄èöî_gëObje˘__imëhods_ödex
,

5940 
	gB⁄obo_UIC⁄èöî_unIm∂emíãd__imëhods_ödex
,

5941 
	gB⁄obo_UIC⁄èöî_unIm∂emíãd2__imëhods_ödex
,

5942 
	gB⁄obo_UIC⁄èöî_unIm∂emíãd3__imëhods_ödex
,

5943 
	gB⁄obo_UIC⁄èöî_unIm∂emíãd4__imëhods_ödex


5944 } 
	tB⁄obo_UIC⁄èöî__imëhods_ödex
;

5947 #i‚de‡
__B⁄obo_Pr›îtyBag__imëhods_ödex


5948 
	#__B⁄obo_Pr›îtyBag__imëhods_ödex


	)

5950 
	gB⁄obo_Pr›îtyBag_gëKeys__imëhods_ödex
,

5951 
	gB⁄obo_Pr›îtyBag_gëTy≥__imëhods_ödex
,

5952 
	gB⁄obo_Pr›îtyBag_gëVÆue__imëhods_ödex
,

5953 
	gB⁄obo_Pr›îtyBag_£tVÆue__imëhods_ödex
,

5954 
	gB⁄obo_Pr›îtyBag_gëVÆues__imëhods_ödex
,

5955 
	gB⁄obo_Pr›îtyBag_£tVÆues__imëhods_ödex
,

5956 
	gB⁄obo_Pr›îtyBag_gëDeÁu…__imëhods_ödex
,

5957 
	gB⁄obo_Pr›îtyBag_gëDocTôÀ__imëhods_ödex
,

5958 
	gB⁄obo_Pr›îtyBag_gëDoc__imëhods_ödex
,

5959 
	gB⁄obo_Pr›îtyBag_gëFœgs__imëhods_ödex
,

5960 
	gB⁄obo_Pr›îtyBag_unIm∂emíãd1__imëhods_ödex
,

5961 
	gB⁄obo_Pr›îtyBag_unIm∂emíãd2__imëhods_ödex
,

5962 
	gB⁄obo_Pr›îtyBag_unIm∂emíãd3__imëhods_ödex
,

5963 
	gB⁄obo_Pr›îtyBag_unIm∂emíãd4__imëhods_ödex


5964 } 
	tB⁄obo_Pr›îtyBag__imëhods_ödex
;

5967 #i‚de‡
__B⁄obo_C⁄figD©aba£__imëhods_ödex


5968 
	#__B⁄obo_C⁄figD©aba£__imëhods_ödex


	)

5970 
	gB⁄obo_C⁄figD©aba£__gë_isWrôóbÀ__imëhods_ödex
,

5971 
	gB⁄obo_C⁄figD©aba£_gëDús__imëhods_ödex
,

5972 
	gB⁄obo_C⁄figD©aba£_hasDú__imëhods_ödex
,

5973 
	gB⁄obo_C⁄figD©aba£_ªmoveVÆue__imëhods_ödex
,

5974 
	gB⁄obo_C⁄figD©aba£_ªmoveDú__imëhods_ödex
,

5975 
	gB⁄obo_C⁄figD©aba£_addD©aba£__imëhods_ödex
,

5976 
	gB⁄obo_C⁄figD©aba£_sync__imëhods_ödex
,

5977 
	gB⁄obo_C⁄figD©aba£_unIm∂emíãd5__imëhods_ödex
,

5978 
	gB⁄obo_C⁄figD©aba£_unIm∂emíãd6__imëhods_ödex
,

5979 
	gB⁄obo_C⁄figD©aba£_unIm∂emíãd7__imëhods_ödex
,

5980 
	gB⁄obo_C⁄figD©aba£_unIm∂emíãd8__imëhods_ödex


5981 } 
	tB⁄obo_C⁄figD©aba£__imëhods_ödex
;

5984 #i‚de‡
__B⁄obo_C⁄åﬁFøme__imëhods_ödex


5985 
	#__B⁄obo_C⁄åﬁFøme__imëhods_ödex


	)

5987 
	gB⁄obo_C⁄åﬁFøme_gëT›ÀvñId__imëhods_ödex
,

5988 
	gB⁄obo_C⁄åﬁFøme_gëAmbõ¡Pr›îtõs__imëhods_ödex
,

5989 
	gB⁄obo_C⁄åﬁFøme_gëUIC⁄èöî__imëhods_ödex
,

5990 
	gB⁄obo_C⁄åﬁFøme_nŸifyA˘iv©ed__imëhods_ödex
,

5991 
	gB⁄obo_C⁄åﬁFøme_queueResize__imëhods_ödex
,

5992 
	gB⁄obo_C⁄åﬁFøme_a˘iv©eURI__imëhods_ödex
,

5993 
	gB⁄obo_C⁄åﬁFøme_gëP¨ítAc˚ssibÀ__imëhods_ödex
,

5994 
	gB⁄obo_C⁄åﬁFøme_unIm∂emíãd__imëhods_ödex
,

5995 
	gB⁄obo_C⁄åﬁFøme_unIm∂emíãd2__imëhods_ödex


5996 } 
	tB⁄obo_C⁄åﬁFøme__imëhods_ödex
;

5999 #i‚de‡
__B⁄obo_C⁄åﬁ__imëhods_ödex


6000 
	#__B⁄obo_C⁄åﬁ__imëhods_ödex


	)

6002 
	gB⁄obo_C⁄åﬁ_gëPr›îtõs__imëhods_ödex
,

6003 
	gB⁄obo_C⁄åﬁ_gëDesúedSize__imëhods_ödex
,

6004 
	gB⁄obo_C⁄åﬁ_gëAc˚ssibÀ__imëhods_ödex
,

6005 
	gB⁄obo_C⁄åﬁ_gëWödowId__imëhods_ödex
,

6006 
	gB⁄obo_C⁄åﬁ_gëP›upC⁄èöî__imëhods_ödex
,

6007 
	gB⁄obo_C⁄åﬁ_£tFøme__imëhods_ödex
,

6008 
	gB⁄obo_C⁄åﬁ_£tSize__imëhods_ödex
,

6009 
	gB⁄obo_C⁄åﬁ_£tSèã__imëhods_ödex
,

6010 
	gB⁄obo_C⁄åﬁ_a˘iv©e__imëhods_ödex
,

6011 
	gB⁄obo_C⁄åﬁ_focus__imëhods_ödex
,

6012 
	gB⁄obo_C⁄åﬁ_unIm∂emíãd__imëhods_ödex
,

6013 
	gB⁄obo_C⁄åﬁ_unIm∂emíãd2__imëhods_ödex
,

6014 
	gB⁄obo_C⁄åﬁ_unIm∂emíãd3__imëhods_ödex


6015 } 
	tB⁄obo_C⁄åﬁ__imëhods_ödex
;

6018 #i‚de‡
__B⁄obo_Pr›îtyC⁄åﬁ__imëhods_ödex


6019 
	#__B⁄obo_Pr›îtyC⁄åﬁ__imëhods_ödex


	)

6021 
	gB⁄obo_Pr›îtyC⁄åﬁ__gë_∑geCou¡__imëhods_ödex
,

6022 
	gB⁄obo_Pr›îtyC⁄åﬁ_gëC⁄åﬁ__imëhods_ödex
,

6023 
	gB⁄obo_Pr›îtyC⁄åﬁ_nŸifyA˘i⁄__imëhods_ödex
,

6024 
	gB⁄obo_Pr›îtyC⁄åﬁ_unIm∂emíãd__imëhods_ödex
,

6025 
	gB⁄obo_Pr›îtyC⁄åﬁ_unIm∂emíãd2__imëhods_ödex


6026 } 
	tB⁄obo_Pr›îtyC⁄åﬁ__imëhods_ödex
;

6029 #i‚de‡
__B⁄obo_ZoomabÀFøme__imëhods_ödex


6030 
	#__B⁄obo_ZoomabÀFøme__imëhods_ödex


	)

6032 
	gB⁄obo_ZoomabÀFøme_⁄LevñCh™ged__imëhods_ödex
,

6033 
	gB⁄obo_ZoomabÀFøme_⁄P¨amëîsCh™ged__imëhods_ödex
,

6034 
	gB⁄obo_ZoomabÀFøme_unIm∂emíãd1__imëhods_ödex
,

6035 
	gB⁄obo_ZoomabÀFøme_unIm∂emíãd2__imëhods_ödex
,

6036 
	gB⁄obo_ZoomabÀFøme_unIm∂emíãd3__imëhods_ödex
,

6037 
	gB⁄obo_ZoomabÀFøme_unIm∂emíãd4__imëhods_ödex


6038 } 
	tB⁄obo_ZoomabÀFøme__imëhods_ödex
;

6041 #i‚de‡
__B⁄obo_ZoomabÀ__imëhods_ödex


6042 
	#__B⁄obo_ZoomabÀ__imëhods_ödex


	)

6044 
	gB⁄obo_ZoomabÀ__gë_Àvñ__imëhods_ödex
,

6045 
	gB⁄obo_ZoomabÀ__gë_möLevñ__imëhods_ödex
,

6046 
	gB⁄obo_ZoomabÀ__gë_maxLevñ__imëhods_ödex
,

6047 
	gB⁄obo_ZoomabÀ__gë_hasMöLevñ__imëhods_ödex
,

6048 
	gB⁄obo_ZoomabÀ__gë_hasMaxLevñ__imëhods_ödex
,

6049 
	gB⁄obo_ZoomabÀ__gë_isC⁄töuous__imëhods_ödex
,

6050 
	gB⁄obo_ZoomabÀ__gë_¥e„ºedLevñs__imëhods_ödex
,

6051 
	gB⁄obo_ZoomabÀ__gë_¥e„ºedLevñNames__imëhods_ödex
,

6052 
	gB⁄obo_ZoomabÀ_zoomIn__imëhods_ödex
,

6053 
	gB⁄obo_ZoomabÀ_zoomOut__imëhods_ödex
,

6054 
	gB⁄obo_ZoomabÀ_zoomFô__imëhods_ödex
,

6055 
	gB⁄obo_ZoomabÀ_zoomDeÁu…__imëhods_ödex
,

6056 
	gB⁄obo_ZoomabÀ_£tLevñ__imëhods_ödex
,

6057 
	gB⁄obo_ZoomabÀ_£tFøme__imëhods_ödex
,

6058 
	gB⁄obo_ZoomabÀ_unIm∂emíãd1__imëhods_ödex
,

6059 
	gB⁄obo_ZoomabÀ_unIm∂emíãd2__imëhods_ödex
,

6060 
	gB⁄obo_ZoomabÀ_unIm∂emíãd3__imëhods_ödex
,

6061 
	gB⁄obo_ZoomabÀ_unIm∂emíãd4__imëhods_ödex


6062 } 
	tB⁄obo_ZoomabÀ__imëhods_ödex
;

6065 #i‚de‡
__B⁄obo_IãmC⁄èöî__imëhods_ödex


6066 
	#__B⁄obo_IãmC⁄èöî__imëhods_ödex


	)

6068 
	gB⁄obo_IãmC⁄èöî_íumObje˘s__imëhods_ödex
,

6069 
	gB⁄obo_IãmC⁄èöî_gëObje˘ByName__imëhods_ödex
,

6070 
	gB⁄obo_IãmC⁄èöî_unIm∂emíãd1__imëhods_ödex
,

6071 
	gB⁄obo_IãmC⁄èöî_unIm∂emíãd2__imëhods_ödex
,

6072 
	gB⁄obo_IãmC⁄èöî_unIm∂emíãd3__imëhods_ödex
,

6073 
	gB⁄obo_IãmC⁄èöî_unIm∂emíãd4__imëhods_ödex


6074 } 
	tB⁄obo_IãmC⁄èöî__imëhods_ödex
;

6077 #i‚de‡
__B⁄obo_C™vas_Comp⁄ít__imëhods_ödex


6078 
	#__B⁄obo_C™vas_Comp⁄ít__imëhods_ödex


	)

6080 
	gB⁄obo_C™vas_Comp⁄ít_upd©e__imëhods_ödex
,

6081 
	gB⁄obo_C™vas_Comp⁄ít_ªÆize__imëhods_ödex
,

6082 
	gB⁄obo_C™vas_Comp⁄ít_uƒólize__imëhods_ödex
,

6083 
	gB⁄obo_C™vas_Comp⁄ít_m≠__imëhods_ödex
,

6084 
	gB⁄obo_C™vas_Comp⁄ít_unm≠__imëhods_ödex
,

6085 
	gB⁄obo_C™vas_Comp⁄ít_døw__imëhods_ödex
,

6086 
	gB⁄obo_C™vas_Comp⁄ít_ªndî__imëhods_ödex
,

6087 
	gB⁄obo_C™vas_Comp⁄ít_c⁄èös__imëhods_ödex
,

6088 
	gB⁄obo_C™vas_Comp⁄ít_bounds__imëhods_ödex
,

6089 
	gB⁄obo_C™vas_Comp⁄ít_evít__imëhods_ödex
,

6090 
	gB⁄obo_C™vas_Comp⁄ít_£tC™vasSize__imëhods_ödex
,

6091 
	gB⁄obo_C™vas_Comp⁄ít_£tBounds__imëhods_ödex
,

6092 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd1__imëhods_ödex
,

6093 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd2__imëhods_ödex
,

6094 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd3__imëhods_ödex
,

6095 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd4__imëhods_ödex
,

6096 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd5__imëhods_ödex
,

6097 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd6__imëhods_ödex
,

6098 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd7__imëhods_ödex
,

6099 
	gB⁄obo_C™vas_Comp⁄ít_unIm∂emíãd8__imëhods_ödex


6100 } 
	tB⁄obo_C™vas_Comp⁄ít__imëhods_ödex
;

6103 #i‚de‡
__B⁄obo_C™vas_Comp⁄ítProxy__imëhods_ödex


6104 
	#__B⁄obo_C™vas_Comp⁄ítProxy__imëhods_ödex


	)

6106 
	gB⁄obo_C™vas_Comp⁄ítProxy_ªque°Upd©e__imëhods_ödex
,

6107 
	gB⁄obo_C™vas_Comp⁄ítProxy_gøbFocus__imëhods_ödex
,

6108 
	gB⁄obo_C™vas_Comp⁄ítProxy_ungøbFocus__imëhods_ödex
,

6109 
	gB⁄obo_C™vas_Comp⁄ítProxy_gëUIC⁄èöî__imëhods_ödex
,

6110 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd1__imëhods_ödex
,

6111 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd2__imëhods_ödex
,

6112 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd3__imëhods_ödex
,

6113 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd4__imëhods_ödex
,

6114 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd5__imëhods_ödex
,

6115 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd6__imëhods_ödex
,

6116 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd7__imëhods_ödex
,

6117 
	gB⁄obo_C™vas_Comp⁄ítProxy_unIm∂emíãd8__imëhods_ödex


6118 } 
	tB⁄obo_C™vas_Comp⁄ítProxy__imëhods_ödex
;

6121 #i‚de‡
__B⁄obo_C⁄åﬁFa˘‹y__imëhods_ödex


6122 
	#__B⁄obo_C⁄åﬁFa˘‹y__imëhods_ödex


	)

6124 
	gB⁄obo_C⁄åﬁFa˘‹y_¸óãC⁄åﬁ__imëhods_ödex
,

6125 
	gB⁄obo_C⁄åﬁFa˘‹y_unIm∂emíãd1__imëhods_ödex
,

6126 
	gB⁄obo_C⁄åﬁFa˘‹y_unIm∂emíãd2__imëhods_ödex


6127 } 
	tB⁄obo_C⁄åﬁFa˘‹y__imëhods_ödex
;

6130 #i‚de‡
__B⁄obo_C™vasComp⁄ítFa˘‹y__imëhods_ödex


6131 
	#__B⁄obo_C™vasComp⁄ítFa˘‹y__imëhods_ödex


	)

6133 
	gB⁄obo_C™vasComp⁄ítFa˘‹y_¸óãC™vasComp⁄ít__imëhods_ödex
,

6134 
	gB⁄obo_C™vasComp⁄ítFa˘‹y_unIm∂emíãd1__imëhods_ödex
,

6135 
	gB⁄obo_C™vasComp⁄ítFa˘‹y_unIm∂emíãd2__imëhods_ödex


6136 } 
	tB⁄obo_C™vasComp⁄ítFa˘‹y__imëhods_ödex
;

6139 #i‚de‡
__B⁄obo_EmbeddabÀ__imëhods_ödex


6140 
	#__B⁄obo_EmbeddabÀ__imëhods_ödex


	)

6142 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd1__imëhods_ödex
,

6143 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd2__imëhods_ödex
,

6144 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd3__imëhods_ödex
,

6145 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd4__imëhods_ödex
,

6146 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd5__imëhods_ödex
,

6147 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd6__imëhods_ödex
,

6148 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd7__imëhods_ödex
,

6149 
	gB⁄obo_EmbeddabÀ_unIm∂emíãd8__imëhods_ödex


6150 } 
	tB⁄obo_EmbeddabÀ__imëhods_ödex
;

6153 #i‚de‡
__B⁄obo_Pröt__imëhods_ödex


6154 
	#__B⁄obo_Pröt__imëhods_ödex


	)

6156 
	gB⁄obo_Pröt_ªndî__imëhods_ödex
,

6157 
	gB⁄obo_Pröt_unIm∂emíãd1__imëhods_ödex
,

6158 
	gB⁄obo_Pröt_unIm∂emíãd2__imëhods_ödex
,

6159 
	gB⁄obo_Pröt_unIm∂emíãd3__imëhods_ödex
,

6160 
	gB⁄obo_Pröt_unIm∂emíãd4__imëhods_ödex


6161 } 
	tB⁄obo_Pröt__imëhods_ödex
;

6164 #i‚de‡
__B⁄obo_Clùbﬂrd__imëhods_ödex


6165 
	#__B⁄obo_Clùbﬂrd__imëhods_ödex


	)

6167 
	gB⁄obo_Clùbﬂrd_£tClùbﬂrd__imëhods_ödex
,

6168 
	gB⁄obo_Clùbﬂrd_∑°e__imëhods_ödex
,

6169 
	gB⁄obo_Clùbﬂrd_lök__imëhods_ödex
,

6170 
	gB⁄obo_Clùbﬂrd_unIm∂emíãd1__imëhods_ödex
,

6171 
	gB⁄obo_Clùbﬂrd_unIm∂emíãd2__imëhods_ödex
,

6172 
	gB⁄obo_Clùbﬂrd_unIm∂emíãd3__imëhods_ödex
,

6173 
	gB⁄obo_Clùbﬂrd_unIm∂emíãd4__imëhods_ödex


6174 } 
	tB⁄obo_Clùbﬂrd__imëhods_ödex
;

6177 #i‚de‡
__B⁄obo_ClùbﬂrdSt‹e__imëhods_ödex


6178 
	#__B⁄obo_ClùbﬂrdSt‹e__imëhods_ödex


	)

6180 
	gB⁄obo_ClùbﬂrdSt‹e_„tchSåóm__imëhods_ödex
,

6181 
	gB⁄obo_ClùbﬂrdSt‹e_„tchSt‹age__imëhods_ödex
,

6182 
	gB⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd1__imëhods_ödex
,

6183 
	gB⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd2__imëhods_ödex
,

6184 
	gB⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd3__imëhods_ödex
,

6185 
	gB⁄obo_ClùbﬂrdSt‹e_unIm∂emíãd4__imëhods_ödex


6186 } 
	tB⁄obo_ClùbﬂrdSt‹e__imëhods_ödex
;

6189 #i‚de‡
__B⁄obo_Aµliˇti⁄__imëhods_ödex


6190 
	#__B⁄obo_Aµliˇti⁄__imëhods_ödex


	)

6192 
	gB⁄obo_Aµliˇti⁄_mesßge__imëhods_ödex
,

6193 
	gB⁄obo_Aµliˇti⁄_√wIn°™˚__imëhods_ödex
,

6194 
	gB⁄obo_Aµliˇti⁄_li°Mesßges__imëhods_ödex
,

6195 
	gB⁄obo_Aµliˇti⁄_gëName__imëhods_ödex
,

6196 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd1__imëhods_ödex
,

6197 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd2__imëhods_ödex
,

6198 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd3__imëhods_ödex
,

6199 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd4__imëhods_ödex
,

6200 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd5__imëhods_ödex
,

6201 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd6__imëhods_ödex
,

6202 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd7__imëhods_ödex
,

6203 
	gB⁄obo_Aµliˇti⁄_unim∂emíãd8__imëhods_ödex


6204 } 
	tB⁄obo_Aµliˇti⁄__imëhods_ödex
;

6207 #i‚de‡
__ORBIT_IMETHODS_INDEX


6208 
	#__ORBIT_IMETHODS_INDEX


	)

6209 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

6212 #ifde‡
__˝lu•lus


6216 #i‚de‡
EXCLUDE_ORBIT_H


6217 
	~<‹bô/‹bô.h
>

6221 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/libbonobo-2.0/bonobo/bonobo-i18n.h

31 #i‚de‡
__BONOBO_I18N_H__


32 
	#__BONOBO_I18N_H__
 1

	)

34 #i‚de‡
BONOBO_DISABLE_DEPRECATED


36 #ifde‡
BONOBO_EXPLICIT_TRANSLATION_DOMAIN


37 
	~<glib/gi18n-lib.h
>

39 
	~<glib/gi18n.h
>

	@/usr/include/libbonobo-2.0/bonobo/bonobo-object.h

11 #i‚de‡
_BONOBO_OBJECT_H_


12 
	#_BONOBO_OBJECT_H_


	)

14 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄.h
>

16 
	~<glib-obje˘.h
>

17 
	~<b⁄obo/B⁄obo.h
>

18 
	~<b⁄obo/b⁄obo-ma¸os.h
>

20 
	gG_BEGIN_DECLS


22 #unde‡
BONOBO_OBJECT_DEBUG


24 
	#BONOBO_TYPE_OBJECT
 (
	`b⁄obo_obje˘_gë_ty≥
 ())

	)

25 
	#BONOBO_OBJECT_TYPE
 
BONOBO_TYPE_OBJECT


	)

26 
	#BONOBO_OBJECT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
BONOBO_TYPE_OBJECT
, 
B⁄oboObje˘
))

	)

27 
	#BONOBO_OBJECT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
BONOBO_TYPE_OBJECT
, 
B⁄oboObje˘Cœss
))

	)

28 
	#BONOBO_IS_OBJECT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
BONOBO_TYPE_OBJECT
))

	)

29 
	#BONOBO_IS_OBJECT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
BONOBO_TYPE_OBJECT
))

	)

30 
	#BONOBO_OBJECT_GET_CLASS
(
o
)(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
BONOBO_TYPE_OBJECT
, 
B⁄oboObje˘Cœss
))

	)

32 
	#BONOBO_OBJREF
(
o
Ë(
	`b⁄obo_obje˘_c‹ba_objªf
(
	`BONOBO_OBJECT
(o)))

	)

34 (*
	tB⁄oboObje˘POAFn
Ë(
	tP‹èbÀSîvî_Sîv™t
 
	t£rv™t
,

35 
	tCORBA_Envú⁄mít
 *
	tev
);

37 
_B⁄oboObje˘Priv©e
 
	tB⁄oboObje˘Priv©e
;

38 
_B⁄oboObje˘Bag
 
	tB⁄oboObje˘Bag
;

39 
_B⁄oboObje˘
 
	tB⁄oboObje˘
;

42 
GObje˘
 
ba£
;

43 
B⁄oboObje˘Priv©e
 *
¥iv
;

44 
guöt
 
obje˘_sig«tuª
;

45 } 
	tB⁄oboObje˘Hódî
;

47 
	#BONOBO_OBJECT_HEADER_SIZE
 ( (
B⁄oboObje˘Hódî
))

	)

48 
	#BONOBO_OBJECT_SIGNATURE
 0x´f2

	)

49 
	#BONOBO_SERVANT_SIGNATURE
 0x2Áe

	)

51 
	s_B⁄oboObje˘
 {

53 
GObje˘
 
ba£
;

54 
B⁄oboObje˘Priv©e
 *
¥iv
;

55 
guöt
 
obje˘_sig«tuª
;

58 
POA_B⁄obo_Unknown
 
£rv™t
;

59 
guöt
 
dummy
;

60 
B⁄obo_Unknown
 
c‹ba_objªf
;

61 
guöt
 
£rv™t_sig«tuª
;

65 
GObje˘Cœss
 
∑ª¡_˛ass
;

68 (*
de°roy
Ë(
B⁄oboObje˘
 *
obje˘
);

69 (*
sy°em_ex˚±i⁄
Ë(
B⁄oboObje˘
 *
obje˘
,

70 
CORBA_Obje˘
 
cobje˘
,

71 
CORBA_Envú⁄mít
 *
ev
);

73 
B⁄oboObje˘POAFn
 
pﬂ_öô_‚
;

74 
B⁄oboObje˘POAFn
 
pﬂ_föi_‚
;

76 
POA_B⁄obo_Unknown__vïv
 *
vïv
;

79 
ïv_°ru˘_off£t
;

81 
P‹èbÀSîvî_Sîv™tBa£__ïv
 
ba£_ïv
;

82 
POA_B⁄obo_Unknown__ïv
 
ïv
;

84 
gpoöãr
 
dummy
[4];

85 } 
	tB⁄oboObje˘Cœss
;

87 
GTy≥
 
	$b⁄obo_obje˘_gë_ty≥
 (Ë
G_GNUC_CONST
;

88 
	`b⁄obo_obje˘_add_öãrÁ˚
 (
B⁄oboObje˘
 *
obje˘
,

89 
B⁄oboObje˘
 *
√wobj
);

90 
B⁄oboObje˘
 *
	`b⁄obo_obje˘_quîy_loˇl_öãrÁ˚
 (B⁄oboObje˘ *
obje˘
,

91 c⁄° *
ªpo_id
);

92 
B⁄obo_Unknown
 
	`b⁄obo_obje˘_quîy_ªmŸe
 (B⁄obo_Unknow¿
unknown
,

93 c⁄° *
ªpo_id
,

94 
CORBA_Envú⁄mít
 *
›t_ev
);

95 
B⁄obo_Unknown
 
	`b⁄obo_obje˘_quîy_öãrÁ˚
 (
B⁄oboObje˘
 *
obje˘
,

96 c⁄° *
ªpo_id
,

97 
CORBA_Envú⁄mít
 *
›t_ev
);

98 
B⁄obo_Unknown
 
	`b⁄obo_obje˘_c‹ba_objªf
 (
B⁄oboObje˘
 *
obje˘
);

99 
	`b⁄obo_obje˘_£t_pﬂ
 (
B⁄oboObje˘
 *
obje˘
,

100 
P‹èbÀSîvî_POA
 
pﬂ
);

105 
B⁄obo_Unknown
 
	`b⁄obo_obje˘_dup_ªf
 (B⁄obo_Unknow¿
obje˘
,

106 
CORBA_Envú⁄mít
 *
›t_ev
);

107 
B⁄obo_Unknown
 
	`b⁄obo_obje˘_ªÀa£_uƒef
 (B⁄obo_Unknow¿
obje˘
,

108 
CORBA_Envú⁄mít
 *
›t_ev
);

109 
gpoöãr
 
	`b⁄obo_obje˘_ªf
 (gpoöã∏
obj
);

110 
	`b⁄obo_obje˘_idÀ_uƒef
 (
gpoöãr
 
obj
);

111 
gpoöãr
 
	`b⁄obo_obje˘_uƒef
 (gpoöã∏
obj
);

112 
	`b⁄obo_obje˘_£t_imm‹èl
 (
B⁄oboObje˘
 *
obje˘
,

113 
gboﬁón
 
imm‹èl
);

114 
gpoöãr
 
	`b⁄obo_obje˘_åa˚_ªfs
 (gpoöã∏
obj
,

115 c⁄° *
‚
,

116 
löe
,

117 
gboﬁón
 
ªf
);

119 #ifde‡
BONOBO_OBJECT_DEBUG


120 
	#b⁄obo_obje˘_ªf
(
o
Ë
	`b⁄obo_obje˘_åa˚_ªfs
 ((o),
G_STRFUNC
,
__LINE__
,
TRUE
);

	)

121 
	#b⁄obo_obje˘_uƒef
(
o
Ë
	`b⁄obo_obje˘_åa˚_ªfs
 ((o),
G_STRFUNC
,
__LINE__
,
FALSE
);

	)

123 
	`b⁄obo_obje˘_dump_öãrÁ˚s
 (
B⁄oboObje˘
 *
obje˘
);

128 
	`b⁄obo_obje˘_check_ív
 (
B⁄oboObje˘
 *
obje˘
,

129 
CORBA_Obje˘
 
c‹ba_obje˘
,

130 
CORBA_Envú⁄mít
 *
ev
);

132 
	#BONOBO_OBJECT_CHECK
(
o
,
c
,
e
) \

133 
G_STMT_START
 { \

134 i‡((
e
)->
_maj‹
 !
CORBA_NO_EXCEPTION
) \

135 
	`b⁄obo_obje˘_check_ív
(
o
,
c
,
e
); \

136 
	}
} 
G_STMT_END


	)

142 
gboﬁón
 
b⁄obo_unknown_pög
 (
B⁄obo_Unknown
 
obje˘
,

143 
CORBA_Envú⁄mít
 *
›t_ev
);

144 
b⁄obo_obje˘_li°_uƒef_Æl
 (
GLi°
 **
li°
);

145 
b⁄obo_obje˘_¶i°_uƒef_Æl
 (
GSLi°
 **
li°
);

151 
	#BONOBO_COPY_FUNC
(
‚
Ë((
B⁄oboC›yFunc
)(‚))

	)

153 
	$gpoöãr
 (*
	tB⁄oboC›yFunc
Ë(
	tgc⁄°poöãr
 
	tkey
);

155 
B⁄oboObje˘Bag
 *
	`b⁄obo_obje˘_bag_√w
 (
GHashFunc
 
hash_func
,

156 
GEquÆFunc
 
key_equÆ_func
,

157 
B⁄oboC›yFunc
 
key_c›y_func
,

158 
GDe°royNŸify
 
key_de°roy_func
);

159 
B⁄oboObje˘
 *
	`b⁄obo_obje˘_bag_gë_ªf
 (
B⁄oboObje˘Bag
 *
bag
,

160 
gc⁄°poöãr
 
key
);

161 
gboﬁón
 
	`b⁄obo_obje˘_bag_add_ªf
 (
B⁄oboObje˘Bag
 *
bag
,

162 
gc⁄°poöãr
 
key
,

163 
B⁄oboObje˘
 *
obje˘
);

164 
	`b⁄obo_obje˘_bag_ªmove
 (
B⁄oboObje˘Bag
 *
bag
,

165 
gc⁄°poöãr
 
key
);

166 
	`b⁄obo_obje˘_bag_de°roy
 (
B⁄oboObje˘Bag
 *
bag
);

167 
GPåAºay
 *
	`b⁄obo_obje˘_bag_li°_ªf
 (
B⁄oboObje˘Bag
 *
bag
);

171 
B⁄oboObje˘
 *
	`b⁄obo_obje˘
 (
gpoöãr
 
p
);

173 
	#b⁄obo_obje˘_Á°
(
o
) \

174 ((((
B⁄oboObje˘Hódî
 *)(
o
))->
obje˘_sig«tuª
 =
BONOBO_OBJECT_SIGNATURE
) ? \

175 (
B⁄oboObje˘
 *)(
o
Ë: (B⁄oboObje˘ *)(((
guch¨
 *Ë(o)Ë- 
BONOBO_OBJECT_HEADER_SIZE
))

	)

178 
	#b⁄obo_obje˘_‰om_£rv™t
(
s
Ë((
B⁄oboObje˘
 *)(((
guch¨
 *Ë(s)Ë- 
BONOBO_OBJECT_HEADER_SIZE
))

	)

179 
	#b⁄obo_obje˘_gë_£rv™t
(
o
Ë((
P‹èbÀSîvî_Sîv™t
)((
guch¨
 *)(oË+ 
BONOBO_OBJECT_HEADER_SIZE
))

	)

182 
P‹èbÀSîvî_POA
 
	`b⁄obo_obje˘_gë_pﬂ
 (
B⁄oboObje˘
 *
obje˘
);

185 
GTy≥
 
	`b⁄obo_ty≥_unique
 (GTy≥ 
∑ª¡_ty≥
,

186 
B⁄oboObje˘POAFn
 
öô_‚
,

187 
B⁄oboObje˘POAFn
 
föi_‚
,

188 
ïv_°ru˘_off£t
,

189 c⁄° 
GTy≥Info
 *
öfo
,

190 c⁄° 
gch¨
 *
ty≥_«me
);

192 
gboﬁón
 
	`b⁄obo_ty≥_£tup
 (
GTy≥
 
ty≥
,

193 
B⁄oboObje˘POAFn
 
öô_‚
,

194 
B⁄oboObje˘POAFn
 
föi_‚
,

195 
ïv_°ru˘_off£t
);

197 
	#BONOBO_TYPE_FUNC_FULL
(
˛ass_«me
, 
c‹ba_«me
, 
∑ª¡
, 
¥efix
) \

198 
GTy≥
 \

199 
¥efix
##
	`_gë_ty≥
 () \

201 
GTy≥
 
±y≥
; \

202 
GTy≥
 
ty≥
 = 0; \

204 i‡(
ty≥
 == 0) { \

205 
GTy≥Info
 
öfo
 = { \

206  (
˛ass_«me
##
Cœss
), \

207 (
GBa£InôFunc
Ë
NULL
, \

208 (
GBa£FöÆizeFunc
Ë
NULL
, \

209 (
GCœssInôFunc
Ë
¥efix
##
_˛ass_öô
, \

210 
NULL
, NULL, \

211  (
˛ass_«me
), \

213 (
GIn°™˚InôFunc
Ë
¥efix
##
_öô
 \

215 
±y≥
 = (
∑ª¡
); \

216 
ty≥
 = 
	`b⁄obo_ty≥_unique
 (
±y≥
, \

217 
POA_
##
c‹ba_«me
##
__öô
, POA_##c‹ba_«me##
__föi
, \

218 
	`G_STRUCT_OFFSET
 (
˛ass_«me
##
Cœss
, 
ïv
), \

219 &
öfo
, #class_name); \

221  
ty≥
; \

222 
	}

	)
}

224 
	#BONOBO_TYPE_FUNC
(
˛ass_«me
, 
∑ª¡
, 
¥efix
) \

225 
GTy≥
 \

226 
¥efix
##
	`_gë_ty≥
 () \

228 
GTy≥
 
±y≥
; \

229 
GTy≥
 
ty≥
 = 0; \

231 i‡(
ty≥
 == 0) { \

232 
GTy≥Info
 
öfo
 = { \

233  (
˛ass_«me
##
Cœss
), \

234 (
GBa£InôFunc
Ë
NULL
, \

235 (
GBa£FöÆizeFunc
Ë
NULL
, \

236 (
GCœssInôFunc
Ë
¥efix
##
_˛ass_öô
, \

237 
NULL
, NULL, \

238  (
˛ass_«me
), \

240 (
GIn°™˚InôFunc
Ë
¥efix
##
_öô
 \

242 
±y≥
 = (
∑ª¡
); \

243 
ty≥
 = 
	`b⁄obo_ty≥_unique
 (
±y≥
, 
NULL
, NULL, 0, \

244 &
öfo
, #class_name); \

246  
ty≥
; \

247 }

	)

249 
	gG_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-plug.h

26 #i‚de‡
__BONOBO_PLUG_H__


27 
	#__BONOBO_PLUG_H__


	)

29 
	~<glib.h
>

30 
	~<gdk/gdk.h
>

31 
	~<gtk/gtk.h
>

33 
_B⁄oboPlug
 
	tB⁄oboPlug
;

35 
	~<b⁄obo/b⁄obo-c⁄åﬁ.h
>

37 
	gG_BEGIN_DECLS


39 
	#BONOBO_TYPE_PLUG
 (
	`b⁄obo_∂ug_gë_ty≥
 ())

	)

40 
	#BONOBO_PLUG
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 (obj, 
	`b⁄obo_∂ug_gë_ty≥
 (), 
B⁄oboPlug
)

	)

41 
	#BONOBO_PLUG_CLASS
(
kœss
Ë
	`G_TYPE_CHECK_CLASS_CAST
 (kœss, 
	`b⁄obo_∂ug_gë_ty≥
 (), 
B⁄oboPlugCœss
)

	)

42 
	#BONOBO_IS_PLUG
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 (obj, 
	`b⁄obo_∂ug_gë_ty≥
 ())

	)

44 
_B⁄oboPlugPriv©e
 
	tB⁄oboPlugPriv©e
;

46 
	s_B⁄oboPlug
 {

47 
GtkPlug
 
	m∂ug
;

49 
B⁄oboC⁄åﬁ
 *
	mc⁄åﬁ
;

50 
B⁄oboPlugPriv©e
 *
	m¥iv
;

54 
GtkPlugCœss
 
	m∑ª¡_˛ass
;

56 
gpoöãr
 
	mdummy
[4];

57 } 
	tB⁄oboPlugCœss
;

59 
GTy≥
 
	$b⁄obo_∂ug_gë_ty≥
 (Ë
G_GNUC_CONST
;

60 
	`b⁄obo_∂ug_c⁄°ru˘
 (
B⁄oboPlug
 *
∂ug
,

61 
guöt32
 
sockë_id
);

62 
	`b⁄obo_∂ug_c⁄°ru˘_fuŒ
 (
B⁄oboPlug
 *
∂ug
,

63 
GdkDi•œy
 *
di•œy
,

64 
guöt32
 
sockë_id
);

65 
GtkWidgë
 *
	`b⁄obo_∂ug_√w
 (
guöt32
 
sockë_id
);

66 
GtkWidgë
 *
	`b⁄obo_∂ug_√w_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

67 
guöt32
 
sockë_id
);

69 
G_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-container.h

10 #i‚de‡
_BONOBO_UI_CONTAINER_H_


11 
	#_BONOBO_UI_CONTAINER_H_


	)

13 
	~<glib.h
>

15 
G_BEGIN_DECLS


17 
_B⁄oboUIC⁄èöî
 
	tB⁄oboUIC⁄èöî
;

19 
	~<b⁄obo/b⁄obo-ui-ígöe.h
>

21 
	#BONOBO_TYPE_UI_CONTAINER
 (
	`b⁄obo_ui_c⁄èöî_gë_ty≥
 ())

	)

22 
	#BONOBO_UI_CONTAINER
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
BONOBO_TYPE_UI_CONTAINER
, 
B⁄oboUIC⁄èöî
))

	)

23 
	#BONOBO_UI_CONTAINER_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((k), 
BONOBO_TYPE_UI_CONTAINER
, 
B⁄oboUIC⁄èöîCœss
))

	)

24 
	#BONOBO_IS_UI_CONTAINER
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
BONOBO_TYPE_UI_CONTAINER
))

	)

25 
	#BONOBO_IS_UI_CONTAINER_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
BONOBO_TYPE_UI_CONTAINER
))

	)

27 
_B⁄oboUIC⁄èöîPriv©e
 
	tB⁄oboUIC⁄èöîPriv©e
;

29 
	s_B⁄oboUIC⁄èöî
 {

30 
B⁄oboObje˘
 
	mba£
;

32 
B⁄oboUIC⁄èöîPriv©e
 *
	m¥iv
;

36 
B⁄oboObje˘Cœss
 
	m∑ª¡
;

38 
POA_B⁄obo_UIC⁄èöî__ïv
 
	mïv
;

40 
gpoöãr
 
	mdummy
[2];

41 } 
	tB⁄oboUIC⁄èöîCœss
;

43 
GTy≥
 
	$b⁄obo_ui_c⁄èöî_gë_ty≥
 (Ë
G_GNUC_CONST
;

44 
B⁄oboUIC⁄èöî
 *
	`b⁄obo_ui_c⁄èöî_√w
 ();

46 
	`b⁄obo_ui_c⁄èöî_£t_ígöe
 (
B⁄oboUIC⁄èöî
 *
c⁄èöî
,

47 
B⁄oboUIEngöe
 *
ígöe
);

48 
B⁄oboUIEngöe
 *
	`b⁄obo_ui_c⁄èöî_gë_ígöe
 (
B⁄oboUIC⁄èöî
 *
c⁄èöî
);

50 
G_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-node.h

10 #i‚de‡
_BONOBO_UI_NODE_H_


11 
	#_BONOBO_UI_NODE_H_


	)

13 
	~<glib.h
>

15 
G_BEGIN_DECLS


17 
_B⁄oboUINode
 
	tB⁄oboUINode
;

19 
B⁄oboUINode
 *
b⁄obo_ui_node_√w
 (c⁄° *
«me
);

20 
B⁄oboUINode
 *
b⁄obo_ui_node_√w_chûd
 (B⁄oboUINodê*
∑ª¡
,

21 c⁄° *
«me
);

22 
B⁄oboUINode
 *
b⁄obo_ui_node_c›y
 (B⁄oboUINodê*
node
,

23 
gboﬁón
 
ªcursive
);

24 
b⁄obo_ui_node_‰ì
 (
B⁄oboUINode
 *
node
);

25 
b⁄obo_ui_node_£t_d©a
 (
B⁄oboUINode
 *
node
,

26 
gpoöãr
 
d©a
);

27 
gpoöãr
 
b⁄obo_ui_node_gë_d©a
 (
B⁄oboUINode
 *
node
);

28 
b⁄obo_ui_node_£t_©å
 (
B⁄oboUINode
 *
node
,

29 c⁄° *
«me
,

30 c⁄° *
vÆue
);

31 * 
b⁄obo_ui_node_gë_©å
 (
B⁄oboUINode
 *
node
,

32 c⁄° *
«me
);

33 
gboﬁón
 
b⁄obo_ui_node_has_©å
 (
B⁄oboUINode
 *
node
,

34 c⁄° *
«me
);

35 
b⁄obo_ui_node_ªmove_©å
 (
B⁄oboUINode
 *
node
,

36 c⁄° *
«me
);

37 
b⁄obo_ui_node_add_chûd
 (
B⁄oboUINode
 *
∑ª¡
,

38 
B⁄oboUINode
 *
chûd
);

39 
b⁄obo_ui_node_ö£π_bef‹e
 (
B⁄oboUINode
 *
a·î
,

40 
B⁄oboUINode
 *
√w_bef‹e
);

41 
b⁄obo_ui_node_u∆ök
 (
B⁄oboUINode
 *
node
);

42 
b⁄obo_ui_node_ª∂a˚
 (
B⁄oboUINode
 *
ﬁd_node
,

43 
B⁄oboUINode
 *
√w_node
);

44 
b⁄obo_ui_node_£t_c⁄ã¡
 (
B⁄oboUINode
 *
node
,

45 c⁄° *
c⁄ã¡
);

46 *
b⁄obo_ui_node_gë_c⁄ã¡
 (
B⁄oboUINode
 *
node
);

47 
B⁄oboUINode
 *
b⁄obo_ui_node_√xt
 (B⁄oboUINodê*
node
);

48 
B⁄oboUINode
 *
b⁄obo_ui_node_¥ev
 (B⁄oboUINodê*
node
);

49 
B⁄oboUINode
 *
b⁄obo_ui_node_chûdªn
 (B⁄oboUINodê*
node
);

50 
B⁄oboUINode
 *
b⁄obo_ui_node_∑ª¡
 (B⁄oboUINodê*
node
);

51 c⁄° *
b⁄obo_ui_node_gë_«me
 (
B⁄oboUINode
 *
node
);

52 
gboﬁón
 
b⁄obo_ui_node_has_«me
 (
B⁄oboUINode
 *
node
,

53 c⁄° *
«me
);

54 
gboﬁón
 
b⁄obo_ui_node_å™•¨ít
 (
B⁄oboUINode
 *
node
);

55 
b⁄obo_ui_node_c›y_©ås
 (c⁄° 
B⁄oboUINode
 *
§c
,

56 
B⁄oboUINode
 *
de°
);

58 
b⁄obo_ui_node_‰ì_°rög
 (*
°r
);

59 
b⁄obo_ui_node_°rù
 (
B⁄oboUINode
 **
node
);

61 * 
b⁄obo_ui_node_to_°rög
 (
B⁄oboUINode
 *
node
,

62 
gboﬁón
 
ªcur£
);

63 
B⁄oboUINode
* 
b⁄obo_ui_node_‰om_°rög
 (c⁄° *
°r
);

64 
B⁄oboUINode
* 
b⁄obo_ui_node_‰om_fûe
 (c⁄° *
fûíame
);

66 
	gG_END_DECLS


	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_GNU


146 
	~<xloˇÀ.h
>

148 
__loˇÀ_t
 
	tloˇÀ_t
;

154 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

155 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

161 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

162 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

163 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

164 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

165 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

166 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

167 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

168 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

169 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

170 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

171 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

172 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

173 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

174 | 
LC_NUMERIC_MASK
 \

175 | 
LC_TIME_MASK
 \

176 | 
LC_COLLATE_MASK
 \

177 | 
LC_MONETARY_MASK
 \

178 | 
LC_MESSAGES_MASK
 \

179 | 
LC_PAPER_MASK
 \

180 | 
LC_NAME_MASK
 \

181 | 
LC_ADDRESS_MASK
 \

182 | 
LC_TELEPHONE_MASK
 \

183 | 
LC_MEASUREMENT_MASK
 \

184 | 
LC_IDENTIFICATION_MASK
 \

185 )

	)

189 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

193 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

200 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

204 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

208 
__END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/orbit-interface.h

5 #i‚de‡
‹bô_öãrÁ˚_H


6 
	#‹bô_öãrÁ˚_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
_ORBô_IArgFœg_deföed
)

18 
	#_ORBô_IArgFœg_deföed
 1

	)

19 
CORBA_l⁄g
 
	tORBô_IArgFœg
;

20 
	#ORBô_IArgFœg_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

21 
	#ORBô_IArgFœg_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

22 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IArgFœg_0
)

23 
	#TC_IMPL_TC_ORBô_IArgFœg_0
 'o'

	)

24 
	#TC_IMPL_TC_ORBô_IArgFœg_1
 'r'

	)

25 
	#TC_IMPL_TC_ORBô_IArgFœg_2
 'b'

	)

26 
	#TC_IMPL_TC_ORBô_IArgFœg_3
 'i'

	)

27 
	#TC_IMPL_TC_ORBô_IArgFœg_4
 't'

	)

28 
	#TC_IMPL_TC_ORBô_IArgFœg_5
 '_'

	)

29 
	#TC_IMPL_TC_ORBô_IArgFœg_6
 'i'

	)

30 
	#TC_IMPL_TC_ORBô_IArgFœg_7
 'n'

	)

31 
	#TC_IMPL_TC_ORBô_IArgFœg_8
 't'

	)

32 
	#TC_IMPL_TC_ORBô_IArgFœg_9
 'e'

	)

33 
	#TC_IMPL_TC_ORBô_IArgFœg_10
 'r'

	)

34 
	#TC_IMPL_TC_ORBô_IArgFœg_11
 'f'

	)

35 
	#TC_IMPL_TC_ORBô_IArgFœg_12
 'a'

	)

36 
	#TC_IMPL_TC_ORBô_IArgFœg_13
 'c'

	)

37 
	#TC_IMPL_TC_ORBô_IArgFœg_14
 'e'

	)

38 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


43 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IArgFœg_°ru˘
;

44 
	#TC_ORBô_IArgFœg
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IArgFœg_°ru˘
)

	)

46 
	#ORBô_IArgFœg__Æloc
(Ë((
ORBô_IArgFœg
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

47 
	#ORBô_IArgFœg__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

49 #i‚de‡
ORBô_I_COMMON_FIXED_SIZE


50 
	#ORBô_I_COMMON_FIXED_SIZE
 1

	)

53 #i‚de‡
ORBô_I_ARG_IN


54 
	#ORBô_I_ARG_IN
 32

	)

57 #i‚de‡
ORBô_I_ARG_OUT


58 
	#ORBô_I_ARG_OUT
 64

	)

61 #i‚de‡
ORBô_I_ARG_INOUT


62 
	#ORBô_I_ARG_INOUT
 128

	)

65 #i‡!
deföed
(
_ORBô_IArg_deföed
)

66 
	#_ORBô_IArg_deföed
 1

	)

67 
ORBô_IArg_ty≥
 
	tORBô_IArg
;

68 
	sORBô_IArg_ty≥
 {

69 
CORBA_Ty≥Code
 
	gtc
;

70 
ORBô_IArgFœg
 
	gÊags
;

71 
CORBA_°rög
 
	g«me
;

74 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IArg_0
)

75 
	#TC_IMPL_TC_ORBô_IArg_0
 'o'

	)

76 
	#TC_IMPL_TC_ORBô_IArg_1
 'r'

	)

77 
	#TC_IMPL_TC_ORBô_IArg_2
 'b'

	)

78 
	#TC_IMPL_TC_ORBô_IArg_3
 'i'

	)

79 
	#TC_IMPL_TC_ORBô_IArg_4
 't'

	)

80 
	#TC_IMPL_TC_ORBô_IArg_5
 '_'

	)

81 
	#TC_IMPL_TC_ORBô_IArg_6
 'i'

	)

82 
	#TC_IMPL_TC_ORBô_IArg_7
 'n'

	)

83 
	#TC_IMPL_TC_ORBô_IArg_8
 't'

	)

84 
	#TC_IMPL_TC_ORBô_IArg_9
 'e'

	)

85 
	#TC_IMPL_TC_ORBô_IArg_10
 'r'

	)

86 
	#TC_IMPL_TC_ORBô_IArg_11
 'f'

	)

87 
	#TC_IMPL_TC_ORBô_IArg_12
 'a'

	)

88 
	#TC_IMPL_TC_ORBô_IArg_13
 'c'

	)

89 
	#TC_IMPL_TC_ORBô_IArg_14
 'e'

	)

90 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


95 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IArg_°ru˘
;

96 
	#TC_ORBô_IArg
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IArg_°ru˘
)

	)

98 
	#ORBô_IArg__Æloc
(Ë((
ORBô_IArg
 *)
	`ORBô_smÆl_Æloc
 (
TC_ORBô_IArg
))

	)

99 
	#ORBô_IArg__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_ORBô_IArg
,(m),(d))

	)

101 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_ORBô_IArg
)

102 
	#ORBIT_DECL_CORBA_£quí˚_ORBô_IArg
 1

	)

103 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_0
 'o'

	)

104 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_1
 'r'

	)

105 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_2
 'b'

	)

106 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_3
 'i'

	)

107 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_4
 't'

	)

108 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_5
 '_'

	)

109 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_6
 'i'

	)

110 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_7
 'n'

	)

111 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_8
 't'

	)

112 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_9
 'e'

	)

113 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_10
 'r'

	)

114 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_11
 'f'

	)

115 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_12
 'a'

	)

116 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_13
 'c'

	)

117 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IArg_14
 'e'

	)

118 #i‡!
deföed
(
_CORBA_£quí˚_ORBô_IArg_deföed
)

119 
	#_CORBA_£quí˚_ORBô_IArg_deföed
 1

	)

120 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
ORBô_IArg
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_ORBô_IArg
;

122 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_0
)

123 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_0
 'o'

	)

124 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_1
 'r'

	)

125 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_2
 'b'

	)

126 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_3
 'i'

	)

127 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_4
 't'

	)

128 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_5
 '_'

	)

129 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_6
 'i'

	)

130 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_7
 'n'

	)

131 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_8
 't'

	)

132 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_9
 'e'

	)

133 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_10
 'r'

	)

134 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_11
 'f'

	)

135 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_12
 'a'

	)

136 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_13
 'c'

	)

137 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IArg_14
 'e'

	)

138 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


143 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_ORBô_IArg_°ru˘
;

144 
	#TC_CORBA_£quí˚_ORBô_IArg
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_ORBô_IArg_°ru˘
)

	)

146 
	#CORBA_£quí˚_ORBô_IArg__Æloc
(Ë((
CORBA_£quí˚_ORBô_IArg
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_ORBô_IArg
))

	)

147 
	#CORBA_£quí˚_ORBô_IArg__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_ORBô_IArg
,(m),(d))

	)

148 
	#CORBA_£quí˚_ORBô_IArg_Ælocbuf
(
l
Ë((
ORBô_IArg
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_IArg
, (l)))

	)

149 
	#CORBA_£quí˚_ORBô_IArg_Ælocbuf
(
l
Ë((
ORBô_IArg
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_IArg
, (l)))

	)

151 #i‡!
deföed
(
_ORBô_IArgs_deföed
)

152 
	#_ORBô_IArgs_deföed
 1

	)

153 
CORBA_£quí˚_ORBô_IArg
 
	tORBô_IArgs
;

154 
	#ORBô_IArgs_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_ORBô_IArg_m¨shÆ
((x),(y),(z))

	)

155 
	#ORBô_IArgs_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_ORBô_IArg_dem¨shÆ
((x),(y),(z),(i))

	)

156 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IArgs_0
)

157 
	#TC_IMPL_TC_ORBô_IArgs_0
 'o'

	)

158 
	#TC_IMPL_TC_ORBô_IArgs_1
 'r'

	)

159 
	#TC_IMPL_TC_ORBô_IArgs_2
 'b'

	)

160 
	#TC_IMPL_TC_ORBô_IArgs_3
 'i'

	)

161 
	#TC_IMPL_TC_ORBô_IArgs_4
 't'

	)

162 
	#TC_IMPL_TC_ORBô_IArgs_5
 '_'

	)

163 
	#TC_IMPL_TC_ORBô_IArgs_6
 'i'

	)

164 
	#TC_IMPL_TC_ORBô_IArgs_7
 'n'

	)

165 
	#TC_IMPL_TC_ORBô_IArgs_8
 't'

	)

166 
	#TC_IMPL_TC_ORBô_IArgs_9
 'e'

	)

167 
	#TC_IMPL_TC_ORBô_IArgs_10
 'r'

	)

168 
	#TC_IMPL_TC_ORBô_IArgs_11
 'f'

	)

169 
	#TC_IMPL_TC_ORBô_IArgs_12
 'a'

	)

170 
	#TC_IMPL_TC_ORBô_IArgs_13
 'c'

	)

171 
	#TC_IMPL_TC_ORBô_IArgs_14
 'e'

	)

172 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


177 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IArgs_°ru˘
;

178 
	#TC_ORBô_IArgs
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IArgs_°ru˘
)

	)

180 
	#ORBô_IArgs__Æloc
(Ë((
ORBô_IArgs
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_ORBô_IArg
))

	)

181 
	#ORBô_IArgs__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_ORBô_IArg
,(m),(d))

	)

182 
	#ORBô_IArgs_Ælocbuf
(
l
Ë((
ORBô_IArg
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_IArg
, (l)))

	)

184 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Ty≥Code
)

185 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Ty≥Code
 1

	)

186 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_0
 'o'

	)

187 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_1
 'r'

	)

188 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_2
 'b'

	)

189 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_3
 'i'

	)

190 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_4
 't'

	)

191 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_5
 '_'

	)

192 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_6
 'i'

	)

193 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_7
 'n'

	)

194 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_8
 't'

	)

195 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_9
 'e'

	)

196 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_10
 'r'

	)

197 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_11
 'f'

	)

198 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_12
 'a'

	)

199 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_13
 'c'

	)

200 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ty≥Code_14
 'e'

	)

201 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Ty≥Code_deföed
)

202 
	#_CORBA_£quí˚_CORBA_Ty≥Code_deföed
 1

	)

203 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Ty≥Code
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Ty≥Code
;

205 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_0
)

206 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_0
 'o'

	)

207 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_1
 'r'

	)

208 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_2
 'b'

	)

209 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_3
 'i'

	)

210 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_4
 't'

	)

211 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_5
 '_'

	)

212 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_6
 'i'

	)

213 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_7
 'n'

	)

214 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_8
 't'

	)

215 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_9
 'e'

	)

216 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_10
 'r'

	)

217 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_11
 'f'

	)

218 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_12
 'a'

	)

219 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_13
 'c'

	)

220 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ty≥Code_14
 'e'

	)

221 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


226 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Ty≥Code_°ru˘
;

227 
	#TC_CORBA_£quí˚_CORBA_Ty≥Code
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Ty≥Code_°ru˘
)

	)

229 
	#CORBA_£quí˚_CORBA_Ty≥Code__Æloc
(Ë((
CORBA_£quí˚_CORBA_Ty≥Code
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
))

	)

230 
	#CORBA_£quí˚_CORBA_Ty≥Code__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
,(m),(d))

	)

231 
	#CORBA_£quí˚_CORBA_Ty≥Code_Ælocbuf
(
l
Ë((
CORBA_Ty≥Code
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
, (l)))

	)

232 
	#CORBA_£quí˚_CORBA_Ty≥Code_Ælocbuf
(
l
Ë((
CORBA_Ty≥Code
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
, (l)))

	)

234 #i‡!
deföed
(
_ORBô_ITy≥s_deföed
)

235 
	#_ORBô_ITy≥s_deföed
 1

	)

236 
CORBA_£quí˚_CORBA_Ty≥Code
 
	tORBô_ITy≥s
;

237 
	#ORBô_ITy≥s_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Ty≥Code_m¨shÆ
((x),(y),(z))

	)

238 
	#ORBô_ITy≥s_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Ty≥Code_dem¨shÆ
((x),(y),(z),(i))

	)

239 #i‡!
deföed
(
TC_IMPL_TC_ORBô_ITy≥s_0
)

240 
	#TC_IMPL_TC_ORBô_ITy≥s_0
 'o'

	)

241 
	#TC_IMPL_TC_ORBô_ITy≥s_1
 'r'

	)

242 
	#TC_IMPL_TC_ORBô_ITy≥s_2
 'b'

	)

243 
	#TC_IMPL_TC_ORBô_ITy≥s_3
 'i'

	)

244 
	#TC_IMPL_TC_ORBô_ITy≥s_4
 't'

	)

245 
	#TC_IMPL_TC_ORBô_ITy≥s_5
 '_'

	)

246 
	#TC_IMPL_TC_ORBô_ITy≥s_6
 'i'

	)

247 
	#TC_IMPL_TC_ORBô_ITy≥s_7
 'n'

	)

248 
	#TC_IMPL_TC_ORBô_ITy≥s_8
 't'

	)

249 
	#TC_IMPL_TC_ORBô_ITy≥s_9
 'e'

	)

250 
	#TC_IMPL_TC_ORBô_ITy≥s_10
 'r'

	)

251 
	#TC_IMPL_TC_ORBô_ITy≥s_11
 'f'

	)

252 
	#TC_IMPL_TC_ORBô_ITy≥s_12
 'a'

	)

253 
	#TC_IMPL_TC_ORBô_ITy≥s_13
 'c'

	)

254 
	#TC_IMPL_TC_ORBô_ITy≥s_14
 'e'

	)

255 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


260 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_ITy≥s_°ru˘
;

261 
	#TC_ORBô_ITy≥s
 ((
CORBA_Ty≥Code
)&
TC_ORBô_ITy≥s_°ru˘
)

	)

263 
	#ORBô_ITy≥s__Æloc
(Ë((
ORBô_ITy≥s
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
))

	)

264 
	#ORBô_ITy≥s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
,(m),(d))

	)

265 
	#ORBô_ITy≥s_Ælocbuf
(
l
Ë((
CORBA_Ty≥Code
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ty≥Code
, (l)))

	)

267 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

268 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

269 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'o'

	)

270 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'r'

	)

271 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'b'

	)

272 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'i'

	)

273 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 't'

	)

274 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

275 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'i'

	)

276 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'n'

	)

277 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 't'

	)

278 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 'e'

	)

279 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_10
 'r'

	)

280 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_11
 'f'

	)

281 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_12
 'a'

	)

282 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_13
 'c'

	)

283 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_14
 'e'

	)

284 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

285 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

286 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

288 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

289 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'o'

	)

290 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'r'

	)

291 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'b'

	)

292 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'i'

	)

293 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 't'

	)

294 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

295 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'i'

	)

296 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'n'

	)

297 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 't'

	)

298 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 'e'

	)

299 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_10
 'r'

	)

300 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_11
 'f'

	)

301 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_12
 'a'

	)

302 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_13
 'c'

	)

303 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_14
 'e'

	)

304 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


309 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

310 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

312 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

313 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

314 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

315 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

317 #i‡!
deföed
(
_ORBô_IC⁄ãxts_deföed
)

318 
	#_ORBô_IC⁄ãxts_deföed
 1

	)

319 
CORBA_£quí˚_CORBA_°rög
 
	tORBô_IC⁄ãxts
;

320 
	#ORBô_IC⁄ãxts_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

321 
	#ORBô_IC⁄ãxts_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

322 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IC⁄ãxts_0
)

323 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_0
 'o'

	)

324 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_1
 'r'

	)

325 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_2
 'b'

	)

326 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_3
 'i'

	)

327 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_4
 't'

	)

328 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_5
 '_'

	)

329 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_6
 'i'

	)

330 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_7
 'n'

	)

331 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_8
 't'

	)

332 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_9
 'e'

	)

333 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_10
 'r'

	)

334 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_11
 'f'

	)

335 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_12
 'a'

	)

336 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_13
 'c'

	)

337 
	#TC_IMPL_TC_ORBô_IC⁄ãxts_14
 'e'

	)

338 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


343 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IC⁄ãxts_°ru˘
;

344 
	#TC_ORBô_IC⁄ãxts
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IC⁄ãxts_°ru˘
)

	)

346 
	#ORBô_IC⁄ãxts__Æloc
(Ë((
ORBô_IC⁄ãxts
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

347 
	#ORBô_IC⁄ãxts__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

348 
	#ORBô_IC⁄ãxts_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

350 #i‡!
deföed
(
_ORBô_IMëhodFœg_deföed
)

351 
	#_ORBô_IMëhodFœg_deföed
 1

	)

352 
CORBA_l⁄g
 
	tORBô_IMëhodFœg
;

353 
	#ORBô_IMëhodFœg_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

354 
	#ORBô_IMëhodFœg_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

355 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IMëhodFœg_0
)

356 
	#TC_IMPL_TC_ORBô_IMëhodFœg_0
 'o'

	)

357 
	#TC_IMPL_TC_ORBô_IMëhodFœg_1
 'r'

	)

358 
	#TC_IMPL_TC_ORBô_IMëhodFœg_2
 'b'

	)

359 
	#TC_IMPL_TC_ORBô_IMëhodFœg_3
 'i'

	)

360 
	#TC_IMPL_TC_ORBô_IMëhodFœg_4
 't'

	)

361 
	#TC_IMPL_TC_ORBô_IMëhodFœg_5
 '_'

	)

362 
	#TC_IMPL_TC_ORBô_IMëhodFœg_6
 'i'

	)

363 
	#TC_IMPL_TC_ORBô_IMëhodFœg_7
 'n'

	)

364 
	#TC_IMPL_TC_ORBô_IMëhodFœg_8
 't'

	)

365 
	#TC_IMPL_TC_ORBô_IMëhodFœg_9
 'e'

	)

366 
	#TC_IMPL_TC_ORBô_IMëhodFœg_10
 'r'

	)

367 
	#TC_IMPL_TC_ORBô_IMëhodFœg_11
 'f'

	)

368 
	#TC_IMPL_TC_ORBô_IMëhodFœg_12
 'a'

	)

369 
	#TC_IMPL_TC_ORBô_IMëhodFœg_13
 'c'

	)

370 
	#TC_IMPL_TC_ORBô_IMëhodFœg_14
 'e'

	)

371 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


376 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IMëhodFœg_°ru˘
;

377 
	#TC_ORBô_IMëhodFœg
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IMëhodFœg_°ru˘
)

	)

379 
	#ORBô_IMëhodFœg__Æloc
(Ë((
ORBô_IMëhodFœg
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

380 
	#ORBô_IMëhodFœg__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

382 #i‚de‡
ORBô_I_METHOD_1_WAY


383 
	#ORBô_I_METHOD_1_WAY
 32

	)

386 #i‚de‡
ORBô_I_METHOD_ALL_BASE


387 
	#ORBô_I_METHOD_ALL_BASE
 64

	)

390 #i‚de‡
ORBô_I_METHOD_NO_OUT


391 
	#ORBô_I_METHOD_NO_OUT
 128

	)

394 #i‚de‡
ORBô_I_METHOD_HAS_CONTEXT


395 
	#ORBô_I_METHOD_HAS_CONTEXT
 256

	)

398 #i‡!
deföed
(
_ORBô_IMëhod_deföed
)

399 
	#_ORBô_IMëhod_deföed
 1

	)

400 
ORBô_IMëhod_ty≥
 
	tORBô_IMëhod
;

401 
	sORBô_IMëhod_ty≥
 {

402 
ORBô_IArgs
 
	g¨gumíts
;

403 
ORBô_IC⁄ãxts
 
	gc⁄ãxts
;

404 
ORBô_ITy≥s
 
	gex˚±i⁄s
;

405 
CORBA_Ty≥Code
 
	gªt
;

406 
CORBA_°rög
 
	g«me
;

407 
CORBA_l⁄g
 
	g«me_Àn
;

408 
ORBô_IMëhodFœg
 
	gÊags
;

411 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IMëhod_0
)

412 
	#TC_IMPL_TC_ORBô_IMëhod_0
 'o'

	)

413 
	#TC_IMPL_TC_ORBô_IMëhod_1
 'r'

	)

414 
	#TC_IMPL_TC_ORBô_IMëhod_2
 'b'

	)

415 
	#TC_IMPL_TC_ORBô_IMëhod_3
 'i'

	)

416 
	#TC_IMPL_TC_ORBô_IMëhod_4
 't'

	)

417 
	#TC_IMPL_TC_ORBô_IMëhod_5
 '_'

	)

418 
	#TC_IMPL_TC_ORBô_IMëhod_6
 'i'

	)

419 
	#TC_IMPL_TC_ORBô_IMëhod_7
 'n'

	)

420 
	#TC_IMPL_TC_ORBô_IMëhod_8
 't'

	)

421 
	#TC_IMPL_TC_ORBô_IMëhod_9
 'e'

	)

422 
	#TC_IMPL_TC_ORBô_IMëhod_10
 'r'

	)

423 
	#TC_IMPL_TC_ORBô_IMëhod_11
 'f'

	)

424 
	#TC_IMPL_TC_ORBô_IMëhod_12
 'a'

	)

425 
	#TC_IMPL_TC_ORBô_IMëhod_13
 'c'

	)

426 
	#TC_IMPL_TC_ORBô_IMëhod_14
 'e'

	)

427 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


432 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IMëhod_°ru˘
;

433 
	#TC_ORBô_IMëhod
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IMëhod_°ru˘
)

	)

435 
	#ORBô_IMëhod__Æloc
(Ë((
ORBô_IMëhod
 *)
	`ORBô_smÆl_Æloc
 (
TC_ORBô_IMëhod
))

	)

436 
	#ORBô_IMëhod__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_ORBô_IMëhod
,(m),(d))

	)

438 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_ORBô_IMëhod
)

439 
	#ORBIT_DECL_CORBA_£quí˚_ORBô_IMëhod
 1

	)

440 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_0
 'o'

	)

441 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_1
 'r'

	)

442 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_2
 'b'

	)

443 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_3
 'i'

	)

444 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_4
 't'

	)

445 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_5
 '_'

	)

446 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_6
 'i'

	)

447 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_7
 'n'

	)

448 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_8
 't'

	)

449 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_9
 'e'

	)

450 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_10
 'r'

	)

451 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_11
 'f'

	)

452 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_12
 'a'

	)

453 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_13
 'c'

	)

454 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_IMëhod_14
 'e'

	)

455 #i‡!
deföed
(
_CORBA_£quí˚_ORBô_IMëhod_deföed
)

456 
	#_CORBA_£quí˚_ORBô_IMëhod_deföed
 1

	)

457 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
ORBô_IMëhod
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_ORBô_IMëhod
;

459 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_0
)

460 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_0
 'o'

	)

461 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_1
 'r'

	)

462 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_2
 'b'

	)

463 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_3
 'i'

	)

464 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_4
 't'

	)

465 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_5
 '_'

	)

466 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_6
 'i'

	)

467 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_7
 'n'

	)

468 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_8
 't'

	)

469 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_9
 'e'

	)

470 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_10
 'r'

	)

471 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_11
 'f'

	)

472 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_12
 'a'

	)

473 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_13
 'c'

	)

474 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_IMëhod_14
 'e'

	)

475 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


480 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_ORBô_IMëhod_°ru˘
;

481 
	#TC_CORBA_£quí˚_ORBô_IMëhod
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_ORBô_IMëhod_°ru˘
)

	)

483 
	#CORBA_£quí˚_ORBô_IMëhod__Æloc
(Ë((
CORBA_£quí˚_ORBô_IMëhod
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_ORBô_IMëhod
))

	)

484 
	#CORBA_£quí˚_ORBô_IMëhod__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_ORBô_IMëhod
,(m),(d))

	)

485 
	#CORBA_£quí˚_ORBô_IMëhod_Ælocbuf
(
l
Ë((
ORBô_IMëhod
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_IMëhod
, (l)))

	)

486 
	#CORBA_£quí˚_ORBô_IMëhod_Ælocbuf
(
l
Ë((
ORBô_IMëhod
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_IMëhod
, (l)))

	)

488 #i‡!
deföed
(
_ORBô_IMëhods_deföed
)

489 
	#_ORBô_IMëhods_deföed
 1

	)

490 
CORBA_£quí˚_ORBô_IMëhod
 
	tORBô_IMëhods
;

491 
	#ORBô_IMëhods_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_ORBô_IMëhod_m¨shÆ
((x),(y),(z))

	)

492 
	#ORBô_IMëhods_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_ORBô_IMëhod_dem¨shÆ
((x),(y),(z),(i))

	)

493 #i‡!
deföed
(
TC_IMPL_TC_ORBô_IMëhods_0
)

494 
	#TC_IMPL_TC_ORBô_IMëhods_0
 'o'

	)

495 
	#TC_IMPL_TC_ORBô_IMëhods_1
 'r'

	)

496 
	#TC_IMPL_TC_ORBô_IMëhods_2
 'b'

	)

497 
	#TC_IMPL_TC_ORBô_IMëhods_3
 'i'

	)

498 
	#TC_IMPL_TC_ORBô_IMëhods_4
 't'

	)

499 
	#TC_IMPL_TC_ORBô_IMëhods_5
 '_'

	)

500 
	#TC_IMPL_TC_ORBô_IMëhods_6
 'i'

	)

501 
	#TC_IMPL_TC_ORBô_IMëhods_7
 'n'

	)

502 
	#TC_IMPL_TC_ORBô_IMëhods_8
 't'

	)

503 
	#TC_IMPL_TC_ORBô_IMëhods_9
 'e'

	)

504 
	#TC_IMPL_TC_ORBô_IMëhods_10
 'r'

	)

505 
	#TC_IMPL_TC_ORBô_IMëhods_11
 'f'

	)

506 
	#TC_IMPL_TC_ORBô_IMëhods_12
 'a'

	)

507 
	#TC_IMPL_TC_ORBô_IMëhods_13
 'c'

	)

508 
	#TC_IMPL_TC_ORBô_IMëhods_14
 'e'

	)

509 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


514 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_IMëhods_°ru˘
;

515 
	#TC_ORBô_IMëhods
 ((
CORBA_Ty≥Code
)&
TC_ORBô_IMëhods_°ru˘
)

	)

517 
	#ORBô_IMëhods__Æloc
(Ë((
ORBô_IMëhods
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_ORBô_IMëhod
))

	)

518 
	#ORBô_IMëhods__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_ORBô_IMëhod
,(m),(d))

	)

519 
	#ORBô_IMëhods_Ælocbuf
(
l
Ë((
ORBô_IMëhod
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_IMëhod
, (l)))

	)

521 #i‡!
deföed
(
_ORBô_II¡îÁ˚_deföed
)

522 
	#_ORBô_II¡îÁ˚_deföed
 1

	)

523 
ORBô_II¡îÁ˚_ty≥
 
	tORBô_II¡îÁ˚
;

524 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

525 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

526 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'o'

	)

527 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'r'

	)

528 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'b'

	)

529 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'i'

	)

530 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 't'

	)

531 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

532 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'i'

	)

533 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'n'

	)

534 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 't'

	)

535 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 'e'

	)

536 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_10
 'r'

	)

537 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_11
 'f'

	)

538 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_12
 'a'

	)

539 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_13
 'c'

	)

540 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_14
 'e'

	)

541 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

542 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

543 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

545 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

546 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'o'

	)

547 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'r'

	)

548 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'b'

	)

549 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'i'

	)

550 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 't'

	)

551 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

552 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'i'

	)

553 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'n'

	)

554 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 't'

	)

555 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 'e'

	)

556 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_10
 'r'

	)

557 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_11
 'f'

	)

558 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_12
 'a'

	)

559 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_13
 'c'

	)

560 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_14
 'e'

	)

561 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


566 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

567 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

569 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

570 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

571 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

572 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

574 
	sORBô_II¡îÁ˚_ty≥
 {

575 
CORBA_Ty≥Code
 
	gtc
;

576 
ORBô_IMëhods
 
	gmëhods
;

577 
CORBA_£quí˚_CORBA_°rög
 
	gba£_öãrÁ˚s
;

580 #i‡!
deföed
(
TC_IMPL_TC_ORBô_II¡îÁ˚_0
)

581 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_0
 'o'

	)

582 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_1
 'r'

	)

583 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_2
 'b'

	)

584 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_3
 'i'

	)

585 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_4
 't'

	)

586 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_5
 '_'

	)

587 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_6
 'i'

	)

588 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_7
 'n'

	)

589 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_8
 't'

	)

590 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_9
 'e'

	)

591 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_10
 'r'

	)

592 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_11
 'f'

	)

593 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_12
 'a'

	)

594 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_13
 'c'

	)

595 
	#TC_IMPL_TC_ORBô_II¡îÁ˚_14
 'e'

	)

596 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


601 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_II¡îÁ˚_°ru˘
;

602 
	#TC_ORBô_II¡îÁ˚
 ((
CORBA_Ty≥Code
)&
TC_ORBô_II¡îÁ˚_°ru˘
)

	)

604 
	#ORBô_II¡îÁ˚__Æloc
(Ë((
ORBô_II¡îÁ˚
 *)
	`ORBô_smÆl_Æloc
 (
TC_ORBô_II¡îÁ˚
))

	)

605 
	#ORBô_II¡îÁ˚__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_ORBô_II¡îÁ˚
,(m),(d))

	)

607 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_ORBô_II¡îÁ˚
)

608 
	#ORBIT_DECL_CORBA_£quí˚_ORBô_II¡îÁ˚
 1

	)

609 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_0
 'o'

	)

610 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_1
 'r'

	)

611 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_2
 'b'

	)

612 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_3
 'i'

	)

613 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_4
 't'

	)

614 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_5
 '_'

	)

615 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_6
 'i'

	)

616 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_7
 'n'

	)

617 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_8
 't'

	)

618 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_9
 'e'

	)

619 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_10
 'r'

	)

620 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_11
 'f'

	)

621 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_12
 'a'

	)

622 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_13
 'c'

	)

623 
	#ORBIT_IMPL_CORBA_£quí˚_ORBô_II¡îÁ˚_14
 'e'

	)

624 #i‡!
deföed
(
_CORBA_£quí˚_ORBô_II¡îÁ˚_deföed
)

625 
	#_CORBA_£quí˚_ORBô_II¡îÁ˚_deföed
 1

	)

626 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
ORBô_II¡îÁ˚
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_ORBô_II¡îÁ˚
;

628 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_0
)

629 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_0
 'o'

	)

630 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_1
 'r'

	)

631 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_2
 'b'

	)

632 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_3
 'i'

	)

633 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_4
 't'

	)

634 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_5
 '_'

	)

635 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_6
 'i'

	)

636 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_7
 'n'

	)

637 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_8
 't'

	)

638 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_9
 'e'

	)

639 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_10
 'r'

	)

640 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_11
 'f'

	)

641 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_12
 'a'

	)

642 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_13
 'c'

	)

643 
	#TC_IMPL_TC_CORBA_£quí˚_ORBô_II¡îÁ˚_14
 'e'

	)

644 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


649 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_ORBô_II¡îÁ˚_°ru˘
;

650 
	#TC_CORBA_£quí˚_ORBô_II¡îÁ˚
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_ORBô_II¡îÁ˚_°ru˘
)

	)

652 
	#CORBA_£quí˚_ORBô_II¡îÁ˚__Æloc
(Ë((
CORBA_£quí˚_ORBô_II¡îÁ˚
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
))

	)

653 
	#CORBA_£quí˚_ORBô_II¡îÁ˚__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
,(m),(d))

	)

654 
	#CORBA_£quí˚_ORBô_II¡îÁ˚_Ælocbuf
(
l
Ë((
ORBô_II¡îÁ˚
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
, (l)))

	)

655 
	#CORBA_£quí˚_ORBô_II¡îÁ˚_Ælocbuf
(
l
Ë((
ORBô_II¡îÁ˚
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
, (l)))

	)

657 #i‡!
deföed
(
_ORBô_II¡îÁ˚s_deföed
)

658 
	#_ORBô_II¡îÁ˚s_deföed
 1

	)

659 
CORBA_£quí˚_ORBô_II¡îÁ˚
 
	tORBô_II¡îÁ˚s
;

660 
	#ORBô_II¡îÁ˚s_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_ORBô_II¡îÁ˚_m¨shÆ
((x),(y),(z))

	)

661 
	#ORBô_II¡îÁ˚s_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_ORBô_II¡îÁ˚_dem¨shÆ
((x),(y),(z),(i))

	)

662 #i‡!
deföed
(
TC_IMPL_TC_ORBô_II¡îÁ˚s_0
)

663 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_0
 'o'

	)

664 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_1
 'r'

	)

665 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_2
 'b'

	)

666 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_3
 'i'

	)

667 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_4
 't'

	)

668 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_5
 '_'

	)

669 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_6
 'i'

	)

670 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_7
 'n'

	)

671 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_8
 't'

	)

672 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_9
 'e'

	)

673 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_10
 'r'

	)

674 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_11
 'f'

	)

675 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_12
 'a'

	)

676 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_13
 'c'

	)

677 
	#TC_IMPL_TC_ORBô_II¡îÁ˚s_14
 'e'

	)

678 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


683 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_II¡îÁ˚s_°ru˘
;

684 
	#TC_ORBô_II¡îÁ˚s
 ((
CORBA_Ty≥Code
)&
TC_ORBô_II¡îÁ˚s_°ru˘
)

	)

686 
	#ORBô_II¡îÁ˚s__Æloc
(Ë((
ORBô_II¡îÁ˚s
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
))

	)

687 
	#ORBô_II¡îÁ˚s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
,(m),(d))

	)

688 
	#ORBô_II¡îÁ˚s_Ælocbuf
(
l
Ë((
ORBô_II¡îÁ˚
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_ORBô_II¡îÁ˚
, (l)))

	)

690 #unde‡
ex_ORBô_NoII¡îÁ˚


691 
	#ex_ORBô_NoII¡îÁ˚
 "IDL:ORBô/NoII¡îÁ˚:1.0"

	)

692 #i‡!
deföed
(
_ORBô_NoII¡îÁ˚_deföed
)

693 
	#_ORBô_NoII¡îÁ˚_deföed
 1

	)

694 
ORBô_NoII¡îÁ˚_ty≥
 
	tORBô_NoII¡îÁ˚
;

695 
	sORBô_NoII¡îÁ˚_ty≥
 {

696 
	gdummy
;

699 #i‡!
deföed
(
TC_IMPL_TC_ORBô_NoII¡îÁ˚_0
)

700 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_0
 'o'

	)

701 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_1
 'r'

	)

702 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_2
 'b'

	)

703 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_3
 'i'

	)

704 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_4
 't'

	)

705 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_5
 '_'

	)

706 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_6
 'i'

	)

707 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_7
 'n'

	)

708 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_8
 't'

	)

709 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_9
 'e'

	)

710 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_10
 'r'

	)

711 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_11
 'f'

	)

712 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_12
 'a'

	)

713 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_13
 'c'

	)

714 
	#TC_IMPL_TC_ORBô_NoII¡îÁ˚_14
 'e'

	)

715 #ifde‡
ORBIT_IDL_C_IMODULE_‹bô_öãrÁ˚


720 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_ORBô_NoII¡îÁ˚_°ru˘
;

721 
	#TC_ORBô_NoII¡îÁ˚
 ((
CORBA_Ty≥Code
)&
TC_ORBô_NoII¡îÁ˚_°ru˘
)

	)

723 
	#ORBô_NoII¡îÁ˚__Æloc
(Ë((
ORBô_NoII¡îÁ˚
 *)
	`ORBô_smÆl_Æloc
 (
TC_ORBô_NoII¡îÁ˚
))

	)

724 
	#ORBô_NoII¡îÁ˚__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_ORBô_NoII¡îÁ˚
,(m),(d))

	)

728 #i‚de‡
__ORBIT_IMETHODS_INDEX


729 
	#__ORBIT_IMETHODS_INDEX


	)

730 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

733 #ifde‡
__˝lu•lus


737 #i‚de‡
EXCLUDE_ORBIT_H


738 
	~<‹bô/‹bô.h
>

742 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/orbit-2.0/orbit/orbit-types.h

1 #i‚de‡
ORBIT_TYPES_H


2 
	#ORBIT_TYPES_H
 1

	)

4 
	~<‹bô/utû/‹bô-utû.h
>

5 #ifde‡
ORBIT2_INTERNAL_API


6 
	~<‹bô/GIOP/gi›-basics.h
>

8 
	~<‹bô/‹b-c‹e/‹b-c‹e-ty≥s.h
>

9 
	~<‹bô/pﬂ/pﬂ-basics.h
>

	@/usr/include/orbit-2.0/orbit/orbit.h

2 
	~<‹bô/‹bô-c⁄fig.h
>

4 #ifde‡
ORBIT_IDL_SERIAL


5 #i‡
ORBIT_IDL_SERIAL
 < 
ORBIT_CONFIG_SERIAL


10 #i‚de‡
ORBIT_H


11 
	#ORBIT_H
 1

	)

13 
	~<‹bô/‹bô-ty≥s.h
>

14 #ifde‡
ORBIT2_INTERNAL_API


15 
	~<‹bô/GIOP/gi›.h
>

17 
	~<‹bô/‹b-c‹e/‹b-c‹e.h
>

18 
	~<‹bô/pﬂ/pﬂ.h
>

19 
	~<‹bô/dy«mic/dy«mic.h
>

21 
G_BEGIN_DECLS


23 c⁄° *
‹bô_vîsi⁄
;

24 
‹bô_maj‹_vîsi⁄
;

25 
‹bô_mö‹_vîsi⁄
;

26 
‹bô_mi¸o_vîsi⁄
;

28 
	gG_END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

676 #ifde‡
__USE_GNU


677 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

680 
__BEGIN_NAMESPACE_STD


683 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

684 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

685 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

689 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

690 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 #ifde‡
__USE_GNU


692 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

693 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

694 
	`__n⁄nuŒ
 ((1, 4));

699 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

700 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__END_NAMESPACE_STD


703 #ifde‡
__USE_ISOC99


704 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

705 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__BEGIN_NAMESPACE_STD


713 
div_t
 
	$div
 (
__numî
, 
__díom
)

714 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

715 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

716 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_ISOC99


720 
__BEGIN_NAMESPACE_C99


721 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

722 
__díom
)

723 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

724 
__END_NAMESPACE_C99


728 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


735 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

736 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

741 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

742 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

747 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

748 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

751 #ifde‡
__USE_MISC


753 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

754 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

755 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

756 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

757 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

758 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

759 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

760 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

765 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

766 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

767 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

769 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

770 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

772 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

773 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

774 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

775 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

777 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

778 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

779 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

784 
__BEGIN_NAMESPACE_STD


787 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

790 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

794 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

798 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

799 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

801 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

802 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

803 
__THROW
;

804 
__END_NAMESPACE_STD


807 #ifde‡
__USE_SVID


812 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

816 #ifde‡
__USE_XOPEN_EXTENDED


823 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

824 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

825 **
__ª°ri˘
 
__vÆuï
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

830 #ifde‡
__USE_XOPEN


832 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 #ifde‡
__USE_XOPEN2K


840 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

843 #ifde‡
__USE_XOPEN


848 
	$gø¡±
 (
__fd
Ë
__THROW
;

852 
	$u∆ock±
 (
__fd
Ë
__THROW
;

857 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

860 #ifde‡
__USE_GNU


864 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

865 
__THROW
 
	`__n⁄nuŒ
 ((2));

868 
	`gë±
 ();

871 #ifde‡
__USE_BSD


875 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/°dlib.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/°dlib-ldbl.h
>

889 #unde‡
__√ed_mÆloc_™d_ˇŒoc


891 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

312 #i‡
__GNUC_PREREQ
 (4,3)

313 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

314 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

321 #i‡!
__GNUC_PREREQ
 (2,8)

322 
	#__exãnsi⁄__


	)

326 #i‡!
__GNUC_PREREQ
 (2,92)

327 
	#__ª°ri˘


	)

333 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


334 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

336 #ifde‡
__GNUC__


337 
	#__ª°ri˘_¨r


	)

339 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

340 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

343 
	#__ª°ri˘_¨r


	)

348 
	~<bôs/w‹dsize.h
>

350 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


351 
	#__LDBL_COMPAT
 1

	)

352 #ifde‡
__REDIRECT


353 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

354 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

355 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

356 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

357 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

358 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

359 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

360 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

361 
	#__LDBL_REDIR_DECL
(
«me
) \

362 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

363 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

364 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

365 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

366 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

369 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

372 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

373 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

374 
	#__LDBL_REDIR_DECL
(
«me
)

	)

375 #ifde‡
__REDIRECT


376 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/atk-1.0/atk/atk.h

20 #i‚de‡
__ATK_H__


21 
	#__ATK_H__


	)

23 
	#__ATK_H_INSIDE__


	)

25 
	~<©k/©kobje˘.h
>

26 
	~<©k/©ka˘i⁄.h
>

27 
	~<©k/©kcomp⁄ít.h
>

28 
	~<©k/©kdocumít.h
>

29 
	~<©k/©kedôabÀãxt.h
>

30 
	~<©k/©kgobje˘ac˚ssibÀ.h
>

31 
	~<©k/©khy≥æök.h
>

32 
	~<©k/©khy≥æökim∂.h
>

33 
	~<©k/©khy≥πext.h
>

34 
	~<©k/©kimage.h
>

35 
	~<©k/©kno›obje˘.h
>

36 
	~<©k/©kno›obje˘Á˘‹y.h
>

37 
	~<©k/©kobje˘Á˘‹y.h
>

38 
	~<©k/©kªgi°ry.h
>

39 
	~<©k/©kªœti⁄.h
>

40 
	~<©k/©kªœti⁄£t.h
>

41 
	~<©k/©kªœti⁄ty≥.h
>

42 
	~<©k/©k£À˘i⁄.h
>

43 
	~<©k/©k°©e.h
>

44 
	~<©k/©k°©e£t.h
>

45 
	~<©k/©k°ªamabÀc⁄ã¡.h
>

46 
	~<©k/©kèbÀ.h
>

47 
	~<©k/©kãxt.h
>

48 
	~<©k/©kutû.h
>

49 
	~<©k/©kmisc.h
>

50 
	~<©k/©kvÆue.h
>

52 #unde‡
__ATK_H_INSIDE__


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
 (
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bonobo-activation-2.0/bonobo-activation/Bonobo_GenericFactory.h

5 #i‚de‡
B⁄obo_GíîicFa˘‹y_H


6 
	#B⁄obo_GíîicFa˘‹y_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_Unknown.h
>

18 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_A˘iv©i⁄_ty≥s.h
>

19 #i‡!
deföed
(
ORBIT_DECL_B⁄obo_GíîicFa˘‹y
Ë&& !deföed(
_B⁄obo_GíîicFa˘‹y_deföed
)

20 
	#ORBIT_DECL_B⁄obo_GíîicFa˘‹y
 1

	)

21 
	#_B⁄obo_GíîicFa˘‹y_deföed
 1

	)

22 
	#B⁄obo_GíîicFa˘‹y__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

23 
CORBA_Obje˘
 
	tB⁄obo_GíîicFa˘‹y
;

24 
CORBA_unsig√d_l⁄g
 
B⁄obo_GíîicFa˘‹y__˛assid
;

25 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_0
)

26 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_0
 'B'

	)

27 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_1
 'o'

	)

28 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_2
 'n'

	)

29 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_3
 'o'

	)

30 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_4
 'b'

	)

31 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_5
 'o'

	)

32 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_6
 '_'

	)

33 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_7
 'G'

	)

34 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_8
 'e'

	)

35 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_9
 'n'

	)

36 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_10
 'e'

	)

37 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_11
 'r'

	)

38 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_12
 'i'

	)

39 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_13
 'c'

	)

40 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_14
 'F'

	)

41 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_15
 'a'

	)

42 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_16
 'c'

	)

43 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_17
 't'

	)

44 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_18
 'o'

	)

45 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_19
 'r'

	)

46 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_20
 'y'

	)

47 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_GíîicFa˘‹y


52 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_GíîicFa˘‹y_°ru˘
;

53 
	#TC_B⁄obo_GíîicFa˘‹y
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_GíîicFa˘‹y_°ru˘
)

	)

56 #unde‡
ex_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e


57 
	#ex_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e
 "IDL:B⁄obo/GíîicFa˘‹y/C™nŸA˘iv©e:1.0"

	)

58 #i‡!
deföed
(
_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_deföed
)

59 
	#_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_deföed
 1

	)

60 
B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_ty≥
 
	tB⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e
;

61 
	sB⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_ty≥
 {

62 
	gdummy
;

65 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_0
)

66 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_0
 'B'

	)

67 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_1
 'o'

	)

68 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_2
 'n'

	)

69 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_3
 'o'

	)

70 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_4
 'b'

	)

71 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_5
 'o'

	)

72 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_6
 '_'

	)

73 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_7
 'G'

	)

74 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_8
 'e'

	)

75 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_9
 'n'

	)

76 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_10
 'e'

	)

77 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_11
 'r'

	)

78 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_12
 'i'

	)

79 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_13
 'c'

	)

80 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_14
 'F'

	)

81 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_15
 'a'

	)

82 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_16
 'c'

	)

83 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_17
 't'

	)

84 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_18
 'o'

	)

85 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_19
 'r'

	)

86 
	#TC_IMPL_TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_20
 'y'

	)

87 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_GíîicFa˘‹y


92 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_°ru˘
;

93 
	#TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e_°ru˘
)

	)

95 
	#B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e__Æloc
(Ë((
B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e
))

	)

96 
	#B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_GíîicFa˘‹y_C™nŸA˘iv©e
,(m),(d))

	)

100 #i‚de‡
_deföed_POA_B⁄obo_GíîicFa˘‹y


101 
	#_deföed_POA_B⁄obo_GíîicFa˘‹y
 1

	)

103 *
	g_¥iv©e
;

104 
CORBA_Obje˘
 (*
¸óãObje˘
)(
P‹èbÀSîvî_Sîv™t
 
	g_£rv™t
, c⁄° 
CORBA_ch¨
 * 
	giid
, 
CORBA_Envú⁄mít
 *
	gev
);

105 } 
	tPOA_B⁄obo_GíîicFa˘‹y__ïv
;

107 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	g_ba£_ïv
;

108 
POA_B⁄obo_Unknown__ïv
 *
	gB⁄obo_Unknown_ïv
;

109 
POA_B⁄obo_GíîicFa˘‹y__ïv
 *
	gB⁄obo_GíîicFa˘‹y_ïv
;

110 } 
	tPOA_B⁄obo_GíîicFa˘‹y__vïv
;

112 *
	g_¥iv©e
;

113 
POA_B⁄obo_GíîicFa˘‹y__vïv
 *
	gvïv
;

114 } 
	tPOA_B⁄obo_GíîicFa˘‹y
;

115 
POA_B⁄obo_GíîicFa˘‹y__öô
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

116 
POA_B⁄obo_GíîicFa˘‹y__föi
(
P‹èbÀSîvî_Sîv™t
 
£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

120 
_ORBIT_skñ_smÆl_B⁄obo_GíîicFa˘‹y_¸óãObje˘
(
POA_B⁄obo_GíîicFa˘‹y
 *
_ORBIT_£rv™t
, 
gpoöãr
 
_ORBIT_ªtvÆ
, gpoöã∏*
_ORBIT_¨gs
, 
CORBA_C⁄ãxt
 
˘x
,
CORBA_Envú⁄mít
 *
ev
, 
CORBA_Obje˘
 (*
_im∂_¸óãObje˘
)(
P‹èbÀSîvî_Sîv™t
 
_£rv™t
, c⁄° 
CORBA_ch¨
 * 
iid
, CORBA_Environment *ev));

123 
	#B⁄obo_GíîicFa˘‹y_ªf
 
B⁄obo_Unknown_ªf


	)

124 
	#B⁄obo_GíîicFa˘‹y_uƒef
 
B⁄obo_Unknown_uƒef


	)

125 
	#B⁄obo_GíîicFa˘‹y_quîyI¡îÁ˚
 
B⁄obo_Unknown_quîyI¡îÁ˚


	)

126 
CORBA_Obje˘
 
B⁄obo_GíîicFa˘‹y_¸óãObje˘
(
B⁄obo_GíîicFa˘‹y
 
_obj
, c⁄° 
CORBA_ch¨
 * 
iid
, 
CORBA_Envú⁄mít
 *
ev
);

127 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

129 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_GíîicFa˘‹y


134 
ORBô_II¡îÁ˚
 
B⁄obo_GíîicFa˘‹y__iöãrÁ˚
;

135 
	#B⁄obo_GíîicFa˘‹y_IMETHODS_LEN
 1

	)

136 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_GíîicFa˘‹y


141 
ORBô_IMëhod
 
B⁄obo_GíîicFa˘‹y__imëhods
[
B⁄obo_GíîicFa˘‹y_IMETHODS_LEN
];

145 #i‚de‡
__B⁄obo_GíîicFa˘‹y__imëhods_ödex


146 
	#__B⁄obo_GíîicFa˘‹y__imëhods_ödex


	)

148 
	gB⁄obo_GíîicFa˘‹y_¸óãObje˘__imëhods_ödex


149 } 
	tB⁄obo_GíîicFa˘‹y__imëhods_ödex
;

152 #i‚de‡
__ORBIT_IMETHODS_INDEX


153 
	#__ORBIT_IMETHODS_INDEX


	)

154 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

157 #ifde‡
__˝lu•lus


161 #i‚de‡
EXCLUDE_ORBIT_H


162 
	~<‹bô/‹bô.h
>

166 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation.h

24 #i‚de‡
BONOBO_ACTIVATION_H


25 
	#BONOBO_ACTIVATION_H


	)

27 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_Unknown.h
>

28 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_GíîicFa˘‹y.h
>

30 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-vîsi⁄.h
>

32 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-a˘iv©e.h
>

33 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-£rvî-öfo.h
>

34 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-öô.h
>

35 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-shlib.h
>

36 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-ªgi°î.h
>

38 
	~<b⁄obo-a˘iv©i⁄/b⁄obo-a˘iv©i⁄-async.h
>

40 c⁄° 
guöt
 
b⁄obo_a˘iv©i⁄_maj‹_vîsi⁄
,

41 
b⁄obo_a˘iv©i⁄_mö‹_vîsi⁄
, 
b⁄obo_a˘iv©i⁄_mi¸o_vîsi⁄
;

42 c⁄° 
b⁄obo_a˘iv©i⁄_vîsi⁄
[];

	@/usr/include/cairo/cairo.h

38 #i‚de‡
CAIRO_H


39 
	#CAIRO_H


	)

41 
	~"ˇúo-vîsi⁄.h
"

42 
	~"ˇúo-„©uªs.h
"

43 
	~"ˇúo-dïªˇãd.h
"

45 #ifde‡ 
__˝lu•lus


46 
	#CAIRO_BEGIN_DECLS
 "C" {

	)

47 
	#CAIRO_END_DECLS
 }

	)

49 
	#CAIRO_BEGIN_DECLS


	)

50 
	#CAIRO_END_DECLS


	)

53 #i‚de‡
ˇúo_public


54 #i‡
deföed
 (
_MSC_VER
Ë&& ! deföed (
CAIRO_WIN32_STATIC_BUILD
)

55 
	#ˇúo_public
 
	`__de˛•ec
(
dŒimp‹t
)

	)

57 
	#ˇúo_public


	)

61 
CAIRO_BEGIN_DECLS


63 
	#CAIRO_VERSION_ENCODE
(
maj‹
, 
mö‹
, 
mi¸o
) ( \

64 ((
maj‹
) * 10000) \

65 + ((
mö‹
) * 100) \

66 + ((
mi¸o
Ë* 1))

	)

68 
	#CAIRO_VERSION
 
	`CAIRO_VERSION_ENCODE
( \

69 
CAIRO_VERSION_MAJOR
, \

70 
CAIRO_VERSION_MINOR
, \

71 
CAIRO_VERSION_MICRO
)

	)

74 
	#CAIRO_VERSION_STRINGIZE_
(
maj‹
, 
mö‹
, 
mi¸o
) \

75 #maj‹"."#mö‹"."#mi¸o

	)

76 
	#CAIRO_VERSION_STRINGIZE
(
maj‹
, 
mö‹
, 
mi¸o
) \

77 
	`CAIRO_VERSION_STRINGIZE_
(
maj‹
, 
mö‹
, 
mi¸o
)

	)

79 
	#CAIRO_VERSION_STRING
 
	`CAIRO_VERSION_STRINGIZE
( \

80 
CAIRO_VERSION_MAJOR
, \

81 
CAIRO_VERSION_MINOR
, \

82 
CAIRO_VERSION_MICRO
)

	)

85 
ˇúo_public
 

86 
ˇúo_vîsi⁄
 ();

88 
ˇúo_public
 const *

89 
ˇúo_vîsi⁄_°rög
 ();

105 
	tˇúo_boﬁ_t
;

120 
_ˇúo
 
	tˇúo_t
;

138 
_ˇúo_surÁ˚
 
	tˇúo_surÁ˚_t
;

157 
	s_ˇúo_m©rix
 {

158 
	mxx
; 
	myx
;

159 
	mxy
; 
	myy
;

160 
	mx0
; 
	my0
;

161 } 
	tˇúo_m©rix_t
;

182 
_ˇúo_∑âîn
 
	tˇúo_∑âîn_t
;

192 (*
	tˇúo_de°roy_func_t
Ë(*
	td©a
);

204 
	s_ˇúo_u£r_d©a_key
 {

205 
unu£d
;

206 } 
	tˇúo_u£r_d©a_key_t
;

251 
	e_ˇúo_°©us
 {

252 
CAIRO_STATUS_SUCCESS
 = 0,

253 
CAIRO_STATUS_NO_MEMORY
,

254 
CAIRO_STATUS_INVALID_RESTORE
,

255 
CAIRO_STATUS_INVALID_POP_GROUP
,

256 
CAIRO_STATUS_NO_CURRENT_POINT
,

257 
CAIRO_STATUS_INVALID_MATRIX
,

258 
CAIRO_STATUS_INVALID_STATUS
,

259 
CAIRO_STATUS_NULL_POINTER
,

260 
CAIRO_STATUS_INVALID_STRING
,

261 
CAIRO_STATUS_INVALID_PATH_DATA
,

262 
CAIRO_STATUS_READ_ERROR
,

263 
CAIRO_STATUS_WRITE_ERROR
,

264 
CAIRO_STATUS_SURFACE_FINISHED
,

265 
CAIRO_STATUS_SURFACE_TYPE_MISMATCH
,

266 
CAIRO_STATUS_PATTERN_TYPE_MISMATCH
,

267 
CAIRO_STATUS_INVALID_CONTENT
,

268 
CAIRO_STATUS_INVALID_FORMAT
,

269 
CAIRO_STATUS_INVALID_VISUAL
,

270 
CAIRO_STATUS_FILE_NOT_FOUND
,

271 
CAIRO_STATUS_INVALID_DASH
,

272 
CAIRO_STATUS_INVALID_DSC_COMMENT
,

273 
CAIRO_STATUS_INVALID_INDEX
,

274 
CAIRO_STATUS_CLIP_NOT_REPRESENTABLE
,

275 
CAIRO_STATUS_TEMP_FILE_ERROR
,

276 
CAIRO_STATUS_INVALID_STRIDE
,

277 
CAIRO_STATUS_FONT_TYPE_MISMATCH
,

278 
CAIRO_STATUS_USER_FONT_IMMUTABLE
,

279 
CAIRO_STATUS_USER_FONT_ERROR
,

280 
CAIRO_STATUS_NEGATIVE_COUNT
,

281 
CAIRO_STATUS_INVALID_CLUSTERS
,

282 
CAIRO_STATUS_INVALID_SLANT
,

283 
CAIRO_STATUS_INVALID_WEIGHT


285 } 
	tˇúo_°©us_t
;

301 
	e_ˇúo_c⁄ã¡
 {

302 
CAIRO_CONTENT_COLOR
 = 0x1000,

303 
CAIRO_CONTENT_ALPHA
 = 0x2000,

304 
CAIRO_CONTENT_COLOR_ALPHA
 = 0x3000

305 } 
	tˇúo_c⁄ã¡_t
;

323 
	$ˇúo_°©us_t
 (*
	tˇúo_wrôe_func_t
Ë(*
	t˛osuª
,

324 c⁄° *
	td©a
,

325 
	tÀngth
);

343 
	$ˇúo_°©us_t
 (*
	tˇúo_ªad_func_t
Ë(*
	t˛osuª
,

344 *
	td©a
,

345 
	tÀngth
);

348 
ˇúo_public
 
ˇúo_t
 *

349 
	`ˇúo_¸óã
 (
ˇúo_surÁ˚_t
 *
èrgë
);

351 
ˇúo_public
 
ˇúo_t
 *

352 
	`ˇúo_ª„ªn˚
 (
ˇúo_t
 *
¸
);

354 
ˇúo_public
 

355 
	`ˇúo_de°roy
 (
ˇúo_t
 *
¸
);

357 
ˇúo_public
 

358 
	`ˇúo_gë_ª„ªn˚_cou¡
 (
ˇúo_t
 *
¸
);

360 
ˇúo_public
 *

361 
	`ˇúo_gë_u£r_d©a
 (
ˇúo_t
 *
¸
,

362 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
);

364 
ˇúo_public
 
ˇúo_°©us_t


365 
	`ˇúo_£t_u£r_d©a
 (
ˇúo_t
 *
¸
,

366 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
,

367 *
u£r_d©a
,

368 
ˇúo_de°roy_func_t
 
de°roy
);

370 
ˇúo_public
 

371 
	`ˇúo_ßve
 (
ˇúo_t
 *
¸
);

373 
ˇúo_public
 

374 
	`ˇúo_ª°‹e
 (
ˇúo_t
 *
¸
);

376 
ˇúo_public
 

377 
	`ˇúo_push_group
 (
ˇúo_t
 *
¸
);

379 
ˇúo_public
 

380 
	`ˇúo_push_group_wôh_c⁄ã¡
 (
ˇúo_t
 *
¸
, 
ˇúo_c⁄ã¡_t
 
c⁄ã¡
);

382 
ˇúo_public
 
ˇúo_∑âîn_t
 *

383 
	`ˇúo_p›_group
 (
ˇúo_t
 *
¸
);

385 
ˇúo_public
 

386 
	`ˇúo_p›_group_to_sour˚
 (
ˇúo_t
 *
¸
);

434 
	e_ˇúo_›î©‹
 {

435 
CAIRO_OPERATOR_CLEAR
,

437 
CAIRO_OPERATOR_SOURCE
,

438 
CAIRO_OPERATOR_OVER
,

439 
CAIRO_OPERATOR_IN
,

440 
CAIRO_OPERATOR_OUT
,

441 
CAIRO_OPERATOR_ATOP
,

443 
CAIRO_OPERATOR_DEST
,

444 
CAIRO_OPERATOR_DEST_OVER
,

445 
CAIRO_OPERATOR_DEST_IN
,

446 
CAIRO_OPERATOR_DEST_OUT
,

447 
CAIRO_OPERATOR_DEST_ATOP
,

449 
CAIRO_OPERATOR_XOR
,

450 
CAIRO_OPERATOR_ADD
,

451 
CAIRO_OPERATOR_SATURATE


452 } 
	tˇúo_›î©‹_t
;

454 
ˇúo_public
 

455 
	`ˇúo_£t_›î©‹
 (
ˇúo_t
 *
¸
, 
ˇúo_›î©‹_t
 
›
);

457 
ˇúo_public
 

458 
	`ˇúo_£t_sour˚
 (
ˇúo_t
 *
¸
, 
ˇúo_∑âîn_t
 *
sour˚
);

460 
ˇúo_public
 

461 
	`ˇúo_£t_sour˚_rgb
 (
ˇúo_t
 *
¸
, 
ªd
, 
gªí
, 
blue
);

463 
ˇúo_public
 

464 
	`ˇúo_£t_sour˚_rgba
 (
ˇúo_t
 *
¸
,

465 
ªd
, 
gªí
, 
blue
,

466 
Æpha
);

468 
ˇúo_public
 

469 
	`ˇúo_£t_sour˚_surÁ˚
 (
ˇúo_t
 *
¸
,

470 
ˇúo_surÁ˚_t
 *
surÁ˚
,

471 
x
,

472 
y
);

474 
ˇúo_public
 

475 
	`ˇúo_£t_tﬁî™˚
 (
ˇúo_t
 *
¸
, 
tﬁî™˚
);

490 
	e_ˇúo_™tülüs
 {

491 
CAIRO_ANTIALIAS_DEFAULT
,

492 
CAIRO_ANTIALIAS_NONE
,

493 
CAIRO_ANTIALIAS_GRAY
,

494 
CAIRO_ANTIALIAS_SUBPIXEL


495 } 
	tˇúo_™tülüs_t
;

497 
ˇúo_public
 

498 
	`ˇúo_£t_™tülüs
 (
ˇúo_t
 *
¸
, 
ˇúo_™tülüs_t
 
™tülüs
);

525 
	e_ˇúo_fûl_ruÀ
 {

526 
CAIRO_FILL_RULE_WINDING
,

527 
CAIRO_FILL_RULE_EVEN_ODD


528 } 
	tˇúo_fûl_ruÀ_t
;

530 
ˇúo_public
 

531 
	`ˇúo_£t_fûl_ruÀ
 (
ˇúo_t
 *
¸
, 
ˇúo_fûl_ruÀ_t
 
fûl_ruÀ
);

533 
ˇúo_public
 

534 
	`ˇúo_£t_löe_width
 (
ˇúo_t
 *
¸
, 
width
);

546 
	e_ˇúo_löe_ˇp
 {

547 
CAIRO_LINE_CAP_BUTT
,

548 
CAIRO_LINE_CAP_ROUND
,

549 
CAIRO_LINE_CAP_SQUARE


550 } 
	tˇúo_löe_ˇp_t
;

552 
ˇúo_public
 

553 
	`ˇúo_£t_löe_ˇp
 (
ˇúo_t
 *
¸
, 
ˇúo_löe_ˇp_t
 
löe_ˇp
);

568 
	e_ˇúo_löe_joö
 {

569 
CAIRO_LINE_JOIN_MITER
,

570 
CAIRO_LINE_JOIN_ROUND
,

571 
CAIRO_LINE_JOIN_BEVEL


572 } 
	tˇúo_löe_joö_t
;

574 
ˇúo_public
 

575 
	`ˇúo_£t_löe_joö
 (
ˇúo_t
 *
¸
, 
ˇúo_löe_joö_t
 
löe_joö
);

577 
ˇúo_public
 

578 
	`ˇúo_£t_dash
 (
ˇúo_t
 *
¸
,

579 c⁄° *
dashes
,

580 
num_dashes
,

581 
off£t
);

583 
ˇúo_public
 

584 
	`ˇúo_£t_môî_limô
 (
ˇúo_t
 *
¸
, 
limô
);

586 
ˇúo_public
 

587 
	`ˇúo_å™¶©e
 (
ˇúo_t
 *
¸
, 
tx
, 
ty
);

589 
ˇúo_public
 

590 
	`ˇúo_sˇÀ
 (
ˇúo_t
 *
¸
, 
sx
, 
sy
);

592 
ˇúo_public
 

593 
	`ˇúo_rŸ©e
 (
ˇúo_t
 *
¸
, 
™gÀ
);

595 
ˇúo_public
 

596 
	`ˇúo_å™sf‹m
 (
ˇúo_t
 *
¸
,

597 c⁄° 
ˇúo_m©rix_t
 *
m©rix
);

599 
ˇúo_public
 

600 
	`ˇúo_£t_m©rix
 (
ˇúo_t
 *
¸
,

601 c⁄° 
ˇúo_m©rix_t
 *
m©rix
);

603 
ˇúo_public
 

604 
	`ˇúo_idítôy_m©rix
 (
ˇúo_t
 *
¸
);

606 
ˇúo_public
 

607 
	`ˇúo_u£r_to_devi˚
 (
ˇúo_t
 *
¸
, *
x
, *
y
);

609 
ˇúo_public
 

610 
	`ˇúo_u£r_to_devi˚_di°™˚
 (
ˇúo_t
 *
¸
, *
dx
, *
dy
);

612 
ˇúo_public
 

613 
	`ˇúo_devi˚_to_u£r
 (
ˇúo_t
 *
¸
, *
x
, *
y
);

615 
ˇúo_public
 

616 
	`ˇúo_devi˚_to_u£r_di°™˚
 (
ˇúo_t
 *
¸
, *
dx
, *
dy
);

619 
ˇúo_public
 

620 
	`ˇúo_√w_∑th
 (
ˇúo_t
 *
¸
);

622 
ˇúo_public
 

623 
	`ˇúo_move_to
 (
ˇúo_t
 *
¸
, 
x
, 
y
);

625 
ˇúo_public
 

626 
	`ˇúo_√w_sub_∑th
 (
ˇúo_t
 *
¸
);

628 
ˇúo_public
 

629 
	`ˇúo_löe_to
 (
ˇúo_t
 *
¸
, 
x
, 
y
);

631 
ˇúo_public
 

632 
	`ˇúo_curve_to
 (
ˇúo_t
 *
¸
,

633 
x1
, 
y1
,

634 
x2
, 
y2
,

635 
x3
, 
y3
);

637 
ˇúo_public
 

638 
	`ˇúo_¨c
 (
ˇúo_t
 *
¸
,

639 
xc
, 
yc
,

640 
ødius
,

641 
™gÀ1
, 
™gÀ2
);

643 
ˇúo_public
 

644 
	`ˇúo_¨c_√g©ive
 (
ˇúo_t
 *
¸
,

645 
xc
, 
yc
,

646 
ødius
,

647 
™gÀ1
, 
™gÀ2
);

657 
ˇúo_public
 

658 
	`ˇúo_ªl_move_to
 (
ˇúo_t
 *
¸
, 
dx
, 
dy
);

660 
ˇúo_public
 

661 
	`ˇúo_ªl_löe_to
 (
ˇúo_t
 *
¸
, 
dx
, 
dy
);

663 
ˇúo_public
 

664 
	`ˇúo_ªl_curve_to
 (
ˇúo_t
 *
¸
,

665 
dx1
, 
dy1
,

666 
dx2
, 
dy2
,

667 
dx3
, 
dy3
);

669 
ˇúo_public
 

670 
	`ˇúo_ª˘™gÀ
 (
ˇúo_t
 *
¸
,

671 
x
, 
y
,

672 
width
, 
height
);

679 
ˇúo_public
 

680 
	`ˇúo_˛o£_∑th
 (
ˇúo_t
 *
¸
);

682 
ˇúo_public
 

683 
	`ˇúo_∑th_exã¡s
 (
ˇúo_t
 *
¸
,

684 *
x1
, *
y1
,

685 *
x2
, *
y2
);

688 
ˇúo_public
 

689 
	`ˇúo_∑öt
 (
ˇúo_t
 *
¸
);

691 
ˇúo_public
 

692 
	`ˇúo_∑öt_wôh_Æpha
 (
ˇúo_t
 *
¸
,

693 
Æpha
);

695 
ˇúo_public
 

696 
	`ˇúo_mask
 (
ˇúo_t
 *
¸
,

697 
ˇúo_∑âîn_t
 *
∑âîn
);

699 
ˇúo_public
 

700 
	`ˇúo_mask_surÁ˚
 (
ˇúo_t
 *
¸
,

701 
ˇúo_surÁ˚_t
 *
surÁ˚
,

702 
surÁ˚_x
,

703 
surÁ˚_y
);

705 
ˇúo_public
 

706 
	`ˇúo_°roke
 (
ˇúo_t
 *
¸
);

708 
ˇúo_public
 

709 
	`ˇúo_°roke_¥e£rve
 (
ˇúo_t
 *
¸
);

711 
ˇúo_public
 

712 
	`ˇúo_fûl
 (
ˇúo_t
 *
¸
);

714 
ˇúo_public
 

715 
	`ˇúo_fûl_¥e£rve
 (
ˇúo_t
 *
¸
);

717 
ˇúo_public
 

718 
	`ˇúo_c›y_∑ge
 (
ˇúo_t
 *
¸
);

720 
ˇúo_public
 

721 
	`ˇúo_show_∑ge
 (
ˇúo_t
 *
¸
);

724 
ˇúo_public
 
ˇúo_boﬁ_t


725 
	`ˇúo_ö_°roke
 (
ˇúo_t
 *
¸
, 
x
, 
y
);

727 
ˇúo_public
 
ˇúo_boﬁ_t


728 
	`ˇúo_ö_fûl
 (
ˇúo_t
 *
¸
, 
x
, 
y
);

731 
ˇúo_public
 

732 
	`ˇúo_°roke_exã¡s
 (
ˇúo_t
 *
¸
,

733 *
x1
, *
y1
,

734 *
x2
, *
y2
);

736 
ˇúo_public
 

737 
	`ˇúo_fûl_exã¡s
 (
ˇúo_t
 *
¸
,

738 *
x1
, *
y1
,

739 *
x2
, *
y2
);

742 
ˇúo_public
 

743 
	`ˇúo_ª£t_˛ù
 (
ˇúo_t
 *
¸
);

745 
ˇúo_public
 

746 
	`ˇúo_˛ù
 (
ˇúo_t
 *
¸
);

748 
ˇúo_public
 

749 
	`ˇúo_˛ù_¥e£rve
 (
ˇúo_t
 *
¸
);

751 
ˇúo_public
 

752 
	`ˇúo_˛ù_exã¡s
 (
ˇúo_t
 *
¸
,

753 *
x1
, *
y1
,

754 *
x2
, *
y2
);

767 
	s_ˇúo_ª˘™gÀ
 {

768 
x
, 
y
, 
width
, 
height
;

769 } 
	tˇúo_ª˘™gÀ_t
;

782 
	s_ˇúo_ª˘™gÀ_li°
 {

783 
ˇúo_°©us_t
 
°©us
;

784 
ˇúo_ª˘™gÀ_t
 *
ª˘™gÀs
;

785 
num_ª˘™gÀs
;

786 } 
	tˇúo_ª˘™gÀ_li°_t
;

788 
ˇúo_public
 
ˇúo_ª˘™gÀ_li°_t
 *

789 
	`ˇúo_c›y_˛ù_ª˘™gÀ_li°
 (
ˇúo_t
 *
¸
);

791 
ˇúo_public
 

792 
	`ˇúo_ª˘™gÀ_li°_de°roy
 (
ˇúo_ª˘™gÀ_li°_t
 *
ª˘™gÀ_li°
);

811 
_ˇúo_sˇÀd_f⁄t
 
	tˇúo_sˇÀd_f⁄t_t
;

830 
_ˇúo_f⁄t_Á˚
 
	tˇúo_f⁄t_Á˚_t
;

857 
ödex
;

858 
x
;

859 
y
;

860 } 
	tˇúo_glyph_t
;

862 
ˇúo_public
 
ˇúo_glyph_t
 *

863 
	`ˇúo_glyph_Æloˇã
 (
num_glyphs
);

865 
ˇúo_public
 

866 
	`ˇúo_glyph_‰ì
 (
ˇúo_glyph_t
 *
glyphs
);

889 
num_byãs
;

890 
num_glyphs
;

891 } 
	tˇúo_ãxt_˛u°î_t
;

893 
ˇúo_public
 
ˇúo_ãxt_˛u°î_t
 *

894 
	`ˇúo_ãxt_˛u°î_Æloˇã
 (
num_˛u°îs
);

896 
ˇúo_public
 

897 
	`ˇúo_ãxt_˛u°î_‰ì
 (
ˇúo_ãxt_˛u°î_t
 *
˛u°îs
);

908 
	e_ˇúo_ãxt_˛u°î_Êags
 {

909 
CAIRO_TEXT_CLUSTER_FLAG_BACKWARD
 = 0x00000001

910 } 
	tˇúo_ãxt_˛u°î_Êags_t
;

940 
x_bórög
;

941 
y_bórög
;

942 
width
;

943 
height
;

944 
x_adv™˚
;

945 
y_adv™˚
;

946 } 
	tˇúo_ãxt_exã¡s_t
;

990 
as˚¡
;

991 
des˚¡
;

992 
height
;

993 
max_x_adv™˚
;

994 
max_y_adv™˚
;

995 } 
	tˇúo_f⁄t_exã¡s_t
;

1005 
	e_ˇúo_f⁄t_¶™t
 {

1006 
CAIRO_FONT_SLANT_NORMAL
,

1007 
CAIRO_FONT_SLANT_ITALIC
,

1008 
CAIRO_FONT_SLANT_OBLIQUE


1009 } 
	tˇúo_f⁄t_¶™t_t
;

1018 
	e_ˇúo_f⁄t_weight
 {

1019 
CAIRO_FONT_WEIGHT_NORMAL
,

1020 
CAIRO_FONT_WEIGHT_BOLD


1021 } 
	tˇúo_f⁄t_weight_t
;

1040 
	e_ˇúo_subpixñ_‹dî
 {

1041 
CAIRO_SUBPIXEL_ORDER_DEFAULT
,

1042 
CAIRO_SUBPIXEL_ORDER_RGB
,

1043 
CAIRO_SUBPIXEL_ORDER_BGR
,

1044 
CAIRO_SUBPIXEL_ORDER_VRGB
,

1045 
CAIRO_SUBPIXEL_ORDER_VBGR


1046 } 
	tˇúo_subpixñ_‹dî_t
;

1070 
	e_ˇúo_höt_°yÀ
 {

1071 
CAIRO_HINT_STYLE_DEFAULT
,

1072 
CAIRO_HINT_STYLE_NONE
,

1073 
CAIRO_HINT_STYLE_SLIGHT
,

1074 
CAIRO_HINT_STYLE_MEDIUM
,

1075 
CAIRO_HINT_STYLE_FULL


1076 } 
	tˇúo_höt_°yÀ_t
;

1091 
	e_ˇúo_höt_mërics
 {

1092 
CAIRO_HINT_METRICS_DEFAULT
,

1093 
CAIRO_HINT_METRICS_OFF
,

1094 
CAIRO_HINT_METRICS_ON


1095 } 
	tˇúo_höt_mërics_t
;

1117 
_ˇúo_f⁄t_›ti⁄s
 
	tˇúo_f⁄t_›ti⁄s_t
;

1119 
ˇúo_public
 
ˇúo_f⁄t_›ti⁄s_t
 *

1120 
	`ˇúo_f⁄t_›ti⁄s_¸óã
 ();

1122 
ˇúo_public
 
ˇúo_f⁄t_›ti⁄s_t
 *

1123 
	`ˇúo_f⁄t_›ti⁄s_c›y
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
‹igöÆ
);

1125 
ˇúo_public
 

1126 
	`ˇúo_f⁄t_›ti⁄s_de°roy
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1128 
ˇúo_public
 
ˇúo_°©us_t


1129 
	`ˇúo_f⁄t_›ti⁄s_°©us
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1131 
ˇúo_public
 

1132 
	`ˇúo_f⁄t_›ti⁄s_mîge
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
,

1133 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
Ÿhî
);

1134 
ˇúo_public
 
ˇúo_boﬁ_t


1135 
	`ˇúo_f⁄t_›ti⁄s_equÆ
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
,

1136 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
Ÿhî
);

1138 
ˇúo_public
 

1139 
	`ˇúo_f⁄t_›ti⁄s_hash
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1141 
ˇúo_public
 

1142 
	`ˇúo_f⁄t_›ti⁄s_£t_™tülüs
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
,

1143 
ˇúo_™tülüs_t
 
™tülüs
);

1144 
ˇúo_public
 
ˇúo_™tülüs_t


1145 
	`ˇúo_f⁄t_›ti⁄s_gë_™tülüs
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1147 
ˇúo_public
 

1148 
	`ˇúo_f⁄t_›ti⁄s_£t_subpixñ_‹dî
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
,

1149 
ˇúo_subpixñ_‹dî_t
 
subpixñ_‹dî
);

1150 
ˇúo_public
 
ˇúo_subpixñ_‹dî_t


1151 
	`ˇúo_f⁄t_›ti⁄s_gë_subpixñ_‹dî
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1153 
ˇúo_public
 

1154 
	`ˇúo_f⁄t_›ti⁄s_£t_höt_°yÀ
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
,

1155 
ˇúo_höt_°yÀ_t
 
höt_°yÀ
);

1156 
ˇúo_public
 
ˇúo_höt_°yÀ_t


1157 
	`ˇúo_f⁄t_›ti⁄s_gë_höt_°yÀ
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1159 
ˇúo_public
 

1160 
	`ˇúo_f⁄t_›ti⁄s_£t_höt_mërics
 (
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
,

1161 
ˇúo_höt_mërics_t
 
höt_mërics
);

1162 
ˇúo_public
 
ˇúo_höt_mërics_t


1163 
	`ˇúo_f⁄t_›ti⁄s_gë_höt_mërics
 (c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1168 
ˇúo_public
 

1169 
	`ˇúo_£À˘_f⁄t_Á˚
 (
ˇúo_t
 *
¸
,

1170 c⁄° *
Ámûy
,

1171 
ˇúo_f⁄t_¶™t_t
 
¶™t
,

1172 
ˇúo_f⁄t_weight_t
 
weight
);

1174 
ˇúo_public
 

1175 
	`ˇúo_£t_f⁄t_size
 (
ˇúo_t
 *
¸
, 
size
);

1177 
ˇúo_public
 

1178 
	`ˇúo_£t_f⁄t_m©rix
 (
ˇúo_t
 *
¸
,

1179 c⁄° 
ˇúo_m©rix_t
 *
m©rix
);

1181 
ˇúo_public
 

1182 
	`ˇúo_gë_f⁄t_m©rix
 (
ˇúo_t
 *
¸
,

1183 
ˇúo_m©rix_t
 *
m©rix
);

1185 
ˇúo_public
 

1186 
	`ˇúo_£t_f⁄t_›ti⁄s
 (
ˇúo_t
 *
¸
,

1187 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1189 
ˇúo_public
 

1190 
	`ˇúo_gë_f⁄t_›ti⁄s
 (
ˇúo_t
 *
¸
,

1191 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1193 
ˇúo_public
 

1194 
	`ˇúo_£t_f⁄t_Á˚
 (
ˇúo_t
 *
¸
, 
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1196 
ˇúo_public
 
ˇúo_f⁄t_Á˚_t
 *

1197 
	`ˇúo_gë_f⁄t_Á˚
 (
ˇúo_t
 *
¸
);

1199 
ˇúo_public
 

1200 
	`ˇúo_£t_sˇÀd_f⁄t
 (
ˇúo_t
 *
¸
,

1201 c⁄° 
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1203 
ˇúo_public
 
ˇúo_sˇÀd_f⁄t_t
 *

1204 
	`ˇúo_gë_sˇÀd_f⁄t
 (
ˇúo_t
 *
¸
);

1206 
ˇúo_public
 

1207 
	`ˇúo_show_ãxt
 (
ˇúo_t
 *
¸
, c⁄° *
utf8
);

1209 
ˇúo_public
 

1210 
	`ˇúo_show_glyphs
 (
ˇúo_t
 *
¸
, c⁄° 
ˇúo_glyph_t
 *
glyphs
, 
num_glyphs
);

1212 
ˇúo_public
 

1213 
	`ˇúo_show_ãxt_glyphs
 (
ˇúo_t
 *
¸
,

1214 c⁄° *
utf8
,

1215 
utf8_Àn
,

1216 c⁄° 
ˇúo_glyph_t
 *
glyphs
,

1217 
num_glyphs
,

1218 c⁄° 
ˇúo_ãxt_˛u°î_t
 *
˛u°îs
,

1219 
num_˛u°îs
,

1220 
ˇúo_ãxt_˛u°î_Êags_t
 
˛u°î_Êags
);

1222 
ˇúo_public
 

1223 
	`ˇúo_ãxt_∑th
 (
ˇúo_t
 *
¸
, c⁄° *
utf8
);

1225 
ˇúo_public
 

1226 
	`ˇúo_glyph_∑th
 (
ˇúo_t
 *
¸
, c⁄° 
ˇúo_glyph_t
 *
glyphs
, 
num_glyphs
);

1228 
ˇúo_public
 

1229 
	`ˇúo_ãxt_exã¡s
 (
ˇúo_t
 *
¸
,

1230 c⁄° *
utf8
,

1231 
ˇúo_ãxt_exã¡s_t
 *
exã¡s
);

1233 
ˇúo_public
 

1234 
	`ˇúo_glyph_exã¡s
 (
ˇúo_t
 *
¸
,

1235 c⁄° 
ˇúo_glyph_t
 *
glyphs
,

1236 
num_glyphs
,

1237 
ˇúo_ãxt_exã¡s_t
 *
exã¡s
);

1239 
ˇúo_public
 

1240 
	`ˇúo_f⁄t_exã¡s
 (
ˇúo_t
 *
¸
,

1241 
ˇúo_f⁄t_exã¡s_t
 *
exã¡s
);

1245 
ˇúo_public
 
ˇúo_f⁄t_Á˚_t
 *

1246 
	`ˇúo_f⁄t_Á˚_ª„ªn˚
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1248 
ˇúo_public
 

1249 
	`ˇúo_f⁄t_Á˚_de°roy
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1251 
ˇúo_public
 

1252 
	`ˇúo_f⁄t_Á˚_gë_ª„ªn˚_cou¡
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1254 
ˇúo_public
 
ˇúo_°©us_t


1255 
	`ˇúo_f⁄t_Á˚_°©us
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1295 
	e_ˇúo_f⁄t_ty≥
 {

1296 
CAIRO_FONT_TYPE_TOY
,

1297 
CAIRO_FONT_TYPE_FT
,

1298 
CAIRO_FONT_TYPE_WIN32
,

1299 
CAIRO_FONT_TYPE_QUARTZ
,

1300 
CAIRO_FONT_TYPE_USER


1301 } 
	tˇúo_f⁄t_ty≥_t
;

1303 
ˇúo_public
 
ˇúo_f⁄t_ty≥_t


1304 
	`ˇúo_f⁄t_Á˚_gë_ty≥
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1306 
ˇúo_public
 *

1307 
	`ˇúo_f⁄t_Á˚_gë_u£r_d©a
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1308 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
);

1310 
ˇúo_public
 
ˇúo_°©us_t


1311 
	`ˇúo_f⁄t_Á˚_£t_u£r_d©a
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1312 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
,

1313 *
u£r_d©a
,

1314 
ˇúo_de°roy_func_t
 
de°roy
);

1318 
ˇúo_public
 
ˇúo_sˇÀd_f⁄t_t
 *

1319 
	`ˇúo_sˇÀd_f⁄t_¸óã
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1320 c⁄° 
ˇúo_m©rix_t
 *
f⁄t_m©rix
,

1321 c⁄° 
ˇúo_m©rix_t
 *
˘m
,

1322 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1324 
ˇúo_public
 
ˇúo_sˇÀd_f⁄t_t
 *

1325 
	`ˇúo_sˇÀd_f⁄t_ª„ªn˚
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1327 
ˇúo_public
 

1328 
	`ˇúo_sˇÀd_f⁄t_de°roy
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1330 
ˇúo_public
 

1331 
	`ˇúo_sˇÀd_f⁄t_gë_ª„ªn˚_cou¡
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1333 
ˇúo_public
 
ˇúo_°©us_t


1334 
	`ˇúo_sˇÀd_f⁄t_°©us
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1336 
ˇúo_public
 
ˇúo_f⁄t_ty≥_t


1337 
	`ˇúo_sˇÀd_f⁄t_gë_ty≥
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1339 
ˇúo_public
 *

1340 
	`ˇúo_sˇÀd_f⁄t_gë_u£r_d©a
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1341 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
);

1343 
ˇúo_public
 
ˇúo_°©us_t


1344 
	`ˇúo_sˇÀd_f⁄t_£t_u£r_d©a
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1345 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
,

1346 *
u£r_d©a
,

1347 
ˇúo_de°roy_func_t
 
de°roy
);

1349 
ˇúo_public
 

1350 
	`ˇúo_sˇÀd_f⁄t_exã¡s
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1351 
ˇúo_f⁄t_exã¡s_t
 *
exã¡s
);

1353 
ˇúo_public
 

1354 
	`ˇúo_sˇÀd_f⁄t_ãxt_exã¡s
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1355 c⁄° *
utf8
,

1356 
ˇúo_ãxt_exã¡s_t
 *
exã¡s
);

1358 
ˇúo_public
 

1359 
	`ˇúo_sˇÀd_f⁄t_glyph_exã¡s
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1360 c⁄° 
ˇúo_glyph_t
 *
glyphs
,

1361 
num_glyphs
,

1362 
ˇúo_ãxt_exã¡s_t
 *
exã¡s
);

1364 
ˇúo_public
 
ˇúo_°©us_t


1365 
	`ˇúo_sˇÀd_f⁄t_ãxt_to_glyphs
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1366 
x
,

1367 
y
,

1368 c⁄° *
utf8
,

1369 
utf8_Àn
,

1370 
ˇúo_glyph_t
 **
glyphs
,

1371 *
num_glyphs
,

1372 
ˇúo_ãxt_˛u°î_t
 **
˛u°îs
,

1373 *
num_˛u°îs
,

1374 
ˇúo_ãxt_˛u°î_Êags_t
 *
˛u°î_Êags
);

1376 
ˇúo_public
 
ˇúo_f⁄t_Á˚_t
 *

1377 
	`ˇúo_sˇÀd_f⁄t_gë_f⁄t_Á˚
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
);

1379 
ˇúo_public
 

1380 
	`ˇúo_sˇÀd_f⁄t_gë_f⁄t_m©rix
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1381 
ˇúo_m©rix_t
 *
f⁄t_m©rix
);

1383 
ˇúo_public
 

1384 
	`ˇúo_sˇÀd_f⁄t_gë_˘m
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1385 
ˇúo_m©rix_t
 *
˘m
);

1387 
ˇúo_public
 

1388 
	`ˇúo_sˇÀd_f⁄t_gë_sˇÀ_m©rix
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1389 
ˇúo_m©rix_t
 *
sˇÀ_m©rix
);

1391 
ˇúo_public
 

1392 
	`ˇúo_sˇÀd_f⁄t_gë_f⁄t_›ti⁄s
 (
ˇúo_sˇÀd_f⁄t_t
 *
sˇÀd_f⁄t
,

1393 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1398 
ˇúo_public
 
ˇúo_f⁄t_Á˚_t
 *

1399 
	`ˇúo_toy_f⁄t_Á˚_¸óã
 (c⁄° *
Ámûy
,

1400 
ˇúo_f⁄t_¶™t_t
 
¶™t
,

1401 
ˇúo_f⁄t_weight_t
 
weight
);

1403 
ˇúo_public
 const *

1404 
	`ˇúo_toy_f⁄t_Á˚_gë_Ámûy
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1406 
ˇúo_public
 
ˇúo_f⁄t_¶™t_t


1407 
	`ˇúo_toy_f⁄t_Á˚_gë_¶™t
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1409 
ˇúo_public
 
ˇúo_f⁄t_weight_t


1410 
	`ˇúo_toy_f⁄t_Á˚_gë_weight
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1415 
ˇúo_public
 
ˇúo_f⁄t_Á˚_t
 *

1416 
	`ˇúo_u£r_f⁄t_Á˚_¸óã
 ();

1453 
	$ˇúo_°©us_t
 (*
	tˇúo_u£r_sˇÀd_f⁄t_öô_func_t
Ë(
	tˇúo_sˇÀd_f⁄t_t
 *
	tsˇÀd_f⁄t
,

1454 
	tˇúo_t
 *
	t¸
,

1455 
	tˇúo_f⁄t_exã¡s_t
 *
	texã¡s
);

1500 
	$ˇúo_°©us_t
 (*
	tˇúo_u£r_sˇÀd_f⁄t_ªndî_glyph_func_t
Ë(
	tˇúo_sˇÀd_f⁄t_t
 *
	tsˇÀd_f⁄t
,

1501 
	tglyph
,

1502 
	tˇúo_t
 *
	t¸
,

1503 
	tˇúo_ãxt_exã¡s_t
 *
	texã¡s
);

1566 
	$ˇúo_°©us_t
 (*
	tˇúo_u£r_sˇÀd_f⁄t_ãxt_to_glyphs_func_t
Ë(
	tˇúo_sˇÀd_f⁄t_t
 *
	tsˇÀd_f⁄t
,

1567 c⁄° *
	tutf8
,

1568 
	tutf8_Àn
,

1569 
	tˇúo_glyph_t
 **
	tglyphs
,

1570 *
	tnum_glyphs
,

1571 
	tˇúo_ãxt_˛u°î_t
 **
	t˛u°îs
,

1572 *
	tnum_˛u°îs
,

1573 
	tˇúo_ãxt_˛u°î_Êags_t
 *
	t˛u°î_Êags
);

1611 
	$ˇúo_°©us_t
 (*
	tˇúo_u£r_sˇÀd_f⁄t_unicode_to_glyph_func_t
Ë(
	tˇúo_sˇÀd_f⁄t_t
 *
	tsˇÀd_f⁄t
,

1612 
	tunicode
,

1613 *
	tglyph_ödex
);

1617 
ˇúo_public
 

1618 
	`ˇúo_u£r_f⁄t_Á˚_£t_öô_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1619 
ˇúo_u£r_sˇÀd_f⁄t_öô_func_t
 
öô_func
);

1621 
ˇúo_public
 

1622 
	`ˇúo_u£r_f⁄t_Á˚_£t_ªndî_glyph_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1623 
ˇúo_u£r_sˇÀd_f⁄t_ªndî_glyph_func_t
 
ªndî_glyph_func
);

1625 
ˇúo_public
 

1626 
	`ˇúo_u£r_f⁄t_Á˚_£t_ãxt_to_glyphs_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1627 
ˇúo_u£r_sˇÀd_f⁄t_ãxt_to_glyphs_func_t
 
ãxt_to_glyphs_func
);

1629 
ˇúo_public
 

1630 
	`ˇúo_u£r_f⁄t_Á˚_£t_unicode_to_glyph_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
,

1631 
ˇúo_u£r_sˇÀd_f⁄t_unicode_to_glyph_func_t
 
unicode_to_glyph_func
);

1635 
ˇúo_public
 
ˇúo_u£r_sˇÀd_f⁄t_öô_func_t


1636 
	`ˇúo_u£r_f⁄t_Á˚_gë_öô_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1638 
ˇúo_public
 
ˇúo_u£r_sˇÀd_f⁄t_ªndî_glyph_func_t


1639 
	`ˇúo_u£r_f⁄t_Á˚_gë_ªndî_glyph_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1641 
ˇúo_public
 
ˇúo_u£r_sˇÀd_f⁄t_ãxt_to_glyphs_func_t


1642 
	`ˇúo_u£r_f⁄t_Á˚_gë_ãxt_to_glyphs_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1644 
ˇúo_public
 
ˇúo_u£r_sˇÀd_f⁄t_unicode_to_glyph_func_t


1645 
	`ˇúo_u£r_f⁄t_Á˚_gë_unicode_to_glyph_func
 (
ˇúo_f⁄t_Á˚_t
 *
f⁄t_Á˚
);

1650 
ˇúo_public
 
ˇúo_›î©‹_t


1651 
	`ˇúo_gë_›î©‹
 (
ˇúo_t
 *
¸
);

1653 
ˇúo_public
 
ˇúo_∑âîn_t
 *

1654 
	`ˇúo_gë_sour˚
 (
ˇúo_t
 *
¸
);

1656 
ˇúo_public
 

1657 
	`ˇúo_gë_tﬁî™˚
 (
ˇúo_t
 *
¸
);

1659 
ˇúo_public
 
ˇúo_™tülüs_t


1660 
	`ˇúo_gë_™tülüs
 (
ˇúo_t
 *
¸
);

1662 
ˇúo_public
 
ˇúo_boﬁ_t


1663 
	`ˇúo_has_cuºít_poöt
 (
ˇúo_t
 *
¸
);

1665 
ˇúo_public
 

1666 
	`ˇúo_gë_cuºít_poöt
 (
ˇúo_t
 *
¸
, *
x
, *
y
);

1668 
ˇúo_public
 
ˇúo_fûl_ruÀ_t


1669 
	`ˇúo_gë_fûl_ruÀ
 (
ˇúo_t
 *
¸
);

1671 
ˇúo_public
 

1672 
	`ˇúo_gë_löe_width
 (
ˇúo_t
 *
¸
);

1674 
ˇúo_public
 
ˇúo_löe_ˇp_t


1675 
	`ˇúo_gë_löe_ˇp
 (
ˇúo_t
 *
¸
);

1677 
ˇúo_public
 
ˇúo_löe_joö_t


1678 
	`ˇúo_gë_löe_joö
 (
ˇúo_t
 *
¸
);

1680 
ˇúo_public
 

1681 
	`ˇúo_gë_môî_limô
 (
ˇúo_t
 *
¸
);

1683 
ˇúo_public
 

1684 
	`ˇúo_gë_dash_cou¡
 (
ˇúo_t
 *
¸
);

1686 
ˇúo_public
 

1687 
	`ˇúo_gë_dash
 (
ˇúo_t
 *
¸
, *
dashes
, *
off£t
);

1689 
ˇúo_public
 

1690 
	`ˇúo_gë_m©rix
 (
ˇúo_t
 *
¸
, 
ˇúo_m©rix_t
 *
m©rix
);

1692 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

1693 
	`ˇúo_gë_èrgë
 (
ˇúo_t
 *
¸
);

1695 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

1696 
	`ˇúo_gë_group_èrgë
 (
ˇúo_t
 *
¸
);

1709 
	e_ˇúo_∑th_d©a_ty≥
 {

1710 
CAIRO_PATH_MOVE_TO
,

1711 
CAIRO_PATH_LINE_TO
,

1712 
CAIRO_PATH_CURVE_TO
,

1713 
CAIRO_PATH_CLOSE_PATH


1714 } 
	tˇúo_∑th_d©a_ty≥_t
;

1782 
_ˇúo_∑th_d©a_t
 
	tˇúo_∑th_d©a_t
;

1783 
	u_ˇúo_∑th_d©a_t
 {

1785 
ˇúo_∑th_d©a_ty≥_t
 
ty≥
;

1786 
Àngth
;

1787 } 
hódî
;

1789 
x
, 
y
;

1790 } 
poöt
;

1812 
	sˇúo_∑th
 {

1813 
ˇúo_°©us_t
 
°©us
;

1814 
ˇúo_∑th_d©a_t
 *
d©a
;

1815 
num_d©a
;

1816 } 
	tˇúo_∑th_t
;

1818 
ˇúo_public
 
ˇúo_∑th_t
 *

1819 
	`ˇúo_c›y_∑th
 (
ˇúo_t
 *
¸
);

1821 
ˇúo_public
 
ˇúo_∑th_t
 *

1822 
	`ˇúo_c›y_∑th_Ê©
 (
ˇúo_t
 *
¸
);

1824 
ˇúo_public
 

1825 
	`ˇúo_≠≥nd_∑th
 (
ˇúo_t
 *
¸
,

1826 c⁄° 
ˇúo_∑th_t
 *
∑th
);

1828 
ˇúo_public
 

1829 
	`ˇúo_∑th_de°roy
 (
ˇúo_∑th_t
 *
∑th
);

1833 
ˇúo_public
 
ˇúo_°©us_t


1834 
	`ˇúo_°©us
 (
ˇúo_t
 *
¸
);

1836 
ˇúo_public
 const *

1837 
	`ˇúo_°©us_to_°rög
 (
ˇúo_°©us_t
 
°©us
);

1841 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

1842 
	`ˇúo_surÁ˚_¸óã_simû¨
 (
ˇúo_surÁ˚_t
 *
Ÿhî
,

1843 
ˇúo_c⁄ã¡_t
 
c⁄ã¡
,

1844 
width
,

1845 
height
);

1847 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

1848 
	`ˇúo_surÁ˚_ª„ªn˚
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1850 
ˇúo_public
 

1851 
	`ˇúo_surÁ˚_föish
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1853 
ˇúo_public
 

1854 
	`ˇúo_surÁ˚_de°roy
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1856 
ˇúo_public
 

1857 
	`ˇúo_surÁ˚_gë_ª„ªn˚_cou¡
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1859 
ˇúo_public
 
ˇúo_°©us_t


1860 
	`ˇúo_surÁ˚_°©us
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1902 
	e_ˇúo_surÁ˚_ty≥
 {

1903 
CAIRO_SURFACE_TYPE_IMAGE
,

1904 
CAIRO_SURFACE_TYPE_PDF
,

1905 
CAIRO_SURFACE_TYPE_PS
,

1906 
CAIRO_SURFACE_TYPE_XLIB
,

1907 
CAIRO_SURFACE_TYPE_XCB
,

1908 
CAIRO_SURFACE_TYPE_GLITZ
,

1909 
CAIRO_SURFACE_TYPE_QUARTZ
,

1910 
CAIRO_SURFACE_TYPE_WIN32
,

1911 
CAIRO_SURFACE_TYPE_BEOS
,

1912 
CAIRO_SURFACE_TYPE_DIRECTFB
,

1913 
CAIRO_SURFACE_TYPE_SVG
,

1914 
CAIRO_SURFACE_TYPE_OS2
,

1915 
CAIRO_SURFACE_TYPE_WIN32_PRINTING
,

1916 
CAIRO_SURFACE_TYPE_QUARTZ_IMAGE


1917 } 
	tˇúo_surÁ˚_ty≥_t
;

1919 
ˇúo_public
 
ˇúo_surÁ˚_ty≥_t


1920 
	`ˇúo_surÁ˚_gë_ty≥
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1922 
ˇúo_public
 
ˇúo_c⁄ã¡_t


1923 
	`ˇúo_surÁ˚_gë_c⁄ã¡
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1925 #i‡
CAIRO_HAS_PNG_FUNCTIONS


1927 
ˇúo_public
 
ˇúo_°©us_t


1928 
	`ˇúo_surÁ˚_wrôe_to_≤g
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1929 c⁄° *
fûíame
);

1931 
ˇúo_public
 
ˇúo_°©us_t


1932 
	`ˇúo_surÁ˚_wrôe_to_≤g_°ªam
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1933 
ˇúo_wrôe_func_t
 
wrôe_func
,

1934 *
˛osuª
);

1938 
ˇúo_public
 *

1939 
	`ˇúo_surÁ˚_gë_u£r_d©a
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1940 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
);

1942 
ˇúo_public
 
ˇúo_°©us_t


1943 
	`ˇúo_surÁ˚_£t_u£r_d©a
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1944 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
,

1945 *
u£r_d©a
,

1946 
ˇúo_de°roy_func_t
 
de°roy
);

1948 
ˇúo_public
 

1949 
	`ˇúo_surÁ˚_gë_f⁄t_›ti⁄s
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1950 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

1952 
ˇúo_public
 

1953 
	`ˇúo_surÁ˚_Êush
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1955 
ˇúo_public
 

1956 
	`ˇúo_surÁ˚_m¨k_dúty
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1958 
ˇúo_public
 

1959 
	`ˇúo_surÁ˚_m¨k_dúty_ª˘™gÀ
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1960 
x
,

1961 
y
,

1962 
width
,

1963 
height
);

1965 
ˇúo_public
 

1966 
	`ˇúo_surÁ˚_£t_devi˚_off£t
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1967 
x_off£t
,

1968 
y_off£t
);

1970 
ˇúo_public
 

1971 
	`ˇúo_surÁ˚_gë_devi˚_off£t
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1972 *
x_off£t
,

1973 *
y_off£t
);

1975 
ˇúo_public
 

1976 
	`ˇúo_surÁ˚_£t_ÁŒback_ªsﬁuti⁄
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1977 
x_pixñs_≥r_öch
,

1978 
y_pixñs_≥r_öch
);

1980 
ˇúo_public
 

1981 
	`ˇúo_surÁ˚_gë_ÁŒback_ªsﬁuti⁄
 (
ˇúo_surÁ˚_t
 *
surÁ˚
,

1982 *
x_pixñs_≥r_öch
,

1983 *
y_pixñs_≥r_öch
);

1985 
ˇúo_public
 

1986 
	`ˇúo_surÁ˚_c›y_∑ge
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1988 
ˇúo_public
 

1989 
	`ˇúo_surÁ˚_show_∑ge
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

1991 
ˇúo_public
 
ˇúo_boﬁ_t


1992 
	`ˇúo_surÁ˚_has_show_ãxt_glyphs
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2023 
	e_ˇúo_f‹m©
 {

2024 
CAIRO_FORMAT_ARGB32
,

2025 
CAIRO_FORMAT_RGB24
,

2026 
CAIRO_FORMAT_A8
,

2027 
CAIRO_FORMAT_A1


2032 } 
	tˇúo_f‹m©_t
;

2034 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

2035 
	`ˇúo_image_surÁ˚_¸óã
 (
ˇúo_f‹m©_t
 
f‹m©
,

2036 
width
,

2037 
height
);

2039 
ˇúo_public
 

2040 
	`ˇúo_f‹m©_°ride_f‹_width
 (
ˇúo_f‹m©_t
 
f‹m©
,

2041 
width
);

2043 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

2044 
	`ˇúo_image_surÁ˚_¸óã_f‹_d©a
 (*
d©a
,

2045 
ˇúo_f‹m©_t
 
f‹m©
,

2046 
width
,

2047 
height
,

2048 
°ride
);

2050 
ˇúo_public
 *

2051 
	`ˇúo_image_surÁ˚_gë_d©a
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2053 
ˇúo_public
 
ˇúo_f‹m©_t


2054 
	`ˇúo_image_surÁ˚_gë_f‹m©
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2056 
ˇúo_public
 

2057 
	`ˇúo_image_surÁ˚_gë_width
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2059 
ˇúo_public
 

2060 
	`ˇúo_image_surÁ˚_gë_height
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2062 
ˇúo_public
 

2063 
	`ˇúo_image_surÁ˚_gë_°ride
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2065 #i‡
CAIRO_HAS_PNG_FUNCTIONS


2067 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

2068 
	`ˇúo_image_surÁ˚_¸óã_‰om_≤g
 (c⁄° *
fûíame
);

2070 
ˇúo_public
 
ˇúo_surÁ˚_t
 *

2071 
	`ˇúo_image_surÁ˚_¸óã_‰om_≤g_°ªam
 (
ˇúo_ªad_func_t
 
ªad_func
,

2072 *
˛osuª
);

2078 
ˇúo_public
 
ˇúo_∑âîn_t
 *

2079 
	`ˇúo_∑âîn_¸óã_rgb
 (
ªd
, 
gªí
, 
blue
);

2081 
ˇúo_public
 
ˇúo_∑âîn_t
 *

2082 
	`ˇúo_∑âîn_¸óã_rgba
 (
ªd
, 
gªí
, 
blue
,

2083 
Æpha
);

2085 
ˇúo_public
 
ˇúo_∑âîn_t
 *

2086 
	`ˇúo_∑âîn_¸óã_f‹_surÁ˚
 (
ˇúo_surÁ˚_t
 *
surÁ˚
);

2088 
ˇúo_public
 
ˇúo_∑âîn_t
 *

2089 
	`ˇúo_∑âîn_¸óã_löór
 (
x0
, 
y0
,

2090 
x1
, 
y1
);

2092 
ˇúo_public
 
ˇúo_∑âîn_t
 *

2093 
	`ˇúo_∑âîn_¸óã_ødül
 (
cx0
, 
cy0
, 
ødius0
,

2094 
cx1
, 
cy1
, 
ødius1
);

2096 
ˇúo_public
 
ˇúo_∑âîn_t
 *

2097 
	`ˇúo_∑âîn_ª„ªn˚
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2099 
ˇúo_public
 

2100 
	`ˇúo_∑âîn_de°roy
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2102 
ˇúo_public
 

2103 
	`ˇúo_∑âîn_gë_ª„ªn˚_cou¡
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2105 
ˇúo_public
 
ˇúo_°©us_t


2106 
	`ˇúo_∑âîn_°©us
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2108 
ˇúo_public
 *

2109 
	`ˇúo_∑âîn_gë_u£r_d©a
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2110 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
);

2112 
ˇúo_public
 
ˇúo_°©us_t


2113 
	`ˇúo_∑âîn_£t_u£r_d©a
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2114 c⁄° 
ˇúo_u£r_d©a_key_t
 *
key
,

2115 *
u£r_d©a
,

2116 
ˇúo_de°roy_func_t
 
de°roy
);

2148 
	e_ˇúo_∑âîn_ty≥
 {

2149 
CAIRO_PATTERN_TYPE_SOLID
,

2150 
CAIRO_PATTERN_TYPE_SURFACE
,

2151 
CAIRO_PATTERN_TYPE_LINEAR
,

2152 
CAIRO_PATTERN_TYPE_RADIAL


2153 } 
	tˇúo_∑âîn_ty≥_t
;

2155 
ˇúo_public
 
ˇúo_∑âîn_ty≥_t


2156 
	`ˇúo_∑âîn_gë_ty≥
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2158 
ˇúo_public
 

2159 
	`ˇúo_∑âîn_add_cﬁ‹_°›_rgb
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2160 
off£t
,

2161 
ªd
, 
gªí
, 
blue
);

2163 
ˇúo_public
 

2164 
	`ˇúo_∑âîn_add_cﬁ‹_°›_rgba
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2165 
off£t
,

2166 
ªd
, 
gªí
, 
blue
,

2167 
Æpha
);

2169 
ˇúo_public
 

2170 
	`ˇúo_∑âîn_£t_m©rix
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2171 c⁄° 
ˇúo_m©rix_t
 *
m©rix
);

2173 
ˇúo_public
 

2174 
	`ˇúo_∑âîn_gë_m©rix
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2175 
ˇúo_m©rix_t
 *
m©rix
);

2198 
	e_ˇúo_exãnd
 {

2199 
CAIRO_EXTEND_NONE
,

2200 
CAIRO_EXTEND_REPEAT
,

2201 
CAIRO_EXTEND_REFLECT
,

2202 
CAIRO_EXTEND_PAD


2203 } 
	tˇúo_exãnd_t
;

2205 
ˇúo_public
 

2206 
	`ˇúo_∑âîn_£t_exãnd
 (
ˇúo_∑âîn_t
 *
∑âîn
, 
ˇúo_exãnd_t
 
exãnd
);

2208 
ˇúo_public
 
ˇúo_exãnd_t


2209 
	`ˇúo_∑âîn_gë_exãnd
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2229 
	e_ˇúo_fûãr
 {

2230 
CAIRO_FILTER_FAST
,

2231 
CAIRO_FILTER_GOOD
,

2232 
CAIRO_FILTER_BEST
,

2233 
CAIRO_FILTER_NEAREST
,

2234 
CAIRO_FILTER_BILINEAR
,

2235 
CAIRO_FILTER_GAUSSIAN


2236 } 
	tˇúo_fûãr_t
;

2238 
ˇúo_public
 

2239 
	`ˇúo_∑âîn_£t_fûãr
 (
ˇúo_∑âîn_t
 *
∑âîn
, 
ˇúo_fûãr_t
 
fûãr
);

2241 
ˇúo_public
 
ˇúo_fûãr_t


2242 
	`ˇúo_∑âîn_gë_fûãr
 (
ˇúo_∑âîn_t
 *
∑âîn
);

2244 
ˇúo_public
 
ˇúo_°©us_t


2245 
	`ˇúo_∑âîn_gë_rgba
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2246 *
ªd
, *
gªí
,

2247 *
blue
, *
Æpha
);

2249 
ˇúo_public
 
ˇúo_°©us_t


2250 
	`ˇúo_∑âîn_gë_surÁ˚
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2251 
ˇúo_surÁ˚_t
 **
surÁ˚
);

2254 
ˇúo_public
 
ˇúo_°©us_t


2255 
	`ˇúo_∑âîn_gë_cﬁ‹_°›_rgba
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2256 
ödex
, *
off£t
,

2257 *
ªd
, *
gªí
,

2258 *
blue
, *
Æpha
);

2260 
ˇúo_public
 
ˇúo_°©us_t


2261 
	`ˇúo_∑âîn_gë_cﬁ‹_°›_cou¡
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2262 *
cou¡
);

2264 
ˇúo_public
 
ˇúo_°©us_t


2265 
	`ˇúo_∑âîn_gë_löór_poöts
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2266 *
x0
, *
y0
,

2267 *
x1
, *
y1
);

2269 
ˇúo_public
 
ˇúo_°©us_t


2270 
	`ˇúo_∑âîn_gë_ødül_cú˛es
 (
ˇúo_∑âîn_t
 *
∑âîn
,

2271 *
x0
, *
y0
, *
r0
,

2272 *
x1
, *
y1
, *
r1
);

2276 
ˇúo_public
 

2277 
	`ˇúo_m©rix_öô
 (
ˇúo_m©rix_t
 *
m©rix
,

2278 
xx
, 
yx
,

2279 
xy
, 
yy
,

2280 
x0
, 
y0
);

2282 
ˇúo_public
 

2283 
	`ˇúo_m©rix_öô_idítôy
 (
ˇúo_m©rix_t
 *
m©rix
);

2285 
ˇúo_public
 

2286 
	`ˇúo_m©rix_öô_å™¶©e
 (
ˇúo_m©rix_t
 *
m©rix
,

2287 
tx
, 
ty
);

2289 
ˇúo_public
 

2290 
	`ˇúo_m©rix_öô_sˇÀ
 (
ˇúo_m©rix_t
 *
m©rix
,

2291 
sx
, 
sy
);

2293 
ˇúo_public
 

2294 
	`ˇúo_m©rix_öô_rŸ©e
 (
ˇúo_m©rix_t
 *
m©rix
,

2295 
ødüns
);

2297 
ˇúo_public
 

2298 
	`ˇúo_m©rix_å™¶©e
 (
ˇúo_m©rix_t
 *
m©rix
, 
tx
, 
ty
);

2300 
ˇúo_public
 

2301 
	`ˇúo_m©rix_sˇÀ
 (
ˇúo_m©rix_t
 *
m©rix
, 
sx
, 
sy
);

2303 
ˇúo_public
 

2304 
	`ˇúo_m©rix_rŸ©e
 (
ˇúo_m©rix_t
 *
m©rix
, 
ødüns
);

2306 
ˇúo_public
 
ˇúo_°©us_t


2307 
	`ˇúo_m©rix_övît
 (
ˇúo_m©rix_t
 *
m©rix
);

2309 
ˇúo_public
 

2310 
	`ˇúo_m©rix_mu…ùly
 (
ˇúo_m©rix_t
 *
ªsu…
,

2311 c⁄° 
ˇúo_m©rix_t
 *
a
,

2312 c⁄° 
ˇúo_m©rix_t
 *
b
);

2314 
ˇúo_public
 

2315 
	`ˇúo_m©rix_å™sf‹m_di°™˚
 (c⁄° 
ˇúo_m©rix_t
 *
m©rix
,

2316 *
dx
, *
dy
);

2318 
ˇúo_public
 

2319 
	`ˇúo_m©rix_å™sf‹m_poöt
 (c⁄° 
ˇúo_m©rix_t
 *
m©rix
,

2320 *
x
, *
y
);

2323 
ˇúo_public
 

2324 
	`ˇúo_debug_ª£t_°©ic_d©a
 ();

2326 
CAIRO_END_DECLS


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/glib-2.0/gio/gio.h

23 #i‚de‡
__G_IO_H__


24 
	#__G_IO_H__


	)

26 
	#__GIO_GIO_H_INSIDE__


	)

28 
	~<gio/giŸy≥s.h
>

30 
	~<gio/g≠pöfo.h
>

31 
	~<gio/gasyn¸esu….h
>

32 
	~<gio/gbuf„ªdöput°ªam.h
>

33 
	~<gio/gbuf„ªdouçut°ªam.h
>

34 
	~<gio/gˇn˚ŒabÀ.h
>

35 
	~<gio/gc⁄ã¡ty≥.h
>

36 
	~<gio/gd©aöput°ªam.h
>

37 
	~<gio/gd©aouçut°ªam.h
>

38 
	~<gio/gdrive.h
>

39 
	~<gio/gembÀmedic⁄.h
>

40 
	~<gio/gfûe.h
>

41 
	~<gio/gfûóâribuã.h
>

42 
	~<gio/gfûìnumî©‹.h
>

43 
	~<gio/gfûeic⁄.h
>

44 
	~<gio/gfûeöfo.h
>

45 
	~<gio/gfûeöput°ªam.h
>

46 
	~<gio/gfûem⁄ô‹.h
>

47 
	~<gio/gfûíamecom∂ëî.h
>

48 
	~<gio/gfûeouçut°ªam.h
>

49 
	~<gio/gfûãröput°ªam.h
>

50 
	~<gio/gfûãrouçut°ªam.h
>

51 
	~<gio/gic⁄.h
>

52 
	~<gio/göput°ªam.h
>

53 
	~<gio/gi€nums.h
>

54 
	~<gio/gi€numty≥s.h
>

55 
	~<gio/gi€º‹.h
>

56 
	~<gio/giomoduÀ.h
>

57 
	~<gio/gioscheduÀr.h
>

58 
	~<gio/glﬂdabÀic⁄.h
>

59 
	~<gio/gmem‹yöput°ªam.h
>

60 
	~<gio/gmem‹youçut°ªam.h
>

61 
	~<gio/gmou¡.h
>

62 
	~<gio/gmou¡›î©i⁄.h
>

63 
	~<gio/g«tivevﬁumem⁄ô‹.h
>

64 
	~<gio/gouçut°ªam.h
>

65 
	~<gio/g£ekabÀ.h
>

66 
	~<gio/gsim∂ósyn¸esu….h
>

67 
	~<gio/gthemedic⁄.h
>

68 
	~<gio/gvfs.h
>

69 
	~<gio/gvﬁume.h
>

70 
	~<gio/gvﬁumem⁄ô‹.h
>

72 #unde‡
__GIO_GIO_H_INSIDE__


	@/usr/include/glib-2.0/glib/gi18n-lib.h

20 #i‚de‡
__G_I18N_LIB_H__


21 
	#__G_I18N_LIB_H__


	)

23 
	~<glib.h
>

25 
	~<liböé.h
>

26 
	~<°rög.h
>

28 #i‚de‡
GETTEXT_PACKAGE


29 #îr‹ 
You
 
mu°
 
deföe
 
GETTEXT_PACKAGE
 
bef‹e
 
ö˛udög
 
gi18n
-
lib
.
h
. 
Did
 
you
 
f‹gë
 
to
 
ö˛ude
 
c⁄fig
.h?

32 
	#_
(
Såög
Ë((*Ë
	`g_dgëãxt
 (
GETTEXT_PACKAGE
, Såög))

	)

33 
	#Q_
(
Såög
Ë
	`g_dpgëãxt
 (
GETTEXT_PACKAGE
, Såög, 0)

	)

34 
	#N_
(
Såög
Ë(Såög)

	)

35 
	#C_
(
C⁄ãxt
,
Såög
Ë
	`g_dpgëãxt
 (
GETTEXT_PACKAGE
, C⁄ãxà"\004" Såög, 
	`°æí
 (C⁄ãxtË+ 1)

	)

36 
	#NC_
(
C⁄ãxt
, 
Såög
Ë(Såög)

	)

	@/usr/include/glib-2.0/glib/gi18n.h

20 #i‚de‡
__G_I18N_H__


21 
	#__G_I18N_H__


	)

23 
	~<glib.h
>

25 
	~<liböé.h
>

26 
	~<°rög.h
>

28 
	#_
(
Såög
Ë
	`gëãxt
 (Såög)

	)

29 
	#Q_
(
Såög
Ë
	`g_dpgëãxt
 (
NULL
, Såög, 0)

	)

30 
	#N_
(
Såög
Ë(Såög)

	)

31 
	#C_
(
C⁄ãxt
,
Såög
Ë
	`g_dpgëãxt
 (
NULL
, C⁄ãxà"\004" Såög, 
	`°æí
 (C⁄ãxtË+ 1)

	)

32 
	#NC_
(
C⁄ãxt
, 
Såög
Ë(Såög)

	)

	@/usr/include/glib-2.0/gobject/gboxed.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_BOXED_H__


24 
	#__G_BOXED_H__


	)

26 
	~<gobje˘/gty≥.h
>

28 
	gG_BEGIN_DECLS


31 
	#G_TYPE_IS_BOXED
(
ty≥
Ë(
	`G_TYPE_FUNDAMENTAL
 (ty≥Ë=
G_TYPE_BOXED
)

	)

40 
	#G_VALUE_HOLDS_BOXED
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_BOXED
))

	)

53 
	$gpoöãr
 (*
	tGBoxedC›yFunc
Ë(
	tgpoöãr
 
	tboxed
);

62 (*
	tGBoxedFªeFunc
Ë(
	tgpoöãr
 
	tboxed
);

66 
gpoöãr
 
	`g_boxed_c›y
 (
GTy≥
 
boxed_ty≥
,

67 
gc⁄°poöãr
 
§c_boxed
);

68 
	`g_boxed_‰ì
 (
GTy≥
 
boxed_ty≥
,

69 
gpoöãr
 
boxed
);

70 
	`g_vÆue_£t_boxed
 (
GVÆue
 *
vÆue
,

71 
gc⁄°poöãr
 
v_boxed
);

72 
	`g_vÆue_£t_°©ic_boxed
 (
GVÆue
 *
vÆue
,

73 
gc⁄°poöãr
 
v_boxed
);

74 
gpoöãr
 
	`g_vÆue_gë_boxed
 (c⁄° 
GVÆue
 *
vÆue
);

75 
gpoöãr
 
	`g_vÆue_dup_boxed
 (c⁄° 
GVÆue
 *
vÆue
);

79 
GTy≥
 
	`g_boxed_ty≥_ªgi°î_°©ic
 (c⁄° 
gch¨
 *
«me
,

80 
GBoxedC›yFunc
 
boxed_c›y
,

81 
GBoxedFªeFunc
 
boxed_‰ì
);

90 
	#G_TYPE_CLOSURE
 (
	`g_˛osuª_gë_ty≥
 ())

	)

97 
	#G_TYPE_VALUE
 (
	`g_vÆue_gë_ty≥
 ())

	)

104 
	#G_TYPE_VALUE_ARRAY
 (
	`g_vÆue_¨øy_gë_ty≥
 ())

	)

110 
	#G_TYPE_DATE
 (
	`g_d©e_gë_ty≥
 ())

	)

142 
	#G_TYPE_STRV
 (
	`g_°rv_gë_ty≥
 ())

	)

148 
	#G_TYPE_GSTRING
 (
	`g_g°rög_gë_ty≥
 ())

	)

156 
	#G_TYPE_HASH_TABLE
 (
	`g_hash_èbÀ_gë_ty≥
 ())

	)

164 
	#G_TYPE_REGEX
 (
	`g_ªgex_gë_ty≥
 ())

	)

167 
	`g_vÆue_èke_boxed
 (
GVÆue
 *
vÆue
,

168 
gc⁄°poöãr
 
v_boxed
);

169 #i‚de‡
G_DISABLE_DEPRECATED


170 
	`g_vÆue_£t_boxed_èke_ow√rshù
 (
GVÆue
 *
vÆue
,

171 
gc⁄°poöãr
 
v_boxed
);

173 
GTy≥
 
	$g_˛osuª_gë_ty≥
 (Ë
G_GNUC_CONST
;

174 
GTy≥
 
	$g_vÆue_gë_ty≥
 (Ë
G_GNUC_CONST
;

175 
GTy≥
 
	$g_vÆue_¨øy_gë_ty≥
 (Ë
G_GNUC_CONST
;

176 
GTy≥
 
	$g_d©e_gë_ty≥
 (Ë
G_GNUC_CONST
;

177 
GTy≥
 
	$g_°rv_gë_ty≥
 (Ë
G_GNUC_CONST
;

178 
GTy≥
 
	$g_g°rög_gë_ty≥
 (Ë
G_GNUC_CONST
;

179 
GTy≥
 
	$g_hash_èbÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

180 
GTy≥
 
	$g_ªgex_gë_ty≥
 (Ë
G_GNUC_CONST
;

187 
gch¨
** 
	tGSåv
;

189 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/genums.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_ENUMS_H__


24 
	#__G_ENUMS_H__


	)

26 
	~<gobje˘/gty≥.h
>

28 
	gG_BEGIN_DECLS


39 
	#G_TYPE_IS_ENUM
(
ty≥
Ë(
	`G_TYPE_FUNDAMENTAL
 (ty≥Ë=
G_TYPE_ENUM
)

	)

46 
	#G_ENUM_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((˛ass), 
G_TYPE_ENUM
, 
GEnumCœss
))

	)

54 
	#G_IS_ENUM_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((˛ass), 
G_TYPE_ENUM
))

	)

63 
	#G_ENUM_CLASS_TYPE
(
˛ass
Ë(
	`G_TYPE_FROM_CLASS
 (˛ass))

	)

72 
	#G_ENUM_CLASS_TYPE_NAME
(
˛ass
Ë(
	`g_ty≥_«me
 (
	`G_ENUM_CLASS_TYPE
 (˛ass)))

	)

83 
	#G_TYPE_IS_FLAGS
(
ty≥
Ë(
	`G_TYPE_FUNDAMENTAL
 (ty≥Ë=
G_TYPE_FLAGS
)

	)

90 
	#G_FLAGS_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((˛ass), 
G_TYPE_FLAGS
, 
GFœgsCœss
))

	)

98 
	#G_IS_FLAGS_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((˛ass), 
G_TYPE_FLAGS
))

	)

107 
	#G_FLAGS_CLASS_TYPE
(
˛ass
Ë(
	`G_TYPE_FROM_CLASS
 (˛ass))

	)

116 
	#G_FLAGS_CLASS_TYPE_NAME
(
˛ass
Ë(
	`g_ty≥_«me
 (
	`G_FLAGS_CLASS_TYPE
 (˛ass)))

	)

127 
	#G_VALUE_HOLDS_ENUM
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_ENUM
))

	)

136 
	#G_VALUE_HOLDS_FLAGS
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_FLAGS
))

	)

140 
_GEnumCœss
 
	tGEnumCœss
;

141 
_GFœgsCœss
 
	tGFœgsCœss
;

142 
_GEnumVÆue
 
	tGEnumVÆue
;

143 
_GFœgsVÆue
 
	tGFœgsVÆue
;

157 
	s_GEnumCœss


159 
GTy≥Cœss
 
	mg_ty≥_˛ass
;

162 
göt
 
	mmöimum
;

163 
göt
 
	mmaximum
;

164 
guöt
 
	mn_vÆues
;

165 
GEnumVÆue
 *
	mvÆues
;

178 
	s_GFœgsCœss


180 
GTy≥Cœss
 
	mg_ty≥_˛ass
;

183 
guöt
 
	mmask
;

184 
guöt
 
	mn_vÆues
;

185 
GFœgsVÆue
 *
	mvÆues
;

196 
	s_GEnumVÆue


198 
göt
 
	mvÆue
;

199 c⁄° 
gch¨
 *
	mvÆue_«me
;

200 c⁄° 
gch¨
 *
	mvÆue_nick
;

211 
	s_GFœgsVÆue


213 
guöt
 
	mvÆue
;

214 c⁄° 
gch¨
 *
	mvÆue_«me
;

215 c⁄° 
gch¨
 *
	mvÆue_nick
;

220 
GEnumVÆue
* 
g_íum_gë_vÆue
 (
GEnumCœss
 *
íum_˛ass
,

221 
göt
 
vÆue
);

222 
GEnumVÆue
* 
g_íum_gë_vÆue_by_«me
 (
GEnumCœss
 *
íum_˛ass
,

223 c⁄° 
gch¨
 *
«me
);

224 
GEnumVÆue
* 
g_íum_gë_vÆue_by_nick
 (
GEnumCœss
 *
íum_˛ass
,

225 c⁄° 
gch¨
 *
nick
);

226 
GFœgsVÆue
* 
g_Êags_gë_fú°_vÆue
 (
GFœgsCœss
 *
Êags_˛ass
,

227 
guöt
 
vÆue
);

228 
GFœgsVÆue
* 
g_Êags_gë_vÆue_by_«me
 (
GFœgsCœss
 *
Êags_˛ass
,

229 c⁄° 
gch¨
 *
«me
);

230 
GFœgsVÆue
* 
g_Êags_gë_vÆue_by_nick
 (
GFœgsCœss
 *
Êags_˛ass
,

231 c⁄° 
gch¨
 *
nick
);

232 
g_vÆue_£t_íum
 (
GVÆue
 *
vÆue
,

233 
göt
 
v_íum
);

234 
göt
 
g_vÆue_gë_íum
 (c⁄° 
GVÆue
 *
vÆue
);

235 
g_vÆue_£t_Êags
 (
GVÆue
 *
vÆue
,

236 
guöt
 
v_Êags
);

237 
guöt
 
g_vÆue_gë_Êags
 (c⁄° 
GVÆue
 *
vÆue
);

245 
GTy≥
 
g_íum_ªgi°î_°©ic
 (c⁄° 
gch¨
 *
«me
,

246 c⁄° 
GEnumVÆue
 *
c⁄°_°©ic_vÆues
);

247 
GTy≥
 
g_Êags_ªgi°î_°©ic
 (c⁄° 
gch¨
 *
«me
,

248 c⁄° 
GFœgsVÆue
 *
c⁄°_°©ic_vÆues
);

252 
g_íum_com∂ëe_ty≥_öfo
 (
GTy≥
 
g_íum_ty≥
,

253 
GTy≥Info
 *
öfo
,

254 c⁄° 
GEnumVÆue
 *
c⁄°_vÆues
);

255 
g_Êags_com∂ëe_ty≥_öfo
 (
GTy≥
 
g_Êags_ty≥
,

256 
GTy≥Info
 *
öfo
,

257 c⁄° 
GFœgsVÆue
 *
c⁄°_vÆues
);

259 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gobject.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_OBJECT_H__


24 
	#__G_OBJECT_H__


	)

26 
	~<gobje˘/gty≥.h
>

27 
	~<gobje˘/gvÆue.h
>

28 
	~<gobje˘/g∑øm.h
>

29 
	~<gobje˘/g˛osuª.h
>

30 
	~<gobje˘/gsig«l.h
>

32 
	gG_BEGIN_DECLS


43 
	#G_TYPE_IS_OBJECT
(
ty≥
Ë(
	`G_TYPE_FUNDAMENTAL
 (ty≥Ë=
G_TYPE_OBJECT
)

	)

52 
	#G_OBJECT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
G_TYPE_OBJECT
, 
GObje˘
))

	)

59 
	#G_OBJECT_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((˛ass), 
G_TYPE_OBJECT
, 
GObje˘Cœss
))

	)

66 
	#G_IS_OBJECT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
G_TYPE_OBJECT
))

	)

74 
	#G_IS_OBJECT_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((˛ass), 
G_TYPE_OBJECT
))

	)

83 
	#G_OBJECT_GET_CLASS
(
obje˘
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obje˘), 
G_TYPE_OBJECT
, 
GObje˘Cœss
))

	)

92 
	#G_OBJECT_TYPE
(
obje˘
Ë(
	`G_TYPE_FROM_INSTANCE
 (obje˘))

	)

102 
	#G_OBJECT_TYPE_NAME
(
obje˘
Ë(
	`g_ty≥_«me
 (
	`G_OBJECT_TYPE
 (obje˘)))

	)

111 
	#G_OBJECT_CLASS_TYPE
(
˛ass
Ë(
	`G_TYPE_FROM_CLASS
 (˛ass))

	)

121 
	#G_OBJECT_CLASS_NAME
(
˛ass
Ë(
	`g_ty≥_«me
 (
	`G_OBJECT_CLASS_TYPE
 (˛ass)))

	)

130 
	#G_VALUE_HOLDS_OBJECT
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_OBJECT
))

	)

138 
	#G_TYPE_INITIALLY_UNOWNED
 (
	`g_öôüŒy_unow√d_gë_ty≥
())

	)

147 
	#G_INITIALLY_UNOWNED
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
G_TYPE_INITIALLY_UNOWNED
, 
GInôüŒyUnow√d
))

	)

155 
	#G_INITIALLY_UNOWNED_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((˛ass), 
G_TYPE_INITIALLY_UNOWNED
, 
GInôüŒyUnow√dCœss
))

	)

162 
	#G_IS_INITIALLY_UNOWNED
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
G_TYPE_INITIALLY_UNOWNED
))

	)

170 
	#G_IS_INITIALLY_UNOWNED_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((˛ass), 
G_TYPE_INITIALLY_UNOWNED
))

	)

179 
	#G_INITIALLY_UNOWNED_GET_CLASS
(
obje˘
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obje˘), 
G_TYPE_INITIALLY_UNOWNED
, 
GInôüŒyUnow√dCœss
))

	)

184 
_GObje˘
 
	tGObje˘
;

185 
_GObje˘Cœss
 
	tGObje˘Cœss
;

186 
_GObje˘
 
	tGInôüŒyUnow√d
;

187 
_GObje˘Cœss
 
	tGInôüŒyUnow√dCœss
;

188 
_GObje˘C⁄°ru˘P¨am
 
	tGObje˘C⁄°ru˘P¨am
;

199 (*
	tGObje˘GëPr›îtyFunc
Ë(
	tGObje˘
 *
	tobje˘
,

200 
	tguöt
 
	t¥›îty_id
,

201 
	tGVÆue
 *
	tvÆue
,

202 
	tGP¨amS≥c
 *
	tp•ec
);

213 (*
	tGObje˘SëPr›îtyFunc
Ë(
	tGObje˘
 *
	tobje˘
,

214 
	tguöt
 
	t¥›îty_id
,

215 c⁄° 
	tGVÆue
 *
	tvÆue
,

216 
	tGP¨amS≥c
 *
	tp•ec
);

223 (*
	tGObje˘FöÆizeFunc
Ë(
	tGObje˘
 *
	tobje˘
);

234 (*
	tGWókNŸify
Ë(
	tgpoöãr
 
	td©a
,

235 
	tGObje˘
 *
	twhîe_the_obje˘_was
);

242 
	s_GObje˘


244 
GTy≥In°™˚
 
g_ty≥_ö°™˚
;

247 vﬁ©ûê
guöt
 
ªf_cou¡
;

248 
GD©a
 *
qd©a
;

312 
	s_GObje˘Cœss


314 
GTy≥Cœss
 
g_ty≥_˛ass
;

317 
GSLi°
 *
c⁄°ru˘_¥›îtõs
;

321 
GObje˘
* (*
c⁄°ru˘‹
Ë(
GTy≥
 
ty≥
,

322 
guöt
 
n_c⁄°ru˘_¥›îtõs
,

323 
GObje˘C⁄°ru˘P¨am
 *
c⁄°ru˘_¥›îtõs
);

325 (*
£t_¥›îty
Ë(
GObje˘
 *
obje˘
,

326 
guöt
 
¥›îty_id
,

327 c⁄° 
GVÆue
 *
vÆue
,

328 
GP¨amS≥c
 *
p•ec
);

329 (*
gë_¥›îty
Ë(
GObje˘
 *
obje˘
,

330 
guöt
 
¥›îty_id
,

331 
GVÆue
 *
vÆue
,

332 
GP¨amS≥c
 *
p•ec
);

333 (*
di•o£
Ë(
GObje˘
 *
obje˘
);

334 (*
föÆize
Ë(
GObje˘
 *
obje˘
);

336 (*
di•©ch_¥›îtõs_ch™ged
Ë(
GObje˘
 *
obje˘
,

337 
guöt
 
n_p•ecs
,

338 
GP¨amS≥c
 **
p•ecs
);

340 (*
nŸify
Ë(
GObje˘
 *
obje˘
,

341 
GP¨amS≥c
 *
p•ec
);

344 (*
c⁄°ru˘ed
Ë(
GObje˘
 *
obje˘
);

348 
gpoöãr
 
pdummy
[7];

359 
	s_GObje˘C⁄°ru˘P¨am


361 
GP¨amS≥c
 *
p•ec
;

362 
GVÆue
 *
vÆue
;

380 
GTy≥
 
	`g_öôüŒy_unow√d_gë_ty≥
 ();

381 
	`g_obje˘_˛ass_ö°Æl_¥›îty
 (
GObje˘Cœss
 *
o˛ass
,

382 
guöt
 
¥›îty_id
,

383 
GP¨amS≥c
 *
p•ec
);

384 
GP¨amS≥c
* 
	`g_obje˘_˛ass_föd_¥›îty
 (
GObje˘Cœss
 *
o˛ass
,

385 c⁄° 
gch¨
 *
¥›îty_«me
);

386 
GP¨amS≥c
**
	`g_obje˘_˛ass_li°_¥›îtõs
 (
GObje˘Cœss
 *
o˛ass
,

387 
guöt
 *
n_¥›îtõs
);

388 
	`g_obje˘_˛ass_ovîride_¥›îty
 (
GObje˘Cœss
 *
o˛ass
,

389 
guöt
 
¥›îty_id
,

390 c⁄° 
gch¨
 *
«me
);

392 
	`g_obje˘_öãrÁ˚_ö°Æl_¥›îty
 (
gpoöãr
 
g_iÁ˚
,

393 
GP¨amS≥c
 *
p•ec
);

394 
GP¨amS≥c
* 
	`g_obje˘_öãrÁ˚_föd_¥›îty
 (
gpoöãr
 
g_iÁ˚
,

395 c⁄° 
gch¨
 *
¥›îty_«me
);

396 
GP¨amS≥c
**
	`g_obje˘_öãrÁ˚_li°_¥›îtõs
 (
gpoöãr
 
g_iÁ˚
,

397 
guöt
 *
n_¥›îtõs_p
);

399 
GTy≥
 
	$g_obje˘_gë_ty≥
 (Ë
G_GNUC_CONST
;

400 
gpoöãr
 
	`g_obje˘_√w
 (
GTy≥
 
obje˘_ty≥
,

401 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

403 
gpoöãr
 
	`g_obje˘_√wv
 (
GTy≥
 
obje˘_ty≥
,

404 
guöt
 
n_∑ømëîs
,

405 
GP¨amëî
 *
∑ømëîs
);

406 
GObje˘
* 
	`g_obje˘_√w_vÆi°
 (
GTy≥
 
obje˘_ty≥
,

407 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

408 
va_li°
 
v¨_¨gs
);

409 
	$g_obje˘_£t
 (
gpoöãr
 
obje˘
,

410 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

411 ...Ë
G_GNUC_NULL_TERMINATED
;

412 
	$g_obje˘_gë
 (
gpoöãr
 
obje˘
,

413 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

414 ...Ë
G_GNUC_NULL_TERMINATED
;

415 
gpoöãr
 
	$g_obje˘_c⁄√˘
 (
gpoöãr
 
obje˘
,

416 c⁄° 
gch¨
 *
sig«l_•ec
,

417 ...Ë
G_GNUC_NULL_TERMINATED
;

418 
	$g_obje˘_disc⁄√˘
 (
gpoöãr
 
obje˘
,

419 c⁄° 
gch¨
 *
sig«l_•ec
,

420 ...Ë
G_GNUC_NULL_TERMINATED
;

421 
	`g_obje˘_£t_vÆi°
 (
GObje˘
 *
obje˘
,

422 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

423 
va_li°
 
v¨_¨gs
);

424 
	`g_obje˘_gë_vÆi°
 (
GObje˘
 *
obje˘
,

425 c⁄° 
gch¨
 *
fú°_¥›îty_«me
,

426 
va_li°
 
v¨_¨gs
);

427 
	`g_obje˘_£t_¥›îty
 (
GObje˘
 *
obje˘
,

428 c⁄° 
gch¨
 *
¥›îty_«me
,

429 c⁄° 
GVÆue
 *
vÆue
);

430 
	`g_obje˘_gë_¥›îty
 (
GObje˘
 *
obje˘
,

431 c⁄° 
gch¨
 *
¥›îty_«me
,

432 
GVÆue
 *
vÆue
);

433 
	`g_obje˘_‰ìze_nŸify
 (
GObje˘
 *
obje˘
);

434 
	`g_obje˘_nŸify
 (
GObje˘
 *
obje˘
,

435 c⁄° 
gch¨
 *
¥›îty_«me
);

436 
	`g_obje˘_thaw_nŸify
 (
GObje˘
 *
obje˘
);

437 
gboﬁón
 
	`g_obje˘_is_Êﬂtög
 (
gpoöãr
 
obje˘
);

438 
gpoöãr
 
	`g_obje˘_ªf_sök
 (gpoöã∏
obje˘
);

439 
gpoöãr
 
	`g_obje˘_ªf
 (gpoöã∏
obje˘
);

440 
	`g_obje˘_uƒef
 (
gpoöãr
 
obje˘
);

441 
	`g_obje˘_wók_ªf
 (
GObje˘
 *
obje˘
,

442 
GWókNŸify
 
nŸify
,

443 
gpoöãr
 
d©a
);

444 
	`g_obje˘_wók_uƒef
 (
GObje˘
 *
obje˘
,

445 
GWókNŸify
 
nŸify
,

446 
gpoöãr
 
d©a
);

447 
	`g_obje˘_add_wók_poöãr
 (
GObje˘
 *
obje˘
,

448 
gpoöãr
 *
wók_poöãr_loˇti⁄
);

449 
	`g_obje˘_ªmove_wók_poöãr
 (
GObje˘
 *
obje˘
,

450 
gpoöãr
 *
wók_poöãr_loˇti⁄
);

464 (*
	tGToggÀNŸify
Ë(
	tgpoöãr
 
	td©a
,

465 
	tGObje˘
 *
	tobje˘
,

466 
	tgboﬁón
 
	tis_œ°_ªf
);

468 
	`g_obje˘_add_toggÀ_ªf
 (
GObje˘
 *
obje˘
,

469 
GToggÀNŸify
 
nŸify
,

470 
gpoöãr
 
d©a
);

471 
	`g_obje˘_ªmove_toggÀ_ªf
 (
GObje˘
 *
obje˘
,

472 
GToggÀNŸify
 
nŸify
,

473 
gpoöãr
 
d©a
);

475 
gpoöãr
 
	`g_obje˘_gë_qd©a
 (
GObje˘
 *
obje˘
,

476 
GQu¨k
 
qu¨k
);

477 
	`g_obje˘_£t_qd©a
 (
GObje˘
 *
obje˘
,

478 
GQu¨k
 
qu¨k
,

479 
gpoöãr
 
d©a
);

480 
	`g_obje˘_£t_qd©a_fuŒ
 (
GObje˘
 *
obje˘
,

481 
GQu¨k
 
qu¨k
,

482 
gpoöãr
 
d©a
,

483 
GDe°royNŸify
 
de°roy
);

484 
gpoöãr
 
	`g_obje˘_°ól_qd©a
 (
GObje˘
 *
obje˘
,

485 
GQu¨k
 
qu¨k
);

486 
gpoöãr
 
	`g_obje˘_gë_d©a
 (
GObje˘
 *
obje˘
,

487 c⁄° 
gch¨
 *
key
);

488 
	`g_obje˘_£t_d©a
 (
GObje˘
 *
obje˘
,

489 c⁄° 
gch¨
 *
key
,

490 
gpoöãr
 
d©a
);

491 
	`g_obje˘_£t_d©a_fuŒ
 (
GObje˘
 *
obje˘
,

492 c⁄° 
gch¨
 *
key
,

493 
gpoöãr
 
d©a
,

494 
GDe°royNŸify
 
de°roy
);

495 
gpoöãr
 
	`g_obje˘_°ól_d©a
 (
GObje˘
 *
obje˘
,

496 c⁄° 
gch¨
 *
key
);

497 
	`g_obje˘_w©ch_˛osuª
 (
GObje˘
 *
obje˘
,

498 
GClosuª
 *
˛osuª
);

499 
GClosuª
* 
	`g_c˛osuª_√w_obje˘
 (
GCÆlback
 
ˇŒback_func
,

500 
GObje˘
 *
obje˘
);

501 
GClosuª
* 
	`g_c˛osuª_√w_obje˘_sw≠
 (
GCÆlback
 
ˇŒback_func
,

502 
GObje˘
 *
obje˘
);

503 
GClosuª
* 
	`g_˛osuª_√w_obje˘
 (
guöt
 
sizeof_˛osuª
,

504 
GObje˘
 *
obje˘
);

505 
	`g_vÆue_£t_obje˘
 (
GVÆue
 *
vÆue
,

506 
gpoöãr
 
v_obje˘
);

507 
gpoöãr
 
	`g_vÆue_gë_obje˘
 (c⁄° 
GVÆue
 *
vÆue
);

508 
gpoöãr
 
	`g_vÆue_dup_obje˘
 (c⁄° 
GVÆue
 *
vÆue
);

509 
gul⁄g
 
	`g_sig«l_c⁄√˘_obje˘
 (
gpoöãr
 
ö°™˚
,

510 c⁄° 
gch¨
 *
dëaûed_sig«l
,

511 
GCÆlback
 
c_h™dÀr
,

512 
gpoöãr
 
gobje˘
,

513 
GC⁄√˘Fœgs
 
c⁄√˘_Êags
);

516 
	`g_obje˘_f‹˚_Êﬂtög
 (
GObje˘
 *
obje˘
);

517 
	`g_obje˘_run_di•o£
 (
GObje˘
 *
obje˘
);

520 
	`g_vÆue_èke_obje˘
 (
GVÆue
 *
vÆue
,

521 
gpoöãr
 
v_obje˘
);

522 #i‚de‡
G_DISABLE_DEPRECATED


523 
	`g_vÆue_£t_obje˘_èke_ow√rshù
 (
GVÆue
 *
vÆue
,

524 
gpoöãr
 
v_obje˘
);

527 #i‡!
	`deföed
(
G_DISABLE_DEPRECATED
Ë|| deföed(
GTK_COMPILATION
)

528 
gsize
 
	`g_obje˘_com∑t_c⁄åﬁ
 (gsizê
wh©
,

529 
gpoöãr
 
d©a
);

533 
	#G_OBJECT_WARN_INVALID_PSPEC
(
obje˘
, 
≤ame
, 
¥›îty_id
, 
p•ec
) \

534 
G_STMT_START
 { \

535 
GObje˘
 *
_obje˘
 = (GObje˘*Ë(
obje˘
); \

536 
GP¨amS≥c
 *
_p•ec
 = (GP¨amS≥c*Ë(
p•ec
); \

537 
guöt
 
_¥›îty_id
 = (
¥›îty_id
); \

538 
	`g_w¨nög
 ("%s: invalid %s id %u for \"%s\" ofÅype `%s' in `%s'", \

539 
G_STRLOC
, \

540 (
≤ame
), \

541 
_¥›îty_id
, \

542 
_p•ec
->
«me
, \

543 
	`g_ty≥_«me
 (
	`G_PARAM_SPEC_TYPE
 (
_p•ec
)), \

544 
	`G_OBJECT_TYPE_NAME
 (
_obje˘
)); \

545 
	}
} 
G_STMT_END


	)

555 
	#G_OBJECT_WARN_INVALID_PROPERTY_ID
(
obje˘
, 
¥›îty_id
, 
p•ec
) \

556 
	`G_OBJECT_WARN_INVALID_PSPEC
 ((
obje˘
), "¥›îty", (
¥›îty_id
), (
p•ec
))

	)

558 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gparam.h

21 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

25 #i‚de‡
__G_PARAM_H__


26 
	#__G_PARAM_H__


	)

28 
	~<gobje˘/gvÆue.h
>

30 
	gG_BEGIN_DECLS


39 
	#G_TYPE_IS_PARAM
(
ty≥
Ë(
	`G_TYPE_FUNDAMENTAL
 (ty≥Ë=
G_TYPE_PARAM
)

	)

47 
	#G_PARAM_SPEC
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM
, 
GP¨amS≥c
))

	)

55 
	#G_IS_PARAM_SPEC
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM
))

	)

62 
	#G_PARAM_SPEC_CLASS
(
p˛ass
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 (’˛ass), 
G_TYPE_PARAM
, 
GP¨amS≥cCœss
))

	)

70 
	#G_IS_PARAM_SPEC_CLASS
(
p˛ass
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 (’˛ass), 
G_TYPE_PARAM
))

	)

77 
	#G_PARAM_SPEC_GET_CLASS
(
p•ec
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 (’•ec), 
G_TYPE_PARAM
, 
GP¨amS≥cCœss
))

	)

87 
	#G_PARAM_SPEC_TYPE
(
p•ec
Ë(
	`G_TYPE_FROM_INSTANCE
 (p•ec))

	)

94 
	#G_PARAM_SPEC_TYPE_NAME
(
p•ec
Ë(
	`g_ty≥_«me
 (
	`G_PARAM_SPEC_TYPE
 (p•ec)))

	)

101 
	#G_PARAM_SPEC_VALUE_TYPE
(
p•ec
Ë(
	`G_PARAM_SPEC
 (p•ec)->
vÆue_ty≥
)

	)

110 
	#G_VALUE_HOLDS_PARAM
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_PARAM
))

	)

141 
	mG_PARAM_READABLE
 = 1 << 0,

142 
	mG_PARAM_WRITABLE
 = 1 << 1,

143 
	mG_PARAM_CONSTRUCT
 = 1 << 2,

144 
	mG_PARAM_CONSTRUCT_ONLY
 = 1 << 3,

145 
	mG_PARAM_LAX_VALIDATION
 = 1 << 4,

146 
	mG_PARAM_STATIC_NAME
 = 1 << 5,

147 #i‚de‡
G_DISABLE_DEPRECATED


148 
	mG_PARAM_PRIVATE
 = 
G_PARAM_STATIC_NAME
,

150 
	mG_PARAM_STATIC_NICK
 = 1 << 6,

151 
	mG_PARAM_STATIC_BLURB
 = 1 << 7

152 } 
	tGP¨amFœgs
;

158 
	#G_PARAM_READWRITE
 (
G_PARAM_READABLE
 | 
G_PARAM_WRITABLE
)

	)

166 
	#G_PARAM_STATIC_STRINGS
 (
G_PARAM_STATIC_NAME
 | 
G_PARAM_STATIC_NICK
 | 
G_PARAM_STATIC_BLURB
)

	)

173 
	#G_PARAM_MASK
 (0x000000ff)

	)

180 
	#G_PARAM_USER_SHIFT
 (8)

	)

184 
_GP¨amS≥c
 
	tGP¨amS≥c
;

185 
_GP¨amS≥cCœss
 
	tGP¨amS≥cCœss
;

186 
_GP¨amëî
 
	tGP¨amëî
;

187 
_GP¨amS≥cPoﬁ
 
	tGP¨amS≥cPoﬁ
;

199 
	s_GP¨amS≥c


201 
GTy≥In°™˚
 
	mg_ty≥_ö°™˚
;

203 
gch¨
 *
	m«me
;

204 
GP¨amFœgs
 
	mÊags
;

205 
GTy≥
 
	mvÆue_ty≥
;

206 
GTy≥
 
	mow√r_ty≥
;

209 
gch¨
 *
	m_nick
;

210 
gch¨
 *
	m_blurb
;

211 
GD©a
 *
	mqd©a
;

212 
guöt
 
	mªf_cou¡
;

213 
guöt
 
	m∑øm_id
;

234 
	s_GP¨amS≥cCœss


236 
GTy≥Cœss
 
	mg_ty≥_˛ass
;

238 
GTy≥
 
	mvÆue_ty≥
;

240 (*
	mföÆize
Ë(
GP¨amS≥c
 *
	mp•ec
);

243 (*
	mvÆue_£t_deÁu…
Ë(
GP¨amS≥c
 *
	mp•ec
,

244 
GVÆue
 *
	mvÆue
);

245 
gboﬁón
 (*
vÆue_vÆid©e
Ë(
GP¨amS≥c
 *
	mp•ec
,

246 
GVÆue
 *
	mvÆue
);

247 
göt
 (*
vÆues_cmp
Ë(
GP¨amS≥c
 *
	mp•ec
,

248 c⁄° 
GVÆue
 *
	mvÆue1
,

249 c⁄° 
GVÆue
 *
	mvÆue2
);

251 
gpoöãr
 
	mdummy
[4];

261 
	s_GP¨amëî


263 c⁄° 
gch¨
 *
	m«me
;

264 
GVÆue
 
	mvÆue
;

269 
GP¨amS≥c
* 
g_∑øm_•ec_ªf
 (GP¨amS≥¯*
p•ec
);

270 
g_∑øm_•ec_uƒef
 (
GP¨amS≥c
 *
p•ec
);

271 
g_∑øm_•ec_sök
 (
GP¨amS≥c
 *
p•ec
);

272 
GP¨amS≥c
* 
g_∑øm_•ec_ªf_sök
 (GP¨amS≥¯*
p•ec
);

273 
gpoöãr
 
g_∑øm_•ec_gë_qd©a
 (
GP¨amS≥c
 *
p•ec
,

274 
GQu¨k
 
qu¨k
);

275 
g_∑øm_•ec_£t_qd©a
 (
GP¨amS≥c
 *
p•ec
,

276 
GQu¨k
 
qu¨k
,

277 
gpoöãr
 
d©a
);

278 
g_∑øm_•ec_£t_qd©a_fuŒ
 (
GP¨amS≥c
 *
p•ec
,

279 
GQu¨k
 
qu¨k
,

280 
gpoöãr
 
d©a
,

281 
GDe°royNŸify
 
de°roy
);

282 
gpoöãr
 
g_∑øm_•ec_°ól_qd©a
 (
GP¨amS≥c
 *
p•ec
,

283 
GQu¨k
 
qu¨k
);

284 
GP¨amS≥c
* 
g_∑øm_•ec_gë_ªdúe˘_èrgë
 (GP¨amS≥¯*
p•ec
);

286 
g_∑øm_vÆue_£t_deÁu…
 (
GP¨amS≥c
 *
p•ec
,

287 
GVÆue
 *
vÆue
);

288 
gboﬁón
 
g_∑øm_vÆue_deÁu…s
 (
GP¨amS≥c
 *
p•ec
,

289 
GVÆue
 *
vÆue
);

290 
gboﬁón
 
g_∑øm_vÆue_vÆid©e
 (
GP¨amS≥c
 *
p•ec
,

291 
GVÆue
 *
vÆue
);

292 
gboﬁón
 
g_∑øm_vÆue_c⁄vît
 (
GP¨amS≥c
 *
p•ec
,

293 c⁄° 
GVÆue
 *
§c_vÆue
,

294 
GVÆue
 *
de°_vÆue
,

295 
gboﬁón
 
°ri˘_vÆid©i⁄
);

296 
göt
 
g_∑øm_vÆues_cmp
 (
GP¨amS≥c
 *
p•ec
,

297 c⁄° 
GVÆue
 *
vÆue1
,

298 c⁄° 
GVÆue
 *
vÆue2
);

299 
G_CONST_RETURN
 
gch¨
* 
g_∑øm_•ec_gë_«me
 (
GP¨amS≥c
 *
p•ec
);

300 
G_CONST_RETURN
 
gch¨
* 
g_∑øm_•ec_gë_nick
 (
GP¨amS≥c
 *
p•ec
);

301 
G_CONST_RETURN
 
gch¨
* 
g_∑øm_•ec_gë_blurb
 (
GP¨amS≥c
 *
p•ec
);

302 
g_vÆue_£t_∑øm
 (
GVÆue
 *
vÆue
,

303 
GP¨amS≥c
 *
∑øm
);

304 
GP¨amS≥c
* 
g_vÆue_gë_∑øm
 (c⁄° 
GVÆue
 *
vÆue
);

305 
GP¨amS≥c
* 
g_vÆue_dup_∑øm
 (c⁄° 
GVÆue
 *
vÆue
);

308 
g_vÆue_èke_∑øm
 (
GVÆue
 *
vÆue
,

309 
GP¨amS≥c
 *
∑øm
);

310 #i‚de‡
G_DISABLE_DEPRECATED


311 
g_vÆue_£t_∑øm_èke_ow√rshù
 (
GVÆue
 *
vÆue
,

312 
GP¨amS≥c
 *
∑øm
);

316 
_GP¨amS≥cTy≥Info
 
	tGP¨amS≥cTy≥Info
;

341 
	s_GP¨amS≥cTy≥Info


344 
guöt16
 
	mö°™˚_size
;

345 
guöt16
 
	mn_¥óŒocs
;

346 (*
	mö°™˚_öô
Ë(
GP¨amS≥c
 *
	mp•ec
);

349 
GTy≥
 
	mvÆue_ty≥
;

350 (*
	mföÆize
Ë(
GP¨amS≥c
 *
	mp•ec
);

351 (*
	mvÆue_£t_deÁu…
Ë(
GP¨amS≥c
 *
	mp•ec
,

352 
GVÆue
 *
	mvÆue
);

353 
gboﬁón
 (*
vÆue_vÆid©e
Ë(
GP¨amS≥c
 *
	mp•ec
,

354 
GVÆue
 *
	mvÆue
);

355 
göt
 (*
vÆues_cmp
Ë(
GP¨amS≥c
 *
	mp•ec
,

356 c⁄° 
GVÆue
 *
	mvÆue1
,

357 c⁄° 
GVÆue
 *
	mvÆue2
);

359 
GTy≥
 
g_∑øm_ty≥_ªgi°î_°©ic
 (c⁄° 
gch¨
 *
«me
,

360 c⁄° 
GP¨amS≥cTy≥Info
 *
p•ec_öfo
);

363 
GTy≥
 
_g_∑øm_ty≥_ªgi°î_°©ic_c⁄°™t
 (c⁄° 
gch¨
 *
«me
,

364 c⁄° 
GP¨amS≥cTy≥Info
 *
p•ec_öfo
,

365 
GTy≥
 
›t_ty≥
);

369 
gpoöãr
 
g_∑øm_•ec_öã∫Æ
 (
GTy≥
 
∑øm_ty≥
,

370 c⁄° 
gch¨
 *
«me
,

371 c⁄° 
gch¨
 *
nick
,

372 c⁄° 
gch¨
 *
blurb
,

373 
GP¨amFœgs
 
Êags
);

374 
GP¨amS≥cPoﬁ
* 
g_∑øm_•ec_poﬁ_√w
 (
gboﬁón
 
ty≥_¥efixög
);

375 
g_∑øm_•ec_poﬁ_ö£π
 (
GP¨amS≥cPoﬁ
 *
poﬁ
,

376 
GP¨amS≥c
 *
p•ec
,

377 
GTy≥
 
ow√r_ty≥
);

378 
g_∑øm_•ec_poﬁ_ªmove
 (
GP¨amS≥cPoﬁ
 *
poﬁ
,

379 
GP¨amS≥c
 *
p•ec
);

380 
GP¨amS≥c
* 
g_∑øm_•ec_poﬁ_lookup
 (
GP¨amS≥cPoﬁ
 *
poﬁ
,

381 c⁄° 
gch¨
 *
∑øm_«me
,

382 
GTy≥
 
ow√r_ty≥
,

383 
gboﬁón
 
wÆk_™˚°‹s
);

384 
GLi°
* 
g_∑øm_•ec_poﬁ_li°_ow√d
 (
GP¨amS≥cPoﬁ
 *
poﬁ
,

385 
GTy≥
 
ow√r_ty≥
);

386 
GP¨amS≥c
** 
g_∑øm_•ec_poﬁ_li°
 (
GP¨amS≥cPoﬁ
 *
poﬁ
,

387 
GTy≥
 
ow√r_ty≥
,

388 
guöt
 *
n_p•ecs_p
);

408 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gparamspecs.h

21 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

25 #i‚de‡
__G_PARAMSPECS_H__


26 
	#__G_PARAMSPECS_H__


	)

28 
	~<gobje˘/gvÆue.h
>

29 
	~<gobje˘/gíums.h
>

30 
	~<gobje˘/gboxed.h
>

31 
	~<gobje˘/gobje˘.h
>

33 
	gG_BEGIN_DECLS


41 
	#G_TYPE_PARAM_CHAR
 (
g_∑øm_•ec_ty≥s
[0])

	)

50 
	#G_IS_PARAM_SPEC_CHAR
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_CHAR
))

	)

57 
	#G_PARAM_SPEC_CHAR
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_CHAR
, 
GP¨amS≥cCh¨
))

	)

64 
	#G_TYPE_PARAM_UCHAR
 (
g_∑øm_•ec_ty≥s
[1])

	)

73 
	#G_IS_PARAM_SPEC_UCHAR
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_UCHAR
))

	)

80 
	#G_PARAM_SPEC_UCHAR
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_UCHAR
, 
GP¨amS≥cUCh¨
))

	)

87 
	#G_TYPE_PARAM_BOOLEAN
 (
g_∑øm_•ec_ty≥s
[2])

	)

96 
	#G_IS_PARAM_SPEC_BOOLEAN
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_BOOLEAN
))

	)

103 
	#G_PARAM_SPEC_BOOLEAN
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_BOOLEAN
, 
GP¨amS≥cBoﬁón
))

	)

110 
	#G_TYPE_PARAM_INT
 (
g_∑øm_•ec_ty≥s
[3])

	)

119 
	#G_IS_PARAM_SPEC_INT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_INT
))

	)

126 
	#G_PARAM_SPEC_INT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_INT
, 
GP¨amS≥cI¡
))

	)

133 
	#G_TYPE_PARAM_UINT
 (
g_∑øm_•ec_ty≥s
[4])

	)

142 
	#G_IS_PARAM_SPEC_UINT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_UINT
))

	)

149 
	#G_PARAM_SPEC_UINT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_UINT
, 
GP¨amS≥cUI¡
))

	)

156 
	#G_TYPE_PARAM_LONG
 (
g_∑øm_•ec_ty≥s
[5])

	)

165 
	#G_IS_PARAM_SPEC_LONG
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_LONG
))

	)

172 
	#G_PARAM_SPEC_LONG
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_LONG
, 
GP¨amS≥cL⁄g
))

	)

179 
	#G_TYPE_PARAM_ULONG
 (
g_∑øm_•ec_ty≥s
[6])

	)

188 
	#G_IS_PARAM_SPEC_ULONG
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_ULONG
))

	)

195 
	#G_PARAM_SPEC_ULONG
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_ULONG
, 
GP¨amS≥cUL⁄g
))

	)

202 
	#G_TYPE_PARAM_INT64
 (
g_∑øm_•ec_ty≥s
[7])

	)

211 
	#G_IS_PARAM_SPEC_INT64
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_INT64
))

	)

218 
	#G_PARAM_SPEC_INT64
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_INT64
, 
GP¨amS≥cI¡64
))

	)

225 
	#G_TYPE_PARAM_UINT64
 (
g_∑øm_•ec_ty≥s
[8])

	)

234 
	#G_IS_PARAM_SPEC_UINT64
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_UINT64
))

	)

241 
	#G_PARAM_SPEC_UINT64
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_UINT64
, 
GP¨amS≥cUI¡64
))

	)

248 
	#G_TYPE_PARAM_UNICHAR
 (
g_∑øm_•ec_ty≥s
[9])

	)

255 
	#G_PARAM_SPEC_UNICHAR
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_UNICHAR
, 
GP¨amS≥cUnich¨
))

	)

264 
	#G_IS_PARAM_SPEC_UNICHAR
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_UNICHAR
))

	)

271 
	#G_TYPE_PARAM_ENUM
 (
g_∑øm_•ec_ty≥s
[10])

	)

280 
	#G_IS_PARAM_SPEC_ENUM
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_ENUM
))

	)

287 
	#G_PARAM_SPEC_ENUM
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_ENUM
, 
GP¨amS≥cEnum
))

	)

294 
	#G_TYPE_PARAM_FLAGS
 (
g_∑øm_•ec_ty≥s
[11])

	)

303 
	#G_IS_PARAM_SPEC_FLAGS
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_FLAGS
))

	)

310 
	#G_PARAM_SPEC_FLAGS
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_FLAGS
, 
GP¨amS≥cFœgs
))

	)

317 
	#G_TYPE_PARAM_FLOAT
 (
g_∑øm_•ec_ty≥s
[12])

	)

326 
	#G_IS_PARAM_SPEC_FLOAT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_FLOAT
))

	)

333 
	#G_PARAM_SPEC_FLOAT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_FLOAT
, 
GP¨amS≥cFlﬂt
))

	)

340 
	#G_TYPE_PARAM_DOUBLE
 (
g_∑øm_•ec_ty≥s
[13])

	)

349 
	#G_IS_PARAM_SPEC_DOUBLE
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_DOUBLE
))

	)

356 
	#G_PARAM_SPEC_DOUBLE
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_DOUBLE
, 
GP¨amS≥cDoubÀ
))

	)

363 
	#G_TYPE_PARAM_STRING
 (
g_∑øm_•ec_ty≥s
[14])

	)

372 
	#G_IS_PARAM_SPEC_STRING
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_STRING
))

	)

379 
	#G_PARAM_SPEC_STRING
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_STRING
, 
GP¨amS≥cSåög
))

	)

386 
	#G_TYPE_PARAM_PARAM
 (
g_∑øm_•ec_ty≥s
[15])

	)

395 
	#G_IS_PARAM_SPEC_PARAM
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_PARAM
))

	)

402 
	#G_PARAM_SPEC_PARAM
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_PARAM
, 
GP¨amS≥cP¨am
))

	)

409 
	#G_TYPE_PARAM_BOXED
 (
g_∑øm_•ec_ty≥s
[16])

	)

418 
	#G_IS_PARAM_SPEC_BOXED
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_BOXED
))

	)

425 
	#G_PARAM_SPEC_BOXED
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_BOXED
, 
GP¨amS≥cBoxed
))

	)

432 
	#G_TYPE_PARAM_POINTER
 (
g_∑øm_•ec_ty≥s
[17])

	)

441 
	#G_IS_PARAM_SPEC_POINTER
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_POINTER
))

	)

448 
	#G_PARAM_SPEC_POINTER
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_POINTER
, 
GP¨amS≥cPoöãr
))

	)

455 
	#G_TYPE_PARAM_VALUE_ARRAY
 (
g_∑øm_•ec_ty≥s
[18])

	)

464 
	#G_IS_PARAM_SPEC_VALUE_ARRAY
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_VALUE_ARRAY
))

	)

471 
	#G_PARAM_SPEC_VALUE_ARRAY
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_VALUE_ARRAY
, 
GP¨amS≥cVÆueAºay
))

	)

478 
	#G_TYPE_PARAM_OBJECT
 (
g_∑øm_•ec_ty≥s
[19])

	)

487 
	#G_IS_PARAM_SPEC_OBJECT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_OBJECT
))

	)

494 
	#G_PARAM_SPEC_OBJECT
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_OBJECT
, 
GP¨amS≥cObje˘
))

	)

503 
	#G_TYPE_PARAM_OVERRIDE
 (
g_∑øm_•ec_ty≥s
[20])

	)

513 
	#G_IS_PARAM_SPEC_OVERRIDE
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_OVERRIDE
))

	)

522 
	#G_PARAM_SPEC_OVERRIDE
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_OVERRIDE
, 
GP¨amS≥cOvîride
))

	)

531 
	#G_TYPE_PARAM_GTYPE
 (
g_∑øm_•ec_ty≥s
[21])

	)

541 
	#G_IS_PARAM_SPEC_GTYPE
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 (’•ec), 
G_TYPE_PARAM_GTYPE
))

	)

550 
	#G_PARAM_SPEC_GTYPE
(
p•ec
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 (’•ec), 
G_TYPE_PARAM_GTYPE
, 
GP¨amS≥cGTy≥
))

	)

554 
_GP¨amS≥cCh¨
 
	tGP¨amS≥cCh¨
;

555 
_GP¨amS≥cUCh¨
 
	tGP¨amS≥cUCh¨
;

556 
_GP¨amS≥cBoﬁón
 
	tGP¨amS≥cBoﬁón
;

557 
_GP¨amS≥cI¡
 
	tGP¨amS≥cI¡
;

558 
_GP¨amS≥cUI¡
 
	tGP¨amS≥cUI¡
;

559 
_GP¨amS≥cL⁄g
 
	tGP¨amS≥cL⁄g
;

560 
_GP¨amS≥cUL⁄g
 
	tGP¨amS≥cUL⁄g
;

561 
_GP¨amS≥cI¡64
 
	tGP¨amS≥cI¡64
;

562 
_GP¨amS≥cUI¡64
 
	tGP¨amS≥cUI¡64
;

563 
_GP¨amS≥cUnich¨
 
	tGP¨amS≥cUnich¨
;

564 
_GP¨amS≥cEnum
 
	tGP¨amS≥cEnum
;

565 
_GP¨amS≥cFœgs
 
	tGP¨amS≥cFœgs
;

566 
_GP¨amS≥cFlﬂt
 
	tGP¨amS≥cFlﬂt
;

567 
_GP¨amS≥cDoubÀ
 
	tGP¨amS≥cDoubÀ
;

568 
_GP¨amS≥cSåög
 
	tGP¨amS≥cSåög
;

569 
_GP¨amS≥cP¨am
 
	tGP¨amS≥cP¨am
;

570 
_GP¨amS≥cBoxed
 
	tGP¨amS≥cBoxed
;

571 
_GP¨amS≥cPoöãr
 
	tGP¨amS≥cPoöãr
;

572 
_GP¨amS≥cVÆueAºay
 
	tGP¨amS≥cVÆueAºay
;

573 
_GP¨amS≥cObje˘
 
	tGP¨amS≥cObje˘
;

574 
_GP¨amS≥cOvîride
 
	tGP¨amS≥cOvîride
;

575 
_GP¨amS≥cGTy≥
 
	tGP¨amS≥cGTy≥
;

586 
	s_GP¨amS≥cCh¨


588 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

590 
göt8
 
	mmöimum
;

591 
göt8
 
	mmaximum
;

592 
göt8
 
	mdeÁu…_vÆue
;

603 
	s_GP¨amS≥cUCh¨


605 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

607 
guöt8
 
	mmöimum
;

608 
guöt8
 
	mmaximum
;

609 
guöt8
 
	mdeÁu…_vÆue
;

618 
	s_GP¨amS≥cBoﬁón


620 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

622 
gboﬁón
 
	mdeÁu…_vÆue
;

633 
	s_GP¨amS≥cI¡


635 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

637 
göt
 
	mmöimum
;

638 
göt
 
	mmaximum
;

639 
göt
 
	mdeÁu…_vÆue
;

650 
	s_GP¨amS≥cUI¡


652 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

654 
guöt
 
	mmöimum
;

655 
guöt
 
	mmaximum
;

656 
guöt
 
	mdeÁu…_vÆue
;

667 
	s_GP¨amS≥cL⁄g


669 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

671 
gl⁄g
 
	mmöimum
;

672 
gl⁄g
 
	mmaximum
;

673 
gl⁄g
 
	mdeÁu…_vÆue
;

684 
	s_GP¨amS≥cUL⁄g


686 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

688 
gul⁄g
 
	mmöimum
;

689 
gul⁄g
 
	mmaximum
;

690 
gul⁄g
 
	mdeÁu…_vÆue
;

701 
	s_GP¨amS≥cI¡64


703 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

705 
göt64
 
	mmöimum
;

706 
göt64
 
	mmaximum
;

707 
göt64
 
	mdeÁu…_vÆue
;

718 
	s_GP¨amS≥cUI¡64


720 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

722 
guöt64
 
	mmöimum
;

723 
guöt64
 
	mmaximum
;

724 
guöt64
 
	mdeÁu…_vÆue
;

733 
	s_GP¨amS≥cUnich¨


735 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

737 
gunich¨
 
	mdeÁu…_vÆue
;

748 
	s_GP¨amS≥cEnum


750 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

752 
GEnumCœss
 *
	míum_˛ass
;

753 
göt
 
	mdeÁu…_vÆue
;

764 
	s_GP¨amS≥cFœgs


766 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

768 
GFœgsCœss
 *
	mÊags_˛ass
;

769 
guöt
 
	mdeÁu…_vÆue
;

782 
	s_GP¨amS≥cFlﬂt


784 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

786 
gÊﬂt
 
	mmöimum
;

787 
gÊﬂt
 
	mmaximum
;

788 
gÊﬂt
 
	mdeÁu…_vÆue
;

789 
gÊﬂt
 
	mïsû⁄
;

802 
	s_GP¨amS≥cDoubÀ


804 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

806 
gdoubÀ
 
	mmöimum
;

807 
gdoubÀ
 
	mmaximum
;

808 
gdoubÀ
 
	mdeÁu…_vÆue
;

809 
gdoubÀ
 
	mïsû⁄
;

824 
	s_GP¨amS≥cSåög


826 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

828 
gch¨
 *
	mdeÁu…_vÆue
;

829 
gch¨
 *
	mc£t_fú°
;

830 
gch¨
 *
	mc£t_¡h
;

831 
gch¨
 
	msub°ôut‹
;

832 
guöt
 
	mnuŒ_fﬁd_if_em±y
 : 1;

833 
guöt
 
	mísuª_n⁄_nuŒ
 : 1;

842 
	s_GP¨amS≥cP¨am


844 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

852 
	s_GP¨amS≥cBoxed


854 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

862 
	s_GP¨amS≥cPoöãr


864 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

874 
	s_GP¨amS≥cVÆueAºay


876 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

877 
GP¨amS≥c
 *
	mñemít_•ec
;

878 
guöt
 
	mfixed_n_ñemíts
;

886 
	s_GP¨amS≥cObje˘


888 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

904 
	s_GP¨amS≥cOvîride


907 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

908 
GP¨amS≥c
 *
	movîriddí
;

919 
	s_GP¨amS≥cGTy≥


921 
GP¨amS≥c
 
	m∑ª¡_ö°™˚
;

922 
GTy≥
 
	mis_a_ty≥
;

926 
GP¨amS≥c
* 
g_∑øm_•ec_ch¨
 (c⁄° 
gch¨
 *
«me
,

927 c⁄° 
gch¨
 *
nick
,

928 c⁄° 
gch¨
 *
blurb
,

929 
göt8
 
möimum
,

930 
göt8
 
maximum
,

931 
göt8
 
deÁu…_vÆue
,

932 
GP¨amFœgs
 
Êags
);

933 
GP¨amS≥c
* 
g_∑øm_•ec_uch¨
 (c⁄° 
gch¨
 *
«me
,

934 c⁄° 
gch¨
 *
nick
,

935 c⁄° 
gch¨
 *
blurb
,

936 
guöt8
 
möimum
,

937 
guöt8
 
maximum
,

938 
guöt8
 
deÁu…_vÆue
,

939 
GP¨amFœgs
 
Êags
);

940 
GP¨amS≥c
* 
g_∑øm_•ec_boﬁón
 (c⁄° 
gch¨
 *
«me
,

941 c⁄° 
gch¨
 *
nick
,

942 c⁄° 
gch¨
 *
blurb
,

943 
gboﬁón
 
deÁu…_vÆue
,

944 
GP¨amFœgs
 
Êags
);

945 
GP¨amS≥c
* 
g_∑øm_•ec_öt
 (c⁄° 
gch¨
 *
«me
,

946 c⁄° 
gch¨
 *
nick
,

947 c⁄° 
gch¨
 *
blurb
,

948 
göt
 
möimum
,

949 
göt
 
maximum
,

950 
göt
 
deÁu…_vÆue
,

951 
GP¨amFœgs
 
Êags
);

952 
GP¨amS≥c
* 
g_∑øm_•ec_uöt
 (c⁄° 
gch¨
 *
«me
,

953 c⁄° 
gch¨
 *
nick
,

954 c⁄° 
gch¨
 *
blurb
,

955 
guöt
 
möimum
,

956 
guöt
 
maximum
,

957 
guöt
 
deÁu…_vÆue
,

958 
GP¨amFœgs
 
Êags
);

959 
GP¨amS≥c
* 
g_∑øm_•ec_l⁄g
 (c⁄° 
gch¨
 *
«me
,

960 c⁄° 
gch¨
 *
nick
,

961 c⁄° 
gch¨
 *
blurb
,

962 
gl⁄g
 
möimum
,

963 
gl⁄g
 
maximum
,

964 
gl⁄g
 
deÁu…_vÆue
,

965 
GP¨amFœgs
 
Êags
);

966 
GP¨amS≥c
* 
g_∑øm_•ec_ul⁄g
 (c⁄° 
gch¨
 *
«me
,

967 c⁄° 
gch¨
 *
nick
,

968 c⁄° 
gch¨
 *
blurb
,

969 
gul⁄g
 
möimum
,

970 
gul⁄g
 
maximum
,

971 
gul⁄g
 
deÁu…_vÆue
,

972 
GP¨amFœgs
 
Êags
);

973 
GP¨amS≥c
* 
g_∑øm_•ec_öt64
 (c⁄° 
gch¨
 *
«me
,

974 c⁄° 
gch¨
 *
nick
,

975 c⁄° 
gch¨
 *
blurb
,

976 
göt64
 
möimum
,

977 
göt64
 
maximum
,

978 
göt64
 
deÁu…_vÆue
,

979 
GP¨amFœgs
 
Êags
);

980 
GP¨amS≥c
* 
g_∑øm_•ec_uöt64
 (c⁄° 
gch¨
 *
«me
,

981 c⁄° 
gch¨
 *
nick
,

982 c⁄° 
gch¨
 *
blurb
,

983 
guöt64
 
möimum
,

984 
guöt64
 
maximum
,

985 
guöt64
 
deÁu…_vÆue
,

986 
GP¨amFœgs
 
Êags
);

987 
GP¨amS≥c
* 
g_∑øm_•ec_unich¨
 (c⁄° 
gch¨
 *
«me
,

988 c⁄° 
gch¨
 *
nick
,

989 c⁄° 
gch¨
 *
blurb
,

990 
gunich¨
 
deÁu…_vÆue
,

991 
GP¨amFœgs
 
Êags
);

992 
GP¨amS≥c
* 
g_∑øm_•ec_íum
 (c⁄° 
gch¨
 *
«me
,

993 c⁄° 
gch¨
 *
nick
,

994 c⁄° 
gch¨
 *
blurb
,

995 
GTy≥
 
íum_ty≥
,

996 
göt
 
deÁu…_vÆue
,

997 
GP¨amFœgs
 
Êags
);

998 
GP¨amS≥c
* 
g_∑øm_•ec_Êags
 (c⁄° 
gch¨
 *
«me
,

999 c⁄° 
gch¨
 *
nick
,

1000 c⁄° 
gch¨
 *
blurb
,

1001 
GTy≥
 
Êags_ty≥
,

1002 
guöt
 
deÁu…_vÆue
,

1003 
GP¨amFœgs
 
Êags
);

1004 
GP¨amS≥c
* 
g_∑øm_•ec_Êﬂt
 (c⁄° 
gch¨
 *
«me
,

1005 c⁄° 
gch¨
 *
nick
,

1006 c⁄° 
gch¨
 *
blurb
,

1007 
gÊﬂt
 
möimum
,

1008 
gÊﬂt
 
maximum
,

1009 
gÊﬂt
 
deÁu…_vÆue
,

1010 
GP¨amFœgs
 
Êags
);

1011 
GP¨amS≥c
* 
g_∑øm_•ec_doubÀ
 (c⁄° 
gch¨
 *
«me
,

1012 c⁄° 
gch¨
 *
nick
,

1013 c⁄° 
gch¨
 *
blurb
,

1014 
gdoubÀ
 
möimum
,

1015 
gdoubÀ
 
maximum
,

1016 
gdoubÀ
 
deÁu…_vÆue
,

1017 
GP¨amFœgs
 
Êags
);

1018 
GP¨amS≥c
* 
g_∑øm_•ec_°rög
 (c⁄° 
gch¨
 *
«me
,

1019 c⁄° 
gch¨
 *
nick
,

1020 c⁄° 
gch¨
 *
blurb
,

1021 c⁄° 
gch¨
 *
deÁu…_vÆue
,

1022 
GP¨amFœgs
 
Êags
);

1023 
GP¨amS≥c
* 
g_∑øm_•ec_∑øm
 (c⁄° 
gch¨
 *
«me
,

1024 c⁄° 
gch¨
 *
nick
,

1025 c⁄° 
gch¨
 *
blurb
,

1026 
GTy≥
 
∑øm_ty≥
,

1027 
GP¨amFœgs
 
Êags
);

1028 
GP¨amS≥c
* 
g_∑øm_•ec_boxed
 (c⁄° 
gch¨
 *
«me
,

1029 c⁄° 
gch¨
 *
nick
,

1030 c⁄° 
gch¨
 *
blurb
,

1031 
GTy≥
 
boxed_ty≥
,

1032 
GP¨amFœgs
 
Êags
);

1033 
GP¨amS≥c
* 
g_∑øm_•ec_poöãr
 (c⁄° 
gch¨
 *
«me
,

1034 c⁄° 
gch¨
 *
nick
,

1035 c⁄° 
gch¨
 *
blurb
,

1036 
GP¨amFœgs
 
Êags
);

1037 
GP¨amS≥c
* 
g_∑øm_•ec_vÆue_¨øy
 (c⁄° 
gch¨
 *
«me
,

1038 c⁄° 
gch¨
 *
nick
,

1039 c⁄° 
gch¨
 *
blurb
,

1040 
GP¨amS≥c
 *
ñemít_•ec
,

1041 
GP¨amFœgs
 
Êags
);

1042 
GP¨amS≥c
* 
g_∑øm_•ec_obje˘
 (c⁄° 
gch¨
 *
«me
,

1043 c⁄° 
gch¨
 *
nick
,

1044 c⁄° 
gch¨
 *
blurb
,

1045 
GTy≥
 
obje˘_ty≥
,

1046 
GP¨amFœgs
 
Êags
);

1047 
GP¨amS≥c
* 
g_∑øm_•ec_ovîride
 (c⁄° 
gch¨
 *
«me
,

1048 
GP¨amS≥c
 *
ovîriddí
);

1049 
GP¨amS≥c
* 
g_∑øm_•ec_gty≥
 (c⁄° 
gch¨
 *
«me
,

1050 c⁄° 
gch¨
 *
nick
,

1051 c⁄° 
gch¨
 *
blurb
,

1052 
GTy≥
 
is_a_ty≥
,

1053 
GP¨amFœgs
 
Êags
);

1059 #i‚de‡
GOBJECT_VAR


1060 #ifde‡
G_PLATFORM_WIN32


1061 #ifde‡
GOBJECT_STATIC_COMPILATION


1062 
	#GOBJECT_VAR
 

	)

1064 #ifde‡
GOBJECT_COMPILATION


1065 #ifde‡
DLL_EXPORT


1066 
	#GOBJECT_VAR
 
	`__de˛•ec
(
dŒexp‹t
)

	)

1068 
	#GOBJECT_VAR
 

	)

1071 
	#GOBJECT_VAR
 
	`__de˛•ec
(
dŒimp‹t
)

	)

1075 
	#GOBJECT_VAR
 

	)

1079 
GOBJECT_VAR
 
GTy≥
 *
g_∑øm_•ec_ty≥s
;

1081 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gsignal.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_SIGNAL_H__


24 
	#__G_SIGNAL_H__


	)

26 
	~<gobje˘/g˛osuª.h
>

27 
	~<gobje˘/gvÆue.h
>

28 
	~<gobje˘/g∑øm.h
>

29 
	~<gobje˘/gm¨shÆ.h
>

31 
G_BEGIN_DECLS


34 
_GSig«lQuîy
 
	tGSig«lQuîy
;

35 
_GSig«lInvoˇti⁄Höt
 
	tGSig«lInvoˇti⁄Höt
;

45 
GClosuªM¨shÆ
 
	tGSig«lCM¨shÆÀr
;

64 
	$gboﬁón
 (*
	tGSig«lEmissi⁄Hook
Ë(
	tGSig«lInvoˇti⁄Höt
 *
	tihöt
,

65 
	tguöt
 
	tn_∑øm_vÆues
,

66 c⁄° 
	tGVÆue
 *
	t∑øm_vÆues
,

67 
	tgpoöãr
 
	td©a
);

87 
	$gboﬁón
 (*
	tGSig«lAccumuœt‹
Ë(
	tGSig«lInvoˇti⁄Höt
 *
	tihöt
,

88 
	tGVÆue
 *
	tªtu∫_accu
,

89 c⁄° 
	tGVÆue
 *
	th™dÀr_ªtu∫
,

90 
	tgpoöãr
 
	td©a
);

118 
G_SIGNAL_RUN_FIRST
 = 1 << 0,

119 
G_SIGNAL_RUN_LAST
 = 1 << 1,

120 
G_SIGNAL_RUN_CLEANUP
 = 1 << 2,

121 
G_SIGNAL_NO_RECURSE
 = 1 << 3,

122 
G_SIGNAL_DETAILED
 = 1 << 4,

123 
G_SIGNAL_ACTION
 = 1 << 5,

124 
G_SIGNAL_NO_HOOKS
 = 1 << 6

125 } 
	tGSig«lFœgs
;

131 
	#G_SIGNAL_FLAGS_MASK
 0x7f

	)

144 
G_CONNECT_AFTER
 = 1 << 0,

145 
G_CONNECT_SWAPPED
 = 1 << 1

146 } 
	tGC⁄√˘Fœgs
;

162 
G_SIGNAL_MATCH_ID
 = 1 << 0,

163 
G_SIGNAL_MATCH_DETAIL
 = 1 << 1,

164 
G_SIGNAL_MATCH_CLOSURE
 = 1 << 2,

165 
G_SIGNAL_MATCH_FUNC
 = 1 << 3,

166 
G_SIGNAL_MATCH_DATA
 = 1 << 4,

167 
G_SIGNAL_MATCH_UNBLOCKED
 = 1 << 5

168 } 
	tGSig«lM©chTy≥
;

174 
	#G_SIGNAL_MATCH_MASK
 0x3f

	)

196 
	#G_SIGNAL_TYPE_STATIC_SCOPE
 (
G_TYPE_FLAG_RESERVED_ID_BIT
)

	)

211 
	s_GSig«lInvoˇti⁄Höt


213 
guöt
 
sig«l_id
;

214 
GQu¨k
 
dëaû
;

215 
GSig«lFœgs
 
run_ty≥
;

237 
	s_GSig«lQuîy


239 
guöt
 
sig«l_id
;

240 c⁄° 
gch¨
 *
sig«l_«me
;

241 
GTy≥
 
ôy≥
;

242 
GSig«lFœgs
 
sig«l_Êags
;

243 
GTy≥
 
ªtu∫_ty≥
;

244 
guöt
 
n_∑øms
;

245 c⁄° 
GTy≥
 *
∑øm_ty≥s
;

250 
guöt
 
	`g_sig«l_√wv
 (c⁄° 
gch¨
 *
sig«l_«me
,

251 
GTy≥
 
ôy≥
,

252 
GSig«lFœgs
 
sig«l_Êags
,

253 
GClosuª
 *
˛ass_˛osuª
,

254 
GSig«lAccumuœt‹
 
accumuœt‹
,

255 
gpoöãr
 
accu_d©a
,

256 
GSig«lCM¨shÆÀr
 
c_m¨shÆÀr
,

257 
GTy≥
 
ªtu∫_ty≥
,

258 
guöt
 
n_∑øms
,

259 
GTy≥
 *
∑øm_ty≥s
);

260 
guöt
 
	`g_sig«l_√w_vÆi°
 (c⁄° 
gch¨
 *
sig«l_«me
,

261 
GTy≥
 
ôy≥
,

262 
GSig«lFœgs
 
sig«l_Êags
,

263 
GClosuª
 *
˛ass_˛osuª
,

264 
GSig«lAccumuœt‹
 
accumuœt‹
,

265 
gpoöãr
 
accu_d©a
,

266 
GSig«lCM¨shÆÀr
 
c_m¨shÆÀr
,

267 
GTy≥
 
ªtu∫_ty≥
,

268 
guöt
 
n_∑øms
,

269 
va_li°
 
¨gs
);

270 
guöt
 
	`g_sig«l_√w
 (c⁄° 
gch¨
 *
sig«l_«me
,

271 
GTy≥
 
ôy≥
,

272 
GSig«lFœgs
 
sig«l_Êags
,

273 
guöt
 
˛ass_off£t
,

274 
GSig«lAccumuœt‹
 
accumuœt‹
,

275 
gpoöãr
 
accu_d©a
,

276 
GSig«lCM¨shÆÀr
 
c_m¨shÆÀr
,

277 
GTy≥
 
ªtu∫_ty≥
,

278 
guöt
 
n_∑øms
,

280 
guöt
 
	`g_sig«l_√w_˛ass_h™dÀr
 (c⁄° 
gch¨
 *
sig«l_«me
,

281 
GTy≥
 
ôy≥
,

282 
GSig«lFœgs
 
sig«l_Êags
,

283 
GCÆlback
 
˛ass_h™dÀr
,

284 
GSig«lAccumuœt‹
 
accumuœt‹
,

285 
gpoöãr
 
accu_d©a
,

286 
GSig«lCM¨shÆÀr
 
c_m¨shÆÀr
,

287 
GTy≥
 
ªtu∫_ty≥
,

288 
guöt
 
n_∑øms
,

291 
	`g_sig«l_emôv
 (c⁄° 
GVÆue
 *
ö°™˚_™d_∑øms
,

292 
guöt
 
sig«l_id
,

293 
GQu¨k
 
dëaû
,

294 
GVÆue
 *
ªtu∫_vÆue
);

295 
	`g_sig«l_emô_vÆi°
 (
gpoöãr
 
ö°™˚
,

296 
guöt
 
sig«l_id
,

297 
GQu¨k
 
dëaû
,

298 
va_li°
 
v¨_¨gs
);

299 
	`g_sig«l_emô
 (
gpoöãr
 
ö°™˚
,

300 
guöt
 
sig«l_id
,

301 
GQu¨k
 
dëaû
,

303 
	`g_sig«l_emô_by_«me
 (
gpoöãr
 
ö°™˚
,

304 c⁄° 
gch¨
 *
dëaûed_sig«l
,

306 
guöt
 
	`g_sig«l_lookup
 (c⁄° 
gch¨
 *
«me
,

307 
GTy≥
 
ôy≥
);

308 
G_CONST_RETURN
 
gch¨
* 
	`g_sig«l_«me
 (
guöt
 
sig«l_id
);

309 
	`g_sig«l_quîy
 (
guöt
 
sig«l_id
,

310 
GSig«lQuîy
 *
quîy
);

311 
guöt
* 
	`g_sig«l_li°_ids
 (
GTy≥
 
ôy≥
,

312 
guöt
 *
n_ids
);

313 
gboﬁón
 
	`g_sig«l_∑r£_«me
 (c⁄° 
gch¨
 *
dëaûed_sig«l
,

314 
GTy≥
 
ôy≥
,

315 
guöt
 *
sig«l_id_p
,

316 
GQu¨k
 *
dëaû_p
,

317 
gboﬁón
 
f‹˚_dëaû_qu¨k
);

318 
GSig«lInvoˇti⁄Höt
* 
	`g_sig«l_gë_övoˇti⁄_höt
 (
gpoöãr
 
ö°™˚
);

322 
	`g_sig«l_°›_emissi⁄
 (
gpoöãr
 
ö°™˚
,

323 
guöt
 
sig«l_id
,

324 
GQu¨k
 
dëaû
);

325 
	`g_sig«l_°›_emissi⁄_by_«me
 (
gpoöãr
 
ö°™˚
,

326 c⁄° 
gch¨
 *
dëaûed_sig«l
);

327 
gul⁄g
 
	`g_sig«l_add_emissi⁄_hook
 (
guöt
 
sig«l_id
,

328 
GQu¨k
 
dëaû
,

329 
GSig«lEmissi⁄Hook
 
hook_func
,

330 
gpoöãr
 
hook_d©a
,

331 
GDe°royNŸify
 
d©a_de°roy
);

332 
	`g_sig«l_ªmove_emissi⁄_hook
 (
guöt
 
sig«l_id
,

333 
gul⁄g
 
hook_id
);

337 
gboﬁón
 
	`g_sig«l_has_h™dÀr_≥ndög
 (
gpoöãr
 
ö°™˚
,

338 
guöt
 
sig«l_id
,

339 
GQu¨k
 
dëaû
,

340 
gboﬁón
 
may_be_blocked
);

341 
gul⁄g
 
	`g_sig«l_c⁄√˘_˛osuª_by_id
 (
gpoöãr
 
ö°™˚
,

342 
guöt
 
sig«l_id
,

343 
GQu¨k
 
dëaû
,

344 
GClosuª
 *
˛osuª
,

345 
gboﬁón
 
a·î
);

346 
gul⁄g
 
	`g_sig«l_c⁄√˘_˛osuª
 (
gpoöãr
 
ö°™˚
,

347 c⁄° 
gch¨
 *
dëaûed_sig«l
,

348 
GClosuª
 *
˛osuª
,

349 
gboﬁón
 
a·î
);

350 
gul⁄g
 
	`g_sig«l_c⁄√˘_d©a
 (
gpoöãr
 
ö°™˚
,

351 c⁄° 
gch¨
 *
dëaûed_sig«l
,

352 
GCÆlback
 
c_h™dÀr
,

353 
gpoöãr
 
d©a
,

354 
GClosuªNŸify
 
de°roy_d©a
,

355 
GC⁄√˘Fœgs
 
c⁄√˘_Êags
);

356 
	`g_sig«l_h™dÀr_block
 (
gpoöãr
 
ö°™˚
,

357 
gul⁄g
 
h™dÀr_id
);

358 
	`g_sig«l_h™dÀr_unblock
 (
gpoöãr
 
ö°™˚
,

359 
gul⁄g
 
h™dÀr_id
);

360 
	`g_sig«l_h™dÀr_disc⁄√˘
 (
gpoöãr
 
ö°™˚
,

361 
gul⁄g
 
h™dÀr_id
);

362 
gboﬁón
 
	`g_sig«l_h™dÀr_is_c⁄√˘ed
 (
gpoöãr
 
ö°™˚
,

363 
gul⁄g
 
h™dÀr_id
);

364 
gul⁄g
 
	`g_sig«l_h™dÀr_föd
 (
gpoöãr
 
ö°™˚
,

365 
GSig«lM©chTy≥
 
mask
,

366 
guöt
 
sig«l_id
,

367 
GQu¨k
 
dëaû
,

368 
GClosuª
 *
˛osuª
,

369 
gpoöãr
 
func
,

370 
gpoöãr
 
d©a
);

371 
guöt
 
	`g_sig«l_h™dÀrs_block_m©ched
 (
gpoöãr
 
ö°™˚
,

372 
GSig«lM©chTy≥
 
mask
,

373 
guöt
 
sig«l_id
,

374 
GQu¨k
 
dëaû
,

375 
GClosuª
 *
˛osuª
,

376 
gpoöãr
 
func
,

377 
gpoöãr
 
d©a
);

378 
guöt
 
	`g_sig«l_h™dÀrs_unblock_m©ched
 (
gpoöãr
 
ö°™˚
,

379 
GSig«lM©chTy≥
 
mask
,

380 
guöt
 
sig«l_id
,

381 
GQu¨k
 
dëaû
,

382 
GClosuª
 *
˛osuª
,

383 
gpoöãr
 
func
,

384 
gpoöãr
 
d©a
);

385 
guöt
 
	`g_sig«l_h™dÀrs_disc⁄√˘_m©ched
 (
gpoöãr
 
ö°™˚
,

386 
GSig«lM©chTy≥
 
mask
,

387 
guöt
 
sig«l_id
,

388 
GQu¨k
 
dëaû
,

389 
GClosuª
 *
˛osuª
,

390 
gpoöãr
 
func
,

391 
gpoöãr
 
d©a
);

395 
	`g_sig«l_ovîride_˛ass_˛osuª
 (
guöt
 
sig«l_id
,

396 
GTy≥
 
ö°™˚_ty≥
,

397 
GClosuª
 *
˛ass_˛osuª
);

398 
	`g_sig«l_ovîride_˛ass_h™dÀr
 (c⁄° 
gch¨
 *
sig«l_«me
,

399 
GTy≥
 
ö°™˚_ty≥
,

400 
GCÆlback
 
˛ass_h™dÀr
);

401 
	`g_sig«l_chaö_‰om_ovîriddí
 (c⁄° 
GVÆue
 *
ö°™˚_™d_∑øms
,

402 
GVÆue
 *
ªtu∫_vÆue
);

403 
	`g_sig«l_chaö_‰om_ovîriddí_h™dÀr
 (
gpoöãr
 
ö°™˚
,

421 
	#g_sig«l_c⁄√˘
(
ö°™˚
, 
dëaûed_sig«l
, 
c_h™dÀr
, 
d©a
) \

422 
	`g_sig«l_c⁄√˘_d©a
 ((
ö°™˚
), (
dëaûed_sig«l
), (
c_h™dÀr
), (
d©a
), 
NULL
, (
GC⁄√˘Fœgs
Ë0)

	)

436 
	#g_sig«l_c⁄√˘_a·î
(
ö°™˚
, 
dëaûed_sig«l
, 
c_h™dÀr
, 
d©a
) \

437 
	`g_sig«l_c⁄√˘_d©a
 ((
ö°™˚
), (
dëaûed_sig«l
), (
c_h™dÀr
), (
d©a
), 
NULL
, 
G_CONNECT_AFTER
)

	)

452 
	#g_sig«l_c⁄√˘_sw≠≥d
(
ö°™˚
, 
dëaûed_sig«l
, 
c_h™dÀr
, 
d©a
) \

453 
	`g_sig«l_c⁄√˘_d©a
 ((
ö°™˚
), (
dëaûed_sig«l
), (
c_h™dÀr
), (
d©a
), 
NULL
, 
G_CONNECT_SWAPPED
)

	)

464 
	#g_sig«l_h™dÀrs_disc⁄√˘_by_func
(
ö°™˚
, 
func
, 
d©a
) \

465 
	`g_sig«l_h™dÀrs_disc⁄√˘_m©ched
 ((
ö°™˚
), \

466 (
GSig«lM©chTy≥
Ë(
G_SIGNAL_MATCH_FUNC
 | 
G_SIGNAL_MATCH_DATA
), \

467 0, 0, 
NULL
, (
func
), (
d©a
))

	)

478 
	#g_sig«l_h™dÀrs_block_by_func
(
ö°™˚
, 
func
, 
d©a
) \

479 
	`g_sig«l_h™dÀrs_block_m©ched
 ((
ö°™˚
), \

480 (
GSig«lM©chTy≥
Ë(
G_SIGNAL_MATCH_FUNC
 | 
G_SIGNAL_MATCH_DATA
), \

481 0, 0, 
NULL
, (
func
), (
d©a
))

	)

492 
	#g_sig«l_h™dÀrs_unblock_by_func
(
ö°™˚
, 
func
, 
d©a
) \

493 
	`g_sig«l_h™dÀrs_unblock_m©ched
 ((
ö°™˚
), \

494 (
GSig«lM©chTy≥
Ë(
G_SIGNAL_MATCH_FUNC
 | 
G_SIGNAL_MATCH_DATA
), \

495 0, 0, 
NULL
, (
func
), (
d©a
))

	)

498 
gboﬁón
 
	`g_sig«l_accumuœt‹_åue_h™dÀd
 (
GSig«lInvoˇti⁄Höt
 *
ihöt
,

499 
GVÆue
 *
ªtu∫_accu
,

500 c⁄° 
GVÆue
 *
h™dÀr_ªtu∫
,

501 
gpoöãr
 
dummy
);

504 
	`g_sig«l_h™dÀrs_de°roy
 (
gpoöãr
 
ö°™˚
);

505 
	`_g_sig«ls_de°roy
 (
GTy≥
 
ôy≥
);

507 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/gsourceclosure.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_SOURCECLOSURE_H__


24 
	#__G_SOURCECLOSURE_H__


	)

26 
	~<gobje˘/g˛osuª.h
>

28 
G_BEGIN_DECLS


30 
g_sour˚_£t_˛osuª
 (
GSour˚
 *
sour˚
,

31 
GClosuª
 *
˛osuª
);

33 
GTy≥
 
g_io_ch™√l_gë_ty≥
 ();

34 
GTy≥
 
g_io_c⁄dôi⁄_gë_ty≥
 ();

41 
	#G_TYPE_IO_CHANNEL
 (
	`g_io_ch™√l_gë_ty≥
 ())

	)

47 
	#G_TYPE_IO_CONDITION
 (
	`g_io_c⁄dôi⁄_gë_ty≥
 ())

	)

49 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gtype.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_TYPE_H__


24 
	#__G_TYPE_H__


	)

26 
	~<glib.h
>

28 
	gG_BEGIN_DECLS


40 
	#G_TYPE_FUNDAMENTAL
(
ty≥
Ë(
	`g_ty≥_fundamíèl
 (ty≥))

	)

47 
	#G_TYPE_FUNDAMENTAL_MAX
 (255 << 
G_TYPE_FUNDAMENTAL_SHIFT
)

	)

58 
	#G_TYPE_INVALID
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (0)

	)

65 
	#G_TYPE_NONE
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (1)

	)

71 
	#G_TYPE_INTERFACE
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (2)

	)

79 
	#G_TYPE_CHAR
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (3)

	)

85 
	#G_TYPE_UCHAR
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (4)

	)

91 
	#G_TYPE_BOOLEAN
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (5)

	)

97 
	#G_TYPE_INT
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (6)

	)

103 
	#G_TYPE_UINT
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (7)

	)

109 
	#G_TYPE_LONG
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (8)

	)

115 
	#G_TYPE_ULONG
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (9)

	)

121 
	#G_TYPE_INT64
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (10)

	)

127 
	#G_TYPE_UINT64
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (11)

	)

133 
	#G_TYPE_ENUM
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (12)

	)

139 
	#G_TYPE_FLAGS
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (13)

	)

145 
	#G_TYPE_FLOAT
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (14)

	)

151 
	#G_TYPE_DOUBLE
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (15)

	)

157 
	#G_TYPE_STRING
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (16)

	)

163 
	#G_TYPE_POINTER
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (17)

	)

169 
	#G_TYPE_BOXED
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (18)

	)

175 
	#G_TYPE_PARAM
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (19)

	)

181 
	#G_TYPE_OBJECT
 
	`G_TYPE_MAKE_FUNDAMENTAL
 (20)

	)

193 
	#G_TYPE_FUNDAMENTAL_SHIFT
 (2)

	)

204 
	#G_TYPE_MAKE_FUNDAMENTAL
(
x
Ë((
GTy≥
Ë((xË<< 
G_TYPE_FUNDAMENTAL_SHIFT
))

	)

211 
	#G_TYPE_RESERVED_GLIB_FIRST
 (21)

	)

217 
	#G_TYPE_RESERVED_GLIB_LAST
 (31)

	)

224 
	#G_TYPE_RESERVED_BSE_FIRST
 (32)

	)

230 
	#G_TYPE_RESERVED_BSE_LAST
 (48)

	)

237 
	#G_TYPE_RESERVED_USER_FIRST
 (49)

	)

250 
	#G_TYPE_IS_FUNDAMENTAL
(
ty≥
Ë(—y≥Ë<
G_TYPE_FUNDAMENTAL_MAX
)

	)

261 
	#G_TYPE_IS_DERIVED
(
ty≥
Ë(—y≥Ë> 
G_TYPE_FUNDAMENTAL_MAX
)

	)

276 
	#G_TYPE_IS_INTERFACE
(
ty≥
Ë(
	`G_TYPE_FUNDAMENTAL
 (ty≥Ë=
G_TYPE_INTERFACE
)

	)

285 
	#G_TYPE_IS_CLASSED
(
ty≥
Ë(
	`g_ty≥_ã°_Êags
 (—y≥), 
G_TYPE_FLAG_CLASSED
))

	)

295 
	#G_TYPE_IS_INSTANTIATABLE
(
ty≥
Ë(
	`g_ty≥_ã°_Êags
 (—y≥), 
G_TYPE_FLAG_INSTANTIATABLE
))

	)

305 
	#G_TYPE_IS_DERIVABLE
(
ty≥
Ë(
	`g_ty≥_ã°_Êags
 (—y≥), 
G_TYPE_FLAG_DERIVABLE
))

	)

315 
	#G_TYPE_IS_DEEP_DERIVABLE
(
ty≥
Ë(
	`g_ty≥_ã°_Êags
 (—y≥), 
G_TYPE_FLAG_DEEP_DERIVABLE
))

	)

326 
	#G_TYPE_IS_ABSTRACT
(
ty≥
Ë(
	`g_ty≥_ã°_Êags
 (—y≥), 
G_TYPE_FLAG_ABSTRACT
))

	)

337 
	#G_TYPE_IS_VALUE_ABSTRACT
(
ty≥
Ë(
	`g_ty≥_ã°_Êags
 (—y≥), 
G_TYPE_FLAG_VALUE_ABSTRACT
))

	)

346 
	#G_TYPE_IS_VALUE_TYPE
(
ty≥
Ë(
	`g_ty≥_check_is_vÆue_ty≥
 (ty≥))

	)

355 
	#G_TYPE_HAS_VALUE_TABLE
(
ty≥
Ë(
	`g_ty≥_vÆue_èbÀ_≥ek
 (ty≥Ë!
NULL
)

	)

366 #i‡ 
GLIB_SIZEOF_SIZE_T
 !
GLIB_SIZEOF_LONG
 || !
deföed
 
__˝lu•lus


367 
gsize
 
	tGTy≥
;

369 
gul⁄g
 
	tGTy≥
;

371 
_GVÆue
 
	tGVÆue
;

372 
_GTy≥CVÆue
 
	tGTy≥CVÆue
;

373 
_GTy≥Plugö
 
	tGTy≥Plugö
;

374 
_GTy≥Cœss
 
	tGTy≥Cœss
;

375 
_GTy≥I¡îÁ˚
 
	tGTy≥I¡îÁ˚
;

376 
_GTy≥In°™˚
 
	tGTy≥In°™˚
;

377 
_GTy≥Info
 
	tGTy≥Info
;

378 
_GTy≥FundamíèlInfo
 
	tGTy≥FundamíèlInfo
;

379 
_GI¡îÁ˚Info
 
	tGI¡îÁ˚Info
;

380 
_GTy≥VÆueTabÀ
 
	tGTy≥VÆueTabÀ
;

381 
_GTy≥Quîy
 
	tGTy≥Quîy
;

391 
	s_GTy≥Cœss


394 
GTy≥
 
	mg_ty≥
;

401 
	s_GTy≥In°™˚


404 
GTy≥Cœss
 *
	mg_˛ass
;

411 
	s_GTy≥I¡îÁ˚


414 
GTy≥
 
	mg_ty≥
;

415 
GTy≥
 
	mg_ö°™˚_ty≥
;

427 
	s_GTy≥Quîy


429 
GTy≥
 
	mty≥
;

430 c⁄° 
gch¨
 *
	mty≥_«me
;

431 
guöt
 
	m˛ass_size
;

432 
guöt
 
	mö°™˚_size
;

451 
	#G_TYPE_CHECK_INSTANCE
(
ö°™˚
Ë(
	`_G_TYPE_CHI
 ((
GTy≥In°™˚
*Ë(ö°™˚)))

	)

464 
	#G_TYPE_CHECK_INSTANCE_CAST
(
ö°™˚
, 
g_ty≥
, 
c_ty≥
Ë(
	`_G_TYPE_CIC
 ((ö°™˚), (g_ty≥), c_ty≥))

	)

476 
	#G_TYPE_CHECK_INSTANCE_TYPE
(
ö°™˚
, 
g_ty≥
Ë(
	`_G_TYPE_CIT
 ((ö°™˚), (g_ty≥)))

	)

493 
	#G_TYPE_INSTANCE_GET_CLASS
(
ö°™˚
, 
g_ty≥
, 
c_ty≥
Ë(
	`_G_TYPE_IGC
 ((ö°™˚), (g_ty≥), c_ty≥))

	)

506 
	#G_TYPE_INSTANCE_GET_INTERFACE
(
ö°™˚
, 
g_ty≥
, 
c_ty≥
Ë(
	`_G_TYPE_IGI
 ((ö°™˚), (g_ty≥), c_ty≥))

	)

519 
	#G_TYPE_CHECK_CLASS_CAST
(
g_˛ass
, 
g_ty≥
, 
c_ty≥
Ë(
	`_G_TYPE_CCC
 ((g_˛ass), (g_ty≥), c_ty≥))

	)

532 
	#G_TYPE_CHECK_CLASS_TYPE
(
g_˛ass
, 
g_ty≥
Ë(
	`_G_TYPE_CCT
 ((g_˛ass), (g_ty≥)))

	)

544 
	#G_TYPE_CHECK_VALUE
(
vÆue
Ë(
	`_G_TYPE_CHV
 ((vÆue)))

	)

557 
	#G_TYPE_CHECK_VALUE_TYPE
(
vÆue
, 
g_ty≥
Ë(
	`_G_TYPE_CVH
 ((vÆue), (g_ty≥)))

	)

568 
	#G_TYPE_FROM_INSTANCE
(
ö°™˚
Ë(
	`G_TYPE_FROM_CLASS
 (((
GTy≥In°™˚
*Ë(ö°™˚))->
g_˛ass
))

	)

579 
	#G_TYPE_FROM_CLASS
(
g_˛ass
Ë(((
GTy≥Cœss
*Ë(g_˛ass))->
g_ty≥
)

	)

590 
	#G_TYPE_FROM_INTERFACE
(
g_iÁ˚
Ë(((
GTy≥I¡îÁ˚
*Ë(g_iÁ˚))->
g_ty≥
)

	)

607 
	#G_TYPE_INSTANCE_GET_PRIVATE
(
ö°™˚
, 
g_ty≥
, 
c_ty≥
Ë((c_ty≥*Ë
	`g_ty≥_ö°™˚_gë_¥iv©e
 ((
GTy≥In°™˚
*Ë(ö°™˚), (g_ty≥)))

	)

625 
	mG_TYPE_DEBUG_NONE
 = 0,

626 
	mG_TYPE_DEBUG_OBJECTS
 = 1 << 0,

627 
	mG_TYPE_DEBUG_SIGNALS
 = 1 << 1,

628 
	mG_TYPE_DEBUG_MASK
 = 0x03

629 } 
	tGTy≥DebugFœgs
;

633 
g_ty≥_öô
 ();

634 
g_ty≥_öô_wôh_debug_Êags
 (
GTy≥DebugFœgs
 
debug_Êags
);

635 
G_CONST_RETURN
 
gch¨
* 
g_ty≥_«me
 (
GTy≥
 
ty≥
);

636 
GQu¨k
 
g_ty≥_q«me
 (
GTy≥
 
ty≥
);

637 
GTy≥
 
g_ty≥_‰om_«me
 (c⁄° 
gch¨
 *
«me
);

638 
GTy≥
 
g_ty≥_∑ª¡
 (GTy≥ 
ty≥
);

639 
guöt
 
g_ty≥_dïth
 (
GTy≥
 
ty≥
);

640 
GTy≥
 
g_ty≥_√xt_ba£
 (GTy≥ 
Àaf_ty≥
,

641 
GTy≥
 
roŸ_ty≥
);

642 
gboﬁón
 
g_ty≥_is_a
 (
GTy≥
 
ty≥
,

643 
GTy≥
 
is_a_ty≥
);

644 
gpoöãr
 
g_ty≥_˛ass_ªf
 (
GTy≥
 
ty≥
);

645 
gpoöãr
 
g_ty≥_˛ass_≥ek
 (
GTy≥
 
ty≥
);

646 
gpoöãr
 
g_ty≥_˛ass_≥ek_°©ic
 (
GTy≥
 
ty≥
);

647 
g_ty≥_˛ass_uƒef
 (
gpoöãr
 
g_˛ass
);

648 
gpoöãr
 
g_ty≥_˛ass_≥ek_∑ª¡
 (gpoöã∏
g_˛ass
);

649 
gpoöãr
 
g_ty≥_öãrÁ˚_≥ek
 (gpoöã∏
ö°™˚_˛ass
,

650 
GTy≥
 
iÁ˚_ty≥
);

651 
gpoöãr
 
g_ty≥_öãrÁ˚_≥ek_∑ª¡
 (gpoöã∏
g_iÁ˚
);

653 
gpoöãr
 
g_ty≥_deÁu…_öãrÁ˚_ªf
 (
GTy≥
 
g_ty≥
);

654 
gpoöãr
 
g_ty≥_deÁu…_öãrÁ˚_≥ek
 (
GTy≥
 
g_ty≥
);

655 
g_ty≥_deÁu…_öãrÁ˚_uƒef
 (
gpoöãr
 
g_iÁ˚
);

658 
GTy≥
* 
g_ty≥_chûdªn
 (GTy≥ 
ty≥
,

659 
guöt
 *
n_chûdªn
);

660 
GTy≥
* 
g_ty≥_öãrÁ˚s
 (GTy≥ 
ty≥
,

661 
guöt
 *
n_öãrÁ˚s
);

664 
g_ty≥_£t_qd©a
 (
GTy≥
 
ty≥
,

665 
GQu¨k
 
qu¨k
,

666 
gpoöãr
 
d©a
);

667 
gpoöãr
 
g_ty≥_gë_qd©a
 (
GTy≥
 
ty≥
,

668 
GQu¨k
 
qu¨k
);

669 
g_ty≥_quîy
 (
GTy≥
 
ty≥
,

670 
GTy≥Quîy
 *
quîy
);

687 (*
	tGBa£InôFunc
Ë(
	tgpoöãr
 
	tg_˛ass
);

698 (*
	tGBa£FöÆizeFunc
Ë(
	tgpoöãr
 
	tg_˛ass
);

803 (*
	tGCœssInôFunc
Ë(
	tgpoöãr
 
	tg_˛ass
,

804 
	tgpoöãr
 
	t˛ass_d©a
);

818 (*
	tGCœssFöÆizeFunc
Ë(
	tgpoöãr
 
	tg_˛ass
,

819 
	tgpoöãr
 
	t˛ass_d©a
);

833 (*
	tGIn°™˚InôFunc
Ë(
	tGTy≥In°™˚
 *
	tö°™˚
,

834 
	tgpoöãr
 
	tg_˛ass
);

844 (*
	tGI¡îÁ˚InôFunc
Ë(
	tgpoöãr
 
	tg_iÁ˚
,

845 
	tgpoöãr
 
	tiÁ˚_d©a
);

855 (*
	tGI¡îÁ˚FöÆizeFunc
Ë(
	tgpoöãr
 
	tg_iÁ˚
,

856 
	tgpoöãr
 
	tiÁ˚_d©a
);

875 
	$gboﬁón
 (*
	tGTy≥CœssCacheFunc
Ë(
	tgpoöãr
 
	tˇche_d©a
,

876 
	tGTy≥Cœss
 *
	tg_˛ass
);

887 (*
	tGTy≥I¡îÁ˚CheckFunc
Ë(
	tgpoöãr
 
	tcheck_d©a
,

888 
	tgpoöãr
 
	tg_iÁ˚
);

901 
G_TYPE_FLAG_CLASSED
 = (1 << 0),

902 
G_TYPE_FLAG_INSTANTIATABLE
 = (1 << 1),

903 
G_TYPE_FLAG_DERIVABLE
 = (1 << 2),

904 
G_TYPE_FLAG_DEEP_DERIVABLE
 = (1 << 3)

905 } 
	tGTy≥FundamíèlFœgs
;

918 
G_TYPE_FLAG_ABSTRACT
 = (1 << 4),

919 
G_TYPE_FLAG_VALUE_ABSTRACT
 = (1 << 5)

920 } 
	tGTy≥Fœgs
;

951 
	s_GTy≥Info


954 
guöt16
 
˛ass_size
;

956 
GBa£InôFunc
 
ba£_öô
;

957 
GBa£FöÆizeFunc
 
ba£_föÆize
;

960 
GCœssInôFunc
 
˛ass_öô
;

961 
GCœssFöÆizeFunc
 
˛ass_föÆize
;

962 
gc⁄°poöãr
 
˛ass_d©a
;

965 
guöt16
 
ö°™˚_size
;

966 
guöt16
 
n_¥óŒocs
;

967 
GIn°™˚InôFunc
 
ö°™˚_öô
;

970 c⁄° 
GTy≥VÆueTabÀ
 *
vÆue_èbÀ
;

979 
	s_GTy≥FundamíèlInfo


981 
GTy≥FundamíèlFœgs
 
ty≥_Êags
;

992 
	s_GI¡îÁ˚Info


994 
GI¡îÁ˚InôFunc
 
öãrÁ˚_öô
;

995 
GI¡îÁ˚FöÆizeFunc
 
öãrÁ˚_föÆize
;

996 
gpoöãr
 
öãrÁ˚_d©a
;

1166 
	s_GTy≥VÆueTabÀ


1168 (*
vÆue_öô
Ë(
GVÆue
 *
vÆue
);

1169 (*
vÆue_‰ì
Ë(
GVÆue
 *
vÆue
);

1170 (*
vÆue_c›y
Ë(c⁄° 
GVÆue
 *
§c_vÆue
,

1171 
GVÆue
 *
de°_vÆue
);

1173 
	`gpoöãr
 (*
vÆue_≥ek_poöãr
Ë(c⁄° 
GVÆue
 *
vÆue
);

1174 
gch¨
 *
cﬁÀ˘_f‹m©
;

1175 
gch¨
* (*
cﬁÀ˘_vÆue
Ë(
GVÆue
 *
vÆue
,

1176 
guöt
 
n_cﬁÀ˘_vÆues
,

1177 
GTy≥CVÆue
 *
cﬁÀ˘_vÆues
,

1178 
guöt
 
cﬁÀ˘_Êags
);

1179 
gch¨
 *
lc›y_f‹m©
;

1180 
gch¨
* (*
lc›y_vÆue
Ë(c⁄° 
GVÆue
 *
vÆue
,

1181 
guöt
 
n_cﬁÀ˘_vÆues
,

1182 
GTy≥CVÆue
 *
cﬁÀ˘_vÆues
,

1183 
guöt
 
cﬁÀ˘_Êags
);

1185 
GTy≥
 
	`g_ty≥_ªgi°î_°©ic
 (GTy≥ 
∑ª¡_ty≥
,

1186 c⁄° 
gch¨
 *
ty≥_«me
,

1187 c⁄° 
GTy≥Info
 *
öfo
,

1188 
GTy≥Fœgs
 
Êags
);

1189 
GTy≥
 
	`g_ty≥_ªgi°î_°©ic_sim∂e
 (GTy≥ 
∑ª¡_ty≥
,

1190 c⁄° 
gch¨
 *
ty≥_«me
,

1191 
guöt
 
˛ass_size
,

1192 
GCœssInôFunc
 
˛ass_öô
,

1193 
guöt
 
ö°™˚_size
,

1194 
GIn°™˚InôFunc
 
ö°™˚_öô
,

1195 
GTy≥Fœgs
 
Êags
);

1197 
GTy≥
 
	`g_ty≥_ªgi°î_dy«mic
 (GTy≥ 
∑ª¡_ty≥
,

1198 c⁄° 
gch¨
 *
ty≥_«me
,

1199 
GTy≥Plugö
 *
∂ugö
,

1200 
GTy≥Fœgs
 
Êags
);

1201 
GTy≥
 
	`g_ty≥_ªgi°î_fundamíèl
 (GTy≥ 
ty≥_id
,

1202 c⁄° 
gch¨
 *
ty≥_«me
,

1203 c⁄° 
GTy≥Info
 *
öfo
,

1204 c⁄° 
GTy≥FundamíèlInfo
 *
föfo
,

1205 
GTy≥Fœgs
 
Êags
);

1206 
	`g_ty≥_add_öãrÁ˚_°©ic
 (
GTy≥
 
ö°™˚_ty≥
,

1207 
GTy≥
 
öãrÁ˚_ty≥
,

1208 c⁄° 
GI¡îÁ˚Info
 *
öfo
);

1209 
	`g_ty≥_add_öãrÁ˚_dy«mic
 (
GTy≥
 
ö°™˚_ty≥
,

1210 
GTy≥
 
öãrÁ˚_ty≥
,

1211 
GTy≥Plugö
 *
∂ugö
);

1212 
	`g_ty≥_öãrÁ˚_add_¥îequisôe
 (
GTy≥
 
öãrÁ˚_ty≥
,

1213 
GTy≥
 
¥îequisôe_ty≥
);

1214 
GTy≥
*
	`g_ty≥_öãrÁ˚_¥îequisôes
 (GTy≥ 
öãrÁ˚_ty≥
,

1215 
guöt
 *
n_¥îequisôes
);

1216 
	`g_ty≥_˛ass_add_¥iv©e
 (
gpoöãr
 
g_˛ass
,

1217 
gsize
 
¥iv©e_size
);

1218 
gpoöãr
 
	`g_ty≥_ö°™˚_gë_¥iv©e
 (
GTy≥In°™˚
 *
ö°™˚
,

1219 
GTy≥
 
¥iv©e_ty≥
);

1237 
	#G_DEFINE_TYPE
(
TN
, 
t_n
, 
T_P
Ë
	`G_DEFINE_TYPE_EXTENDED
 (TN,Å_n, T_P, 0, {
	}
})

	)

1252 
	#G_DEFINE_TYPE_WITH_CODE
(
TN
, 
t_n
, 
T_P
, 
_C_
Ë
	`_G_DEFINE_TYPE_EXTENDED_BEGIN
 (TN,Å_n, T_P, 0Ë{_C_;} 
	`_G_DEFINE_TYPE_EXTENDED_END
()

	)

1266 
	#G_DEFINE_ABSTRACT_TYPE
(
TN
, 
t_n
, 
T_P
Ë
	`G_DEFINE_TYPE_EXTENDED
 (TN,Å_n, T_P, 
G_TYPE_FLAG_ABSTRACT
, {})

	)

1282 
	#G_DEFINE_ABSTRACT_TYPE_WITH_CODE
(
TN
, 
t_n
, 
T_P
, 
_C_
Ë
	`_G_DEFINE_TYPE_EXTENDED_BEGIN
 (TN,Å_n, T_P, 
G_TYPE_FLAG_ABSTRACT
Ë{_C_;} 
	`_G_DEFINE_TYPE_EXTENDED_END
()

	)

1345 
	#G_DEFINE_TYPE_EXTENDED
(
TN
, 
t_n
, 
T_P
, 
_f_
, 
_C_
Ë
	`_G_DEFINE_TYPE_EXTENDED_BEGIN
 (TN,Å_n, T_P, _f_Ë{_C_;} 
	`_G_DEFINE_TYPE_EXTENDED_END
()

	)

1361 
	#G_IMPLEMENT_INTERFACE
(
TYPE_IFACE
, 
iÁ˚_öô
) { \

1362 c⁄° 
GI¡îÁ˚Info
 
g_im∂emít_öãrÁ˚_öfo
 = { \

1363 (
GI¡îÁ˚InôFunc
Ë
iÁ˚_öô
, 
NULL
, NULL \

1365 
	`g_ty≥_add_öãrÁ˚_°©ic
 (
g_deföe_ty≥_id
, 
TYPE_IFACE
, &
g_im∂emít_öãrÁ˚_öfo
); \

1366 }

	)

1368 
	#_G_DEFINE_TYPE_EXTENDED_BEGIN
(
Ty≥Name
, 
ty≥_«me
, 
TYPE_PARENT
, 
Êags
) \

1370 
ty≥_«me
##
	`_öô
 (
Ty≥Name
 *
£lf
); \

1371 
ty≥_«me
##
	`_˛ass_öô
 (
Ty≥Name
##
Cœss
 *
kœss
); \

1372 
gpoöãr
 
ty≥_«me
##
_∑ª¡_˛ass
 = 
NULL
; \

1373 
ty≥_«me
##
	`_˛ass_öã∫_öô
 (
gpoöãr
 
kœss
) \

1375 
ty≥_«me
##
_∑ª¡_˛ass
 = 
	`g_ty≥_˛ass_≥ek_∑ª¡
 (
kœss
); \

1376 
ty≥_«me
##
	`_˛ass_öô
 ((
Ty≥Name
##
Cœss
*Ë
kœss
); \

1379 
GTy≥
 \

1380 
ty≥_«me
##
	`_gë_ty≥
 () \

1382 vﬁ©ûê
gsize
 
g_deföe_ty≥_id__vﬁ©ûe
 = 0; \

1383 i‡(
	`g_⁄˚_öô_íãr
 (&
g_deföe_ty≥_id__vﬁ©ûe
)) \

1385 
GTy≥
 
g_deföe_ty≥_id
 = \

1386 
	`g_ty≥_ªgi°î_°©ic_sim∂e
 (
TYPE_PARENT
, \

1387 
	`g_öã∫_°©ic_°rög
 (#TypeName), \

1388  (
Ty≥Name
##
Cœss
), \

1389 (
GCœssInôFunc
Ë
ty≥_«me
##
_˛ass_öã∫_öô
, \

1390  (
Ty≥Name
), \

1391 (
GIn°™˚InôFunc
Ë
ty≥_«me
##
_öô
, \

1392 (
GTy≥Fœgs
Ë
Êags
); \

1393 {

	)

1394 
	#_G_DEFINE_TYPE_EXTENDED_END
() \

1397 
	`g_⁄˚_öô_Àave
 (&
g_deföe_ty≥_id__vﬁ©ûe
, 
g_deföe_ty≥_id
); \

1399  
g_deföe_ty≥_id__vﬁ©ûe
; \

1400 }

	)

1404 
GTy≥Plugö
* 
g_ty≥_gë_∂ugö
 (
GTy≥
 
ty≥
);

1405 
GTy≥Plugö
* 
g_ty≥_öãrÁ˚_gë_∂ugö
 (
GTy≥
 
ö°™˚_ty≥
,

1406 
GTy≥
 
öãrÁ˚_ty≥
);

1407 
GTy≥
 
g_ty≥_fundamíèl_√xt
 ();

1408 
GTy≥
 
g_ty≥_fundamíèl
 (GTy≥ 
ty≥_id
);

1409 
GTy≥In°™˚
* 
g_ty≥_¸óã_ö°™˚
 (
GTy≥
 
ty≥
);

1410 
g_ty≥_‰ì_ö°™˚
 (
GTy≥In°™˚
 *
ö°™˚
);

1412 
g_ty≥_add_˛ass_ˇche_func
 (
gpoöãr
 
ˇche_d©a
,

1413 
GTy≥CœssCacheFunc
 
ˇche_func
);

1414 
g_ty≥_ªmove_˛ass_ˇche_func
 (
gpoöãr
 
ˇche_d©a
,

1415 
GTy≥CœssCacheFunc
 
ˇche_func
);

1416 
g_ty≥_˛ass_uƒef_unˇched
 (
gpoöãr
 
g_˛ass
);

1418 
g_ty≥_add_öãrÁ˚_check
 (
gpoöãr
 
check_d©a
,

1419 
GTy≥I¡îÁ˚CheckFunc
 
check_func
);

1420 
g_ty≥_ªmove_öãrÁ˚_check
 (
gpoöãr
 
check_d©a
,

1421 
GTy≥I¡îÁ˚CheckFunc
 
check_func
);

1423 
GTy≥VÆueTabÀ
* 
g_ty≥_vÆue_èbÀ_≥ek
 (
GTy≥
 
ty≥
);

1427 
gboﬁón
 
	$g_ty≥_check_ö°™˚
 (
GTy≥In°™˚
 *
ö°™˚
Ë
G_GNUC_PURE
;

1428 
GTy≥In°™˚
* 
	`g_ty≥_check_ö°™˚_ˇ°
 (GTy≥In°™˚ *
ö°™˚
,

1429 
GTy≥
 
iÁ˚_ty≥
);

1430 
gboﬁón
 
	$g_ty≥_check_ö°™˚_is_a
 (
GTy≥In°™˚
 *
ö°™˚
,

1431 
GTy≥
 
iÁ˚_ty≥
Ë
G_GNUC_PURE
;

1432 
GTy≥Cœss
* 
	`g_ty≥_check_˛ass_ˇ°
 (GTy≥Cœs†*
g_˛ass
,

1433 
GTy≥
 
is_a_ty≥
);

1434 
gboﬁón
 
	$g_ty≥_check_˛ass_is_a
 (
GTy≥Cœss
 *
g_˛ass
,

1435 
GTy≥
 
is_a_ty≥
Ë
G_GNUC_PURE
;

1436 
gboﬁón
 
	$g_ty≥_check_is_vÆue_ty≥
 (
GTy≥
 
ty≥
Ë
G_GNUC_CONST
;

1437 
gboﬁón
 
	$g_ty≥_check_vÆue
 (
GVÆue
 *
vÆue
Ë
G_GNUC_PURE
;

1438 
gboﬁón
 
	$g_ty≥_check_vÆue_hﬁds
 (
GVÆue
 *
vÆue
,

1439 
GTy≥
 
ty≥
Ë
G_GNUC_PURE
;

1440 
gboﬁón
 
	$g_ty≥_ã°_Êags
 (
GTy≥
 
ty≥
,

1441 
guöt
 
Êags
Ë
G_GNUC_CONST
;

1445 
G_CONST_RETURN
 
gch¨
* 
	`g_ty≥_«me_‰om_ö°™˚
 (
GTy≥In°™˚
 *
ö°™˚
);

1446 
G_CONST_RETURN
 
gch¨
* 
	`g_ty≥_«me_‰om_˛ass
 (
GTy≥Cœss
 *
g_˛ass
);

1450 
G_GNUC_INTERNAL
 
	`g_vÆue_c_öô
 ();

1451 
G_GNUC_INTERNAL
 
	`g_vÆue_ty≥s_öô
 ();

1452 
G_GNUC_INTERNAL
 
	`g_íum_ty≥s_öô
 ();

1453 
G_GNUC_INTERNAL
 
	`g_∑øm_ty≥_öô
 ();

1454 
G_GNUC_INTERNAL
 
	`g_boxed_ty≥_öô
 ();

1455 
G_GNUC_INTERNAL
 
	`g_obje˘_ty≥_öô
 ();

1456 
G_GNUC_INTERNAL
 
	`g_∑øm_•ec_ty≥s_öô
 ();

1457 
G_GNUC_INTERNAL
 
	`g_vÆue_å™sf‹ms_öô
 ();

1458 
G_GNUC_INTERNAL
 
	`g_sig«l_öô
 ();

1462 #i‚de‡
G_DISABLE_CAST_CHECKS


1463 
	#_G_TYPE_CIC
(
ù
, 
gt
, 
˘
) \

1464 ((
˘
*Ë
	`g_ty≥_check_ö°™˚_ˇ°
 ((
GTy≥In°™˚
*Ë
ù
, 
gt
))

	)

1465 
	#_G_TYPE_CCC
(
˝
, 
gt
, 
˘
) \

1466 ((
˘
*Ë
	`g_ty≥_check_˛ass_ˇ°
 ((
GTy≥Cœss
*Ë
˝
, 
gt
))

	)

1468 
	#_G_TYPE_CIC
(
ù
, 
gt
, 
˘
Ë((˘*Ëù)

	)

1469 
	#_G_TYPE_CCC
(
˝
, 
gt
, 
˘
Ë((˘*Ë˝)

	)

1471 
	#_G_TYPE_CHI
(
ù
Ë(
	`g_ty≥_check_ö°™˚
 ((
GTy≥In°™˚
*Ëù))

	)

1472 
	#_G_TYPE_CHV
(
vl
Ë(
	`g_ty≥_check_vÆue
 ((
GVÆue
*Ëvl))

	)

1473 
	#_G_TYPE_IGC
(
ù
, 
gt
, 
˘
Ë((˘*Ë(((
GTy≥In°™˚
*Ëù)->
g_˛ass
))

	)

1474 
	#_G_TYPE_IGI
(
ù
, 
gt
, 
˘
Ë((˘*Ë
	`g_ty≥_öãrÁ˚_≥ek
 (((
GTy≥In°™˚
*Ëù)->
g_˛ass
, gt))

	)

1475 #ifdef 
__GNUC__


1476 
	#_G_TYPE_CIT
(
ù
, 
gt
Ë(
	`G_GNUC_EXTENSION
 ({ \

1477 
GTy≥In°™˚
 *
__ö°
 = (GTy≥In°™˚*Ë
ù
; 
GTy≥
 
__t
 = 
gt
; 
gboﬁón
 
__r
; \

1478 i‡(
__ö°
 && __ö°->
g_˛ass
 && __ö°->g_˛ass->
g_ty≥
 =
__t
) \

1479 
__r
 = 
TRUE
; \

1481 
__r
 = 
	`g_ty≥_check_ö°™˚_is_a
 (
__ö°
, 
__t
); \

1482 
__r
; \

1483 
	}
}))

	)

1484 
	#_G_TYPE_CCT
(
˝
, 
gt
Ë(
	`G_GNUC_EXTENSION
 ({ \

1485 
GTy≥Cœss
 *
__˛ass
 = (GTy≥Cœss*Ë
˝
; 
GTy≥
 
__t
 = 
gt
; 
gboﬁón
 
__r
; \

1486 i‡(
__˛ass
 && __˛ass->
g_ty≥
 =
__t
) \

1487 
__r
 = 
TRUE
; \

1489 
__r
 = 
	`g_ty≥_check_˛ass_is_a
 (
__˛ass
, 
__t
); \

1490 
__r
; \

1491 }))

	)

1492 
	#_G_TYPE_CVH
(
vl
, 
gt
Ë(
	`G_GNUC_EXTENSION
 ({ \

1493 
GVÆue
 *
__vÆ
 = (GVÆue*Ë
vl
; 
GTy≥
 
__t
 = 
gt
; 
gboﬁón
 
__r
; \

1494 i‡(
__vÆ
 && __vÆ->
g_ty≥
 =
__t
) \

1495 
__r
 = 
TRUE
; \

1497 
__r
 = 
	`g_ty≥_check_vÆue_hﬁds
 (
__vÆ
, 
__t
); \

1498 
__r
; \

1499 }))

	)

1501 
	#_G_TYPE_CIT
(
ù
, 
gt
Ë(
	`g_ty≥_check_ö°™˚_is_a
 ((
GTy≥In°™˚
*Ëù, gt))

	)

1502 
	#_G_TYPE_CCT
(
˝
, 
gt
Ë(
	`g_ty≥_check_˛ass_is_a
 ((
GTy≥Cœss
*Ë˝, gt))

	)

1503 
	#_G_TYPE_CVH
(
vl
, 
gt
Ë(
	`g_ty≥_check_vÆue_hﬁds
 ((
GVÆue
*Ëvl, gt))

	)

1510 
	#G_TYPE_FLAG_RESERVED_ID_BIT
 ((
GTy≥
Ë(1 << 0))

	)

1511 
GTy≥DebugFœgs
 
_g_ty≥_debug_Êags
;

1513 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gtypemodule.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_TYPE_MODULE_H__


24 
	#__G_TYPE_MODULE_H__


	)

26 
	~<gobje˘/gobje˘.h
>

27 
	~<gobje˘/gíums.h
>

29 
G_BEGIN_DECLS


31 
_GTy≥ModuÀ
 
	tGTy≥ModuÀ
;

32 
_GTy≥ModuÀCœss
 
	tGTy≥ModuÀCœss
;

34 
	#G_TYPE_TYPE_MODULE
 (
	`g_ty≥_moduÀ_gë_ty≥
 ())

	)

35 
	#G_TYPE_MODULE
(
moduÀ
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((moduÀ), 
G_TYPE_TYPE_MODULE
, 
GTy≥ModuÀ
))

	)

36 
	#G_TYPE_MODULE_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((˛ass), 
G_TYPE_TYPE_MODULE
, 
GTy≥ModuÀCœss
))

	)

37 
	#G_IS_TYPE_MODULE
(
moduÀ
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((moduÀ), 
G_TYPE_TYPE_MODULE
))

	)

38 
	#G_IS_TYPE_MODULE_CLASS
(
˛ass
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((˛ass), 
G_TYPE_TYPE_MODULE
))

	)

39 
	#G_TYPE_MODULE_GET_CLASS
(
moduÀ
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((moduÀ), 
G_TYPE_TYPE_MODULE
, 
GTy≥ModuÀCœss
))

	)

48 
	s_GTy≥ModuÀ


50 
GObje˘
 
	m∑ª¡_ö°™˚
;

52 
guöt
 
	mu£_cou¡
;

53 
GSLi°
 *
	mty≥_öfos
;

54 
GSLi°
 *
	möãrÁ˚_öfos
;

57 
gch¨
 *
	m«me
;

70 
	s_GTy≥ModuÀCœss


72 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

75 
gboﬁón
 (* 
lﬂd
Ë(
GTy≥ModuÀ
 *
	mmoduÀ
);

76 (* 
	mu∆ﬂd
Ë(
GTy≥ModuÀ
 *
	mmoduÀ
);

80 (*
	mª£rved1
) ();

81 (*
	mª£rved2
) ();

82 (*
	mª£rved3
) ();

83 (*
	mª£rved4
) ();

104 
	#G_DEFINE_DYNAMIC_TYPE
(
TN
, 
t_n
, 
T_P
Ë
	`G_DEFINE_DYNAMIC_TYPE_EXTENDED
 (TN,Å_n, T_P, 0, {})

	)

177 
	#G_DEFINE_DYNAMIC_TYPE_EXTENDED
(
Ty≥Name
, 
ty≥_«me
, 
TYPE_PARENT
, 
Êags
, 
CODE
) \

178 
ty≥_«me
##
	`_öô
 (
Ty≥Name
 *
£lf
); \

179 
ty≥_«me
##
	`_˛ass_öô
 (
Ty≥Name
##
Cœss
 *
kœss
); \

180 
ty≥_«me
##
	`_˛ass_föÆize
 (
Ty≥Name
##
Cœss
 *
kœss
); \

181 
gpoöãr
 
ty≥_«me
##
_∑ª¡_˛ass
 = 
NULL
; \

182 
GTy≥
 
ty≥_«me
##
_ty≥_id
 = 0; \

183 
ty≥_«me
##
	`_˛ass_öã∫_öô
 (
gpoöãr
 
kœss
) \

185 
ty≥_«me
##
_∑ª¡_˛ass
 = 
	`g_ty≥_˛ass_≥ek_∑ª¡
 (
kœss
); \

186 
ty≥_«me
##
	`_˛ass_öô
 ((
Ty≥Name
##
Cœss
*Ë
kœss
); \

188 
GTy≥
 \

189 
ty≥_«me
##
	`_gë_ty≥
 () \

191  
ty≥_«me
##
_ty≥_id
; \

194 
ty≥_«me
##
	`_ªgi°î_ty≥
 (
GTy≥ModuÀ
 *
ty≥_moduÀ
) \

196 
GTy≥
 
g_deföe_ty≥_id
; \

197 c⁄° 
GTy≥Info
 
g_deföe_ty≥_öfo
 = { \

198  (
Ty≥Name
##
Cœss
), \

199 (
GBa£InôFunc
Ë
NULL
, \

200 (
GBa£FöÆizeFunc
Ë
NULL
, \

201 (
GCœssInôFunc
Ë
ty≥_«me
##
_˛ass_öã∫_öô
, \

202 (
GCœssFöÆizeFunc
Ë
ty≥_«me
##
_˛ass_föÆize
, \

203 
NULL
, \

204  (
Ty≥Name
), \

206 (
GIn°™˚InôFunc
Ë
ty≥_«me
##
_öô
, \

207 
NULL
 \

209 
ty≥_«me
##
_ty≥_id
 = 
	`g_ty≥_moduÀ_ªgi°î_ty≥
 (
ty≥_moduÀ
, \

210 
TYPE_PARENT
, \

212 &
g_deföe_ty≥_öfo
, \

213 (
GTy≥Fœgs
Ë
Êags
); \

214 
g_deföe_ty≥_id
 = 
ty≥_«me
##
_ty≥_id
; \

215 { 
CODE
 ; } \

216 }

	)

219 
GTy≥
 
	$g_ty≥_moduÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

220 
gboﬁón
 
	`g_ty≥_moduÀ_u£
 (
GTy≥ModuÀ
 *
moduÀ
);

221 
	`g_ty≥_moduÀ_unu£
 (
GTy≥ModuÀ
 *
moduÀ
);

222 
	`g_ty≥_moduÀ_£t_«me
 (
GTy≥ModuÀ
 *
moduÀ
,

223 c⁄° 
gch¨
 *
«me
);

224 
GTy≥
 
	`g_ty≥_moduÀ_ªgi°î_ty≥
 (
GTy≥ModuÀ
 *
moduÀ
,

225 
GTy≥
 
∑ª¡_ty≥
,

226 c⁄° 
gch¨
 *
ty≥_«me
,

227 c⁄° 
GTy≥Info
 *
ty≥_öfo
,

228 
GTy≥Fœgs
 
Êags
);

229 
	`g_ty≥_moduÀ_add_öãrÁ˚
 (
GTy≥ModuÀ
 *
moduÀ
,

230 
GTy≥
 
ö°™˚_ty≥
,

231 
GTy≥
 
öãrÁ˚_ty≥
,

232 c⁄° 
GI¡îÁ˚Info
 *
öãrÁ˚_öfo
);

233 
GTy≥
 
	`g_ty≥_moduÀ_ªgi°î_íum
 (
GTy≥ModuÀ
 *
moduÀ
,

234 c⁄° 
gch¨
 *
«me
,

235 c⁄° 
GEnumVÆue
 *
c⁄°_°©ic_vÆues
);

236 
GTy≥
 
	`g_ty≥_moduÀ_ªgi°î_Êags
 (
GTy≥ModuÀ
 *
moduÀ
,

237 c⁄° 
gch¨
 *
«me
,

238 c⁄° 
GFœgsVÆue
 *
c⁄°_°©ic_vÆues
);

240 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/gtypeplugin.h

19 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

23 #i‚de‡
__G_TYPE_PLUGIN_H__


24 
	#__G_TYPE_PLUGIN_H__


	)

26 
	~<gobje˘/gty≥.h
>

28 
	gG_BEGIN_DECLS


31 
	#G_TYPE_TYPE_PLUGIN
 (
	`g_ty≥_∂ugö_gë_ty≥
 ())

	)

32 
	#G_TYPE_PLUGIN
(
ö°
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((ö°), 
G_TYPE_TYPE_PLUGIN
, 
GTy≥Plugö
))

	)

33 
	#G_TYPE_PLUGIN_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((vèbÀ), 
G_TYPE_TYPE_PLUGIN
, 
GTy≥PlugöCœss
))

	)

34 
	#G_IS_TYPE_PLUGIN
(
ö°
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((ö°), 
G_TYPE_TYPE_PLUGIN
))

	)

35 
	#G_IS_TYPE_PLUGIN_CLASS
(
vèbÀ
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((vèbÀ), 
G_TYPE_TYPE_PLUGIN
))

	)

36 
	#G_TYPE_PLUGIN_GET_CLASS
(
ö°
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((ö°), 
G_TYPE_TYPE_PLUGIN
, 
GTy≥PlugöCœss
))

	)

40 
_GTy≥PlugöCœss
 
	tGTy≥PlugöCœss
;

48 (*
	tGTy≥PlugöU£
Ë(
	tGTy≥Plugö
 *
	t∂ugö
);

55 (*
	tGTy≥PlugöUnu£
Ë(
	tGTy≥Plugö
 *
	t∂ugö
);

65 (*
	tGTy≥PlugöCom∂ëeTy≥Info
Ë(
	tGTy≥Plugö
 *
	t∂ugö
,

66 
	tGTy≥
 
	tg_ty≥
,

67 
	tGTy≥Info
 *
	töfo
,

68 
	tGTy≥VÆueTabÀ
 *
	tvÆue_èbÀ
);

79 (*
	tGTy≥PlugöCom∂ëeI¡îÁ˚Info
Ë(
	tGTy≥Plugö
 *
	t∂ugö
,

80 
	tGTy≥
 
	tö°™˚_ty≥
,

81 
	tGTy≥
 
	töãrÁ˚_ty≥
,

82 
	tGI¡îÁ˚Info
 *
	töfo
);

106 
	s_GTy≥PlugöCœss


109 
GTy≥I¡îÁ˚
 
ba£_iÁ˚
;

112 
GTy≥PlugöU£
 
u£_∂ugö
;

113 
GTy≥PlugöUnu£
 
unu£_∂ugö
;

114 
GTy≥PlugöCom∂ëeTy≥Info
 
com∂ëe_ty≥_öfo
;

115 
GTy≥PlugöCom∂ëeI¡îÁ˚Info
 
com∂ëe_öãrÁ˚_öfo
;

120 
GTy≥
 
	$g_ty≥_∂ugö_gë_ty≥
 (Ë
G_GNUC_CONST
;

121 
	`g_ty≥_∂ugö_u£
 (
GTy≥Plugö
 *
∂ugö
);

122 
	`g_ty≥_∂ugö_unu£
 (
GTy≥Plugö
 *
∂ugö
);

123 
	`g_ty≥_∂ugö_com∂ëe_ty≥_öfo
 (
GTy≥Plugö
 *
∂ugö
,

124 
GTy≥
 
g_ty≥
,

125 
GTy≥Info
 *
öfo
,

126 
GTy≥VÆueTabÀ
 *
vÆue_èbÀ
);

127 
	`g_ty≥_∂ugö_com∂ëe_öãrÁ˚_öfo
 (
GTy≥Plugö
 *
∂ugö
,

128 
GTy≥
 
ö°™˚_ty≥
,

129 
GTy≥
 
öãrÁ˚_ty≥
,

130 
GI¡îÁ˚Info
 *
öfo
);

132 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/gvalue.h

21 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

25 #i‚de‡
__G_VALUE_H__


26 
	#__G_VALUE_H__


	)

28 
	~<gobje˘/gty≥.h
>

30 
	gG_BEGIN_DECLS


43 
	#G_TYPE_IS_VALUE
(
ty≥
Ë(
	`g_ty≥_check_is_vÆue_ty≥
 (ty≥))

	)

52 
	#G_IS_VALUE
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE
 (vÆue))

	)

61 
	#G_VALUE_TYPE
(
vÆue
Ë(((
GVÆue
*Ë(vÆue))->
g_ty≥
)

	)

70 
	#G_VALUE_TYPE_NAME
(
vÆue
Ë(
	`g_ty≥_«me
 (
	`G_VALUE_TYPE
 (vÆue)))

	)

82 
	#G_VALUE_HOLDS
(
vÆue
,
ty≥
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), (ty≥)))

	)

94 (*
	tGVÆueTønsf‹m
Ë(c⁄° 
	tGVÆue
 *
	t§c_vÆue
,

95 
	tGVÆue
 *
	tde°_vÆue
);

108 
	s_GVÆue


111 
GTy≥
 
g_ty≥
;

115 
göt
 
v_öt
;

116 
guöt
 
v_uöt
;

117 
gl⁄g
 
v_l⁄g
;

118 
gul⁄g
 
v_ul⁄g
;

119 
göt64
 
v_öt64
;

120 
guöt64
 
v_uöt64
;

121 
gÊﬂt
 
v_Êﬂt
;

122 
gdoubÀ
 
v_doubÀ
;

123 
gpoöãr
 
v_poöãr
;

124 } 
d©a
[2];

129 
GVÆue
* 
	`g_vÆue_öô
 (GVÆuê*
vÆue
,

130 
GTy≥
 
g_ty≥
);

131 
	`g_vÆue_c›y
 (c⁄° 
GVÆue
 *
§c_vÆue
,

132 
GVÆue
 *
de°_vÆue
);

133 
GVÆue
* 
	`g_vÆue_ª£t
 (GVÆuê*
vÆue
);

134 
	`g_vÆue_un£t
 (
GVÆue
 *
vÆue
);

135 
	`g_vÆue_£t_ö°™˚
 (
GVÆue
 *
vÆue
,

136 
gpoöãr
 
ö°™˚
);

140 
gboﬁón
 
	`g_vÆue_fôs_poöãr
 (c⁄° 
GVÆue
 *
vÆue
);

141 
gpoöãr
 
	`g_vÆue_≥ek_poöãr
 (c⁄° 
GVÆue
 *
vÆue
);

145 
gboﬁón
 
	`g_vÆue_ty≥_com∑tibÀ
 (
GTy≥
 
§c_ty≥
,

146 
GTy≥
 
de°_ty≥
);

147 
gboﬁón
 
	`g_vÆue_ty≥_å™sf‹mabÀ
 (
GTy≥
 
§c_ty≥
,

148 
GTy≥
 
de°_ty≥
);

149 
gboﬁón
 
	`g_vÆue_å™sf‹m
 (c⁄° 
GVÆue
 *
§c_vÆue
,

150 
GVÆue
 *
de°_vÆue
);

151 
	`g_vÆue_ªgi°î_å™sf‹m_func
 (
GTy≥
 
§c_ty≥
,

152 
GTy≥
 
de°_ty≥
,

153 
GVÆueTønsf‹m
 
å™sf‹m_func
);

154 
	#G_VALUE_NOCOPY_CONTENTS
 (1 << 27)

	)

157 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/gvaluearray.h

21 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

25 #i‚de‡
__G_VALUE_ARRAY_H__


26 
	#__G_VALUE_ARRAY_H__


	)

28 
	~<gobje˘/gvÆue.h
>

31 
G_BEGIN_DECLS


35 
_GVÆueAºay
 
	tGVÆueAºay
;

43 
	s_GVÆueAºay


45 
guöt
 
	mn_vÆues
;

46 
GVÆue
 *
	mvÆues
;

49 
guöt
 
	mn_¥óŒo˚d
;

54 
GVÆue
* 
g_vÆue_¨øy_gë_¡h
 (
GVÆueAºay
 *
vÆue_¨øy
,

55 
guöt
 
ödex_
);

56 
GVÆueAºay
* 
g_vÆue_¨øy_√w
 (
guöt
 
n_¥óŒo˚d
);

57 
g_vÆue_¨øy_‰ì
 (
GVÆueAºay
 *
vÆue_¨øy
);

58 
GVÆueAºay
* 
g_vÆue_¨øy_c›y
 (c⁄° GVÆueAºay *
vÆue_¨øy
);

59 
GVÆueAºay
* 
g_vÆue_¨øy_¥ïíd
 (GVÆueAºay *
vÆue_¨øy
,

60 c⁄° 
GVÆue
 *
vÆue
);

61 
GVÆueAºay
* 
g_vÆue_¨øy_≠≥nd
 (GVÆueAºay *
vÆue_¨øy
,

62 c⁄° 
GVÆue
 *
vÆue
);

63 
GVÆueAºay
* 
g_vÆue_¨øy_ö£π
 (GVÆueAºay *
vÆue_¨øy
,

64 
guöt
 
ödex_
,

65 c⁄° 
GVÆue
 *
vÆue
);

66 
GVÆueAºay
* 
g_vÆue_¨øy_ªmove
 (GVÆueAºay *
vÆue_¨øy
,

67 
guöt
 
ödex_
);

68 
GVÆueAºay
* 
g_vÆue_¨øy_s‹t
 (GVÆueAºay *
vÆue_¨øy
,

69 
GCom∑ªFunc
 
com∑ª_func
);

70 
GVÆueAºay
* 
g_vÆue_¨øy_s‹t_wôh_d©a
 (GVÆueAºay *
vÆue_¨øy
,

71 
GCom∑ªD©aFunc
 
com∑ª_func
,

72 
gpoöãr
 
u£r_d©a
);

75 
	gG_END_DECLS


	@/usr/include/glib-2.0/gobject/gvaluetypes.h

21 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

25 #i‚de‡
__G_VALUETYPES_H__


26 
	#__G_VALUETYPES_H__


	)

28 
	~<gobje˘/gvÆue.h
>

30 
	gG_BEGIN_DECLS


41 
	#G_VALUE_HOLDS_CHAR
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_CHAR
))

	)

50 
	#G_VALUE_HOLDS_UCHAR
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_UCHAR
))

	)

59 
	#G_VALUE_HOLDS_BOOLEAN
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_BOOLEAN
))

	)

68 
	#G_VALUE_HOLDS_INT
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_INT
))

	)

77 
	#G_VALUE_HOLDS_UINT
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_UINT
))

	)

86 
	#G_VALUE_HOLDS_LONG
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_LONG
))

	)

95 
	#G_VALUE_HOLDS_ULONG
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_ULONG
))

	)

104 
	#G_VALUE_HOLDS_INT64
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_INT64
))

	)

113 
	#G_VALUE_HOLDS_UINT64
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_UINT64
))

	)

122 
	#G_VALUE_HOLDS_FLOAT
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_FLOAT
))

	)

131 
	#G_VALUE_HOLDS_DOUBLE
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_DOUBLE
))

	)

140 
	#G_VALUE_HOLDS_STRING
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_STRING
))

	)

149 
	#G_VALUE_HOLDS_POINTER
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_POINTER
))

	)

155 
	#G_TYPE_GTYPE
 (
	`g_gty≥_gë_ty≥
())

	)

165 
	#G_VALUE_HOLDS_GTYPE
(
vÆue
Ë(
	`G_TYPE_CHECK_VALUE_TYPE
 ((vÆue), 
G_TYPE_GTYPE
))

	)

169 
g_vÆue_£t_ch¨
 (
GVÆue
 *
vÆue
,

170 
gch¨
 
v_ch¨
);

171 
gch¨
 
g_vÆue_gë_ch¨
 (c⁄° 
GVÆue
 *
vÆue
);

172 
g_vÆue_£t_uch¨
 (
GVÆue
 *
vÆue
,

173 
guch¨
 
v_uch¨
);

174 
guch¨
 
g_vÆue_gë_uch¨
 (c⁄° 
GVÆue
 *
vÆue
);

175 
g_vÆue_£t_boﬁón
 (
GVÆue
 *
vÆue
,

176 
gboﬁón
 
v_boﬁón
);

177 
gboﬁón
 
g_vÆue_gë_boﬁón
 (c⁄° 
GVÆue
 *
vÆue
);

178 
g_vÆue_£t_öt
 (
GVÆue
 *
vÆue
,

179 
göt
 
v_öt
);

180 
göt
 
g_vÆue_gë_öt
 (c⁄° 
GVÆue
 *
vÆue
);

181 
g_vÆue_£t_uöt
 (
GVÆue
 *
vÆue
,

182 
guöt
 
v_uöt
);

183 
guöt
 
g_vÆue_gë_uöt
 (c⁄° 
GVÆue
 *
vÆue
);

184 
g_vÆue_£t_l⁄g
 (
GVÆue
 *
vÆue
,

185 
gl⁄g
 
v_l⁄g
);

186 
gl⁄g
 
g_vÆue_gë_l⁄g
 (c⁄° 
GVÆue
 *
vÆue
);

187 
g_vÆue_£t_ul⁄g
 (
GVÆue
 *
vÆue
,

188 
gul⁄g
 
v_ul⁄g
);

189 
gul⁄g
 
g_vÆue_gë_ul⁄g
 (c⁄° 
GVÆue
 *
vÆue
);

190 
g_vÆue_£t_öt64
 (
GVÆue
 *
vÆue
,

191 
göt64
 
v_öt64
);

192 
göt64
 
g_vÆue_gë_öt64
 (c⁄° 
GVÆue
 *
vÆue
);

193 
g_vÆue_£t_uöt64
 (
GVÆue
 *
vÆue
,

194 
guöt64
 
v_uöt64
);

195 
guöt64
 
g_vÆue_gë_uöt64
 (c⁄° 
GVÆue
 *
vÆue
);

196 
g_vÆue_£t_Êﬂt
 (
GVÆue
 *
vÆue
,

197 
gÊﬂt
 
v_Êﬂt
);

198 
gÊﬂt
 
g_vÆue_gë_Êﬂt
 (c⁄° 
GVÆue
 *
vÆue
);

199 
g_vÆue_£t_doubÀ
 (
GVÆue
 *
vÆue
,

200 
gdoubÀ
 
v_doubÀ
);

201 
gdoubÀ
 
g_vÆue_gë_doubÀ
 (c⁄° 
GVÆue
 *
vÆue
);

202 
g_vÆue_£t_°rög
 (
GVÆue
 *
vÆue
,

203 c⁄° 
gch¨
 *
v_°rög
);

204 
g_vÆue_£t_°©ic_°rög
 (
GVÆue
 *
vÆue
,

205 c⁄° 
gch¨
 *
v_°rög
);

206 
G_CONST_RETURN
 
gch¨
* 
g_vÆue_gë_°rög
 (c⁄° 
GVÆue
 *
vÆue
);

207 
gch¨
* 
g_vÆue_dup_°rög
 (c⁄° 
GVÆue
 *
vÆue
);

208 
g_vÆue_£t_poöãr
 (
GVÆue
 *
vÆue
,

209 
gpoöãr
 
v_poöãr
);

210 
gpoöãr
 
g_vÆue_gë_poöãr
 (c⁄° 
GVÆue
 *
vÆue
);

211 
GTy≥
 
g_gty≥_gë_ty≥
 ();

212 
g_vÆue_£t_gty≥
 (
GVÆue
 *
vÆue
,

213 
GTy≥
 
v_gty≥
);

214 
GTy≥
 
g_vÆue_gë_gty≥
 (c⁄° 
GVÆue
 *
vÆue
);

218 
GTy≥
 
g_poöãr_ty≥_ªgi°î_°©ic
 (c⁄° 
gch¨
 *
«me
);

221 
gch¨
* 
g_°rdup_vÆue_c⁄ã¡s
 (c⁄° 
GVÆue
 *
vÆue
);

224 
g_vÆue_èke_°rög
 (
GVÆue
 *
vÆue
,

225 
gch¨
 *
v_°rög
);

226 #i‚de‡
G_DISABLE_DEPRECATED


227 
g_vÆue_£t_°rög_èke_ow√rshù
 (
GVÆue
 *
vÆue
,

228 
gch¨
 *
v_°rög
);

238 
gch¨
* 
	tgch¨¨øy
;

241 
	gG_END_DECLS


	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf.h

26 #i‚de‡
GDK_PIXBUF_H


27 
	#GDK_PIXBUF_H


	)

29 
	#GDK_PIXBUF_H_INSIDE


	)

31 
	~<glib.h
>

32 
	~<gdk-pixbuf/gdk-pixbuf-„©uªs.h
>

33 
	~<glib-obje˘.h
>

35 
	~<gdk-pixbuf/gdk-pixbuf-c‹e.h
>

36 
	~<gdk-pixbuf/gdk-pixbuf-å™sf‹m.h
>

37 
	~<gdk-pixbuf/gdk-pixbuf-™im©i⁄.h
>

38 
	~<gdk-pixbuf/gdk-pixbuf-sim∂e-™im.h
>

39 
	~<gdk-pixbuf/gdk-pixbuf-io.h
>

40 
	~<gdk-pixbuf/gdk-pixbuf-lﬂdî.h
>

41 
	~<gdk-pixbuf/gdk-pixbuf-íum-ty≥s.h
>

43 #unde‡
GDK_PIXBUF_H_INSIDE


	@/usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h

23 #i‡!
deföed
 (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

27 #i‚de‡
__GDK_APP_LAUNCH_CONTEXT_H__


28 
	#__GDK_APP_LAUNCH_CONTEXT_H__


	)

30 
	~<gio/gio.h
>

31 
	~<gdk/gdks¸ìn.h
>

33 
	gG_BEGIN_DECLS


35 
	#GDK_TYPE_APP_LAUNCH_CONTEXT
 (
	`gdk_≠p_œunch_c⁄ãxt_gë_ty≥
 ())

	)

36 
	#GDK_APP_LAUNCH_CONTEXT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
GDK_TYPE_APP_LAUNCH_CONTEXT
, 
GdkAµLaunchC⁄ãxt
))

	)

37 
	#GDK_APP_LAUNCH_CONTEXT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
GDK_TYPE_APP_LAUNCH_CONTEXT
, 
GdkAµLaunchC⁄ãxtCœss
))

	)

38 
	#GDK_IS_APP_LAUNCH_CONTEXT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
GDK_TYPE_APP_LAUNCH_CONTEXT
))

	)

39 
	#GDK_IS_APP_LAUNCH_CONTEXT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
GDK_TYPE_APP_LAUNCH_CONTEXT
))

	)

40 
	#GDK_APP_LAUNCH_CONTEXT_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
GDK_TYPE_APP_LAUNCH_CONTEXT
, 
GdkAµLaunchC⁄ãxtCœss
))

	)

42 
GdkAµLaunchC⁄ãxt
 
	tGdkAµLaunchC⁄ãxt
;

43 
GdkAµLaunchC⁄ãxtCœss
 
	tGdkAµLaunchC⁄ãxtCœss
;

44 
GdkAµLaunchC⁄ãxtPriv©e
 
	tGdkAµLaunchC⁄ãxtPriv©e
;

46 
	sGdkAµLaunchC⁄ãxt


48 
GAµLaunchC⁄ãxt
 
	m∑ª¡_ö°™˚
;

50 
GdkAµLaunchC⁄ãxtPriv©e
 *
	m¥iv
;

53 
	sGdkAµLaunchC⁄ãxtCœss


55 
GAµLaunchC⁄ãxtCœss
 
	m∑ª¡_˛ass
;

58 
GTy≥
 
gdk_≠p_œunch_c⁄ãxt_gë_ty≥
 ();

60 
GdkAµLaunchC⁄ãxt
 *
gdk_≠p_œunch_c⁄ãxt_√w
 ();

61 
gdk_≠p_œunch_c⁄ãxt_£t_di•œy
 (
GdkAµLaunchC⁄ãxt
 *
c⁄ãxt
,

62 
GdkDi•œy
 *
di•œy
);

63 
gdk_≠p_œunch_c⁄ãxt_£t_s¸ìn
 (
GdkAµLaunchC⁄ãxt
 *
c⁄ãxt
,

64 
GdkS¸ìn
 *
s¸ìn
);

65 
gdk_≠p_œunch_c⁄ãxt_£t_deskt›
 (
GdkAµLaunchC⁄ãxt
 *
c⁄ãxt
,

66 
göt
 
deskt›
);

67 
gdk_≠p_œunch_c⁄ãxt_£t_time°amp
 (
GdkAµLaunchC⁄ãxt
 *
c⁄ãxt
,

68 
guöt32
 
time°amp
);

69 
gdk_≠p_œunch_c⁄ãxt_£t_ic⁄
 (
GdkAµLaunchC⁄ãxt
 *
c⁄ãxt
,

70 
GIc⁄
 *
ic⁄
);

71 
gdk_≠p_œunch_c⁄ãxt_£t_ic⁄_«me
 (
GdkAµLaunchC⁄ãxt
 *
c⁄ãxt
,

72 c⁄° *
ic⁄_«me
);

74 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkcairo.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

24 #i‚de‡
__GDK_CAIRO_H__


25 
	#__GDK_CAIRO_H__


	)

27 
	~<gdk/gdkcﬁ‹.h
>

28 
	~<gdk/gdkpixbuf.h
>

29 
	~<∑ngo/∑ngoˇúo.h
>

31 
G_BEGIN_DECLS


33 
ˇúo_t
 *
gdk_ˇúo_¸óã
 (
GdkDøwabÀ
 *
døwabÀ
);

35 
gdk_ˇúo_£t_sour˚_cﬁ‹
 (
ˇúo_t
 *
¸
,

36 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

37 
gdk_ˇúo_£t_sour˚_pixbuf
 (
ˇúo_t
 *
¸
,

38 c⁄° 
GdkPixbuf
 *
pixbuf
,

39 
pixbuf_x
,

40 
pixbuf_y
);

41 
gdk_ˇúo_£t_sour˚_pixm≠
 (
ˇúo_t
 *
¸
,

42 
GdkPixm≠
 *
pixm≠
,

43 
pixm≠_x
,

44 
pixm≠_y
);

46 
gdk_ˇúo_ª˘™gÀ
 (
ˇúo_t
 *
¸
,

47 c⁄° 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

48 
gdk_ˇúo_ªgi⁄
 (
ˇúo_t
 *
¸
,

49 c⁄° 
GdkRegi⁄
 *
ªgi⁄
);

51 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkcolor.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_COLOR_H__


32 
	#__GDK_COLOR_H__


	)

34 
	~<ˇúo.h
>

35 
	~<gdk/gdkty≥s.h
>

37 
G_BEGIN_DECLS


46 
	s_GdkCﬁ‹


48 
guöt32
 
	mpixñ
;

49 
guöt16
 
	mªd
;

50 
guöt16
 
	mgªí
;

51 
guöt16
 
	mblue
;

57 
_GdkCﬁ‹m≠Cœss
 
	tGdkCﬁ‹m≠Cœss
;

59 
	#GDK_TYPE_COLORMAP
 (
	`gdk_cﬁ‹m≠_gë_ty≥
 ())

	)

60 
	#GDK_COLORMAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_COLORMAP
, 
GdkCﬁ‹m≠
))

	)

61 
	#GDK_COLORMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_COLORMAP
, 
GdkCﬁ‹m≠Cœss
))

	)

62 
	#GDK_IS_COLORMAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_COLORMAP
))

	)

63 
	#GDK_IS_COLORMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_COLORMAP
))

	)

64 
	#GDK_COLORMAP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_COLORMAP
, 
GdkCﬁ‹m≠Cœss
))

	)

66 
	#GDK_TYPE_COLOR
 (
	`gdk_cﬁ‹_gë_ty≥
 ())

	)

68 
	s_GdkCﬁ‹m≠


71 
GObje˘
 
	m∑ª¡_ö°™˚
;

74 
göt
 
	msize
;

75 
GdkCﬁ‹
 *
	mcﬁ‹s
;

78 
GdkVisuÆ
 *
	mvisuÆ
;

80 
gpoöãr
 
	mwödowög_d©a
;

83 
	s_GdkCﬁ‹m≠Cœss


85 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

89 
GTy≥
 
	$gdk_cﬁ‹m≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

91 
GdkCﬁ‹m≠
* 
	`gdk_cﬁ‹m≠_√w
 (
GdkVisuÆ
 *
visuÆ
,

92 
gboﬁón
 
Æloˇã
);

94 #i‚de‡
GDK_DISABLE_DEPRECATED


95 
GdkCﬁ‹m≠
* 
	`gdk_cﬁ‹m≠_ªf
 (GdkCﬁ‹m≠ *
cm≠
);

96 
	`gdk_cﬁ‹m≠_uƒef
 (
GdkCﬁ‹m≠
 *
cm≠
);

99 #i‚de‡
GDK_MULTIHEAD_SAFE


100 
GdkCﬁ‹m≠
* 
	`gdk_cﬁ‹m≠_gë_sy°em
 ();

103 
GdkS¸ìn
 *
	`gdk_cﬁ‹m≠_gë_s¸ìn
 (
GdkCﬁ‹m≠
 *
cm≠
);

105 #i‚de‡
GDK_DISABLE_DEPRECATED


106 
göt
 
	`gdk_cﬁ‹m≠_gë_sy°em_size
 ();

109 #i‡!
	`deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GDK_COMPILATION
)

111 
	`gdk_cﬁ‹m≠_ch™ge
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

112 
göt
 
ncﬁ‹s
);

115 
göt
 
	`gdk_cﬁ‹m≠_Æloc_cﬁ‹s
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

116 
GdkCﬁ‹
 *
cﬁ‹s
,

117 
göt
 
n_cﬁ‹s
,

118 
gboﬁón
 
wrôóbÀ
,

119 
gboﬁón
 
be°_m©ch
,

120 
gboﬁón
 *
suc˚ss
);

121 
gboﬁón
 
	`gdk_cﬁ‹m≠_Æloc_cﬁ‹
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

122 
GdkCﬁ‹
 *
cﬁ‹
,

123 
gboﬁón
 
wrôóbÀ
,

124 
gboﬁón
 
be°_m©ch
);

125 
	`gdk_cﬁ‹m≠_‰ì_cﬁ‹s
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

126 c⁄° 
GdkCﬁ‹
 *
cﬁ‹s
,

127 
göt
 
n_cﬁ‹s
);

128 
	`gdk_cﬁ‹m≠_quîy_cﬁ‹
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

129 
gul⁄g
 
pixñ
,

130 
GdkCﬁ‹
 *
ªsu…
);

132 
GdkVisuÆ
 *
	`gdk_cﬁ‹m≠_gë_visuÆ
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

134 
GdkCﬁ‹
 *
	`gdk_cﬁ‹_c›y
 (c⁄° GdkCﬁ‹ *
cﬁ‹
);

135 
	`gdk_cﬁ‹_‰ì
 (
GdkCﬁ‹
 *
cﬁ‹
);

136 
gboﬁón
 
	`gdk_cﬁ‹_∑r£
 (c⁄° 
gch¨
 *
•ec
,

137 
GdkCﬁ‹
 *
cﬁ‹
);

138 
guöt
 
	`gdk_cﬁ‹_hash
 (c⁄° 
GdkCﬁ‹
 *
cﬁ‹a
);

139 
gboﬁón
 
	`gdk_cﬁ‹_equÆ
 (c⁄° 
GdkCﬁ‹
 *
cﬁ‹a
,

140 c⁄° 
GdkCﬁ‹
 *
cﬁ‹b
);

141 
gch¨
 * 
	`gdk_cﬁ‹_to_°rög
 (c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

143 
GTy≥
 
	$gdk_cﬁ‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

146 #i‚de‡
GDK_DISABLE_DEPRECATED


147 
	`gdk_cﬁ‹s_°‹e
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

148 
GdkCﬁ‹
 *
cﬁ‹s
,

149 
göt
 
ncﬁ‹s
);

150 
göt
 
	`gdk_cﬁ‹_whôe
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

151 
GdkCﬁ‹
 *
cﬁ‹
);

152 
göt
 
	`gdk_cﬁ‹_bœck
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

153 
GdkCﬁ‹
 *
cﬁ‹
);

154 
göt
 
	`gdk_cﬁ‹_Æloc
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

155 
GdkCﬁ‹
 *
cﬁ‹
);

156 
göt
 
	`gdk_cﬁ‹_ch™ge
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

157 
GdkCﬁ‹
 *
cﬁ‹
);

160 #i‡!
	`deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GDK_COMPILATION
)

162 
göt
 
	`gdk_cﬁ‹s_Æloc
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

163 
gboﬁón
 
c⁄tiguous
,

164 
gul⁄g
 *
∂™es
,

165 
göt
 
≈œ√s
,

166 
gul⁄g
 *
pixñs
,

167 
göt
 
≈ixñs
);

168 
	`gdk_cﬁ‹s_‰ì
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

169 
gul⁄g
 *
pixñs
,

170 
göt
 
≈ixñs
,

171 
gul⁄g
 
∂™es
);

174 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkcursor.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_CURSOR_H__


32 
	#__GDK_CURSOR_H__


	)

34 
	~<gdk/gdkty≥s.h
>

35 
	~<gdk-pixbuf/gdk-pixbuf.h
>

37 
	gG_BEGIN_DECLS


39 
	#GDK_TYPE_CURSOR
 (
	`gdk_curs‹_gë_ty≥
 ())

	)

45 
	mGDK_X_CURSOR
 = 0,

46 
	mGDK_ARROW
 = 2,

47 
	mGDK_BASED_ARROW_DOWN
 = 4,

48 
	mGDK_BASED_ARROW_UP
 = 6,

49 
	mGDK_BOAT
 = 8,

50 
	mGDK_BOGOSITY
 = 10,

51 
	mGDK_BOTTOM_LEFT_CORNER
 = 12,

52 
	mGDK_BOTTOM_RIGHT_CORNER
 = 14,

53 
	mGDK_BOTTOM_SIDE
 = 16,

54 
	mGDK_BOTTOM_TEE
 = 18,

55 
	mGDK_BOX_SPIRAL
 = 20,

56 
	mGDK_CENTER_PTR
 = 22,

57 
	mGDK_CIRCLE
 = 24,

58 
	mGDK_CLOCK
 = 26,

59 
	mGDK_COFFEE_MUG
 = 28,

60 
	mGDK_CROSS
 = 30,

61 
	mGDK_CROSS_REVERSE
 = 32,

62 
	mGDK_CROSSHAIR
 = 34,

63 
	mGDK_DIAMOND_CROSS
 = 36,

64 
	mGDK_DOT
 = 38,

65 
	mGDK_DOTBOX
 = 40,

66 
	mGDK_DOUBLE_ARROW
 = 42,

67 
	mGDK_DRAFT_LARGE
 = 44,

68 
	mGDK_DRAFT_SMALL
 = 46,

69 
	mGDK_DRAPED_BOX
 = 48,

70 
	mGDK_EXCHANGE
 = 50,

71 
	mGDK_FLEUR
 = 52,

72 
	mGDK_GOBBLER
 = 54,

73 
	mGDK_GUMBY
 = 56,

74 
	mGDK_HAND1
 = 58,

75 
	mGDK_HAND2
 = 60,

76 
	mGDK_HEART
 = 62,

77 
	mGDK_ICON
 = 64,

78 
	mGDK_IRON_CROSS
 = 66,

79 
	mGDK_LEFT_PTR
 = 68,

80 
	mGDK_LEFT_SIDE
 = 70,

81 
	mGDK_LEFT_TEE
 = 72,

82 
	mGDK_LEFTBUTTON
 = 74,

83 
	mGDK_LL_ANGLE
 = 76,

84 
	mGDK_LR_ANGLE
 = 78,

85 
	mGDK_MAN
 = 80,

86 
	mGDK_MIDDLEBUTTON
 = 82,

87 
	mGDK_MOUSE
 = 84,

88 
	mGDK_PENCIL
 = 86,

89 
	mGDK_PIRATE
 = 88,

90 
	mGDK_PLUS
 = 90,

91 
	mGDK_QUESTION_ARROW
 = 92,

92 
	mGDK_RIGHT_PTR
 = 94,

93 
	mGDK_RIGHT_SIDE
 = 96,

94 
	mGDK_RIGHT_TEE
 = 98,

95 
	mGDK_RIGHTBUTTON
 = 100,

96 
	mGDK_RTL_LOGO
 = 102,

97 
	mGDK_SAILBOAT
 = 104,

98 
	mGDK_SB_DOWN_ARROW
 = 106,

99 
	mGDK_SB_H_DOUBLE_ARROW
 = 108,

100 
	mGDK_SB_LEFT_ARROW
 = 110,

101 
	mGDK_SB_RIGHT_ARROW
 = 112,

102 
	mGDK_SB_UP_ARROW
 = 114,

103 
	mGDK_SB_V_DOUBLE_ARROW
 = 116,

104 
	mGDK_SHUTTLE
 = 118,

105 
	mGDK_SIZING
 = 120,

106 
	mGDK_SPIDER
 = 122,

107 
	mGDK_SPRAYCAN
 = 124,

108 
	mGDK_STAR
 = 126,

109 
	mGDK_TARGET
 = 128,

110 
	mGDK_TCROSS
 = 130,

111 
	mGDK_TOP_LEFT_ARROW
 = 132,

112 
	mGDK_TOP_LEFT_CORNER
 = 134,

113 
	mGDK_TOP_RIGHT_CORNER
 = 136,

114 
	mGDK_TOP_SIDE
 = 138,

115 
	mGDK_TOP_TEE
 = 140,

116 
	mGDK_TREK
 = 142,

117 
	mGDK_UL_ANGLE
 = 144,

118 
	mGDK_UMBRELLA
 = 146,

119 
	mGDK_UR_ANGLE
 = 148,

120 
	mGDK_WATCH
 = 150,

121 
	mGDK_XTERM
 = 152,

122 
	mGDK_LAST_CURSOR
,

123 
	mGDK_BLANK_CURSOR
 = -2,

124 
	mGDK_CURSOR_IS_PIXMAP
 = -1

125 } 
	tGdkCurs‹Ty≥
;

127 
	s_GdkCurs‹


129 
GdkCurs‹Ty≥
 
	mty≥
;

131 
guöt
 
	mªf_cou¡
;

137 
GTy≥
 
	$gdk_curs‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

139 
GdkCurs‹
* 
	`gdk_curs‹_√w_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

140 
GdkCurs‹Ty≥
 
curs‹_ty≥
);

141 #i‚de‡
GDK_MULTIHEAD_SAFE


142 
GdkCurs‹
* 
	`gdk_curs‹_√w
 (
GdkCurs‹Ty≥
 
curs‹_ty≥
);

144 
GdkCurs‹
* 
	`gdk_curs‹_√w_‰om_pixm≠
 (
GdkPixm≠
 *
sour˚
,

145 
GdkPixm≠
 *
mask
,

146 c⁄° 
GdkCﬁ‹
 *
fg
,

147 c⁄° 
GdkCﬁ‹
 *
bg
,

148 
göt
 
x
,

149 
göt
 
y
);

150 
GdkCurs‹
* 
	`gdk_curs‹_√w_‰om_pixbuf
 (
GdkDi•œy
 *
di•œy
,

151 
GdkPixbuf
 *
pixbuf
,

152 
göt
 
x
,

153 
göt
 
y
);

154 
GdkDi•œy
* 
	`gdk_curs‹_gë_di•œy
 (
GdkCurs‹
 *
curs‹
);

155 
GdkCurs‹
* 
	`gdk_curs‹_ªf
 (GdkCurs‹ *
curs‹
);

156 
	`gdk_curs‹_uƒef
 (
GdkCurs‹
 *
curs‹
);

157 
GdkCurs‹
* 
	`gdk_curs‹_√w_‰om_«me
 (
GdkDi•œy
 *
di•œy
,

158 c⁄° 
gch¨
 *
«me
);

159 
GdkPixbuf
* 
	`gdk_curs‹_gë_image
 (
GdkCurs‹
 *
curs‹
);

161 #i‚de‡
GDK_DISABLE_DEPRECATED


162 
	#gdk_curs‹_de°roy
 
gdk_curs‹_uƒef


	)

165 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkdisplay.h

24 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

28 #i‚de‡
__GDK_DISPLAY_H__


29 
	#__GDK_DISPLAY_H__


	)

31 
	~<gdk/gdkty≥s.h
>

32 
	~<gdk/gdkevíts.h
>

34 
G_BEGIN_DECLS


36 
_GdkDi•œyCœss
 
	tGdkDi•œyCœss
;

37 
_GdkDi•œyPoöãrHooks
 
	tGdkDi•œyPoöãrHooks
;

39 
	#GDK_TYPE_DISPLAY
 (
	`gdk_di•œy_gë_ty≥
 ())

	)

40 
	#GDK_DISPLAY_OBJECT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_DISPLAY
, 
GdkDi•œy
))

	)

41 
	#GDK_DISPLAY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_DISPLAY
, 
GdkDi•œyCœss
))

	)

42 
	#GDK_IS_DISPLAY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_DISPLAY
))

	)

43 
	#GDK_IS_DISPLAY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_DISPLAY
))

	)

44 
	#GDK_DISPLAY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_DISPLAY
, 
GdkDi•œyCœss
))

	)

46 
	s_GdkDi•œy


48 
GObje˘
 
	m∑ª¡_ö°™˚
;

51 
GLi°
 *
	mqueued_evíts
;

52 
GLi°
 *
	mqueued_èû
;

57 
guöt32
 
	mbuâ⁄_˛ick_time
[2];

58 
GdkWödow
 *
	mbuâ⁄_wödow
[2];

59 
göt
 
	mbuâ⁄_numbî
[2];

61 
guöt
 
	mdoubÀ_˛ick_time
;

62 
GdkDevi˚
 *
	mc‹e_poöãr
;

64 c⁄° 
GdkDi•œyPoöãrHooks
 *
	mpoöãr_hooks
;

66 
guöt
 
	m˛o£d
 : 1;

68 
guöt
 
	mdoubÀ_˛ick_di°™˚
;

69 
göt
 
	mbuâ⁄_x
[2];

70 
göt
 
	mbuâ⁄_y
[2];

73 
	s_GdkDi•œyCœss


75 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

77 
G_CONST_RETURN
 
	mgch¨
 * (*
	mgë_di•œy_«me
Ë(
GdkDi•œy
 *
	mdi•œy
);

78 
göt
 (*
gë_n_s¸ìns
Ë(
GdkDi•œy
 *
	mdi•œy
);

79 
	mGdkS¸ìn
 * (*
	mgë_s¸ìn
Ë(
GdkDi•œy
 *
	mdi•œy
,

80 
göt
 
	ms¸ìn_num
);

81 
	mGdkS¸ìn
 * (*
	mgë_deÁu…_s¸ìn
Ë(
GdkDi•œy
 *
	mdi•œy
);

85 (*
	m˛o£d
Ë(
GdkDi•œy
 *
	mdi•œy
,

86 
gboﬁón
 
	mis_îr‹
);

89 
	s_GdkDi•œyPoöãrHooks


91 (*
	mgë_poöãr
Ë(
GdkDi•œy
 *
	mdi•œy
,

92 
GdkS¸ìn
 **
	ms¸ìn
,

93 
göt
 *
	mx
,

94 
göt
 *
	my
,

95 
GdkModifõrTy≥
 *
	mmask
);

96 
	mGdkWödow
* (*
	mwödow_gë_poöãr
Ë(
GdkDi•œy
 *
	mdi•œy
,

97 
GdkWödow
 *
	mwödow
,

98 
göt
 *
	mx
,

99 
göt
 *
	my
,

100 
GdkModifõrTy≥
 *
	mmask
);

101 
	mGdkWödow
* (*
	mwödow_©_poöãr
Ë(
GdkDi•œy
 *
	mdi•œy
,

102 
göt
 *
	mwö_x
,

103 
göt
 *
	mwö_y
);

106 
GTy≥
 
	$gdk_di•œy_gë_ty≥
 (Ë
G_GNUC_CONST
;

107 
GdkDi•œy
 *
	`gdk_di•œy_›í
 (c⁄° 
gch¨
 *
di•œy_«me
);

109 
G_CONST_RETURN
 
gch¨
 * 
	`gdk_di•œy_gë_«me
 (
GdkDi•œy
 *
di•œy
);

111 
göt
 
	`gdk_di•œy_gë_n_s¸ìns
 (
GdkDi•œy
 *
di•œy
);

112 
GdkS¸ìn
 * 
	`gdk_di•œy_gë_s¸ìn
 (
GdkDi•œy
 *
di•œy
,

113 
göt
 
s¸ìn_num
);

114 
GdkS¸ìn
 * 
	`gdk_di•œy_gë_deÁu…_s¸ìn
 (
GdkDi•œy
 *
di•œy
);

115 
	`gdk_di•œy_poöãr_ungøb
 (
GdkDi•œy
 *
di•œy
,

116 
guöt32
 
time_
);

117 
	`gdk_di•œy_keybﬂrd_ungøb
 (
GdkDi•œy
 *
di•œy
,

118 
guöt32
 
time_
);

119 
gboﬁón
 
	`gdk_di•œy_poöãr_is_gøbbed
 (
GdkDi•œy
 *
di•œy
);

120 
	`gdk_di•œy_bìp
 (
GdkDi•œy
 *
di•œy
);

121 
	`gdk_di•œy_sync
 (
GdkDi•œy
 *
di•œy
);

122 
	`gdk_di•œy_Êush
 (
GdkDi•œy
 *
di•œy
);

124 
	`gdk_di•œy_˛o£
 (
GdkDi•œy
 *
di•œy
);

126 
GLi°
 * 
	`gdk_di•œy_li°_devi˚s
 (
GdkDi•œy
 *
di•œy
);

128 
GdkEvít
* 
	`gdk_di•œy_gë_evít
 (
GdkDi•œy
 *
di•œy
);

129 
GdkEvít
* 
	`gdk_di•œy_≥ek_evít
 (
GdkDi•œy
 *
di•œy
);

130 
	`gdk_di•œy_put_evít
 (
GdkDi•œy
 *
di•œy
,

131 c⁄° 
GdkEvít
 *
evít
);

133 
	`gdk_di•œy_add_˛õ¡_mesßge_fûãr
 (
GdkDi•œy
 *
di•œy
,

134 
GdkAtom
 
mesßge_ty≥
,

135 
GdkFûãrFunc
 
func
,

136 
gpoöãr
 
d©a
);

138 
	`gdk_di•œy_£t_doubÀ_˛ick_time
 (
GdkDi•œy
 *
di•œy
,

139 
guöt
 
m£c
);

140 
	`gdk_di•œy_£t_doubÀ_˛ick_di°™˚
 (
GdkDi•œy
 *
di•œy
,

141 
guöt
 
di°™˚
);

143 
GdkDi•œy
 *
	`gdk_di•œy_gë_deÁu…
 ();

145 
GdkDevi˚
 *
	`gdk_di•œy_gë_c‹e_poöãr
 (
GdkDi•œy
 *
di•œy
);

147 
	`gdk_di•œy_gë_poöãr
 (
GdkDi•œy
 *
di•œy
,

148 
GdkS¸ìn
 **
s¸ìn
,

149 
göt
 *
x
,

150 
göt
 *
y
,

151 
GdkModifõrTy≥
 *
mask
);

152 
GdkWödow
 * 
	`gdk_di•œy_gë_wödow_©_poöãr
 (
GdkDi•œy
 *
di•œy
,

153 
göt
 *
wö_x
,

154 
göt
 *
wö_y
);

155 
	`gdk_di•œy_w¨p_poöãr
 (
GdkDi•œy
 *
di•œy
,

156 
GdkS¸ìn
 *
s¸ìn
,

157 
göt
 
x
,

158 
göt
 
y
);

160 
GdkDi•œyPoöãrHooks
 *
	`gdk_di•œy_£t_poöãr_hooks
 (
GdkDi•œy
 *
di•œy
,

161 c⁄° 
GdkDi•œyPoöãrHooks
 *
√w_hooks
);

163 
GdkDi•œy
 *
	`gdk_di•œy_›í_deÁu…_libgtk_⁄ly
 ();

165 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_curs‹_Æpha
 (
GdkDi•œy
 *
di•œy
);

166 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_curs‹_cﬁ‹
 (
GdkDi•œy
 *
di•œy
);

167 
guöt
 
	`gdk_di•œy_gë_deÁu…_curs‹_size
 (
GdkDi•œy
 *
di•œy
);

168 
	`gdk_di•œy_gë_maximÆ_curs‹_size
 (
GdkDi•œy
 *
di•œy
,

169 
guöt
 *
width
,

170 
guöt
 *
height
);

172 
GdkWödow
 *
	`gdk_di•œy_gë_deÁu…_group
 (
GdkDi•œy
 *
di•œy
);

174 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_£À˘i⁄_nŸifiˇti⁄
 (
GdkDi•œy
 *
di•œy
);

175 
gboﬁón
 
	`gdk_di•œy_ªque°_£À˘i⁄_nŸifiˇti⁄
 (
GdkDi•œy
 *
di•œy
,

176 
GdkAtom
 
£À˘i⁄
);

178 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_˛ùbﬂrd_≥rsi°í˚
 (
GdkDi•œy
 *
di•œy
);

179 
	`gdk_di•œy_°‹e_˛ùbﬂrd
 (
GdkDi•œy
 *
di•œy
,

180 
GdkWödow
 *
˛ùbﬂrd_wödow
,

181 
guöt32
 
time_
,

182 c⁄° 
GdkAtom
 *
èrgës
,

183 
göt
 
n_èrgës
);

185 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_sh≠es
 (
GdkDi•œy
 *
di•œy
);

186 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_öput_sh≠es
 (
GdkDi•œy
 *
di•œy
);

187 
gboﬁón
 
	`gdk_di•œy_suµ‹ts_composôe
 (
GdkDi•œy
 *
di•œy
);

189 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkdisplaymanager.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_DISPLAY_MANAGER_H__


32 
	#__GDK_DISPLAY_MANAGER_H__


	)

34 
	~<gdk/gdkty≥s.h
>

35 
	~<gdk/gdkdi•œy.h
>

37 
G_BEGIN_DECLS


39 
_GdkDi•œyM™agî
 
	tGdkDi•œyM™agî
;

40 
_GdkDi•œyM™agîCœss
 
	tGdkDi•œyM™agîCœss
;

42 
	#GDK_TYPE_DISPLAY_MANAGER
 (
	`gdk_di•œy_m™agî_gë_ty≥
 ())

	)

43 
	#GDK_DISPLAY_MANAGER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_DISPLAY_MANAGER
, 
GdkDi•œyM™agî
))

	)

44 
	#GDK_DISPLAY_MANAGER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_DISPLAY_MANAGER
, 
GdkDi•œyM™agîCœss
))

	)

45 
	#GDK_IS_DISPLAY_MANAGER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_DISPLAY_MANAGER
))

	)

46 
	#GDK_IS_DISPLAY_MANAGER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_DISPLAY_MANAGER
))

	)

47 
	#GDK_DISPLAY_MANAGER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_DISPLAY_MANAGER
, 
GdkDi•œyM™agîCœss
))

	)

49 
	s_GdkDi•œyM™agîCœss


51 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

53 (*
	mdi•œy_›íed
Ë(
GdkDi•œyM™agî
 *
	mdi•œy_m™agî
,

54 
GdkDi•œy
 *
	mdi•œy
);

57 
GTy≥
 
	$gdk_di•œy_m™agî_gë_ty≥
 (Ë
G_GNUC_CONST
;

59 
GdkDi•œyM™agî
 *
	`gdk_di•œy_m™agî_gë
 ();

60 
GdkDi•œy
 * 
	`gdk_di•œy_m™agî_gë_deÁu…_di•œy
 (
GdkDi•œyM™agî
 *
di•œy_m™agî
);

61 
	`gdk_di•œy_m™agî_£t_deÁu…_di•œy
 (
GdkDi•œyM™agî
 *
di•œy_m™agî
,

62 
GdkDi•œy
 *
di•œy
);

63 
GSLi°
 * 
	`gdk_di•œy_m™agî_li°_di•œys
 (
GdkDi•œyM™agî
 *
di•œy_m™agî
);

65 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkdnd.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_DND_H__


32 
	#__GDK_DND_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
G_BEGIN_DECLS


38 
_GdkDøgC⁄ãxt
 
	tGdkDøgC⁄ãxt
;

42 
	mGDK_ACTION_DEFAULT
 = 1 << 0,

43 
	mGDK_ACTION_COPY
 = 1 << 1,

44 
	mGDK_ACTION_MOVE
 = 1 << 2,

45 
	mGDK_ACTION_LINK
 = 1 << 3,

46 
	mGDK_ACTION_PRIVATE
 = 1 << 4,

47 
	mGDK_ACTION_ASK
 = 1 << 5

48 } 
	tGdkDøgA˘i⁄
;

52 
	mGDK_DRAG_PROTO_MOTIF
,

53 
	mGDK_DRAG_PROTO_XDND
,

54 
	mGDK_DRAG_PROTO_ROOTWIN
,

56 
	mGDK_DRAG_PROTO_NONE
,

57 
	mGDK_DRAG_PROTO_WIN32_DROPFILES
,

58 
	mGDK_DRAG_PROTO_OLE2
,

59 
	mGDK_DRAG_PROTO_LOCAL


60 } 
	tGdkDøgPrŸocﬁ
;

66 
_GdkDøgC⁄ãxtCœss
 
	tGdkDøgC⁄ãxtCœss
;

68 
	#GDK_TYPE_DRAG_CONTEXT
 (
	`gdk_døg_c⁄ãxt_gë_ty≥
 ())

	)

69 
	#GDK_DRAG_CONTEXT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_DRAG_CONTEXT
, 
GdkDøgC⁄ãxt
))

	)

70 
	#GDK_DRAG_CONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_DRAG_CONTEXT
, 
GdkDøgC⁄ãxtCœss
))

	)

71 
	#GDK_IS_DRAG_CONTEXT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_DRAG_CONTEXT
))

	)

72 
	#GDK_IS_DRAG_CONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_DRAG_CONTEXT
))

	)

73 
	#GDK_DRAG_CONTEXT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_DRAG_CONTEXT
, 
GdkDøgC⁄ãxtCœss
))

	)

75 
	s_GdkDøgC⁄ãxt
 {

76 
GObje˘
 
	m∑ª¡_ö°™˚
;

80 
GdkDøgPrŸocﬁ
 
	m¥Ÿocﬁ
;

82 
gboﬁón
 
	mis_sour˚
;

84 
GdkWödow
 *
	msour˚_wödow
;

85 
GdkWödow
 *
	mde°_wödow
;

87 
GLi°
 *
	mèrgës
;

88 
GdkDøgA˘i⁄
 
	ma˘i⁄s
;

89 
GdkDøgA˘i⁄
 
	msugge°ed_a˘i⁄
;

90 
GdkDøgA˘i⁄
 
	ma˘i⁄
;

92 
guöt32
 
	m°¨t_time
;

96 
gpoöãr
 
	mwödowög_d©a
;

99 
	s_GdkDøgC⁄ãxtCœss
 {

100 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

107 
GTy≥
 
	$gdk_døg_c⁄ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

108 
GdkDøgC⁄ãxt
 * 
	`gdk_døg_c⁄ãxt_√w
 ();

110 #i‚de‡
GDK_DISABLE_DEPRECATED


111 
	`gdk_døg_c⁄ãxt_ªf
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

112 
	`gdk_døg_c⁄ãxt_uƒef
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

117 
	`gdk_døg_°©us
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

118 
GdkDøgA˘i⁄
 
a˘i⁄
,

119 
guöt32
 
time_
);

120 
	`gdk_dr›_ª∂y
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

121 
gboﬁón
 
ok
,

122 
guöt32
 
time_
);

123 
	`gdk_dr›_föish
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

124 
gboﬁón
 
suc˚ss
,

125 
guöt32
 
time_
);

126 
GdkAtom
 
	`gdk_døg_gë_£À˘i⁄
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

130 
GdkDøgC⁄ãxt
 * 
	`gdk_døg_begö
 (
GdkWödow
 *
wödow
,

131 
GLi°
 *
èrgës
);

133 
GdkN©iveWödow
 
	`gdk_døg_gë_¥Ÿocﬁ_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

134 
GdkN©iveWödow
 
xid
,

135 
GdkDøgPrŸocﬁ
 *
¥Ÿocﬁ
);

137 
	`gdk_døg_föd_wödow_f‹_s¸ìn
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

138 
GdkWödow
 *
døg_wödow
,

139 
GdkS¸ìn
 *
s¸ìn
,

140 
göt
 
x_roŸ
,

141 
göt
 
y_roŸ
,

142 
GdkWödow
 **
de°_wödow
,

143 
GdkDøgPrŸocﬁ
 *
¥Ÿocﬁ
);

145 #i‚de‡
GDK_MULTIHEAD_SAFE


146 
GdkN©iveWödow
 
	`gdk_døg_gë_¥Ÿocﬁ
 (GdkN©iveWödow 
xid
,

147 
GdkDøgPrŸocﬁ
 *
¥Ÿocﬁ
);

149 
	`gdk_døg_föd_wödow
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

150 
GdkWödow
 *
døg_wödow
,

151 
göt
 
x_roŸ
,

152 
göt
 
y_roŸ
,

153 
GdkWödow
 **
de°_wödow
,

154 
GdkDøgPrŸocﬁ
 *
¥Ÿocﬁ
);

157 
gboﬁón
 
	`gdk_døg_mŸi⁄
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

158 
GdkWödow
 *
de°_wödow
,

159 
GdkDøgPrŸocﬁ
 
¥Ÿocﬁ
,

160 
göt
 
x_roŸ
,

161 
göt
 
y_roŸ
,

162 
GdkDøgA˘i⁄
 
sugge°ed_a˘i⁄
,

163 
GdkDøgA˘i⁄
 
possibÀ_a˘i⁄s
,

164 
guöt32
 
time_
);

165 
	`gdk_døg_dr›
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

166 
guöt32
 
time_
);

167 
	`gdk_døg_ab‹t
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
,

168 
guöt32
 
time_
);

169 
gboﬁón
 
	`gdk_døg_dr›_suc˚eded
 (
GdkDøgC⁄ãxt
 *
c⁄ãxt
);

171 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkdrawable.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_DRAWABLE_H__


32 
	#__GDK_DRAWABLE_H__


	)

34 
	~<gdk/gdkty≥s.h
>

35 
	~<gdk/gdkgc.h
>

36 
	~<gdk/gdkrgb.h
>

37 
	~<gdk-pixbuf/gdk-pixbuf.h
>

39 
	~<ˇúo.h
>

41 
G_BEGIN_DECLS


43 
_GdkDøwabÀCœss
 
	tGdkDøwabÀCœss
;

44 
_GdkTø≥zoid
 
	tGdkTø≥zoid
;

46 
	#GDK_TYPE_DRAWABLE
 (
	`gdk_døwabÀ_gë_ty≥
 ())

	)

47 
	#GDK_DRAWABLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_DRAWABLE
, 
GdkDøwabÀ
))

	)

48 
	#GDK_DRAWABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_DRAWABLE
, 
GdkDøwabÀCœss
))

	)

49 
	#GDK_IS_DRAWABLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_DRAWABLE
))

	)

50 
	#GDK_IS_DRAWABLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_DRAWABLE
))

	)

51 
	#GDK_DRAWABLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_DRAWABLE
, 
GdkDøwabÀCœss
))

	)

53 
	s_GdkDøwabÀ


55 
GObje˘
 
	m∑ª¡_ö°™˚
;

58 
	s_GdkDøwabÀCœss


60 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

62 
	mGdkGC
 *(*
	m¸óã_gc
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

63 
GdkGCVÆues
 *
	mvÆues
,

64 
GdkGCVÆuesMask
 
	mmask
);

65 (*
	mdøw_ª˘™gÀ
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

66 
GdkGC
 *
	mgc
,

67 
gboﬁón
 
	mfûÀd
,

68 
göt
 
	mx
,

69 
göt
 
	my
,

70 
göt
 
	mwidth
,

71 
göt
 
	mheight
);

72 (*
	mdøw_¨c
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

73 
GdkGC
 *
	mgc
,

74 
gboﬁón
 
	mfûÀd
,

75 
göt
 
	mx
,

76 
göt
 
	my
,

77 
göt
 
	mwidth
,

78 
göt
 
	mheight
,

79 
göt
 
	m™gÀ1
,

80 
göt
 
	m™gÀ2
);

81 (*
	mdøw_pﬁyg⁄
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

82 
GdkGC
 *
	mgc
,

83 
gboﬁón
 
	mfûÀd
,

84 
GdkPoöt
 *
	mpoöts
,

85 
göt
 
	m≈oöts
);

86 (*
	mdøw_ãxt
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

87 
GdkF⁄t
 *
	mf⁄t
,

88 
GdkGC
 *
	mgc
,

89 
göt
 
	mx
,

90 
göt
 
	my
,

91 c⁄° 
gch¨
 *
	mãxt
,

92 
göt
 
	mãxt_Àngth
);

93 (*
	mdøw_ãxt_wc
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

94 
GdkF⁄t
 *
	mf⁄t
,

95 
GdkGC
 *
	mgc
,

96 
göt
 
	mx
,

97 
göt
 
	my
,

98 c⁄° 
GdkWCh¨
 *
	mãxt
,

99 
göt
 
	mãxt_Àngth
);

100 (*
	mdøw_døwabÀ
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

101 
GdkGC
 *
	mgc
,

102 
GdkDøwabÀ
 *
	m§c
,

103 
göt
 
	mx§c
,

104 
göt
 
	my§c
,

105 
göt
 
	mxde°
,

106 
göt
 
	myde°
,

107 
göt
 
	mwidth
,

108 
göt
 
	mheight
);

109 (*
	mdøw_poöts
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

110 
GdkGC
 *
	mgc
,

111 
GdkPoöt
 *
	mpoöts
,

112 
göt
 
	m≈oöts
);

113 (*
	mdøw_£gmíts
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

114 
GdkGC
 *
	mgc
,

115 
GdkSegmít
 *
	m£gs
,

116 
göt
 
	mn£gs
);

117 (*
	mdøw_löes
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

118 
GdkGC
 *
	mgc
,

119 
GdkPoöt
 *
	mpoöts
,

120 
göt
 
	m≈oöts
);

122 (*
	mdøw_glyphs
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

123 
GdkGC
 *
	mgc
,

124 
P™goF⁄t
 *
	mf⁄t
,

125 
göt
 
	mx
,

126 
göt
 
	my
,

127 
P™goGlyphSåög
 *
	mglyphs
);

129 (*
	mdøw_image
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

130 
GdkGC
 *
	mgc
,

131 
GdkImage
 *
	mimage
,

132 
göt
 
	mx§c
,

133 
göt
 
	my§c
,

134 
göt
 
	mxde°
,

135 
göt
 
	myde°
,

136 
göt
 
	mwidth
,

137 
göt
 
	mheight
);

139 
göt
 (*
gë_dïth
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

140 (*
	mgë_size
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

141 
göt
 *
	mwidth
,

142 
göt
 *
	mheight
);

144 (*
	m£t_cﬁ‹m≠
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

145 
GdkCﬁ‹m≠
 *
	mcm≠
);

147 
	mGdkCﬁ‹m≠
* (*
	mgë_cﬁ‹m≠
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

148 
	mGdkVisuÆ
* (*
	mgë_visuÆ
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

149 
	mGdkS¸ìn
* (*
	mgë_s¸ìn
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

151 
	mGdkImage
* (*
	mgë_image
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

152 
göt
 
	mx
,

153 
göt
 
	my
,

154 
göt
 
	mwidth
,

155 
göt
 
	mheight
);

157 
	mGdkRegi⁄
* (*
	mgë_˛ù_ªgi⁄
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

158 
	mGdkRegi⁄
* (*
	mgë_visibÀ_ªgi⁄
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

160 
	mGdkDøwabÀ
* (*
	mgë_composôe_døwabÀ
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

161 
göt
 
	mx
,

162 
göt
 
	my
,

163 
göt
 
	mwidth
,

164 
göt
 
	mheight
,

165 
göt
 *
	mcomposôe_x_off£t
,

166 
göt
 *
	mcomposôe_y_off£t
);

168 (*
	mdøw_pixbuf
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

169 
GdkGC
 *
	mgc
,

170 
GdkPixbuf
 *
	mpixbuf
,

171 
göt
 
	m§c_x
,

172 
göt
 
	m§c_y
,

173 
göt
 
	mde°_x
,

174 
göt
 
	mde°_y
,

175 
göt
 
	mwidth
,

176 
göt
 
	mheight
,

177 
GdkRgbDôhî
 
	mdôhî
,

178 
göt
 
	mx_dôhî
,

179 
göt
 
	my_dôhî
);

180 
	mGdkImage
* (*
	m_c›y_to_image
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

181 
GdkImage
 *
	mimage
,

182 
göt
 
	m§c_x
,

183 
göt
 
	m§c_y
,

184 
göt
 
	mde°_x
,

185 
göt
 
	mde°_y
,

186 
göt
 
	mwidth
,

187 
göt
 
	mheight
);

189 (*
	mdøw_glyphs_å™sf‹med
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

190 
GdkGC
 *
	mgc
,

191 
P™goM©rix
 *
	mm©rix
,

192 
P™goF⁄t
 *
	mf⁄t
,

193 
göt
 
	mx
,

194 
göt
 
	my
,

195 
P™goGlyphSåög
 *
	mglyphs
);

196 (*
	mdøw_å≠ezoids
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
,

197 
GdkGC
 *
	mgc
,

198 
GdkTø≥zoid
 *
	må≠ezoids
,

199 
göt
 
	mn_å≠ezoids
);

201 
	mˇúo_surÁ˚_t
 *(*
	mªf_ˇúo_surÁ˚
Ë(
GdkDøwabÀ
 *
	mdøwabÀ
);

204 (*
	m_gdk_ª£rved4
) ();

205 (*
	m_gdk_ª£rved5
) ();

206 (*
	m_gdk_ª£rved6
) ();

207 (*
	m_gdk_ª£rved7
) ();

208 (*
	m_gdk_ª£rved9
) ();

209 (*
	m_gdk_ª£rved10
) ();

210 (*
	m_gdk_ª£rved11
) ();

211 (*
	m_gdk_ª£rved12
) ();

212 (*
	m_gdk_ª£rved13
) ();

213 (*
	m_gdk_ª£rved14
) ();

214 (*
	m_gdk_ª£rved15
) ();

215 (*
	m_gdk_ª£rved16
) ();

218 
	s_GdkTø≥zoid


220 
	my1
, 
	mx11
, 
	mx21
, 
	my2
, 
	mx12
, 
	mx22
;

223 
GTy≥
 
	$gdk_døwabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

228 #i‚de‡
GDK_DISABLE_DEPRECATED


229 
	`gdk_døwabÀ_£t_d©a
 (
GdkDøwabÀ
 *
døwabÀ
,

230 c⁄° 
gch¨
 *
key
,

231 
gpoöãr
 
d©a
,

232 
GDe°royNŸify
 
de°roy_func
);

233 
gpoöãr
 
	`gdk_døwabÀ_gë_d©a
 (
GdkDøwabÀ
 *
døwabÀ
,

234 c⁄° 
gch¨
 *
key
);

237 
	`gdk_døwabÀ_gë_size
 (
GdkDøwabÀ
 *
døwabÀ
,

238 
göt
 *
width
,

239 
göt
 *
height
);

240 
	`gdk_døwabÀ_£t_cﬁ‹m≠
 (
GdkDøwabÀ
 *
døwabÀ
,

241 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

242 
GdkCﬁ‹m≠
* 
	`gdk_døwabÀ_gë_cﬁ‹m≠
 (
GdkDøwabÀ
 *
døwabÀ
);

243 
GdkVisuÆ
* 
	`gdk_døwabÀ_gë_visuÆ
 (
GdkDøwabÀ
 *
døwabÀ
);

244 
göt
 
	`gdk_døwabÀ_gë_dïth
 (
GdkDøwabÀ
 *
døwabÀ
);

245 
GdkS¸ìn
* 
	`gdk_døwabÀ_gë_s¸ìn
 (
GdkDøwabÀ
 *
døwabÀ
);

246 
GdkDi•œy
* 
	`gdk_døwabÀ_gë_di•œy
 (
GdkDøwabÀ
 *
døwabÀ
);

248 #i‚de‡
GDK_DISABLE_DEPRECATED


249 
GdkDøwabÀ
* 
	`gdk_døwabÀ_ªf
 (GdkDøwabÀ *
døwabÀ
);

250 
	`gdk_døwabÀ_uƒef
 (
GdkDøwabÀ
 *
døwabÀ
);

255 
	`gdk_døw_poöt
 (
GdkDøwabÀ
 *
døwabÀ
,

256 
GdkGC
 *
gc
,

257 
göt
 
x
,

258 
göt
 
y
);

259 
	`gdk_døw_löe
 (
GdkDøwabÀ
 *
døwabÀ
,

260 
GdkGC
 *
gc
,

261 
göt
 
x1_
,

262 
göt
 
y1_
,

263 
göt
 
x2_
,

264 
göt
 
y2_
);

265 
	`gdk_døw_ª˘™gÀ
 (
GdkDøwabÀ
 *
døwabÀ
,

266 
GdkGC
 *
gc
,

267 
gboﬁón
 
fûÀd
,

268 
göt
 
x
,

269 
göt
 
y
,

270 
göt
 
width
,

271 
göt
 
height
);

272 
	`gdk_døw_¨c
 (
GdkDøwabÀ
 *
døwabÀ
,

273 
GdkGC
 *
gc
,

274 
gboﬁón
 
fûÀd
,

275 
göt
 
x
,

276 
göt
 
y
,

277 
göt
 
width
,

278 
göt
 
height
,

279 
göt
 
™gÀ1
,

280 
göt
 
™gÀ2
);

281 
	`gdk_døw_pﬁyg⁄
 (
GdkDøwabÀ
 *
døwabÀ
,

282 
GdkGC
 *
gc
,

283 
gboﬁón
 
fûÀd
,

284 c⁄° 
GdkPoöt
 *
poöts
,

285 
göt
 
n_poöts
);

286 #i‡!
	`deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
)

288 
	`gdk_døw_°rög
 (
GdkDøwabÀ
 *
døwabÀ
,

289 
GdkF⁄t
 *
f⁄t
,

290 
GdkGC
 *
gc
,

291 
göt
 
x
,

292 
göt
 
y
,

293 c⁄° 
gch¨
 *
°rög
);

295 #i‡!
	`deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GDK_COMPILATION
)

297 
	`gdk_døw_ãxt
 (
GdkDøwabÀ
 *
døwabÀ
,

298 
GdkF⁄t
 *
f⁄t
,

299 
GdkGC
 *
gc
,

300 
göt
 
x
,

301 
göt
 
y
,

302 c⁄° 
gch¨
 *
ãxt
,

303 
göt
 
ãxt_Àngth
);

305 
	`gdk_døw_ãxt_wc
 (
GdkDøwabÀ
 *
døwabÀ
,

306 
GdkF⁄t
 *
f⁄t
,

307 
GdkGC
 *
gc
,

308 
göt
 
x
,

309 
göt
 
y
,

310 c⁄° 
GdkWCh¨
 *
ãxt
,

311 
göt
 
ãxt_Àngth
);

313 
	`gdk_døw_døwabÀ
 (
GdkDøwabÀ
 *
døwabÀ
,

314 
GdkGC
 *
gc
,

315 
GdkDøwabÀ
 *
§c
,

316 
göt
 
x§c
,

317 
göt
 
y§c
,

318 
göt
 
xde°
,

319 
göt
 
yde°
,

320 
göt
 
width
,

321 
göt
 
height
);

322 
	`gdk_døw_image
 (
GdkDøwabÀ
 *
døwabÀ
,

323 
GdkGC
 *
gc
,

324 
GdkImage
 *
image
,

325 
göt
 
x§c
,

326 
göt
 
y§c
,

327 
göt
 
xde°
,

328 
göt
 
yde°
,

329 
göt
 
width
,

330 
göt
 
height
);

331 
	`gdk_døw_poöts
 (
GdkDøwabÀ
 *
døwabÀ
,

332 
GdkGC
 *
gc
,

333 c⁄° 
GdkPoöt
 *
poöts
,

334 
göt
 
n_poöts
);

335 
	`gdk_døw_£gmíts
 (
GdkDøwabÀ
 *
døwabÀ
,

336 
GdkGC
 *
gc
,

337 c⁄° 
GdkSegmít
 *
£gs
,

338 
göt
 
n_£gs
);

339 
	`gdk_døw_löes
 (
GdkDøwabÀ
 *
døwabÀ
,

340 
GdkGC
 *
gc
,

341 c⁄° 
GdkPoöt
 *
poöts
,

342 
göt
 
n_poöts
);

343 
	`gdk_døw_pixbuf
 (
GdkDøwabÀ
 *
døwabÀ
,

344 
GdkGC
 *
gc
,

345 c⁄° 
GdkPixbuf
 *
pixbuf
,

346 
göt
 
§c_x
,

347 
göt
 
§c_y
,

348 
göt
 
de°_x
,

349 
göt
 
de°_y
,

350 
göt
 
width
,

351 
göt
 
height
,

352 
GdkRgbDôhî
 
dôhî
,

353 
göt
 
x_dôhî
,

354 
göt
 
y_dôhî
);

356 
	`gdk_døw_glyphs
 (
GdkDøwabÀ
 *
døwabÀ
,

357 
GdkGC
 *
gc
,

358 
P™goF⁄t
 *
f⁄t
,

359 
göt
 
x
,

360 
göt
 
y
,

361 
P™goGlyphSåög
 *
glyphs
);

362 
	`gdk_døw_œyout_löe
 (
GdkDøwabÀ
 *
døwabÀ
,

363 
GdkGC
 *
gc
,

364 
göt
 
x
,

365 
göt
 
y
,

366 
P™goLayoutLöe
 *
löe
);

367 
	`gdk_døw_œyout
 (
GdkDøwabÀ
 *
døwabÀ
,

368 
GdkGC
 *
gc
,

369 
göt
 
x
,

370 
göt
 
y
,

371 
P™goLayout
 *
œyout
);

373 
	`gdk_døw_œyout_löe_wôh_cﬁ‹s
 (
GdkDøwabÀ
 *
døwabÀ
,

374 
GdkGC
 *
gc
,

375 
göt
 
x
,

376 
göt
 
y
,

377 
P™goLayoutLöe
 *
löe
,

378 c⁄° 
GdkCﬁ‹
 *
f‹eground
,

379 c⁄° 
GdkCﬁ‹
 *
background
);

380 
	`gdk_døw_œyout_wôh_cﬁ‹s
 (
GdkDøwabÀ
 *
døwabÀ
,

381 
GdkGC
 *
gc
,

382 
göt
 
x
,

383 
göt
 
y
,

384 
P™goLayout
 *
œyout
,

385 c⁄° 
GdkCﬁ‹
 *
f‹eground
,

386 c⁄° 
GdkCﬁ‹
 *
background
);

388 
	`gdk_døw_glyphs_å™sf‹med
 (
GdkDøwabÀ
 *
døwabÀ
,

389 
GdkGC
 *
gc
,

390 c⁄° 
P™goM©rix
 *
m©rix
,

391 
P™goF⁄t
 *
f⁄t
,

392 
göt
 
x
,

393 
göt
 
y
,

394 
P™goGlyphSåög
 *
glyphs
);

395 
	`gdk_døw_å≠ezoids
 (
GdkDøwabÀ
 *
døwabÀ
,

396 
GdkGC
 *
gc
,

397 c⁄° 
GdkTø≥zoid
 *
å≠ezoids
,

398 
göt
 
n_å≠ezoids
);

400 #i‚de‡
GDK_DISABLE_DEPRECATED


401 
	#gdk_døw_pixm≠
 
gdk_døw_døwabÀ


	)

402 
	#gdk_døw_bôm≠
 
gdk_døw_døwabÀ


	)

405 
GdkImage
* 
	`gdk_døwabÀ_gë_image
 (
GdkDøwabÀ
 *
døwabÀ
,

406 
göt
 
x
,

407 
göt
 
y
,

408 
göt
 
width
,

409 
göt
 
height
);

410 
GdkImage
 *
	`gdk_døwabÀ_c›y_to_image
 (
GdkDøwabÀ
 *
døwabÀ
,

411 
GdkImage
 *
image
,

412 
göt
 
§c_x
,

413 
göt
 
§c_y
,

414 
göt
 
de°_x
,

415 
göt
 
de°_y
,

416 
göt
 
width
,

417 
göt
 
height
);

419 
GdkRegi⁄
 *
	`gdk_døwabÀ_gë_˛ù_ªgi⁄
 (
GdkDøwabÀ
 *
døwabÀ
);

420 
GdkRegi⁄
 *
	`gdk_døwabÀ_gë_visibÀ_ªgi⁄
 (
GdkDøwabÀ
 *
døwabÀ
);

422 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkenumtypes.h

4 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

8 #i‚de‡
__GDK_ENUM_TYPES_H__


9 
	#__GDK_ENUM_TYPES_H__


	)

11 
	~<glib-obje˘.h
>

13 
G_BEGIN_DECLS


16 
GTy≥
 
	$gdk_curs‹_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

17 
	#GDK_TYPE_CURSOR_TYPE
 (
	`gdk_curs‹_ty≥_gë_ty≥
 ())

	)

20 
GTy≥
 
	$gdk_døg_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

21 
	#GDK_TYPE_DRAG_ACTION
 (
	`gdk_døg_a˘i⁄_gë_ty≥
 ())

	)

22 
GTy≥
 
	$gdk_døg_¥Ÿocﬁ_gë_ty≥
 (Ë
G_GNUC_CONST
;

23 
	#GDK_TYPE_DRAG_PROTOCOL
 (
	`gdk_døg_¥Ÿocﬁ_gë_ty≥
 ())

	)

26 
GTy≥
 
	$gdk_fûãr_ªtu∫_gë_ty≥
 (Ë
G_GNUC_CONST
;

27 
	#GDK_TYPE_FILTER_RETURN
 (
	`gdk_fûãr_ªtu∫_gë_ty≥
 ())

	)

28 
GTy≥
 
	$gdk_evít_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

29 
	#GDK_TYPE_EVENT_TYPE
 (
	`gdk_evít_ty≥_gë_ty≥
 ())

	)

30 
GTy≥
 
	$gdk_evít_mask_gë_ty≥
 (Ë
G_GNUC_CONST
;

31 
	#GDK_TYPE_EVENT_MASK
 (
	`gdk_evít_mask_gë_ty≥
 ())

	)

32 
GTy≥
 
	$gdk_visibûôy_°©e_gë_ty≥
 (Ë
G_GNUC_CONST
;

33 
	#GDK_TYPE_VISIBILITY_STATE
 (
	`gdk_visibûôy_°©e_gë_ty≥
 ())

	)

34 
GTy≥
 
	$gdk_s¸ﬁl_dúe˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

35 
	#GDK_TYPE_SCROLL_DIRECTION
 (
	`gdk_s¸ﬁl_dúe˘i⁄_gë_ty≥
 ())

	)

36 
GTy≥
 
	$gdk_nŸify_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

37 
	#GDK_TYPE_NOTIFY_TYPE
 (
	`gdk_nŸify_ty≥_gë_ty≥
 ())

	)

38 
GTy≥
 
	$gdk_¸ossög_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

39 
	#GDK_TYPE_CROSSING_MODE
 (
	`gdk_¸ossög_mode_gë_ty≥
 ())

	)

40 
GTy≥
 
	$gdk_¥›îty_°©e_gë_ty≥
 (Ë
G_GNUC_CONST
;

41 
	#GDK_TYPE_PROPERTY_STATE
 (
	`gdk_¥›îty_°©e_gë_ty≥
 ())

	)

42 
GTy≥
 
	$gdk_wödow_°©e_gë_ty≥
 (Ë
G_GNUC_CONST
;

43 
	#GDK_TYPE_WINDOW_STATE
 (
	`gdk_wödow_°©e_gë_ty≥
 ())

	)

44 
GTy≥
 
	$gdk_£âög_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

45 
	#GDK_TYPE_SETTING_ACTION
 (
	`gdk_£âög_a˘i⁄_gë_ty≥
 ())

	)

46 
GTy≥
 
	$gdk_ow√r_ch™ge_gë_ty≥
 (Ë
G_GNUC_CONST
;

47 
	#GDK_TYPE_OWNER_CHANGE
 (
	`gdk_ow√r_ch™ge_gë_ty≥
 ())

	)

50 
GTy≥
 
	$gdk_f⁄t_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

51 
	#GDK_TYPE_FONT_TYPE
 (
	`gdk_f⁄t_ty≥_gë_ty≥
 ())

	)

54 
GTy≥
 
	$gdk_ˇp_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

55 
	#GDK_TYPE_CAP_STYLE
 (
	`gdk_ˇp_°yÀ_gë_ty≥
 ())

	)

56 
GTy≥
 
	$gdk_fûl_gë_ty≥
 (Ë
G_GNUC_CONST
;

57 
	#GDK_TYPE_FILL
 (
	`gdk_fûl_gë_ty≥
 ())

	)

58 
GTy≥
 
	$gdk_fun˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

59 
	#GDK_TYPE_FUNCTION
 (
	`gdk_fun˘i⁄_gë_ty≥
 ())

	)

60 
GTy≥
 
	$gdk_joö_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

61 
	#GDK_TYPE_JOIN_STYLE
 (
	`gdk_joö_°yÀ_gë_ty≥
 ())

	)

62 
GTy≥
 
	$gdk_löe_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
	#GDK_TYPE_LINE_STYLE
 (
	`gdk_löe_°yÀ_gë_ty≥
 ())

	)

64 
GTy≥
 
	$gdk_subwödow_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
	#GDK_TYPE_SUBWINDOW_MODE
 (
	`gdk_subwödow_mode_gë_ty≥
 ())

	)

66 
GTy≥
 
	$gdk_gc_vÆues_mask_gë_ty≥
 (Ë
G_GNUC_CONST
;

67 
	#GDK_TYPE_GC_VALUES_MASK
 (
	`gdk_gc_vÆues_mask_gë_ty≥
 ())

	)

70 
GTy≥
 
	$gdk_image_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
	#GDK_TYPE_IMAGE_TYPE
 (
	`gdk_image_ty≥_gë_ty≥
 ())

	)

74 
GTy≥
 
	$gdk_exãnsi⁄_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
	#GDK_TYPE_EXTENSION_MODE
 (
	`gdk_exãnsi⁄_mode_gë_ty≥
 ())

	)

76 
GTy≥
 
	$gdk_öput_sour˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

77 
	#GDK_TYPE_INPUT_SOURCE
 (
	`gdk_öput_sour˚_gë_ty≥
 ())

	)

78 
GTy≥
 
	$gdk_öput_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
	#GDK_TYPE_INPUT_MODE
 (
	`gdk_öput_mode_gë_ty≥
 ())

	)

80 
GTy≥
 
	$gdk_axis_u£_gë_ty≥
 (Ë
G_GNUC_CONST
;

81 
	#GDK_TYPE_AXIS_USE
 (
	`gdk_axis_u£_gë_ty≥
 ())

	)

84 
GTy≥
 
	$gdk_¥›_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

85 
	#GDK_TYPE_PROP_MODE
 (
	`gdk_¥›_mode_gë_ty≥
 ())

	)

88 
GTy≥
 
	$gdk_fûl_ruÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
	#GDK_TYPE_FILL_RULE
 (
	`gdk_fûl_ruÀ_gë_ty≥
 ())

	)

90 
GTy≥
 
	$gdk_ovîœp_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

91 
	#GDK_TYPE_OVERLAP_TYPE
 (
	`gdk_ovîœp_ty≥_gë_ty≥
 ())

	)

94 
GTy≥
 
	$gdk_rgb_dôhî_gë_ty≥
 (Ë
G_GNUC_CONST
;

95 
	#GDK_TYPE_RGB_DITHER
 (
	`gdk_rgb_dôhî_gë_ty≥
 ())

	)

98 
GTy≥
 
	$gdk_byã_‹dî_gë_ty≥
 (Ë
G_GNUC_CONST
;

99 
	#GDK_TYPE_BYTE_ORDER
 (
	`gdk_byã_‹dî_gë_ty≥
 ())

	)

100 
GTy≥
 
	$gdk_modifõr_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

101 
	#GDK_TYPE_MODIFIER_TYPE
 (
	`gdk_modifõr_ty≥_gë_ty≥
 ())

	)

102 
GTy≥
 
	$gdk_öput_c⁄dôi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

103 
	#GDK_TYPE_INPUT_CONDITION
 (
	`gdk_öput_c⁄dôi⁄_gë_ty≥
 ())

	)

104 
GTy≥
 
	$gdk_°©us_gë_ty≥
 (Ë
G_GNUC_CONST
;

105 
	#GDK_TYPE_STATUS
 (
	`gdk_°©us_gë_ty≥
 ())

	)

106 
GTy≥
 
	$gdk_gøb_°©us_gë_ty≥
 (Ë
G_GNUC_CONST
;

107 
	#GDK_TYPE_GRAB_STATUS
 (
	`gdk_gøb_°©us_gë_ty≥
 ())

	)

110 
GTy≥
 
	$gdk_visuÆ_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

111 
	#GDK_TYPE_VISUAL_TYPE
 (
	`gdk_visuÆ_ty≥_gë_ty≥
 ())

	)

114 
GTy≥
 
	$gdk_wödow_˛ass_gë_ty≥
 (Ë
G_GNUC_CONST
;

115 
	#GDK_TYPE_WINDOW_CLASS
 (
	`gdk_wödow_˛ass_gë_ty≥
 ())

	)

116 
GTy≥
 
	$gdk_wödow_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

117 
	#GDK_TYPE_WINDOW_TYPE
 (
	`gdk_wödow_ty≥_gë_ty≥
 ())

	)

118 
GTy≥
 
	$gdk_wödow_©åibuãs_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

119 
	#GDK_TYPE_WINDOW_ATTRIBUTES_TYPE
 (
	`gdk_wödow_©åibuãs_ty≥_gë_ty≥
 ())

	)

120 
GTy≥
 
	$gdk_wödow_höts_gë_ty≥
 (Ë
G_GNUC_CONST
;

121 
	#GDK_TYPE_WINDOW_HINTS
 (
	`gdk_wödow_höts_gë_ty≥
 ())

	)

122 
GTy≥
 
	$gdk_wödow_ty≥_höt_gë_ty≥
 (Ë
G_GNUC_CONST
;

123 
	#GDK_TYPE_WINDOW_TYPE_HINT
 (
	`gdk_wödow_ty≥_höt_gë_ty≥
 ())

	)

124 
GTy≥
 
	$gdk_wm_dec‹©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

125 
	#GDK_TYPE_WM_DECORATION
 (
	`gdk_wm_dec‹©i⁄_gë_ty≥
 ())

	)

126 
GTy≥
 
	$gdk_wm_fun˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

127 
	#GDK_TYPE_WM_FUNCTION
 (
	`gdk_wm_fun˘i⁄_gë_ty≥
 ())

	)

128 
GTy≥
 
	$gdk_gøvôy_gë_ty≥
 (Ë
G_GNUC_CONST
;

129 
	#GDK_TYPE_GRAVITY
 (
	`gdk_gøvôy_gë_ty≥
 ())

	)

130 
GTy≥
 
	$gdk_wödow_edge_gë_ty≥
 (Ë
G_GNUC_CONST
;

131 
	#GDK_TYPE_WINDOW_EDGE
 (
	`gdk_wödow_edge_gë_ty≥
 ())

	)

132 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkevents.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_EVENTS_H__


32 
	#__GDK_EVENTS_H__


	)

34 
	~<gdk/gdkcﬁ‹.h
>

35 
	~<gdk/gdkty≥s.h
>

36 
	~<gdk/gdkdnd.h
>

37 
	~<gdk/gdköput.h
>

39 
	gG_BEGIN_DECLS


41 
	#GDK_TYPE_EVENT
 (
	`gdk_evít_gë_ty≥
 ())

	)

43 
	#GDK_PRIORITY_EVENTS
 (
G_PRIORITY_DEFAULT
)

	)

44 
	#GDK_PRIORITY_REDRAW
 (
G_PRIORITY_HIGH_IDLE
 + 20)

	)

47 
_GdkEvítAny
 
	tGdkEvítAny
;

48 
_GdkEvítExpo£
 
	tGdkEvítExpo£
;

49 
_GdkEvítNoExpo£
 
	tGdkEvítNoExpo£
;

50 
_GdkEvítVisibûôy
 
	tGdkEvítVisibûôy
;

51 
_GdkEvítMŸi⁄
 
	tGdkEvítMŸi⁄
;

52 
_GdkEvítBuâ⁄
 
	tGdkEvítBuâ⁄
;

53 
_GdkEvítS¸ﬁl
 
	tGdkEvítS¸ﬁl
;

54 
_GdkEvítKey
 
	tGdkEvítKey
;

55 
_GdkEvítFocus
 
	tGdkEvítFocus
;

56 
_GdkEvítCrossög
 
	tGdkEvítCrossög
;

57 
_GdkEvítC⁄figuª
 
	tGdkEvítC⁄figuª
;

58 
_GdkEvítPr›îty
 
	tGdkEvítPr›îty
;

59 
_GdkEvítSñe˘i⁄
 
	tGdkEvítSñe˘i⁄
;

60 
_GdkEvítOw√rCh™ge
 
	tGdkEvítOw√rCh™ge
;

61 
_GdkEvítProximôy
 
	tGdkEvítProximôy
;

62 
_GdkEvítClõ¡
 
	tGdkEvítClõ¡
;

63 
_GdkEvítDND
 
	tGdkEvítDND
;

64 
_GdkEvítWödowSèã
 
	tGdkEvítWödowSèã
;

65 
_GdkEvítSëtög
 
	tGdkEvítSëtög
;

66 
_GdkEvítGøbBrokí
 
	tGdkEvítGøbBrokí
;

68 
_GdkEvít
 
	tGdkEvít
;

70 (*
	tGdkEvítFunc
Ë(
	tGdkEvít
 *
	tevít
,

71 
	tgpoöãr
 
	td©a
);

75 
	tGdkXEvít
;

80 
GDK_FILTER_CONTINUE
,

81 
GDK_FILTER_TRANSLATE
,

84 
GDK_FILTER_REMOVE


85 } 
	tGdkFûãrRëu∫
;

87 
	$GdkFûãrRëu∫
 (*
	tGdkFûãrFunc
Ë(
	tGdkXEvít
 *
	txevít
,

88 
	tGdkEvít
 *
	tevít
,

89 
	tgpoöãr
 
	td©a
);

117 
GDK_NOTHING
 = -1,

118 
GDK_DELETE
 = 0,

119 
GDK_DESTROY
 = 1,

120 
GDK_EXPOSE
 = 2,

121 
GDK_MOTION_NOTIFY
 = 3,

122 
GDK_BUTTON_PRESS
 = 4,

123 
GDK_2BUTTON_PRESS
 = 5,

124 
GDK_3BUTTON_PRESS
 = 6,

125 
GDK_BUTTON_RELEASE
 = 7,

126 
GDK_KEY_PRESS
 = 8,

127 
GDK_KEY_RELEASE
 = 9,

128 
GDK_ENTER_NOTIFY
 = 10,

129 
GDK_LEAVE_NOTIFY
 = 11,

130 
GDK_FOCUS_CHANGE
 = 12,

131 
GDK_CONFIGURE
 = 13,

132 
GDK_MAP
 = 14,

133 
GDK_UNMAP
 = 15,

134 
GDK_PROPERTY_NOTIFY
 = 16,

135 
GDK_SELECTION_CLEAR
 = 17,

136 
GDK_SELECTION_REQUEST
 = 18,

137 
GDK_SELECTION_NOTIFY
 = 19,

138 
GDK_PROXIMITY_IN
 = 20,

139 
GDK_PROXIMITY_OUT
 = 21,

140 
GDK_DRAG_ENTER
 = 22,

141 
GDK_DRAG_LEAVE
 = 23,

142 
GDK_DRAG_MOTION
 = 24,

143 
GDK_DRAG_STATUS
 = 25,

144 
GDK_DROP_START
 = 26,

145 
GDK_DROP_FINISHED
 = 27,

146 
GDK_CLIENT_EVENT
 = 28,

147 
GDK_VISIBILITY_NOTIFY
 = 29,

148 
GDK_NO_EXPOSE
 = 30,

149 
GDK_SCROLL
 = 31,

150 
GDK_WINDOW_STATE
 = 32,

151 
GDK_SETTING
 = 33,

152 
GDK_OWNER_CHANGE
 = 34,

153 
GDK_GRAB_BROKEN
 = 35,

154 
GDK_DAMAGE
 = 36

155 } 
	tGdkEvítTy≥
;

162 
GDK_EXPOSURE_MASK
 = 1 << 1,

163 
GDK_POINTER_MOTION_MASK
 = 1 << 2,

164 
GDK_POINTER_MOTION_HINT_MASK
 = 1 << 3,

165 
GDK_BUTTON_MOTION_MASK
 = 1 << 4,

166 
GDK_BUTTON1_MOTION_MASK
 = 1 << 5,

167 
GDK_BUTTON2_MOTION_MASK
 = 1 << 6,

168 
GDK_BUTTON3_MOTION_MASK
 = 1 << 7,

169 
GDK_BUTTON_PRESS_MASK
 = 1 << 8,

170 
GDK_BUTTON_RELEASE_MASK
 = 1 << 9,

171 
GDK_KEY_PRESS_MASK
 = 1 << 10,

172 
GDK_KEY_RELEASE_MASK
 = 1 << 11,

173 
GDK_ENTER_NOTIFY_MASK
 = 1 << 12,

174 
GDK_LEAVE_NOTIFY_MASK
 = 1 << 13,

175 
GDK_FOCUS_CHANGE_MASK
 = 1 << 14,

176 
GDK_STRUCTURE_MASK
 = 1 << 15,

177 
GDK_PROPERTY_CHANGE_MASK
 = 1 << 16,

178 
GDK_VISIBILITY_NOTIFY_MASK
 = 1 << 17,

179 
GDK_PROXIMITY_IN_MASK
 = 1 << 18,

180 
GDK_PROXIMITY_OUT_MASK
 = 1 << 19,

181 
GDK_SUBSTRUCTURE_MASK
 = 1 << 20,

182 
GDK_SCROLL_MASK
 = 1 << 21,

183 
GDK_ALL_EVENTS_MASK
 = 0x3FFFFE

184 } 
	tGdkEvítMask
;

188 
GDK_VISIBILITY_UNOBSCURED
,

189 
GDK_VISIBILITY_PARTIAL
,

190 
GDK_VISIBILITY_FULLY_OBSCURED


191 } 
	tGdkVisibûôySèã
;

195 
GDK_SCROLL_UP
,

196 
GDK_SCROLL_DOWN
,

197 
GDK_SCROLL_LEFT
,

198 
GDK_SCROLL_RIGHT


199 } 
	tGdkS¸ﬁlDúe˘i⁄
;

211 
GDK_NOTIFY_ANCESTOR
 = 0,

212 
GDK_NOTIFY_VIRTUAL
 = 1,

213 
GDK_NOTIFY_INFERIOR
 = 2,

214 
GDK_NOTIFY_NONLINEAR
 = 3,

215 
GDK_NOTIFY_NONLINEAR_VIRTUAL
 = 4,

216 
GDK_NOTIFY_UNKNOWN
 = 5

217 } 
	tGdkNŸifyTy≥
;

226 
GDK_CROSSING_NORMAL
,

227 
GDK_CROSSING_GRAB
,

228 
GDK_CROSSING_UNGRAB
,

229 
GDK_CROSSING_GTK_GRAB
,

230 
GDK_CROSSING_GTK_UNGRAB
,

231 
GDK_CROSSING_STATE_CHANGED


232 } 
	tGdkCrossögMode
;

236 
GDK_PROPERTY_NEW_VALUE
,

237 
GDK_PROPERTY_DELETE


238 } 
	tGdkPr›îtySèã
;

242 
GDK_WINDOW_STATE_WITHDRAWN
 = 1 << 0,

243 
GDK_WINDOW_STATE_ICONIFIED
 = 1 << 1,

244 
GDK_WINDOW_STATE_MAXIMIZED
 = 1 << 2,

245 
GDK_WINDOW_STATE_STICKY
 = 1 << 3,

246 
GDK_WINDOW_STATE_FULLSCREEN
 = 1 << 4,

247 
GDK_WINDOW_STATE_ABOVE
 = 1 << 5,

248 
GDK_WINDOW_STATE_BELOW
 = 1 << 6

249 } 
	tGdkWödowSèã
;

253 
GDK_SETTING_ACTION_NEW
,

254 
GDK_SETTING_ACTION_CHANGED
,

255 
GDK_SETTING_ACTION_DELETED


256 } 
	tGdkSëtögA˘i⁄
;

260 
GDK_OWNER_CHANGE_NEW_OWNER
,

261 
GDK_OWNER_CHANGE_DESTROY
,

262 
GDK_OWNER_CHANGE_CLOSE


263 } 
	tGdkOw√rCh™ge
;

265 
	s_GdkEvítAny


267 
GdkEvítTy≥
 
ty≥
;

268 
GdkWödow
 *
wödow
;

269 
göt8
 
£nd_evít
;

272 
	s_GdkEvítExpo£


274 
GdkEvítTy≥
 
ty≥
;

275 
GdkWödow
 *
wödow
;

276 
göt8
 
£nd_evít
;

277 
GdkRe˘™gÀ
 
¨ó
;

278 
GdkRegi⁄
 *
ªgi⁄
;

279 
göt
 
cou¡
;

282 
	s_GdkEvítNoExpo£


284 
GdkEvítTy≥
 
ty≥
;

285 
GdkWödow
 *
wödow
;

286 
göt8
 
£nd_evít
;

289 
	s_GdkEvítVisibûôy


291 
GdkEvítTy≥
 
ty≥
;

292 
GdkWödow
 *
wödow
;

293 
göt8
 
£nd_evít
;

294 
GdkVisibûôySèã
 
°©e
;

297 
	s_GdkEvítMŸi⁄


299 
GdkEvítTy≥
 
ty≥
;

300 
GdkWödow
 *
wödow
;

301 
göt8
 
£nd_evít
;

302 
guöt32
 
time
;

303 
gdoubÀ
 
x
;

304 
gdoubÀ
 
y
;

305 
gdoubÀ
 *
axes
;

306 
guöt
 
°©e
;

307 
göt16
 
is_höt
;

308 
GdkDevi˚
 *
devi˚
;

309 
gdoubÀ
 
x_roŸ
, 
y_roŸ
;

312 
	s_GdkEvítBuâ⁄


314 
GdkEvítTy≥
 
ty≥
;

315 
GdkWödow
 *
wödow
;

316 
göt8
 
£nd_evít
;

317 
guöt32
 
time
;

318 
gdoubÀ
 
x
;

319 
gdoubÀ
 
y
;

320 
gdoubÀ
 *
axes
;

321 
guöt
 
°©e
;

322 
guöt
 
buâ⁄
;

323 
GdkDevi˚
 *
devi˚
;

324 
gdoubÀ
 
x_roŸ
, 
y_roŸ
;

327 
	s_GdkEvítS¸ﬁl


329 
GdkEvítTy≥
 
ty≥
;

330 
GdkWödow
 *
wödow
;

331 
göt8
 
£nd_evít
;

332 
guöt32
 
time
;

333 
gdoubÀ
 
x
;

334 
gdoubÀ
 
y
;

335 
guöt
 
°©e
;

336 
GdkS¸ﬁlDúe˘i⁄
 
dúe˘i⁄
;

337 
GdkDevi˚
 *
devi˚
;

338 
gdoubÀ
 
x_roŸ
, 
y_roŸ
;

341 
	s_GdkEvítKey


343 
GdkEvítTy≥
 
ty≥
;

344 
GdkWödow
 *
wödow
;

345 
göt8
 
£nd_evít
;

346 
guöt32
 
time
;

347 
guöt
 
°©e
;

348 
guöt
 
keyvÆ
;

349 
göt
 
Àngth
;

350 
gch¨
 *
°rög
;

351 
guöt16
 
h¨dw¨e_keycode
;

352 
guöt8
 
group
;

353 
guöt
 
is_modifõr
 : 1;

356 
	s_GdkEvítCrossög


358 
GdkEvítTy≥
 
ty≥
;

359 
GdkWödow
 *
wödow
;

360 
göt8
 
£nd_evít
;

361 
GdkWödow
 *
subwödow
;

362 
guöt32
 
time
;

363 
gdoubÀ
 
x
;

364 
gdoubÀ
 
y
;

365 
gdoubÀ
 
x_roŸ
;

366 
gdoubÀ
 
y_roŸ
;

367 
GdkCrossögMode
 
mode
;

368 
GdkNŸifyTy≥
 
dëaû
;

369 
gboﬁón
 
focus
;

370 
guöt
 
°©e
;

373 
	s_GdkEvítFocus


375 
GdkEvítTy≥
 
ty≥
;

376 
GdkWödow
 *
wödow
;

377 
göt8
 
£nd_evít
;

378 
göt16
 
ö
;

381 
	s_GdkEvítC⁄figuª


383 
GdkEvítTy≥
 
ty≥
;

384 
GdkWödow
 *
wödow
;

385 
göt8
 
£nd_evít
;

386 
göt
 
x
, 
y
;

387 
göt
 
width
;

388 
göt
 
height
;

391 
	s_GdkEvítPr›îty


393 
GdkEvítTy≥
 
ty≥
;

394 
GdkWödow
 *
wödow
;

395 
göt8
 
£nd_evít
;

396 
GdkAtom
 
©om
;

397 
guöt32
 
time
;

398 
guöt
 
°©e
;

401 
	s_GdkEvítSñe˘i⁄


403 
GdkEvítTy≥
 
ty≥
;

404 
GdkWödow
 *
wödow
;

405 
göt8
 
£nd_evít
;

406 
GdkAtom
 
£À˘i⁄
;

407 
GdkAtom
 
èrgë
;

408 
GdkAtom
 
¥›îty
;

409 
guöt32
 
time
;

410 
GdkN©iveWödow
 
ªque°‹
;

413 
	s_GdkEvítOw√rCh™ge


415 
GdkEvítTy≥
 
ty≥
;

416 
GdkWödow
 *
wödow
;

417 
göt8
 
£nd_evít
;

418 
GdkN©iveWödow
 
ow√r
;

419 
GdkOw√rCh™ge
 
ªas⁄
;

420 
GdkAtom
 
£À˘i⁄
;

421 
guöt32
 
time
;

422 
guöt32
 
£À˘i⁄_time
;

428 
	s_GdkEvítProximôy


430 
GdkEvítTy≥
 
ty≥
;

431 
GdkWödow
 *
wödow
;

432 
göt8
 
£nd_evít
;

433 
guöt32
 
time
;

434 
GdkDevi˚
 *
devi˚
;

437 
	s_GdkEvítClõ¡


439 
GdkEvítTy≥
 
ty≥
;

440 
GdkWödow
 *
wödow
;

441 
göt8
 
£nd_evít
;

442 
GdkAtom
 
mesßge_ty≥
;

443 
gush‹t
 
d©a_f‹m©
;

445 
b
[20];

446 
s
[10];

447 
l
[5];

448 } 
d©a
;

451 
	s_GdkEvítSëtög


453 
GdkEvítTy≥
 
ty≥
;

454 
GdkWödow
 *
wödow
;

455 
göt8
 
£nd_evít
;

456 
GdkSëtögA˘i⁄
 
a˘i⁄
;

457 *
«me
;

460 
	s_GdkEvítWödowSèã


462 
GdkEvítTy≥
 
ty≥
;

463 
GdkWödow
 *
wödow
;

464 
göt8
 
£nd_evít
;

465 
GdkWödowSèã
 
ch™ged_mask
;

466 
GdkWödowSèã
 
√w_wödow_°©e
;

469 
	s_GdkEvítGøbBrokí
 {

470 
GdkEvítTy≥
 
ty≥
;

471 
GdkWödow
 *
wödow
;

472 
göt8
 
£nd_evít
;

473 
gboﬁón
 
keybﬂrd
;

474 
gboﬁón
 
im∂icô
;

475 
GdkWödow
 *
gøb_wödow
;

480 
	s_GdkEvítDND
 {

481 
GdkEvítTy≥
 
ty≥
;

482 
GdkWödow
 *
wödow
;

483 
göt8
 
£nd_evít
;

484 
GdkDøgC⁄ãxt
 *
c⁄ãxt
;

486 
guöt32
 
time
;

487 
gsh‹t
 
x_roŸ
, 
y_roŸ
;

490 
	u_GdkEvít


492 
GdkEvítTy≥
 
ty≥
;

493 
GdkEvítAny
 
™y
;

494 
GdkEvítExpo£
 
expo£
;

495 
GdkEvítNoExpo£
 
no_expo£
;

496 
GdkEvítVisibûôy
 
visibûôy
;

497 
GdkEvítMŸi⁄
 
mŸi⁄
;

498 
GdkEvítBuâ⁄
 
buâ⁄
;

499 
GdkEvítS¸ﬁl
 
s¸ﬁl
;

500 
GdkEvítKey
 
key
;

501 
GdkEvítCrossög
 
¸ossög
;

502 
GdkEvítFocus
 
focus_ch™ge
;

503 
GdkEvítC⁄figuª
 
c⁄figuª
;

504 
GdkEvítPr›îty
 
¥›îty
;

505 
GdkEvítSñe˘i⁄
 
£À˘i⁄
;

506 
GdkEvítOw√rCh™ge
 
ow√r_ch™ge
;

507 
GdkEvítProximôy
 
¥oximôy
;

508 
GdkEvítClõ¡
 
˛õ¡
;

509 
GdkEvítDND
 
dnd
;

510 
GdkEvítWödowSèã
 
wödow_°©e
;

511 
GdkEvítSëtög
 
£âög
;

512 
GdkEvítGøbBrokí
 
gøb_brokí
;

515 
GTy≥
 
	$gdk_evít_gë_ty≥
 (Ë
G_GNUC_CONST
;

517 
gboﬁón
 
	`gdk_evíts_≥ndög
 ();

518 
GdkEvít
* 
	`gdk_evít_gë
 ();

520 
GdkEvít
* 
	`gdk_evít_≥ek
 ();

521 
GdkEvít
* 
	`gdk_evít_gë_gøphics_expo£
 (
GdkWödow
 *
wödow
);

522 
	`gdk_evít_put
 (c⁄° 
GdkEvít
 *
evít
);

524 
GdkEvít
* 
	`gdk_evít_√w
 (
GdkEvítTy≥
 
ty≥
);

525 
GdkEvít
* 
	`gdk_evít_c›y
 (c⁄° GdkEvíà*
evít
);

526 
	`gdk_evít_‰ì
 (
GdkEvít
 *
evít
);

528 
guöt32
 
	`gdk_evít_gë_time
 (c⁄° 
GdkEvít
 *
evít
);

529 
gboﬁón
 
	`gdk_evít_gë_°©e
 (c⁄° 
GdkEvít
 *
evít
,

530 
GdkModifõrTy≥
 *
°©e
);

531 
gboﬁón
 
	`gdk_evít_gë_co‹ds
 (c⁄° 
GdkEvít
 *
evít
,

532 
gdoubÀ
 *
x_wö
,

533 
gdoubÀ
 *
y_wö
);

534 
gboﬁón
 
	`gdk_evít_gë_roŸ_co‹ds
 (c⁄° 
GdkEvít
 *
evít
,

535 
gdoubÀ
 *
x_roŸ
,

536 
gdoubÀ
 *
y_roŸ
);

537 
gboﬁón
 
	`gdk_evít_gë_axis
 (c⁄° 
GdkEvít
 *
evít
,

538 
GdkAxisU£
 
axis_u£
,

539 
gdoubÀ
 *
vÆue
);

540 
	`gdk_evít_ªque°_mŸi⁄s
 (c⁄° 
GdkEvítMŸi⁄
 *
evít
);

541 
	`gdk_evít_h™dÀr_£t
 (
GdkEvítFunc
 
func
,

542 
gpoöãr
 
d©a
,

543 
GDe°royNŸify
 
nŸify
);

545 
	`gdk_evít_£t_s¸ìn
 (
GdkEvít
 *
evít
,

546 
GdkS¸ìn
 *
s¸ìn
);

547 
GdkS¸ìn
 *
	`gdk_evít_gë_s¸ìn
 (c⁄° 
GdkEvít
 *
evít
);

549 
	`gdk_£t_show_evíts
 (
gboﬁón
 
show_evíts
);

550 
gboﬁón
 
	`gdk_gë_show_evíts
 ();

552 #i‚de‡
GDK_MULTIHEAD_SAFE


553 
	`gdk_add_˛õ¡_mesßge_fûãr
 (
GdkAtom
 
mesßge_ty≥
,

554 
GdkFûãrFunc
 
func
,

555 
gpoöãr
 
d©a
);

557 
gboﬁón
 
	`gdk_£âög_gë
 (c⁄° 
gch¨
 *
«me
,

558 
GVÆue
 *
vÆue
);

561 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkfont.h

27 #i‡!
deföed
(
GDK_DISABLE_DEPRECATED
Ë|| deföed(
GDK_COMPILATION
Ë|| deföed(
GTK_COMPILATION
)

29 #i‚de‡
__GDK_FONT_H__


30 
	#__GDK_FONT_H__


	)

32 
	~<gdk/gdkty≥s.h
>

33 
	~<∑ngo/∑ngo.h
>

35 
	gG_BEGIN_DECLS


37 
	#GDK_TYPE_FONT
 
	`gdk_f⁄t_gë_ty≥
 ()

	)

45 
	mGDK_FONT_FONT
,

46 
	mGDK_FONT_FONTSET


47 } 
	tGdkF⁄tTy≥
;

49 
	s_GdkF⁄t


51 
GdkF⁄tTy≥
 
	mty≥
;

52 
göt
 
	mas˚¡
;

53 
göt
 
	mdes˚¡
;

56 
GTy≥
 
	$gdk_f⁄t_gë_ty≥
 (Ë
G_GNUC_CONST
;

58 
GdkF⁄t
* 
	`gdk_f⁄t_ªf
 (GdkF⁄à*
f⁄t
);

59 
	`gdk_f⁄t_uƒef
 (
GdkF⁄t
 *
f⁄t
);

60 
göt
 
	`gdk_f⁄t_id
 (c⁄° 
GdkF⁄t
 *
f⁄t
);

61 
gboﬁón
 
	`gdk_f⁄t_equÆ
 (c⁄° 
GdkF⁄t
 *
f⁄è
,

62 c⁄° 
GdkF⁄t
 *
f⁄tb
);

64 
GdkF⁄t
 *
	`gdk_f⁄t_lﬂd_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

65 c⁄° 
gch¨
 *
f⁄t_«me
);

66 
GdkF⁄t
 *
	`gdk_f⁄t£t_lﬂd_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

67 c⁄° 
gch¨
 *
f⁄t£t_«me
);

68 
GdkF⁄t
 *
	`gdk_f⁄t_‰om_des¸ùti⁄_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

69 
P™goF⁄tDes¸ùti⁄
 *
f⁄t_desc
);

71 #i‚de‡
GDK_DISABLE_DEPRECATED


73 #i‚de‡
GDK_MULTIHEAD_SAFE


74 
GdkF⁄t
* 
	`gdk_f⁄t_lﬂd
 (c⁄° 
gch¨
 *
f⁄t_«me
);

75 
GdkF⁄t
* 
	`gdk_f⁄t£t_lﬂd
 (c⁄° 
gch¨
 *
f⁄t£t_«me
);

76 
GdkF⁄t
* 
	`gdk_f⁄t_‰om_des¸ùti⁄
 (
P™goF⁄tDes¸ùti⁄
 *
f⁄t_desc
);

79 
göt
 
	`gdk_°rög_width
 (
GdkF⁄t
 *
f⁄t
,

80 c⁄° 
gch¨
 *
°rög
);

81 
göt
 
	`gdk_ãxt_width
 (
GdkF⁄t
 *
f⁄t
,

82 c⁄° 
gch¨
 *
ãxt
,

83 
göt
 
ãxt_Àngth
);

84 
göt
 
	`gdk_ãxt_width_wc
 (
GdkF⁄t
 *
f⁄t
,

85 c⁄° 
GdkWCh¨
 *
ãxt
,

86 
göt
 
ãxt_Àngth
);

87 
göt
 
	`gdk_ch¨_width
 (
GdkF⁄t
 *
f⁄t
,

88 
gch¨
 
ch¨a˘î
);

89 
göt
 
	`gdk_ch¨_width_wc
 (
GdkF⁄t
 *
f⁄t
,

90 
GdkWCh¨
 
ch¨a˘î
);

91 
göt
 
	`gdk_°rög_mósuª
 (
GdkF⁄t
 *
f⁄t
,

92 c⁄° 
gch¨
 *
°rög
);

93 
göt
 
	`gdk_ãxt_mósuª
 (
GdkF⁄t
 *
f⁄t
,

94 c⁄° 
gch¨
 *
ãxt
,

95 
göt
 
ãxt_Àngth
);

96 
göt
 
	`gdk_ch¨_mósuª
 (
GdkF⁄t
 *
f⁄t
,

97 
gch¨
 
ch¨a˘î
);

98 
göt
 
	`gdk_°rög_height
 (
GdkF⁄t
 *
f⁄t
,

99 c⁄° 
gch¨
 *
°rög
);

100 
göt
 
	`gdk_ãxt_height
 (
GdkF⁄t
 *
f⁄t
,

101 c⁄° 
gch¨
 *
ãxt
,

102 
göt
 
ãxt_Àngth
);

103 
göt
 
	`gdk_ch¨_height
 (
GdkF⁄t
 *
f⁄t
,

104 
gch¨
 
ch¨a˘î
);

106 
	`gdk_ãxt_exã¡s
 (
GdkF⁄t
 *
f⁄t
,

107 c⁄° 
gch¨
 *
ãxt
,

108 
göt
 
ãxt_Àngth
,

109 
göt
 *
lbórög
,

110 
göt
 *
rbórög
,

111 
göt
 *
width
,

112 
göt
 *
as˚¡
,

113 
göt
 *
des˚¡
);

114 
	`gdk_ãxt_exã¡s_wc
 (
GdkF⁄t
 *
f⁄t
,

115 c⁄° 
GdkWCh¨
 *
ãxt
,

116 
göt
 
ãxt_Àngth
,

117 
göt
 *
lbórög
,

118 
göt
 *
rbórög
,

119 
göt
 *
width
,

120 
göt
 *
as˚¡
,

121 
göt
 *
des˚¡
);

122 
	`gdk_°rög_exã¡s
 (
GdkF⁄t
 *
f⁄t
,

123 c⁄° 
gch¨
 *
°rög
,

124 
göt
 *
lbórög
,

125 
göt
 *
rbórög
,

126 
göt
 *
width
,

127 
göt
 *
as˚¡
,

128 
göt
 *
des˚¡
);

130 
GdkDi•œy
 * 
	`gdk_f⁄t_gë_di•œy
 (
GdkF⁄t
 *
f⁄t
);

134 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkgc.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_GC_H__


32 
	#__GDK_GC_H__


	)

34 
	~<gdk/gdkcﬁ‹.h
>

35 
	~<gdk/gdkty≥s.h
>

37 
G_BEGIN_DECLS


39 
_GdkGCVÆues
 
	tGdkGCVÆues
;

40 
_GdkGCCœss
 
	tGdkGCCœss
;

50 
	mGDK_CAP_NOT_LAST
,

51 
	mGDK_CAP_BUTT
,

52 
	mGDK_CAP_ROUND
,

53 
	mGDK_CAP_PROJECTING


54 } 
	tGdkC≠StyÀ
;

64 
	mGDK_SOLID
,

65 
	mGDK_TILED
,

66 
	mGDK_STIPPLED
,

67 
	mGDK_OPAQUE_STIPPLED


68 } 
	tGdkFûl
;

90 
	mGDK_COPY
,

91 
	mGDK_INVERT
,

92 
	mGDK_XOR
,

93 
	mGDK_CLEAR
,

94 
	mGDK_AND
,

95 
	mGDK_AND_REVERSE
,

96 
	mGDK_AND_INVERT
,

97 
	mGDK_NOOP
,

98 
	mGDK_OR
,

99 
	mGDK_EQUIV
,

100 
	mGDK_OR_REVERSE
,

101 
	mGDK_COPY_INVERT
,

102 
	mGDK_OR_INVERT
,

103 
	mGDK_NAND
,

104 
	mGDK_NOR
,

105 
	mGDK_SET


106 } 
	tGdkFun˘i⁄
;

115 
	mGDK_JOIN_MITER
,

116 
	mGDK_JOIN_ROUND
,

117 
	mGDK_JOIN_BEVEL


118 } 
	tGdkJoöStyÀ
;

127 
	mGDK_LINE_SOLID
,

128 
	mGDK_LINE_ON_OFF_DASH
,

129 
	mGDK_LINE_DOUBLE_DASH


130 } 
	tGdkLöeStyÀ
;

134 
	mGDK_CLIP_BY_CHILDREN
 = 0,

135 
	mGDK_INCLUDE_INFERIORS
 = 1

136 } 
	tGdkSubwödowMode
;

140 
	mGDK_GC_FOREGROUND
 = 1 << 0,

141 
	mGDK_GC_BACKGROUND
 = 1 << 1,

142 
	mGDK_GC_FONT
 = 1 << 2,

143 
	mGDK_GC_FUNCTION
 = 1 << 3,

144 
	mGDK_GC_FILL
 = 1 << 4,

145 
	mGDK_GC_TILE
 = 1 << 5,

146 
	mGDK_GC_STIPPLE
 = 1 << 6,

147 
	mGDK_GC_CLIP_MASK
 = 1 << 7,

148 
	mGDK_GC_SUBWINDOW
 = 1 << 8,

149 
	mGDK_GC_TS_X_ORIGIN
 = 1 << 9,

150 
	mGDK_GC_TS_Y_ORIGIN
 = 1 << 10,

151 
	mGDK_GC_CLIP_X_ORIGIN
 = 1 << 11,

152 
	mGDK_GC_CLIP_Y_ORIGIN
 = 1 << 12,

153 
	mGDK_GC_EXPOSURES
 = 1 << 13,

154 
	mGDK_GC_LINE_WIDTH
 = 1 << 14,

155 
	mGDK_GC_LINE_STYLE
 = 1 << 15,

156 
	mGDK_GC_CAP_STYLE
 = 1 << 16,

157 
	mGDK_GC_JOIN_STYLE
 = 1 << 17

158 } 
	tGdkGCVÆuesMask
;

160 
	s_GdkGCVÆues


162 
GdkCﬁ‹
 
	mf‹eground
;

163 
GdkCﬁ‹
 
	mbackground
;

164 
GdkF⁄t
 *
	mf⁄t
;

165 
GdkFun˘i⁄
 
	mfun˘i⁄
;

166 
GdkFûl
 
	mfûl
;

167 
GdkPixm≠
 *
	mtûe
;

168 
GdkPixm≠
 *
	m°ù∂e
;

169 
GdkPixm≠
 *
	m˛ù_mask
;

170 
GdkSubwödowMode
 
	msubwödow_mode
;

171 
göt
 
	mts_x_‹igö
;

172 
göt
 
	mts_y_‹igö
;

173 
göt
 
	m˛ù_x_‹igö
;

174 
göt
 
	m˛ù_y_‹igö
;

175 
göt
 
	mgøphics_exposuªs
;

176 
göt
 
	mlöe_width
;

177 
GdkLöeStyÀ
 
	mlöe_°yÀ
;

178 
GdkC≠StyÀ
 
	mˇp_°yÀ
;

179 
GdkJoöStyÀ
 
	mjoö_°yÀ
;

182 
	#GDK_TYPE_GC
 (
	`gdk_gc_gë_ty≥
 ())

	)

183 
	#GDK_GC
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_GC
, 
GdkGC
))

	)

184 
	#GDK_GC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_GC
, 
GdkGCCœss
))

	)

185 
	#GDK_IS_GC
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_GC
))

	)

186 
	#GDK_IS_GC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_GC
))

	)

187 
	#GDK_GC_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_GC
, 
GdkGCCœss
))

	)

189 
	s_GdkGC


191 
GObje˘
 
	m∑ª¡_ö°™˚
;

193 
göt
 
	m˛ù_x_‹igö
;

194 
göt
 
	m˛ù_y_‹igö
;

195 
göt
 
	mts_x_‹igö
;

196 
göt
 
	mts_y_‹igö
;

198 
GdkCﬁ‹m≠
 *
	mcﬁ‹m≠
;

201 
	s_GdkGCCœss


203 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

205 (*
	mgë_vÆues
Ë(
GdkGC
 *
	mgc
,

206 
GdkGCVÆues
 *
	mvÆues
);

207 (*
	m£t_vÆues
Ë(
GdkGC
 *
	mgc
,

208 
GdkGCVÆues
 *
	mvÆues
,

209 
GdkGCVÆuesMask
 
	mmask
);

210 (*
	m£t_dashes
Ë(
GdkGC
 *
	mgc
,

211 
göt
 
	mdash_off£t
,

212 
göt8
 
	mdash_li°
[],

213 
göt
 
	mn
);

216 (*
	m_gdk_ª£rved1
) ();

217 (*
	m_gdk_ª£rved2
) ();

218 (*
	m_gdk_ª£rved3
) ();

219 (*
	m_gdk_ª£rved4
) ();

223 
GTy≥
 
	$gdk_gc_gë_ty≥
 (Ë
G_GNUC_CONST
;

224 
GdkGC
 *
	`gdk_gc_√w
 (
GdkDøwabÀ
 *
døwabÀ
);

225 
GdkGC
 *
	`gdk_gc_√w_wôh_vÆues
 (
GdkDøwabÀ
 *
døwabÀ
,

226 
GdkGCVÆues
 *
vÆues
,

227 
GdkGCVÆuesMask
 
vÆues_mask
);

229 #i‚de‡
GDK_DISABLE_DEPRECATED


230 
GdkGC
 *
	`gdk_gc_ªf
 (GdkGC *
gc
);

231 
	`gdk_gc_uƒef
 (
GdkGC
 *
gc
);

234 
	`gdk_gc_gë_vÆues
 (
GdkGC
 *
gc
,

235 
GdkGCVÆues
 *
vÆues
);

236 
	`gdk_gc_£t_vÆues
 (
GdkGC
 *
gc
,

237 
GdkGCVÆues
 *
vÆues
,

238 
GdkGCVÆuesMask
 
vÆues_mask
);

239 
	`gdk_gc_£t_f‹eground
 (
GdkGC
 *
gc
,

240 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

241 
	`gdk_gc_£t_background
 (
GdkGC
 *
gc
,

242 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

243 #i‚de‡
GDK_DISABLE_DEPRECATED


244 
	`gdk_gc_£t_f⁄t
 (
GdkGC
 *
gc
,

245 
GdkF⁄t
 *
f⁄t
);

247 
	`gdk_gc_£t_fun˘i⁄
 (
GdkGC
 *
gc
,

248 
GdkFun˘i⁄
 
fun˘i⁄
);

249 
	`gdk_gc_£t_fûl
 (
GdkGC
 *
gc
,

250 
GdkFûl
 
fûl
);

251 
	`gdk_gc_£t_tûe
 (
GdkGC
 *
gc
,

252 
GdkPixm≠
 *
tûe
);

253 
	`gdk_gc_£t_°ù∂e
 (
GdkGC
 *
gc
,

254 
GdkPixm≠
 *
°ù∂e
);

255 
	`gdk_gc_£t_ts_‹igö
 (
GdkGC
 *
gc
,

256 
göt
 
x
,

257 
göt
 
y
);

258 
	`gdk_gc_£t_˛ù_‹igö
 (
GdkGC
 *
gc
,

259 
göt
 
x
,

260 
göt
 
y
);

261 
	`gdk_gc_£t_˛ù_mask
 (
GdkGC
 *
gc
,

262 
GdkBôm≠
 *
mask
);

263 
	`gdk_gc_£t_˛ù_ª˘™gÀ
 (
GdkGC
 *
gc
,

264 c⁄° 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

265 
	`gdk_gc_£t_˛ù_ªgi⁄
 (
GdkGC
 *
gc
,

266 c⁄° 
GdkRegi⁄
 *
ªgi⁄
);

267 
	`gdk_gc_£t_subwödow
 (
GdkGC
 *
gc
,

268 
GdkSubwödowMode
 
mode
);

269 
	`gdk_gc_£t_exposuªs
 (
GdkGC
 *
gc
,

270 
gboﬁón
 
exposuªs
);

271 
	`gdk_gc_£t_löe_©åibuãs
 (
GdkGC
 *
gc
,

272 
göt
 
löe_width
,

273 
GdkLöeStyÀ
 
löe_°yÀ
,

274 
GdkC≠StyÀ
 
ˇp_°yÀ
,

275 
GdkJoöStyÀ
 
joö_°yÀ
);

276 
	`gdk_gc_£t_dashes
 (
GdkGC
 *
gc
,

277 
göt
 
dash_off£t
,

278 
göt8
 
dash_li°
[],

279 
göt
 
n
);

280 
	`gdk_gc_off£t
 (
GdkGC
 *
gc
,

281 
göt
 
x_off£t
,

282 
göt
 
y_off£t
);

283 
	`gdk_gc_c›y
 (
GdkGC
 *
d°_gc
,

284 
GdkGC
 *
§c_gc
);

287 
	`gdk_gc_£t_cﬁ‹m≠
 (
GdkGC
 *
gc
,

288 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

289 
GdkCﬁ‹m≠
 *
	`gdk_gc_gë_cﬁ‹m≠
 (
GdkGC
 *
gc
);

290 
	`gdk_gc_£t_rgb_fg_cﬁ‹
 (
GdkGC
 *
gc
,

291 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

292 
	`gdk_gc_£t_rgb_bg_cﬁ‹
 (
GdkGC
 *
gc
,

293 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

294 
GdkS¸ìn
 * 
	`gdk_gc_gë_s¸ìn
 (
GdkGC
 *
gc
);

296 #i‚de‡
GDK_DISABLE_DEPRECATED


297 
	#gdk_gc_de°roy
 
gdk_gc_uƒef


	)

300 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkimage.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_IMAGE_H__


32 
	#__GDK_IMAGE_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
G_BEGIN_DECLS


51 
	mGDK_IMAGE_NORMAL
,

52 
	mGDK_IMAGE_SHARED
,

53 
	mGDK_IMAGE_FASTEST


54 } 
	tGdkImageTy≥
;

56 
_GdkImageCœss
 
	tGdkImageCœss
;

58 
	#GDK_TYPE_IMAGE
 (
	`gdk_image_gë_ty≥
 ())

	)

59 
	#GDK_IMAGE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_IMAGE
, 
GdkImage
))

	)

60 
	#GDK_IMAGE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_IMAGE
, 
GdkImageCœss
))

	)

61 
	#GDK_IS_IMAGE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_IMAGE
))

	)

62 
	#GDK_IS_IMAGE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_IMAGE
))

	)

63 
	#GDK_IMAGE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_IMAGE
, 
GdkImageCœss
))

	)

65 
	s_GdkImage


67 
GObje˘
 
	m∑ª¡_ö°™˚
;

71 
GdkImageTy≥
 
	mty≥
;

72 
GdkVisuÆ
 *
	mvisuÆ
;

73 
GdkByãOrdî
 
	mbyã_‹dî
;

74 
göt
 
	mwidth
;

75 
göt
 
	mheight
;

76 
guöt16
 
	mdïth
;

77 
guöt16
 
	mbµ
;

78 
guöt16
 
	mb∂
;

79 
guöt16
 
	mbôs_≥r_pixñ
;

80 
gpoöãr
 
	mmem
;

82 
GdkCﬁ‹m≠
 *
	mcﬁ‹m≠
;

85 
gpoöãr
 
	mwödowög_d©a
;

88 
	s_GdkImageCœss


90 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

93 
GTy≥
 
	$gdk_image_gë_ty≥
 (Ë
G_GNUC_CONST
;

95 
GdkImage
* 
	`gdk_image_√w
 (
GdkImageTy≥
 
ty≥
,

96 
GdkVisuÆ
 *
visuÆ
,

97 
göt
 
width
,

98 
göt
 
height
);

100 #i‚de‡
GDK_DISABLE_DEPRECATED


101 
GdkImage
* 
	`gdk_image_gë
 (
GdkDøwabÀ
 *
døwabÀ
,

102 
göt
 
x
,

103 
göt
 
y
,

104 
göt
 
width
,

105 
göt
 
height
);

107 
GdkImage
 * 
	`gdk_image_ªf
 (GdkImagê*
image
);

108 
	`gdk_image_uƒef
 (
GdkImage
 *
image
);

111 
	`gdk_image_put_pixñ
 (
GdkImage
 *
image
,

112 
göt
 
x
,

113 
göt
 
y
,

114 
guöt32
 
pixñ
);

115 
guöt32
 
	`gdk_image_gë_pixñ
 (
GdkImage
 *
image
,

116 
göt
 
x
,

117 
göt
 
y
);

119 
	`gdk_image_£t_cﬁ‹m≠
 (
GdkImage
 *
image
,

120 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

121 
GdkCﬁ‹m≠
* 
	`gdk_image_gë_cﬁ‹m≠
 (
GdkImage
 *
image
);

124 #ifde‡
GDK_ENABLE_BROKEN


125 
GdkImage
* 
	`gdk_image_√w_bôm≠
 (
GdkVisuÆ
 *
visuÆ
,

126 
gpoöãr
 
d©a
,

127 
göt
 
width
,

128 
göt
 
height
);

131 #i‚de‡
GDK_DISABLE_DEPRECATED


132 
	#gdk_image_de°roy
 
gdk_image_uƒef


	)

135 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkinput.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_INPUT_H__


32 
	#__GDK_INPUT_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
	gG_BEGIN_DECLS


38 
	#GDK_TYPE_DEVICE
 (
	`gdk_devi˚_gë_ty≥
 ())

	)

39 
	#GDK_DEVICE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_DEVICE
, 
GdkDevi˚
))

	)

40 
	#GDK_DEVICE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_DEVICE
, 
GdkDevi˚Cœss
))

	)

41 
	#GDK_IS_DEVICE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_DEVICE
))

	)

42 
	#GDK_IS_DEVICE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_DEVICE
))

	)

43 
	#GDK_DEVICE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_DEVICE
, 
GdkDevi˚Cœss
))

	)

45 
_GdkDevi˚Key
 
	tGdkDevi˚Key
;

46 
_GdkDevi˚Axis
 
	tGdkDevi˚Axis
;

47 
_GdkDevi˚
 
	tGdkDevi˚
;

48 
_GdkDevi˚Cœss
 
	tGdkDevi˚Cœss
;

49 
_GdkTimeCo‹d
 
	tGdkTimeCo‹d
;

53 
	mGDK_EXTENSION_EVENTS_NONE
,

54 
	mGDK_EXTENSION_EVENTS_ALL
,

55 
	mGDK_EXTENSION_EVENTS_CURSOR


56 } 
	tGdkExãnsi⁄Mode
;

60 
	mGDK_SOURCE_MOUSE
,

61 
	mGDK_SOURCE_PEN
,

62 
	mGDK_SOURCE_ERASER
,

63 
	mGDK_SOURCE_CURSOR


64 } 
	tGdkI≈utSour˚
;

68 
	mGDK_MODE_DISABLED
,

69 
	mGDK_MODE_SCREEN
,

70 
	mGDK_MODE_WINDOW


71 } 
	tGdkI≈utMode
;

75 
	mGDK_AXIS_IGNORE
,

76 
	mGDK_AXIS_X
,

77 
	mGDK_AXIS_Y
,

78 
	mGDK_AXIS_PRESSURE
,

79 
	mGDK_AXIS_XTILT
,

80 
	mGDK_AXIS_YTILT
,

81 
	mGDK_AXIS_WHEEL
,

82 
	mGDK_AXIS_LAST


83 } 
	tGdkAxisU£
;

85 
	s_GdkDevi˚Key


87 
guöt
 
	mkeyvÆ
;

88 
GdkModifõrTy≥
 
	mmodifõrs
;

91 
	s_GdkDevi˚Axis


93 
GdkAxisU£
 
	mu£
;

94 
gdoubÀ
 
	mmö
;

95 
gdoubÀ
 
	mmax
;

98 
	s_GdkDevi˚


100 
GObje˘
 
	m∑ª¡_ö°™˚
;

103 
gch¨
 *
	m«me
;

104 
GdkI≈utSour˚
 
	msour˚
;

105 
GdkI≈utMode
 
	mmode
;

106 
gboﬁón
 
	mhas_curs‹
;

108 
göt
 
	mnum_axes
;

109 
GdkDevi˚Axis
 *
	maxes
;

111 
göt
 
	mnum_keys
;

112 
GdkDevi˚Key
 *
	mkeys
;

118 
	#GDK_MAX_TIMECOORD_AXES
 128

	)

120 
	s_GdkTimeCo‹d


122 
guöt32
 
	mtime
;

123 
gdoubÀ
 
	maxes
[
GDK_MAX_TIMECOORD_AXES
];

126 
GTy≥
 
	$gdk_devi˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

128 #i‚de‡
GDK_MULTIHEAD_SAFE


130 
GLi°
 * 
	`gdk_devi˚s_li°
 ();

134 
	`gdk_devi˚_£t_sour˚
 (
GdkDevi˚
 *
devi˚
,

135 
GdkI≈utSour˚
 
sour˚
);

137 
gboﬁón
 
	`gdk_devi˚_£t_mode
 (
GdkDevi˚
 *
devi˚
,

138 
GdkI≈utMode
 
mode
);

140 
	`gdk_devi˚_£t_key
 (
GdkDevi˚
 *
devi˚
,

141 
guöt
 
ödex_
,

142 
guöt
 
keyvÆ
,

143 
GdkModifõrTy≥
 
modifõrs
);

145 
	`gdk_devi˚_£t_axis_u£
 (
GdkDevi˚
 *
devi˚
,

146 
guöt
 
ödex_
,

147 
GdkAxisU£
 
u£
);

148 
	`gdk_devi˚_gë_°©e
 (
GdkDevi˚
 *
devi˚
,

149 
GdkWödow
 *
wödow
,

150 
gdoubÀ
 *
axes
,

151 
GdkModifõrTy≥
 *
mask
);

152 
gboﬁón
 
	`gdk_devi˚_gë_hi°‹y
 (
GdkDevi˚
 *
devi˚
,

153 
GdkWödow
 *
wödow
,

154 
guöt32
 
°¨t
,

155 
guöt32
 
°›
,

156 
GdkTimeCo‹d
 ***
evíts
,

157 
göt
 *
n_evíts
);

158 
	`gdk_devi˚_‰ì_hi°‹y
 (
GdkTimeCo‹d
 **
evíts
,

159 
göt
 
n_evíts
);

160 
gboﬁón
 
	`gdk_devi˚_gë_axis
 (
GdkDevi˚
 *
devi˚
,

161 
gdoubÀ
 *
axes
,

162 
GdkAxisU£
 
u£
,

163 
gdoubÀ
 *
vÆue
);

165 
	`gdk_öput_£t_exãnsi⁄_evíts
 (
GdkWödow
 *
wödow
,

166 
göt
 
mask
,

167 
GdkExãnsi⁄Mode
 
mode
);

169 #i‚de‡
GDK_MULTIHEAD_SAFE


170 
GdkDevi˚
 *
	`gdk_devi˚_gë_c‹e_poöãr
 ();

173 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkkeys.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_KEYS_H__


32 
	#__GDK_KEYS_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
G_BEGIN_DECLS


38 
_GdkKeym≠Key
 
	tGdkKeym≠Key
;

41 
	s_GdkKeym≠Key


43 
guöt
 
	mkeycode
;

44 
göt
 
	mgroup
;

45 
göt
 
	mÀvñ
;

56 
_GdkKeym≠
 
	tGdkKeym≠
;

57 
_GdkKeym≠Cœss
 
	tGdkKeym≠Cœss
;

59 
	#GDK_TYPE_KEYMAP
 (
	`gdk_keym≠_gë_ty≥
 ())

	)

60 
	#GDK_KEYMAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_KEYMAP
, 
GdkKeym≠
))

	)

61 
	#GDK_KEYMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_KEYMAP
, 
GdkKeym≠Cœss
))

	)

62 
	#GDK_IS_KEYMAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_KEYMAP
))

	)

63 
	#GDK_IS_KEYMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_KEYMAP
))

	)

64 
	#GDK_KEYMAP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_KEYMAP
, 
GdkKeym≠Cœss
))

	)

66 
	s_GdkKeym≠


68 
GObje˘
 
	m∑ª¡_ö°™˚
;

69 
GdkDi•œy
 *
	mdi•œy
;

72 
	s_GdkKeym≠Cœss


74 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

76 (*
	mdúe˘i⁄_ch™ged
Ë(
GdkKeym≠
 *
	mkeym≠
);

77 (*
	mkeys_ch™ged
Ë(
GdkKeym≠
 *
	mkeym≠
);

78 (*
	m°©e_ch™ged
Ë(
GdkKeym≠
 *
	mkeym≠
);

81 
GTy≥
 
	$gdk_keym≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

83 #i‚de‡
GDK_MULTIHEAD_SAFE


84 
GdkKeym≠
* 
	`gdk_keym≠_gë_deÁu…
 ();

86 
GdkKeym≠
* 
	`gdk_keym≠_gë_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
);

89 
guöt
 
	`gdk_keym≠_lookup_key
 (
GdkKeym≠
 *
keym≠
,

90 c⁄° 
GdkKeym≠Key
 *
key
);

91 
gboﬁón
 
	`gdk_keym≠_å™¶©e_keybﬂrd_°©e
 (
GdkKeym≠
 *
keym≠
,

92 
guöt
 
h¨dw¨e_keycode
,

93 
GdkModifõrTy≥
 
°©e
,

94 
göt
 
group
,

95 
guöt
 *
keyvÆ
,

96 
göt
 *
ef„˘ive_group
,

97 
göt
 *
Àvñ
,

98 
GdkModifõrTy≥
 *
c⁄sumed_modifõrs
);

99 
gboﬁón
 
	`gdk_keym≠_gë_íåõs_f‹_keyvÆ
 (
GdkKeym≠
 *
keym≠
,

100 
guöt
 
keyvÆ
,

101 
GdkKeym≠Key
 **
keys
,

102 
göt
 *
n_keys
);

103 
gboﬁón
 
	`gdk_keym≠_gë_íåõs_f‹_keycode
 (
GdkKeym≠
 *
keym≠
,

104 
guöt
 
h¨dw¨e_keycode
,

105 
GdkKeym≠Key
 **
keys
,

106 
guöt
 **
keyvÆs
,

107 
göt
 *
n_íåõs
);

108 
P™goDúe˘i⁄
 
	`gdk_keym≠_gë_dúe˘i⁄
 (
GdkKeym≠
 *
keym≠
);

109 
gboﬁón
 
	`gdk_keym≠_have_bidi_œyouts
 (
GdkKeym≠
 *
keym≠
);

110 
gboﬁón
 
	`gdk_keym≠_gë_ˇps_lock_°©e
 (
GdkKeym≠
 *
keym≠
);

114 
gch¨
* 
	$gdk_keyvÆ_«me
 (
guöt
 
keyvÆ
Ë
G_GNUC_CONST
;

115 
guöt
 
	`gdk_keyvÆ_‰om_«me
 (c⁄° 
gch¨
 *
keyvÆ_«me
);

116 
	`gdk_keyvÆ_c⁄vît_ˇ£
 (
guöt
 
symbﬁ
,

117 
guöt
 *
lowî
,

118 
guöt
 *
uµî
);

119 
guöt
 
	$gdk_keyvÆ_to_uµî
 (
guöt
 
keyvÆ
Ë
G_GNUC_CONST
;

120 
guöt
 
	$gdk_keyvÆ_to_lowî
 (
guöt
 
keyvÆ
Ë
G_GNUC_CONST
;

121 
gboﬁón
 
	$gdk_keyvÆ_is_uµî
 (
guöt
 
keyvÆ
Ë
G_GNUC_CONST
;

122 
gboﬁón
 
	$gdk_keyvÆ_is_lowî
 (
guöt
 
keyvÆ
Ë
G_GNUC_CONST
;

124 
guöt32
 
	$gdk_keyvÆ_to_unicode
 (
guöt
 
keyvÆ
Ë
G_GNUC_CONST
;

125 
guöt
 
	$gdk_unicode_to_keyvÆ
 (
guöt32
 
wc
Ë
G_GNUC_CONST
;

128 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkpango.h

20 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

24 #i‚de‡
__GDK_PANGO_H__


25 
	#__GDK_PANGO_H__


	)

27 
	~<gdk/gdkty≥s.h
>

29 
G_BEGIN_DECLS


33 
_GdkP™goRídîî
 
	tGdkP™goRídîî
;

34 
_GdkP™goRídîîCœss
 
	tGdkP™goRídîîCœss
;

35 
_GdkP™goRídîîPriv©e
 
	tGdkP™goRídîîPriv©e
;

37 
	#GDK_TYPE_PANGO_RENDERER
 (
	`gdk_∑ngo_ªndîî_gë_ty≥
())

	)

38 
	#GDK_PANGO_RENDERER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_PANGO_RENDERER
, 
GdkP™goRídîî
))

	)

39 
	#GDK_IS_PANGO_RENDERER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_PANGO_RENDERER
))

	)

40 
	#GDK_PANGO_RENDERER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_PANGO_RENDERER
, 
GdkP™goRídîîCœss
))

	)

41 
	#GDK_IS_PANGO_RENDERER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_PANGO_RENDERER
))

	)

42 
	#GDK_PANGO_RENDERER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_PANGO_RENDERER
, 
GdkP™goRídîîCœss
))

	)

68 
	s_GdkP™goRídîî


71 
P™goRídîî
 
	m∑ª¡_ö°™˚
;

73 
GdkP™goRídîîPriv©e
 *
	m¥iv
;

83 
	s_GdkP™goRídîîCœss


86 
P™goRídîîCœss
 
	m∑ª¡_˛ass
;

89 
GTy≥
 
	$gdk_∑ngo_ªndîî_gë_ty≥
 (Ë
G_GNUC_CONST
;

91 
P™goRídîî
 *
	`gdk_∑ngo_ªndîî_√w
 (
GdkS¸ìn
 *
s¸ìn
);

92 
P™goRídîî
 *
	`gdk_∑ngo_ªndîî_gë_deÁu…
 (
GdkS¸ìn
 *
s¸ìn
);

94 
	`gdk_∑ngo_ªndîî_£t_døwabÀ
 (
GdkP™goRídîî
 *
gdk_ªndîî
,

95 
GdkDøwabÀ
 *
døwabÀ
);

96 
	`gdk_∑ngo_ªndîî_£t_gc
 (
GdkP™goRídîî
 *
gdk_ªndîî
,

97 
GdkGC
 *
gc
);

98 
	`gdk_∑ngo_ªndîî_£t_°ù∂e
 (
GdkP™goRídîî
 *
gdk_ªndîî
,

99 
P™goRídîP¨t
 
∑π
,

100 
GdkBôm≠
 *
°ù∂e
);

101 
	`gdk_∑ngo_ªndîî_£t_ovîride_cﬁ‹
 (
GdkP™goRídîî
 *
gdk_ªndîî
,

102 
P™goRídîP¨t
 
∑π
,

103 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

107 
P™goC⁄ãxt
 *
	`gdk_∑ngo_c⁄ãxt_gë_f‹_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
);

108 #i‚de‡
GDK_MULTIHEAD_SAFE


109 
P™goC⁄ãxt
 *
	`gdk_∑ngo_c⁄ãxt_gë
 ();

111 #i‚de‡
GDK_DISABLE_DEPRECATED


112 
	`gdk_∑ngo_c⁄ãxt_£t_cﬁ‹m≠
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

113 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

123 
GdkRegi⁄
 *
	`gdk_∑ngo_œyout_löe_gë_˛ù_ªgi⁄
 (
P™goLayoutLöe
 *
löe
,

124 
göt
 
x_‹igö
,

125 
göt
 
y_‹igö
,

126 c⁄° 
göt
 *
ödex_ønges
,

127 
göt
 
n_ønges
);

128 
GdkRegi⁄
 *
	`gdk_∑ngo_œyout_gë_˛ù_ªgi⁄
 (
P™goLayout
 *
œyout
,

129 
göt
 
x_‹igö
,

130 
göt
 
y_‹igö
,

131 c⁄° 
göt
 *
ödex_ønges
,

132 
göt
 
n_ønges
);

138 
_GdkP™goAârStù∂e
 
	tGdkP™goAârStù∂e
;

139 
_GdkP™goAârEmbos£d
 
	tGdkP™goAârEmbos£d
;

140 
_GdkP™goAârEmbossCﬁ‹
 
	tGdkP™goAârEmbossCﬁ‹
;

142 
	s_GdkP™goAârStù∂e


144 
P™goAâribuã
 
©å
;

145 
GdkBôm≠
 *
°ù∂e
;

148 
	s_GdkP™goAârEmbos£d


150 
P™goAâribuã
 
©å
;

151 
gboﬁón
 
embos£d
;

154 
	s_GdkP™goAârEmbossCﬁ‹


156 
P™goAâribuã
 
©å
;

157 
P™goCﬁ‹
 
cﬁ‹
;

160 
P™goAâribuã
 *
	`gdk_∑ngo_©å_°ù∂e_√w
 (
GdkBôm≠
 *
°ù∂e
);

161 
P™goAâribuã
 *
	`gdk_∑ngo_©å_embos£d_√w
 (
gboﬁón
 
embos£d
);

162 
P™goAâribuã
 *
	`gdk_∑ngo_©å_emboss_cﬁ‹_√w
 (c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

164 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkpixbuf.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_PIXBUF_H__


32 
	#__GDK_PIXBUF_H__


	)

34 
	~<ˇúo.h
>

35 
	~<gdk/gdkty≥s.h
>

36 
	~<gdk/gdkrgb.h
>

37 
	~<gdk-pixbuf/gdk-pixbuf.h
>

39 
G_BEGIN_DECLS


43 
gdk_pixbuf_ªndî_thªshﬁd_Æpha
 (
GdkPixbuf
 *
pixbuf
,

44 
GdkBôm≠
 *
bôm≠
,

45 
§c_x
,

46 
§c_y
,

47 
de°_x
,

48 
de°_y
,

49 
width
,

50 
height
,

51 
Æpha_thªshﬁd
);

52 #i‚de‡
GDK_DISABLE_DEPRECATED


53 
gdk_pixbuf_ªndî_to_døwabÀ
 (
GdkPixbuf
 *
pixbuf
,

54 
GdkDøwabÀ
 *
døwabÀ
,

55 
GdkGC
 *
gc
,

56 
§c_x
,

57 
§c_y
,

58 
de°_x
,

59 
de°_y
,

60 
width
,

61 
height
,

62 
GdkRgbDôhî
 
dôhî
,

63 
x_dôhî
,

64 
y_dôhî
);

65 
gdk_pixbuf_ªndî_to_døwabÀ_Æpha
 (
GdkPixbuf
 *
pixbuf
,

66 
GdkDøwabÀ
 *
døwabÀ
,

67 
§c_x
,

68 
§c_y
,

69 
de°_x
,

70 
de°_y
,

71 
width
,

72 
height
,

73 
GdkPixbufAÕhaMode
 
Æpha_mode
,

74 
Æpha_thªshﬁd
,

75 
GdkRgbDôhî
 
dôhî
,

76 
x_dôhî
,

77 
y_dôhî
);

79 
gdk_pixbuf_ªndî_pixm≠_™d_mask_f‹_cﬁ‹m≠
 (
GdkPixbuf
 *
pixbuf
,

80 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

81 
GdkPixm≠
 **
pixm≠_ªtu∫
,

82 
GdkBôm≠
 **
mask_ªtu∫
,

83 
Æpha_thªshﬁd
);

84 #i‚de‡
GDK_MULTIHEAD_SAFE


85 
gdk_pixbuf_ªndî_pixm≠_™d_mask
 (
GdkPixbuf
 *
pixbuf
,

86 
GdkPixm≠
 **
pixm≠_ªtu∫
,

87 
GdkBôm≠
 **
mask_ªtu∫
,

88 
Æpha_thªshﬁd
);

93 
GdkPixbuf
 *
gdk_pixbuf_gë_‰om_døwabÀ
 (GdkPixbu‡*
de°
,

94 
GdkDøwabÀ
 *
§c
,

95 
GdkCﬁ‹m≠
 *
cm≠
,

96 
§c_x
,

97 
§c_y
,

98 
de°_x
,

99 
de°_y
,

100 
width
,

101 
height
);

103 
GdkPixbuf
 *
gdk_pixbuf_gë_‰om_image
 (GdkPixbu‡*
de°
,

104 
GdkImage
 *
§c
,

105 
GdkCﬁ‹m≠
 *
cm≠
,

106 
§c_x
,

107 
§c_y
,

108 
de°_x
,

109 
de°_y
,

110 
width
,

111 
height
);

113 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkpixmap.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_PIXMAP_H__


32 
	#__GDK_PIXMAP_H__


	)

34 
	~<gdk/gdkty≥s.h
>

35 
	~<gdk/gdkdøwabÀ.h
>

37 
G_BEGIN_DECLS


39 
_GdkPixm≠Obje˘
 
	tGdkPixm≠Obje˘
;

40 
_GdkPixm≠Obje˘Cœss
 
	tGdkPixm≠Obje˘Cœss
;

42 
	#GDK_TYPE_PIXMAP
 (
	`gdk_pixm≠_gë_ty≥
 ())

	)

43 
	#GDK_PIXMAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_PIXMAP
, 
GdkPixm≠
))

	)

44 
	#GDK_PIXMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_PIXMAP
, 
GdkPixm≠Obje˘Cœss
))

	)

45 
	#GDK_IS_PIXMAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_PIXMAP
))

	)

46 
	#GDK_IS_PIXMAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_PIXMAP
))

	)

47 
	#GDK_PIXMAP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_PIXMAP
, 
GdkPixm≠Obje˘Cœss
))

	)

48 
	#GDK_PIXMAP_OBJECT
(
obje˘
Ë((
GdkPixm≠Obje˘
 *Ë
	`GDK_PIXMAP
 (obje˘))

	)

50 
	s_GdkPixm≠Obje˘


52 
GdkDøwabÀ
 
	m∑ª¡_ö°™˚
;

54 
GdkDøwabÀ
 *
	mim∂
;

56 
göt
 
	mdïth
;

59 
	s_GdkPixm≠Obje˘Cœss


61 
GdkDøwabÀCœss
 
	m∑ª¡_˛ass
;

65 
GTy≥
 
	$gdk_pixm≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GdkPixm≠
* 
	`gdk_pixm≠_√w
 (
GdkDøwabÀ
 *
døwabÀ
,

70 
göt
 
width
,

71 
göt
 
height
,

72 
göt
 
dïth
);

73 
GdkBôm≠
* 
	`gdk_bôm≠_¸óã_‰om_d©a
 (
GdkDøwabÀ
 *
døwabÀ
,

74 c⁄° 
gch¨
 *
d©a
,

75 
göt
 
width
,

76 
göt
 
height
);

77 
GdkPixm≠
* 
	`gdk_pixm≠_¸óã_‰om_d©a
 (
GdkDøwabÀ
 *
døwabÀ
,

78 c⁄° 
gch¨
 *
d©a
,

79 
göt
 
width
,

80 
göt
 
height
,

81 
göt
 
dïth
,

82 c⁄° 
GdkCﬁ‹
 *
fg
,

83 c⁄° 
GdkCﬁ‹
 *
bg
);

85 
GdkPixm≠
* 
	`gdk_pixm≠_¸óã_‰om_xpm
 (
GdkDøwabÀ
 *
døwabÀ
,

86 
GdkBôm≠
 **
mask
,

87 c⁄° 
GdkCﬁ‹
 *
å™•¨ít_cﬁ‹
,

88 c⁄° 
gch¨
 *
fûíame
);

89 
GdkPixm≠
* 
	`gdk_pixm≠_cﬁ‹m≠_¸óã_‰om_xpm
 (
GdkDøwabÀ
 *
døwabÀ
,

90 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

91 
GdkBôm≠
 **
mask
,

92 c⁄° 
GdkCﬁ‹
 *
å™•¨ít_cﬁ‹
,

93 c⁄° 
gch¨
 *
fûíame
);

94 
GdkPixm≠
* 
	`gdk_pixm≠_¸óã_‰om_xpm_d
 (
GdkDøwabÀ
 *
døwabÀ
,

95 
GdkBôm≠
 **
mask
,

96 c⁄° 
GdkCﬁ‹
 *
å™•¨ít_cﬁ‹
,

97 
gch¨
 **
d©a
);

98 
GdkPixm≠
* 
	`gdk_pixm≠_cﬁ‹m≠_¸óã_‰om_xpm_d
 (
GdkDøwabÀ
 *
døwabÀ
,

99 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

100 
GdkBôm≠
 **
mask
,

101 c⁄° 
GdkCﬁ‹
 *
å™•¨ít_cﬁ‹
,

102 
gch¨
 **
d©a
);

106 #i‚de‡
GDK_MULTIHEAD_SAFE


107 
GdkPixm≠
* 
	`gdk_pixm≠_f‹eign_√w
 (
GdkN©iveWödow
 
™id
);

108 
GdkPixm≠
* 
	`gdk_pixm≠_lookup
 (
GdkN©iveWödow
 
™id
);

111 
GdkPixm≠
* 
	`gdk_pixm≠_f‹eign_√w_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

112 
GdkN©iveWödow
 
™id
);

113 
GdkPixm≠
* 
	`gdk_pixm≠_lookup_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

114 
GdkN©iveWödow
 
™id
);

115 
GdkPixm≠
* 
	`gdk_pixm≠_f‹eign_√w_f‹_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
,

116 
GdkN©iveWödow
 
™id
,

117 
göt
 
width
,

118 
göt
 
height
,

119 
göt
 
dïth
);

121 #i‚de‡
GDK_DISABLE_DEPRECATED


122 
	#gdk_bôm≠_ªf
 
gdk_døwabÀ_ªf


	)

123 
	#gdk_bôm≠_uƒef
 
gdk_døwabÀ_uƒef


	)

124 
	#gdk_pixm≠_ªf
 
gdk_døwabÀ_ªf


	)

125 
	#gdk_pixm≠_uƒef
 
gdk_døwabÀ_uƒef


	)

128 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkproperty.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_PROPERTY_H__


32 
	#__GDK_PROPERTY_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
G_BEGIN_DECLS


40 
	mGDK_PROP_MODE_REPLACE
,

41 
	mGDK_PROP_MODE_PREPEND
,

42 
	mGDK_PROP_MODE_APPEND


43 } 
	tGdkPr›Mode
;

45 
GdkAtom
 
gdk_©om_öã∫
 (c⁄° 
gch¨
 *
©om_«me
,

46 
gboﬁón
 
⁄ly_if_exi°s
);

47 
GdkAtom
 
gdk_©om_öã∫_°©ic_°rög
 (c⁄° 
gch¨
 *
©om_«me
);

48 
gch¨
* 
gdk_©om_«me
 (
GdkAtom
 
©om
);

50 
gboﬁón
 
gdk_¥›îty_gë
 (
GdkWödow
 *
wödow
,

51 
GdkAtom
 
¥›îty
,

52 
GdkAtom
 
ty≥
,

53 
gul⁄g
 
off£t
,

54 
gul⁄g
 
Àngth
,

55 
göt
 
pdñëe
,

56 
GdkAtom
 *
a˘uÆ_¥›îty_ty≥
,

57 
göt
 *
a˘uÆ_f‹m©
,

58 
göt
 *
a˘uÆ_Àngth
,

59 
guch¨
 **
d©a
);

60 
gdk_¥›îty_ch™ge
 (
GdkWödow
 *
wödow
,

61 
GdkAtom
 
¥›îty
,

62 
GdkAtom
 
ty≥
,

63 
göt
 
f‹m©
,

64 
GdkPr›Mode
 
mode
,

65 c⁄° 
guch¨
 *
d©a
,

66 
göt
 
√Àmíts
);

67 
gdk_¥›îty_dñëe
 (
GdkWödow
 *
wödow
,

68 
GdkAtom
 
¥›îty
);

69 #i‚de‡
GDK_MULTIHEAD_SAFE


70 
göt
 
gdk_ãxt_¥›îty_to_ãxt_li°
 (
GdkAtom
 
ícodög
,

71 
göt
 
f‹m©
,

72 c⁄° 
guch¨
 *
ãxt
,

73 
göt
 
Àngth
,

74 
gch¨
 ***
li°
);

75 
göt
 
gdk_ãxt_¥›îty_to_utf8_li°
 (
GdkAtom
 
ícodög
,

76 
göt
 
f‹m©
,

77 c⁄° 
guch¨
 *
ãxt
,

78 
göt
 
Àngth
,

79 
gch¨
 ***
li°
);

80 
gboﬁón
 
gdk_utf8_to_compound_ãxt
 (c⁄° 
gch¨
 *
°r
,

81 
GdkAtom
 *
ícodög
,

82 
göt
 *
f‹m©
,

83 
guch¨
 **
˘ext
,

84 
göt
 *
Àngth
);

85 
göt
 
gdk_°rög_to_compound_ãxt
 (c⁄° 
gch¨
 *
°r
,

86 
GdkAtom
 *
ícodög
,

87 
göt
 *
f‹m©
,

88 
guch¨
 **
˘ext
,

89 
göt
 *
Àngth
);

92 
göt
 
gdk_ãxt_¥›îty_to_ãxt_li°_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

93 
GdkAtom
 
ícodög
,

94 
göt
 
f‹m©
,

95 c⁄° 
guch¨
 *
ãxt
,

96 
göt
 
Àngth
,

97 
gch¨
 ***
li°
);

98 
göt
 
gdk_ãxt_¥›îty_to_utf8_li°_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

99 
GdkAtom
 
ícodög
,

100 
göt
 
f‹m©
,

101 c⁄° 
guch¨
 *
ãxt
,

102 
göt
 
Àngth
,

103 
gch¨
 ***
li°
);

105 
gch¨
 *
gdk_utf8_to_°rög_èrgë
 (c⁄° gch¨ *
°r
);

106 
göt
 
gdk_°rög_to_compound_ãxt_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

107 c⁄° 
gch¨
 *
°r
,

108 
GdkAtom
 *
ícodög
,

109 
göt
 *
f‹m©
,

110 
guch¨
 **
˘ext
,

111 
göt
 *
Àngth
);

112 
gboﬁón
 
gdk_utf8_to_compound_ãxt_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

113 c⁄° 
gch¨
 *
°r
,

114 
GdkAtom
 *
ícodög
,

115 
göt
 *
f‹m©
,

116 
guch¨
 **
˘ext
,

117 
göt
 *
Àngth
);

119 
gdk_‰ì_ãxt_li°
 (
gch¨
 **
li°
);

120 
gdk_‰ì_compound_ãxt
 (
guch¨
 *
˘ext
);

122 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkregion.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_REGION_H__


32 
	#__GDK_REGION_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
G_BEGIN_DECLS


44 
	mGDK_EVEN_ODD_RULE
,

45 
	mGDK_WINDING_RULE


46 } 
	tGdkFûlRuÀ
;

55 
	mGDK_OVERLAP_RECTANGLE_IN
,

56 
	mGDK_OVERLAP_RECTANGLE_OUT
,

57 
	mGDK_OVERLAP_RECTANGLE_PART


58 } 
	tGdkOvîœpTy≥
;

60 (* 
	tGdkS∑nFunc
Ë(
	tGdkS∑n
 *
	t•™
,

61 
	tgpoöãr
 
	td©a
);

63 
GdkRegi⁄
 * 
	`gdk_ªgi⁄_√w
 ();

64 
GdkRegi⁄
 * 
	`gdk_ªgi⁄_pﬁyg⁄
 (c⁄° 
GdkPoöt
 *
poöts
,

65 
göt
 
n_poöts
,

66 
GdkFûlRuÀ
 
fûl_ruÀ
);

67 
GdkRegi⁄
 * 
	`gdk_ªgi⁄_c›y
 (c⁄° GdkRegi⁄ *
ªgi⁄
);

68 
GdkRegi⁄
 * 
	`gdk_ªgi⁄_ª˘™gÀ
 (c⁄° 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

69 
	`gdk_ªgi⁄_de°roy
 (
GdkRegi⁄
 *
ªgi⁄
);

71 
	`gdk_ªgi⁄_gë_˛ùbox
 (c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

72 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

73 
	`gdk_ªgi⁄_gë_ª˘™gÀs
 (c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

74 
GdkRe˘™gÀ
 **
ª˘™gÀs
,

75 
göt
 *
n_ª˘™gÀs
);

77 
gboﬁón
 
	`gdk_ªgi⁄_em±y
 (c⁄° 
GdkRegi⁄
 *
ªgi⁄
);

78 
gboﬁón
 
	`gdk_ªgi⁄_equÆ
 (c⁄° 
GdkRegi⁄
 *
ªgi⁄1
,

79 c⁄° 
GdkRegi⁄
 *
ªgi⁄2
);

80 
gboﬁón
 
	`gdk_ªgi⁄_poöt_ö
 (c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

81 
x
,

82 
y
);

83 
GdkOvîœpTy≥
 
	`gdk_ªgi⁄_ª˘_ö
 (c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

84 c⁄° 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

86 
	`gdk_ªgi⁄_off£t
 (
GdkRegi⁄
 *
ªgi⁄
,

87 
göt
 
dx
,

88 
göt
 
dy
);

89 
	`gdk_ªgi⁄_shrök
 (
GdkRegi⁄
 *
ªgi⁄
,

90 
göt
 
dx
,

91 
göt
 
dy
);

92 
	`gdk_ªgi⁄_uni⁄_wôh_ª˘
 (
GdkRegi⁄
 *
ªgi⁄
,

93 c⁄° 
GdkRe˘™gÀ
 *
ª˘
);

94 
	`gdk_ªgi⁄_öãr£˘
 (
GdkRegi⁄
 *
sour˚1
,

95 c⁄° 
GdkRegi⁄
 *
sour˚2
);

96 
	`gdk_ªgi⁄_uni⁄
 (
GdkRegi⁄
 *
sour˚1
,

97 c⁄° 
GdkRegi⁄
 *
sour˚2
);

98 
	`gdk_ªgi⁄_subåa˘
 (
GdkRegi⁄
 *
sour˚1
,

99 c⁄° 
GdkRegi⁄
 *
sour˚2
);

100 
	`gdk_ªgi⁄_x‹
 (
GdkRegi⁄
 *
sour˚1
,

101 c⁄° 
GdkRegi⁄
 *
sour˚2
);

103 
	`gdk_ªgi⁄_•™s_öãr£˘_f‹óch
 (
GdkRegi⁄
 *
ªgi⁄
,

104 c⁄° 
GdkS∑n
 *
•™s
,

105 
n_•™s
,

106 
gboﬁón
 
s‹ãd
,

107 
GdkS∑nFunc
 
fun˘i⁄
,

108 
gpoöãr
 
d©a
);

110 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkrgb.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_RGB_H__


32 
	#__GDK_RGB_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
G_BEGIN_DECLS


38 
_GdkRgbCm≠
 
	tGdkRgbCm≠
;

40 
	s_GdkRgbCm≠
 {

41 
guöt32
 
	mcﬁ‹s
[256];

42 
göt
 
	mn_cﬁ‹s
;

45 
GSLi°
 *
	möfo_li°
;

48 #i‚de‡
GDK_DISABLE_DEPRECATED


49 
gdk_rgb_öô
 ();

51 
gul⁄g
 
	$gdk_rgb_xpixñ_‰om_rgb
 (
guöt32
 
rgb
Ë
G_GNUC_CONST
;

52 
	`gdk_rgb_gc_£t_f‹eground
 (
GdkGC
 *
gc
,

53 
guöt32
 
rgb
);

54 
	`gdk_rgb_gc_£t_background
 (
GdkGC
 *
gc
,

55 
guöt32
 
rgb
);

56 
	#gdk_rgb_gë_cm≠
 
gdk_rgb_gë_cﬁ‹m≠


	)

59 
	`gdk_rgb_föd_cﬁ‹
 (
GdkCﬁ‹m≠
 *
cﬁ‹m≠
,

60 
GdkCﬁ‹
 *
cﬁ‹
);

64 
GDK_RGB_DITHER_NONE
,

65 
GDK_RGB_DITHER_NORMAL
,

66 
GDK_RGB_DITHER_MAX


67 } 
	tGdkRgbDôhî
;

69 
	`gdk_døw_rgb_image
 (
GdkDøwabÀ
 *
døwabÀ
,

70 
GdkGC
 *
gc
,

71 
göt
 
x
,

72 
göt
 
y
,

73 
göt
 
width
,

74 
göt
 
height
,

75 
GdkRgbDôhî
 
dôh
,

76 c⁄° 
guch¨
 *
rgb_buf
,

77 
göt
 
row°ride
);

78 
	`gdk_døw_rgb_image_dôhÆign
 (
GdkDøwabÀ
 *
døwabÀ
,

79 
GdkGC
 *
gc
,

80 
göt
 
x
,

81 
göt
 
y
,

82 
göt
 
width
,

83 
göt
 
height
,

84 
GdkRgbDôhî
 
dôh
,

85 c⁄° 
guch¨
 *
rgb_buf
,

86 
göt
 
row°ride
,

87 
göt
 
xdôh
,

88 
göt
 
ydôh
);

89 
	`gdk_døw_rgb_32_image
 (
GdkDøwabÀ
 *
døwabÀ
,

90 
GdkGC
 *
gc
,

91 
göt
 
x
,

92 
göt
 
y
,

93 
göt
 
width
,

94 
göt
 
height
,

95 
GdkRgbDôhî
 
dôh
,

96 c⁄° 
guch¨
 *
buf
,

97 
göt
 
row°ride
);

98 
	`gdk_døw_rgb_32_image_dôhÆign
 (
GdkDøwabÀ
 *
døwabÀ
,

99 
GdkGC
 *
gc
,

100 
göt
 
x
,

101 
göt
 
y
,

102 
göt
 
width
,

103 
göt
 
height
,

104 
GdkRgbDôhî
 
dôh
,

105 c⁄° 
guch¨
 *
buf
,

106 
göt
 
row°ride
,

107 
göt
 
xdôh
,

108 
göt
 
ydôh
);

109 
	`gdk_døw_gøy_image
 (
GdkDøwabÀ
 *
døwabÀ
,

110 
GdkGC
 *
gc
,

111 
göt
 
x
,

112 
göt
 
y
,

113 
göt
 
width
,

114 
göt
 
height
,

115 
GdkRgbDôhî
 
dôh
,

116 c⁄° 
guch¨
 *
buf
,

117 
göt
 
row°ride
);

118 
	`gdk_døw_ödexed_image
 (
GdkDøwabÀ
 *
døwabÀ
,

119 
GdkGC
 *
gc
,

120 
göt
 
x
,

121 
göt
 
y
,

122 
göt
 
width
,

123 
göt
 
height
,

124 
GdkRgbDôhî
 
dôh
,

125 c⁄° 
guch¨
 *
buf
,

126 
göt
 
row°ride
,

127 
GdkRgbCm≠
 *
cm≠
);

128 
GdkRgbCm≠
 *
	`gdk_rgb_cm≠_√w
 (
guöt32
 *
cﬁ‹s
,

129 
göt
 
n_cﬁ‹s
);

130 
	`gdk_rgb_cm≠_‰ì
 (
GdkRgbCm≠
 *
cm≠
);

132 
	`gdk_rgb_£t_vîbo£
 (
gboﬁón
 
vîbo£
);

135 
	`gdk_rgb_£t_ö°Æl
 (
gboﬁón
 
ö°Æl
);

136 
	`gdk_rgb_£t_mö_cﬁ‹s
 (
göt
 
mö_cﬁ‹s
);

138 #i‚de‡
GDK_MULTIHEAD_SAFE


139 
GdkCﬁ‹m≠
 *
	`gdk_rgb_gë_cﬁ‹m≠
 ();

140 
GdkVisuÆ
 * 
	`gdk_rgb_gë_visuÆ
 ();

141 
gboﬁón
 
	`gdk_rgb_dôhîabÀ
 ();

142 
gboﬁón
 
	`gdk_rgb_cﬁ‹m≠_dôhîabÀ
 (
GdkCﬁ‹m≠
 *
cm≠
);

145 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkscreen.h

24 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

28 #i‚de‡
__GDK_SCREEN_H__


29 
	#__GDK_SCREEN_H__


	)

31 
	~<ˇúo.h
>

32 
	~"gdk/gdkty≥s.h
"

33 
	~"gdk/gdkdi•œy.h
"

35 
G_BEGIN_DECLS


37 
_GdkS¸ìnCœss
 
	tGdkS¸ìnCœss
;

39 
	#GDK_TYPE_SCREEN
 (
	`gdk_s¸ìn_gë_ty≥
 ())

	)

40 
	#GDK_SCREEN
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_SCREEN
, 
GdkS¸ìn
))

	)

41 
	#GDK_SCREEN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_SCREEN
, 
GdkS¸ìnCœss
))

	)

42 
	#GDK_IS_SCREEN
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_SCREEN
))

	)

43 
	#GDK_IS_SCREEN_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_SCREEN
))

	)

44 
	#GDK_SCREEN_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_SCREEN
, 
GdkS¸ìnCœss
))

	)

46 
	s_GdkS¸ìn


48 
GObje˘
 
	m∑ª¡_ö°™˚
;

50 
guöt
 
	m˛o£d
 : 1;

52 
GdkGC
 *
	mn‹mÆ_gcs
[32];

53 
GdkGC
 *
	mexposuª_gcs
[32];

55 
ˇúo_f⁄t_›ti⁄s_t
 *
	mf⁄t_›ti⁄s
;

56 
	mªsﬁuti⁄
;

59 
	s_GdkS¸ìnCœss


61 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

63 (*
	msize_ch™ged
Ë(
GdkS¸ìn
 *
	ms¸ìn
);

64 (*
	mcomposôed_ch™ged
Ë(
GdkS¸ìn
 *
	ms¸ìn
);

65 (*
	mm⁄ô‹s_ch™ged
Ë(
GdkS¸ìn
 *
	ms¸ìn
);

68 
GTy≥
 
	$gdk_s¸ìn_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GdkCﬁ‹m≠
 *
	`gdk_s¸ìn_gë_deÁu…_cﬁ‹m≠
 (
GdkS¸ìn
 *
s¸ìn
);

70 
	`gdk_s¸ìn_£t_deÁu…_cﬁ‹m≠
 (
GdkS¸ìn
 *
s¸ìn
,

71 
GdkCﬁ‹m≠
 *
cﬁ‹m≠
);

72 
GdkCﬁ‹m≠
* 
	`gdk_s¸ìn_gë_sy°em_cﬁ‹m≠
 (
GdkS¸ìn
 *
s¸ìn
);

73 
GdkVisuÆ
* 
	`gdk_s¸ìn_gë_sy°em_visuÆ
 (
GdkS¸ìn
 *
s¸ìn
);

74 
GdkCﬁ‹m≠
 *
	`gdk_s¸ìn_gë_rgb_cﬁ‹m≠
 (
GdkS¸ìn
 *
s¸ìn
);

75 
GdkVisuÆ
 * 
	`gdk_s¸ìn_gë_rgb_visuÆ
 (
GdkS¸ìn
 *
s¸ìn
);

76 
GdkCﬁ‹m≠
 *
	`gdk_s¸ìn_gë_rgba_cﬁ‹m≠
 (
GdkS¸ìn
 *
s¸ìn
);

77 
GdkVisuÆ
 * 
	`gdk_s¸ìn_gë_rgba_visuÆ
 (
GdkS¸ìn
 *
s¸ìn
);

78 
gboﬁón
 
	`gdk_s¸ìn_is_composôed
 (
GdkS¸ìn
 *
s¸ìn
);

80 
GdkWödow
 * 
	`gdk_s¸ìn_gë_roŸ_wödow
 (
GdkS¸ìn
 *
s¸ìn
);

81 
GdkDi•œy
 * 
	`gdk_s¸ìn_gë_di•œy
 (
GdkS¸ìn
 *
s¸ìn
);

82 
göt
 
	`gdk_s¸ìn_gë_numbî
 (
GdkS¸ìn
 *
s¸ìn
);

83 
göt
 
	`gdk_s¸ìn_gë_width
 (
GdkS¸ìn
 *
s¸ìn
);

84 
göt
 
	`gdk_s¸ìn_gë_height
 (
GdkS¸ìn
 *
s¸ìn
);

85 
göt
 
	`gdk_s¸ìn_gë_width_mm
 (
GdkS¸ìn
 *
s¸ìn
);

86 
göt
 
	`gdk_s¸ìn_gë_height_mm
 (
GdkS¸ìn
 *
s¸ìn
);

88 
GLi°
 * 
	`gdk_s¸ìn_li°_visuÆs
 (
GdkS¸ìn
 *
s¸ìn
);

89 
GLi°
 * 
	`gdk_s¸ìn_gë_t›Àvñ_wödows
 (
GdkS¸ìn
 *
s¸ìn
);

90 
gch¨
 * 
	`gdk_s¸ìn_make_di•œy_«me
 (
GdkS¸ìn
 *
s¸ìn
);

92 
göt
 
	`gdk_s¸ìn_gë_n_m⁄ô‹s
 (
GdkS¸ìn
 *
s¸ìn
);

93 
	`gdk_s¸ìn_gë_m⁄ô‹_geomëry
 (
GdkS¸ìn
 *
s¸ìn
,

94 
göt
 
m⁄ô‹_num
,

95 
GdkRe˘™gÀ
 *
de°
);

96 
göt
 
	`gdk_s¸ìn_gë_m⁄ô‹_©_poöt
 (
GdkS¸ìn
 *
s¸ìn
,

97 
göt
 
x
,

98 
göt
 
y
);

99 
göt
 
	`gdk_s¸ìn_gë_m⁄ô‹_©_wödow
 (
GdkS¸ìn
 *
s¸ìn
,

100 
GdkWödow
 *
wödow
);

101 
göt
 
	`gdk_s¸ìn_gë_m⁄ô‹_width_mm
 (
GdkS¸ìn
 *
s¸ìn
,

102 
göt
 
m⁄ô‹_num
);

103 
göt
 
	`gdk_s¸ìn_gë_m⁄ô‹_height_mm
 (
GdkS¸ìn
 *
s¸ìn
,

104 
göt
 
m⁄ô‹_num
);

105 
gch¨
 * 
	`gdk_s¸ìn_gë_m⁄ô‹_∂ug_«me
 (
GdkS¸ìn
 *
s¸ìn
,

106 
göt
 
m⁄ô‹_num
);

108 
	`gdk_s¸ìn_brﬂdˇ°_˛õ¡_mesßge
 (
GdkS¸ìn
 *
s¸ìn
,

109 
GdkEvít
 *
evít
);

111 
GdkS¸ìn
 *
	`gdk_s¸ìn_gë_deÁu…
 ();

113 
gboﬁón
 
	`gdk_s¸ìn_gë_£âög
 (
GdkS¸ìn
 *
s¸ìn
,

114 c⁄° 
gch¨
 *
«me
,

115 
GVÆue
 *
vÆue
);

117 
	`gdk_s¸ìn_£t_f⁄t_›ti⁄s
 (
GdkS¸ìn
 *
s¸ìn
,

118 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

119 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
	`gdk_s¸ìn_gë_f⁄t_›ti⁄s
 (
GdkS¸ìn
 *
s¸ìn
);

121 
	`gdk_s¸ìn_£t_ªsﬁuti⁄
 (
GdkS¸ìn
 *
s¸ìn
,

122 
gdoubÀ
 
dpi
);

123 
gdoubÀ
 
	`gdk_s¸ìn_gë_ªsﬁuti⁄
 (
GdkS¸ìn
 *
s¸ìn
);

125 
GdkWödow
 *
	`gdk_s¸ìn_gë_a˘ive_wödow
 (
GdkS¸ìn
 *
s¸ìn
);

126 
GLi°
 *
	`gdk_s¸ìn_gë_wödow_°ack
 (
GdkS¸ìn
 *
s¸ìn
);

128 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkselection.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_SELECTION_H__


32 
	#__GDK_SELECTION_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
	gG_BEGIN_DECLS


41 
	#GDK_SELECTION_PRIMARY
 
	`_GDK_MAKE_ATOM
 (1)

	)

42 
	#GDK_SELECTION_SECONDARY
 
	`_GDK_MAKE_ATOM
 (2)

	)

43 
	#GDK_SELECTION_CLIPBOARD
 
	`_GDK_MAKE_ATOM
 (69)

	)

44 
	#GDK_TARGET_BITMAP
 
	`_GDK_MAKE_ATOM
 (5)

	)

45 
	#GDK_TARGET_COLORMAP
 
	`_GDK_MAKE_ATOM
 (7)

	)

46 
	#GDK_TARGET_DRAWABLE
 
	`_GDK_MAKE_ATOM
 (17)

	)

47 
	#GDK_TARGET_PIXMAP
 
	`_GDK_MAKE_ATOM
 (20)

	)

48 
	#GDK_TARGET_STRING
 
	`_GDK_MAKE_ATOM
 (31)

	)

49 
	#GDK_SELECTION_TYPE_ATOM
 
	`_GDK_MAKE_ATOM
 (4)

	)

50 
	#GDK_SELECTION_TYPE_BITMAP
 
	`_GDK_MAKE_ATOM
 (5)

	)

51 
	#GDK_SELECTION_TYPE_COLORMAP
 
	`_GDK_MAKE_ATOM
 (7)

	)

52 
	#GDK_SELECTION_TYPE_DRAWABLE
 
	`_GDK_MAKE_ATOM
 (17)

	)

53 
	#GDK_SELECTION_TYPE_INTEGER
 
	`_GDK_MAKE_ATOM
 (19)

	)

54 
	#GDK_SELECTION_TYPE_PIXMAP
 
	`_GDK_MAKE_ATOM
 (20)

	)

55 
	#GDK_SELECTION_TYPE_WINDOW
 
	`_GDK_MAKE_ATOM
 (33)

	)

56 
	#GDK_SELECTION_TYPE_STRING
 
	`_GDK_MAKE_ATOM
 (31)

	)

58 #i‚de‡
GDK_DISABLE_DEPRECATED


60 
GdkAtom
 
	tGdkSñe˘i⁄
;

61 
GdkAtom
 
	tGdkT¨gë
;

62 
GdkAtom
 
	tGdkSñe˘i⁄Ty≥
;

69 #i‚de‡
GDK_MULTIHEAD_SAFE


70 
gboﬁón
 
gdk_£À˘i⁄_ow√r_£t
 (
GdkWödow
 *
ow√r
,

71 
GdkAtom
 
£À˘i⁄
,

72 
guöt32
 
time_
,

73 
gboﬁón
 
£nd_evít
);

74 
GdkWödow
* 
gdk_£À˘i⁄_ow√r_gë
 (
GdkAtom
 
£À˘i⁄
);

77 
gboﬁón
 
gdk_£À˘i⁄_ow√r_£t_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

78 
GdkWödow
 *
ow√r
,

79 
GdkAtom
 
£À˘i⁄
,

80 
guöt32
 
time_
,

81 
gboﬁón
 
£nd_evít
);

82 
GdkWödow
 *
gdk_£À˘i⁄_ow√r_gë_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

83 
GdkAtom
 
£À˘i⁄
);

85 
gdk_£À˘i⁄_c⁄vît
 (
GdkWödow
 *
ªque°‹
,

86 
GdkAtom
 
£À˘i⁄
,

87 
GdkAtom
 
èrgë
,

88 
guöt32
 
time_
);

89 
gboﬁón
 
gdk_£À˘i⁄_¥›îty_gë
 (
GdkWödow
 *
ªque°‹
,

90 
guch¨
 **
d©a
,

91 
GdkAtom
 *
¥›_ty≥
,

92 
göt
 *
¥›_f‹m©
);

94 #i‚de‡
GDK_MULTIHEAD_SAFE


95 
gdk_£À˘i⁄_£nd_nŸify
 (
GdkN©iveWödow
 
ªque°‹
,

96 
GdkAtom
 
£À˘i⁄
,

97 
GdkAtom
 
èrgë
,

98 
GdkAtom
 
¥›îty
,

99 
guöt32
 
time_
);

102 
gdk_£À˘i⁄_£nd_nŸify_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

103 
GdkN©iveWödow
 
ªque°‹
,

104 
GdkAtom
 
£À˘i⁄
,

105 
GdkAtom
 
èrgë
,

106 
GdkAtom
 
¥›îty
,

107 
guöt32
 
time_
);

109 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkspawn.h

22 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

26 #i‚de‡
__GDK_SPAWN_H__


27 
	#__GDK_SPAWN_H__


	)

29 
	~<gdk/gdks¸ìn.h
>

31 
G_BEGIN_DECLS


33 
gboﬁón
 
gdk_•awn_⁄_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
,

34 c⁄° 
gch¨
 *
w‹kög_dúe˘‹y
,

35 
gch¨
 **
¨gv
,

36 
gch¨
 **
ívp
,

37 
GS∑wnFœgs
 
Êags
,

38 
GS∑wnChûdSëupFunc
 
chûd_£tup
,

39 
gpoöãr
 
u£r_d©a
,

40 
göt
 *
chûd_pid
,

41 
GEº‹
 **
îr‹
);

43 
gboﬁón
 
gdk_•awn_⁄_s¸ìn_wôh_pùes
 (
GdkS¸ìn
 *
s¸ìn
,

44 c⁄° 
gch¨
 *
w‹kög_dúe˘‹y
,

45 
gch¨
 **
¨gv
,

46 
gch¨
 **
ívp
,

47 
GS∑wnFœgs
 
Êags
,

48 
GS∑wnChûdSëupFunc
 
chûd_£tup
,

49 
gpoöãr
 
u£r_d©a
,

50 
göt
 *
chûd_pid
,

51 
göt
 *
°™d¨d_öput
,

52 
göt
 *
°™d¨d_ouçut
,

53 
göt
 *
°™d¨d_îr‹
,

54 
GEº‹
 **
îr‹
);

56 
gboﬁón
 
gdk_•awn_comm™d_löe_⁄_s¸ìn
 (
GdkS¸ìn
 *
s¸ìn
,

57 c⁄° 
gch¨
 *
comm™d_löe
,

58 
GEº‹
 **
îr‹
);

60 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdktestutils.h

21 #i‡!
deföed
 (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

25 #i‚de‡
__GDK_TEST_UTILS_H__


26 
	#__GDK_TEST_UTILS_H__


	)

28 
	~<gdk/gdkwödow.h
>

30 
G_BEGIN_DECLS


33 
gdk_ã°_ªndî_sync
 (
GdkWödow
 *
wödow
);

34 
gboﬁón
 
gdk_ã°_simuœã_key
 (
GdkWödow
 *
wödow
,

35 
göt
 
x
,

36 
göt
 
y
,

37 
guöt
 
keyvÆ
,

38 
GdkModifõrTy≥
 
modifõrs
,

39 
GdkEvítTy≥
 
key_¥es§ñó£
);

40 
gboﬁón
 
gdk_ã°_simuœã_buâ⁄
 (
GdkWödow
 *
wödow
,

41 
göt
 
x
,

42 
göt
 
y
,

43 
guöt
 
buâ⁄
,

44 
GdkModifõrTy≥
 
modifõrs
,

45 
GdkEvítTy≥
 
buâ⁄_¥es§ñó£
);

47 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdktypes.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_TYPES_H__


32 
	#__GDK_TYPES_H__


	)

36 
	~<glib.h
>

37 
	~<∑ngo/∑ngo.h
>

38 
	~<glib-obje˘.h
>

40 #ifde‡
G_OS_WIN32


41 #ifde‡
GDK_COMPILATION


42 
	#GDKVAR
 
	`__de˛•ec
(
dŒexp‹t
)

	)

44 
	#GDKVAR
 
	`__de˛•ec
(
dŒimp‹t
)

	)

47 
	#GDKVAR
 

	)

55 
	~<gdkc⁄fig.h
>

58 
	#GDK_CURRENT_TIME
 0L

	)

59 
	#GDK_PARENT_RELATIVE
 1L

	)

63 
G_BEGIN_DECLS


68 
_GdkPoöt
 
	tGdkPoöt
;

69 
_GdkRe˘™gÀ
 
	tGdkRe˘™gÀ
;

70 
_GdkSegmít
 
	tGdkSegmít
;

71 
_GdkS∑n
 
	tGdkS∑n
;

78 
guöt32
 
	tGdkWCh¨
;

80 
_GdkAtom
 *
	tGdkAtom
;

82 
	#GDK_ATOM_TO_POINTER
(
©om
Ë◊tom)

	)

83 
	#GDK_POINTER_TO_ATOM
(
±r
Ë((
GdkAtom
)’å))

	)

85 
	#_GDK_MAKE_ATOM
(
vÆ
Ë((
GdkAtom
)
	`GUINT_TO_POINTER
(vÆ))

	)

86 
	#GDK_NONE
 
	`_GDK_MAKE_ATOM
 (0)

	)

88 #ifde‡
GDK_NATIVE_WINDOW_POINTER


89 
gpoöãr
 
	tGdkN©iveWödow
;

91 
guöt32
 
	tGdkN©iveWödow
;

96 
_GdkCﬁ‹
 
	tGdkCﬁ‹
;

97 
_GdkCﬁ‹m≠
 
	tGdkCﬁ‹m≠
;

98 
_GdkCurs‹
 
	tGdkCurs‹
;

99 
_GdkF⁄t
 
	tGdkF⁄t
;

100 
_GdkGC
 
	tGdkGC
;

101 
_GdkImage
 
	tGdkImage
;

102 
_GdkRegi⁄
 
	tGdkRegi⁄
;

103 
_GdkVisuÆ
 
	tGdkVisuÆ
;

105 
_GdkDøwabÀ
 
	tGdkDøwabÀ
;

106 
_GdkDøwabÀ
 
	tGdkBôm≠
;

107 
_GdkDøwabÀ
 
	tGdkPixm≠
;

108 
_GdkDøwabÀ
 
	tGdkWödow
;

109 
_GdkDi•œy
 
	tGdkDi•œy
;

110 
_GdkS¸ìn
 
	tGdkS¸ìn
;

114 
	mGDK_LSB_FIRST
,

115 
	mGDK_MSB_FIRST


116 } 
	tGdkByãOrdî
;

122 
	mGDK_SHIFT_MASK
 = 1 << 0,

123 
	mGDK_LOCK_MASK
 = 1 << 1,

124 
	mGDK_CONTROL_MASK
 = 1 << 2,

125 
	mGDK_MOD1_MASK
 = 1 << 3,

126 
	mGDK_MOD2_MASK
 = 1 << 4,

127 
	mGDK_MOD3_MASK
 = 1 << 5,

128 
	mGDK_MOD4_MASK
 = 1 << 6,

129 
	mGDK_MOD5_MASK
 = 1 << 7,

130 
	mGDK_BUTTON1_MASK
 = 1 << 8,

131 
	mGDK_BUTTON2_MASK
 = 1 << 9,

132 
	mGDK_BUTTON3_MASK
 = 1 << 10,

133 
	mGDK_BUTTON4_MASK
 = 1 << 11,

134 
	mGDK_BUTTON5_MASK
 = 1 << 12,

140 
	mGDK_SUPER_MASK
 = 1 << 26,

141 
	mGDK_HYPER_MASK
 = 1 << 27,

142 
	mGDK_META_MASK
 = 1 << 28,

144 
	mGDK_RELEASE_MASK
 = 1 << 30,

146 
	mGDK_MODIFIER_MASK
 = 0x5c001fff

147 } 
	tGdkModifõrTy≥
;

151 
	mGDK_INPUT_READ
 = 1 << 0,

152 
	mGDK_INPUT_WRITE
 = 1 << 1,

153 
	mGDK_INPUT_EXCEPTION
 = 1 << 2

154 } 
	tGdkI≈utC⁄dôi⁄
;

158 
	mGDK_OK
 = 0,

159 
	mGDK_ERROR
 = -1,

160 
	mGDK_ERROR_PARAM
 = -2,

161 
	mGDK_ERROR_FILE
 = -3,

162 
	mGDK_ERROR_MEM
 = -4

163 } 
	tGdkSètus
;

171 
	mGDK_GRAB_SUCCESS
 = 0,

172 
	mGDK_GRAB_ALREADY_GRABBED
 = 1,

173 
	mGDK_GRAB_INVALID_TIME
 = 2,

174 
	mGDK_GRAB_NOT_VIEWABLE
 = 3,

175 
	mGDK_GRAB_FROZEN
 = 4

176 } 
	tGdkGøbSètus
;

178 (*
	tGdkI≈utFun˘i⁄
Ë(
	tgpoöãr
 
	td©a
,

179 
	tgöt
 
	tsour˚
,

180 
	tGdkI≈utC⁄dôi⁄
 
	tc⁄dôi⁄
);

182 #i‚de‡
GDK_DISABLE_DEPRECATED


184 (*
	tGdkDe°royNŸify
Ë(
	tgpoöãr
 
	td©a
);

188 
	s_GdkPoöt


190 
göt
 
x
;

191 
göt
 
y
;

194 
	s_GdkRe˘™gÀ


196 
göt
 
x
;

197 
göt
 
y
;

198 
göt
 
width
;

199 
göt
 
height
;

202 
	s_GdkSegmít


204 
göt
 
x1
;

205 
göt
 
y1
;

206 
göt
 
x2
;

207 
göt
 
y2
;

210 
	s_GdkS∑n


212 
göt
 
x
;

213 
göt
 
y
;

214 
göt
 
width
;

217 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkvisual.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_VISUAL_H__


32 
	#__GDK_VISUAL_H__


	)

34 
	~<gdk/gdkty≥s.h
>

36 
	gG_BEGIN_DECLS


38 
	#GDK_TYPE_VISUAL
 (
	`gdk_visuÆ_gë_ty≥
 ())

	)

39 
	#GDK_VISUAL
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_VISUAL
, 
GdkVisuÆ
))

	)

40 
	#GDK_VISUAL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_VISUAL
, 
GdkVisuÆCœss
))

	)

41 
	#GDK_IS_VISUAL
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_VISUAL
))

	)

42 
	#GDK_IS_VISUAL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_VISUAL
))

	)

43 
	#GDK_VISUAL_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_VISUAL
, 
GdkVisuÆCœss
))

	)

45 
_GdkVisuÆCœss
 
	tGdkVisuÆCœss
;

57 
	mGDK_VISUAL_STATIC_GRAY
,

58 
	mGDK_VISUAL_GRAYSCALE
,

59 
	mGDK_VISUAL_STATIC_COLOR
,

60 
	mGDK_VISUAL_PSEUDO_COLOR
,

61 
	mGDK_VISUAL_TRUE_COLOR
,

62 
	mGDK_VISUAL_DIRECT_COLOR


63 } 
	tGdkVisuÆTy≥
;

77 
	s_GdkVisuÆ


79 
GObje˘
 
	m∑ª¡_ö°™˚
;

81 
GdkVisuÆTy≥
 
	mty≥
;

82 
göt
 
	mdïth
;

83 
GdkByãOrdî
 
	mbyã_‹dî
;

84 
göt
 
	mcﬁ‹m≠_size
;

85 
göt
 
	mbôs_≥r_rgb
;

87 
guöt32
 
	mªd_mask
;

88 
göt
 
	mªd_shi·
;

89 
göt
 
	mªd_¥ec
;

91 
guöt32
 
	mgªí_mask
;

92 
göt
 
	mgªí_shi·
;

93 
göt
 
	mgªí_¥ec
;

95 
guöt32
 
	mblue_mask
;

96 
göt
 
	mblue_shi·
;

97 
göt
 
	mblue_¥ec
;

100 
GTy≥
 
	$gdk_visuÆ_gë_ty≥
 (Ë
G_GNUC_CONST
;

102 #i‚de‡
GDK_MULTIHEAD_SAFE


103 
göt
 
	`gdk_visuÆ_gë_be°_dïth
 ();

104 
GdkVisuÆTy≥
 
	`gdk_visuÆ_gë_be°_ty≥
 ();

105 
GdkVisuÆ
* 
	`gdk_visuÆ_gë_sy°em
 ();

106 
GdkVisuÆ
* 
	`gdk_visuÆ_gë_be°
 ();

107 
GdkVisuÆ
* 
	`gdk_visuÆ_gë_be°_wôh_dïth
 (
göt
 
dïth
);

108 
GdkVisuÆ
* 
	`gdk_visuÆ_gë_be°_wôh_ty≥
 (
GdkVisuÆTy≥
 
visuÆ_ty≥
);

109 
GdkVisuÆ
* 
	`gdk_visuÆ_gë_be°_wôh_bŸh
 (
göt
 
dïth
,

110 
GdkVisuÆTy≥
 
visuÆ_ty≥
);

112 
	`gdk_quîy_dïths
 (
göt
 **
dïths
,

113 
göt
 *
cou¡
);

114 
	`gdk_quîy_visuÆ_ty≥s
 (
GdkVisuÆTy≥
 **
visuÆ_ty≥s
,

115 
göt
 *
cou¡
);

117 
GLi°
* 
	`gdk_li°_visuÆs
 ();

120 
GdkS¸ìn
 *
	`gdk_visuÆ_gë_s¸ìn
 (
GdkVisuÆ
 *
visuÆ
);

122 #i‚de‡
GDK_DISABLE_DEPRECATED


123 
	#gdk_visuÆ_ªf
(
v
Ë
	`g_obje˘_ªf
(v)

	)

124 
	#gdk_visuÆ_uƒef
(
v
Ë
	`g_obje˘_uƒef
(v)

	)

127 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk/gdkwindow.h

27 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GDK_H_INSIDE__
Ë&& !deföed (
GDK_COMPILATION
)

31 #i‚de‡
__GDK_WINDOW_H__


32 
	#__GDK_WINDOW_H__


	)

34 
	~<gdk/gdkdøwabÀ.h
>

35 
	~<gdk/gdkty≥s.h
>

36 
	~<gdk/gdkevíts.h
>

38 
G_BEGIN_DECLS


40 
_GdkGeomëry
 
	tGdkGeomëry
;

41 
_GdkWödowAâr
 
	tGdkWödowAâr
;

42 
_GdkPoöãrHooks
 
	tGdkPoöãrHooks
;

43 
_GdkWödowRedúe˘
 
	tGdkWödowRedúe˘
;

56 
	mGDK_INPUT_OUTPUT
,

57 
	mGDK_INPUT_ONLY


58 } 
	tGdkWödowCœss
;

75 
	mGDK_WINDOW_ROOT
,

76 
	mGDK_WINDOW_TOPLEVEL
,

77 
	mGDK_WINDOW_CHILD
,

78 
	mGDK_WINDOW_DIALOG
,

79 
	mGDK_WINDOW_TEMP
,

80 
	mGDK_WINDOW_FOREIGN


81 } 
	tGdkWödowTy≥
;

93 
	mGDK_WA_TITLE
 = 1 << 1,

94 
	mGDK_WA_X
 = 1 << 2,

95 
	mGDK_WA_Y
 = 1 << 3,

96 
	mGDK_WA_CURSOR
 = 1 << 4,

97 
	mGDK_WA_COLORMAP
 = 1 << 5,

98 
	mGDK_WA_VISUAL
 = 1 << 6,

99 
	mGDK_WA_WMCLASS
 = 1 << 7,

100 
	mGDK_WA_NOREDIR
 = 1 << 8,

101 
	mGDK_WA_TYPE_HINT
 = 1 << 9

102 } 
	tGdkWödowAâribuãsTy≥
;

108 
	mGDK_HINT_POS
 = 1 << 0,

109 
	mGDK_HINT_MIN_SIZE
 = 1 << 1,

110 
	mGDK_HINT_MAX_SIZE
 = 1 << 2,

111 
	mGDK_HINT_BASE_SIZE
 = 1 << 3,

112 
	mGDK_HINT_ASPECT
 = 1 << 4,

113 
	mGDK_HINT_RESIZE_INC
 = 1 << 5,

114 
	mGDK_HINT_WIN_GRAVITY
 = 1 << 6,

115 
	mGDK_HINT_USER_POS
 = 1 << 7,

116 
	mGDK_HINT_USER_SIZE
 = 1 << 8

117 } 
	tGdkWödowHöts
;

134 
	mGDK_WINDOW_TYPE_HINT_NORMAL
,

135 
	mGDK_WINDOW_TYPE_HINT_DIALOG
,

136 
	mGDK_WINDOW_TYPE_HINT_MENU
,

137 
	mGDK_WINDOW_TYPE_HINT_TOOLBAR
,

138 
	mGDK_WINDOW_TYPE_HINT_SPLASHSCREEN
,

139 
	mGDK_WINDOW_TYPE_HINT_UTILITY
,

140 
	mGDK_WINDOW_TYPE_HINT_DOCK
,

141 
	mGDK_WINDOW_TYPE_HINT_DESKTOP
,

142 
	mGDK_WINDOW_TYPE_HINT_DROPDOWN_MENU
,

143 
	mGDK_WINDOW_TYPE_HINT_POPUP_MENU
,

144 
	mGDK_WINDOW_TYPE_HINT_TOOLTIP
,

145 
	mGDK_WINDOW_TYPE_HINT_NOTIFICATION
,

146 
	mGDK_WINDOW_TYPE_HINT_COMBO
,

147 
	mGDK_WINDOW_TYPE_HINT_DND


148 } 
	tGdkWödowTy≥Höt
;

157 
	mGDK_DECOR_ALL
 = 1 << 0,

158 
	mGDK_DECOR_BORDER
 = 1 << 1,

159 
	mGDK_DECOR_RESIZEH
 = 1 << 2,

160 
	mGDK_DECOR_TITLE
 = 1 << 3,

161 
	mGDK_DECOR_MENU
 = 1 << 4,

162 
	mGDK_DECOR_MINIMIZE
 = 1 << 5,

163 
	mGDK_DECOR_MAXIMIZE
 = 1 << 6

164 } 
	tGdkWMDec‹©i⁄
;

168 
	mGDK_FUNC_ALL
 = 1 << 0,

169 
	mGDK_FUNC_RESIZE
 = 1 << 1,

170 
	mGDK_FUNC_MOVE
 = 1 << 2,

171 
	mGDK_FUNC_MINIMIZE
 = 1 << 3,

172 
	mGDK_FUNC_MAXIMIZE
 = 1 << 4,

173 
	mGDK_FUNC_CLOSE
 = 1 << 5

174 } 
	tGdkWMFun˘i⁄
;

182 
	mGDK_GRAVITY_NORTH_WEST
 = 1,

183 
	mGDK_GRAVITY_NORTH
,

184 
	mGDK_GRAVITY_NORTH_EAST
,

185 
	mGDK_GRAVITY_WEST
,

186 
	mGDK_GRAVITY_CENTER
,

187 
	mGDK_GRAVITY_EAST
,

188 
	mGDK_GRAVITY_SOUTH_WEST
,

189 
	mGDK_GRAVITY_SOUTH
,

190 
	mGDK_GRAVITY_SOUTH_EAST
,

191 
	mGDK_GRAVITY_STATIC


192 } 
	tGdkGøvôy
;

197 
	mGDK_WINDOW_EDGE_NORTH_WEST
,

198 
	mGDK_WINDOW_EDGE_NORTH
,

199 
	mGDK_WINDOW_EDGE_NORTH_EAST
,

200 
	mGDK_WINDOW_EDGE_WEST
,

201 
	mGDK_WINDOW_EDGE_EAST
,

202 
	mGDK_WINDOW_EDGE_SOUTH_WEST
,

203 
	mGDK_WINDOW_EDGE_SOUTH
,

204 
	mGDK_WINDOW_EDGE_SOUTH_EAST


205 } 
	tGdkWödowEdge
;

207 
	s_GdkWödowAâr


209 
gch¨
 *
	mtôÀ
;

210 
göt
 
	mevít_mask
;

211 
göt
 
	mx
, 
	my
;

212 
göt
 
	mwidth
;

213 
göt
 
	mheight
;

214 
GdkWödowCœss
 
	mw˛ass
;

215 
GdkVisuÆ
 *
	mvisuÆ
;

216 
GdkCﬁ‹m≠
 *
	mcﬁ‹m≠
;

217 
GdkWödowTy≥
 
	mwödow_ty≥
;

218 
GdkCurs‹
 *
	mcurs‹
;

219 
gch¨
 *
	mwm˛ass_«me
;

220 
gch¨
 *
	mwm˛ass_˛ass
;

221 
gboﬁón
 
	movîride_ªdúe˘
;

222 
GdkWödowTy≥Höt
 
	mty≥_höt
;

225 
	s_GdkGeomëry


227 
göt
 
	mmö_width
;

228 
göt
 
	mmö_height
;

229 
göt
 
	mmax_width
;

230 
göt
 
	mmax_height
;

231 
göt
 
	mba£_width
;

232 
göt
 
	mba£_height
;

233 
göt
 
	mwidth_öc
;

234 
göt
 
	mheight_öc
;

235 
gdoubÀ
 
	mmö_a•e˘
;

236 
gdoubÀ
 
	mmax_a•e˘
;

237 
GdkGøvôy
 
	mwö_gøvôy
;

240 
	s_GdkPoöãrHooks


242 
	mGdkWödow
* (*
	mgë_poöãr
Ë(
GdkWödow
 *
	mwödow
,

243 
göt
 *
	mx
,

244 
göt
 *
	my
,

245 
GdkModifõrTy≥
 *
	mmask
);

246 
	mGdkWödow
* (*
	mwödow_©_poöãr
Ë(
GdkS¸ìn
 *
	ms¸ìn
,

247 
göt
 *
	mwö_x
,

248 
göt
 *
	mwö_y
);

251 
_GdkWödowObje˘
 
	tGdkWödowObje˘
;

252 
_GdkWödowObje˘Cœss
 
	tGdkWödowObje˘Cœss
;

254 
	#GDK_TYPE_WINDOW
 (
	`gdk_wödow_obje˘_gë_ty≥
 ())

	)

255 
	#GDK_WINDOW
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_WINDOW
, 
GdkWödow
))

	)

256 
	#GDK_WINDOW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_WINDOW
, 
GdkWödowObje˘Cœss
))

	)

257 
	#GDK_IS_WINDOW
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_WINDOW
))

	)

258 
	#GDK_IS_WINDOW_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_WINDOW
))

	)

259 
	#GDK_WINDOW_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_WINDOW
, 
GdkWödowObje˘Cœss
))

	)

260 
	#GDK_WINDOW_OBJECT
(
obje˘
Ë((
GdkWödowObje˘
 *Ë
	`GDK_WINDOW
 (obje˘))

	)

262 
	s_GdkWödowObje˘


264 
GdkDøwabÀ
 
	m∑ª¡_ö°™˚
;

266 
GdkDøwabÀ
 *
	mim∂
;

268 
GdkWödowObje˘
 *
	m∑ª¡
;

270 
gpoöãr
 
	mu£r_d©a
;

272 
göt
 
	mx
;

273 
göt
 
	my
;

275 
göt
 
	mexãnsi⁄_evíts
;

277 
GLi°
 *
	mfûãrs
;

278 
GLi°
 *
	mchûdªn
;

280 
GdkCﬁ‹
 
	mbg_cﬁ‹
;

281 
GdkPixm≠
 *
	mbg_pixm≠
;

283 
GSLi°
 *
	m∑öt_°ack
;

285 
GdkRegi⁄
 *
	mupd©e_¨ó
;

286 
guöt
 
	mupd©e_‰ìze_cou¡
;

288 
guöt8
 
	mwödow_ty≥
;

289 
guöt8
 
	mdïth
;

290 
guöt8
 
	mªsize_cou¡
;

292 
GdkWödowSèã
 
	m°©e
;

294 
guöt
 
	mgufÁw_gøvôy
 : 1;

295 
guöt
 
	möput_⁄ly
 : 1;

296 
guöt
 
	mmodÆ_höt
 : 1;

297 
guöt
 
	mcomposôed
 : 1;

299 
guöt
 
	mde°royed
 : 2;

301 
guöt
 
	mac˚±_focus
 : 1;

302 
guöt
 
	mfocus_⁄_m≠
 : 1;

303 
guöt
 
	msh≠ed
 : 1;

305 
GdkEvítMask
 
	mevít_mask
;

307 
guöt
 
	mupd©e_™d_des˚nd™ts_‰ìze_cou¡
;

309 
GdkWödowRedúe˘
 *
	mªdúe˘
;

312 
	s_GdkWödowObje˘Cœss


314 
GdkDøwabÀCœss
 
	m∑ª¡_˛ass
;

319 
GTy≥
 
	$gdk_wödow_obje˘_gë_ty≥
 (Ë
G_GNUC_CONST
;

320 
GdkWödow
* 
	`gdk_wödow_√w
 (GdkWödow *
∑ª¡
,

321 
GdkWödowAâr
 *
©åibuãs
,

322 
göt
 
©åibuãs_mask
);

323 
	`gdk_wödow_de°roy
 (
GdkWödow
 *
wödow
);

324 
GdkWödowTy≥
 
	`gdk_wödow_gë_wödow_ty≥
 (
GdkWödow
 *
wödow
);

325 
GdkWödow
* 
	`gdk_wödow_©_poöãr
 (
göt
 *
wö_x
,

326 
göt
 *
wö_y
);

327 
	`gdk_wödow_show
 (
GdkWödow
 *
wödow
);

328 
	`gdk_wödow_hide
 (
GdkWödow
 *
wödow
);

329 
	`gdk_wödow_wôhdøw
 (
GdkWödow
 *
wödow
);

330 
	`gdk_wödow_show_uƒai£d
 (
GdkWödow
 *
wödow
);

331 
	`gdk_wödow_move
 (
GdkWödow
 *
wödow
,

332 
göt
 
x
,

333 
göt
 
y
);

334 
	`gdk_wödow_ªsize
 (
GdkWödow
 *
wödow
,

335 
göt
 
width
,

336 
göt
 
height
);

337 
	`gdk_wödow_move_ªsize
 (
GdkWödow
 *
wödow
,

338 
göt
 
x
,

339 
göt
 
y
,

340 
göt
 
width
,

341 
göt
 
height
);

342 
	`gdk_wödow_ª∑ª¡
 (
GdkWödow
 *
wödow
,

343 
GdkWödow
 *
√w_∑ª¡
,

344 
göt
 
x
,

345 
göt
 
y
);

346 
	`gdk_wödow_˛ór
 (
GdkWödow
 *
wödow
);

347 
	`gdk_wödow_˛ór_¨ó
 (
GdkWödow
 *
wödow
,

348 
göt
 
x
,

349 
göt
 
y
,

350 
göt
 
width
,

351 
göt
 
height
);

352 
	`gdk_wödow_˛ór_¨ó_e
 (
GdkWödow
 *
wödow
,

353 
göt
 
x
,

354 
göt
 
y
,

355 
göt
 
width
,

356 
göt
 
height
);

357 
	`gdk_wödow_øi£
 (
GdkWödow
 *
wödow
);

358 
	`gdk_wödow_lowî
 (
GdkWödow
 *
wödow
);

359 
	`gdk_wödow_focus
 (
GdkWödow
 *
wödow
,

360 
guöt32
 
time°amp
);

361 
	`gdk_wödow_£t_u£r_d©a
 (
GdkWödow
 *
wödow
,

362 
gpoöãr
 
u£r_d©a
);

363 
	`gdk_wödow_£t_ovîride_ªdúe˘
 (
GdkWödow
 *
wödow
,

364 
gboﬁón
 
ovîride_ªdúe˘
);

365 
	`gdk_wödow_£t_ac˚±_focus
 (
GdkWödow
 *
wödow
,

366 
gboﬁón
 
ac˚±_focus
);

367 
	`gdk_wödow_£t_focus_⁄_m≠
 (
GdkWödow
 *
wödow
,

368 
gboﬁón
 
focus_⁄_m≠
);

369 
	`gdk_wödow_add_fûãr
 (
GdkWödow
 *
wödow
,

370 
GdkFûãrFunc
 
fun˘i⁄
,

371 
gpoöãr
 
d©a
);

372 
	`gdk_wödow_ªmove_fûãr
 (
GdkWödow
 *
wödow
,

373 
GdkFûãrFunc
 
fun˘i⁄
,

374 
gpoöãr
 
d©a
);

375 
	`gdk_wödow_s¸ﬁl
 (
GdkWödow
 *
wödow
,

376 
göt
 
dx
,

377 
göt
 
dy
);

378 
	`gdk_wödow_move_ªgi⁄
 (
GdkWödow
 *
wödow
,

379 c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

380 
göt
 
dx
,

381 
göt
 
dy
);

389 
	`gdk_wödow_sh≠e_comböe_mask
 (
GdkWödow
 *
wödow
,

390 
GdkBôm≠
 *
mask
,

391 
göt
 
x
,

392 
göt
 
y
);

393 
	`gdk_wödow_sh≠e_comböe_ªgi⁄
 (
GdkWödow
 *
wödow
,

394 c⁄° 
GdkRegi⁄
 *
sh≠e_ªgi⁄
,

395 
göt
 
off£t_x
,

396 
göt
 
off£t_y
);

405 
	`gdk_wödow_£t_chûd_sh≠es
 (
GdkWödow
 *
wödow
);

407 
	`gdk_wödow_£t_composôed
 (
GdkWödow
 *
wödow
,

408 
gboﬁón
 
composôed
);

417 
	`gdk_wödow_mîge_chûd_sh≠es
 (
GdkWödow
 *
wödow
);

419 
	`gdk_wödow_öput_sh≠e_comböe_mask
 (
GdkWödow
 *
wödow
,

420 
GdkBôm≠
 *
mask
,

421 
göt
 
x
,

422 
göt
 
y
);

423 
	`gdk_wödow_öput_sh≠e_comböe_ªgi⁄
 (
GdkWödow
 *
wödow
,

424 c⁄° 
GdkRegi⁄
 *
sh≠e_ªgi⁄
,

425 
göt
 
off£t_x
,

426 
göt
 
off£t_y
);

427 
	`gdk_wödow_£t_chûd_öput_sh≠es
 (
GdkWödow
 *
wödow
);

428 
	`gdk_wödow_mîge_chûd_öput_sh≠es
 (
GdkWödow
 *
wödow
);

437 
gboﬁón
 
	`gdk_wödow_is_visibÀ
 (
GdkWödow
 *
wödow
);

438 
gboﬁón
 
	`gdk_wödow_is_võwabÀ
 (
GdkWödow
 *
wödow
);

440 
GdkWödowSèã
 
	`gdk_wödow_gë_°©e
 (
GdkWödow
 *
wödow
);

445 
gboﬁón
 
	`gdk_wödow_£t_°©ic_gøvôõs
 (
GdkWödow
 *
wödow
,

446 
gboﬁón
 
u£_°©ic
);

449 #i‚de‡
GDK_MULTIHEAD_SAFE


450 
GdkWödow
* 
	`gdk_wödow_f‹eign_√w
 (
GdkN©iveWödow
 
™id
);

451 
GdkWödow
* 
	`gdk_wödow_lookup
 (
GdkN©iveWödow
 
™id
);

453 
GdkWödow
 *
	`gdk_wödow_f‹eign_√w_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

454 
GdkN©iveWödow
 
™id
);

455 
GdkWödow
* 
	`gdk_wödow_lookup_f‹_di•œy
 (
GdkDi•œy
 *
di•œy
,

456 
GdkN©iveWödow
 
™id
);

461 #i‚de‡
GDK_DISABLE_DEPRECATED


462 
	`gdk_wödow_£t_höts
 (
GdkWödow
 *
wödow
,

463 
göt
 
x
,

464 
göt
 
y
,

465 
göt
 
mö_width
,

466 
göt
 
mö_height
,

467 
göt
 
max_width
,

468 
göt
 
max_height
,

469 
göt
 
Êags
);

471 
	`gdk_wödow_£t_ty≥_höt
 (
GdkWödow
 *
wödow
,

472 
GdkWödowTy≥Höt
 
höt
);

473 
GdkWödowTy≥Höt
 
	`gdk_wödow_gë_ty≥_höt
 (
GdkWödow
 *
wödow
);

475 
	`gdk_wödow_£t_modÆ_höt
 (
GdkWödow
 *
wödow
,

476 
gboﬁón
 
modÆ
);

478 
	`gdk_wödow_£t_skù_èskb¨_höt
 (
GdkWödow
 *
wödow
,

479 
gboﬁón
 
skùs_èskb¨
);

480 
	`gdk_wödow_£t_skù_∑gî_höt
 (
GdkWödow
 *
wödow
,

481 
gboﬁón
 
skùs_∑gî
);

482 
	`gdk_wödow_£t_urgícy_höt
 (
GdkWödow
 *
wödow
,

483 
gboﬁón
 
urgít
);

485 
	`gdk_wödow_£t_geomëry_höts
 (
GdkWödow
 *
wödow
,

486 c⁄° 
GdkGeomëry
 *
geomëry
,

487 
GdkWödowHöts
 
geom_mask
);

488 
	`gdk_£t_sm_˛õ¡_id
 (c⁄° 
gch¨
 *
sm_˛õ¡_id
);

490 
	`gdk_wödow_begö_∑öt_ª˘
 (
GdkWödow
 *
wödow
,

491 c⁄° 
GdkRe˘™gÀ
 *
ª˘™gÀ
);

492 
	`gdk_wödow_begö_∑öt_ªgi⁄
 (
GdkWödow
 *
wödow
,

493 c⁄° 
GdkRegi⁄
 *
ªgi⁄
);

494 
	`gdk_wödow_íd_∑öt
 (
GdkWödow
 *
wödow
);

496 
	`gdk_wödow_£t_tôÀ
 (
GdkWödow
 *
wödow
,

497 c⁄° 
gch¨
 *
tôÀ
);

498 
	`gdk_wödow_£t_rﬁe
 (
GdkWödow
 *
wödow
,

499 c⁄° 
gch¨
 *
rﬁe
);

500 
	`gdk_wödow_£t_°¨tup_id
 (
GdkWödow
 *
wödow
,

501 c⁄° 
gch¨
 *
°¨tup_id
);

502 
	`gdk_wödow_£t_å™sõ¡_f‹
 (
GdkWödow
 *
wödow
,

503 
GdkWödow
 *
∑ª¡
);

504 
	`gdk_wödow_£t_background
 (
GdkWödow
 *
wödow
,

505 c⁄° 
GdkCﬁ‹
 *
cﬁ‹
);

506 
	`gdk_wödow_£t_back_pixm≠
 (
GdkWödow
 *
wödow
,

507 
GdkPixm≠
 *
pixm≠
,

508 
gboﬁón
 
∑ª¡_ªœtive
);

509 
	`gdk_wödow_£t_curs‹
 (
GdkWödow
 *
wödow
,

510 
GdkCurs‹
 *
curs‹
);

511 
	`gdk_wödow_gë_u£r_d©a
 (
GdkWödow
 *
wödow
,

512 
gpoöãr
 *
d©a
);

513 
	`gdk_wödow_gë_geomëry
 (
GdkWödow
 *
wödow
,

514 
göt
 *
x
,

515 
göt
 *
y
,

516 
göt
 *
width
,

517 
göt
 *
height
,

518 
göt
 *
dïth
);

519 
	`gdk_wödow_gë_posôi⁄
 (
GdkWödow
 *
wödow
,

520 
göt
 *
x
,

521 
göt
 *
y
);

522 
göt
 
	`gdk_wödow_gë_‹igö
 (
GdkWödow
 *
wödow
,

523 
göt
 *
x
,

524 
göt
 *
y
);

526 #i‡!
	`deföed
 (
GDK_DISABLE_DEPRECATED
Ë|| deföed (
GTK_COMPILATION
)

528 
gboﬁón
 
	`gdk_wödow_gë_deskªœtive_‹igö
 (
GdkWödow
 *
wödow
,

529 
göt
 *
x
,

530 
göt
 *
y
);

533 
	`gdk_wödow_gë_roŸ_‹igö
 (
GdkWödow
 *
wödow
,

534 
göt
 *
x
,

535 
göt
 *
y
);

536 
	`gdk_wödow_gë_‰ame_exã¡s
 (
GdkWödow
 *
wödow
,

537 
GdkRe˘™gÀ
 *
ª˘
);

538 
GdkWödow
* 
	`gdk_wödow_gë_poöãr
 (GdkWödow *
wödow
,

539 
göt
 *
x
,

540 
göt
 *
y
,

541 
GdkModifõrTy≥
 *
mask
);

542 
GdkWödow
 * 
	`gdk_wödow_gë_∑ª¡
 (GdkWödow *
wödow
);

543 
GdkWödow
 * 
	`gdk_wödow_gë_t›Àvñ
 (GdkWödow *
wödow
);

545 
GLi°
 * 
	`gdk_wödow_gë_chûdªn
 (
GdkWödow
 *
wödow
);

546 
GLi°
 * 
	`gdk_wödow_≥ek_chûdªn
 (
GdkWödow
 *
wödow
);

547 
GdkEvítMask
 
	`gdk_wödow_gë_evíts
 (
GdkWödow
 *
wödow
);

548 
	`gdk_wödow_£t_evíts
 (
GdkWödow
 *
wödow
,

549 
GdkEvítMask
 
evít_mask
);

551 
	`gdk_wödow_£t_ic⁄_li°
 (
GdkWödow
 *
wödow
,

552 
GLi°
 *
pixbufs
);

553 
	`gdk_wödow_£t_ic⁄
 (
GdkWödow
 *
wödow
,

554 
GdkWödow
 *
ic⁄_wödow
,

555 
GdkPixm≠
 *
pixm≠
,

556 
GdkBôm≠
 *
mask
);

557 
	`gdk_wödow_£t_ic⁄_«me
 (
GdkWödow
 *
wödow
,

558 c⁄° 
gch¨
 *
«me
);

559 
	`gdk_wödow_£t_group
 (
GdkWödow
 *
wödow
,

560 
GdkWödow
 *
Àadî
);

561 
GdkWödow
* 
	`gdk_wödow_gë_group
 (GdkWödow *
wödow
);

562 
	`gdk_wödow_£t_dec‹©i⁄s
 (
GdkWödow
 *
wödow
,

563 
GdkWMDec‹©i⁄
 
dec‹©i⁄s
);

564 
gboﬁón
 
	`gdk_wödow_gë_dec‹©i⁄s
 (
GdkWödow
 *
wödow
,

565 
GdkWMDec‹©i⁄
 *
dec‹©i⁄s
);

566 
	`gdk_wödow_£t_fun˘i⁄s
 (
GdkWödow
 *
wödow
,

567 
GdkWMFun˘i⁄
 
fun˘i⁄s
);

568 #i‡!
	`deföed
(
GDK_MULTIHEAD_SAFE
Ë&& !deföed(
GDK_DISABLE_DEPRECATED
)

569 
GLi°
 * 
	`gdk_wödow_gë_t›Àvñs
 ();

572 
	`gdk_wödow_bìp
 (
GdkWödow
 *
wödow
);

573 
	`gdk_wödow_ic⁄ify
 (
GdkWödow
 *
wödow
);

574 
	`gdk_wödow_deic⁄ify
 (
GdkWödow
 *
wödow
);

575 
	`gdk_wödow_°ick
 (
GdkWödow
 *
wödow
);

576 
	`gdk_wödow_un°ick
 (
GdkWödow
 *
wödow
);

577 
	`gdk_wödow_maximize
 (
GdkWödow
 *
wödow
);

578 
	`gdk_wödow_unmaximize
 (
GdkWödow
 *
wödow
);

579 
	`gdk_wödow_fuŒs¸ìn
 (
GdkWödow
 *
wödow
);

580 
	`gdk_wödow_unfuŒs¸ìn
 (
GdkWödow
 *
wödow
);

581 
	`gdk_wödow_£t_kìp_above
 (
GdkWödow
 *
wödow
,

582 
gboﬁón
 
£âög
);

583 
	`gdk_wödow_£t_kìp_bñow
 (
GdkWödow
 *
wödow
,

584 
gboﬁón
 
£âög
);

585 
	`gdk_wödow_£t_›acôy
 (
GdkWödow
 *
wödow
,

586 
gdoubÀ
 
›acôy
);

587 
	`gdk_wödow_ªgi°î_dnd
 (
GdkWödow
 *
wödow
);

589 
	`gdk_wödow_begö_ªsize_døg
 (
GdkWödow
 *
wödow
,

590 
GdkWödowEdge
 
edge
,

591 
göt
 
buâ⁄
,

592 
göt
 
roŸ_x
,

593 
göt
 
roŸ_y
,

594 
guöt32
 
time°amp
);

595 
	`gdk_wödow_begö_move_døg
 (
GdkWödow
 *
wödow
,

596 
göt
 
buâ⁄
,

597 
göt
 
roŸ_x
,

598 
göt
 
roŸ_y
,

599 
guöt32
 
time°amp
);

602 
	`gdk_wödow_övÆid©e_ª˘
 (
GdkWödow
 *
wödow
,

603 c⁄° 
GdkRe˘™gÀ
 *
ª˘
,

604 
gboﬁón
 
övÆid©e_chûdªn
);

605 
	`gdk_wödow_övÆid©e_ªgi⁄
 (
GdkWödow
 *
wödow
,

606 c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

607 
gboﬁón
 
övÆid©e_chûdªn
);

608 
	`gdk_wödow_övÆid©e_maybe_ªcur£
 (
GdkWödow
 *
wödow
,

609 c⁄° 
GdkRegi⁄
 *
ªgi⁄
,

610 
	$gboﬁón
 (*
chûd_func
Ë(
GdkWödow
 *, 
gpoöãr
),

611 
gpoöãr
 
u£r_d©a
);

612 
GdkRegi⁄
 *
	`gdk_wödow_gë_upd©e_¨ó
 (
GdkWödow
 *
wödow
);

614 
	`gdk_wödow_‰ìze_upd©es
 (
GdkWödow
 *
wödow
);

615 
	`gdk_wödow_thaw_upd©es
 (
GdkWödow
 *
wödow
);

617 
	`gdk_wödow_‰ìze_t›Àvñ_upd©es_libgtk_⁄ly
 (
GdkWödow
 *
wödow
);

618 
	`gdk_wödow_thaw_t›Àvñ_upd©es_libgtk_⁄ly
 (
GdkWödow
 *
wödow
);

620 
	`gdk_wödow_¥o˚ss_Æl_upd©es
 ();

621 
	`gdk_wödow_¥o˚ss_upd©es
 (
GdkWödow
 *
wödow
,

622 
gboﬁón
 
upd©e_chûdªn
);

625 
	`gdk_wödow_£t_debug_upd©es
 (
gboﬁón
 
£âög
);

627 
	`gdk_wödow_c⁄°øö_size
 (
GdkGeomëry
 *
geomëry
,

628 
guöt
 
Êags
,

629 
göt
 
width
,

630 
göt
 
height
,

631 
göt
 *
√w_width
,

632 
göt
 *
√w_height
);

634 
	`gdk_wödow_gë_öã∫Æ_∑öt_öfo
 (
GdkWödow
 *
wödow
,

635 
GdkDøwabÀ
 **
ªÆ_døwabÀ
,

636 
göt
 *
x_off£t
,

637 
göt
 *
y_off£t
);

639 
	`gdk_wödow_íabÀ_synchr⁄ized_c⁄figuª
 (
GdkWödow
 *
wödow
);

640 
	`gdk_wödow_c⁄figuª_föished
 (
GdkWödow
 *
wödow
);

642 #i‚de‡
GDK_MULTIHEAD_SAFE


643 
GdkPoöãrHooks
 *
	`gdk_£t_poöãr_hooks
 (c⁄° GdkPoöãrHook†*
√w_hooks
);

646 
GdkWödow
 *
	`gdk_gë_deÁu…_roŸ_wödow
 ();

648 
	`gdk_wödow_ªdúe˘_to_døwabÀ
 (
GdkWödow
 *
wödow
,

649 
GdkDøwabÀ
 *
døwabÀ
,

650 
göt
 
§c_x
, göà
§c_y
,

651 
göt
 
de°_x
, göà
de°_y
,

652 
göt
 
width
, göà
height
);

653 
	`gdk_wödow_ªmove_ªdúe˘i⁄
 (
GdkWödow
 *
wödow
);

655 #i‚de‡
GDK_DISABLE_DEPRECATED


656 
	#GDK_ROOT_PARENT
(Ë(
	`gdk_gë_deÁu…_roŸ_wödow
 ())

	)

657 
	#gdk_wödow_gë_size
 
gdk_døwabÀ_gë_size


	)

658 
	#gdk_wödow_gë_ty≥
 
gdk_wödow_gë_wödow_ty≥


	)

659 
	#gdk_wödow_gë_cﬁ‹m≠
 
gdk_døwabÀ_gë_cﬁ‹m≠


	)

660 
	#gdk_wödow_£t_cﬁ‹m≠
 
gdk_døwabÀ_£t_cﬁ‹m≠


	)

661 
	#gdk_wödow_gë_visuÆ
 
gdk_døwabÀ_gë_visuÆ


	)

662 
	#gdk_wödow_ªf
 
gdk_døwabÀ_ªf


	)

663 
	#gdk_wödow_uƒef
 
gdk_døwabÀ_uƒef


	)

665 
	#gdk_wödow_c›y_¨ó
(
døwabÀ
,
gc
,
x
,
y
,
sour˚_døwabÀ
,
sour˚_x
,
sour˚_y
,
width
,
height
) \

666 
	`gdk_døw_pixm≠
(
døwabÀ
,
gc
,
sour˚_døwabÀ
,
sour˚_x
,
sour˚_y
,
x
,
y
,
width
,
height
)

	)

669 
G_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtkmarshal.h

1 #i‚de‡
GTK_DISABLE_DEPRECATED


3 #i‚de‡
__gtk_m¨shÆ_MARSHAL_H__


4 
	#__gtk_m¨shÆ_MARSHAL_H__


	)

6 
	~<glib-obje˘.h
>

8 
G_BEGIN_DECLS


11 
gtk_m¨shÆ_BOOLEAN__VOID
 (
GClosuª
 *
˛osuª
,

12 
GVÆue
 *
ªtu∫_vÆue
,

13 
guöt
 
n_∑øm_vÆues
,

14 c⁄° 
GVÆue
 *
∑øm_vÆues
,

15 
gpoöãr
 
övoˇti⁄_höt
,

16 
gpoöãr
 
m¨shÆ_d©a
);

17 
	#gtk_m¨shÆ_BOOL__NONE
 
gtk_m¨shÆ_BOOLEAN__VOID


	)

20 
gtk_m¨shÆ_BOOLEAN__POINTER
 (
GClosuª
 *
˛osuª
,

21 
GVÆue
 *
ªtu∫_vÆue
,

22 
guöt
 
n_∑øm_vÆues
,

23 c⁄° 
GVÆue
 *
∑øm_vÆues
,

24 
gpoöãr
 
övoˇti⁄_höt
,

25 
gpoöãr
 
m¨shÆ_d©a
);

26 
	#gtk_m¨shÆ_BOOL__POINTER
 
gtk_m¨shÆ_BOOLEAN__POINTER


	)

29 
gtk_m¨shÆ_BOOLEAN__POINTER_POINTER_INT_INT
 (
GClosuª
 *
˛osuª
,

30 
GVÆue
 *
ªtu∫_vÆue
,

31 
guöt
 
n_∑øm_vÆues
,

32 c⁄° 
GVÆue
 *
∑øm_vÆues
,

33 
gpoöãr
 
övoˇti⁄_höt
,

34 
gpoöãr
 
m¨shÆ_d©a
);

35 
	#gtk_m¨shÆ_BOOL__POINTER_POINTER_INT_INT
 
gtk_m¨shÆ_BOOLEAN__POINTER_POINTER_INT_INT


	)

38 
gtk_m¨shÆ_BOOLEAN__POINTER_INT_INT
 (
GClosuª
 *
˛osuª
,

39 
GVÆue
 *
ªtu∫_vÆue
,

40 
guöt
 
n_∑øm_vÆues
,

41 c⁄° 
GVÆue
 *
∑øm_vÆues
,

42 
gpoöãr
 
övoˇti⁄_höt
,

43 
gpoöãr
 
m¨shÆ_d©a
);

44 
	#gtk_m¨shÆ_BOOL__POINTER_INT_INT
 
gtk_m¨shÆ_BOOLEAN__POINTER_INT_INT


	)

47 
gtk_m¨shÆ_BOOLEAN__POINTER_INT_INT_UINT
 (
GClosuª
 *
˛osuª
,

48 
GVÆue
 *
ªtu∫_vÆue
,

49 
guöt
 
n_∑øm_vÆues
,

50 c⁄° 
GVÆue
 *
∑øm_vÆues
,

51 
gpoöãr
 
övoˇti⁄_höt
,

52 
gpoöãr
 
m¨shÆ_d©a
);

53 
	#gtk_m¨shÆ_BOOL__POINTER_INT_INT_UINT
 
gtk_m¨shÆ_BOOLEAN__POINTER_INT_INT_UINT


	)

56 
gtk_m¨shÆ_BOOLEAN__POINTER_STRING_STRING_POINTER
 (
GClosuª
 *
˛osuª
,

57 
GVÆue
 *
ªtu∫_vÆue
,

58 
guöt
 
n_∑øm_vÆues
,

59 c⁄° 
GVÆue
 *
∑øm_vÆues
,

60 
gpoöãr
 
övoˇti⁄_höt
,

61 
gpoöãr
 
m¨shÆ_d©a
);

62 
	#gtk_m¨shÆ_BOOL__POINTER_STRING_STRING_POINTER
 
gtk_m¨shÆ_BOOLEAN__POINTER_STRING_STRING_POINTER


	)

65 
gtk_m¨shÆ_ENUM__ENUM
 (
GClosuª
 *
˛osuª
,

66 
GVÆue
 *
ªtu∫_vÆue
,

67 
guöt
 
n_∑øm_vÆues
,

68 c⁄° 
GVÆue
 *
∑øm_vÆues
,

69 
gpoöãr
 
övoˇti⁄_höt
,

70 
gpoöãr
 
m¨shÆ_d©a
);

73 
gtk_m¨shÆ_INT__POINTER
 (
GClosuª
 *
˛osuª
,

74 
GVÆue
 *
ªtu∫_vÆue
,

75 
guöt
 
n_∑øm_vÆues
,

76 c⁄° 
GVÆue
 *
∑øm_vÆues
,

77 
gpoöãr
 
övoˇti⁄_höt
,

78 
gpoöãr
 
m¨shÆ_d©a
);

81 
gtk_m¨shÆ_INT__POINTER_CHAR_CHAR
 (
GClosuª
 *
˛osuª
,

82 
GVÆue
 *
ªtu∫_vÆue
,

83 
guöt
 
n_∑øm_vÆues
,

84 c⁄° 
GVÆue
 *
∑øm_vÆues
,

85 
gpoöãr
 
övoˇti⁄_höt
,

86 
gpoöãr
 
m¨shÆ_d©a
);

89 
	#gtk_m¨shÆ_VOID__BOOLEAN
 
g_c˛osuª_m¨shÆ_VOID__BOOLEAN


	)

90 
	#gtk_m¨shÆ_NONE__BOOL
 
gtk_m¨shÆ_VOID__BOOLEAN


	)

93 
	#gtk_m¨shÆ_VOID__BOXED
 
g_c˛osuª_m¨shÆ_VOID__BOXED


	)

94 
	#gtk_m¨shÆ_NONE__BOXED
 
gtk_m¨shÆ_VOID__BOXED


	)

97 
	#gtk_m¨shÆ_VOID__ENUM
 
g_c˛osuª_m¨shÆ_VOID__ENUM


	)

98 
	#gtk_m¨shÆ_NONE__ENUM
 
gtk_m¨shÆ_VOID__ENUM


	)

101 
gtk_m¨shÆ_VOID__ENUM_FLOAT
 (
GClosuª
 *
˛osuª
,

102 
GVÆue
 *
ªtu∫_vÆue
,

103 
guöt
 
n_∑øm_vÆues
,

104 c⁄° 
GVÆue
 *
∑øm_vÆues
,

105 
gpoöãr
 
övoˇti⁄_höt
,

106 
gpoöãr
 
m¨shÆ_d©a
);

107 
	#gtk_m¨shÆ_NONE__ENUM_FLOAT
 
gtk_m¨shÆ_VOID__ENUM_FLOAT


	)

110 
gtk_m¨shÆ_VOID__ENUM_FLOAT_BOOLEAN
 (
GClosuª
 *
˛osuª
,

111 
GVÆue
 *
ªtu∫_vÆue
,

112 
guöt
 
n_∑øm_vÆues
,

113 c⁄° 
GVÆue
 *
∑øm_vÆues
,

114 
gpoöãr
 
övoˇti⁄_höt
,

115 
gpoöãr
 
m¨shÆ_d©a
);

116 
	#gtk_m¨shÆ_NONE__ENUM_FLOAT_BOOL
 
gtk_m¨shÆ_VOID__ENUM_FLOAT_BOOLEAN


	)

119 
	#gtk_m¨shÆ_VOID__INT
 
g_c˛osuª_m¨shÆ_VOID__INT


	)

120 
	#gtk_m¨shÆ_NONE__INT
 
gtk_m¨shÆ_VOID__INT


	)

123 
gtk_m¨shÆ_VOID__INT_INT
 (
GClosuª
 *
˛osuª
,

124 
GVÆue
 *
ªtu∫_vÆue
,

125 
guöt
 
n_∑øm_vÆues
,

126 c⁄° 
GVÆue
 *
∑øm_vÆues
,

127 
gpoöãr
 
övoˇti⁄_höt
,

128 
gpoöãr
 
m¨shÆ_d©a
);

129 
	#gtk_m¨shÆ_NONE__INT_INT
 
gtk_m¨shÆ_VOID__INT_INT


	)

132 
gtk_m¨shÆ_VOID__INT_INT_POINTER
 (
GClosuª
 *
˛osuª
,

133 
GVÆue
 *
ªtu∫_vÆue
,

134 
guöt
 
n_∑øm_vÆues
,

135 c⁄° 
GVÆue
 *
∑øm_vÆues
,

136 
gpoöãr
 
övoˇti⁄_höt
,

137 
gpoöãr
 
m¨shÆ_d©a
);

138 
	#gtk_m¨shÆ_NONE__INT_INT_POINTER
 
gtk_m¨shÆ_VOID__INT_INT_POINTER


	)

141 
	#gtk_m¨shÆ_VOID__VOID
 
g_c˛osuª_m¨shÆ_VOID__VOID


	)

142 
	#gtk_m¨shÆ_NONE__NONE
 
gtk_m¨shÆ_VOID__VOID


	)

145 
	#gtk_m¨shÆ_VOID__OBJECT
 
g_c˛osuª_m¨shÆ_VOID__OBJECT


	)

146 
	#gtk_m¨shÆ_NONE__OBJECT
 
gtk_m¨shÆ_VOID__OBJECT


	)

149 
	#gtk_m¨shÆ_VOID__POINTER
 
g_c˛osuª_m¨shÆ_VOID__POINTER


	)

150 
	#gtk_m¨shÆ_NONE__POINTER
 
gtk_m¨shÆ_VOID__POINTER


	)

153 
gtk_m¨shÆ_VOID__POINTER_INT
 (
GClosuª
 *
˛osuª
,

154 
GVÆue
 *
ªtu∫_vÆue
,

155 
guöt
 
n_∑øm_vÆues
,

156 c⁄° 
GVÆue
 *
∑øm_vÆues
,

157 
gpoöãr
 
övoˇti⁄_höt
,

158 
gpoöãr
 
m¨shÆ_d©a
);

159 
	#gtk_m¨shÆ_NONE__POINTER_INT
 
gtk_m¨shÆ_VOID__POINTER_INT


	)

162 
gtk_m¨shÆ_VOID__POINTER_POINTER
 (
GClosuª
 *
˛osuª
,

163 
GVÆue
 *
ªtu∫_vÆue
,

164 
guöt
 
n_∑øm_vÆues
,

165 c⁄° 
GVÆue
 *
∑øm_vÆues
,

166 
gpoöãr
 
övoˇti⁄_höt
,

167 
gpoöãr
 
m¨shÆ_d©a
);

168 
	#gtk_m¨shÆ_NONE__POINTER_POINTER
 
gtk_m¨shÆ_VOID__POINTER_POINTER


	)

171 
gtk_m¨shÆ_VOID__POINTER_POINTER_POINTER
 (
GClosuª
 *
˛osuª
,

172 
GVÆue
 *
ªtu∫_vÆue
,

173 
guöt
 
n_∑øm_vÆues
,

174 c⁄° 
GVÆue
 *
∑øm_vÆues
,

175 
gpoöãr
 
övoˇti⁄_höt
,

176 
gpoöãr
 
m¨shÆ_d©a
);

177 
	#gtk_m¨shÆ_NONE__POINTER_POINTER_POINTER
 
gtk_m¨shÆ_VOID__POINTER_POINTER_POINTER


	)

180 
gtk_m¨shÆ_VOID__POINTER_STRING_STRING
 (
GClosuª
 *
˛osuª
,

181 
GVÆue
 *
ªtu∫_vÆue
,

182 
guöt
 
n_∑øm_vÆues
,

183 c⁄° 
GVÆue
 *
∑øm_vÆues
,

184 
gpoöãr
 
övoˇti⁄_höt
,

185 
gpoöãr
 
m¨shÆ_d©a
);

186 
	#gtk_m¨shÆ_NONE__POINTER_STRING_STRING
 
gtk_m¨shÆ_VOID__POINTER_STRING_STRING


	)

189 
gtk_m¨shÆ_VOID__POINTER_UINT
 (
GClosuª
 *
˛osuª
,

190 
GVÆue
 *
ªtu∫_vÆue
,

191 
guöt
 
n_∑øm_vÆues
,

192 c⁄° 
GVÆue
 *
∑øm_vÆues
,

193 
gpoöãr
 
övoˇti⁄_höt
,

194 
gpoöãr
 
m¨shÆ_d©a
);

195 
	#gtk_m¨shÆ_NONE__POINTER_UINT
 
gtk_m¨shÆ_VOID__POINTER_UINT


	)

198 
gtk_m¨shÆ_VOID__POINTER_UINT_ENUM
 (
GClosuª
 *
˛osuª
,

199 
GVÆue
 *
ªtu∫_vÆue
,

200 
guöt
 
n_∑øm_vÆues
,

201 c⁄° 
GVÆue
 *
∑øm_vÆues
,

202 
gpoöãr
 
övoˇti⁄_höt
,

203 
gpoöãr
 
m¨shÆ_d©a
);

204 
	#gtk_m¨shÆ_NONE__POINTER_UINT_ENUM
 
gtk_m¨shÆ_VOID__POINTER_UINT_ENUM


	)

207 
gtk_m¨shÆ_VOID__POINTER_POINTER_UINT_UINT
 (
GClosuª
 *
˛osuª
,

208 
GVÆue
 *
ªtu∫_vÆue
,

209 
guöt
 
n_∑øm_vÆues
,

210 c⁄° 
GVÆue
 *
∑øm_vÆues
,

211 
gpoöãr
 
övoˇti⁄_höt
,

212 
gpoöãr
 
m¨shÆ_d©a
);

213 
	#gtk_m¨shÆ_NONE__POINTER_POINTER_UINT_UINT
 
gtk_m¨shÆ_VOID__POINTER_POINTER_UINT_UINT


	)

216 
gtk_m¨shÆ_VOID__POINTER_INT_INT_POINTER_UINT_UINT
 (
GClosuª
 *
˛osuª
,

217 
GVÆue
 *
ªtu∫_vÆue
,

218 
guöt
 
n_∑øm_vÆues
,

219 c⁄° 
GVÆue
 *
∑øm_vÆues
,

220 
gpoöãr
 
övoˇti⁄_höt
,

221 
gpoöãr
 
m¨shÆ_d©a
);

222 
	#gtk_m¨shÆ_NONE__POINTER_INT_INT_POINTER_UINT_UINT
 
gtk_m¨shÆ_VOID__POINTER_INT_INT_POINTER_UINT_UINT


	)

225 
gtk_m¨shÆ_VOID__POINTER_UINT_UINT
 (
GClosuª
 *
˛osuª
,

226 
GVÆue
 *
ªtu∫_vÆue
,

227 
guöt
 
n_∑øm_vÆues
,

228 c⁄° 
GVÆue
 *
∑øm_vÆues
,

229 
gpoöãr
 
övoˇti⁄_höt
,

230 
gpoöãr
 
m¨shÆ_d©a
);

231 
	#gtk_m¨shÆ_NONE__POINTER_UINT_UINT
 
gtk_m¨shÆ_VOID__POINTER_UINT_UINT


	)

236 
	#gtk_m¨shÆ_VOID__STRING
 
g_c˛osuª_m¨shÆ_VOID__STRING


	)

237 
	#gtk_m¨shÆ_NONE__STRING
 
gtk_m¨shÆ_VOID__STRING


	)

240 
gtk_m¨shÆ_VOID__STRING_INT_POINTER
 (
GClosuª
 *
˛osuª
,

241 
GVÆue
 *
ªtu∫_vÆue
,

242 
guöt
 
n_∑øm_vÆues
,

243 c⁄° 
GVÆue
 *
∑øm_vÆues
,

244 
gpoöãr
 
övoˇti⁄_höt
,

245 
gpoöãr
 
m¨shÆ_d©a
);

246 
	#gtk_m¨shÆ_NONE__STRING_INT_POINTER
 
gtk_m¨shÆ_VOID__STRING_INT_POINTER


	)

249 
	#gtk_m¨shÆ_VOID__UINT
 
g_c˛osuª_m¨shÆ_VOID__UINT


	)

250 
	#gtk_m¨shÆ_NONE__UINT
 
gtk_m¨shÆ_VOID__UINT


	)

253 
gtk_m¨shÆ_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER
 (
GClosuª
 *
˛osuª
,

254 
GVÆue
 *
ªtu∫_vÆue
,

255 
guöt
 
n_∑øm_vÆues
,

256 c⁄° 
GVÆue
 *
∑øm_vÆues
,

257 
gpoöãr
 
övoˇti⁄_höt
,

258 
gpoöãr
 
m¨shÆ_d©a
);

259 
	#gtk_m¨shÆ_NONE__UINT_POINTER_UINT_ENUM_ENUM_POINTER
 
gtk_m¨shÆ_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER


	)

262 
gtk_m¨shÆ_VOID__UINT_POINTER_UINT_UINT_ENUM
 (
GClosuª
 *
˛osuª
,

263 
GVÆue
 *
ªtu∫_vÆue
,

264 
guöt
 
n_∑øm_vÆues
,

265 c⁄° 
GVÆue
 *
∑øm_vÆues
,

266 
gpoöãr
 
övoˇti⁄_höt
,

267 
gpoöãr
 
m¨shÆ_d©a
);

268 
	#gtk_m¨shÆ_NONE__UINT_POINTER_UINT_UINT_ENUM
 
gtk_m¨shÆ_VOID__UINT_POINTER_UINT_UINT_ENUM


	)

271 
gtk_m¨shÆ_VOID__UINT_STRING
 (
GClosuª
 *
˛osuª
,

272 
GVÆue
 *
ªtu∫_vÆue
,

273 
guöt
 
n_∑øm_vÆues
,

274 c⁄° 
GVÆue
 *
∑øm_vÆues
,

275 
gpoöãr
 
övoˇti⁄_höt
,

276 
gpoöãr
 
m¨shÆ_d©a
);

277 
	#gtk_m¨shÆ_NONE__UINT_STRING
 
gtk_m¨shÆ_VOID__UINT_STRING


	)

279 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gtk/gtktypebuiltins.h

4 #i‡
deföed
(
GTK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__GTK_H_INSIDE__
Ë&& !deföed (
GTK_COMPILATION
)

8 #i‚de‡
__GTK_TYPE_BUILTINS_H__


9 
	#__GTK_TYPE_BUILTINS_H__


	)

11 
	~<glib-obje˘.h
>

13 
G_BEGIN_DECLS


16 
GTy≥
 
	$gtk_ac˚l_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

17 
	#GTK_TYPE_ACCEL_FLAGS
 (
	`gtk_ac˚l_Êags_gë_ty≥
 ())

	)

20 
GTy≥
 
	$gtk_assi°™t_∑ge_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

21 
	#GTK_TYPE_ASSISTANT_PAGE_TYPE
 (
	`gtk_assi°™t_∑ge_ty≥_gë_ty≥
 ())

	)

24 
GTy≥
 
	$gtk_buûdî_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

25 
	#GTK_TYPE_BUILDER_ERROR
 (
	`gtk_buûdî_îr‹_gë_ty≥
 ())

	)

28 
GTy≥
 
	$gtk_ˇÀnd¨_di•œy_›ti⁄s_gë_ty≥
 (Ë
G_GNUC_CONST
;

29 
	#GTK_TYPE_CALENDAR_DISPLAY_OPTIONS
 (
	`gtk_ˇÀnd¨_di•œy_›ti⁄s_gë_ty≥
 ())

	)

32 
GTy≥
 
	$gtk_˚Œ_ªndîî_°©e_gë_ty≥
 (Ë
G_GNUC_CONST
;

33 
	#GTK_TYPE_CELL_RENDERER_STATE
 (
	`gtk_˚Œ_ªndîî_°©e_gë_ty≥
 ())

	)

34 
GTy≥
 
	$gtk_˚Œ_ªndîî_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

35 
	#GTK_TYPE_CELL_RENDERER_MODE
 (
	`gtk_˚Œ_ªndîî_mode_gë_ty≥
 ())

	)

38 
GTy≥
 
	$gtk_˚Œ_ªndîî_ac˚l_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

39 
	#GTK_TYPE_CELL_RENDERER_ACCEL_MODE
 (
	`gtk_˚Œ_ªndîî_ac˚l_mode_gë_ty≥
 ())

	)

42 
GTy≥
 
	$gtk_debug_Êag_gë_ty≥
 (Ë
G_GNUC_CONST
;

43 
	#GTK_TYPE_DEBUG_FLAG
 (
	`gtk_debug_Êag_gë_ty≥
 ())

	)

46 
GTy≥
 
	$gtk_dülog_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

47 
	#GTK_TYPE_DIALOG_FLAGS
 (
	`gtk_dülog_Êags_gë_ty≥
 ())

	)

48 
GTy≥
 
	$gtk_ª•⁄£_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

49 
	#GTK_TYPE_RESPONSE_TYPE
 (
	`gtk_ª•⁄£_ty≥_gë_ty≥
 ())

	)

52 
GTy≥
 
	$gtk_de°_deÁu…s_gë_ty≥
 (Ë
G_GNUC_CONST
;

53 
	#GTK_TYPE_DEST_DEFAULTS
 (
	`gtk_de°_deÁu…s_gë_ty≥
 ())

	)

54 
GTy≥
 
	$gtk_èrgë_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

55 
	#GTK_TYPE_TARGET_FLAGS
 (
	`gtk_èrgë_Êags_gë_ty≥
 ())

	)

58 
GTy≥
 
	$gtk_íåy_ic⁄_posôi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

59 
	#GTK_TYPE_ENTRY_ICON_POSITION
 (
	`gtk_íåy_ic⁄_posôi⁄_gë_ty≥
 ())

	)

62 
GTy≥
 
	$gtk_™ch‹_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
	#GTK_TYPE_ANCHOR_TYPE
 (
	`gtk_™ch‹_ty≥_gë_ty≥
 ())

	)

64 
GTy≥
 
	$gtk_¨row_∂a˚mít_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
	#GTK_TYPE_ARROW_PLACEMENT
 (
	`gtk_¨row_∂a˚mít_gë_ty≥
 ())

	)

66 
GTy≥
 
	$gtk_¨row_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

67 
	#GTK_TYPE_ARROW_TYPE
 (
	`gtk_¨row_ty≥_gë_ty≥
 ())

	)

68 
GTy≥
 
	$gtk_©èch_›ti⁄s_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
	#GTK_TYPE_ATTACH_OPTIONS
 (
	`gtk_©èch_›ti⁄s_gë_ty≥
 ())

	)

70 
GTy≥
 
	$gtk_buâ⁄_box_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
	#GTK_TYPE_BUTTON_BOX_STYLE
 (
	`gtk_buâ⁄_box_°yÀ_gë_ty≥
 ())

	)

72 
GTy≥
 
	$gtk_curve_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

73 
	#GTK_TYPE_CURVE_TYPE
 (
	`gtk_curve_ty≥_gë_ty≥
 ())

	)

74 
GTy≥
 
	$gtk_dñëe_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
	#GTK_TYPE_DELETE_TYPE
 (
	`gtk_dñëe_ty≥_gë_ty≥
 ())

	)

76 
GTy≥
 
	$gtk_dúe˘i⁄_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

77 
	#GTK_TYPE_DIRECTION_TYPE
 (
	`gtk_dúe˘i⁄_ty≥_gë_ty≥
 ())

	)

78 
GTy≥
 
	$gtk_ex∑ndî_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

79 
	#GTK_TYPE_EXPANDER_STYLE
 (
	`gtk_ex∑ndî_°yÀ_gë_ty≥
 ())

	)

80 
GTy≥
 
	$gtk_ic⁄_size_gë_ty≥
 (Ë
G_GNUC_CONST
;

81 
	#GTK_TYPE_ICON_SIZE
 (
	`gtk_ic⁄_size_gë_ty≥
 ())

	)

82 
GTy≥
 
	$gtk_£nsôivôy_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

83 
	#GTK_TYPE_SENSITIVITY_TYPE
 (
	`gtk_£nsôivôy_ty≥_gë_ty≥
 ())

	)

84 
GTy≥
 
	$gtk_side_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

85 
	#GTK_TYPE_SIDE_TYPE
 (
	`gtk_side_ty≥_gë_ty≥
 ())

	)

86 
GTy≥
 
	$gtk_ãxt_dúe˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

87 
	#GTK_TYPE_TEXT_DIRECTION
 (
	`gtk_ãxt_dúe˘i⁄_gë_ty≥
 ())

	)

88 
GTy≥
 
	$gtk_ju°ifiˇti⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
	#GTK_TYPE_JUSTIFICATION
 (
	`gtk_ju°ifiˇti⁄_gë_ty≥
 ())

	)

90 
GTy≥
 
	$gtk_m©ch_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

91 
	#GTK_TYPE_MATCH_TYPE
 (
	`gtk_m©ch_ty≥_gë_ty≥
 ())

	)

92 
GTy≥
 
	$gtk_míu_dúe˘i⁄_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

93 
	#GTK_TYPE_MENU_DIRECTION_TYPE
 (
	`gtk_míu_dúe˘i⁄_ty≥_gë_ty≥
 ())

	)

94 
GTy≥
 
	$gtk_mëric_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

95 
	#GTK_TYPE_METRIC_TYPE
 (
	`gtk_mëric_ty≥_gë_ty≥
 ())

	)

96 
GTy≥
 
	$gtk_movemít_°ï_gë_ty≥
 (Ë
G_GNUC_CONST
;

97 
	#GTK_TYPE_MOVEMENT_STEP
 (
	`gtk_movemít_°ï_gë_ty≥
 ())

	)

98 
GTy≥
 
	$gtk_s¸ﬁl_°ï_gë_ty≥
 (Ë
G_GNUC_CONST
;

99 
	#GTK_TYPE_SCROLL_STEP
 (
	`gtk_s¸ﬁl_°ï_gë_ty≥
 ())

	)

100 
GTy≥
 
	$gtk_‹õ¡©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

101 
	#GTK_TYPE_ORIENTATION
 (
	`gtk_‹õ¡©i⁄_gë_ty≥
 ())

	)

102 
GTy≥
 
	$gtk_c‹√r_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

103 
	#GTK_TYPE_CORNER_TYPE
 (
	`gtk_c‹√r_ty≥_gë_ty≥
 ())

	)

104 
GTy≥
 
	$gtk_∑ck_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

105 
	#GTK_TYPE_PACK_TYPE
 (
	`gtk_∑ck_ty≥_gë_ty≥
 ())

	)

106 
GTy≥
 
	$gtk_∑th_¥i‹ôy_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

107 
	#GTK_TYPE_PATH_PRIORITY_TYPE
 (
	`gtk_∑th_¥i‹ôy_ty≥_gë_ty≥
 ())

	)

108 
GTy≥
 
	$gtk_∑th_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

109 
	#GTK_TYPE_PATH_TYPE
 (
	`gtk_∑th_ty≥_gë_ty≥
 ())

	)

110 
GTy≥
 
	$gtk_pﬁicy_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

111 
	#GTK_TYPE_POLICY_TYPE
 (
	`gtk_pﬁicy_ty≥_gë_ty≥
 ())

	)

112 
GTy≥
 
	$gtk_posôi⁄_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

113 
	#GTK_TYPE_POSITION_TYPE
 (
	`gtk_posôi⁄_ty≥_gë_ty≥
 ())

	)

114 
GTy≥
 
	$gtk_¥evõw_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

115 
	#GTK_TYPE_PREVIEW_TYPE
 (
	`gtk_¥evõw_ty≥_gë_ty≥
 ())

	)

116 
GTy≥
 
	$gtk_ªlõf_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

117 
	#GTK_TYPE_RELIEF_STYLE
 (
	`gtk_ªlõf_°yÀ_gë_ty≥
 ())

	)

118 
GTy≥
 
	$gtk_ªsize_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

119 
	#GTK_TYPE_RESIZE_MODE
 (
	`gtk_ªsize_mode_gë_ty≥
 ())

	)

120 
GTy≥
 
	$gtk_sig«l_run_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

121 
	#GTK_TYPE_SIGNAL_RUN_TYPE
 (
	`gtk_sig«l_run_ty≥_gë_ty≥
 ())

	)

122 
GTy≥
 
	$gtk_s¸ﬁl_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

123 
	#GTK_TYPE_SCROLL_TYPE
 (
	`gtk_s¸ﬁl_ty≥_gë_ty≥
 ())

	)

124 
GTy≥
 
	$gtk_£À˘i⁄_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

125 
	#GTK_TYPE_SELECTION_MODE
 (
	`gtk_£À˘i⁄_mode_gë_ty≥
 ())

	)

126 
GTy≥
 
	$gtk_shadow_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

127 
	#GTK_TYPE_SHADOW_TYPE
 (
	`gtk_shadow_ty≥_gë_ty≥
 ())

	)

128 
GTy≥
 
	$gtk_°©e_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

129 
	#GTK_TYPE_STATE_TYPE
 (
	`gtk_°©e_ty≥_gë_ty≥
 ())

	)

130 
GTy≥
 
	$gtk_submíu_dúe˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

131 
	#GTK_TYPE_SUBMENU_DIRECTION
 (
	`gtk_submíu_dúe˘i⁄_gë_ty≥
 ())

	)

132 
GTy≥
 
	$gtk_submíu_∂a˚mít_gë_ty≥
 (Ë
G_GNUC_CONST
;

133 
	#GTK_TYPE_SUBMENU_PLACEMENT
 (
	`gtk_submíu_∂a˚mít_gë_ty≥
 ())

	)

134 
GTy≥
 
	$gtk_toﬁb¨_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

135 
	#GTK_TYPE_TOOLBAR_STYLE
 (
	`gtk_toﬁb¨_°yÀ_gë_ty≥
 ())

	)

136 
GTy≥
 
	$gtk_upd©e_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

137 
	#GTK_TYPE_UPDATE_TYPE
 (
	`gtk_upd©e_ty≥_gë_ty≥
 ())

	)

138 
GTy≥
 
	$gtk_visibûôy_gë_ty≥
 (Ë
G_GNUC_CONST
;

139 
	#GTK_TYPE_VISIBILITY
 (
	`gtk_visibûôy_gë_ty≥
 ())

	)

140 
GTy≥
 
	$gtk_wödow_posôi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

141 
	#GTK_TYPE_WINDOW_POSITION
 (
	`gtk_wödow_posôi⁄_gë_ty≥
 ())

	)

142 
GTy≥
 
	$gtk_wödow_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

143 
	#GTK_TYPE_WINDOW_TYPE
 (
	`gtk_wödow_ty≥_gë_ty≥
 ())

	)

144 
GTy≥
 
	$gtk_wøp_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

145 
	#GTK_TYPE_WRAP_MODE
 (
	`gtk_wøp_mode_gë_ty≥
 ())

	)

146 
GTy≥
 
	$gtk_s‹t_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

147 
	#GTK_TYPE_SORT_TYPE
 (
	`gtk_s‹t_ty≥_gë_ty≥
 ())

	)

148 
GTy≥
 
	$gtk_im_¥ìdô_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

149 
	#GTK_TYPE_IM_PREEDIT_STYLE
 (
	`gtk_im_¥ìdô_°yÀ_gë_ty≥
 ())

	)

150 
GTy≥
 
	$gtk_im_°©us_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

151 
	#GTK_TYPE_IM_STATUS_STYLE
 (
	`gtk_im_°©us_°yÀ_gë_ty≥
 ())

	)

152 
GTy≥
 
	$gtk_∑ck_dúe˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

153 
	#GTK_TYPE_PACK_DIRECTION
 (
	`gtk_∑ck_dúe˘i⁄_gë_ty≥
 ())

	)

154 
GTy≥
 
	$gtk_¥öt_∑ges_gë_ty≥
 (Ë
G_GNUC_CONST
;

155 
	#GTK_TYPE_PRINT_PAGES
 (
	`gtk_¥öt_∑ges_gë_ty≥
 ())

	)

156 
GTy≥
 
	$gtk_∑ge_£t_gë_ty≥
 (Ë
G_GNUC_CONST
;

157 
	#GTK_TYPE_PAGE_SET
 (
	`gtk_∑ge_£t_gë_ty≥
 ())

	)

158 
GTy≥
 
	$gtk_numbî_up_œyout_gë_ty≥
 (Ë
G_GNUC_CONST
;

159 
	#GTK_TYPE_NUMBER_UP_LAYOUT
 (
	`gtk_numbî_up_œyout_gë_ty≥
 ())

	)

160 
GTy≥
 
	$gtk_∑ge_‹õ¡©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

161 
	#GTK_TYPE_PAGE_ORIENTATION
 (
	`gtk_∑ge_‹õ¡©i⁄_gë_ty≥
 ())

	)

162 
GTy≥
 
	$gtk_¥öt_quÆôy_gë_ty≥
 (Ë
G_GNUC_CONST
;

163 
	#GTK_TYPE_PRINT_QUALITY
 (
	`gtk_¥öt_quÆôy_gë_ty≥
 ())

	)

164 
GTy≥
 
	$gtk_¥öt_du∂ex_gë_ty≥
 (Ë
G_GNUC_CONST
;

165 
	#GTK_TYPE_PRINT_DUPLEX
 (
	`gtk_¥öt_du∂ex_gë_ty≥
 ())

	)

166 
GTy≥
 
	$gtk_unô_gë_ty≥
 (Ë
G_GNUC_CONST
;

167 
	#GTK_TYPE_UNIT
 (
	`gtk_unô_gë_ty≥
 ())

	)

168 
GTy≥
 
	$gtk_åì_võw_grid_löes_gë_ty≥
 (Ë
G_GNUC_CONST
;

169 
	#GTK_TYPE_TREE_VIEW_GRID_LINES
 (
	`gtk_åì_võw_grid_löes_gë_ty≥
 ())

	)

170 
GTy≥
 
	$gtk_døg_ªsu…_gë_ty≥
 (Ë
G_GNUC_CONST
;

171 
	#GTK_TYPE_DRAG_RESULT
 (
	`gtk_døg_ªsu…_gë_ty≥
 ())

	)

174 
GTy≥
 
	$gtk_fûe_choo£r_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

175 
	#GTK_TYPE_FILE_CHOOSER_ACTION
 (
	`gtk_fûe_choo£r_a˘i⁄_gë_ty≥
 ())

	)

176 
GTy≥
 
	$gtk_fûe_choo£r_c⁄fúm©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

177 
	#GTK_TYPE_FILE_CHOOSER_CONFIRMATION
 (
	`gtk_fûe_choo£r_c⁄fúm©i⁄_gë_ty≥
 ())

	)

178 
GTy≥
 
	$gtk_fûe_choo£r_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

179 
	#GTK_TYPE_FILE_CHOOSER_ERROR
 (
	`gtk_fûe_choo£r_îr‹_gë_ty≥
 ())

	)

182 
GTy≥
 
	$gtk_fûe_fûãr_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

183 
	#GTK_TYPE_FILE_FILTER_FLAGS
 (
	`gtk_fûe_fûãr_Êags_gë_ty≥
 ())

	)

186 
GTy≥
 
	$gtk_ic⁄_lookup_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

187 
	#GTK_TYPE_ICON_LOOKUP_FLAGS
 (
	`gtk_ic⁄_lookup_Êags_gë_ty≥
 ())

	)

188 
GTy≥
 
	$gtk_ic⁄_theme_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

189 
	#GTK_TYPE_ICON_THEME_ERROR
 (
	`gtk_ic⁄_theme_îr‹_gë_ty≥
 ())

	)

192 
GTy≥
 
	$gtk_ic⁄_võw_dr›_posôi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

193 
	#GTK_TYPE_ICON_VIEW_DROP_POSITION
 (
	`gtk_ic⁄_võw_dr›_posôi⁄_gë_ty≥
 ())

	)

196 
GTy≥
 
	$gtk_image_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

197 
	#GTK_TYPE_IMAGE_TYPE
 (
	`gtk_image_ty≥_gë_ty≥
 ())

	)

200 
GTy≥
 
	$gtk_mesßge_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

201 
	#GTK_TYPE_MESSAGE_TYPE
 (
	`gtk_mesßge_ty≥_gë_ty≥
 ())

	)

202 
GTy≥
 
	$gtk_buâ⁄s_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

203 
	#GTK_TYPE_BUTTONS_TYPE
 (
	`gtk_buâ⁄s_ty≥_gë_ty≥
 ())

	)

206 
GTy≥
 
	$gtk_nŸebook_èb_gë_ty≥
 (Ë
G_GNUC_CONST
;

207 
	#GTK_TYPE_NOTEBOOK_TAB
 (
	`gtk_nŸebook_èb_gë_ty≥
 ())

	)

210 
GTy≥
 
	$gtk_obje˘_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

211 
	#GTK_TYPE_OBJECT_FLAGS
 (
	`gtk_obje˘_Êags_gë_ty≥
 ())

	)

212 
GTy≥
 
	$gtk_¨g_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

213 
	#GTK_TYPE_ARG_FLAGS
 (
	`gtk_¨g_Êags_gë_ty≥
 ())

	)

216 
GTy≥
 
	$gtk_¥öt_°©us_gë_ty≥
 (Ë
G_GNUC_CONST
;

217 
	#GTK_TYPE_PRINT_STATUS
 (
	`gtk_¥öt_°©us_gë_ty≥
 ())

	)

218 
GTy≥
 
	$gtk_¥öt_›î©i⁄_ªsu…_gë_ty≥
 (Ë
G_GNUC_CONST
;

219 
	#GTK_TYPE_PRINT_OPERATION_RESULT
 (
	`gtk_¥öt_›î©i⁄_ªsu…_gë_ty≥
 ())

	)

220 
GTy≥
 
	$gtk_¥öt_›î©i⁄_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

221 
	#GTK_TYPE_PRINT_OPERATION_ACTION
 (
	`gtk_¥öt_›î©i⁄_a˘i⁄_gë_ty≥
 ())

	)

222 
GTy≥
 
	$gtk_¥öt_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

223 
	#GTK_TYPE_PRINT_ERROR
 (
	`gtk_¥öt_îr‹_gë_ty≥
 ())

	)

226 
GTy≥
 
	$gtk_¥iv©e_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

227 
	#GTK_TYPE_PRIVATE_FLAGS
 (
	`gtk_¥iv©e_Êags_gë_ty≥
 ())

	)

230 
GTy≥
 
	$gtk_¥ogªss_b¨_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

231 
	#GTK_TYPE_PROGRESS_BAR_STYLE
 (
	`gtk_¥ogªss_b¨_°yÀ_gë_ty≥
 ())

	)

232 
GTy≥
 
	$gtk_¥ogªss_b¨_‹õ¡©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

233 
	#GTK_TYPE_PROGRESS_BAR_ORIENTATION
 (
	`gtk_¥ogªss_b¨_‹õ¡©i⁄_gë_ty≥
 ())

	)

236 
GTy≥
 
	$gtk_rc_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

237 
	#GTK_TYPE_RC_FLAGS
 (
	`gtk_rc_Êags_gë_ty≥
 ())

	)

238 
GTy≥
 
	$gtk_rc_tokí_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

239 
	#GTK_TYPE_RC_TOKEN_TYPE
 (
	`gtk_rc_tokí_ty≥_gë_ty≥
 ())

	)

242 
GTy≥
 
	$gtk_ª˚¡_s‹t_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

243 
	#GTK_TYPE_RECENT_SORT_TYPE
 (
	`gtk_ª˚¡_s‹t_ty≥_gë_ty≥
 ())

	)

244 
GTy≥
 
	$gtk_ª˚¡_choo£r_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

245 
	#GTK_TYPE_RECENT_CHOOSER_ERROR
 (
	`gtk_ª˚¡_choo£r_îr‹_gë_ty≥
 ())

	)

248 
GTy≥
 
	$gtk_ª˚¡_fûãr_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

249 
	#GTK_TYPE_RECENT_FILTER_FLAGS
 (
	`gtk_ª˚¡_fûãr_Êags_gë_ty≥
 ())

	)

252 
GTy≥
 
	$gtk_ª˚¡_m™agî_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

253 
	#GTK_TYPE_RECENT_MANAGER_ERROR
 (
	`gtk_ª˚¡_m™agî_îr‹_gë_ty≥
 ())

	)

256 
GTy≥
 
	$gtk_size_group_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

257 
	#GTK_TYPE_SIZE_GROUP_MODE
 (
	`gtk_size_group_mode_gë_ty≥
 ())

	)

260 
GTy≥
 
	$gtk_•ö_buâ⁄_upd©e_pﬁicy_gë_ty≥
 (Ë
G_GNUC_CONST
;

261 
	#GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY
 (
	`gtk_•ö_buâ⁄_upd©e_pﬁicy_gë_ty≥
 ())

	)

262 
GTy≥
 
	$gtk_•ö_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

263 
	#GTK_TYPE_SPIN_TYPE
 (
	`gtk_•ö_ty≥_gë_ty≥
 ())

	)

266 
GTy≥
 
	$gtk_ãxt_buf„r_èrgë_öfo_gë_ty≥
 (Ë
G_GNUC_CONST
;

267 
	#GTK_TYPE_TEXT_BUFFER_TARGET_INFO
 (
	`gtk_ãxt_buf„r_èrgë_öfo_gë_ty≥
 ())

	)

270 
GTy≥
 
	$gtk_ãxt_£¨ch_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

271 
	#GTK_TYPE_TEXT_SEARCH_FLAGS
 (
	`gtk_ãxt_£¨ch_Êags_gë_ty≥
 ())

	)

274 
GTy≥
 
	$gtk_ãxt_wödow_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

275 
	#GTK_TYPE_TEXT_WINDOW_TYPE
 (
	`gtk_ãxt_wödow_ty≥_gë_ty≥
 ())

	)

278 
GTy≥
 
	$gtk_toﬁb¨_chûd_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

279 
	#GTK_TYPE_TOOLBAR_CHILD_TYPE
 (
	`gtk_toﬁb¨_chûd_ty≥_gë_ty≥
 ())

	)

280 
GTy≥
 
	$gtk_toﬁb¨_•a˚_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

281 
	#GTK_TYPE_TOOLBAR_SPACE_STYLE
 (
	`gtk_toﬁb¨_•a˚_°yÀ_gë_ty≥
 ())

	)

284 
GTy≥
 
	$gtk_åì_modñ_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

285 
	#GTK_TYPE_TREE_MODEL_FLAGS
 (
	`gtk_åì_modñ_Êags_gë_ty≥
 ())

	)

288 
GTy≥
 
	$gtk_åì_võw_dr›_posôi⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

289 
	#GTK_TYPE_TREE_VIEW_DROP_POSITION
 (
	`gtk_åì_võw_dr›_posôi⁄_gë_ty≥
 ())

	)

292 
GTy≥
 
	$gtk_åì_võw_cﬁumn_sizög_gë_ty≥
 (Ë
G_GNUC_CONST
;

293 
	#GTK_TYPE_TREE_VIEW_COLUMN_SIZING
 (
	`gtk_åì_võw_cﬁumn_sizög_gë_ty≥
 ())

	)

296 
GTy≥
 
	$gtk_ui_m™agî_ôem_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

297 
	#GTK_TYPE_UI_MANAGER_ITEM_TYPE
 (
	`gtk_ui_m™agî_ôem_ty≥_gë_ty≥
 ())

	)

300 
GTy≥
 
	$gtk_widgë_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

301 
	#GTK_TYPE_WIDGET_FLAGS
 (
	`gtk_widgë_Êags_gë_ty≥
 ())

	)

302 
GTy≥
 
	$gtk_widgë_hñp_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

303 
	#GTK_TYPE_WIDGET_HELP_TYPE
 (
	`gtk_widgë_hñp_ty≥_gë_ty≥
 ())

	)

306 
GTy≥
 
	$gtk_åì_võw_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

307 
	#GTK_TYPE_TREE_VIEW_MODE
 (
	`gtk_åì_võw_mode_gë_ty≥
 ())

	)

310 
GTy≥
 
	$gtk_˚Œ_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

311 
	#GTK_TYPE_CELL_TYPE
 (
	`gtk_˚Œ_ty≥_gë_ty≥
 ())

	)

312 
GTy≥
 
	$gtk_˛i°_døg_pos_gë_ty≥
 (Ë
G_GNUC_CONST
;

313 
	#GTK_TYPE_CLIST_DRAG_POS
 (
	`gtk_˛i°_døg_pos_gë_ty≥
 ())

	)

314 
GTy≥
 
	$gtk_buâ⁄_a˘i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

315 
	#GTK_TYPE_BUTTON_ACTION
 (
	`gtk_buâ⁄_a˘i⁄_gë_ty≥
 ())

	)

318 
GTy≥
 
	$gtk_˘ªe_pos_gë_ty≥
 (Ë
G_GNUC_CONST
;

319 
	#GTK_TYPE_CTREE_POS
 (
	`gtk_˘ªe_pos_gë_ty≥
 ())

	)

320 
GTy≥
 
	$gtk_˘ªe_löe_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

321 
	#GTK_TYPE_CTREE_LINE_STYLE
 (
	`gtk_˘ªe_löe_°yÀ_gë_ty≥
 ())

	)

322 
GTy≥
 
	$gtk_˘ªe_ex∑ndî_°yÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

323 
	#GTK_TYPE_CTREE_EXPANDER_STYLE
 (
	`gtk_˘ªe_ex∑ndî_°yÀ_gë_ty≥
 ())

	)

324 
GTy≥
 
	$gtk_˘ªe_ex∑nsi⁄_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

325 
	#GTK_TYPE_CTREE_EXPANSION_TYPE
 (
	`gtk_˘ªe_ex∑nsi⁄_ty≥_gë_ty≥
 ())

	)

326 
G_END_DECLS


	@/usr/include/libbonobo-2.0/bonobo/bonobo-macros.h

9 #i‚de‡
_BONOBO_MACROS_H_


10 
	#_BONOBO_MACROS_H_


	)

12 
	~<glib.h
>

14 
	gG_BEGIN_DECLS


21 
	#BONOBO_BOILERPLATE
(
ty≥
, 
ty≥_as_fun˘i⁄
, 
c‹ba_ty≥
, \

22 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
, \

23 
ªgi°î_ty≥_ma¸o
) \

24 
ty≥_as_fun˘i⁄
 ## 
	`_˛ass_öô
 (
ty≥
 ## 
Cœss
 *
kœss
); \

25 
ty≥_as_fun˘i⁄
 ## 
	`_ö°™˚_öô
 (
ty≥
 *
obje˘
); \

26 
∑ª¡_ty≥
 ## 
Cœss
 *
∑ª¡_˛ass
 = 
NULL
; \

28 
ty≥_as_fun˘i⁄
 ## 
	`_˛ass_öô_åampﬁöe
 (
gpoöãr
 
kœss
, \

29 
gpoöãr
 
d©a
) \

31 
∑ª¡_˛ass
 = (
∑ª¡_ty≥
 ## 
Cœss
 *)
	`g_ty≥_˛ass_ªf
 ( \

32 
∑ª¡_ty≥_ma¸o
); \

33 
ty≥_as_fun˘i⁄
 ## 
	`_˛ass_öô
 ((
ty≥
 ## 
Cœss
 *)
kœss
); \

35 
GTy≥
 \

36 
ty≥_as_fun˘i⁄
 ## 
	`_gë_ty≥
 () \

38 
GTy≥
 
obje˘_ty≥
 = 0; \

39 i‡(
obje˘_ty≥
 == 0) { \

40 c⁄° 
GTy≥Info
 
obje˘_öfo
 = { \

41  (
ty≥
 ## 
Cœss
), \

42 
NULL
, \

43 
NULL
, \

44 
ty≥_as_fun˘i⁄
 ## 
_˛ass_öô_åampﬁöe
, \

45 
NULL
, \

46 
NULL
, \

47  (
ty≥
), \

49 (
GIn°™˚InôFunc
Ë
ty≥_as_fun˘i⁄
 ## 
_ö°™˚_öô
 \

51 
obje˘_ty≥
 = 
ªgi°î_ty≥_ma¸o
 \

52 (
ty≥
, 
ty≥_as_fun˘i⁄
, 
c‹ba_ty≥
, \

53 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
); \

55  
obje˘_ty≥
; \

56 }

	)

62 
	#BONOBO_CALL_PARENT
(
∑ª¡_˛ass_ˇ°
, 
«me
, 
¨gs
) \

63 ((
	`∑ª¡_˛ass_ˇ°
(
∑ª¡_˛ass
)->
«me
 !
NULL
) ? \

64 
	`∑ª¡_˛ass_ˇ°
(
∑ª¡_˛ass
)->
«me
 
¨gs
 : ()0)

	)

68 
	#BONOBO_CALL_PARENT_WITH_DEFAULT
(
∑ª¡_˛ass_ˇ°
, \

69 
«me
, 
¨gs
, 
def_ªtu∫
) \

70 ((
	`∑ª¡_˛ass_ˇ°
(
∑ª¡_˛ass
)->
«me
 !
NULL
) ? \

71 
	`∑ª¡_˛ass_ˇ°
(
∑ª¡_˛ass
)->
«me
 
¨gs
 : 
def_ªtu∫
)

	)

74 
	#BONOBO_CLASS_BOILERPLATE
(
ty≥
, 
ty≥_as_fun˘i⁄
, \

75 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
) \

76 
	`BONOBO_BOILERPLATE
(
ty≥
, 
ty≥_as_fun˘i⁄
,Åype, \

77 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
, \

78 
BONOBO_REGISTER_TYPE
)

	)

79 
	#BONOBO_REGISTER_TYPE
(
ty≥
, 
ty≥_as_fun˘i⁄
, 
c‹ba_ty≥
, \

80 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
) \

81 
	`b⁄obo_ty≥_unique
 (
∑ª¡_ty≥_ma¸o
, 
NULL
, NULL, 0, \

82 &
obje˘_öfo
, #ty≥)

	)

84 
	#BONOBO_CLASS_BOILERPLATE_FULL
(
ty≥
, 
ty≥_as_fun˘i⁄
, \

85 
c‹ba_ty≥
, \

86 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
) \

87 
	`BONOBO_BOILERPLATE
(
ty≥
, 
ty≥_as_fun˘i⁄
, 
c‹ba_ty≥
, \

88 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
, \

89 
BONOBO_REGISTER_TYPE_FULL
)

	)

90 
	#BONOBO_REGISTER_TYPE_FULL
(
ty≥
, 
ty≥_as_fun˘i⁄
, 
c‹ba_ty≥
, \

91 
∑ª¡_ty≥
, 
∑ª¡_ty≥_ma¸o
) \

92 
	`b⁄obo_ty≥_unique
 (
∑ª¡_ty≥_ma¸o
, \

93 
POA_
##
c‹ba_ty≥
##
__öô
, \

94 
POA_
##
c‹ba_ty≥
##
__föi
, \

95 
	`G_STRUCT_OFFSET
 (
ty≥
##
Cœss
, 
ïv
), \

96 &
obje˘_öfo
, #ty≥)

	)

98 
	gG_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-engine.h

11 #i‚de‡
_BONOBO_UI_ENGINE_H_


12 
	#_BONOBO_UI_ENGINE_H_


	)

14 
	~<glib.h
>

15 
	~<b⁄obo/b⁄obo-obje˘.h
>

17 
G_BEGIN_DECLS


19 
_B⁄oboUIEngöe
 
	tB⁄oboUIEngöe
;

21 
	~<b⁄obo/b⁄obo-ui-c⁄èöî.h
>

24 
b⁄obo_ui_ígöe_dîegi°î_dód_comp⁄íts
 (
B⁄oboUIEngöe
 *
ígöe
);

25 
b⁄obo_ui_ígöe_dîegi°î_comp⁄ít_by_ªf
 (
B⁄oboUIEngöe
 *
ígöe
,

26 
B⁄obo_Unknown
 
ªf
);

27 
b⁄obo_ui_ígöe_dîegi°î_comp⁄ít
 (
B⁄oboUIEngöe
 *
ígöe
,

28 c⁄° *
«me
);

29 
b⁄obo_ui_ígöe_ªgi°î_comp⁄ít
 (
B⁄oboUIEngöe
 *
ígöe
,

30 c⁄° *
«me
,

31 
B⁄obo_Unknown
 
comp⁄ít
);

32 
GLi°
 *
b⁄obo_ui_ígöe_gë_comp⁄ít_«mes
 (
B⁄oboUIEngöe
 *
ígöe
);

33 
B⁄obo_Unknown
 
b⁄obo_ui_ígöe_gë_comp⁄ít
 (
B⁄oboUIEngöe
 *
ígöe
,

34 c⁄° *
«me
);

37 
b⁄obo_ui_ígöe_c⁄fig_£t_∑th
 (
B⁄oboUIEngöe
 *
ígöe
,

38 c⁄° *
∑th
);

39 c⁄° *
b⁄obo_ui_ígöe_c⁄fig_gë_∑th
 (
B⁄oboUIEngöe
 *
ígöe
);

42 
b⁄obo_ui_ígöe_£t_ui_c⁄èöî
 (
B⁄oboUIEngöe
 *
ígöe
,

43 
B⁄oboUIC⁄èöî
 *
ui_c⁄èöî
);

44 
B⁄oboUIC⁄èöî
 *
b⁄obo_ui_ígöe_gë_ui_c⁄èöî
 (
B⁄oboUIEngöe
 *
ígöe
);

48 #i‚de‡
BONOBO_UI_DISABLE_DEPRECATED


49 
b⁄obo_ui_ígöe_‰ìze
 (
B⁄oboUIEngöe
 *
ígöe
);

50 
b⁄obo_ui_ígöe_thaw
 (
B⁄oboUIEngöe
 *
ígöe
);

51 
b⁄obo_ui_ígöe_upd©e
 (
B⁄oboUIEngöe
 *
ígöe
);

54 
	#BONOBO_TYPE_UI_ENGINE
 (
	`b⁄obo_ui_ígöe_gë_ty≥
 ())

	)

55 
	#BONOBO_UI_ENGINE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
BONOBO_TYPE_UI_ENGINE
, 
B⁄oboUIEngöe
))

	)

56 
	#BONOBO_UI_ENGINE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
BONOBO_TYPE_UI_ENGINE
, 
B⁄oboUIEngöeCœss
))

	)

57 
	#BONOBO_IS_UI_ENGINE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
BONOBO_TYPE_UI_ENGINE
))

	)

58 
	#BONOBO_IS_UI_ENGINE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
BONOBO_TYPE_UI_ENGINE
))

	)

60 
GTy≥
 
	$b⁄obo_ui_ígöe_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 #ifde‡
BONOBO_UI_INTERNAL


66 
BONOBO_UI_ERROR_OK
 = 0,

67 
BONOBO_UI_ERROR_BAD_PARAM
,

68 
BONOBO_UI_ERROR_INVALID_PATH
,

69 
BONOBO_UI_ERROR_INVALID_XML


70 } 
	tB⁄oboUIEº‹
;

72 
	~<b⁄obo/b⁄obo-ui-sync.h
>

74 
_B⁄oboUIEngöePriv©e
 
	tB⁄oboUIEngöePriv©e
;

76 
	s_B⁄oboUIEngöe
 {

77 
GObje˘
 
∑ª¡
;

79 
B⁄oboUIEngöePriv©e
 *
¥iv
;

83 
GObje˘Cœss
 
∑ª¡_˛ass
;

86 (*
add_höt
Ë(
B⁄oboUIEngöe
 *
ígöe
,

87 c⁄° *
°r
);

88 (*
ªmove_höt
Ë(
B⁄oboUIEngöe
 *
ígöe
);

90 (*
emô_vîb_⁄
Ë(
B⁄oboUIEngöe
 *
ígöe
,

91 
B⁄oboUINode
 *
node
);

93 (*
emô_evít_⁄
Ë(
B⁄oboUIEngöe
 *
ígöe
,

94 
B⁄oboUINode
 *
node
,

95 c⁄° *
°©e
);

97 (*
de°roy
Ë(
B⁄oboUIEngöe
 *
ígöe
);

99 } 
	tB⁄oboUIEngöeCœss
;

101 
B⁄oboUIEngöe
 *
	`b⁄obo_ui_ígöe_c⁄°ru˘
 (B⁄oboUIEngöê*
ígöe
,

102 
GObje˘
 *
võw
);

103 
B⁄oboUIEngöe
 *
	`b⁄obo_ui_ígöe_√w
 (
GObje˘
 *
võw
);

104 
GObje˘
 *
	`b⁄obo_ui_ígöe_gë_võw
 (
B⁄oboUIEngöe
 *
ígöe
);

106 
	`b⁄obo_ui_ígöe_add_sync
 (
B⁄oboUIEngöe
 *
ígöe
,

107 
B⁄oboUISync
 *
sync
);

108 
	`b⁄obo_ui_ígöe_ªmove_sync
 (
B⁄oboUIEngöe
 *
ígöe
,

109 
B⁄oboUISync
 *
sync
);

110 
GSLi°
 *
	`b⁄obo_ui_ígöe_gë_syncs
 (
B⁄oboUIEngöe
 *
ígöe
);

112 
	`b⁄obo_ui_ígöe_upd©e_node
 (
B⁄oboUIEngöe
 *
ígöe
,

113 
B⁄oboUISync
 *
sync
,

114 
B⁄oboUINode
 *
node
);

115 
	`b⁄obo_ui_ígöe_queue_upd©e
 (
B⁄oboUIEngöe
 *
ígöe
,

116 
GtkWidgë
 *
widgë
,

117 
B⁄oboUINode
 *
node
,

118 
B⁄oboUINode
 *
cmd_node
);

120 
GtkWidgë
 *
	`b⁄obo_ui_ígöe_buûd_c⁄åﬁ
 (
B⁄oboUIEngöe
 *
ígöe
,

121 
B⁄oboUINode
 *
node
);

123 
B⁄oboUINode
 *
	`b⁄obo_ui_ígöe_widgë_gë_node
 (
GtkWidgë
 *
widgë
);

124 
	`b⁄obo_ui_ígöe_widgë_£t_node
 (
B⁄oboUIEngöe
 *
ígöe
,

125 
GtkWidgë
 *
widgë
,

126 
B⁄oboUINode
 *
node
);

127 
B⁄oboUIEº‹
 
	`b⁄obo_ui_ígöe_xml_£t_¥›
 (
B⁄oboUIEngöe
 *
ígöe
,

128 c⁄° *
∑th
,

129 c⁄° *
¥›îty
,

130 c⁄° *
vÆue
,

131 c⁄° *
comp⁄ít
);

132 
CORBA_ch¨
 *
	`b⁄obo_ui_ígöe_xml_gë_¥›
 (
B⁄oboUIEngöe
 *
ígöe
,

133 c⁄° *
∑th
,

134 c⁄° *
¥›
,

135 
gboﬁón
 *
övÆid_∑th
);

136 
	`b⁄obo_ui_ígöe_¥u√_widgë_öfo
 (
B⁄oboUIEngöe
 *
ígöe
,

137 
B⁄oboUINode
 *
node
,

138 
gboﬁón
 
ßve_cu°om
);

140 
B⁄oboUINode
 *
	`b⁄obo_ui_ígöe_gë_∑th
 (
B⁄oboUIEngöe
 *
ígöe
,

141 c⁄° *
∑th
);

142 
	`b⁄obo_ui_ígöe_dúty_åì
 (
B⁄oboUIEngöe
 *
ígöe
,

143 
B⁄oboUINode
 *
node
);

144 
	`b⁄obo_ui_ígöe_˛ón_åì
 (
B⁄oboUIEngöe
 *
ígöe
,

145 
B⁄oboUINode
 *
node
);

146 
	`b⁄obo_ui_ígöe_dump
 (
B⁄oboUIEngöe
 *
ígöe
,

147 
FILE
 *
out
,

148 c⁄° *
msg
);

151 
CORBA_Obje˘
 
	`b⁄obo_ui_ígöe_node_gë_obje˘
 (
B⁄oboUIEngöe
 *
ígöe
,

152 
B⁄oboUINode
 *
node
);

153 
gboﬁón
 
	`b⁄obo_ui_ígöe_node_is_dúty
 (
B⁄oboUIEngöe
 *
ígöe
,

154 
B⁄oboUINode
 *
node
);

155 
GtkWidgë
 *
	`b⁄obo_ui_ígöe_node_gë_widgë
 (
B⁄oboUIEngöe
 *
ígöe
,

156 
B⁄oboUINode
 *
node
);

157 c⁄° *
	`b⁄obo_ui_ígöe_node_gë_id
 (
B⁄oboUIEngöe
 *
ígöe
,

158 
B⁄oboUINode
 *
node
);

159 
B⁄oboUINode
 *
	`b⁄obo_ui_ígöe_gë_cmd_node
 (
B⁄oboUIEngöe
 *
ígöe
,

160 
B⁄oboUINode
 *
‰om_node
);

161 
	`b⁄obo_ui_ígöe_node_£t_dúty
 (
B⁄oboUIEngöe
 *
ígöe
,

162 
B⁄oboUINode
 *
node
,

163 
gboﬁón
 
dúty
);

164 
	`b⁄obo_ui_ígöe_°amp_cu°om
 (
B⁄oboUIEngöe
 *
ígöe
,

165 
B⁄oboUINode
 *
node
);

166 
	`b⁄obo_ui_ígöe_widgë_£t
 (
B⁄oboUIEngöe
 *
ígöe
,

167 c⁄° *
∑th
,

168 
GtkWidgë
 *
widgë
);

169 
	`b⁄obo_ui_ígöe_°amp_roŸ
 (
B⁄oboUIEngöe
 *
ígöe
,

170 
B⁄oboUINode
 *
node
,

171 
GtkWidgë
 *
widgë
);

173 
	`b⁄obo_ui_ígöe_add_höt
 (
B⁄oboUIEngöe
 *
ígöe
,

174 c⁄° *
°r
);

175 
	`b⁄obo_ui_ígöe_ªmove_höt
 (
B⁄oboUIEngöe
 *
ígöe
);

176 
	`b⁄obo_ui_ígöe_emô_vîb_⁄
 (
B⁄oboUIEngöe
 *
ígöe
,

177 
B⁄oboUINode
 *
node
);

178 
	`b⁄obo_ui_ígöe_emô_evít_⁄
 (
B⁄oboUIEngöe
 *
ígöe
,

179 
B⁄oboUINode
 *
node
,

180 c⁄° *
°©e
);

181 
	`b⁄obo_ui_ígöe_emô_vîb_⁄_w
 (
B⁄oboUIEngöe
 *
ígöe
,

182 
GtkWidgë
 *
widgë
);

183 
	`b⁄obo_ui_ígöe_emô_evít_⁄_w
 (
B⁄oboUIEngöe
 *
ígöe
,

184 
GtkWidgë
 *
widgë
,

185 c⁄° *
°©e
);

189 *
	`b⁄obo_ui_ígöe_gë_©å
 (
B⁄oboUINode
 *
node
,

190 
B⁄oboUINode
 *
cmd_node
,

191 c⁄° *
©å
);

192 
	`b⁄obo_ui_ígöe_widgë_©èch_node
 (
GtkWidgë
 *
widgë
,

193 
B⁄oboUINode
 *
node
);

197 
CORBA_ch¨
 *
	`b⁄obo_ui_ígöe_xml_gë
 (
B⁄oboUIEngöe
 *
ígöe
,

198 c⁄° *
∑th
,

199 
gboﬁón
 
node_⁄ly
);

200 
gboﬁón
 
	`b⁄obo_ui_ígöe_xml_node_exi°s
 (
B⁄oboUIEngöe
 *
ígöe
,

201 c⁄° *
∑th
);

202 
B⁄oboUIEº‹
 
	`b⁄obo_ui_ígöe_xml_mîge_åì
 (
B⁄oboUIEngöe
 *
ígöe
,

203 c⁄° *
∑th
,

204 
B⁄oboUINode
 *
åì
,

205 c⁄° *
comp⁄ít
);

206 
B⁄oboUIEº‹
 
	`b⁄obo_ui_ígöe_xml_rm
 (
B⁄oboUIEngöe
 *
ígöe
,

207 c⁄° *
∑th
,

208 c⁄° *
by_comp⁄ít
);

209 
B⁄oboUIEº‹
 
	`b⁄obo_ui_ígöe_obje˘_£t
 (
B⁄oboUIEngöe
 *
ígöe
,

210 c⁄° *
∑th
,

211 
B⁄obo_Unknown
 
obje˘
,

212 
CORBA_Envú⁄mít
 *
ev
);

213 
B⁄oboUIEº‹
 
	`b⁄obo_ui_ígöe_obje˘_gë
 (
B⁄oboUIEngöe
 *
ígöe
,

214 c⁄° *
∑th
,

215 
B⁄obo_Unknown
 *
obje˘
,

216 
CORBA_Envú⁄mít
 *
ev
);

218 
	`b⁄obo_ui_ígöe_exec_vîb
 (
B⁄oboUIEngöe
 *
ígöe
,

219 c⁄° 
CORBA_ch¨
 *
˙ame
,

220 
CORBA_Envú⁄mít
 *
ev
);

221 
	`b⁄obo_ui_ígöe_ui_evít
 (
B⁄oboUIEngöe
 *
ígöe
,

222 c⁄° 
CORBA_ch¨
 *
id
,

223 c⁄° 
B⁄obo_UIComp⁄ít_EvítTy≥
 
ty≥
,

224 c⁄° 
CORBA_ch¨
 *
°©e
,

225 
CORBA_Envú⁄mít
 *
ev
);

229 
G_END_DECLS


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	#__mÆloc_±r_t
 *

	)

29 
	#__mÆloc_size_t
 
size_t


	)

30 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

32 #ifde‡
__GNUC__


34 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

37 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

41 
	#__MALLOC_P
(
¨gs
Ë
	)
args

42 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

47 
__BEGIN_DECLS


50 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

53 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

54 
__©åibuã_mÆloc__
 
__wur
;

61 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

62 
__©åibuã_w¨n_unu£d_ªsu…__
;

65 
‰ì
 
__MALLOC_P
 ((*
__±r
));

68 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

71 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

72 
__©åibuã_mÆloc__
 
__wur
;

75 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

76 
__©åibuã_mÆloc__
 
__wur
;

80 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

81 
__©åibuã_mÆloc__
 
__wur
;

85 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

88 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

89 
__©åibuã_mÆloc__
;

93 
	smÆlöfo
 {

94 
	m¨ía
;

95 
	m‹dblks
;

96 
	msmblks
;

97 
	mhblks
;

98 
	mhblkhd
;

99 
	musmblks
;

100 
	mfsmblks
;

101 
	mu‹dblks
;

102 
	mf‹dblks
;

103 
	mkìpco°
;

107 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

110 #i‚de‡
M_MXFAST


111 
	#M_MXFAST
 1

	)

113 #i‚de‡
M_NLBLKS


114 
	#M_NLBLKS
 2

	)

116 #i‚de‡
M_GRAIN


117 
	#M_GRAIN
 3

	)

119 #i‚de‡
M_KEEP


120 
	#M_KEEP
 4

	)

124 
	#M_TRIM_THRESHOLD
 -1

	)

125 
	#M_TOP_PAD
 -2

	)

126 
	#M_MMAP_THRESHOLD
 -3

	)

127 
	#M_MMAP_MAX
 -4

	)

128 
	#M_CHECK_ACTION
 -5

	)

129 
	#M_PERTURB
 -6

	)

132 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

136 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

140 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

143 
mÆloc_°©s
 
__MALLOC_P
 (());

146 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

150 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

155 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

157 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

158 
__c⁄°
 
__mÆloc_±r_t
));

159 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

160 
__c⁄°
 
__mÆloc_±r_t
));

161 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

162 
__c⁄°
 
__mÆloc_±r_t
));

163 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

164 
size_t
 
__size
,

165 
__c⁄°
 
__mÆloc_±r_t
));

166 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

169 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

172 
__END_DECLS


	@/usr/include/orbit-2.0/orbit/dynamic/dynamic.h

1 #i‚de‡
ORBIT_DYNAMIC_H


2 
	#ORBIT_DYNAMIC_H
 1

	)

4 
	~<‹bô/dy«mic/dy«mic-defs.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


10 
gpoöãr
 
ORBô_dy«ny_√w_deÁu…
 (c⁄° 
CORBA_Ty≥Code
 
tc
);

14 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/orb-core-types.h

1 #i‚de‡
ORB_CORE_TYPES_H


2 
	#ORB_CORE_TYPES_H
 1

	)

4 
	~<‹bô/‹b-c‹e/‹b-ty≥s.h
>

5 
	~<‹bô/‹b-c‹e/c‹ba-ty≥code-ty≥.h
>

6 
	~<‹bô/‹b-c‹e/c‹ba-™y-ty≥.h
>

7 
	~<‹bô/‹b-c‹e/c‹ba-ívú⁄mít-ty≥.h
>

8 
	~<‹bô/‹b-c‹e/c‹ba-‹b-ty≥.h
>

9 
	~<‹bô/‹b-c‹e/‹bô-obje˘.h
>

10 
	~<‹bô/‹b-c‹e/c‹ba-c⁄ãxt-ty≥.h
>

12 
	~<‹bô/‹b-c‹e/c‹ba-ty≥code.h
>

13 
	~<‹bô/‹b-c‹e/Æloˇt‹s.h
>

15 
	#EXCLUDE_ORBIT_H


	)

16 
	~<‹bô/‹b-c‹e/c‹ba-defs.h
>

17 #unde‡
EXCLUDE_ORBIT_H


	@/usr/include/orbit-2.0/orbit/orb-core/orb-core.h

1 #i‚de‡
ORB_CORE_H


2 
	#ORB_CORE_H
 1

	)

4 
	~<‹bô/utû/‹bô-utû.h
>

6 
	~<‹bô/‹b-c‹e/c‹ba-defs.h
>

7 
	~<‹bô/‹b-c‹e/i›-defs.h
>

9 
	~<‹bô/‹b-c‹e/c‹ba-‹b.h
>

10 
	~<‹bô/‹b-c‹e/c‹ba-°rög.h
>

12 
	~<‹bô/‹b-c‹e/c‹ba-ívú⁄mít.h
>

13 
	~<‹bô/‹b-c‹e/c‹ba-™y.h
>

14 
	~<‹bô/‹b-c‹e/c‹ba-obje˘-ty≥.h
>

15 
	~<‹bô/‹b-c‹e/c‹ba-obje˘.h
>

16 
	~<‹bô/‹b-c‹e/c‹ba-pﬁicy-ty≥.h
>

17 
	~<‹bô/‹b-c‹e/c‹ba-c⁄ãxt.h
>

19 
	~<‹bô/‹b-c‹e/‹bô-smÆl.h
>

	@/usr/include/orbit-2.0/orbit/orbit-config.h

1 #i‚de‡
ORBIT_CONFIG_H


2 
	#ORBIT_CONFIG_H
 1

	)

4 
	#ORBIT_CONFIG_SERIAL
 20

	)

5 #i‚de‡
ORBIT_MAJOR_VERSION


6 
	#ORBIT_MAJOR_VERSION
 (2)

	)

7 
	#ORBIT_MINOR_VERSION
 (14)

	)

8 
	#ORBIT_MICRO_VERSION
 (17)

	)

11 
	#ORBIT_IMPLEMENTS_IS_A
 1

	)

17 
	#ORBIT_ALIGNOF_CORBA_OCTET
 1

	)

18 
	#ORBIT_ALIGNOF_CORBA_BOOLEAN
 1

	)

19 
	#ORBIT_ALIGNOF_CORBA_CHAR
 1

	)

20 
	#ORBIT_ALIGNOF_CORBA_WCHAR
 2

	)

21 
	#ORBIT_ALIGNOF_CORBA_SHORT
 2

	)

22 
	#ORBIT_ALIGNOF_CORBA_LONG
 4

	)

23 
	#ORBIT_ALIGNOF_CORBA_LONG_LONG
 4

	)

24 
	#ORBIT_ALIGNOF_CORBA_FLOAT
 4

	)

25 
	#ORBIT_ALIGNOF_CORBA_DOUBLE
 4

	)

26 
	#ORBIT_ALIGNOF_CORBA_LONG_DOUBLE
 4

	)

27 
	#ORBIT_ALIGNOF_CORBA_STRUCT
 1

	)

28 
	#ORBIT_ALIGNOF_CORBA_POINTER
 4

	)

	@/usr/include/orbit-2.0/orbit/poa/poa-basics.h

1 #i‚de‡
_POA_BASICS_H_


2 
	#_POA_BASICS_H_
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #i‡!
deföed
(
_P‹èbÀSîvî_Sîv™t_deföed
)

9 
	#_P‹èbÀSîvî_Sîv™t_deföed
 1

	)

10 
gpoöãr
 
	tP‹èbÀSîvî_Sîv™t
;

15 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_POA
Ë&& !deföed(
_P‹èbÀSîvî_POA_deföed
)

16 
	#ORBIT_DECL_P‹èbÀSîvî_POA
 1

	)

17 
	#_P‹èbÀSîvî_POA_deföed
 1

	)

18 
P‹èbÀSîvî_POA_ty≥
 *
	tP‹èbÀSîvî_POA
;

22 *
	m_¥iv©e
;

23 (*
	mföÆize
Ë(
	mP‹èbÀSîvî_Sîv™t
,

24 
	mCORBA_Envú⁄mít
 *);

25 
P‹èbÀSîvî_POA
 (*
deÁu…_POA
Ë(
	mP‹èbÀSîvî_Sîv™t
,

26 
	mCORBA_Envú⁄mít
 *);

27 (*
	madd_ªf
Ë(
	mP‹èbÀSîvî_Sîv™t
,

28 
	mCORBA_Envú⁄mít
 *);

29 (*
	mªmove_ªf
Ë(
	mP‹èbÀSîvî_Sîv™t
,

30 
	mCORBA_Envú⁄mít
 *);

31 
CORBA_I¡îÁ˚Def
 (*
gë_öãrÁ˚
Ë(
	mP‹èbÀSîvî_Sîv™t
,

32 
	mCORBA_Envú⁄mít
 *);

33 
CORBA_boﬁón
 (*
is_a
Ë(
	mP‹èbÀSîvî_Sîv™t
,

35 
	mCORBA_Envú⁄mít
 *);

36 
CORBA_boﬁón
 (*
n⁄_exi°ít
Ë(
	mP‹èbÀSîvî_Sîv™t
,

37 
	mCORBA_Envú⁄mít
 *);

38 } 
	tP‹èbÀSîvî_Sîv™tBa£__ïv
;

40 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	tP‹èbÀSîvî_Sîv™tBa£__vïv
;

43 *
	m_¥iv©e
;

44 
P‹èbÀSîvî_Sîv™tBa£__vïv
 *
	mvïv
;

45 } 
	tP‹èbÀSîvî_Sîv™tBa£
;

47 
P‹èbÀSîvî_Sîv™tBa£__ïv
 
	tP‹èbÀSîvî_RefCou¡Sîv™tBa£__ïv
;

48 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	tP‹èbÀSîvî_RefCou¡Sîv™tBa£__vïv
;

49 
P‹èbÀSîvî_Sîv™tBa£
 
	tP‹èbÀSîvî_RefCou¡Sîv™tBa£
;

51 #i‡
deföed
(
ORBIT2_INTERNAL_API
Ë|| deföed (
ORBIT2_STUBS_API
)

53 
ORBô_POAObje˘_ty≥
 *
	tORBô_POAObje˘
;

54 
ORBô_OAObje˘_ty≥
 *
	tORBô_OAObje˘
;

56 
gsh‹t
 
	tORBô_VïvIdx
;

58 (*
	tORBôSmÆlSkñë⁄
Ë(
	tP‹èbÀSîvî_Sîv™tBa£
 *
	t£rv™t
,

59 
	tgpoöãr
 
	tªt
,

60 
	tgpoöãr
 *
	t¨gs
,

61 
	tgpoöãr
 
	t˘x
,

62 
	tCORBA_Envú⁄mít
 *
	tev
,

63 
	tgpoöãr
 
	tim∂emíèti⁄
);

65 
	$ORBôSmÆlSkñë⁄
 (*
	tORBô_im∂_födî
)

66 (
	tP‹èbÀSîvî_Sîv™tBa£
 *
	t£rv™t
,

67 c⁄° *
	tmëhod
,

68 
	tgpoöãr
 *
	tm_d©a
,

69 
	tgpoöãr
 *
	tim∂emíèti⁄
);

71 
ORBô_im∂_födî
 
	tORBô_smÆl_im∂_födî
;

75 
G_END_DECLS


	@/usr/include/orbit-2.0/orbit/poa/poa.h

1 #i‚de‡
POA_H


2 
	#POA_H
 1

	)

4 
	~<‹bô/pﬂ/pﬂ-defs.h
>

5 
	~<‹bô/pﬂ/pﬂ-ty≥s.h
>

7 
G_BEGIN_DECLS


10 *
	m_¥iv©e
;

11 } 
	tPOA_P‹èbÀSîvî_Sîv™tM™agî__ïv
;

14 *
	m_¥iv©e
;

16 
P‹èbÀSîvî_Sîv™t
(*
öˇ∫©e
Ë(P‹èbÀSîvî_Sîv™à
	m_£rv™t
,

17 c⁄° 
P‹èbÀSîvî_Obje˘Id
 *

18 
	moid
,

19 c⁄° 
P‹èbÀSîvî_POA
 
	mad≠ãr
,

20 
CORBA_Envú⁄mít
 * 
	mev
);

21 (*
	mëhîólize
Ë(
P‹èbÀSîvî_Sîv™t
 
	m_£rv™t
,

22 c⁄° 
P‹èbÀSîvî_Obje˘Id
 * 
	moid
,

23 c⁄° 
P‹èbÀSîvî_POA
 
	mad≠ãr
,

24 c⁄° 
P‹èbÀSîvî_Sîv™t
 
	m£rv
,

25 c⁄° 
CORBA_boﬁón
 
	m˛ónup_ö_¥ogªss
,

26 c⁄° 
CORBA_boﬁón
 
	mªmaöög_a˘iv©i⁄s
,

27 
CORBA_Envú⁄mít
 * 
	mev
);

28 } 
	tPOA_P‹èbÀSîvî_Sîv™tA˘iv©‹__ïv
;

30 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	m_ba£_ïv
;

31 
POA_P‹èbÀSîvî_Sîv™tM™agî__ïv


32 *
	mP‹èbÀSîvî_Sîv™tM™agî_ïv
;

33 
POA_P‹èbÀSîvî_Sîv™tA˘iv©‹__ïv


34 *
	mP‹èbÀSîvî_Sîv™tA˘iv©‹_ïv
;

35 } 
	tPOA_P‹èbÀSîvî_Sîv™tA˘iv©‹__vïv
;

38 *
	m_¥iv©e
;

39 
POA_P‹èbÀSîvî_Sîv™tA˘iv©‹__vïv
 *
	mvïv
;

40 } 
	tPOA_P‹èbÀSîvî_Sîv™tA˘iv©‹
;

43 *
	m_¥iv©e
;

45 
P‹èbÀSîvî_Sîv™t
(*
¥eövoke
Ë(P‹èbÀSîvî_Sîv™à
	m_£rv™t
,

46 c⁄° 
P‹èbÀSîvî_Obje˘Id
 *

47 
	moid
,

48 c⁄° 
P‹èbÀSîvî_POA
 
	mad≠ãr
,

49 c⁄° 
CORBA_Idítifõr
 
	m›î©i⁄
,

50 
P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ


51 * 
	mthe_cookõ
,

52 
CORBA_Envú⁄mít
 * 
	mev
);

53 (*
	mpo°övoke
Ë(
P‹èbÀSîvî_Sîv™t
 
	m_£rv™t
,

54 c⁄° 
P‹èbÀSîvî_Obje˘Id
 * 
	moid
,

55 c⁄° 
P‹èbÀSîvî_POA
 
	mad≠ãr
,

56 c⁄° 
CORBA_Idítifõr
 
	m›î©i⁄
,

57 c⁄° 
P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ


58 
	mthe_cookõ
,

59 c⁄° 
P‹èbÀSîvî_Sîv™t
 
	mthe_£rv™t
,

60 
CORBA_Envú⁄mít
 * 
	mev
);

61 } 
	tPOA_P‹èbÀSîvî_Sîv™tLoˇt‹__ïv
;

63 
P‹èbÀSîvî_Sîv™tBa£__ïv
 *
	m_ba£_ïv
;

64 
POA_P‹èbÀSîvî_Sîv™tM™agî__ïv


65 *
	mP‹èbÀSîvî_Sîv™tM™agî_ïv
;

66 
POA_P‹èbÀSîvî_Sîv™tLoˇt‹__ïv


67 *
	mP‹èbÀSîvî_Sîv™tLoˇt‹_ïv
;

68 } 
	tPOA_P‹èbÀSîvî_Sîv™tLoˇt‹__vïv
;

70 *
	m_¥iv©e
;

71 
POA_P‹èbÀSîvî_Sîv™tLoˇt‹__vïv
 *
	mvïv
;

72 } 
	tPOA_P‹èbÀSîvî_Sîv™tLoˇt‹
;

74 
	~<‹bô/pﬂ/p‹èbÀ£rvî-pﬂ-ty≥.h
>

75 
	~<‹bô/pﬂ/p‹èbÀ£rvî-cuºít-ty≥.h
>

77 
P‹èbÀSîvî_Sîv™tBa£__öô
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

78 
CORBA_Envú⁄mít
 *
ev
);

79 
P‹èbÀSîvî_Sîv™tBa£__föi
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

80 
CORBA_Envú⁄mít
 *
ev
);

82 
P‹èbÀSîvî_RefCou¡Sîv™tBa£__öô
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

83 
CORBA_Envú⁄mít
 *
ev
);

84 
P‹èbÀSîvî_RefCou¡Sîv™tBa£__föi
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

85 
CORBA_Envú⁄mít
 *
ev
);

87 
P‹èbÀSîvî_Sîv™tBa£__add_ªf
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

88 
CORBA_Envú⁄mít
 *
ev
);

89 
P‹èbÀSîvî_Sîv™tBa£__ªmove_ªf
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

90 
CORBA_Envú⁄mít
 *
ev
);

92 
P‹èbÀSîvî_RefCou¡Sîv™tBa£__add_ªf
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

93 
CORBA_Envú⁄mít
 *
ev
);

94 
P‹èbÀSîvî_RefCou¡Sîv™tBa£__ªmove_ªf
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

95 
CORBA_Envú⁄mít
 *
ev
);

97 
P‹èbÀSîvî_POA


98 
P‹èbÀSîvî_Sîv™tBa£__deÁu…_POA
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

99 
CORBA_Envú⁄mít
 *
ev
);

100 
CORBA_I¡îÁ˚Def


101 
P‹èbÀSîvî_Sîv™tBa£__gë_öãrÁ˚
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

102 
CORBA_Envú⁄mít
 *
ev
);

103 
CORBA_boﬁón


104 
P‹èbÀSîvî_Sîv™tBa£__is_a
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

105 c⁄° 
CORBA_ch¨
 *
logiˇl_ty≥_id
,

106 
CORBA_Envú⁄mít
 *
ev
);

108 
	#P‹èbÀSîvî_RefCou¡_Sîv™tBa£__deÁu…_POA
 \

109 
P‹èbÀSîvî_Sîv™tBa£__deÁu…_POA


	)

110 
	#P‹èbÀSîvî_RefCou¡_Sîv™tBa£__gë_öãrÁ˚
 \

111 
P‹èbÀSîvî_Sîv™tBa£__gë_öãrÁ˚


	)

112 
	#P‹èbÀSîvî_RefCou¡_Sîv™tBa£__is_a
 \

113 
P‹èbÀSîvî_Sîv™tBa£__is_a


	)

115 
P‹èbÀSîvî_Obje˘Id
 *
P‹èbÀSîvî_°rög_to_Obje˘Id
(
CORBA_ch¨
 *
°r
,

116 
CORBA_Envú⁄mít
 *
nv
);

118 
P‹èbÀSîvî_Obje˘Id
 *
P‹èbÀSîvî_w°rög_to_Obje˘Id
(
CORBA_wch¨
 *
°r
,

119 
CORBA_Envú⁄mít
 *
ev
);

121 
CORBA_ch¨
 *
P‹èbÀSîvî_Obje˘Id_to_°rög
(
P‹èbÀSîvî_Obje˘Id
 *
oid
,

122 
CORBA_Envú⁄mít
 *
ev
);

124 
CORBA_wch¨
 *
P‹èbÀSîvî_Obje˘Id_to_w°rög
(
P‹èbÀSîvî_Obje˘Id
 *
oid
,

125 
CORBA_Envú⁄mít
 *
ev
);

128 
P‹èbÀSîvî_POA
 
ORBô_POA_√w_‰om
 (
CORBA_ORB
 
‹b
,

129 
P‹èbÀSîvî_POA
 
∑ª¡
,

130 c⁄° 
CORBA_ch¨
 *
ad≠t‹_«me
,

131 c⁄° 
CORBA_PﬁicyLi°
 *
›t_pﬁicõs
,

132 
CORBA_Envú⁄mít
 *
ev
);

134 #i‡
deföed
(
ORBIT2_INTERNAL_API
Ë|| deföed (
ORBIT2_STUBS_API
)

136 
ORBô_skñ_˛ass_ªgi°î
 (
P‹èbÀSîvî_CœssInfo
 *
ci
,

137 
P‹èbÀSîvî_Sîv™tBa£
 *
£rv™t
,

138 (*
›t_föÆize
Ë(
P‹èbÀSîvî_Sîv™t
,

139 
CORBA_Envú⁄mít
 *),

140 
CORBA_unsig√d_l⁄g
 
˛ass_off£t
,

141 
CORBA_unsig√d_l⁄g
 
fú°_∑ª¡_id
,

145 
	`ORBô_˛assöfo_ªgi°î
 (
P‹èbÀSîvî_CœssInfo
 *
ci
);

146 
	#ORBIT_SERVANT_SET_CLASSINFO
(
£rv™t
,
ci
Ë
G_STMT_START
 { \

147 ((
P‹èbÀSîvî_Sîv™tBa£
 *)(
£rv™t
))->
vïv
[0]->
_¥iv©e
 = (
ci
); \

148 
	}
} 
G_STMT_END


	)

152 #ifde‡
ORBIT2_INTERNAL_API


154 
P‹èbÀSîvî_CœssInfo
 *
ORBô_˛assöfo_lookup
 (c⁄° *
ty≥_id
);

155 
ORBô_POAObje˘_po°_övoke
 (
ORBô_POAObje˘
 
obj
);

156 
gboﬁón
 
ORBô_pﬂ_Ælow_¸oss_thªad_ˇŒ
 (
ORBô_POAObje˘
 
pobj
,

157 
ORBô_IMëhodFœg
 
mëhod_Êags
);

158 
ORBô_ªcv_buf„r_ªtu∫_sys_ex˚±i⁄
 (
GIOPRecvBuf„r
 *
buf
,

159 
CORBA_Envú⁄mít
 *
ev
);

160 
ORBô_pﬂ_öô
 ();

164 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/util/orbit-util.h

1 #i‚de‡
ORBIT_UTIL_H


2 
	#ORBIT_UTIL_H
 1

	)

4 
	~<glib.h
>

5 
	~<‹bô/‹bô-c⁄fig.h
>

6 
	~<‹bô/utû/basic_ty≥s.h
>

7 
	~<‹bô/utû/‹bô-gíønd.h
>

9 
	gG_BEGIN_DECLS


20 
	#ALIGN_VALUE
(
this
, 
bound¨y
) \

21 (–((
gul⁄g
)(
this
)Ë+ (((gul⁄g)(
bound¨y
)Ë-1)Ë& (~(((gul⁄g)(bound¨y))-1)))

	)

23 
	#ALIGN_ADDRESS
(
this
, 
bound¨y
) \

24 ((
gpoöãr
)
	`ALIGN_VALUE
(
this
, 
bound¨y
))

	)

26 #ifde‡
ORBIT2_INTERNAL_API


28 
gul⁄g
 
ORBô_wch¨_°æí
(
CORBA_wch¨
 *
w°r
);

30 
	#num2hexdigô
(
n
Ë((“)>9)?(“)+'a'-10):(“)+'0'))

	)

34 
	gG_END_DECLS


	@/usr/include/pango-1.0/pango/pango.h

22 #i‚de‡
__PANGO_H__


23 
	#__PANGO_H__


	)

25 
	~<∑ngo/∑ngo-©åibuãs.h
>

26 
	~<∑ngo/∑ngo-bidi-ty≥.h
>

27 
	~<∑ngo/∑ngo-bªak.h
>

28 
	~<∑ngo/∑ngo-c⁄ãxt.h
>

29 
	~<∑ngo/∑ngo-covîage.h
>

30 
	~<∑ngo/∑ngo-ígöe.h
>

31 
	~<∑ngo/∑ngo-íum-ty≥s.h
>

32 
	~<∑ngo/∑ngo-„©uªs.h
>

33 
	~<∑ngo/∑ngo-f⁄t.h
>

34 
	~<∑ngo/∑ngo-f⁄tm≠.h
>

35 
	~<∑ngo/∑ngo-f⁄t£t.h
>

36 
	~<∑ngo/∑ngo-glyph.h
>

37 
	~<∑ngo/∑ngo-glyph-ôem.h
>

38 
	~<∑ngo/∑ngo-gøvôy.h
>

39 
	~<∑ngo/∑ngo-ôem.h
>

40 
	~<∑ngo/∑ngo-œyout.h
>

41 
	~<∑ngo/∑ngo-m©rix.h
>

42 
	~<∑ngo/∑ngo-ªndîî.h
>

43 
	~<∑ngo/∑ngo-s¸ùt.h
>

44 
	~<∑ngo/∑ngo-èbs.h
>

45 
	~<∑ngo/∑ngo-ty≥s.h
>

46 
	~<∑ngo/∑ngo-utûs.h
>

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


76 
	#__mb°©e_t_deföed
 1

	)

80 
	m__cou¡
;

83 #ifde‡
__WINT_TYPE__


84 
__WINT_TYPE__
 
	m__wch
;

86 
wöt_t
 
	m__wch
;

88 
	m__wchb
[4];

89 } 
	m__vÆue
;

90 } 
	t__mb°©e_t
;

92 #unde‡
__√ed_mb°©e_t


97 #ifde‡
_WCHAR_H


99 
__BEGIN_NAMESPACE_C99


101 
__mb°©e_t
 
	tmb°©e_t
;

102 
	g__END_NAMESPACE_C99


103 #ifde‡
__USE_GNU


104 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

107 #i‚de‡
WCHAR_MIN


109 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

110 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

113 #i‚de‡
WEOF


114 
	#WEOF
 (0xffffffffu)

	)

119 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


120 
	~<w˘y≥.h
>

124 
__BEGIN_DECLS


126 
__BEGIN_NAMESPACE_STD


129 
tm
;

130 
__END_NAMESPACE_STD


134 
	$__USING_NAMESPACE_STD
(
tm
)

137 
__BEGIN_NAMESPACE_STD


139 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

142 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

143 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

144 
__THROW
;

147 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

156 
__THROW
 
__©åibuã_puª__
;

158 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

159 
__THROW
 
__©åibuã_puª__
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_GNU


164 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

167 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
size_t
 
__n
Ë
__THROW
;

172 
	~<xloˇÀ.h
>

174 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

175 
__loˇÀ_t
 
__loc
Ë
__THROW
;

177 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

181 
__BEGIN_NAMESPACE_STD


184 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

188 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

189 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_GNU


198 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

199 
__loˇÀ_t
 
__loc
Ë
__THROW
;

204 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

205 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

208 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

211 
__BEGIN_NAMESPACE_STD


213 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

214 
__THROW
 
__©åibuã_puª__
;

216 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

217 
__THROW
 
__©åibuã_puª__
;

218 
__END_NAMESPACE_STD


220 #ifde‡
__USE_GNU


223 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

224 
__THROW
 
__©åibuã_puª__
;

227 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

231 
__THROW
 
__©åibuã_puª__
;

234 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

235 
__THROW
 
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

238 
__THROW
 
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

241 
__THROW
 
__©åibuã_puª__
;

244 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

245 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

246 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

249 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

250 
__END_NAMESPACE_STD


252 #ifde‡
__USE_XOPEN


254 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

255 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__USE_GNU


260 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

261 
__THROW
 
__©åibuã_puª__
;

265 
__BEGIN_NAMESPACE_STD


267 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

268 
__THROW
 
__©åibuã_puª__
;

271 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

272 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

273 
__THROW
 
__©åibuã_puª__
;

276 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

281 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

282 
__THROW
;

285 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

286 
__END_NAMESPACE_STD


288 #ifde‡
__USE_GNU


291 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

292 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

293 
__THROW
;

297 
__BEGIN_NAMESPACE_STD


300 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

304 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

308 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

312 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

313 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

314 
mb°©e_t
 *
__p
Ë
__THROW
;

317 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

321 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

322 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

323 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_EXTERN_INLINES


333 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

334 
__exã∫_ölöe
 
wöt_t


335 
	`__NTH
 (
	$btowc
 (
__c
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

337 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

339 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

340 
__exã∫_ölöe
 

341 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

342 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

343 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

345 
__exã∫_ölöe
 
size_t


346 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

347 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

348 {  (
__ps
 !
NULL


349 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

352 
__BEGIN_NAMESPACE_STD


355 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

356 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

362 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

363 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

364 
__END_NAMESPACE_STD


367 #ifdef 
__USE_GNU


370 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

371 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

372 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

377 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

378 
size_t
 
__nwc
, size_à
__Àn
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

384 #ifde‡
__USE_XOPEN


386 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

390 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

394 
__BEGIN_NAMESPACE_STD


397 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

398 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

399 
__END_NAMESPACE_STD


401 #ifde‡
__USE_ISOC99


402 
__BEGIN_NAMESPACE_C99


404 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

406 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

408 
__END_NAMESPACE_C99


412 
__BEGIN_NAMESPACE_STD


415 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

416 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

420 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

423 
__END_NAMESPACE_STD


425 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

426 
__BEGIN_NAMESPACE_C99


429 
__exãnsi⁄__


430 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

431 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

432 
__THROW
;

436 
__exãnsi⁄__


437 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__ba£
Ë
__THROW
;

440 
__END_NAMESPACE_C99


443 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


446 
__exãnsi⁄__


447 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

449 
__THROW
;

453 
__exãnsi⁄__


454 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

456 
__ba£
Ë
__THROW
;

459 #ifde‡
__USE_GNU


473 
	~<xloˇÀ.h
>

477 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

479 
__loˇÀ_t
 
__loc
Ë
__THROW
;

481 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

485 
__exãnsi⁄__


486 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

488 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
, 
__loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

502 
__THROW
;

504 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__loˇÀ_t
 
__loc
Ë
__THROW
;

510 #ifdef 
__USE_GNU


513 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

517 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

518 
__THROW
;

524 #ifdef 
__USE_GNU


527 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

530 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


531 
__BEGIN_NAMESPACE_STD


534 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

541 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

542 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

548 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

551 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

552 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

553 
__THROW
 ;

559 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

560 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
)

567 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

568 
__gnuc_va_li°
 
__¨g
)

572 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

573 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

574 
__gnuc_va_li°
 
__¨g
)

575 
__THROW
 ;

582 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

583 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

589 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

594 
__THROW
 ;

596 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

597 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

598 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

599 #ifde‡
__REDIRECT


603 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

605 
__isoc99_fwsˇnf
)

607 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

608 
__isoc99_wsˇnf
)

610 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

612 
__isoc99_swsˇnf
)

613 
__THROW
 ;

615 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

616 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

617 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

618 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
;

621 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

622 
	#wsˇnf
 
__isoc99_wsˇnf


	)

623 
	#swsˇnf
 
__isoc99_swsˇnf


	)

627 
__END_NAMESPACE_STD


630 #ifde‡
__USE_ISOC99


631 
__BEGIN_NAMESPACE_C99


636 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

637 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

638 
__gnuc_va_li°
 
__¨g
)

644 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

645 
__gnuc_va_li°
 
__¨g
)

648 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

650 
__gnuc_va_li°
 
__¨g
)

651 
__THROW
 ;

653 #i‡!
deföed
 
__USE_GNU
 \

654 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

655 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

656 #ifde‡
__REDIRECT


657 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

661 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

664 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

665 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

667 
__THROW
 ;

669 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
);

672 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

673 
__gnuc_va_li°
 
__¨g
);

674 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

676 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

677 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

678 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

679 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

683 
__END_NAMESPACE_C99


687 
__BEGIN_NAMESPACE_STD


692 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

693 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

699 
wöt_t
 
	`gëwch¨
 ();

706 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

707 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

721 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

722 
__FILE
 *
__ª°ri˘
 
__°ªam
);

728 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

736 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

737 
__END_NAMESPACE_STD


740 #ifde‡
__USE_GNU


748 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

757 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

774 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

775 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

784 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

793 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

794 
__FILE
 *
__ª°ri˘
 
__°ªam
);

798 
__BEGIN_NAMESPACE_C99


802 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

803 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

805 
__END_NAMESPACE_C99


807 #ifde‡
__USE_GNU


808 
	~<xloˇÀ.h
>

812 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

813 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

814 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

815 
__loˇÀ_t
 
__loc
Ë
__THROW
;

824 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


825 
	#__√ed_iswxxx


	)

826 
	~<w˘y≥.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


831 
	~<bôs/wch¨2.h
>

834 #ifde‡
__LDBL_COMPAT


835 
	~<bôs/wch¨-ldbl.h
>

838 
__END_DECLS


844 #unde‡
__√ed_mb°©e_t


845 #unde‡
__√ed_wöt_t


	@/usr/lib/glib-2.0/include/glibconfig.h

6 #i‚de‡
__G_LIBCONFIG_H__


7 
	#__G_LIBCONFIG_H__


	)

9 
	~<glib/gma¸os.h
>

11 
	~<limôs.h
>

12 
	~<Êﬂt.h
>

13 
	#GLIB_HAVE_ALLOCA_H


	)

14 
	#GLIB_HAVE_SYS_POLL_H


	)

20 
	#GLIB_USING_SYSTEM_PRINTF


	)

22 
	gG_BEGIN_DECLS


24 
	#G_MINFLOAT
 
FLT_MIN


	)

25 
	#G_MAXFLOAT
 
FLT_MAX


	)

26 
	#G_MINDOUBLE
 
DBL_MIN


	)

27 
	#G_MAXDOUBLE
 
DBL_MAX


	)

28 
	#G_MINSHORT
 
SHRT_MIN


	)

29 
	#G_MAXSHORT
 
SHRT_MAX


	)

30 
	#G_MAXUSHORT
 
USHRT_MAX


	)

31 
	#G_MININT
 
INT_MIN


	)

32 
	#G_MAXINT
 
INT_MAX


	)

33 
	#G_MAXUINT
 
UINT_MAX


	)

34 
	#G_MINLONG
 
LONG_MIN


	)

35 
	#G_MAXLONG
 
LONG_MAX


	)

36 
	#G_MAXULONG
 
ULONG_MAX


	)

38 sig√d 
	tgöt8
;

39 
	tguöt8
;

40 sig√d 
	tgöt16
;

41 
	tguöt16
;

42 
	#G_GINT16_MODIFIER
 "h"

	)

43 
	#G_GINT16_FORMAT
 "hi"

	)

44 
	#G_GUINT16_FORMAT
 "hu"

	)

45 sig√d 
	tgöt32
;

46 
	tguöt32
;

47 
	#G_GINT32_MODIFIER
 ""

	)

48 
	#G_GINT32_FORMAT
 "i"

	)

49 
	#G_GUINT32_FORMAT
 "u"

	)

50 
	#G_HAVE_GINT64
 1

	)

52 
G_GNUC_EXTENSION
 sig√d 
	tgöt64
;

53 
G_GNUC_EXTENSION
 
	tguöt64
;

55 
	#G_GINT64_CONSTANT
(
vÆ
Ë(
	`G_GNUC_EXTENSION
 (vÆ##
LL
))

	)

56 
	#G_GUINT64_CONSTANT
(
vÆ
Ë(
	`G_GNUC_EXTENSION
 (vÆ##
ULL
))

	)

57 
	#G_GINT64_MODIFIER
 "Œ"

	)

58 
	#G_GINT64_FORMAT
 "Œi"

	)

59 
	#G_GUINT64_FORMAT
 "Œu"

	)

61 
	#GLIB_SIZEOF_VOID_P
 4

	)

62 
	#GLIB_SIZEOF_LONG
 4

	)

63 
	#GLIB_SIZEOF_SIZE_T
 4

	)

65 sig√d 
	tgssize
;

66 
	tgsize
;

67 
	#G_GSIZE_MODIFIER
 ""

	)

68 
	#G_GSSIZE_FORMAT
 "i"

	)

69 
	#G_GSIZE_FORMAT
 "u"

	)

71 
	#G_MAXSIZE
 
G_MAXUINT


	)

72 
	#G_MINSSIZE
 
G_MININT


	)

73 
	#G_MAXSSIZE
 
G_MAXINT


	)

75 
göt64
 
	tgoff£t
;

76 
	#G_MINOFFSET
 
G_MININT64


	)

77 
	#G_MAXOFFSET
 
G_MAXINT64


	)

79 
	#G_GOFFSET_MODIFIER
 
G_GINT64_MODIFIER


	)

80 
	#G_GOFFSET_FORMAT
 
G_GINT64_FORMAT


	)

81 
	#G_GOFFSET_CONSTANT
(
vÆ
Ë
	`G_GINT64_CONSTANT
(vÆ)

	)

84 
	#GPOINTER_TO_INT
(
p
Ë((
göt
Ë’))

	)

85 
	#GPOINTER_TO_UINT
(
p
Ë((
guöt
Ë’))

	)

87 
	#GINT_TO_POINTER
(
i
Ë((
gpoöãr
Ë(i))

	)

88 
	#GUINT_TO_POINTER
(
u
Ë((
gpoöãr
Ë(u))

	)

90 sig√d 
	tgöçå
;

91 
	tguöçå
;

93 #ifde‡
NeXT


94 
	#g_ATEXIT
(
¥oc
Ë(!
	`©exô
 (¥oc))

	)

96 
	#g_ATEXIT
(
¥oc
Ë(
	`©exô
 (¥oc))

	)

99 
	#g_memmove
(
de°
,
§c
,
Àn
Ë
G_STMT_START
 { 
	`memmove
 ((de°), (§c), (Àn)); } 
G_STMT_END


	)

101 
	#GLIB_MAJOR_VERSION
 2

	)

102 
	#GLIB_MINOR_VERSION
 20

	)

103 
	#GLIB_MICRO_VERSION
 1

	)

105 
	#G_OS_UNIX


	)

108 
	#G_VA_COPY
 
va_c›y


	)

110 #ifdef 
__˝lu•lus


111 
	#G_HAVE_INLINE
 1

	)

113 
	#G_HAVE_INLINE
 1

	)

114 
	#G_HAVE___INLINE
 1

	)

115 
	#G_HAVE___INLINE__
 1

	)

118 #ifdef 
__˝lu•lus


119 
	#G_CAN_INLINE
 1

	)

121 
	#G_CAN_INLINE
 1

	)

124 #i‚de‡
__˝lu•lus


125 
	#G_HAVE_ISO_VARARGS
 1

	)

127 #ifde‡
__˝lu•lus


128 
	#G_HAVE_ISO_VARARGS
 1

	)

135 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 == 95

136 #unde‡
G_HAVE_ISO_VARARGS


139 
	#G_HAVE_GNUC_VARARGS
 1

	)

140 
	#G_HAVE_GROWING_STACK
 0

	)

142 
	#G_HAVE_GNUC_VISIBILITY
 1

	)

143 #i‡
deföed
(
__SUNPRO_C
) && (__SUNPRO_C >= 0x590)

144 
	#G_GNUC_INTERNAL
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

145 #ñi‡
deföed
(
__SUNPRO_C
) && (__SUNPRO_C >= 0x550)

146 
	#G_GNUC_INTERNAL
 
__hiddí


	)

147 #ñi‡
deföed
 (
__GNUC__
Ë&& deföed (
G_HAVE_GNUC_VISIBILITY
)

148 
	#G_GNUC_INTERNAL
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

150 
	#G_GNUC_INTERNAL


	)

153 
	#G_THREADS_ENABLED


	)

154 
	#G_THREADS_IMPL_POSIX


	)

155 
_GSèticMuãx
 
	tGSèticMuãx
;

156 
	s_GSèticMuãx


158 
_GMuãx
 *
	mru¡ime_muãx
;

160 
	m∑d
[24];

161 
	mdummy_doubÀ
;

162 *
	mdummy_poöãr
;

163 
	mdummy_l⁄g
;

164 } 
	m°©ic_muãx
;

166 
	#G_STATIC_MUTEX_INIT
 { 
NULL
, { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} } }

	)

167 
	#g_°©ic_muãx_gë_muãx
(
muãx
) \

168 (
g_thªad_u£_deÁu…_im∂
 ? ((
GMuãx
*)(
gpoöãr
Ë((
muãx
)->
°©ic_muãx
.
∑d
)) : \

169 
	`g_°©ic_muãx_gë_muãx_im∂_sh‹tcut
 (&((
muãx
)->
ru¡ime_muãx
)))

	)

174 
_GSy°emThªad
 
	tGSy°emThªad
;

175 
	u_GSy°emThªad


177 
	md©a
[4];

178 
	mdummy_doubÀ
;

179 *
	mdummy_poöãr
;

180 
	mdummy_l⁄g
;

183 
	#GINT16_TO_LE
(
vÆ
Ë((
göt16
Ë(vÆ))

	)

184 
	#GUINT16_TO_LE
(
vÆ
Ë((
guöt16
Ë(vÆ))

	)

185 
	#GINT16_TO_BE
(
vÆ
Ë((
göt16
Ë
	`GUINT16_SWAP_LE_BE
 (vÆ))

	)

186 
	#GUINT16_TO_BE
(
vÆ
Ë(
	`GUINT16_SWAP_LE_BE
 (vÆ))

	)

187 
	#GINT32_TO_LE
(
vÆ
Ë((
göt32
Ë(vÆ))

	)

188 
	#GUINT32_TO_LE
(
vÆ
Ë((
guöt32
Ë(vÆ))

	)

189 
	#GINT32_TO_BE
(
vÆ
Ë((
göt32
Ë
	`GUINT32_SWAP_LE_BE
 (vÆ))

	)

190 
	#GUINT32_TO_BE
(
vÆ
Ë(
	`GUINT32_SWAP_LE_BE
 (vÆ))

	)

191 
	#GINT64_TO_LE
(
vÆ
Ë((
göt64
Ë(vÆ))

	)

192 
	#GUINT64_TO_LE
(
vÆ
Ë((
guöt64
Ë(vÆ))

	)

193 
	#GINT64_TO_BE
(
vÆ
Ë((
göt64
Ë
	`GUINT64_SWAP_LE_BE
 (vÆ))

	)

194 
	#GUINT64_TO_BE
(
vÆ
Ë(
	`GUINT64_SWAP_LE_BE
 (vÆ))

	)

195 
	#GLONG_TO_LE
(
vÆ
Ë((
gl⁄g
Ë
	`GINT32_TO_LE
 (vÆ))

	)

196 
	#GULONG_TO_LE
(
vÆ
Ë((
gul⁄g
Ë
	`GUINT32_TO_LE
 (vÆ))

	)

197 
	#GLONG_TO_BE
(
vÆ
Ë((
gl⁄g
Ë
	`GINT32_TO_BE
 (vÆ))

	)

198 
	#GULONG_TO_BE
(
vÆ
Ë((
gul⁄g
Ë
	`GUINT32_TO_BE
 (vÆ))

	)

199 
	#GINT_TO_LE
(
vÆ
Ë((
göt
Ë
	`GINT32_TO_LE
 (vÆ))

	)

200 
	#GUINT_TO_LE
(
vÆ
Ë((
guöt
Ë
	`GUINT32_TO_LE
 (vÆ))

	)

201 
	#GINT_TO_BE
(
vÆ
Ë((
göt
Ë
	`GINT32_TO_BE
 (vÆ))

	)

202 
	#GUINT_TO_BE
(
vÆ
Ë((
guöt
Ë
	`GUINT32_TO_BE
 (vÆ))

	)

203 
	#G_BYTE_ORDER
 
G_LITTLE_ENDIAN


	)

205 
	#GLIB_SYSDEF_POLLIN
 =1

	)

206 
	#GLIB_SYSDEF_POLLOUT
 =4

	)

207 
	#GLIB_SYSDEF_POLLPRI
 =2

	)

208 
	#GLIB_SYSDEF_POLLHUP
 =16

	)

209 
	#GLIB_SYSDEF_POLLERR
 =8

	)

210 
	#GLIB_SYSDEF_POLLNVAL
 =32

	)

212 
	#G_MODULE_SUFFIX
 "so"

	)

221 
	tGPid
;

223 
	gG_END_DECLS


	@/usr/lib/gtk-2.0/include/gdkconfig.h

6 #i‚de‡
GDKCONFIG_H


7 
	#GDKCONFIG_H


	)

9 #ifde‡
__˝lu•lus


13 #i‚de‡
GSEAL


15 #ifde‡
GSEAL_ENABLE


16 
	#GSEAL
(
idít
Ë
_g_£Æed__
 ## 
	)
ident

18 
	#GSEAL
(
idít
Ë
	)
ident

23 
	#GDK_WINDOWING_X11


	)

25 
	#GDK_HAVE_WCHAR_H
 1

	)

26 
	#GDK_HAVE_WCTYPE_H
 1

	)

28 #ifde‡
__˝lu•lus


	@/usr/include/atk-1.0/atk/atkaction.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_ACTION_H__


25 
	#__ATK_ACTION_H__


	)

27 
	~<©k/©kobje˘.h
>

29 
	gG_BEGIN_DECLS


40 
	#ATK_TYPE_ACTION
 (
	`©k_a˘i⁄_gë_ty≥
 ())

	)

41 
	#ATK_IS_ACTION
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_ACTION
)

	)

42 
	#ATK_ACTION
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_ACTION
, 
AtkA˘i⁄
)

	)

43 
	#ATK_ACTION_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_ACTION
, 
AtkA˘i⁄IÁ˚
))

	)

45 #i‚de‡
_TYPEDEF_ATK_ACTION_


46 
	#_TYPEDEF_ATK_ACTION_


	)

47 
_AtkA˘i⁄
 
	tAtkA˘i⁄
;

49 
_AtkA˘i⁄IÁ˚
 
	tAtkA˘i⁄IÁ˚
;

51 
	s_AtkA˘i⁄IÁ˚


53 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

55 
gboﬁón
 (*
do_a˘i⁄
Ë(
AtkA˘i⁄
 *
	ma˘i⁄
,

56 
göt
 
	mi
);

57 
göt
 (*
gë_n_a˘i⁄s
Ë(
AtkA˘i⁄
 *
	ma˘i⁄
);

58 
G_CONST_RETURN
 
	mgch¨
* (*
	mgë_des¸ùti⁄
Ë(
AtkA˘i⁄
 *
	ma˘i⁄
,

59 
göt
 
	mi
);

60 
G_CONST_RETURN
 
	mgch¨
* (*
	mgë_«me
Ë(
AtkA˘i⁄
 *
	ma˘i⁄
,

61 
göt
 
	mi
);

62 
G_CONST_RETURN
 
	mgch¨
* (*
	mgë_keybödög
Ë(
AtkA˘i⁄
 *
	ma˘i⁄
,

63 
göt
 
	mi
);

64 
gboﬁón
 (*
£t_des¸ùti⁄
Ë(
AtkA˘i⁄
 *
	ma˘i⁄
,

65 
göt
 
	mi
,

66 c⁄° 
gch¨
 *
	mdesc
);

67 
G_CONST_RETURN
 
	mgch¨
* (*
	mgë_loˇlized_«me
)(
AtkA˘i⁄
 *
	ma˘i⁄
,

68 
göt
 
	mi
);

69 
AtkFun˘i⁄
 
	m∑d2
;

72 
GTy≥
 
©k_a˘i⁄_gë_ty≥
 ();

85 
gboﬁón
 
©k_a˘i⁄_do_a˘i⁄
 (
AtkA˘i⁄
 *
a˘i⁄
,

86 
göt
 
i
);

87 
göt
 
©k_a˘i⁄_gë_n_a˘i⁄s
 (
AtkA˘i⁄
 *
a˘i⁄
);

88 
G_CONST_RETURN
 
gch¨
* 
©k_a˘i⁄_gë_des¸ùti⁄
 (
AtkA˘i⁄
 *
a˘i⁄
,

89 
göt
 
i
);

90 
G_CONST_RETURN
 
gch¨
* 
©k_a˘i⁄_gë_«me
 (
AtkA˘i⁄
 *
a˘i⁄
,

91 
göt
 
i
);

92 
G_CONST_RETURN
 
gch¨
* 
©k_a˘i⁄_gë_keybödög
 (
AtkA˘i⁄
 *
a˘i⁄
,

93 
göt
 
i
);

94 
gboﬁón
 
©k_a˘i⁄_£t_des¸ùti⁄
 (
AtkA˘i⁄
 *
a˘i⁄
,

95 
göt
 
i
,

96 c⁄° 
gch¨
 *
desc
);

100 
G_CONST_RETURN
 
gch¨
* 
©k_a˘i⁄_gë_loˇlized_«me
 (
AtkA˘i⁄
 *
a˘i⁄
,

101 
göt
 
i
);

109 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkcomponent.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_COMPONENT_H__


25 
	#__ATK_COMPONENT_H__


	)

27 
	~<©k/©kobje˘.h
>

28 
	~<©k/©kutû.h
>

30 
	gG_BEGIN_DECLS


39 
	#ATK_TYPE_COMPONENT
 (
	`©k_comp⁄ít_gë_ty≥
 ())

	)

40 
	#ATK_IS_COMPONENT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_COMPONENT
)

	)

41 
	#ATK_COMPONENT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_COMPONENT
, 
AtkComp⁄ít
)

	)

42 
	#ATK_COMPONENT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_COMPONENT
, 
AtkComp⁄ítIÁ˚
))

	)

44 #i‚de‡
_TYPEDEF_ATK_COMPONENT_


45 
	#_TYPEDEF_ATK_COMPONENT_


	)

46 
_AtkComp⁄ít
 
	tAtkComp⁄ít
;

48 
_AtkComp⁄ítIÁ˚
 
	tAtkComp⁄ítIÁ˚
;

50 (*
	tAtkFocusH™dÀr
Ë(
	tAtkObje˘
*, 
	tgboﬁón
);

52 
_AtkRe˘™gÀ
 
	tAtkRe˘™gÀ
;

54 
	s_AtkRe˘™gÀ


56 
göt
 
x
;

57 
göt
 
y
;

58 
göt
 
width
;

59 
göt
 
height
;

62 
GTy≥
 
	`©k_ª˘™gÀ_gë_ty≥
 ();

64 
	#ATK_TYPE_RECTANGLE
 (
	`©k_ª˘™gÀ_gë_ty≥
 ())

	)

65 
	s_AtkComp⁄ítIÁ˚


67 
GTy≥I¡îÁ˚
 
∑ª¡
;

69 
	`guöt
 (* 
add_focus_h™dÀr
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

70 
AtkFocusH™dÀr
 
h™dÀr
);

72 
	`gboﬁón
 (* 
c⁄èös
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

73 
göt
 
x
,

74 
göt
 
y
,

75 
AtkCo‹dTy≥
 
co‹d_ty≥
);

77 
AtkObje˘
* (* 
ªf_ac˚ssibÀ_©_poöt
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

78 
göt
 
x
,

79 
göt
 
y
,

80 
AtkCo‹dTy≥
 
co‹d_ty≥
);

81 (* 
gë_exã¡s
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

82 
göt
 *
x
,

83 
göt
 *
y
,

84 
göt
 *
width
,

85 
göt
 *
height
,

86 
AtkCo‹dTy≥
 
co‹d_ty≥
);

87 (* 
gë_posôi⁄
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

88 
göt
 *
x
,

89 
göt
 *
y
,

90 
AtkCo‹dTy≥
 
co‹d_ty≥
);

91 (* 
gë_size
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

92 
göt
 *
width
,

93 
göt
 *
height
);

94 
	`gboﬁón
 (* 
gøb_focus
Ë(
AtkComp⁄ít
 *
comp⁄ít
);

95 (* 
ªmove_focus_h™dÀr
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

96 
guöt
 
h™dÀr_id
);

97 
	`gboﬁón
 (* 
£t_exã¡s
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

98 
göt
 
x
,

99 
göt
 
y
,

100 
göt
 
width
,

101 
göt
 
height
,

102 
AtkCo‹dTy≥
 
co‹d_ty≥
);

103 
	`gboﬁón
 (* 
£t_posôi⁄
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

104 
göt
 
x
,

105 
göt
 
y
,

106 
AtkCo‹dTy≥
 
co‹d_ty≥
);

107 
	`gboﬁón
 (* 
£t_size
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

108 
göt
 
width
,

109 
göt
 
height
);

111 
	`AtkLayî
 (* 
gë_œyî
Ë(
AtkComp⁄ít
 *
comp⁄ít
);

112 
	`göt
 (* 
gë_mdi_z‹dî
Ë(
AtkComp⁄ít
 *
comp⁄ít
);

117 (* 
bounds_ch™ged
Ë(
AtkComp⁄ít
 *
comp⁄ít
,

118 
AtkRe˘™gÀ
 *
bounds
);

119 
	`gdoubÀ
 (* 
gë_Æpha
Ë(
AtkComp⁄ít
 *
comp⁄ít
);

122 
GTy≥
 
	`©k_comp⁄ít_gë_ty≥
 ();

126 
guöt
 
	`©k_comp⁄ít_add_focus_h™dÀr
 (
AtkComp⁄ít
 *
comp⁄ít
,

127 
AtkFocusH™dÀr
 
h™dÀr
);

128 
gboﬁón
 
	`©k_comp⁄ít_c⁄èös
 (
AtkComp⁄ít
 *
comp⁄ít
,

129 
göt
 
x
,

130 
göt
 
y
,

131 
AtkCo‹dTy≥
 
co‹d_ty≥
);

132 
AtkObje˘
* 
	`©k_comp⁄ít_ªf_ac˚ssibÀ_©_poöt
(
AtkComp⁄ít
 *
comp⁄ít
,

133 
göt
 
x
,

134 
göt
 
y
,

135 
AtkCo‹dTy≥
 
co‹d_ty≥
);

136 
	`©k_comp⁄ít_gë_exã¡s
 (
AtkComp⁄ít
 *
comp⁄ít
,

137 
göt
 *
x
,

138 
göt
 *
y
,

139 
göt
 *
width
,

140 
göt
 *
height
,

141 
AtkCo‹dTy≥
 
co‹d_ty≥
);

142 
	`©k_comp⁄ít_gë_posôi⁄
 (
AtkComp⁄ít
 *
comp⁄ít
,

143 
göt
 *
x
,

144 
göt
 *
y
,

145 
AtkCo‹dTy≥
 
co‹d_ty≥
);

146 
	`©k_comp⁄ít_gë_size
 (
AtkComp⁄ít
 *
comp⁄ít
,

147 
göt
 *
width
,

148 
göt
 *
height
);

149 
AtkLayî
 
	`©k_comp⁄ít_gë_œyî
 (
AtkComp⁄ít
 *
comp⁄ít
);

150 
göt
 
	`©k_comp⁄ít_gë_mdi_z‹dî
 (
AtkComp⁄ít
 *
comp⁄ít
);

151 
gboﬁón
 
	`©k_comp⁄ít_gøb_focus
 (
AtkComp⁄ít
 *
comp⁄ít
);

152 
	`©k_comp⁄ít_ªmove_focus_h™dÀr
 (
AtkComp⁄ít
 *
comp⁄ít
,

153 
guöt
 
h™dÀr_id
);

154 
gboﬁón
 
	`©k_comp⁄ít_£t_exã¡s
 (
AtkComp⁄ít
 *
comp⁄ít
,

155 
göt
 
x
,

156 
göt
 
y
,

157 
göt
 
width
,

158 
göt
 
height
,

159 
AtkCo‹dTy≥
 
co‹d_ty≥
);

160 
gboﬁón
 
	`©k_comp⁄ít_£t_posôi⁄
 (
AtkComp⁄ít
 *
comp⁄ít
,

161 
göt
 
x
,

162 
göt
 
y
,

163 
AtkCo‹dTy≥
 
co‹d_ty≥
);

164 
gboﬁón
 
	`©k_comp⁄ít_£t_size
 (
AtkComp⁄ít
 *
comp⁄ít
,

165 
göt
 
width
,

166 
göt
 
height
);

167 
gdoubÀ
 
	`©k_comp⁄ít_gë_Æpha
 (
AtkComp⁄ít
 *
comp⁄ít
);

169 
G_END_DECLS


	@/usr/include/atk-1.0/atk/atkdocument.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_DOCUMENT_H__


25 
	#__ATK_DOCUMENT_H__


	)

27 
	~<©k/©kobje˘.h
>

28 
	~<©k/©kutû.h
>

30 
	gG_BEGIN_DECLS


38 
	#ATK_TYPE_DOCUMENT
 (
	`©k_documít_gë_ty≥
 ())

	)

39 
	#ATK_IS_DOCUMENT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_DOCUMENT
)

	)

40 
	#ATK_DOCUMENT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_DOCUMENT
, 
AtkDocumít
)

	)

41 
	#ATK_DOCUMENT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_DOCUMENT
, 
AtkDocumítIÁ˚
))

	)

43 #i‚de‡
_TYPEDEF_ATK_DOCUMENT_


44 
	#_TYPEDEF_ATK_DOCUMENT_


	)

45 
_AtkDocumít
 
	tAtkDocumít
;

47 
_AtkDocumítIÁ˚
 
	tAtkDocumítIÁ˚
;

49 
	s_AtkDocumítIÁ˚


51 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

52 
G_CONST_RETURN
 
	mgch¨
* ( *
	mgë_documít_ty≥
Ë(
AtkDocumít
 *
	mdocumít
);

53 
gpoöãr
 ( *
gë_documít
Ë(
AtkDocumít
 *
	mdocumít
);

55 
G_CONST_RETURN
 
	mgch¨
* ( *
	mgë_documít_loˇÀ
Ë(
AtkDocumít
 *
	mdocumít
);

56 
	mAtkAâribuãSë
 * ( *
	mgë_documít_©åibuãs
Ë(
AtkDocumít
 *
	mdocumít
);

57 
G_CONST_RETURN
 
	mgch¨
* ( *
	mgë_documít_©åibuã_vÆue
Ë(
AtkDocumít
 *
	mdocumít
,

58 c⁄° 
gch¨
 *
	m©åibuã_«me
);

59 
gboﬁón
 ( *
£t_documít_©åibuã
Ë(
AtkDocumít
 *
	mdocumít
,

60 c⁄° 
gch¨
 *
	m©åibuã_«me
,

61 c⁄° 
gch¨
 *
	m©åibuã_vÆue
);

63 
AtkFun˘i⁄
 
	m∑d1
;

64 
AtkFun˘i⁄
 
	m∑d2
;

65 
AtkFun˘i⁄
 
	m∑d3
;

66 
AtkFun˘i⁄
 
	m∑d4
;

69 
GTy≥
 
©k_documít_gë_ty≥
 ();

71 
G_CONST_RETURN
 
gch¨
* 
©k_documít_gë_documít_ty≥
 (
AtkDocumít
 *
documít
);

72 
gpoöãr
 
©k_documít_gë_documít
 (
AtkDocumít
 *
documít
);

73 
G_CONST_RETURN
 
gch¨
* 
©k_documít_gë_loˇÀ
 (
AtkDocumít
 *
documít
);

74 
AtkAâribuãSë
* 
©k_documít_gë_©åibuãs
 (
AtkDocumít
 *
documít
);

75 
G_CONST_RETURN
 
gch¨
* 
©k_documít_gë_©åibuã_vÆue
 (
AtkDocumít
 *
documít
,

76 c⁄° 
gch¨
 *
©åibuã_«me
);

77 
gboﬁón
 
©k_documít_£t_©åibuã_vÆue
 (
AtkDocumít
 *
documít
,

78 c⁄° 
gch¨
 *
©åibuã_«me
,

79 c⁄° 
gch¨
 *
©åibuã_vÆue
);

81 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkeditabletext.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_EDITABLE_TEXT_H__


25 
	#__ATK_EDITABLE_TEXT_H__


	)

27 
	~<©k/©kobje˘.h
>

28 
	~<©k/©kãxt.h
>

30 
	gG_BEGIN_DECLS


37 
	#ATK_TYPE_EDITABLE_TEXT
 (
	`©k_edôabÀ_ãxt_gë_ty≥
 ())

	)

38 
	#ATK_IS_EDITABLE_TEXT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_EDITABLE_TEXT
)

	)

39 
	#ATK_EDITABLE_TEXT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_EDITABLE_TEXT
, 
AtkEdôabÀText
)

	)

40 
	#ATK_EDITABLE_TEXT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_EDITABLE_TEXT
, 
AtkEdôabÀTextIÁ˚
))

	)

42 #i‚de‡
_TYPEDEF_ATK_EDITABLE_TEXT_


43 
	#_TYPEDEF_ATK_EDITABLE_TEXT_


	)

44 
_AtkEdôabÀText
 
	tAtkEdôabÀText
;

46 
_AtkEdôabÀTextIÁ˚
 
	tAtkEdôabÀTextIÁ˚
;

48 
	s_AtkEdôabÀTextIÁ˚


50 
GTy≥I¡îÁ˚
 
	m∑ª¡_öãrÁ˚
;

52 
gboﬁón
 (* 
£t_run_©åibuãs
Ë(
AtkEdôabÀText
 *
	mãxt
,

53 
AtkAâribuãSë
 *
	m©åib_£t
,

54 
göt
 
	m°¨t_off£t
,

55 
göt
 
	míd_off£t
);

56 (* 
	m£t_ãxt_c⁄ã¡s
Ë(
AtkEdôabÀText
 *
	mãxt
,

57 c⁄° 
gch¨
 *
	m°rög
);

58 (* 
	mö£π_ãxt
Ë(
AtkEdôabÀText
 *
	mãxt
,

59 c⁄° 
gch¨
 *
	m°rög
,

60 
göt
 
	mÀngth
,

61 
göt
 *
	mposôi⁄
);

62 (* 
	mc›y_ãxt
Ë(
AtkEdôabÀText
 *
	mãxt
,

63 
göt
 
	m°¨t_pos
,

64 
göt
 
	míd_pos
);

65 (* 
	mcut_ãxt
Ë(
AtkEdôabÀText
 *
	mãxt
,

66 
göt
 
	m°¨t_pos
,

67 
göt
 
	míd_pos
);

68 (* 
	mdñëe_ãxt
Ë(
AtkEdôabÀText
 *
	mãxt
,

69 
göt
 
	m°¨t_pos
,

70 
göt
 
	míd_pos
);

71 (* 
	m∑°e_ãxt
Ë(
AtkEdôabÀText
 *
	mãxt
,

72 
göt
 
	mposôi⁄
);

74 
AtkFun˘i⁄
 
	m∑d1
;

75 
AtkFun˘i⁄
 
	m∑d2
;

77 
GTy≥
 
©k_edôabÀ_ãxt_gë_ty≥
 ();

80 
gboﬁón
 
©k_edôabÀ_ãxt_£t_run_©åibuãs
 (
AtkEdôabÀText
 *
ãxt
,

81 
AtkAâribuãSë
 *
©åib_£t
,

82 
göt
 
°¨t_off£t
,

83 
göt
 
íd_off£t
);

84 
©k_edôabÀ_ãxt_£t_ãxt_c⁄ã¡s
 (
AtkEdôabÀText
 *
ãxt
,

85 c⁄° 
gch¨
 *
°rög
);

86 
©k_edôabÀ_ãxt_ö£π_ãxt
 (
AtkEdôabÀText
 *
ãxt
,

87 c⁄° 
gch¨
 *
°rög
,

88 
göt
 
Àngth
,

89 
göt
 *
posôi⁄
);

90 
©k_edôabÀ_ãxt_c›y_ãxt
 (
AtkEdôabÀText
 *
ãxt
,

91 
göt
 
°¨t_pos
,

92 
göt
 
íd_pos
);

93 
©k_edôabÀ_ãxt_cut_ãxt
 (
AtkEdôabÀText
 *
ãxt
,

94 
göt
 
°¨t_pos
,

95 
göt
 
íd_pos
);

96 
©k_edôabÀ_ãxt_dñëe_ãxt
 (
AtkEdôabÀText
 *
ãxt
,

97 
göt
 
°¨t_pos
,

98 
göt
 
íd_pos
);

99 
©k_edôabÀ_ãxt_∑°e_ãxt
 (
AtkEdôabÀText
 *
ãxt
,

100 
göt
 
posôi⁄
);

102 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkgobjectaccessible.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_GOBJECT_ACCESSIBLE_H__


25 
	#__ATK_GOBJECT_ACCESSIBLE_H__


	)

27 
	~<©k/©k.h
>

29 
	gG_BEGIN_DECLS


35 
	#ATK_TYPE_GOBJECT_ACCESSIBLE
 (
	`©k_gobje˘_ac˚ssibÀ_gë_ty≥
 ())

	)

36 
	#ATK_GOBJECT_ACCESSIBLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_GOBJECT_ACCESSIBLE
, 
AtkGObje˘Ac˚ssibÀ
))

	)

37 
	#ATK_GOBJECT_ACCESSIBLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_GOBJECT_ACCESSIBLE
, 
AtkGObje˘Ac˚ssibÀCœss
))

	)

38 
	#ATK_IS_GOBJECT_ACCESSIBLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_GOBJECT_ACCESSIBLE
))

	)

39 
	#ATK_IS_GOBJECT_ACCESSIBLE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_GOBJECT_ACCESSIBLE
))

	)

40 
	#ATK_GOBJECT_ACCESSIBLE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_GOBJECT_ACCESSIBLE
, 
AtkGObje˘Ac˚ssibÀCœss
))

	)

42 
_AtkGObje˘Ac˚ssibÀ
 
	tAtkGObje˘Ac˚ssibÀ
;

43 
_AtkGObje˘Ac˚ssibÀCœss
 
	tAtkGObje˘Ac˚ssibÀCœss
;

45 
	s_AtkGObje˘Ac˚ssibÀ


47 
AtkObje˘
 
	m∑ª¡
;

50 
GTy≥
 
©k_gobje˘_ac˚ssibÀ_gë_ty≥
 ();

52 
	s_AtkGObje˘Ac˚ssibÀCœss


54 
AtkObje˘Cœss
 
	m∑ª¡_˛ass
;

56 
AtkFun˘i⁄
 
	m∑d1
;

57 
AtkFun˘i⁄
 
	m∑d2
;

60 
AtkObje˘
 *
©k_gobje˘_ac˚ssibÀ_f‹_obje˘
 (
GObje˘
 *
obj
);

61 
GObje˘
 *
©k_gobje˘_ac˚ssibÀ_gë_obje˘
 (
AtkGObje˘Ac˚ssibÀ
 *
obj
);

63 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkhyperlink.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_HYPERLINK_H__


25 
	#__ATK_HYPERLINK_H__


	)

27 
	~<©k/©ka˘i⁄.h
>

29 
G_BEGIN_DECLS


45 
	mATK_HYPERLINK_IS_INLINE
 = 1 << 0

46 } 
	tAtkHy≥æökSèãFœgs
;

48 
	#ATK_TYPE_HYPERLINK
 (
	`©k_hy≥æök_gë_ty≥
 ())

	)

49 
	#ATK_HYPERLINK
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_HYPERLINK
, 
AtkHy≥æök
))

	)

50 
	#ATK_HYPERLINK_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_HYPERLINK
, 
AtkHy≥æökCœss
))

	)

51 
	#ATK_IS_HYPERLINK
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_HYPERLINK
))

	)

52 
	#ATK_IS_HYPERLINK_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_HYPERLINK
))

	)

53 
	#ATK_HYPERLINK_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_HYPERLINK
, 
AtkHy≥æökCœss
))

	)

55 
_AtkHy≥æök
 
	tAtkHy≥æök
;

56 
_AtkHy≥æökCœss
 
	tAtkHy≥æökCœss
;

58 
	s_AtkHy≥æök


60 
GObje˘
 
	m∑ª¡
;

63 
	s_AtkHy≥æökCœss


65 
GObje˘Cœss
 
	m∑ª¡
;

67 
	mgch¨
* (* 
	mgë_uri
Ë(
AtkHy≥æök
 *
	mlök_
,

68 
göt
 
	mi
);

69 
	mAtkObje˘
* (* 
	mgë_obje˘
Ë(
AtkHy≥æök
 *
	mlök_
,

70 
göt
 
	mi
);

71 
göt
 (* 
gë_íd_ödex
Ë(
AtkHy≥æök
 *
	mlök_
);

72 
göt
 (* 
gë_°¨t_ödex
Ë(
AtkHy≥æök
 *
	mlök_
);

73 
gboﬁón
 (* 
is_vÆid
Ë(
AtkHy≥æök
 *
	mlök_
);

74 
göt
 (* 
gë_n_™ch‹s
Ë(
AtkHy≥æök
 *
	mlök_
);

75 
guöt
 (* 
lök_°©e
Ë(
AtkHy≥æök
 *
	mlök_
);

76 
gboﬁón
 (* 
is_£À˘ed_lök
Ë(
AtkHy≥æök
 *
	mlök_
);

79 –*
	mlök_a˘iv©ed
Ë(
AtkHy≥æök
 *
	mlök_
);

80 
AtkFun˘i⁄
 
	m∑d1
;

83 
GTy≥
 
©k_hy≥æök_gë_ty≥
 ();

85 
gch¨
* 
©k_hy≥æök_gë_uri
 (
AtkHy≥æök
 *
lök_
,

86 
göt
 
i
);

88 
AtkObje˘
* 
©k_hy≥æök_gë_obje˘
 (
AtkHy≥æök
 *
lök_
,

89 
göt
 
i
);

91 
göt
 
©k_hy≥æök_gë_íd_ödex
 (
AtkHy≥æök
 *
lök_
);

93 
göt
 
©k_hy≥æök_gë_°¨t_ödex
 (
AtkHy≥æök
 *
lök_
);

95 
gboﬁón
 
©k_hy≥æök_is_vÆid
 (
AtkHy≥æök
 *
lök_
);

97 
gboﬁón
 
©k_hy≥æök_is_ölöe
 (
AtkHy≥æök
 *
lök_
);

99 
göt
 
©k_hy≥æök_gë_n_™ch‹s
 (
AtkHy≥æök
 *
lök_
);

100 #i‚de‡
ATK_DISABLE_DEPRECATED


101 
gboﬁón
 
©k_hy≥æök_is_£À˘ed_lök
 (
AtkHy≥æök
 *
lök_
);

104 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkhyperlinkimpl.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_HYPERLINK_IMPL_H__


25 
	#__ATK_HYPERLINK_IMPL_H__


	)

27 
	~<©k/©kobje˘.h
>

28 
	~<©k/©khy≥æök.h
>

30 
	gG_BEGIN_DECLS


49 
	#ATK_TYPE_HYPERLINK_IMPL
 (
	`©k_hy≥æök_im∂_gë_ty≥
 ())

	)

50 
	#ATK_IS_HYPERLINK_IMPL
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_HYPERLINK_IMPL
)

	)

51 
	#ATK_HYPERLINK_IMPL
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_HYPERLINK_IMPL
, 
AtkHy≥æökIm∂
)

	)

52 
	#ATK_HYPERLINK_IMPL_GET_IFACE
(
obj
Ë
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_HYPERLINK_IMPL
, 
AtkHy≥æökIm∂IÁ˚
)

	)

54 #i‚de‡
_TYPEDEF_ATK_HYPERLINK_IMPL_


55 
	#_TYPEDEF_ATK_HYPERLINK_IMPL__


	)

56 
_AtkHy≥æökIm∂
 
	tAtkHy≥æökIm∂
;

58 
_AtkHy≥æökIm∂IÁ˚
 
	tAtkHy≥æökIm∂IÁ˚
;

60 
	s_AtkHy≥æökIm∂IÁ˚


62 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

64 
	mAtkHy≥æök
* (* 
	mgë_hy≥æök
Ë(
AtkHy≥æökIm∂
 *
	mim∂
);

66 
AtkFun˘i⁄
 
	m∑d1
;

69 
GTy≥
 
©k_hy≥æök_im∂_gë_ty≥
 ();

71 
AtkHy≥æök
 *
©k_hy≥æök_im∂_gë_hy≥æök
 (
AtkHy≥æökIm∂
 *
obj
);

73 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkhypertext.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_HYPERTEXT_H__


25 
	#__ATK_HYPERTEXT_H__


	)

27 
	~<©k/©kobje˘.h
>

28 
	~<©k/©khy≥æök.h
>

30 
	gG_BEGIN_DECLS


37 
	#ATK_TYPE_HYPERTEXT
 (
	`©k_hy≥πext_gë_ty≥
 ())

	)

38 
	#ATK_IS_HYPERTEXT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_HYPERTEXT
)

	)

39 
	#ATK_HYPERTEXT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_HYPERTEXT
, 
AtkHy≥πext
)

	)

40 
	#ATK_HYPERTEXT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_HYPERTEXT
, 
AtkHy≥πextIÁ˚
))

	)

42 #i‚de‡
_TYPEDEF_ATK_HYPERTEXT_


43 
	#_TYPEDEF_ATK_HYPERTEXT_


	)

44 
_AtkHy≥πext
 
	tAtkHy≥πext
;

46 
_AtkHy≥πextIÁ˚
 
	tAtkHy≥πextIÁ˚
;

48 
	s_AtkHy≥πextIÁ˚


50 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

52 
	mAtkHy≥æök
*(* 
	mgë_lök
Ë(
AtkHy≥πext
 *
	mhy≥πext
,

53 
göt
 
	mlök_ödex
);

54 
göt
 (* 
gë_n_löks
Ë(
AtkHy≥πext
 *
	mhy≥πext
);

55 
göt
 (* 
gë_lök_ödex
Ë(
AtkHy≥πext
 *
	mhy≥πext
,

56 
göt
 
	mch¨_ödex
);

61 (* 
	mlök_£À˘ed
Ë(
AtkHy≥πext
 *
	mhy≥πext
,

62 
göt
 
	mlök_ödex
);

64 
AtkFun˘i⁄
 
	m∑d1
;

65 
AtkFun˘i⁄
 
	m∑d2
;

66 
AtkFun˘i⁄
 
	m∑d3
;

68 
GTy≥
 
©k_hy≥πext_gë_ty≥
 ();

70 
AtkHy≥æök
* 
©k_hy≥πext_gë_lök
 (
AtkHy≥πext
 *
hy≥πext
,

71 
göt
 
lök_ödex
);

72 
göt
 
©k_hy≥πext_gë_n_löks
 (
AtkHy≥πext
 *
hy≥πext
);

73 
göt
 
©k_hy≥πext_gë_lök_ödex
 (
AtkHy≥πext
 *
hy≥πext
,

74 
göt
 
ch¨_ödex
);

76 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkimage.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_IMAGE_H__


25 
	#__ATK_IMAGE_H__


	)

27 
	~<©k/©kobje˘.h
>

28 
	~<©k/©kutû.h
>

30 
	gG_BEGIN_DECLS


38 
	#ATK_TYPE_IMAGE
 (
	`©k_image_gë_ty≥
 ())

	)

39 
	#ATK_IS_IMAGE
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_IMAGE
)

	)

40 
	#ATK_IMAGE
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_IMAGE
, 
AtkImage
)

	)

41 
	#ATK_IMAGE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_IMAGE
, 
AtkImageIÁ˚
))

	)

43 #i‚de‡
_TYPEDEF_ATK_IMAGE_


44 
	#_TYPEDEF_ATK_IMAGE_


	)

45 
_AtkImage
 
	tAtkImage
;

47 
_AtkImageIÁ˚
 
	tAtkImageIÁ˚
;

49 
	s_AtkImageIÁ˚


51 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

52 –*
	mgë_image_posôi⁄
Ë(
AtkImage
 *
	mimage
,

53 
göt
 *
	mx
,

54 
göt
 *
	my
,

55 
AtkCo‹dTy≥
 
	mco‹d_ty≥
);

56 
G_CONST_RETURN
 
	mgch¨
* ( *
	mgë_image_des¸ùti⁄
Ë(
AtkImage
 *
	mimage
);

57 –*
	mgë_image_size
Ë(
AtkImage
 *
	mimage
,

58 
göt
 *
	mwidth
,

59 
göt
 *
	mheight
);

60 
gboﬁón
 ( *
£t_image_des¸ùti⁄
Ë(
AtkImage
 *
	mimage
,

61 c⁄° 
gch¨
 *
	mdes¸ùti⁄
);

62 
G_CONST_RETURN
 
	mgch¨
* ( *
	mgë_image_loˇÀ
Ë(
AtkImage
 *
	mimage
);

64 
AtkFun˘i⁄
 
	m∑d1
;

68 
GTy≥
 
©k_image_gë_ty≥
 ();

70 
G_CONST_RETURN
 
gch¨
* 
©k_image_gë_image_des¸ùti⁄
 (
AtkImage
 *
image
);

72 
©k_image_gë_image_size
 (
AtkImage
 *
image
,

73 
göt
 *
width
,

74 
göt
 *
height
);

76 
gboﬁón
 
©k_image_£t_image_des¸ùti⁄
 (
AtkImage
 *
image
,

77 c⁄° 
gch¨
 *
des¸ùti⁄
);

78 
©k_image_gë_image_posôi⁄
 (
AtkImage
 *
image
,

79 
göt
 *
x
,

80 
göt
 *
y
,

81 
AtkCo‹dTy≥
 
co‹d_ty≥
);

83 
G_CONST_RETURN
 
gch¨
* 
©k_image_gë_image_loˇÀ
 (
AtkImage
 *
image
);

85 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkmisc.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_MISC_H__


25 
	#__ATK_MISC_H__


	)

27 
	~<glib-obje˘.h
>

29 
	gG_BEGIN_DECLS


31 
	#ATK_TYPE_MISC
 (
	`©k_misc_gë_ty≥
 ())

	)

32 
	#ATK_IS_MISC
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_MISC
)

	)

33 
	#ATK_MISC
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_MISC
, 
AtkMisc
)

	)

34 
	#ATK_MISC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_MISC
, 
AtkMiscCœss
))

	)

35 
	#ATK_IS_MISC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_MISC
))

	)

36 
	#ATK_MISC_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_MISC
, 
AtkMiscCœss
))

	)

39 #i‚de‡
_TYPEDEF_ATK_MISC_


40 
	#_TYPEDEF_ATK_MISC_


	)

41 
_AtkMisc
 
	tAtkMisc
;

42 
_AtkMiscCœss
 
	tAtkMiscCœss
;

45 
	s_AtkMisc


47 
GObje˘
 
	m∑ª¡
;

55 
AtkMisc
 *
©k_misc_ö°™˚
;

57 
	s_AtkMiscCœss


59 
GObje˘Cœss
 
	m∑ª¡
;

60 (* 
	mthªads_íãr
Ë(
AtkMisc
 *
	mmisc
);

61 (* 
	mthªads_Àave
Ë(
AtkMisc
 *
	mmisc
);

62 
gpoöãr
 
	mvfuncs
[32];

64 
GTy≥
 
©k_misc_gë_ty≥
 ();

72 
©k_misc_thªads_íãr
 (
AtkMisc
 *
misc
);

80 
©k_misc_thªads_Àave
 (
AtkMisc
 *
misc
);

85 c⁄° 
AtkMisc
 *
©k_misc_gë_ö°™˚
 ();

87 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atknoopobject.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_NO_OP_OBJECT_H__


25 
	#__ATK_NO_OP_OBJECT_H__


	)

27 
	gG_BEGIN_DECLS


29 
	#ATK_TYPE_NO_OP_OBJECT
 (
	`©k_no_›_obje˘_gë_ty≥
 ())

	)

30 
	#ATK_NO_OP_OBJECT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_NO_OP_OBJECT
, 
AtkNoOpObje˘
))

	)

31 
	#ATK_NO_OP_OBJECT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_NO_OP_OBJECT
, 
AtkNoOpObje˘Cœss
))

	)

32 
	#ATK_IS_NO_OP_OBJECT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_NO_OP_OBJECT
))

	)

33 
	#ATK_IS_NO_OP_OBJECT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_NO_OP_OBJECT
))

	)

34 
	#ATK_NO_OP_OBJECT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_NO_OP_OBJECT
, 
AtkNoOpObje˘Cœss
))

	)

36 
_AtkNoOpObje˘
 
	tAtkNoOpObje˘
;

37 
_AtkNoOpObje˘Cœss
 
	tAtkNoOpObje˘Cœss
;

39 
	s_AtkNoOpObje˘


41 
AtkObje˘
 
	m∑ª¡
;

44 
GTy≥
 
©k_no_›_obje˘_gë_ty≥
 ();

46 
	s_AtkNoOpObje˘Cœss


48 
AtkObje˘Cœss
 
	m∑ª¡_˛ass
;

51 
AtkObje˘
 *
©k_no_›_obje˘_√w
 (
GObje˘
 *
obj
);

53 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atknoopobjectfactory.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_NO_OP_OBJECT_FACTORY_H__


25 
	#__ATK_NO_OP_OBJECT_FACTORY_H__


	)

27 
	~<©k/©kobje˘Á˘‹y.h
>

29 
	gG_BEGIN_DECLS


31 
	#ATK_TYPE_NO_OP_OBJECT_FACTORY
 (
	`©k_no_›_obje˘_Á˘‹y_gë_ty≥
 ())

	)

32 
	#ATK_NO_OP_OBJECT_FACTORY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_NO_OP_OBJECT_FACTORY
, 
AtkNoOpObje˘Fa˘‹y
))

	)

33 
	#ATK_NO_OP_OBJECT_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_NO_OP_OBJECT_FACTORY
, 
AtkNoOpObje˘Fa˘‹yCœss
))

	)

34 
	#ATK_IS_NO_OP_OBJECT_FACTORY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_NO_OP_OBJECT_FACTORY
))

	)

35 
	#ATK_IS_NO_OP_OBJECT_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_NO_OP_OBJECT_FACTORY
))

	)

36 
	#ATK_NO_OP_OBJECT_FACTORY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ( (obj), 
ATK_TYPE_NO_OP_OBJECT_FACTORY
, 
AtkNoOpObje˘Fa˘‹yCœss
))

	)

38 
_AtkNoOpObje˘Fa˘‹y
 
	tAtkNoOpObje˘Fa˘‹y
;

39 
_AtkNoOpObje˘Fa˘‹yCœss
 
	tAtkNoOpObje˘Fa˘‹yCœss
;

41 
	s_AtkNoOpObje˘Fa˘‹y


43 
AtkObje˘Fa˘‹y
 
	m∑ª¡
;

46 
	s_AtkNoOpObje˘Fa˘‹yCœss


48 
AtkObje˘Fa˘‹yCœss
 
	m∑ª¡_˛ass
;

51 
GTy≥
 
©k_no_›_obje˘_Á˘‹y_gë_ty≥
();

53 
AtkObje˘Fa˘‹y
 *
©k_no_›_obje˘_Á˘‹y_√w
();

55 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkobject.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_OBJECT_H__


25 
	#__ATK_OBJECT_H__


	)

27 
	~<glib-obje˘.h
>

28 
	~<©k/©k°©e.h
>

29 
	~<©k/©kªœti⁄ty≥.h
>

31 
G_BEGIN_DECLS


152 
	mATK_ROLE_INVALID
 = 0,

153 
	mATK_ROLE_ACCEL_LABEL
,

154 
	mATK_ROLE_ALERT
,

155 
	mATK_ROLE_ANIMATION
,

156 
	mATK_ROLE_ARROW
,

157 
	mATK_ROLE_CALENDAR
,

158 
	mATK_ROLE_CANVAS
,

159 
	mATK_ROLE_CHECK_BOX
,

160 
	mATK_ROLE_CHECK_MENU_ITEM
,

161 
	mATK_ROLE_COLOR_CHOOSER
,

162 
	mATK_ROLE_COLUMN_HEADER
,

163 
	mATK_ROLE_COMBO_BOX
,

164 
	mATK_ROLE_DATE_EDITOR
,

165 
	mATK_ROLE_DESKTOP_ICON
,

166 
	mATK_ROLE_DESKTOP_FRAME
,

167 
	mATK_ROLE_DIAL
,

168 
	mATK_ROLE_DIALOG
,

169 
	mATK_ROLE_DIRECTORY_PANE
,

170 
	mATK_ROLE_DRAWING_AREA
,

171 
	mATK_ROLE_FILE_CHOOSER
,

172 
	mATK_ROLE_FILLER
,

173 
	mATK_ROLE_FONT_CHOOSER
,

174 
	mATK_ROLE_FRAME
,

175 
	mATK_ROLE_GLASS_PANE
,

176 
	mATK_ROLE_HTML_CONTAINER
,

177 
	mATK_ROLE_ICON
,

178 
	mATK_ROLE_IMAGE
,

179 
	mATK_ROLE_INTERNAL_FRAME
,

180 
	mATK_ROLE_LABEL
,

181 
	mATK_ROLE_LAYERED_PANE
,

182 
	mATK_ROLE_LIST
,

183 
	mATK_ROLE_LIST_ITEM
,

184 
	mATK_ROLE_MENU
,

185 
	mATK_ROLE_MENU_BAR
,

186 
	mATK_ROLE_MENU_ITEM
,

187 
	mATK_ROLE_OPTION_PANE
,

188 
	mATK_ROLE_PAGE_TAB
,

189 
	mATK_ROLE_PAGE_TAB_LIST
,

190 
	mATK_ROLE_PANEL
,

191 
	mATK_ROLE_PASSWORD_TEXT
,

192 
	mATK_ROLE_POPUP_MENU
,

193 
	mATK_ROLE_PROGRESS_BAR
,

194 
	mATK_ROLE_PUSH_BUTTON
,

195 
	mATK_ROLE_RADIO_BUTTON
,

196 
	mATK_ROLE_RADIO_MENU_ITEM
,

197 
	mATK_ROLE_ROOT_PANE
,

198 
	mATK_ROLE_ROW_HEADER
,

199 
	mATK_ROLE_SCROLL_BAR
,

200 
	mATK_ROLE_SCROLL_PANE
,

201 
	mATK_ROLE_SEPARATOR
,

202 
	mATK_ROLE_SLIDER
,

203 
	mATK_ROLE_SPLIT_PANE
,

204 
	mATK_ROLE_SPIN_BUTTON
,

205 
	mATK_ROLE_STATUSBAR
,

206 
	mATK_ROLE_TABLE
,

207 
	mATK_ROLE_TABLE_CELL
,

208 
	mATK_ROLE_TABLE_COLUMN_HEADER
,

209 
	mATK_ROLE_TABLE_ROW_HEADER
,

210 
	mATK_ROLE_TEAR_OFF_MENU_ITEM
,

211 
	mATK_ROLE_TERMINAL
,

212 
	mATK_ROLE_TEXT
,

213 
	mATK_ROLE_TOGGLE_BUTTON
,

214 
	mATK_ROLE_TOOL_BAR
,

215 
	mATK_ROLE_TOOL_TIP
,

216 
	mATK_ROLE_TREE
,

217 
	mATK_ROLE_TREE_TABLE
,

218 
	mATK_ROLE_UNKNOWN
,

219 
	mATK_ROLE_VIEWPORT
,

220 
	mATK_ROLE_WINDOW
,

221 
	mATK_ROLE_HEADER
,

222 
	mATK_ROLE_FOOTER
,

223 
	mATK_ROLE_PARAGRAPH
,

224 
	mATK_ROLE_RULER
,

225 
	mATK_ROLE_APPLICATION
,

226 
	mATK_ROLE_AUTOCOMPLETE
,

227 
	mATK_ROLE_EDITBAR
,

228 
	mATK_ROLE_EMBEDDED
,

229 
	mATK_ROLE_ENTRY
,

230 
	mATK_ROLE_CHART
,

231 
	mATK_ROLE_CAPTION
,

232 
	mATK_ROLE_DOCUMENT_FRAME
,

233 
	mATK_ROLE_HEADING
,

234 
	mATK_ROLE_PAGE
,

235 
	mATK_ROLE_SECTION
,

236 
	mATK_ROLE_REDUNDANT_OBJECT
,

237 
	mATK_ROLE_FORM
,

238 
	mATK_ROLE_LINK
,

239 
	mATK_ROLE_INPUT_METHOD_WINDOW
,

240 
	mATK_ROLE_LAST_DEFINED


241 } 
	tAtkRﬁe
;

243 
AtkRﬁe
 
©k_rﬁe_ªgi°î
 (c⁄° 
gch¨
 *
«me
);

264 
	mATK_LAYER_INVALID
,

265 
	mATK_LAYER_BACKGROUND
,

266 
	mATK_LAYER_CANVAS
,

267 
	mATK_LAYER_WIDGET
,

268 
	mATK_LAYER_MDI
,

269 
	mATK_LAYER_POPUP
,

270 
	mATK_LAYER_OVERLAY
,

271 
	mATK_LAYER_WINDOW


272 } 
	tAtkLayî
;

281 
GSLi°
 
	tAtkAâribuãSë
;

293 
_AtkAâribuã
 
	tAtkAâribuã
;

295 
	s_AtkAâribuã
 {

296 
gch¨
* 
	m«me
;

297 
gch¨
* 
	mvÆue
;

300 
	#ATK_TYPE_OBJECT
 (
	`©k_obje˘_gë_ty≥
 ())

	)

301 
	#ATK_OBJECT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_OBJECT
, 
AtkObje˘
))

	)

302 
	#ATK_OBJECT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_OBJECT
, 
AtkObje˘Cœss
))

	)

303 
	#ATK_IS_OBJECT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_OBJECT
))

	)

304 
	#ATK_IS_OBJECT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_OBJECT
))

	)

305 
	#ATK_OBJECT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_OBJECT
, 
AtkObje˘Cœss
))

	)

307 
	#ATK_TYPE_IMPLEMENTOR
 (
	`©k_im∂emít‹_gë_ty≥
 ())

	)

308 
	#ATK_IS_IMPLEMENTOR
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_IMPLEMENTOR
)

	)

309 
	#ATK_IMPLEMENTOR
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_IMPLEMENTOR
, 
AtkIm∂emít‹
)

	)

310 
	#ATK_IMPLEMENTOR_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_IMPLEMENTOR
, 
AtkIm∂emít‹IÁ˚
))

	)

313 
_AtkIm∂emít‹
 
	tAtkIm∂emít‹
;

314 
_AtkIm∂emít‹IÁ˚
 
	tAtkIm∂emít‹IÁ˚
;

317 
_AtkObje˘
 
	tAtkObje˘
;

318 
_AtkObje˘Cœss
 
	tAtkObje˘Cœss
;

319 
_AtkRñ©i⁄Së
 
	tAtkRñ©i⁄Së
;

320 
_AtkSèãSë
 
	tAtkSèãSë
;

340 
	s_AtkPr›îtyVÆues


342 c⁄° 
gch¨
 *
	m¥›îty_«me
;

343 
GVÆue
 
	mﬁd_vÆue
;

344 
GVÆue
 
	m√w_vÆue
;

347 
_AtkPr›îtyVÆues
 
	tAtkPr›îtyVÆues
;

349 
	$gboﬁón
 (*
	tAtkFun˘i⁄
Ë(
	tgpoöãr
 
	td©a
);

362 (*
	tAtkPr›îtyCh™geH™dÀr
Ë(
	tAtkObje˘
*, 
	tAtkPr›îtyVÆues
*);

365 
	s_AtkObje˘


367 
GObje˘
 
∑ª¡
;

369 
gch¨
 *
des¸ùti⁄
;

370 
gch¨
 *
«me
;

371 
AtkObje˘
 *
ac˚ssibÀ_∑ª¡
;

372 
AtkRﬁe
 
rﬁe
;

373 
AtkRñ©i⁄Së
 *
ªœti⁄_£t
;

374 
AtkLayî
 
œyî
;

377 
	s_AtkObje˘Cœss


379 
GObje˘Cœss
 
∑ª¡
;

384 
G_CONST_RETURN
 
gch¨
* (* 
gë_«me
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

388 
G_CONST_RETURN
 
gch¨
* (* 
gë_des¸ùti⁄
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

392 
AtkObje˘
* (*
gë_∑ª¡
Ë(AtkObje˘ *
ac˚ssibÀ
);

397 
	`göt
 (* 
gë_n_chûdªn
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

403 
AtkObje˘
* (* 
ªf_chûd
Ë(AtkObje˘ *
ac˚ssibÀ
,

404 
göt
 
i
);

409 
	`göt
 (* 
gë_ödex_ö_∑ª¡
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

413 
AtkRñ©i⁄Së
* (* 
ªf_ªœti⁄_£t
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

417 
	`AtkRﬁe
 (* 
gë_rﬁe
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

418 
	`AtkLayî
 (* 
gë_œyî
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

419 
	`göt
 (* 
gë_mdi_z‹dî
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

423 
AtkSèãSë
* (* 
ªf_°©e_£t
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

427 (* 
£t_«me
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

428 c⁄° 
gch¨
 *
«me
);

432 (* 
£t_des¸ùti⁄
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

433 c⁄° 
gch¨
 *
des¸ùti⁄
);

437 (* 
£t_∑ª¡
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

438 
AtkObje˘
 *
∑ª¡
);

442 (* 
£t_rﬁe
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

443 
AtkRﬁe
 
rﬁe
);

447 
	`guöt
 (* 
c⁄√˘_¥›îty_ch™ge_h™dÀr
Ë(
AtkObje˘


448 *
ac˚ssibÀ
,

449 
AtkPr›îtyCh™geH™dÀr
 *
h™dÀr
);

454 (* 
ªmove_¥›îty_ch™ge_h™dÀr
Ë(
AtkObje˘


455 *
ac˚ssibÀ
,

456 
guöt


457 
h™dÀr_id
);

458 (* 
öôülize
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

459 
gpoöãr
 
d©a
);

464 (* 
chûdªn_ch™ged
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

465 
guöt
 
ch™ge_ödex
,

466 
gpoöãr
 
ch™ged_chûd
);

471 (* 
focus_evít
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

472 
gboﬁón
 
focus_ö
);

477 (* 
¥›îty_ch™ge
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

478 
AtkPr›îtyVÆues
 *
vÆues
);

483 (* 
°©e_ch™ge
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

484 c⁄° 
gch¨
 *
«me
,

485 
gboﬁón
 
°©e_£t
);

490 (*
visibÀ_d©a_ch™ged
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

498 (*
a˘ive_des˚nd™t_ch™ged
Ë(
AtkObje˘
 *
ac˚ssibÀ
,

499 
gpoöãr
 *
chûd
);

505 
AtkAâribuãSë
* (*
gë_©åibuãs
Ë(
AtkObje˘
 *
ac˚ssibÀ
);

506 
AtkFun˘i⁄
 
∑d1
;

507 
AtkFun˘i⁄
 
∑d2
;

510 
GTy≥
 
	`©k_obje˘_gë_ty≥
 ();

512 
	s_AtkIm∂emít‹IÁ˚


514 
GTy≥I¡îÁ˚
 
∑ª¡
;

516 
AtkObje˘
* (*
ªf_ac˚ssibÀ
Ë(
AtkIm∂emít‹
 *
im∂emít‹
);

518 
GTy≥
 
	`©k_im∂emít‹_gë_ty≥
 ();

532 
AtkObje˘
* 
	`©k_im∂emít‹_ªf_ac˚ssibÀ
 (
AtkIm∂emít‹
 *
im∂emít‹
);

538 
G_CONST_RETURN
 
gch¨
* 
	`©k_obje˘_gë_«me
 (
AtkObje˘
 *
ac˚ssibÀ
);

539 
G_CONST_RETURN
 
gch¨
* 
	`©k_obje˘_gë_des¸ùti⁄
 (
AtkObje˘
 *
ac˚ssibÀ
);

540 
AtkObje˘
* 
	`©k_obje˘_gë_∑ª¡
 (AtkObje˘ *
ac˚ssibÀ
);

541 
göt
 
	`©k_obje˘_gë_n_ac˚ssibÀ_chûdªn
 (
AtkObje˘
 *
ac˚ssibÀ
);

542 
AtkObje˘
* 
	`©k_obje˘_ªf_ac˚ssibÀ_chûd
 (AtkObje˘ *
ac˚ssibÀ
,

543 
göt
 
i
);

544 
AtkRñ©i⁄Së
* 
	`©k_obje˘_ªf_ªœti⁄_£t
 (
AtkObje˘
 *
ac˚ssibÀ
);

545 
AtkRﬁe
 
	`©k_obje˘_gë_rﬁe
 (
AtkObje˘
 *
ac˚ssibÀ
);

546 #i‚de‡
ATK_DISABLE_DEPRECATED


547 
AtkLayî
 
	`©k_obje˘_gë_œyî
 (
AtkObje˘
 *
ac˚ssibÀ
);

548 
göt
 
	`©k_obje˘_gë_mdi_z‹dî
 (
AtkObje˘
 *
ac˚ssibÀ
);

550 
AtkAâribuãSë
* 
	`©k_obje˘_gë_©åibuãs
 (
AtkObje˘
 *
ac˚ssibÀ
);

551 
AtkSèãSë
* 
	`©k_obje˘_ªf_°©e_£t
 (
AtkObje˘
 *
ac˚ssibÀ
);

552 
göt
 
	`©k_obje˘_gë_ödex_ö_∑ª¡
 (
AtkObje˘
 *
ac˚ssibÀ
);

553 
	`©k_obje˘_£t_«me
 (
AtkObje˘
 *
ac˚ssibÀ
,

554 c⁄° 
gch¨
 *
«me
);

555 
	`©k_obje˘_£t_des¸ùti⁄
 (
AtkObje˘
 *
ac˚ssibÀ
,

556 c⁄° 
gch¨
 *
des¸ùti⁄
);

557 
	`©k_obje˘_£t_∑ª¡
 (
AtkObje˘
 *
ac˚ssibÀ
,

558 
AtkObje˘
 *
∑ª¡
);

559 
	`©k_obje˘_£t_rﬁe
 (
AtkObje˘
 *
ac˚ssibÀ
,

560 
AtkRﬁe
 
rﬁe
);

563 
guöt
 
	`©k_obje˘_c⁄√˘_¥›îty_ch™ge_h™dÀr
 (
AtkObje˘
 *
ac˚ssibÀ
,

564 
AtkPr›îtyCh™geH™dÀr
 *
h™dÀr
);

565 
	`©k_obje˘_ªmove_¥›îty_ch™ge_h™dÀr
 (
AtkObje˘
 *
ac˚ssibÀ
,

566 
guöt
 
h™dÀr_id
);

568 
	`©k_obje˘_nŸify_°©e_ch™ge
 (
AtkObje˘
 *
ac˚ssibÀ
,

569 
AtkSèã
 
°©e
,

570 
gboﬁón
 
vÆue
);

571 
	`©k_obje˘_öôülize
 (
AtkObje˘
 *
ac˚ssibÀ
,

572 
gpoöãr
 
d©a
);

574 
G_CONST_RETURN
 
gch¨
* 
	`©k_rﬁe_gë_«me
 (
AtkRﬁe
 
rﬁe
);

575 
AtkRﬁe
 
	`©k_rﬁe_f‹_«me
 (c⁄° 
gch¨
 *
«me
);

579 
gboﬁón
 
	`©k_obje˘_add_ªœti⁄shù
 (
AtkObje˘
 *
obje˘
,

580 
AtkRñ©i⁄Ty≥
 
ªœti⁄shù
,

581 
AtkObje˘
 *
èrgë
);

582 
gboﬁón
 
	`©k_obje˘_ªmove_ªœti⁄shù
 (
AtkObje˘
 *
obje˘
,

583 
AtkRñ©i⁄Ty≥
 
ªœti⁄shù
,

584 
AtkObje˘
 *
èrgë
);

585 
G_CONST_RETURN
 
gch¨
* 
	`©k_rﬁe_gë_loˇlized_«me
 (
AtkRﬁe
 
rﬁe
);

647 
G_END_DECLS


	@/usr/include/atk-1.0/atk/atkobjectfactory.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_OBJECT_FACTORY_H__


25 
	#__ATK_OBJECT_FACTORY_H__


	)

27 
	~<glib-obje˘.h
>

28 
	~<©k/©kobje˘.h
>

30 
	gG_BEGIN_DECLS


32 
	#ATK_TYPE_OBJECT_FACTORY
 (
	`©k_obje˘_Á˘‹y_gë_ty≥
 ())

	)

33 
	#ATK_OBJECT_FACTORY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_OBJECT_FACTORY
, 
AtkObje˘Fa˘‹y
))

	)

34 
	#ATK_OBJECT_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_OBJECT_FACTORY
, 
AtkObje˘Fa˘‹yCœss
))

	)

35 
	#ATK_IS_OBJECT_FACTORY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_OBJECT_FACTORY
))

	)

36 
	#ATK_IS_OBJECT_FACTORY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_OBJECT_FACTORY
))

	)

37 
	#ATK_OBJECT_FACTORY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_OBJECT_FACTORY
, 
AtkObje˘Fa˘‹yCœss
))

	)

39 
_AtkObje˘Fa˘‹y
 
	tAtkObje˘Fa˘‹y
;

40 
_AtkObje˘Fa˘‹yCœss
 
	tAtkObje˘Fa˘‹yCœss
;

42 
	s_AtkObje˘Fa˘‹y


44 
GObje˘
 
	m∑ª¡
;

47 
	s_AtkObje˘Fa˘‹yCœss


49 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

51 
	mAtkObje˘
* (* 
	m¸óã_ac˚ssibÀ
Ë(
GObje˘
 *
	mobj
);

52 (* 
	mövÆid©e
Ë(
AtkObje˘Fa˘‹y
 *
	mÁ˘‹y
);

53 
GTy≥
 (* 
gë_ac˚ssibÀ_ty≥
) ();

55 
AtkFun˘i⁄
 
	m∑d1
;

56 
AtkFun˘i⁄
 
	m∑d2
;

59 
GTy≥
 
©k_obje˘_Á˘‹y_gë_ty≥
();

61 
AtkObje˘
* 
©k_obje˘_Á˘‹y_¸óã_ac˚ssibÀ
 (
AtkObje˘Fa˘‹y
 *
Á˘‹y
, 
GObje˘
 *
obj
);

62 
©k_obje˘_Á˘‹y_övÆid©e
 (
AtkObje˘Fa˘‹y
 *
Á˘‹y
);

63 
GTy≥
 
©k_obje˘_Á˘‹y_gë_ac˚ssibÀ_ty≥
 (
AtkObje˘Fa˘‹y
 *
Á˘‹y
);

65 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkregistry.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_REGISTRY_H__


25 
	#__ATK_REGISTRY_H__


	)

27 
	~<glib-obje˘.h
>

28 
	~"©kobje˘Á˘‹y.h
"

30 
	gG_BEGIN_DECLS


32 
	#ATK_TYPE_REGISTRY
 (
	`©k_ªgi°ry_gë_ty≥
 ())

	)

33 
	#ATK_REGISTRY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_REGISTRY
, 
AtkRegi°ry
))

	)

34 
	#ATK_REGISTRY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_REGISTRY
, 
AtkRegi°ryCœss
))

	)

35 
	#ATK_IS_REGISTRY
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_REGISTRY
))

	)

36 
	#ATK_IS_REGISTRY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_REGISTRY
))

	)

37 
	#ATK_REGISTRY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_REGISTRY
, 
AtkRegi°ryCœss
))

	)

39 
	s_AtkRegi°ry


41 
GObje˘
 
	m∑ª¡
;

42 
GHashTabÀ
 *
	mÁ˘‹y_ty≥_ªgi°ry
;

43 
GHashTabÀ
 *
	mÁ˘‹y_sögÀt⁄_ˇche
;

46 
	s_AtkRegi°ryCœss


48 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

51 
_AtkRegi°ry
 
	tAtkRegi°ry
;

52 
_AtkRegi°ryCœss
 
	tAtkRegi°ryCœss
;

55 
GTy≥
 
©k_ªgi°ry_gë_ty≥
 ();

56 
©k_ªgi°ry_£t_Á˘‹y_ty≥
 (
AtkRegi°ry
 *
ªgi°ry
,

57 
GTy≥
 
ty≥
,

58 
GTy≥
 
Á˘‹y_ty≥
);

59 
GTy≥
 
©k_ªgi°ry_gë_Á˘‹y_ty≥
 (
AtkRegi°ry
 *
ªgi°ry
,

60 
GTy≥
 
ty≥
);

61 
AtkObje˘Fa˘‹y
* 
©k_ªgi°ry_gë_Á˘‹y
 (
AtkRegi°ry
 *
ªgi°ry
,

62 
GTy≥
 
ty≥
);

64 
AtkRegi°ry
* 
©k_gë_deÁu…_ªgi°ry
 ();

66 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkrelation.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_RELATION_H__


25 
	#__ATK_RELATION_H__


	)

27 
	gG_BEGIN_DECLS


29 
	~<glib-obje˘.h
>

30 
	~<©k/©kªœti⁄ty≥.h
>

38 
	#ATK_TYPE_RELATION
 (
	`©k_ªœti⁄_gë_ty≥
 ())

	)

39 
	#ATK_RELATION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_RELATION
, 
AtkRñ©i⁄
))

	)

40 
	#ATK_RELATION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_RELATION
, 
AtkRñ©i⁄Cœss
))

	)

41 
	#ATK_IS_RELATION
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_RELATION
))

	)

42 
	#ATK_IS_RELATION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_RELATION
))

	)

43 
	#ATK_RELATION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_RELATION
, 
AtkRñ©i⁄Cœss
))

	)

45 
_AtkRñ©i⁄
 
	tAtkRñ©i⁄
;

46 
_AtkRñ©i⁄Cœss
 
	tAtkRñ©i⁄Cœss
;

48 
	s_AtkRñ©i⁄


50 
GObje˘
 
	m∑ª¡
;

52 
GPåAºay
 *
	mèrgë
;

53 
AtkRñ©i⁄Ty≥
 
	mªœti⁄shù
;

56 
	s_AtkRñ©i⁄Cœss


58 
GObje˘Cœss
 
	m∑ª¡
;

61 
GTy≥
 
©k_ªœti⁄_gë_ty≥
 ();

63 
AtkRñ©i⁄Ty≥
 
©k_ªœti⁄_ty≥_ªgi°î
 (c⁄° 
gch¨
 *
«me
);

64 
G_CONST_RETURN
 
gch¨
* 
©k_ªœti⁄_ty≥_gë_«me
 (
AtkRñ©i⁄Ty≥
 
ty≥
);

65 
AtkRñ©i⁄Ty≥
 
©k_ªœti⁄_ty≥_f‹_«me
 (c⁄° 
gch¨
 *
«me
);

71 
AtkRñ©i⁄
* 
©k_ªœti⁄_√w
 (
AtkObje˘
 **
èrgës
,

72 
göt
 
n_èrgës
,

73 
AtkRñ©i⁄Ty≥
 
ªœti⁄shù
);

77 
AtkRñ©i⁄Ty≥
 
©k_ªœti⁄_gë_ªœti⁄_ty≥
 (
AtkRñ©i⁄
 *
ªœti⁄
);

81 
GPåAºay
* 
©k_ªœti⁄_gë_èrgë
 (
AtkRñ©i⁄
 *
ªœti⁄
);

82 
©k_ªœti⁄_add_èrgë
 (
AtkRñ©i⁄
 *
ªœti⁄
,

83 
AtkObje˘
 *
èrgë
);

84 
gboﬁón
 
©k_ªœti⁄_ªmove_èrgë
 (
AtkRñ©i⁄
 *
ªœti⁄
,

85 
AtkObje˘
 *
èrgë
);

87 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkrelationset.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_RELATION_SET_H__


25 
	#__ATK_RELATION_SET_H__


	)

27 
	gG_BEGIN_DECLS


29 
	~<glib-obje˘.h
>

30 
	~<©k/©kobje˘.h
>

31 
	~<©k/©kªœti⁄.h
>

33 
	#ATK_TYPE_RELATION_SET
 (
	`©k_ªœti⁄_£t_gë_ty≥
 ())

	)

34 
	#ATK_RELATION_SET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_RELATION_SET
, 
AtkRñ©i⁄Së
))

	)

35 
	#ATK_RELATION_SET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_RELATION_SET
, 
AtkRñ©i⁄SëCœss
))

	)

36 
	#ATK_IS_RELATION_SET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_RELATION_SET
))

	)

37 
	#ATK_IS_RELATION_SET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_RELATION_SET
))

	)

38 
	#ATK_RELATION_SET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_RELATION_SET
, 
AtkRñ©i⁄SëCœss
))

	)

40 
_AtkRñ©i⁄SëCœss
 
	tAtkRñ©i⁄SëCœss
;

43 
	s_AtkRñ©i⁄Së


45 
GObje˘
 
	m∑ª¡
;

47 
GPåAºay
 *
	mªœti⁄s
;

50 
	s_AtkRñ©i⁄SëCœss


52 
GObje˘Cœss
 
	m∑ª¡
;

54 
AtkFun˘i⁄
 
	m∑d1
;

55 
AtkFun˘i⁄
 
	m∑d2
;

58 
GTy≥
 
©k_ªœti⁄_£t_gë_ty≥
 ();

60 
AtkRñ©i⁄Së
* 
©k_ªœti⁄_£t_√w
 ();

61 
gboﬁón
 
©k_ªœti⁄_£t_c⁄èös
 (
AtkRñ©i⁄Së
 *
£t
,

62 
AtkRñ©i⁄Ty≥
 
ªœti⁄shù
);

63 
©k_ªœti⁄_£t_ªmove
 (
AtkRñ©i⁄Së
 *
£t
,

64 
AtkRñ©i⁄
 *
ªœti⁄
);

65 
©k_ªœti⁄_£t_add
 (
AtkRñ©i⁄Së
 *
£t
,

66 
AtkRñ©i⁄
 *
ªœti⁄
);

67 
göt
 
©k_ªœti⁄_£t_gë_n_ªœti⁄s
 (
AtkRñ©i⁄Së
 *
£t
);

68 
AtkRñ©i⁄
* 
©k_ªœti⁄_£t_gë_ªœti⁄
 (
AtkRñ©i⁄Së
 *
£t
,

69 
göt
 
i
);

70 
AtkRñ©i⁄
* 
©k_ªœti⁄_£t_gë_ªœti⁄_by_ty≥
 (
AtkRñ©i⁄Së
 *
£t
,

71 
AtkRñ©i⁄Ty≥
 
ªœti⁄shù
);

72 
©k_ªœti⁄_£t_add_ªœti⁄_by_ty≥
 (
AtkRñ©i⁄Së
 *
£t
,

73 
AtkRñ©i⁄Ty≥
 
ªœti⁄shù
,

74 
AtkObje˘
 *
èrgë
);

76 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkrelationtype.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_RELATION_TYPE_H__


25 
	#__ATK_RELATION_TYPE_H__


	)

27 
	~<glib.h
>

29 
	gG_BEGIN_DECLS


60 
	mATK_RELATION_NULL
 = 0,

61 
	mATK_RELATION_CONTROLLED_BY
,

62 
	mATK_RELATION_CONTROLLER_FOR
,

63 
	mATK_RELATION_LABEL_FOR
,

64 
	mATK_RELATION_LABELLED_BY
,

65 
	mATK_RELATION_MEMBER_OF
,

66 
	mATK_RELATION_NODE_CHILD_OF
,

67 
	mATK_RELATION_FLOWS_TO
,

68 
	mATK_RELATION_FLOWS_FROM
,

69 
	mATK_RELATION_SUBWINDOW_OF
,

70 
	mATK_RELATION_EMBEDS
,

71 
	mATK_RELATION_EMBEDDED_BY
,

72 
	mATK_RELATION_POPUP_FOR
,

73 
	mATK_RELATION_PARENT_WINDOW_OF
,

74 
	mATK_RELATION_DESCRIBED_BY
,

75 
	mATK_RELATION_DESCRIPTION_FOR
,

76 
	mATK_RELATION_LAST_DEFINED


77 } 
	tAtkRñ©i⁄Ty≥
;

79 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkselection.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_SELECTION_H__


25 
	#__ATK_SELECTION_H__


	)

27 
	~<©k/©kobje˘.h
>

29 
	gG_BEGIN_DECLS


38 
	#ATK_TYPE_SELECTION
 (
	`©k_£À˘i⁄_gë_ty≥
 ())

	)

39 
	#ATK_IS_SELECTION
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_SELECTION
)

	)

40 
	#ATK_SELECTION
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_SELECTION
, 
AtkSñe˘i⁄
)

	)

41 
	#ATK_SELECTION_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_SELECTION
, 
AtkSñe˘i⁄IÁ˚
))

	)

43 #i‚de‡
_TYPEDEF_ATK_SELECTION_


44 
	#_TYPEDEF_ATK_SELECTION_


	)

45 
_AtkSñe˘i⁄
 
	tAtkSñe˘i⁄
;

47 
_AtkSñe˘i⁄IÁ˚
 
	tAtkSñe˘i⁄IÁ˚
;

49 
	s_AtkSñe˘i⁄IÁ˚


51 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

53 
gboﬁón
 (* 
add_£À˘i⁄
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
,

54 
göt
 
	mi
);

55 
gboﬁón
 (* 
˛ór_£À˘i⁄
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
);

56 
	mAtkObje˘
* (* 
	mªf_£À˘i⁄
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
,

57 
göt
 
	mi
);

58 
göt
 (* 
gë_£À˘i⁄_cou¡
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
);

59 
gboﬁón
 (* 
is_chûd_£À˘ed
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
,

60 
göt
 
	mi
);

61 
gboﬁón
 (* 
ªmove_£À˘i⁄
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
,

62 
göt
 
	mi
);

63 
gboﬁón
 (* 
£À˘_Æl_£À˘i⁄
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
);

67 (*
	m£À˘i⁄_ch™ged
Ë(
AtkSñe˘i⁄
 *
	m£À˘i⁄
);

69 
AtkFun˘i⁄
 
	m∑d1
;

70 
AtkFun˘i⁄
 
	m∑d2
;

73 
GTy≥
 
©k_£À˘i⁄_gë_ty≥
 ();

75 
gboﬁón
 
©k_£À˘i⁄_add_£À˘i⁄
 (
AtkSñe˘i⁄
 *
£À˘i⁄
,

76 
göt
 
i
);

78 
gboﬁón
 
©k_£À˘i⁄_˛ór_£À˘i⁄
 (
AtkSñe˘i⁄
 *
£À˘i⁄
);

80 
AtkObje˘
* 
©k_£À˘i⁄_ªf_£À˘i⁄
 (
AtkSñe˘i⁄
 *
£À˘i⁄
,

81 
göt
 
i
);

83 
göt
 
©k_£À˘i⁄_gë_£À˘i⁄_cou¡
 (
AtkSñe˘i⁄
 *
£À˘i⁄
);

85 
gboﬁón
 
©k_£À˘i⁄_is_chûd_£À˘ed
 (
AtkSñe˘i⁄
 *
£À˘i⁄
,

86 
göt
 
i
);

88 
gboﬁón
 
©k_£À˘i⁄_ªmove_£À˘i⁄
 (
AtkSñe˘i⁄
 *
£À˘i⁄
,

89 
göt
 
i
);

91 
gboﬁón
 
©k_£À˘i⁄_£À˘_Æl_£À˘i⁄
 (
AtkSñe˘i⁄
 *
£À˘i⁄
);

93 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkstate.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_STATE_H__


25 
	#__ATK_STATE_H__


	)

27 
	~<glib-obje˘.h
>

29 
	gG_BEGIN_DECLS


126 
	mATK_STATE_INVALID
,

127 
	mATK_STATE_ACTIVE
,

128 
	mATK_STATE_ARMED
,

129 
	mATK_STATE_BUSY
,

130 
	mATK_STATE_CHECKED
,

131 
	mATK_STATE_DEFUNCT
,

132 
	mATK_STATE_EDITABLE
,

133 
	mATK_STATE_ENABLED
,

134 
	mATK_STATE_EXPANDABLE
,

135 
	mATK_STATE_EXPANDED
,

136 
	mATK_STATE_FOCUSABLE
,

137 
	mATK_STATE_FOCUSED
,

138 
	mATK_STATE_HORIZONTAL
,

139 
	mATK_STATE_ICONIFIED
,

140 
	mATK_STATE_MODAL
,

141 
	mATK_STATE_MULTI_LINE
,

142 
	mATK_STATE_MULTISELECTABLE
,

143 
	mATK_STATE_OPAQUE
,

144 
	mATK_STATE_PRESSED
,

145 
	mATK_STATE_RESIZABLE
,

146 
	mATK_STATE_SELECTABLE
,

147 
	mATK_STATE_SELECTED
,

148 
	mATK_STATE_SENSITIVE
,

149 
	mATK_STATE_SHOWING
,

150 
	mATK_STATE_SINGLE_LINE
,

151 
	mATK_STATE_STALE
,

152 
	mATK_STATE_TRANSIENT
,

153 
	mATK_STATE_VERTICAL
,

154 
	mATK_STATE_VISIBLE
,

155 
	mATK_STATE_MANAGES_DESCENDANTS
,

156 
	mATK_STATE_INDETERMINATE
,

157 
	mATK_STATE_TRUNCATED
,

158 
	mATK_STATE_REQUIRED
,

159 
	mATK_STATE_INVALID_ENTRY
,

160 
	mATK_STATE_SUPPORTS_AUTOCOMPLETION
,

161 
	mATK_STATE_SELECTABLE_TEXT
,

162 
	mATK_STATE_DEFAULT
,

163 
	mATK_STATE_ANIMATED
,

164 
	mATK_STATE_VISITED
,

166 
	mATK_STATE_LAST_DEFINED


167 } 
	tAtkSèãTy≥
;

169 
guöt64
 
	tAtkSèã
;

171 
AtkSèãTy≥
 
©k_°©e_ty≥_ªgi°î
 (c⁄° 
gch¨
 *
«me
);

173 
G_CONST_RETURN
 
gch¨
* 
©k_°©e_ty≥_gë_«me
 (
AtkSèãTy≥
 
ty≥
);

174 
AtkSèãTy≥
 
©k_°©e_ty≥_f‹_«me
 (c⁄° 
gch¨
 *
«me
);

176 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkstateset.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_STATE_SET_H__


25 
	#__ATK_STATE_SET_H__


	)

27 
	~<glib-obje˘.h
>

28 
	~<©k/©kobje˘.h
>

29 
	~<©k/©k°©e.h
>

31 
	gG_BEGIN_DECLS


33 
	#ATK_TYPE_STATE_SET
 (
	`©k_°©e_£t_gë_ty≥
 ())

	)

34 
	#ATK_STATE_SET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_STATE_SET
, 
AtkSèãSë
))

	)

35 
	#ATK_STATE_SET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_STATE_SET
, 
AtkSèãSëCœss
))

	)

36 
	#ATK_IS_STATE_SET
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_STATE_SET
))

	)

37 
	#ATK_IS_STATE_SET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_STATE_SET
))

	)

38 
	#ATK_STATE_SET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_STATE_SET
, 
AtkSèãSëCœss
))

	)

40 
_AtkSèãSëCœss
 
	tAtkSèãSëCœss
;

43 
	s_AtkSèãSë


45 
GObje˘
 
	m∑ª¡
;

49 
	s_AtkSèãSëCœss


51 
GObje˘Cœss
 
	m∑ª¡
;

54 
GTy≥
 
©k_°©e_£t_gë_ty≥
 ();

56 
AtkSèãSë
* 
©k_°©e_£t_√w
 ();

57 
gboﬁón
 
©k_°©e_£t_is_em±y
 (
AtkSèãSë
 *
£t
);

58 
gboﬁón
 
©k_°©e_£t_add_°©e
 (
AtkSèãSë
 *
£t
,

59 
AtkSèãTy≥
 
ty≥
);

60 
©k_°©e_£t_add_°©es
 (
AtkSèãSë
 *
£t
,

61 
AtkSèãTy≥
 *
ty≥s
,

62 
göt
 
n_ty≥s
);

63 
©k_°©e_£t_˛ór_°©es
 (
AtkSèãSë
 *
£t
);

64 
gboﬁón
 
©k_°©e_£t_c⁄èös_°©e
 (
AtkSèãSë
 *
£t
,

65 
AtkSèãTy≥
 
ty≥
);

66 
gboﬁón
 
©k_°©e_£t_c⁄èös_°©es
 (
AtkSèãSë
 *
£t
,

67 
AtkSèãTy≥
 *
ty≥s
,

68 
göt
 
n_ty≥s
);

69 
gboﬁón
 
©k_°©e_£t_ªmove_°©e
 (
AtkSèãSë
 *
£t
,

70 
AtkSèãTy≥
 
ty≥
);

71 
AtkSèãSë
* 
©k_°©e_£t_™d_£ts
 (AtkSèãSë *
£t
,

72 
AtkSèãSë
 *
com∑ª_£t
);

73 
AtkSèãSë
* 
©k_°©e_£t_‹_£ts
 (AtkSèãSë *
£t
,

74 
AtkSèãSë
 *
com∑ª_£t
);

75 
AtkSèãSë
* 
©k_°©e_£t_x‹_£ts
 (AtkSèãSë *
£t
,

76 
AtkSèãSë
 *
com∑ª_£t
);

78 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkstreamablecontent.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_STREAMABLE_CONTENT_H__


25 
	#__ATK_STREAMABLE_CONTENT_H__


	)

27 
	~<©k/©kobje˘.h
>

29 
	gG_BEGIN_DECLS


31 
	#ATK_TYPE_STREAMABLE_CONTENT
 (
	`©k_°ªamabÀ_c⁄ã¡_gë_ty≥
 ())

	)

32 
	#ATK_IS_STREAMABLE_CONTENT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_STREAMABLE_CONTENT
)

	)

33 
	#ATK_STREAMABLE_CONTENT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_STREAMABLE_CONTENT
, 
AtkSåómabÀC⁄ã¡
)

	)

34 
	#ATK_STREAMABLE_CONTENT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_STREAMABLE_CONTENT
, 
AtkSåómabÀC⁄ã¡IÁ˚
))

	)

36 #i‚de‡
_TYPEDEF_ATK_STREAMABLE_CONTENT


37 
	#_TYPEDEF_ATK_STREAMABLE_CONTENT


	)

38 
_AtkSåómabÀC⁄ã¡
 
	tAtkSåómabÀC⁄ã¡
;

40 
_AtkSåómabÀC⁄ã¡IÁ˚
 
	tAtkSåómabÀC⁄ã¡IÁ˚
;

42 
	s_AtkSåómabÀC⁄ã¡IÁ˚


44 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

49 
göt
 (* 
gë_n_mime_ty≥s
Ë(
AtkSåómabÀC⁄ã¡
 *
	m°ªamabÀ
);

61 
G_CONST_RETURN
 
	mgch¨
* (* 
	mgë_mime_ty≥
Ë(
AtkSåómabÀC⁄ã¡
 *
	m°ªamabÀ
,

62 
göt
 
	mi
);

69 
	mGIOCh™√l
* (* 
	mgë_°ªam
Ë(
AtkSåómabÀC⁄ã¡
 *
	m°ªamabÀ
,

70 c⁄° 
gch¨
 *
	mmime_ty≥
);

83 
G_CONST_RETURN
 
	mgch¨
* (* 
	mgë_uri
Ë(
AtkSåómabÀC⁄ã¡
 *
	m°ªamabÀ
,

84 c⁄° 
gch¨
 *
	mmime_ty≥
);

87 
AtkFun˘i⁄
 
	m∑d1
;

88 
AtkFun˘i⁄
 
	m∑d2
;

89 
AtkFun˘i⁄
 
	m∑d3
;

91 
GTy≥
 
©k_°ªamabÀ_c⁄ã¡_gë_ty≥
 ();

93 
göt
 
©k_°ªamabÀ_c⁄ã¡_gë_n_mime_ty≥s
 (
AtkSåómabÀC⁄ã¡
 *
°ªamabÀ
);

95 
G_CONST_RETURN
 
gch¨
* 
©k_°ªamabÀ_c⁄ã¡_gë_mime_ty≥
 (
AtkSåómabÀC⁄ã¡
 *
°ªamabÀ
,

96 
göt
 
i
);

97 
GIOCh™√l
* 
©k_°ªamabÀ_c⁄ã¡_gë_°ªam
 (
AtkSåómabÀC⁄ã¡
 *
°ªamabÀ
,

98 c⁄° 
gch¨
 *
mime_ty≥
);

100 
gch¨
* 
©k_°ªamabÀ_c⁄ã¡_gë_uri
 (
AtkSåómabÀC⁄ã¡
 *
°ªamabÀ
,

101 c⁄° 
gch¨
 *
mime_ty≥
);

103 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atktable.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_TABLE_H__


25 
	#__ATK_TABLE_H__


	)

27 
	~<©k/©kobje˘.h
>

29 
	gG_BEGIN_DECLS


37 
	#ATK_TYPE_TABLE
 (
	`©k_èbÀ_gë_ty≥
 ())

	)

38 
	#ATK_IS_TABLE
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_TABLE
)

	)

39 
	#ATK_TABLE
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_TABLE
, 
AtkTabÀ
)

	)

40 
	#ATK_TABLE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_TABLE
, 
AtkTabÀIÁ˚
))

	)

42 #i‚de‡
_TYPEDEF_ATK_TABLE_


43 
	#_TYPEDEF_ATK_TABLE_


	)

44 
_AtkTabÀ
 
	tAtkTabÀ
;

46 
_AtkTabÀIÁ˚
 
	tAtkTabÀIÁ˚
;

48 
	s_AtkTabÀIÁ˚


50 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

52 
	mAtkObje˘
* (* 
	mªf_©
Ë(
AtkTabÀ
 *
	mèbÀ
,

53 
göt
 
	mrow
,

54 
göt
 
	mcﬁumn
);

55 
göt
 (* 
gë_ödex_©
Ë(
AtkTabÀ
 *
	mèbÀ
,

56 
göt
 
	mrow
,

57 
göt
 
	mcﬁumn
);

58 
göt
 (* 
gë_cﬁumn_©_ödex
Ë(
AtkTabÀ
 *
	mèbÀ
,

59 
göt
 
	mödex_
);

60 
göt
 (* 
gë_row_©_ödex
Ë(
AtkTabÀ
 *
	mèbÀ
,

61 
göt
 
	mödex_
);

62 
göt
 (* 
gë_n_cﬁumns
Ë(
AtkTabÀ
 *
	mèbÀ
);

63 
göt
 (* 
gë_n_rows
Ë(
AtkTabÀ
 *
	mèbÀ
);

64 
göt
 (* 
gë_cﬁumn_exã¡_©
Ë(
AtkTabÀ
 *
	mèbÀ
,

65 
göt
 
	mrow
,

66 
göt
 
	mcﬁumn
);

67 
göt
 (* 
gë_row_exã¡_©
Ë(
AtkTabÀ
 *
	mèbÀ
,

68 
göt
 
	mrow
,

69 
göt
 
	mcﬁumn
);

70 
	mAtkObje˘
*

71 (* 
	mgë_ˇ±i⁄
Ë(
AtkTabÀ
 *
	mèbÀ
);

72 
G_CONST_RETURN
 
	mgch¨
*

73 (* 
	mgë_cﬁumn_des¸ùti⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

74 
göt
 
	mcﬁumn
);

75 
	mAtkObje˘
* (* 
	mgë_cﬁumn_hódî
Ë(
AtkTabÀ
 *
	mèbÀ
,

76 
göt
 
	mcﬁumn
);

77 
G_CONST_RETURN
 
	mgch¨
*

78 (* 
	mgë_row_des¸ùti⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

79 
göt
 
	mrow
);

80 
	mAtkObje˘
* (* 
	mgë_row_hódî
Ë(
AtkTabÀ
 *
	mèbÀ
,

81 
göt
 
	mrow
);

82 
	mAtkObje˘
* (* 
	mgë_summ¨y
Ë(
AtkTabÀ
 *
	mèbÀ
);

83 (* 
	m£t_ˇ±i⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

84 
AtkObje˘
 *
	mˇ±i⁄
);

85 (* 
	m£t_cﬁumn_des¸ùti⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

86 
göt
 
	mcﬁumn
,

87 c⁄° 
gch¨
 *
	mdes¸ùti⁄
);

88 (* 
	m£t_cﬁumn_hódî
Ë(
AtkTabÀ
 *
	mèbÀ
,

89 
göt
 
	mcﬁumn
,

90 
AtkObje˘
 *
	mhódî
);

91 (* 
	m£t_row_des¸ùti⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

92 
göt
 
	mrow
,

93 c⁄° 
gch¨
 *
	mdes¸ùti⁄
);

94 (* 
	m£t_row_hódî
Ë(
AtkTabÀ
 *
	mèbÀ
,

95 
göt
 
	mrow
,

96 
AtkObje˘
 *
	mhódî
);

97 (* 
	m£t_summ¨y
Ë(
AtkTabÀ
 *
	mèbÀ
,

98 
AtkObje˘
 *
	mac˚ssibÀ
);

99 
göt
 (* 
gë_£À˘ed_cﬁumns
Ë(
AtkTabÀ
 *
	mèbÀ
,

100 
göt
 **
	m£À˘ed
);

101 
göt
 (* 
gë_£À˘ed_rows
Ë(
AtkTabÀ
 *
	mèbÀ
,

102 
göt
 **
	m£À˘ed
);

103 
gboﬁón
 (* 
is_cﬁumn_£À˘ed
Ë(
AtkTabÀ
 *
	mèbÀ
,

104 
göt
 
	mcﬁumn
);

105 
gboﬁón
 (* 
is_row_£À˘ed
Ë(
AtkTabÀ
 *
	mèbÀ
,

106 
göt
 
	mrow
);

107 
gboﬁón
 (* 
is_£À˘ed
Ë(
AtkTabÀ
 *
	mèbÀ
,

108 
göt
 
	mrow
,

109 
göt
 
	mcﬁumn
);

110 
gboﬁón
 (* 
add_row_£À˘i⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

111 
göt
 
	mrow
);

112 
gboﬁón
 (* 
ªmove_row_£À˘i⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

113 
göt
 
	mrow
);

114 
gboﬁón
 (* 
add_cﬁumn_£À˘i⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

115 
göt
 
	mcﬁumn
);

116 
gboﬁón
 (* 
ªmove_cﬁumn_£À˘i⁄
Ë(
AtkTabÀ
 *
	mèbÀ
,

117 
göt
 
	mcﬁumn
);

122 (* 
	mrow_ö£πed
Ë(
AtkTabÀ
 *
	mèbÀ
,

123 
göt
 
	mrow
,

124 
göt
 
	mnum_ö£πed
);

125 (* 
	mcﬁumn_ö£πed
Ë(
AtkTabÀ
 *
	mèbÀ
,

126 
göt
 
	mcﬁumn
,

127 
göt
 
	mnum_ö£πed
);

128 (* 
	mrow_dñëed
Ë(
AtkTabÀ
 *
	mèbÀ
,

129 
göt
 
	mrow
,

130 
göt
 
	mnum_dñëed
);

131 (* 
	mcﬁumn_dñëed
Ë(
AtkTabÀ
 *
	mèbÀ
,

132 
göt
 
	mcﬁumn
,

133 
göt
 
	mnum_dñëed
);

134 (* 
	mrow_ª‹dîed
Ë(
AtkTabÀ
 *
	mèbÀ
);

135 (* 
	mcﬁumn_ª‹dîed
Ë(
AtkTabÀ
 *
	mèbÀ
);

136 (* 
	mmodñ_ch™ged
Ë(
AtkTabÀ
 *
	mèbÀ
);

138 
AtkFun˘i⁄
 
	m∑d1
;

139 
AtkFun˘i⁄
 
	m∑d2
;

140 
AtkFun˘i⁄
 
	m∑d3
;

141 
AtkFun˘i⁄
 
	m∑d4
;

144 
GTy≥
 
©k_èbÀ_gë_ty≥
 ();

146 
AtkObje˘
* 
©k_èbÀ_ªf_©
 (
AtkTabÀ
 *
èbÀ
,

147 
göt
 
row
,

148 
göt
 
cﬁumn
);

149 
göt
 
©k_èbÀ_gë_ödex_©
 (
AtkTabÀ
 *
èbÀ
,

150 
göt
 
row
,

151 
göt
 
cﬁumn
);

152 
göt
 
©k_èbÀ_gë_cﬁumn_©_ödex
 (
AtkTabÀ
 *
èbÀ
,

153 
göt
 
ödex_
);

154 
göt
 
©k_èbÀ_gë_row_©_ödex
 (
AtkTabÀ
 *
èbÀ
,

155 
göt
 
ödex_
);

156 
göt
 
©k_èbÀ_gë_n_cﬁumns
 (
AtkTabÀ
 *
èbÀ
);

157 
göt
 
©k_èbÀ_gë_n_rows
 (
AtkTabÀ
 *
èbÀ
);

158 
göt
 
©k_èbÀ_gë_cﬁumn_exã¡_©
 (
AtkTabÀ
 *
èbÀ
,

159 
göt
 
row
,

160 
göt
 
cﬁumn
);

161 
göt
 
©k_èbÀ_gë_row_exã¡_©
 (
AtkTabÀ
 *
èbÀ
,

162 
göt
 
row
,

163 
göt
 
cﬁumn
);

164 
AtkObje˘
*

165 
©k_èbÀ_gë_ˇ±i⁄
 (
AtkTabÀ
 *
èbÀ
);

166 
G_CONST_RETURN
 
gch¨
*

167 
©k_èbÀ_gë_cﬁumn_des¸ùti⁄
 (
AtkTabÀ
 *
èbÀ
,

168 
göt
 
cﬁumn
);

169 
AtkObje˘
* 
©k_èbÀ_gë_cﬁumn_hódî
 (
AtkTabÀ
 *
èbÀ
,

170 
göt
 
cﬁumn
);

171 
G_CONST_RETURN
 
gch¨
*

172 
©k_èbÀ_gë_row_des¸ùti⁄
 (
AtkTabÀ
 *
èbÀ
,

173 
göt
 
row
);

174 
AtkObje˘
* 
©k_èbÀ_gë_row_hódî
 (
AtkTabÀ
 *
èbÀ
,

175 
göt
 
row
);

176 
AtkObje˘
* 
©k_èbÀ_gë_summ¨y
 (
AtkTabÀ
 *
èbÀ
);

177 
©k_èbÀ_£t_ˇ±i⁄
 (
AtkTabÀ
 *
èbÀ
,

178 
AtkObje˘
 *
ˇ±i⁄
);

179 
	g©k_èbÀ_£t_cﬁumn_des¸ùti⁄


180 (
AtkTabÀ
 *
	gèbÀ
,

181 
göt
 
	gcﬁumn
,

182 c⁄° 
gch¨
 *
	gdes¸ùti⁄
);

183 
©k_èbÀ_£t_cﬁumn_hódî
 (
AtkTabÀ
 *
èbÀ
,

184 
göt
 
cﬁumn
,

185 
AtkObje˘
 *
hódî
);

186 
©k_èbÀ_£t_row_des¸ùti⁄
 (
AtkTabÀ
 *
èbÀ
,

187 
göt
 
row
,

188 c⁄° 
gch¨
 *
des¸ùti⁄
);

189 
©k_èbÀ_£t_row_hódî
 (
AtkTabÀ
 *
èbÀ
,

190 
göt
 
row
,

191 
AtkObje˘
 *
hódî
);

192 
©k_èbÀ_£t_summ¨y
 (
AtkTabÀ
 *
èbÀ
,

193 
AtkObje˘
 *
ac˚ssibÀ
);

194 
göt
 
©k_èbÀ_gë_£À˘ed_cﬁumns
 (
AtkTabÀ
 *
èbÀ
,

195 
göt
 **
£À˘ed
);

196 
göt
 
©k_èbÀ_gë_£À˘ed_rows
 (
AtkTabÀ
 *
èbÀ
,

197 
göt
 **
£À˘ed
);

198 
gboﬁón
 
©k_èbÀ_is_cﬁumn_£À˘ed
 (
AtkTabÀ
 *
èbÀ
,

199 
göt
 
cﬁumn
);

200 
gboﬁón
 
©k_èbÀ_is_row_£À˘ed
 (
AtkTabÀ
 *
èbÀ
,

201 
göt
 
row
);

202 
gboﬁón
 
©k_èbÀ_is_£À˘ed
 (
AtkTabÀ
 *
èbÀ
,

203 
göt
 
row
,

204 
göt
 
cﬁumn
);

205 
gboﬁón
 
©k_èbÀ_add_row_£À˘i⁄
 (
AtkTabÀ
 *
èbÀ
,

206 
göt
 
row
);

207 
gboﬁón
 
©k_èbÀ_ªmove_row_£À˘i⁄
 (
AtkTabÀ
 *
èbÀ
,

208 
göt
 
row
);

209 
gboﬁón
 
©k_èbÀ_add_cﬁumn_£À˘i⁄
 (
AtkTabÀ
 *
èbÀ
,

210 
göt
 
cﬁumn
);

211 
gboﬁón
 
	g©k_èbÀ_ªmove_cﬁumn_£À˘i⁄


212 (
AtkTabÀ
 *
	gèbÀ
,

213 
göt
 
	gcﬁumn
);

215 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atktext.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_TEXT_H__


25 
	#__ATK_TEXT_H__


	)

27 
	~<glib-obje˘.h
>

28 
	~<©k/©kobje˘.h
>

29 
	~<©k/©kutû.h
>

31 
G_BEGIN_DECLS


69 
	mATK_TEXT_ATTR_INVALID
 = 0,

70 
	mATK_TEXT_ATTR_LEFT_MARGIN
,

71 
	mATK_TEXT_ATTR_RIGHT_MARGIN
,

72 
	mATK_TEXT_ATTR_INDENT
,

73 
	mATK_TEXT_ATTR_INVISIBLE
,

74 
	mATK_TEXT_ATTR_EDITABLE
,

75 
	mATK_TEXT_ATTR_PIXELS_ABOVE_LINES
,

76 
	mATK_TEXT_ATTR_PIXELS_BELOW_LINES
,

77 
	mATK_TEXT_ATTR_PIXELS_INSIDE_WRAP
,

78 
	mATK_TEXT_ATTR_BG_FULL_HEIGHT
,

79 
	mATK_TEXT_ATTR_RISE
,

80 
	mATK_TEXT_ATTR_UNDERLINE
,

81 
	mATK_TEXT_ATTR_STRIKETHROUGH
,

82 
	mATK_TEXT_ATTR_SIZE
,

83 
	mATK_TEXT_ATTR_SCALE
,

84 
	mATK_TEXT_ATTR_WEIGHT
,

85 
	mATK_TEXT_ATTR_LANGUAGE
,

86 
	mATK_TEXT_ATTR_FAMILY_NAME
,

87 
	mATK_TEXT_ATTR_BG_COLOR
,

88 
	mATK_TEXT_ATTR_FG_COLOR
,

89 
	mATK_TEXT_ATTR_BG_STIPPLE
,

90 
	mATK_TEXT_ATTR_FG_STIPPLE
,

91 
	mATK_TEXT_ATTR_WRAP_MODE
,

92 
	mATK_TEXT_ATTR_DIRECTION
,

93 
	mATK_TEXT_ATTR_JUSTIFICATION
,

94 
	mATK_TEXT_ATTR_STRETCH
,

95 
	mATK_TEXT_ATTR_VARIANT
,

96 
	mATK_TEXT_ATTR_STYLE
,

97 
	mATK_TEXT_ATTR_LAST_DEFINED


98 } 
	tAtkTextAâribuã
;

100 
AtkTextAâribuã
 
©k_ãxt_©åibuã_ªgi°î
 (c⁄° 
gch¨
 *
«me
);

103 
	#ATK_TYPE_TEXT
 (
	`©k_ãxt_gë_ty≥
 ())

	)

104 
	#ATK_IS_TEXT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_TEXT
)

	)

105 
	#ATK_TEXT
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_TEXT
, 
AtkText
)

	)

106 
	#ATK_TEXT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_TEXT
, 
AtkTextIÁ˚
))

	)

108 #i‚de‡
_TYPEDEF_ATK_TEXT_


109 
	#_TYPEDEF_ATK_TEXT_


	)

110 
_AtkText
 
	tAtkText
;

112 
_AtkTextIÁ˚
 
	tAtkTextIÁ˚
;

131 
	mATK_TEXT_BOUNDARY_CHAR
,

132 
	mATK_TEXT_BOUNDARY_WORD_START
,

133 
	mATK_TEXT_BOUNDARY_WORD_END
,

134 
	mATK_TEXT_BOUNDARY_SENTENCE_START
,

135 
	mATK_TEXT_BOUNDARY_SENTENCE_END
,

136 
	mATK_TEXT_BOUNDARY_LINE_START
,

137 
	mATK_TEXT_BOUNDARY_LINE_END


138 } 
	tAtkTextBound¨y
;

150 
_AtkTextRe˘™gÀ
 
	tAtkTextRe˘™gÀ
;

152 
	s_AtkTextRe˘™gÀ
 {

153 
göt
 
	mx
;

154 
göt
 
	my
;

155 
göt
 
	mwidth
;

156 
göt
 
	mheight
;

168 
_AtkTextR™ge
 
	tAtkTextR™ge
;

170 
	s_AtkTextR™ge
 {

171 
AtkTextRe˘™gÀ
 
	mbounds
;

172 
göt
 
	m°¨t_off£t
;

173 
göt
 
	míd_off£t
;

174 
gch¨
* 
	mc⁄ã¡
;

187 
	mATK_TEXT_CLIP_NONE
,

188 
	mATK_TEXT_CLIP_MIN
,

189 
	mATK_TEXT_CLIP_MAX
,

190 
	mATK_TEXT_CLIP_BOTH


191 } 
	tAtkTextClùTy≥
;

193 
	s_AtkTextIÁ˚


195 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

197 
	mgch¨
* (* 
	mgë_ãxt
Ë(
AtkText
 *
	mãxt
,

198 
göt
 
	m°¨t_off£t
,

199 
göt
 
	míd_off£t
);

200 
	mgch¨
* (* 
	mgë_ãxt_a·î_off£t
Ë(
AtkText
 *
	mãxt
,

201 
göt
 
	moff£t
,

202 
AtkTextBound¨y
 
	mbound¨y_ty≥
,

203 
göt
 *
	m°¨t_off£t
,

204 
göt
 *
	míd_off£t
);

205 
	mgch¨
* (* 
	mgë_ãxt_©_off£t
Ë(
AtkText
 *
	mãxt
,

206 
göt
 
	moff£t
,

207 
AtkTextBound¨y
 
	mbound¨y_ty≥
,

208 
göt
 *
	m°¨t_off£t
,

209 
göt
 *
	míd_off£t
);

210 
gunich¨
 (* 
gë_ch¨a˘î_©_off£t
Ë(
AtkText
 *
	mãxt
,

211 
göt
 
	moff£t
);

212 
	mgch¨
* (* 
	mgë_ãxt_bef‹e_off£t
Ë(
AtkText
 *
	mãxt
,

213 
göt
 
	moff£t
,

214 
AtkTextBound¨y
 
	mbound¨y_ty≥
,

215 
göt
 *
	m°¨t_off£t
,

216 
göt
 *
	míd_off£t
);

217 
göt
 (* 
gë_ˇªt_off£t
Ë(
AtkText
 *
	mãxt
);

218 
	mAtkAâribuãSë
* (* 
	mgë_run_©åibuãs
Ë(
AtkText
 *
	mãxt
,

219 
göt
 
	moff£t
,

220 
göt
 *
	m°¨t_off£t
,

221 
göt
 *
	míd_off£t
);

222 
	mAtkAâribuãSë
* (* 
	mgë_deÁu…_©åibuãs
Ë(
AtkText
 *
	mãxt
);

223 (* 
	mgë_ch¨a˘î_exã¡s
Ë(
AtkText
 *
	mãxt
,

224 
göt
 
	moff£t
,

225 
göt
 *
	mx
,

226 
göt
 *
	my
,

227 
göt
 *
	mwidth
,

228 
göt
 *
	mheight
,

229 
AtkCo‹dTy≥
 
	mco‹ds
);

230 
göt
 (* 
gë_ch¨a˘î_cou¡
Ë(
AtkText
 *
	mãxt
);

231 
göt
 (* 
gë_off£t_©_poöt
Ë(
AtkText
 *
	mãxt
,

232 
göt
 
	mx
,

233 
göt
 
	my
,

234 
AtkCo‹dTy≥
 
	mco‹ds
);

235 
göt
 (* 
gë_n_£À˘i⁄s
Ë(
AtkText
 *
	mãxt
);

236 
	mgch¨
* (* 
	mgë_£À˘i⁄
Ë(
AtkText
 *
	mãxt
,

237 
göt
 
	m£À˘i⁄_num
,

238 
göt
 *
	m°¨t_off£t
,

239 
göt
 *
	míd_off£t
);

240 
gboﬁón
 (* 
add_£À˘i⁄
Ë(
AtkText
 *
	mãxt
,

241 
göt
 
	m°¨t_off£t
,

242 
göt
 
	míd_off£t
);

243 
gboﬁón
 (* 
ªmove_£À˘i⁄
Ë(
AtkText
 *
	mãxt
,

244 
göt
 
	m£À˘i⁄_num
);

245 
gboﬁón
 (* 
£t_£À˘i⁄
Ë(
AtkText
 *
	mãxt
,

246 
göt
 
	m£À˘i⁄_num
,

247 
göt
 
	m°¨t_off£t
,

248 
göt
 
	míd_off£t
);

249 
gboﬁón
 (* 
£t_ˇªt_off£t
Ë(
AtkText
 *
	mãxt
,

250 
göt
 
	moff£t
);

255 (* 
	mãxt_ch™ged
Ë(
AtkText
 *
	mãxt
,

256 
göt
 
	mposôi⁄
,

257 
göt
 
	mÀngth
);

258 (* 
	mãxt_ˇªt_moved
Ë(
AtkText
 *
	mãxt
,

259 
göt
 
	mloˇti⁄
);

260 (* 
	mãxt_£À˘i⁄_ch™ged
Ë(
AtkText
 *
	mãxt
);

262 (* 
	mãxt_©åibuãs_ch™ged
Ë(
AtkText
 *
	mãxt
);

265 (* 
	mgë_ønge_exã¡s
Ë(
AtkText
 *
	mãxt
,

266 
göt
 
	m°¨t_off£t
,

267 
göt
 
	míd_off£t
,

268 
AtkCo‹dTy≥
 
	mco‹d_ty≥
,

269 
AtkTextRe˘™gÀ
 *
	mª˘
);

271 
	mAtkTextR™ge
** (* 
	mgë_bounded_ønges
Ë(
AtkText
 *
	mãxt
,

272 
AtkTextRe˘™gÀ
 *
	mª˘
,

273 
AtkCo‹dTy≥
 
	mco‹d_ty≥
,

274 
AtkTextClùTy≥
 
	mx_˛ù_ty≥
,

275 
AtkTextClùTy≥
 
	my_˛ù_ty≥
);

278 
AtkFun˘i⁄
 
	m∑d4
;

281 
GTy≥
 
©k_ãxt_gë_ty≥
 ();

291 
gch¨
* 
©k_ãxt_gë_ãxt
 (
AtkText
 *
ãxt
,

292 
göt
 
°¨t_off£t
,

293 
göt
 
íd_off£t
);

294 
gunich¨
 
©k_ãxt_gë_ch¨a˘î_©_off£t
 (
AtkText
 *
ãxt
,

295 
göt
 
off£t
);

296 
gch¨
* 
©k_ãxt_gë_ãxt_a·î_off£t
 (
AtkText
 *
ãxt
,

297 
göt
 
off£t
,

298 
AtkTextBound¨y
 
bound¨y_ty≥
,

299 
göt
 *
°¨t_off£t
,

300 
göt
 *
íd_off£t
);

301 
gch¨
* 
©k_ãxt_gë_ãxt_©_off£t
 (
AtkText
 *
ãxt
,

302 
göt
 
off£t
,

303 
AtkTextBound¨y
 
bound¨y_ty≥
,

304 
göt
 *
°¨t_off£t
,

305 
göt
 *
íd_off£t
);

306 
gch¨
* 
©k_ãxt_gë_ãxt_bef‹e_off£t
 (
AtkText
 *
ãxt
,

307 
göt
 
off£t
,

308 
AtkTextBound¨y
 
bound¨y_ty≥
,

309 
göt
 *
°¨t_off£t
,

310 
göt
 *
íd_off£t
);

311 
göt
 
©k_ãxt_gë_ˇªt_off£t
 (
AtkText
 *
ãxt
);

312 
©k_ãxt_gë_ch¨a˘î_exã¡s
 (
AtkText
 *
ãxt
,

313 
göt
 
off£t
,

314 
göt
 *
x
,

315 
göt
 *
y
,

316 
göt
 *
width
,

317 
göt
 *
height
,

318 
AtkCo‹dTy≥
 
co‹ds
);

319 
AtkAâribuãSë
* 
©k_ãxt_gë_run_©åibuãs
 (
AtkText
 *
ãxt
,

320 
göt
 
off£t
,

321 
göt
 *
°¨t_off£t
,

322 
göt
 *
íd_off£t
);

323 
AtkAâribuãSë
* 
©k_ãxt_gë_deÁu…_©åibuãs
 (
AtkText
 *
ãxt
);

324 
göt
 
©k_ãxt_gë_ch¨a˘î_cou¡
 (
AtkText
 *
ãxt
);

325 
göt
 
©k_ãxt_gë_off£t_©_poöt
 (
AtkText
 *
ãxt
,

326 
göt
 
x
,

327 
göt
 
y
,

328 
AtkCo‹dTy≥
 
co‹ds
);

329 
göt
 
©k_ãxt_gë_n_£À˘i⁄s
 (
AtkText
 *
ãxt
);

330 
gch¨
* 
©k_ãxt_gë_£À˘i⁄
 (
AtkText
 *
ãxt
,

331 
göt
 
£À˘i⁄_num
,

332 
göt
 *
°¨t_off£t
,

333 
göt
 *
íd_off£t
);

334 
gboﬁón
 
©k_ãxt_add_£À˘i⁄
 (
AtkText
 *
ãxt
,

335 
göt
 
°¨t_off£t
,

336 
göt
 
íd_off£t
);

337 
gboﬁón
 
©k_ãxt_ªmove_£À˘i⁄
 (
AtkText
 *
ãxt
,

338 
göt
 
£À˘i⁄_num
);

339 
gboﬁón
 
©k_ãxt_£t_£À˘i⁄
 (
AtkText
 *
ãxt
,

340 
göt
 
£À˘i⁄_num
,

341 
göt
 
°¨t_off£t
,

342 
göt
 
íd_off£t
);

343 
gboﬁón
 
©k_ãxt_£t_ˇªt_off£t
 (
AtkText
 *
ãxt
,

344 
göt
 
off£t
);

345 
©k_ãxt_gë_ønge_exã¡s
 (
AtkText
 *
ãxt
,

347 
göt
 
°¨t_off£t
,

348 
göt
 
íd_off£t
,

349 
AtkCo‹dTy≥
 
co‹d_ty≥
,

350 
AtkTextRe˘™gÀ
 *
ª˘
);

351 
AtkTextR™ge
** 
©k_ãxt_gë_bounded_ønges
 (
AtkText
 *
ãxt
,

352 
AtkTextRe˘™gÀ
 *
ª˘
,

353 
AtkCo‹dTy≥
 
co‹d_ty≥
,

354 
AtkTextClùTy≥
 
x_˛ù_ty≥
,

355 
AtkTextClùTy≥
 
y_˛ù_ty≥
);

356 
©k_ãxt_‰ì_ønges
 (
AtkTextR™ge
 **
ønges
);

357 
©k_©åibuã_£t_‰ì
 (
AtkAâribuãSë
 *
©åib_£t
);

358 
G_CONST_RETURN
 
gch¨
* 
©k_ãxt_©åibuã_gë_«me
 (
AtkTextAâribuã
 
©å
);

359 
AtkTextAâribuã
 
©k_ãxt_©åibuã_f‹_«me
 (c⁄° 
gch¨
 *
«me
);

360 
G_CONST_RETURN
 
gch¨
* 
©k_ãxt_©åibuã_gë_vÆue
 (
AtkTextAâribuã
 
©å
,

361 
göt
 
ödex_
);

363 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkutil.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_UTIL_H__


25 
	#__ATK_UTIL_H__


	)

27 
	~<©k/©kobje˘.h
>

29 
	gG_BEGIN_DECLS


31 
	#ATK_TYPE_UTIL
 (
	`©k_utû_gë_ty≥
 ())

	)

32 
	#ATK_IS_UTIL
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_UTIL
)

	)

33 
	#ATK_UTIL
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_UTIL
, 
AtkUtû
)

	)

34 
	#ATK_UTIL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
ATK_TYPE_UTIL
, 
AtkUtûCœss
))

	)

35 
	#ATK_IS_UTIL_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
ATK_TYPE_UTIL
))

	)

36 
	#ATK_UTIL_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
ATK_TYPE_UTIL
, 
AtkUtûCœss
))

	)

39 #i‚de‡
_TYPEDEF_ATK_UTIL_


40 
	#_TYPEDEF_ATK_UTIL_


	)

41 
_AtkUtû
 
	tAtkUtû
;

42 
_AtkUtûCœss
 
	tAtkUtûCœss
;

43 
_AtkKeyEvítSåu˘
 
	tAtkKeyEvítSåu˘
;

59 (*
	tAtkEvítLi°íî
Ë(
	tAtkObje˘
* 
	tobj
);

69 (*
	tAtkEvítLi°íîInô
) ();

86 
	$göt
 (*
	tAtkKeySno›Func
Ë(
	tAtkKeyEvítSåu˘
 *
	tevít
,

87 
	tgpoöãr
 
	tfunc_d©a
);

110 
	s_AtkKeyEvítSåu˘
 {

111 
göt
 
ty≥
;

112 
guöt
 
°©e
;

113 
guöt
 
keyvÆ
;

114 
göt
 
Àngth
;

115 
gch¨
 *
°rög
;

116 
guöt16
 
keycode
;

117 
guöt32
 
time°amp
;

130 
ATK_KEY_EVENT_PRESS
,

131 
ATK_KEY_EVENT_RELEASE
,

132 
ATK_KEY_EVENT_LAST_DEFINED


133 } 
	tAtkKeyEvítTy≥
;

135 
	s_AtkUtû


137 
GObje˘
 
∑ª¡
;

140 
	s_AtkUtûCœss


142 
GObje˘Cœss
 
∑ª¡
;

143 
	`guöt
 (* 
add_globÆ_evít_li°íî
Ë(
GSig«lEmissi⁄Hook
 
li°íî
,

144 c⁄° 
gch¨
 *
evít_ty≥
);

145 (* 
ªmove_globÆ_evít_li°íî
Ë(
guöt
 
li°íî_id
);

146 
	`guöt
 (* 
add_key_evít_li°íî
Ë(
AtkKeySno›Func
 
li°íî
,

147 
gpoöãr
 
d©a
);

148 (* 
ªmove_key_evít_li°íî
Ë(
guöt
 
li°íî_id
);

149 
AtkObje˘
* (* 
gë_roŸ
) ();

150 
G_CONST_RETURN
 
gch¨
* (* 
gë_toﬁkô_«me
) ();

151 
G_CONST_RETURN
 
gch¨
* (* 
gë_toﬁkô_vîsi⁄
) ();

153 
GTy≥
 
	`©k_utû_gë_ty≥
 ();

165 
ATK_XY_SCREEN
,

166 
ATK_XY_WINDOW


167 }
	tAtkCo‹dTy≥
;

173 
guöt
 
	`©k_add_focus_åackî
 (
AtkEvítLi°íî
 
focus_åackî
);

179 
	`©k_ªmove_focus_åackî
 (
guöt
 
åackî_id
);

191 
	`©k_focus_åackî_öô
 (
AtkEvítLi°íîInô
 
öô
);

197 
	`©k_focus_åackî_nŸify
 (
AtkObje˘
 *
obje˘
);

203 
guöt
 
	`©k_add_globÆ_evít_li°íî
 (
GSig«lEmissi⁄Hook
 
li°íî
,

204 c⁄° 
gch¨
 *
evít_ty≥
);

209 
	`©k_ªmove_globÆ_evít_li°íî
 (
guöt
 
li°íî_id
);

215 
guöt
 
	`©k_add_key_evít_li°íî
 (
AtkKeySno›Func
 
li°íî
, 
gpoöãr
 
d©a
);

220 
	`©k_ªmove_key_evít_li°íî
 (
guöt
 
li°íî_id
);

225 
AtkObje˘
* 
	`©k_gë_roŸ
();

227 
AtkObje˘
* 
	`©k_gë_focus_obje˘
 ();

232 
G_CONST_RETURN
 
gch¨
 *
	`©k_gë_toﬁkô_«me
 ();

237 
G_CONST_RETURN
 
gch¨
 *
	`©k_gë_toﬁkô_vîsi⁄
 ();

242 
G_CONST_RETURN
 
gch¨
 *
	`©k_gë_vîsi⁄
 ();

258 
	#ATK_DEFINE_TYPE
(
TN
, 
t_n
, 
T_P
Ë
	`ATK_DEFINE_TYPE_EXTENDED
 (TN,Å_n, T_P, 0, {
	}
})

	)

259 
	#ATK_DEFINE_TYPE_WITH_CODE
(
TN
, 
t_n
, 
T_P
, 
_C_
Ë
	`_ATK_DEFINE_TYPE_EXTENDED_BEGIN
 (TN,Å_n, T_P, 0Ë{_C_;} 
	`_ATK_DEFINE_TYPE_EXTENDED_END
()

	)

260 
	#ATK_DEFINE_ABSTRACT_TYPE
(
TN
, 
t_n
, 
T_P
Ë
	`ATK_DEFINE_TYPE_EXTENDED
 (TN,Å_n, T_P, 
G_TYPE_FLAG_ABSTRACT
, {})

	)

261 
	#ATK_DEFINE_ABSTRACT_TYPE_WITH_CODE
(
TN
, 
t_n
, 
T_P
, 
_C_
Ë
	`_ATK_DEFINE_TYPE_EXTENDED_BEGIN
 (TN,Å_n, T_P, 
G_TYPE_FLAG_ABSTRACT
Ë{_C_;} 
	`_ATK_DEFINE_TYPE_EXTENDED_END
()

	)

262 
	#ATK_DEFINE_TYPE_EXTENDED
(
TN
, 
t_n
, 
T_P
, 
_f_
, 
_C_
Ë
	`_ATK_DEFINE_TYPE_EXTENDED_BEGIN
 (TN,Å_n, T_P, _f_Ë{_C_;} 
	`_ATK_DEFINE_TYPE_EXTENDED_END
()

	)

264 
	#_ATK_DEFINE_TYPE_EXTENDED_BEGIN
(
Ty≥Name
, 
ty≥_«me
, 
TYPE
, 
Êags
) \

266 
ty≥_«me
##
	`_öô
 (
Ty≥Name
 *
£lf
); \

267 
ty≥_«me
##
	`_˛ass_öô
 (
Ty≥Name
##
Cœss
 *
kœss
); \

268 
gpoöãr
 
ty≥_«me
##
_∑ª¡_˛ass
 = 
NULL
; \

269 
ty≥_«me
##
	`_˛ass_öã∫_öô
 (
gpoöãr
 
kœss
) \

271 
ty≥_«me
##
_∑ª¡_˛ass
 = 
	`g_ty≥_˛ass_≥ek_∑ª¡
 (
kœss
); \

272 
ty≥_«me
##
	`_˛ass_öô
 ((
Ty≥Name
##
Cœss
*Ë
kœss
); \

275 
GTy≥
 \

276 
ty≥_«me
##
	`_gë_ty≥
 () \

278 vﬁ©ûê
gsize
 
g_deföe_ty≥_id__vﬁ©ûe
 = 0; \

279 i‡(
	`g_⁄˚_öô_íãr
 (&
g_deföe_ty≥_id__vﬁ©ûe
)) \

281 
AtkObje˘Fa˘‹y
 *
Á˘‹y
; \

282 
GTy≥
 
dîived_ty≥
; \

283 
GTy≥Quîy
 
quîy
; \

284 
GTy≥
 
dîived_©k_ty≥
; \

285 
GTy≥
 
g_deföe_ty≥_id
; \

288 
dîived_ty≥
 = 
	`g_ty≥_∑ª¡
 (
TYPE
); \

289 
Á˘‹y
 = 
	`©k_ªgi°ry_gë_Á˘‹y
 (
	`©k_gë_deÁu…_ªgi°ry
 (), \

290 
dîived_ty≥
); \

291 
dîived_©k_ty≥
 = 
	`©k_obje˘_Á˘‹y_gë_ac˚ssibÀ_ty≥
 (
Á˘‹y
); \

292 
	`g_ty≥_quîy
 (
dîived_©k_ty≥
, &
quîy
); \

294 
g_deföe_ty≥_id
 = \

295 
	`g_ty≥_ªgi°î_°©ic_sim∂e
 (
dîived_©k_ty≥
, \

296 
	`g_öã∫_°©ic_°rög
 (#TypeName), \

297 
quîy
.
˛ass_size
, \

298 (
GCœssInôFunc
Ë
ty≥_«me
##
_˛ass_öã∫_öô
, \

299 
quîy
.
ö°™˚_size
, \

300 (
GIn°™˚InôFunc
Ë
ty≥_«me
##
_öô
, \

301 (
GTy≥Fœgs
Ë
Êags
); \

302 {

	)

303 
	#_ATK_DEFINE_TYPE_EXTENDED_END
() \

306 
	`g_⁄˚_öô_Àave
 (&
g_deföe_ty≥_id__vﬁ©ûe
, 
g_deföe_ty≥_id
); \

308  
g_deföe_ty≥_id__vﬁ©ûe
; \

309 }

	)

311 
	gG_END_DECLS


	@/usr/include/atk-1.0/atk/atkvalue.h

20 #i‡
deföed
(
ATK_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
__ATK_H_INSIDE__
Ë&& !deföed (
ATK_COMPILATION
)

24 #i‚de‡
__ATK_VALUE_H__


25 
	#__ATK_VALUE_H__


	)

27 
	~<©k/©kobje˘.h
>

29 
	gG_BEGIN_DECLS


39 
	#ATK_TYPE_VALUE
 (
	`©k_vÆue_gë_ty≥
 ())

	)

40 
	#ATK_IS_VALUE
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
ATK_TYPE_VALUE
)

	)

41 
	#ATK_VALUE
(
obj
Ë
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
ATK_TYPE_VALUE
, 
AtkVÆue
)

	)

42 
	#ATK_VALUE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
ATK_TYPE_VALUE
, 
AtkVÆueIÁ˚
))

	)

44 #i‚de‡
_TYPEDEF_ATK_VALUE_


45 
	#_TYPEDEF_ATK_VALUE__


	)

46 
_AtkVÆue
 
	tAtkVÆue
;

48 
_AtkVÆueIÁ˚
 
	tAtkVÆueIÁ˚
;

50 
	s_AtkVÆueIÁ˚


52 
GTy≥I¡îÁ˚
 
	m∑ª¡
;

54 (* 
	mgë_cuºít_vÆue
Ë(
AtkVÆue
 *
	mobj
,

55 
GVÆue
 *
	mvÆue
);

56 (* 
	mgë_maximum_vÆue
Ë(
AtkVÆue
 *
	mobj
,

57 
GVÆue
 *
	mvÆue
);

58 (* 
	mgë_möimum_vÆue
Ë(
AtkVÆue
 *
	mobj
,

59 
GVÆue
 *
	mvÆue
);

60 
gboﬁón
 (* 
£t_cuºít_vÆue
Ë(
AtkVÆue
 *
	mobj
,

61 c⁄° 
GVÆue
 *
	mvÆue
);

62 (* 
	mgë_möimum_ö¸emít
Ë(
AtkVÆue
 *
	mobj
,

63 
GVÆue
 *
	mvÆue
);

64 
AtkFun˘i⁄
 
	m∑d1
;

67 
GTy≥
 
©k_vÆue_gë_ty≥
 ();

69 
©k_vÆue_gë_cuºít_vÆue
 (
AtkVÆue
 *
obj
,

70 
GVÆue
 *
vÆue
);

73 
©k_vÆue_gë_maximum_vÆue
 (
AtkVÆue
 *
obj
,

74 
GVÆue
 *
vÆue
);

76 
©k_vÆue_gë_möimum_vÆue
 (
AtkVÆue
 *
obj
,

77 
GVÆue
 *
vÆue
);

79 
gboﬁón
 
©k_vÆue_£t_cuºít_vÆue
 (
AtkVÆue
 *
obj
,

80 c⁄° 
GVÆue
 *
vÆue
);

82 
©k_vÆue_gë_möimum_ö¸emít
 (
AtkVÆue
 *
obj
,

83 
GVÆue
 *
vÆue
);

91 
	gG_END_DECLS


	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/bonobo-activation-2.0/bonobo-activation/Bonobo_Activation_types.h

5 #i‚de‡
B⁄obo_A˘iv©i⁄_ty≥s_H


6 
	#B⁄obo_A˘iv©i⁄_ty≥s_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

18 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

19 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

20 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

21 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

22 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

23 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

24 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

25 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 '_'

	)

26 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'A'

	)

27 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 'c'

	)

28 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 't'

	)

29 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_10
 'i'

	)

30 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_11
 'v'

	)

31 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_12
 'a'

	)

32 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_13
 't'

	)

33 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_14
 'i'

	)

34 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_15
 'o'

	)

35 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_16
 'n'

	)

36 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_17
 '_'

	)

37 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_18
 't'

	)

38 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_19
 'y'

	)

39 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_20
 'p'

	)

40 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_21
 'e'

	)

41 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_22
 's'

	)

42 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

43 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

44 °ru˘ { 
CORBA_unsig√d_l⁄g
 
_maximum
, 
_Àngth
; 
CORBA_°rög
* 
_buf„r
; 
CORBA_boﬁón
 
_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

46 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

47 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'B'

	)

48 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

49 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'n'

	)

50 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'o'

	)

51 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'b'

	)

52 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 'o'

	)

53 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 '_'

	)

54 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'A'

	)

55 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 'c'

	)

56 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 't'

	)

57 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_10
 'i'

	)

58 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_11
 'v'

	)

59 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_12
 'a'

	)

60 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_13
 't'

	)

61 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_14
 'i'

	)

62 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_15
 'o'

	)

63 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_16
 'n'

	)

64 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_17
 '_'

	)

65 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_18
 't'

	)

66 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_19
 'y'

	)

67 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_20
 'p'

	)

68 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_21
 'e'

	)

69 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_22
 's'

	)

70 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


75 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

76 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

78 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

79 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

80 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

81 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

83 #i‡!
deföed
(
_B⁄obo_SåögLi°_deföed
)

84 
	#_B⁄obo_SåögLi°_deföed
 1

	)

85 
CORBA_£quí˚_CORBA_°rög
 
	tB⁄obo_SåögLi°
;

86 
	#B⁄obo_SåögLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

87 
	#B⁄obo_SåögLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

88 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_SåögLi°_0
)

89 
	#TC_IMPL_TC_B⁄obo_SåögLi°_0
 'B'

	)

90 
	#TC_IMPL_TC_B⁄obo_SåögLi°_1
 'o'

	)

91 
	#TC_IMPL_TC_B⁄obo_SåögLi°_2
 'n'

	)

92 
	#TC_IMPL_TC_B⁄obo_SåögLi°_3
 'o'

	)

93 
	#TC_IMPL_TC_B⁄obo_SåögLi°_4
 'b'

	)

94 
	#TC_IMPL_TC_B⁄obo_SåögLi°_5
 'o'

	)

95 
	#TC_IMPL_TC_B⁄obo_SåögLi°_6
 '_'

	)

96 
	#TC_IMPL_TC_B⁄obo_SåögLi°_7
 'A'

	)

97 
	#TC_IMPL_TC_B⁄obo_SåögLi°_8
 'c'

	)

98 
	#TC_IMPL_TC_B⁄obo_SåögLi°_9
 't'

	)

99 
	#TC_IMPL_TC_B⁄obo_SåögLi°_10
 'i'

	)

100 
	#TC_IMPL_TC_B⁄obo_SåögLi°_11
 'v'

	)

101 
	#TC_IMPL_TC_B⁄obo_SåögLi°_12
 'a'

	)

102 
	#TC_IMPL_TC_B⁄obo_SåögLi°_13
 't'

	)

103 
	#TC_IMPL_TC_B⁄obo_SåögLi°_14
 'i'

	)

104 
	#TC_IMPL_TC_B⁄obo_SåögLi°_15
 'o'

	)

105 
	#TC_IMPL_TC_B⁄obo_SåögLi°_16
 'n'

	)

106 
	#TC_IMPL_TC_B⁄obo_SåögLi°_17
 '_'

	)

107 
	#TC_IMPL_TC_B⁄obo_SåögLi°_18
 't'

	)

108 
	#TC_IMPL_TC_B⁄obo_SåögLi°_19
 'y'

	)

109 
	#TC_IMPL_TC_B⁄obo_SåögLi°_20
 'p'

	)

110 
	#TC_IMPL_TC_B⁄obo_SåögLi°_21
 'e'

	)

111 
	#TC_IMPL_TC_B⁄obo_SåögLi°_22
 's'

	)

112 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


117 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_SåögLi°_°ru˘
;

118 
	#TC_B⁄obo_SåögLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_SåögLi°_°ru˘
)

	)

120 
	#B⁄obo_SåögLi°__Æloc
(Ë((
B⁄obo_SåögLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

121 
	#B⁄obo_SåögLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

122 
	#B⁄obo_SåögLi°_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

124 #unde‡
ex_B⁄obo_GíîÆEº‹


125 
	#ex_B⁄obo_GíîÆEº‹
 "IDL:B⁄obo/GíîÆEº‹:1.0"

	)

126 #i‡!
deföed
(
_B⁄obo_GíîÆEº‹_deföed
)

127 
	#_B⁄obo_GíîÆEº‹_deföed
 1

	)

128 
B⁄obo_GíîÆEº‹_ty≥
 
	tB⁄obo_GíîÆEº‹
;

129 
	sB⁄obo_GíîÆEº‹_ty≥
 {

130 
CORBA_°rög
 
	gdes¸ùti⁄
;

133 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_GíîÆEº‹_0
)

134 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_0
 'B'

	)

135 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_1
 'o'

	)

136 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_2
 'n'

	)

137 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_3
 'o'

	)

138 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_4
 'b'

	)

139 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_5
 'o'

	)

140 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_6
 '_'

	)

141 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_7
 'A'

	)

142 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_8
 'c'

	)

143 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_9
 't'

	)

144 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_10
 'i'

	)

145 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_11
 'v'

	)

146 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_12
 'a'

	)

147 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_13
 't'

	)

148 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_14
 'i'

	)

149 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_15
 'o'

	)

150 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_16
 'n'

	)

151 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_17
 '_'

	)

152 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_18
 't'

	)

153 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_19
 'y'

	)

154 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_20
 'p'

	)

155 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_21
 'e'

	)

156 
	#TC_IMPL_TC_B⁄obo_GíîÆEº‹_22
 's'

	)

157 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


162 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_GíîÆEº‹_°ru˘
;

163 
	#TC_B⁄obo_GíîÆEº‹
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_GíîÆEº‹_°ru˘
)

	)

165 
	#B⁄obo_GíîÆEº‹__Æloc
(Ë((
B⁄obo_GíîÆEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_GíîÆEº‹
))

	)

166 
	#B⁄obo_GíîÆEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_GíîÆEº‹
,(m),(d))

	)

168 #unde‡
ex_B⁄obo_A˘iv©i⁄_NŸLi°ed


169 
	#ex_B⁄obo_A˘iv©i⁄_NŸLi°ed
 "IDL:B⁄obo/A˘iv©i⁄/NŸLi°ed:1.0"

	)

170 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄_NŸLi°ed_deföed
)

171 
	#_B⁄obo_A˘iv©i⁄_NŸLi°ed_deföed
 1

	)

172 
B⁄obo_A˘iv©i⁄_NŸLi°ed_ty≥
 
	tB⁄obo_A˘iv©i⁄_NŸLi°ed
;

173 
	sB⁄obo_A˘iv©i⁄_NŸLi°ed_ty≥
 {

174 
	gdummy
;

177 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_0
)

178 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_0
 'B'

	)

179 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_1
 'o'

	)

180 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_2
 'n'

	)

181 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_3
 'o'

	)

182 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_4
 'b'

	)

183 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_5
 'o'

	)

184 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_6
 '_'

	)

185 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_7
 'A'

	)

186 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_8
 'c'

	)

187 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_9
 't'

	)

188 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_10
 'i'

	)

189 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_11
 'v'

	)

190 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_12
 'a'

	)

191 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_13
 't'

	)

192 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_14
 'i'

	)

193 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_15
 'o'

	)

194 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_16
 'n'

	)

195 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_17
 '_'

	)

196 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_18
 't'

	)

197 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_19
 'y'

	)

198 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_20
 'p'

	)

199 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_21
 'e'

	)

200 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_22
 's'

	)

201 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


206 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_°ru˘
;

207 
	#TC_B⁄obo_A˘iv©i⁄_NŸLi°ed
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄_NŸLi°ed_°ru˘
)

	)

209 
	#B⁄obo_A˘iv©i⁄_NŸLi°ed__Æloc
(Ë((
B⁄obo_A˘iv©i⁄_NŸLi°ed
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄_NŸLi°ed
))

	)

210 
	#B⁄obo_A˘iv©i⁄_NŸLi°ed__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄_NŸLi°ed
,(m),(d))

	)

212 #unde‡
ex_B⁄obo_A˘iv©i⁄_AÃódyLi°ed


213 
	#ex_B⁄obo_A˘iv©i⁄_AÃódyLi°ed
 "IDL:B⁄obo/A˘iv©i⁄/AÃódyLi°ed:1.0"

	)

214 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_deföed
)

215 
	#_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_deföed
 1

	)

216 
B⁄obo_A˘iv©i⁄_AÃódyLi°ed_ty≥
 
	tB⁄obo_A˘iv©i⁄_AÃódyLi°ed
;

217 
	sB⁄obo_A˘iv©i⁄_AÃódyLi°ed_ty≥
 {

218 
	gdummy
;

221 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_0
)

222 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_0
 'B'

	)

223 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_1
 'o'

	)

224 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_2
 'n'

	)

225 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_3
 'o'

	)

226 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_4
 'b'

	)

227 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_5
 'o'

	)

228 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_6
 '_'

	)

229 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_7
 'A'

	)

230 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_8
 'c'

	)

231 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_9
 't'

	)

232 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_10
 'i'

	)

233 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_11
 'v'

	)

234 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_12
 'a'

	)

235 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_13
 't'

	)

236 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_14
 'i'

	)

237 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_15
 'o'

	)

238 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_16
 'n'

	)

239 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_17
 '_'

	)

240 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_18
 't'

	)

241 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_19
 'y'

	)

242 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_20
 'p'

	)

243 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_21
 'e'

	)

244 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_22
 's'

	)

245 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


250 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_°ru˘
;

251 
	#TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed_°ru˘
)

	)

253 
	#B⁄obo_A˘iv©i⁄_AÃódyLi°ed__Æloc
(Ë((
B⁄obo_A˘iv©i⁄_AÃódyLi°ed
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed
))

	)

254 
	#B⁄obo_A˘iv©i⁄_AÃódyLi°ed__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄_AÃódyLi°ed
,(m),(d))

	)

256 #unde‡
ex_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt


257 
	#ex_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt
 "IDL:B⁄obo/A˘iv©i⁄/Incom∂ëeC⁄ãxt:1.0"

	)

258 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_deföed
)

259 
	#_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_deföed
 1

	)

260 
B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_ty≥
 
	tB⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt
;

261 
	sB⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_ty≥
 {

262 
	gdummy
;

265 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_0
)

266 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_0
 'B'

	)

267 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_1
 'o'

	)

268 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_2
 'n'

	)

269 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_3
 'o'

	)

270 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_4
 'b'

	)

271 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_5
 'o'

	)

272 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_6
 '_'

	)

273 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_7
 'A'

	)

274 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_8
 'c'

	)

275 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_9
 't'

	)

276 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_10
 'i'

	)

277 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_11
 'v'

	)

278 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_12
 'a'

	)

279 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_13
 't'

	)

280 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_14
 'i'

	)

281 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_15
 'o'

	)

282 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_16
 'n'

	)

283 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_17
 '_'

	)

284 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_18
 't'

	)

285 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_19
 'y'

	)

286 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_20
 'p'

	)

287 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_21
 'e'

	)

288 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_22
 's'

	)

289 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


294 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_°ru˘
;

295 
	#TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt_°ru˘
)

	)

297 
	#B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt__Æloc
(Ë((
B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt
))

	)

298 
	#B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄_Incom∂ëeC⁄ãxt
,(m),(d))

	)

300 #unde‡
ex_B⁄obo_A˘iv©i⁄_P¨£Faûed


301 
	#ex_B⁄obo_A˘iv©i⁄_P¨£Faûed
 "IDL:B⁄obo/A˘iv©i⁄/P¨£Faûed:1.0"

	)

302 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄_P¨£Faûed_deföed
)

303 
	#_B⁄obo_A˘iv©i⁄_P¨£Faûed_deföed
 1

	)

304 
B⁄obo_A˘iv©i⁄_P¨£Faûed_ty≥
 
	tB⁄obo_A˘iv©i⁄_P¨£Faûed
;

305 
	sB⁄obo_A˘iv©i⁄_P¨£Faûed_ty≥
 {

306 
CORBA_°rög
 
	gdes¸ùti⁄
;

309 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_0
)

310 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_0
 'B'

	)

311 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_1
 'o'

	)

312 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_2
 'n'

	)

313 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_3
 'o'

	)

314 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_4
 'b'

	)

315 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_5
 'o'

	)

316 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_6
 '_'

	)

317 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_7
 'A'

	)

318 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_8
 'c'

	)

319 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_9
 't'

	)

320 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_10
 'i'

	)

321 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_11
 'v'

	)

322 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_12
 'a'

	)

323 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_13
 't'

	)

324 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_14
 'i'

	)

325 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_15
 'o'

	)

326 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_16
 'n'

	)

327 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_17
 '_'

	)

328 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_18
 't'

	)

329 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_19
 'y'

	)

330 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_20
 'p'

	)

331 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_21
 'e'

	)

332 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_22
 's'

	)

333 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


338 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_°ru˘
;

339 
	#TC_B⁄obo_A˘iv©i⁄_P¨£Faûed
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄_P¨£Faûed_°ru˘
)

	)

341 
	#B⁄obo_A˘iv©i⁄_P¨£Faûed__Æloc
(Ë((
B⁄obo_A˘iv©i⁄_P¨£Faûed
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄_P¨£Faûed
))

	)

342 
	#B⁄obo_A˘iv©i⁄_P¨£Faûed__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄_P¨£Faûed
,(m),(d))

	)

344 #i‡!
deföed
(
_B⁄obo_Im∂emíèti⁄ID_deföed
)

345 
	#_B⁄obo_Im∂emíèti⁄ID_deföed
 1

	)

346 
CORBA_°rög
 
	tB⁄obo_Im∂emíèti⁄ID
;

347 
	#B⁄obo_Im∂emíèti⁄ID_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

348 
	#B⁄obo_Im∂emíèti⁄ID_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

349 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_0
)

350 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_0
 'B'

	)

351 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_1
 'o'

	)

352 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_2
 'n'

	)

353 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_3
 'o'

	)

354 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_4
 'b'

	)

355 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_5
 'o'

	)

356 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_6
 '_'

	)

357 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_7
 'A'

	)

358 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_8
 'c'

	)

359 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_9
 't'

	)

360 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_10
 'i'

	)

361 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_11
 'v'

	)

362 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_12
 'a'

	)

363 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_13
 't'

	)

364 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_14
 'i'

	)

365 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_15
 'o'

	)

366 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_16
 'n'

	)

367 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_17
 '_'

	)

368 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_18
 't'

	)

369 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_19
 'y'

	)

370 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_20
 'p'

	)

371 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_21
 'e'

	)

372 
	#TC_IMPL_TC_B⁄obo_Im∂emíèti⁄ID_22
 's'

	)

373 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


378 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Im∂emíèti⁄ID_°ru˘
;

379 
	#TC_B⁄obo_Im∂emíèti⁄ID
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Im∂emíèti⁄ID_°ru˘
)

	)

381 
	#B⁄obo_Im∂emíèti⁄ID__Æloc
(Ë((
B⁄obo_Im∂emíèti⁄ID
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

382 
	#B⁄obo_Im∂emíèti⁄ID__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

384 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄ID_deföed
)

385 
	#_B⁄obo_A˘iv©i⁄ID_deföed
 1

	)

386 
CORBA_°rög
 
	tB⁄obo_A˘iv©i⁄ID
;

387 
	#B⁄obo_A˘iv©i⁄ID_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

388 
	#B⁄obo_A˘iv©i⁄ID_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

389 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_0
)

390 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_0
 'B'

	)

391 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_1
 'o'

	)

392 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_2
 'n'

	)

393 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_3
 'o'

	)

394 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_4
 'b'

	)

395 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_5
 'o'

	)

396 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_6
 '_'

	)

397 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_7
 'A'

	)

398 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_8
 'c'

	)

399 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_9
 't'

	)

400 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_10
 'i'

	)

401 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_11
 'v'

	)

402 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_12
 'a'

	)

403 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_13
 't'

	)

404 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_14
 'i'

	)

405 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_15
 'o'

	)

406 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_16
 'n'

	)

407 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_17
 '_'

	)

408 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_18
 't'

	)

409 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_19
 'y'

	)

410 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_20
 'p'

	)

411 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_21
 'e'

	)

412 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄ID_22
 's'

	)

413 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


418 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄ID_°ru˘
;

419 
	#TC_B⁄obo_A˘iv©i⁄ID
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄ID_°ru˘
)

	)

421 
	#B⁄obo_A˘iv©i⁄ID__Æloc
(Ë((
B⁄obo_A˘iv©i⁄ID
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

422 
	#B⁄obo_A˘iv©i⁄ID__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

424 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Fœgs_deföed
)

425 
	#_B⁄obo_A˘iv©i⁄Fœgs_deföed
 1

	)

426 
CORBA_l⁄g
 
	tB⁄obo_A˘iv©i⁄Fœgs
;

427 
	#B⁄obo_A˘iv©i⁄Fœgs_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

428 
	#B⁄obo_A˘iv©i⁄Fœgs_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

429 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_0
)

430 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_0
 'B'

	)

431 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_1
 'o'

	)

432 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_2
 'n'

	)

433 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_3
 'o'

	)

434 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_4
 'b'

	)

435 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_5
 'o'

	)

436 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_6
 '_'

	)

437 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_7
 'A'

	)

438 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_8
 'c'

	)

439 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_9
 't'

	)

440 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_10
 'i'

	)

441 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_11
 'v'

	)

442 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_12
 'a'

	)

443 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_13
 't'

	)

444 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_14
 'i'

	)

445 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_15
 'o'

	)

446 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_16
 'n'

	)

447 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_17
 '_'

	)

448 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_18
 't'

	)

449 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_19
 'y'

	)

450 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_20
 'p'

	)

451 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_21
 'e'

	)

452 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Fœgs_22
 's'

	)

453 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


458 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Fœgs_°ru˘
;

459 
	#TC_B⁄obo_A˘iv©i⁄Fœgs
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Fœgs_°ru˘
)

	)

461 
	#B⁄obo_A˘iv©i⁄Fœgs__Æloc
(Ë((
B⁄obo_A˘iv©i⁄Fœgs
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

462 
	#B⁄obo_A˘iv©i⁄Fœgs__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

464 #i‚de‡
B⁄obo_ACTIVATION_FLAG_NO_LOCAL


465 
	#B⁄obo_ACTIVATION_FLAG_NO_LOCAL
 1

	)

468 #i‚de‡
B⁄obo_ACTIVATION_FLAG_PRIVATE


469 
	#B⁄obo_ACTIVATION_FLAG_PRIVATE
 2

	)

472 #i‚de‡
B⁄obo_ACTIVATION_FLAG_EXISTING_ONLY


473 
	#B⁄obo_ACTIVATION_FLAG_EXISTING_ONLY
 4

	)

476 #i‡!
deföed
(
_B⁄obo_Regi°øti⁄Fœgs_deföed
)

477 
	#_B⁄obo_Regi°øti⁄Fœgs_deföed
 1

	)

478 
CORBA_l⁄g
 
	tB⁄obo_Regi°øti⁄Fœgs
;

479 
	#B⁄obo_Regi°øti⁄Fœgs_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

480 
	#B⁄obo_Regi°øti⁄Fœgs_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

481 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_0
)

482 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_0
 'B'

	)

483 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_1
 'o'

	)

484 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_2
 'n'

	)

485 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_3
 'o'

	)

486 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_4
 'b'

	)

487 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_5
 'o'

	)

488 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_6
 '_'

	)

489 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_7
 'A'

	)

490 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_8
 'c'

	)

491 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_9
 't'

	)

492 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_10
 'i'

	)

493 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_11
 'v'

	)

494 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_12
 'a'

	)

495 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_13
 't'

	)

496 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_14
 'i'

	)

497 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_15
 'o'

	)

498 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_16
 'n'

	)

499 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_17
 '_'

	)

500 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_18
 't'

	)

501 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_19
 'y'

	)

502 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_20
 'p'

	)

503 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_21
 'e'

	)

504 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Fœgs_22
 's'

	)

505 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


510 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Regi°øti⁄Fœgs_°ru˘
;

511 
	#TC_B⁄obo_Regi°øti⁄Fœgs
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Regi°øti⁄Fœgs_°ru˘
)

	)

513 
	#B⁄obo_Regi°øti⁄Fœgs__Æloc
(Ë((
B⁄obo_Regi°øti⁄Fœgs
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_l⁄g
))

	)

514 
	#B⁄obo_Regi°øti⁄Fœgs__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_l⁄g
,(m),(d))

	)

516 #i‚de‡
B⁄obo_REGISTRATION_FLAG_NO_SERVERINFO


517 
	#B⁄obo_REGISTRATION_FLAG_NO_SERVERINFO
 1

	)

520 #i‚de‡
B⁄obo_ACTIVATION_ENV_FLAG_UNSET


521 
	#B⁄obo_ACTIVATION_ENV_FLAG_UNSET
 1

	)

524 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄EnvVÆue_deföed
)

525 
	#_B⁄obo_A˘iv©i⁄EnvVÆue_deföed
 1

	)

526 
B⁄obo_A˘iv©i⁄EnvVÆue_ty≥
 
	tB⁄obo_A˘iv©i⁄EnvVÆue
;

527 
	sB⁄obo_A˘iv©i⁄EnvVÆue_ty≥
 {

528 
CORBA_°rög
 
	g«me
;

529 
CORBA_°rög
 
	gvÆue
;

530 
CORBA_l⁄g
 
	gÊags
;

533 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_0
)

534 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_0
 'B'

	)

535 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_1
 'o'

	)

536 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_2
 'n'

	)

537 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_3
 'o'

	)

538 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_4
 'b'

	)

539 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_5
 'o'

	)

540 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_6
 '_'

	)

541 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_7
 'A'

	)

542 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_8
 'c'

	)

543 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_9
 't'

	)

544 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_10
 'i'

	)

545 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_11
 'v'

	)

546 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_12
 'a'

	)

547 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_13
 't'

	)

548 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_14
 'i'

	)

549 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_15
 'o'

	)

550 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_16
 'n'

	)

551 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_17
 '_'

	)

552 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_18
 't'

	)

553 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_19
 'y'

	)

554 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_20
 'p'

	)

555 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_21
 'e'

	)

556 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄EnvVÆue_22
 's'

	)

557 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


562 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄EnvVÆue_°ru˘
;

563 
	#TC_B⁄obo_A˘iv©i⁄EnvVÆue
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄EnvVÆue_°ru˘
)

	)

565 
	#B⁄obo_A˘iv©i⁄EnvVÆue__Æloc
(Ë((
B⁄obo_A˘iv©i⁄EnvVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄EnvVÆue
))

	)

566 
	#B⁄obo_A˘iv©i⁄EnvVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄EnvVÆue
,(m),(d))

	)

568 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
)

569 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
 1

	)

570 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_0
 'B'

	)

571 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_1
 'o'

	)

572 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_2
 'n'

	)

573 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_3
 'o'

	)

574 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_4
 'b'

	)

575 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_5
 'o'

	)

576 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_6
 '_'

	)

577 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_7
 'A'

	)

578 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_8
 'c'

	)

579 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_9
 't'

	)

580 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_10
 'i'

	)

581 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_11
 'v'

	)

582 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_12
 'a'

	)

583 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_13
 't'

	)

584 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_14
 'i'

	)

585 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_15
 'o'

	)

586 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_16
 'n'

	)

587 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_17
 '_'

	)

588 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_18
 't'

	)

589 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_19
 'y'

	)

590 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_20
 'p'

	)

591 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_21
 'e'

	)

592 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_22
 's'

	)

593 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_deföed
)

594 
	#_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_deföed
 1

	)

595 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_A˘iv©i⁄EnvVÆue
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
;

597 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_0
)

598 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_0
 'B'

	)

599 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_1
 'o'

	)

600 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_2
 'n'

	)

601 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_3
 'o'

	)

602 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_4
 'b'

	)

603 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_5
 'o'

	)

604 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_6
 '_'

	)

605 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_7
 'A'

	)

606 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_8
 'c'

	)

607 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_9
 't'

	)

608 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_10
 'i'

	)

609 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_11
 'v'

	)

610 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_12
 'a'

	)

611 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_13
 't'

	)

612 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_14
 'i'

	)

613 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_15
 'o'

	)

614 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_16
 'n'

	)

615 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_17
 '_'

	)

616 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_18
 't'

	)

617 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_19
 'y'

	)

618 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_20
 'p'

	)

619 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_21
 'e'

	)

620 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_22
 's'

	)

621 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


626 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_°ru˘
;

627 
	#TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_°ru˘
)

	)

629 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
))

	)

630 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
,(m),(d))

	)

631 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_Ælocbuf
(
l
Ë((
B⁄obo_A˘iv©i⁄EnvVÆue
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
, (l)))

	)

632 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_Ælocbuf
(
l
Ë((
B⁄obo_A˘iv©i⁄EnvVÆue
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
, (l)))

	)

634 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Envú⁄mít_deföed
)

635 
	#_B⁄obo_A˘iv©i⁄Envú⁄mít_deföed
 1

	)

636 
CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
 
	tB⁄obo_A˘iv©i⁄Envú⁄mít
;

637 
	#B⁄obo_A˘iv©i⁄Envú⁄mít_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_m¨shÆ
((x),(y),(z))

	)

638 
	#B⁄obo_A˘iv©i⁄Envú⁄mít_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue_dem¨shÆ
((x),(y),(z),(i))

	)

639 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_0
)

640 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_0
 'B'

	)

641 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_1
 'o'

	)

642 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_2
 'n'

	)

643 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_3
 'o'

	)

644 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_4
 'b'

	)

645 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_5
 'o'

	)

646 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_6
 '_'

	)

647 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_7
 'A'

	)

648 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_8
 'c'

	)

649 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_9
 't'

	)

650 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_10
 'i'

	)

651 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_11
 'v'

	)

652 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_12
 'a'

	)

653 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_13
 't'

	)

654 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_14
 'i'

	)

655 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_15
 'o'

	)

656 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_16
 'n'

	)

657 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_17
 '_'

	)

658 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_18
 't'

	)

659 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_19
 'y'

	)

660 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_20
 'p'

	)

661 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_21
 'e'

	)

662 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Envú⁄mít_22
 's'

	)

663 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


668 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Envú⁄mít_°ru˘
;

669 
	#TC_B⁄obo_A˘iv©i⁄Envú⁄mít
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Envú⁄mít_°ru˘
)

	)

671 
	#B⁄obo_A˘iv©i⁄Envú⁄mít__Æloc
(Ë((
B⁄obo_A˘iv©i⁄Envú⁄mít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
))

	)

672 
	#B⁄obo_A˘iv©i⁄Envú⁄mít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
,(m),(d))

	)

673 
	#B⁄obo_A˘iv©i⁄Envú⁄mít_Ælocbuf
(
l
Ë((
B⁄obo_A˘iv©i⁄EnvVÆue
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄EnvVÆue
, (l)))

	)

675 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Resu…Ty≥_deföed
)

676 
	#_B⁄obo_A˘iv©i⁄Resu…Ty≥_deföed
 1

	)

678 
	gB⁄obo_ACTIVATION_RESULT_OBJECT
,

679 
	gB⁄obo_ACTIVATION_RESULT_SHLIB
,

680 
	gB⁄obo_ACTIVATION_RESULT_NONE


681 } 
	tB⁄obo_A˘iv©i⁄Resu…Ty≥
;

682 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_0
)

683 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_0
 'B'

	)

684 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_1
 'o'

	)

685 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_2
 'n'

	)

686 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_3
 'o'

	)

687 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_4
 'b'

	)

688 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_5
 'o'

	)

689 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_6
 '_'

	)

690 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_7
 'A'

	)

691 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_8
 'c'

	)

692 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_9
 't'

	)

693 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_10
 'i'

	)

694 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_11
 'v'

	)

695 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_12
 'a'

	)

696 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_13
 't'

	)

697 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_14
 'i'

	)

698 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_15
 'o'

	)

699 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_16
 'n'

	)

700 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_17
 '_'

	)

701 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_18
 't'

	)

702 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_19
 'y'

	)

703 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_20
 'p'

	)

704 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_21
 'e'

	)

705 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_22
 's'

	)

706 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


711 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_°ru˘
;

712 
	#TC_B⁄obo_A˘iv©i⁄Resu…Ty≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Resu…Ty≥_°ru˘
)

	)

715 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Resu…D©a_deföed
)

716 
	#_B⁄obo_A˘iv©i⁄Resu…D©a_deföed
 1

	)

717 
B⁄obo_A˘iv©i⁄Resu…D©a_ty≥
 
	tB⁄obo_A˘iv©i⁄Resu…D©a
;

718 
	sB⁄obo_A˘iv©i⁄Resu…D©a_ty≥
 {

719 
B⁄obo_A˘iv©i⁄Resu…Ty≥
 
	g_d
;

721 
CORBA_Obje˘
 
	gªs_obje˘
;

722 
B⁄obo_SåögLi°
 
	gªs_shlib
;

723 } 
	g_u
;

725 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_0
)

726 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_0
 'B'

	)

727 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_1
 'o'

	)

728 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_2
 'n'

	)

729 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_3
 'o'

	)

730 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_4
 'b'

	)

731 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_5
 'o'

	)

732 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_6
 '_'

	)

733 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_7
 'A'

	)

734 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_8
 'c'

	)

735 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_9
 't'

	)

736 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_10
 'i'

	)

737 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_11
 'v'

	)

738 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_12
 'a'

	)

739 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_13
 't'

	)

740 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_14
 'i'

	)

741 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_15
 'o'

	)

742 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_16
 'n'

	)

743 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_17
 '_'

	)

744 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_18
 't'

	)

745 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_19
 'y'

	)

746 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_20
 'p'

	)

747 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_21
 'e'

	)

748 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…D©a_22
 's'

	)

749 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


754 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Resu…D©a_°ru˘
;

755 
	#TC_B⁄obo_A˘iv©i⁄Resu…D©a
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Resu…D©a_°ru˘
)

	)

757 
	#B⁄obo_A˘iv©i⁄Resu…D©a__Æloc
(Ë((
B⁄obo_A˘iv©i⁄Resu…D©a
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄Resu…D©a
))

	)

758 
	#B⁄obo_A˘iv©i⁄Resu…D©a__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄Resu…D©a
,(m),(d))

	)

760 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Resu…_deföed
)

761 
	#_B⁄obo_A˘iv©i⁄Resu…_deföed
 1

	)

762 
B⁄obo_A˘iv©i⁄Resu…_ty≥
 
	tB⁄obo_A˘iv©i⁄Resu…
;

763 
	sB⁄obo_A˘iv©i⁄Resu…_ty≥
 {

764 
CORBA_°rög
 
	gaid
;

765 
B⁄obo_A˘iv©i⁄Resu…D©a
 
	gªs
;

768 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_0
)

769 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_0
 'B'

	)

770 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_1
 'o'

	)

771 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_2
 'n'

	)

772 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_3
 'o'

	)

773 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_4
 'b'

	)

774 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_5
 'o'

	)

775 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_6
 '_'

	)

776 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_7
 'A'

	)

777 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_8
 'c'

	)

778 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_9
 't'

	)

779 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_10
 'i'

	)

780 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_11
 'v'

	)

781 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_12
 'a'

	)

782 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_13
 't'

	)

783 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_14
 'i'

	)

784 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_15
 'o'

	)

785 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_16
 'n'

	)

786 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_17
 '_'

	)

787 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_18
 't'

	)

788 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_19
 'y'

	)

789 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_20
 'p'

	)

790 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_21
 'e'

	)

791 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Resu…_22
 's'

	)

792 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


797 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Resu…_°ru˘
;

798 
	#TC_B⁄obo_A˘iv©i⁄Resu…
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Resu…_°ru˘
)

	)

800 
	#B⁄obo_A˘iv©i⁄Resu…__Æloc
(Ë((
B⁄obo_A˘iv©i⁄Resu…
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄Resu…
))

	)

801 
	#B⁄obo_A˘iv©i⁄Resu…__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄Resu…
,(m),(d))

	)

803 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_deföed
)

804 
	#_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_deföed
 1

	)

806 
	gB⁄obo_ACTIVATION_P_STRING
,

807 
	gB⁄obo_ACTIVATION_P_NUMBER
,

808 
	gB⁄obo_ACTIVATION_P_BOOLEAN
,

809 
	gB⁄obo_ACTIVATION_P_STRINGV


810 } 
	tB⁄obo_A˘iv©i⁄Pr›îtyTy≥
;

811 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_0
)

812 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_0
 'B'

	)

813 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_1
 'o'

	)

814 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_2
 'n'

	)

815 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_3
 'o'

	)

816 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_4
 'b'

	)

817 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_5
 'o'

	)

818 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_6
 '_'

	)

819 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_7
 'A'

	)

820 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_8
 'c'

	)

821 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_9
 't'

	)

822 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_10
 'i'

	)

823 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_11
 'v'

	)

824 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_12
 'a'

	)

825 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_13
 't'

	)

826 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_14
 'i'

	)

827 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_15
 'o'

	)

828 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_16
 'n'

	)

829 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_17
 '_'

	)

830 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_18
 't'

	)

831 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_19
 'y'

	)

832 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_20
 'p'

	)

833 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_21
 'e'

	)

834 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_22
 's'

	)

835 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


840 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_°ru˘
;

841 
	#TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Pr›îtyTy≥_°ru˘
)

	)

844 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_deföed
)

845 
	#_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_deföed
 1

	)

846 
B⁄obo_A˘iv©i⁄Pr›îtyVÆue_ty≥
 
	tB⁄obo_A˘iv©i⁄Pr›îtyVÆue
;

847 
	sB⁄obo_A˘iv©i⁄Pr›îtyVÆue_ty≥
 {

848 
B⁄obo_A˘iv©i⁄Pr›îtyTy≥
 
	g_d
;

850 
CORBA_°rög
 
	gvÆue_°rög
;

851 
CORBA_doubÀ
 
	gvÆue_numbî
;

852 
CORBA_boﬁón
 
	gvÆue_boﬁón
;

853 
B⁄obo_SåögLi°
 
	gvÆue_°rögv
;

854 } 
	g_u
;

856 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_0
)

857 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_0
 'B'

	)

858 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_1
 'o'

	)

859 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_2
 'n'

	)

860 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_3
 'o'

	)

861 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_4
 'b'

	)

862 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_5
 'o'

	)

863 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_6
 '_'

	)

864 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_7
 'A'

	)

865 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_8
 'c'

	)

866 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_9
 't'

	)

867 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_10
 'i'

	)

868 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_11
 'v'

	)

869 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_12
 'a'

	)

870 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_13
 't'

	)

871 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_14
 'i'

	)

872 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_15
 'o'

	)

873 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_16
 'n'

	)

874 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_17
 '_'

	)

875 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_18
 't'

	)

876 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_19
 'y'

	)

877 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_20
 'p'

	)

878 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_21
 'e'

	)

879 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_22
 's'

	)

880 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


885 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_°ru˘
;

886 
	#TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue_°ru˘
)

	)

888 
	#B⁄obo_A˘iv©i⁄Pr›îtyVÆue__Æloc
(Ë((
B⁄obo_A˘iv©i⁄Pr›îtyVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue
))

	)

889 
	#B⁄obo_A˘iv©i⁄Pr›îtyVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄Pr›îtyVÆue
,(m),(d))

	)

891 #i‡!
deföed
(
_B⁄obo_A˘iv©i⁄Pr›îty_deföed
)

892 
	#_B⁄obo_A˘iv©i⁄Pr›îty_deföed
 1

	)

893 
B⁄obo_A˘iv©i⁄Pr›îty_ty≥
 
	tB⁄obo_A˘iv©i⁄Pr›îty
;

894 
	sB⁄obo_A˘iv©i⁄Pr›îty_ty≥
 {

895 
CORBA_°rög
 
	g«me
;

896 
B⁄obo_A˘iv©i⁄Pr›îtyVÆue
 
	gv
;

899 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_0
)

900 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_0
 'B'

	)

901 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_1
 'o'

	)

902 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_2
 'n'

	)

903 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_3
 'o'

	)

904 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_4
 'b'

	)

905 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_5
 'o'

	)

906 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_6
 '_'

	)

907 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_7
 'A'

	)

908 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_8
 'c'

	)

909 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_9
 't'

	)

910 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_10
 'i'

	)

911 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_11
 'v'

	)

912 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_12
 'a'

	)

913 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_13
 't'

	)

914 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_14
 'i'

	)

915 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_15
 'o'

	)

916 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_16
 'n'

	)

917 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_17
 '_'

	)

918 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_18
 't'

	)

919 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_19
 'y'

	)

920 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_20
 'p'

	)

921 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_21
 'e'

	)

922 
	#TC_IMPL_TC_B⁄obo_A˘iv©i⁄Pr›îty_22
 's'

	)

923 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


928 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_A˘iv©i⁄Pr›îty_°ru˘
;

929 
	#TC_B⁄obo_A˘iv©i⁄Pr›îty
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_A˘iv©i⁄Pr›îty_°ru˘
)

	)

931 
	#B⁄obo_A˘iv©i⁄Pr›îty__Æloc
(Ë((
B⁄obo_A˘iv©i⁄Pr›îty
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_A˘iv©i⁄Pr›îty
))

	)

932 
	#B⁄obo_A˘iv©i⁄Pr›îty__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_A˘iv©i⁄Pr›îty
,(m),(d))

	)

934 #i‡!
deföed
(
_B⁄obo_SîvîInfo_deföed
)

935 
	#_B⁄obo_SîvîInfo_deföed
 1

	)

936 
B⁄obo_SîvîInfo_ty≥
 
	tB⁄obo_SîvîInfo
;

937 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
)

938 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
 1

	)

939 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_0
 'B'

	)

940 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_1
 'o'

	)

941 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_2
 'n'

	)

942 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_3
 'o'

	)

943 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_4
 'b'

	)

944 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_5
 'o'

	)

945 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_6
 '_'

	)

946 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_7
 'A'

	)

947 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_8
 'c'

	)

948 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_9
 't'

	)

949 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_10
 'i'

	)

950 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_11
 'v'

	)

951 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_12
 'a'

	)

952 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_13
 't'

	)

953 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_14
 'i'

	)

954 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_15
 'o'

	)

955 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_16
 'n'

	)

956 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_17
 '_'

	)

957 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_18
 't'

	)

958 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_19
 'y'

	)

959 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_20
 'p'

	)

960 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_21
 'e'

	)

961 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_22
 's'

	)

962 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_deföed
)

963 
	#_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_deföed
 1

	)

964 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_A˘iv©i⁄Pr›îty
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
;

966 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_0
)

967 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_0
 'B'

	)

968 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_1
 'o'

	)

969 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_2
 'n'

	)

970 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_3
 'o'

	)

971 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_4
 'b'

	)

972 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_5
 'o'

	)

973 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_6
 '_'

	)

974 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_7
 'A'

	)

975 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_8
 'c'

	)

976 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_9
 't'

	)

977 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_10
 'i'

	)

978 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_11
 'v'

	)

979 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_12
 'a'

	)

980 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_13
 't'

	)

981 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_14
 'i'

	)

982 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_15
 'o'

	)

983 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_16
 'n'

	)

984 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_17
 '_'

	)

985 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_18
 't'

	)

986 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_19
 'y'

	)

987 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_20
 'p'

	)

988 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_21
 'e'

	)

989 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_22
 's'

	)

990 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


995 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_°ru˘
;

996 
	#TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_°ru˘
)

	)

998 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
))

	)

999 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
,(m),(d))

	)

1000 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_Ælocbuf
(
l
Ë((
B⁄obo_A˘iv©i⁄Pr›îty
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
, (l)))

	)

1001 
	#CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_Ælocbuf
(
l
Ë((
B⁄obo_A˘iv©i⁄Pr›îty
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
, (l)))

	)

1003 
	sB⁄obo_SîvîInfo_ty≥
 {

1004 
B⁄obo_Im∂emíèti⁄ID
 
	giid
;

1005 
CORBA_°rög
 
	g£rvî_ty≥
;

1006 
CORBA_°rög
 
	gloˇti⁄_öfo
;

1007 
CORBA_°rög
 
	gu£∫ame
;

1008 
CORBA_°rög
 
	gho°«me
;

1009 
CORBA_°rög
 
	gdomaö
;

1010 
CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
 
	g¥›s
;

1013 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_SîvîInfo_0
)

1014 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_0
 'B'

	)

1015 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_1
 'o'

	)

1016 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_2
 'n'

	)

1017 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_3
 'o'

	)

1018 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_4
 'b'

	)

1019 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_5
 'o'

	)

1020 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_6
 '_'

	)

1021 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_7
 'A'

	)

1022 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_8
 'c'

	)

1023 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_9
 't'

	)

1024 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_10
 'i'

	)

1025 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_11
 'v'

	)

1026 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_12
 'a'

	)

1027 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_13
 't'

	)

1028 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_14
 'i'

	)

1029 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_15
 'o'

	)

1030 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_16
 'n'

	)

1031 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_17
 '_'

	)

1032 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_18
 't'

	)

1033 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_19
 'y'

	)

1034 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_20
 'p'

	)

1035 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_21
 'e'

	)

1036 
	#TC_IMPL_TC_B⁄obo_SîvîInfo_22
 's'

	)

1037 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


1042 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_SîvîInfo_°ru˘
;

1043 
	#TC_B⁄obo_SîvîInfo
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_SîvîInfo_°ru˘
)

	)

1045 
	#B⁄obo_SîvîInfo__Æloc
(Ë((
B⁄obo_SîvîInfo
 *)
	`ORBô_smÆl_Æloc
 (
TC_B⁄obo_SîvîInfo
))

	)

1046 
	#B⁄obo_SîvîInfo__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_B⁄obo_SîvîInfo
,(m),(d))

	)

1048 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_B⁄obo_SîvîInfo
)

1049 
	#ORBIT_DECL_CORBA_£quí˚_B⁄obo_SîvîInfo
 1

	)

1050 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_0
 'B'

	)

1051 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_1
 'o'

	)

1052 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_2
 'n'

	)

1053 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_3
 'o'

	)

1054 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_4
 'b'

	)

1055 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_5
 'o'

	)

1056 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_6
 '_'

	)

1057 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_7
 'A'

	)

1058 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_8
 'c'

	)

1059 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_9
 't'

	)

1060 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_10
 'i'

	)

1061 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_11
 'v'

	)

1062 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_12
 'a'

	)

1063 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_13
 't'

	)

1064 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_14
 'i'

	)

1065 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_15
 'o'

	)

1066 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_16
 'n'

	)

1067 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_17
 '_'

	)

1068 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_18
 't'

	)

1069 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_19
 'y'

	)

1070 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_20
 'p'

	)

1071 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_21
 'e'

	)

1072 
	#ORBIT_IMPL_CORBA_£quí˚_B⁄obo_SîvîInfo_22
 's'

	)

1073 #i‡!
deföed
(
_CORBA_£quí˚_B⁄obo_SîvîInfo_deföed
)

1074 
	#_CORBA_£quí˚_B⁄obo_SîvîInfo_deföed
 1

	)

1075 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
B⁄obo_SîvîInfo
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_B⁄obo_SîvîInfo
;

1077 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_0
)

1078 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_0
 'B'

	)

1079 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_1
 'o'

	)

1080 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_2
 'n'

	)

1081 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_3
 'o'

	)

1082 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_4
 'b'

	)

1083 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_5
 'o'

	)

1084 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_6
 '_'

	)

1085 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_7
 'A'

	)

1086 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_8
 'c'

	)

1087 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_9
 't'

	)

1088 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_10
 'i'

	)

1089 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_11
 'v'

	)

1090 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_12
 'a'

	)

1091 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_13
 't'

	)

1092 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_14
 'i'

	)

1093 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_15
 'o'

	)

1094 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_16
 'n'

	)

1095 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_17
 '_'

	)

1096 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_18
 't'

	)

1097 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_19
 'y'

	)

1098 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_20
 'p'

	)

1099 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_21
 'e'

	)

1100 
	#TC_IMPL_TC_CORBA_£quí˚_B⁄obo_SîvîInfo_22
 's'

	)

1101 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


1106 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_B⁄obo_SîvîInfo_°ru˘
;

1107 
	#TC_CORBA_£quí˚_B⁄obo_SîvîInfo
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_B⁄obo_SîvîInfo_°ru˘
)

	)

1109 
	#CORBA_£quí˚_B⁄obo_SîvîInfo__Æloc
(Ë((
CORBA_£quí˚_B⁄obo_SîvîInfo
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
))

	)

1110 
	#CORBA_£quí˚_B⁄obo_SîvîInfo__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
,(m),(d))

	)

1111 
	#CORBA_£quí˚_B⁄obo_SîvîInfo_Ælocbuf
(
l
Ë((
B⁄obo_SîvîInfo
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
, (l)))

	)

1112 
	#CORBA_£quí˚_B⁄obo_SîvîInfo_Ælocbuf
(
l
Ë((
B⁄obo_SîvîInfo
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
, (l)))

	)

1114 #i‡!
deföed
(
_B⁄obo_SîvîInfoLi°_deföed
)

1115 
	#_B⁄obo_SîvîInfoLi°_deföed
 1

	)

1116 
CORBA_£quí˚_B⁄obo_SîvîInfo
 
	tB⁄obo_SîvîInfoLi°
;

1117 
	#B⁄obo_SîvîInfoLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_B⁄obo_SîvîInfo_m¨shÆ
((x),(y),(z))

	)

1118 
	#B⁄obo_SîvîInfoLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_B⁄obo_SîvîInfo_dem¨shÆ
((x),(y),(z),(i))

	)

1119 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_SîvîInfoLi°_0
)

1120 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_0
 'B'

	)

1121 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_1
 'o'

	)

1122 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_2
 'n'

	)

1123 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_3
 'o'

	)

1124 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_4
 'b'

	)

1125 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_5
 'o'

	)

1126 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_6
 '_'

	)

1127 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_7
 'A'

	)

1128 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_8
 'c'

	)

1129 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_9
 't'

	)

1130 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_10
 'i'

	)

1131 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_11
 'v'

	)

1132 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_12
 'a'

	)

1133 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_13
 't'

	)

1134 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_14
 'i'

	)

1135 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_15
 'o'

	)

1136 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_16
 'n'

	)

1137 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_17
 '_'

	)

1138 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_18
 't'

	)

1139 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_19
 'y'

	)

1140 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_20
 'p'

	)

1141 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_21
 'e'

	)

1142 
	#TC_IMPL_TC_B⁄obo_SîvîInfoLi°_22
 's'

	)

1143 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


1148 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_SîvîInfoLi°_°ru˘
;

1149 
	#TC_B⁄obo_SîvîInfoLi°
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_SîvîInfoLi°_°ru˘
)

	)

1151 
	#B⁄obo_SîvîInfoLi°__Æloc
(Ë((
B⁄obo_SîvîInfoLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
))

	)

1152 
	#B⁄obo_SîvîInfoLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
,(m),(d))

	)

1153 
	#B⁄obo_SîvîInfoLi°_Ælocbuf
(
l
Ë((
B⁄obo_SîvîInfo
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_B⁄obo_SîvîInfo
, (l)))

	)

1155 #i‡!
deföed
(
_B⁄obo_Regi°øti⁄Resu…_deföed
)

1156 
	#_B⁄obo_Regi°øti⁄Resu…_deföed
 1

	)

1158 
	gB⁄obo_ACTIVATION_REG_SUCCESS
,

1159 
	gB⁄obo_ACTIVATION_REG_NOT_LISTED
,

1160 
	gB⁄obo_ACTIVATION_REG_ALREADY_ACTIVE
,

1161 
	gB⁄obo_ACTIVATION_REG_ERROR


1162 } 
	tB⁄obo_Regi°øti⁄Resu…
;

1163 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_0
)

1164 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_0
 'B'

	)

1165 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_1
 'o'

	)

1166 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_2
 'n'

	)

1167 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_3
 'o'

	)

1168 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_4
 'b'

	)

1169 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_5
 'o'

	)

1170 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_6
 '_'

	)

1171 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_7
 'A'

	)

1172 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_8
 'c'

	)

1173 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_9
 't'

	)

1174 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_10
 'i'

	)

1175 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_11
 'v'

	)

1176 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_12
 'a'

	)

1177 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_13
 't'

	)

1178 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_14
 'i'

	)

1179 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_15
 'o'

	)

1180 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_16
 'n'

	)

1181 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_17
 '_'

	)

1182 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_18
 't'

	)

1183 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_19
 'y'

	)

1184 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_20
 'p'

	)

1185 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_21
 'e'

	)

1186 
	#TC_IMPL_TC_B⁄obo_Regi°øti⁄Resu…_22
 's'

	)

1187 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


1192 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Regi°øti⁄Resu…_°ru˘
;

1193 
	#TC_B⁄obo_Regi°øti⁄Resu…
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Regi°øti⁄Resu…_°ru˘
)

	)

1196 #i‡!
deföed
(
_B⁄obo_Dy«micP©hLﬂdResu…_deföed
)

1197 
	#_B⁄obo_Dy«micP©hLﬂdResu…_deföed
 1

	)

1199 
	gB⁄obo_DYNAMIC_LOAD_SUCCESS
,

1200 
	gB⁄obo_DYNAMIC_LOAD_ERROR
,

1201 
	gB⁄obo_DYNAMIC_LOAD_NOT_LISTED
,

1202 
	gB⁄obo_DYNAMIC_LOAD_ALREADY_LISTED


1203 } 
	tB⁄obo_Dy«micP©hLﬂdResu…
;

1204 #i‡!
deföed
(
TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_0
)

1205 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_0
 'B'

	)

1206 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_1
 'o'

	)

1207 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_2
 'n'

	)

1208 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_3
 'o'

	)

1209 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_4
 'b'

	)

1210 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_5
 'o'

	)

1211 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_6
 '_'

	)

1212 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_7
 'A'

	)

1213 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_8
 'c'

	)

1214 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_9
 't'

	)

1215 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_10
 'i'

	)

1216 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_11
 'v'

	)

1217 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_12
 'a'

	)

1218 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_13
 't'

	)

1219 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_14
 'i'

	)

1220 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_15
 'o'

	)

1221 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_16
 'n'

	)

1222 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_17
 '_'

	)

1223 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_18
 't'

	)

1224 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_19
 'y'

	)

1225 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_20
 'p'

	)

1226 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_21
 'e'

	)

1227 
	#TC_IMPL_TC_B⁄obo_Dy«micP©hLﬂdResu…_22
 's'

	)

1228 #ifde‡
ORBIT_IDL_C_IMODULE_B⁄obo_A˘iv©i⁄_ty≥s


1233 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_B⁄obo_Dy«micP©hLﬂdResu…_°ru˘
;

1234 
	#TC_B⁄obo_Dy«micP©hLﬂdResu…
 ((
CORBA_Ty≥Code
)&
TC_B⁄obo_Dy«micP©hLﬂdResu…_°ru˘
)

	)

1243 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

1248 #i‚de‡
__ORBIT_IMETHODS_INDEX


1249 
	#__ORBIT_IMETHODS_INDEX


	)

1250 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

1253 #ifde‡
__˝lu•lus


1257 #i‚de‡
EXCLUDE_ORBIT_H


1258 
	~<‹bô/‹bô.h
>

1262 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-activate.h

24 #i‚de‡
BONOBO_ACTIVATION_ACTIVATE_H


25 
	#BONOBO_ACTIVATION_ACTIVATE_H


	)

27 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_A˘iv©i⁄_ty≥s.h
>

29 
G_BEGIN_DECLS


31 
CORBA_Obje˘
 
b⁄obo_a˘iv©i⁄_«me_£rvi˚_gë
 (
CORBA_Envú⁄mít
 * 
ev
);

34 
B⁄obo_SîvîInfoLi°
 *
b⁄obo_a˘iv©i⁄_quîy
 (c⁄° *
ªquúemíts
,

35 *c⁄° *
£À˘i⁄_‹dî
,

36 
CORBA_Envú⁄mít
 * 
ev
);

37 
CORBA_Obje˘
 
b⁄obo_a˘iv©i⁄_a˘iv©e
 (c⁄° *
ªquúemíts
,

38 *c⁄° *
£À˘i⁄_‹dî
,

39 
B⁄obo_A˘iv©i⁄Fœgs
 
Êags
,

40 
B⁄obo_A˘iv©i⁄ID
 * 
ªt_aid
,

41 
CORBA_Envú⁄mít
 * 
ev
);

42 
CORBA_Obje˘
 
b⁄obo_a˘iv©i⁄_a˘iv©e_‰om_id
 (c⁄° 
B⁄obo_A˘iv©i⁄ID
 
aid
,

43 
B⁄obo_A˘iv©i⁄Fœgs
 
Êags
,

44 
B⁄obo_A˘iv©i⁄ID
 * 
ªt_aid
,

45 
CORBA_Envú⁄mít
 * 
ev
);

47 
b⁄obo_a˘iv©i⁄_£t_a˘iv©i⁄_ív_vÆue
 (c⁄° *
«me
,

48 c⁄° *
vÆue
);

50 
B⁄obo_Dy«micP©hLﬂdResu…


51 
b⁄obo_a˘iv©i⁄_dy«mic_add_∑th
 (c⁄° *
add_∑th
,

52 
CORBA_Envú⁄mít
 * 
ev
);

54 
B⁄obo_Dy«micP©hLﬂdResu…


55 
b⁄obo_a˘iv©i⁄_dy«mic_ªmove_∑th
 (c⁄° *
ªmove_∑th
,

56 
CORBA_Envú⁄mít
 * 
ev
);

57 #i‚de‡
BONOBO_DISABLE_DEPRECATED


59 
b⁄obo_a˘iv©i⁄_£t_ã°_comp⁄íts_íabÀd
 (
gboﬁón
 
vÆ
);

60 
gboﬁón
 
b⁄obo_a˘iv©i⁄_gë_ã°_comp⁄íts_íabÀd
 ();

63 
	gG_END_DECLS


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-async.h

26 #i‚de‡
BONOBO_ACTIVATION_ASYNC_H


27 
	#BONOBO_ACTIVATION_ASYNC_H


	)

29 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_A˘iv©i⁄_ty≥s.h
>

31 
G_BEGIN_DECLS


39 (*
	tB⁄oboA˘iv©i⁄CÆlback
Ë(
	tCORBA_Obje˘
 
	ta˘iv©ed_obje˘
,

40 c⁄° *
	tîr‹_ªas⁄
,

41 
	tgpoöãr
 
	tu£r_d©a
);

44 
	`b⁄obo_a˘iv©i⁄_a˘iv©e_async
 (c⁄° *
ªquúemíts
,

45 *c⁄° *
£À˘i⁄_‹dî
,

46 
B⁄obo_A˘iv©i⁄Fœgs
 
Êags
,

47 
B⁄oboA˘iv©i⁄CÆlback
 
ˇŒback
,

48 
gpoöãr
 
u£r_d©a
,

49 
CORBA_Envú⁄mít
 * 
ev
);

51 
	`b⁄obo_a˘iv©i⁄_a˘iv©e_‰om_id_async
 (c⁄° 
B⁄obo_A˘iv©i⁄ID
 
aid
,

52 
B⁄obo_A˘iv©i⁄Fœgs
 
Êags
,

53 
B⁄oboA˘iv©i⁄CÆlback
 
ˇŒback
,

54 
gpoöãr
 
u£r_d©a
,

55 
CORBA_Envú⁄mít
 * 
ev
);

57 
G_END_DECLS


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-init.h

24 #i‚de‡
BONOBO_ACTIVATION_INIT_H


25 
	#BONOBO_ACTIVATION_INIT_H


	)

27 
	~<‹bô/‹bô.h
>

28 #i‚de‡
BONOBO_DISABLE_DEPRECATED


29 
	~<p›t.h
>

31 
	~<glib.h
>

33 
G_BEGIN_DECLS


35 
CORBA_ORB
 
b⁄obo_a˘iv©i⁄_‹b_öô
 (*
¨gc
,

36 **
¨gv
);

37 
CORBA_ORB
 
b⁄obo_a˘iv©i⁄_‹b_gë
 ();

39 
gboﬁón
 
b⁄obo_a˘iv©i⁄_is_öôülized
 ();

40 
CORBA_ORB
 
b⁄obo_a˘iv©i⁄_öô
 (
¨gc
,

41 **
¨gv
);

42 
b⁄obo_a˘iv©i⁄_¥eöô
 (
gpoöãr
 
≠p
,

43 
gpoöãr
 
mod_öfo
);

44 
b⁄obo_a˘iv©i⁄_po°öô
 (
gpoöãr
 
≠p
,

45 
gpoöãr
 
mod_öfo
);

48 
CORBA_C⁄ãxt
 
b⁄obo_a˘iv©i⁄_c⁄ãxt_gë
 ();

49 #i‚de‡
BONOBO_DISABLE_DEPRECATED


50 c⁄° *
b⁄obo_a˘iv©i⁄_ho°«me_gë
 ();

51 c⁄° *
b⁄obo_a˘iv©i⁄_£ssi⁄_«me_gë
 ();

52 c⁄° *
b⁄obo_a˘iv©i⁄_domaö_gë
 ();

53 
	#b⁄obo_a˘iv©i⁄_u£∫ame_gë
(Ë
	`g_gë_u£r_«me
()

	)

54 
p›tO±i⁄
 
b⁄obo_a˘iv©i⁄_p›t_›ti⁄s
[];

55 *
b⁄obo_a˘iv©i⁄_gë_p›t_èbÀ_«me
 ();

58 
gboﬁón
 
b⁄obo_a˘iv©i⁄_debug_shutdown
 ();

60 
GO±i⁄Group
 *
b⁄obo_a˘iv©i⁄_gë_g›ti⁄_group
 ();

62 
	gG_END_DECLS


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-register.h

24 #i‚de‡
BONOBO_ACTIVATION_REGISTER_H


25 
	#BONOBO_ACTIVATION_REGISTER_H


	)

27 
	~<‹bô/‹bô.h
>

28 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_A˘iv©i⁄_ty≥s.h
>

30 
G_BEGIN_DECLS


32 
B⁄obo_Regi°øti⁄Resu…


33 
b⁄obo_a˘iv©i⁄_ªgi°î_a˘ive_£rvî
 (c⁄° *
iid
,

34 
CORBA_Obje˘
 
obj
,

35 
GSLi°
 *
ªg_ív
);

36 
B⁄obo_Regi°øti⁄Resu…


37 
b⁄obo_a˘iv©i⁄_ªgi°î_a˘ive_£rvî_ext
 (c⁄° *
iid
,

38 
CORBA_Obje˘
 
obj
,

39 
GSLi°
 *
ªg_ív
,

40 
B⁄obo_Regi°øti⁄Fœgs
 
Êags
,

41 
CORBA_Obje˘
 *
exi°ög
,

42 c⁄° *
des¸ùti⁄
);

43 
b⁄obo_a˘iv©i⁄_uƒegi°î_a˘ive_£rvî
 (c⁄° *
iid
,

44 
CORBA_Obje˘
 
obj
);

46 
GSLi°
 *
b⁄obo_a˘iv©i⁄_ªgi°øti⁄_ív_£t
 (GSLi° *
ªg_ív
,

47 c⁄° *
«me
,

48 c⁄° *
vÆue
);

49 
b⁄obo_a˘iv©i⁄_ªgi°øti⁄_ív_‰ì
 (
GSLi°
 *
ªg_ív
);

51 
b⁄obo_a˘iv©i⁄_ªgi°øti⁄_ív_£t_globÆ
 (
GSLi°
 *
ªg_ív
,

52 
gboﬁón
 
≠≥nd_if_exi°ög
);

55 #i‚de‡
BONOBO_DISABLE_DEPRECATED


57 
B⁄obo_Regi°øti⁄Resu…


58 
b⁄obo_a˘iv©i⁄_a˘ive_£rvî_ªgi°î
 (c⁄° *
ªgi°øti⁄_id
,

59 
CORBA_Obje˘
 
obj
);

61 
b⁄obo_a˘iv©i⁄_a˘ive_£rvî_uƒegi°î
 (c⁄° *
iid
,

62 
CORBA_Obje˘
 
obj
);

64 *
b⁄obo_a˘iv©i⁄_make_ªgi°øti⁄_id
 (c⁄° *
iid
,

65 c⁄° *
di•œy
);

69 c⁄° *
b⁄obo_a˘iv©i⁄_iid_gë
 ();

71 
	gG_END_DECLS


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-server-info.h

26 #i‚de‡
BONOBO_ACTIVATION_SERVER_INFO_H


27 
	#BONOBO_ACTIVATION_SERVER_INFO_H


	)

29 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_A˘iv©i⁄_ty≥s.h
>

31 
G_BEGIN_DECLS


33 
B⁄obo_A˘iv©i⁄Pr›îty
 *
b⁄obo_£rvî_öfo_¥›_föd
 (
B⁄obo_SîvîInfo
 *
£rvî
,

34 c⁄° *
¥›_«me
);

35 c⁄° *
b⁄obo_£rvî_öfo_¥›_lookup
 (
B⁄obo_SîvîInfo
 *
£rvî
,

36 c⁄° *
¥›_«me
,

37 
GSLi°
 *
i18n_œnguages
);

38 
B⁄obo_A˘iv©i⁄Pr›îtyVÆue_c›y
 (
B⁄obo_A˘iv©i⁄Pr›îtyVÆue
 *
c›y
,

39 c⁄° 
B⁄obo_A˘iv©i⁄Pr›îtyVÆue
 *
‹igöÆ
);

40 
B⁄obo_A˘iv©i⁄Pr›îty_c›y
 (
B⁄obo_A˘iv©i⁄Pr›îty
 *
c›y
,

41 c⁄° 
B⁄obo_A˘iv©i⁄Pr›îty
 *
‹igöÆ
);

42 
CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty_c›y
 (
CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
 *
c›y
,

43 c⁄° 
CORBA_£quí˚_B⁄obo_A˘iv©i⁄Pr›îty
 *
‹igöÆ
);

44 
B⁄obo_SîvîInfo_c›y
 (
B⁄obo_SîvîInfo
 *
c›y
,

45 c⁄° 
B⁄obo_SîvîInfo
 *
‹igöÆ
);

46 
B⁄obo_SîvîInfo
 *
B⁄obo_SîvîInfo_du∂iˇã
 (c⁄° B⁄obo_SîvîInfÿ*
‹igöÆ
);

47 
B⁄obo_SîvîInfoLi°
 *
B⁄obo_SîvîInfoLi°_du∂iˇã
 (c⁄° B⁄obo_SîvîInfoLi° *
‹igöÆ
);

49 
	gG_END_DECLS


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-shlib.h

24 #i‚de‡
BONOBO_ACTIVATION_SHLIB_H


25 
	#BONOBO_ACTIVATION_SHLIB_H


	)

27 
	~<b⁄obo-a˘iv©i⁄/B⁄obo_A˘iv©i⁄_ty≥s.h
>

29 
G_BEGIN_DECLS


32 c⁄° *
	miid
;

42 
CORBA_Obje˘
 (*
a˘iv©e
Ë(
P‹èbÀSîvî_POA
 
	mpﬂ
,

43 c⁄° *
	miid
,

44 
gpoöãr
 
	mim∂_±r
,

47 
CORBA_Envú⁄mít
 *
	mev
);

48 
gpoöãr
 
	mdummy
[4];

49 } 
	tB⁄oboA˘iv©i⁄PlugöObje˘
;

52 c⁄° 
B⁄oboA˘iv©i⁄PlugöObje˘
 *
	m∂ugö_obje˘_li°
;

53 c⁄° *
	mdes¸ùti⁄
;

54 
gpoöãr
 
	mdummy
[8];

55 } 
	tB⁄oboA˘iv©i⁄Plugö
;

57 
b⁄obo_a˘iv©i⁄_∂ugö_u£
 (
P‹èbÀSîvî_Sîv™t
 
£rv™t
,

58 
gpoöãr
 
im∂_±r
);

60 
b⁄obo_a˘iv©i⁄_∂ugö_unu£
 (
gpoöãr
 
im∂_±r
);

62 #i‚de‡
BONOBO_DISABLE_DEPRECATED


63 
CORBA_Obje˘
 
b⁄obo_a˘iv©i⁄_a˘iv©e_shlib_£rvî
 (
B⁄obo_A˘iv©i⁄Resu…
 *
sh
,

64 
CORBA_Envú⁄mít
 *
ev
);

67 
	gG_END_DECLS


	@/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-version.h

23 #i‚de‡
BONOBO_ACTIVATION_VERSION_H


24 
	#BONOBO_ACTIVATION_VERSION_H


	)

26 
	#BONOBO_ACTIVATION_MAJOR_VERSION
 (2)

	)

27 
	#BONOBO_ACTIVATION_MINOR_VERSION
 (24)

	)

28 
	#BONOBO_ACTIVATION_MICRO_VERSION
 (1)

	)

	@/usr/include/cairo/cairo-deprecated.h

36 #i‚de‡
CAIRO_DEPRECATED_H


37 
	#CAIRO_DEPRECATED_H


	)

51 
	#CAIRO_FORMAT_RGB16_565
 4

	)

53 
	#CAIRO_FONT_TYPE_ATSUI
 
CAIRO_FONT_TYPE_QUARTZ


	)

71 
	#ˇúo_cuºít_f⁄t_exã¡s
 
ˇúo_cuºít_f⁄t_exã¡s_REPLACED_BY_ˇúo_f⁄t_exã¡s


	)

72 
	#ˇúo_gë_f⁄t_exã¡s
 
ˇúo_gë_f⁄t_exã¡s_REPLACED_BY_ˇúo_f⁄t_exã¡s


	)

73 
	#ˇúo_cuºít_›î©‹
 
ˇúo_cuºít_›î©‹_REPLACED_BY_ˇúo_gë_›î©‹


	)

74 
	#ˇúo_cuºít_tﬁî™˚
 
ˇúo_cuºít_tﬁî™˚_REPLACED_BY_ˇúo_gë_tﬁî™˚


	)

75 
	#ˇúo_cuºít_poöt
 
ˇúo_cuºít_poöt_REPLACED_BY_ˇúo_gë_cuºít_poöt


	)

76 
	#ˇúo_cuºít_fûl_ruÀ
 
ˇúo_cuºít_fûl_ruÀ_REPLACED_BY_ˇúo_gë_fûl_ruÀ


	)

77 
	#ˇúo_cuºít_löe_width
 
ˇúo_cuºít_löe_width_REPLACED_BY_ˇúo_gë_löe_width


	)

78 
	#ˇúo_cuºít_löe_ˇp
 
ˇúo_cuºít_löe_ˇp_REPLACED_BY_ˇúo_gë_löe_ˇp


	)

79 
	#ˇúo_cuºít_löe_joö
 
ˇúo_cuºít_löe_joö_REPLACED_BY_ˇúo_gë_löe_joö


	)

80 
	#ˇúo_cuºít_môî_limô
 
ˇúo_cuºít_môî_limô_REPLACED_BY_ˇúo_gë_môî_limô


	)

81 
	#ˇúo_cuºít_m©rix
 
ˇúo_cuºít_m©rix_REPLACED_BY_ˇúo_gë_m©rix


	)

82 
	#ˇúo_cuºít_èrgë_surÁ˚
 
ˇúo_cuºít_èrgë_surÁ˚_REPLACED_BY_ˇúo_gë_èrgë


	)

83 
	#ˇúo_gë_°©us
 
ˇúo_gë_°©us_REPLACED_BY_ˇúo_°©us


	)

84 
	#ˇúo_c⁄ˇt_m©rix
 
ˇúo_c⁄ˇt_m©rix_REPLACED_BY_ˇúo_å™sf‹m


	)

85 
	#ˇúo_sˇÀ_f⁄t
 
ˇúo_sˇÀ_f⁄t_REPLACED_BY_ˇúo_£t_f⁄t_size


	)

86 
	#ˇúo_£À˘_f⁄t
 
ˇúo_£À˘_f⁄t_REPLACED_BY_ˇúo_£À˘_f⁄t_Á˚


	)

87 
	#ˇúo_å™sf‹m_f⁄t
 
ˇúo_å™sf‹m_f⁄t_REPLACED_BY_ˇúo_£t_f⁄t_m©rix


	)

88 
	#ˇúo_å™sf‹m_poöt
 
ˇúo_å™sf‹m_poöt_REPLACED_BY_ˇúo_u£r_to_devi˚


	)

89 
	#ˇúo_å™sf‹m_di°™˚
 
ˇúo_å™sf‹m_di°™˚_REPLACED_BY_ˇúo_u£r_to_devi˚_di°™˚


	)

90 
	#ˇúo_övî£_å™sf‹m_poöt
 
ˇúo_övî£_å™sf‹m_poöt_REPLACED_BY_ˇúo_devi˚_to_u£r


	)

91 
	#ˇúo_övî£_å™sf‹m_di°™˚
 
ˇúo_övî£_å™sf‹m_di°™˚_REPLACED_BY_ˇúo_devi˚_to_u£r_di°™˚


	)

92 
	#ˇúo_öô_˛ù
 
ˇúo_öô_˛ù_REPLACED_BY_ˇúo_ª£t_˛ù


	)

93 
	#ˇúo_surÁ˚_¸óã_f‹_image
 
ˇúo_surÁ˚_¸óã_f‹_image_REPLACED_BY_ˇúo_image_surÁ˚_¸óã_f‹_d©a


	)

94 
	#ˇúo_deÁu…_m©rix
 
ˇúo_deÁu…_m©rix_REPLACED_BY_ˇúo_idítôy_m©rix


	)

95 
	#ˇúo_m©rix_£t_afföe
 
ˇúo_m©rix_£t_afföe_REPLACED_BY_ˇúo_m©rix_öô


	)

96 
	#ˇúo_m©rix_£t_idítôy
 
ˇúo_m©rix_£t_idítôy_REPLACED_BY_ˇúo_m©rix_öô_idítôy


	)

97 
	#ˇúo_∑âîn_add_cﬁ‹_°›
 
ˇúo_∑âîn_add_cﬁ‹_°›_REPLACED_BY_ˇúo_∑âîn_add_cﬁ‹_°›_rgba


	)

98 
	#ˇúo_£t_rgb_cﬁ‹
 
ˇúo_£t_rgb_cﬁ‹_REPLACED_BY_ˇúo_£t_sour˚_rgb


	)

99 
	#ˇúo_£t_∑âîn
 
ˇúo_£t_∑âîn_REPLACED_BY_ˇúo_£t_sour˚


	)

100 
	#ˇúo_xlib_surÁ˚_¸óã_f‹_pixm≠_wôh_visuÆ
 
ˇúo_xlib_surÁ˚_¸óã_f‹_pixm≠_wôh_visuÆ_REPLACED_BY_ˇúo_xlib_surÁ˚_¸óã


	)

101 
	#ˇúo_xlib_surÁ˚_¸óã_f‹_wödow_wôh_visuÆ
 
ˇúo_xlib_surÁ˚_¸óã_f‹_wödow_wôh_visuÆ_REPLACED_BY_ˇúo_xlib_surÁ˚_¸óã


	)

102 
	#ˇúo_xcb_surÁ˚_¸óã_f‹_pixm≠_wôh_visuÆ
 
ˇúo_xcb_surÁ˚_¸óã_f‹_pixm≠_wôh_visuÆ_REPLACED_BY_ˇúo_xcb_surÁ˚_¸óã


	)

103 
	#ˇúo_xcb_surÁ˚_¸óã_f‹_wödow_wôh_visuÆ
 
ˇúo_xcb_surÁ˚_¸óã_f‹_wödow_wôh_visuÆ_REPLACED_BY_ˇúo_xcb_surÁ˚_¸óã


	)

104 
	#ˇúo_ps_surÁ˚_£t_dpi
 
ˇúo_ps_surÁ˚_£t_dpi_REPLACED_BY_ˇúo_surÁ˚_£t_ÁŒback_ªsﬁuti⁄


	)

105 
	#ˇúo_pdf_surÁ˚_£t_dpi
 
ˇúo_pdf_surÁ˚_£t_dpi_REPLACED_BY_ˇúo_surÁ˚_£t_ÁŒback_ªsﬁuti⁄


	)

106 
	#ˇúo_svg_surÁ˚_£t_dpi
 
ˇúo_svg_surÁ˚_£t_dpi_REPLACED_BY_ˇúo_surÁ˚_£t_ÁŒback_ªsﬁuti⁄


	)

107 
	#ˇúo_©sui_f⁄t_Á˚_¸óã_f‹_©su_f⁄t_id
 
ˇúo_©sui_f⁄t_Á˚_¸óã_f‹_©su_f⁄t_id_REPLACED_BY_ˇúo_qu¨tz_f⁄t_Á˚_¸óã_f‹_©su_f⁄t_id


	)

109 
	#ˇúo_cuºít_∑th
 
ˇúo_cuºít_∑th_DEPRECATED_BY_ˇúo_c›y_∑th


	)

110 
	#ˇúo_cuºít_∑th_Ê©
 
ˇúo_cuºít_∑th_Ê©_DEPRECATED_BY_ˇúo_c›y_∑th_Ê©


	)

111 
	#ˇúo_gë_∑th
 
ˇúo_gë_∑th_DEPRECATED_BY_ˇúo_c›y_∑th


	)

112 
	#ˇúo_gë_∑th_Ê©
 
ˇúo_gë_∑th_Ê©_DEPRECATED_BY_ˇúo_gë_∑th_Ê©


	)

113 
	#ˇúo_£t_Æpha
 
ˇúo_£t_Æpha_DEPRECATED_BY_ˇúo_£t_sour˚_rgba_OR_ˇúo_∑öt_wôh_Æpha


	)

114 
	#ˇúo_show_surÁ˚
 
ˇúo_show_surÁ˚_DEPRECATED_BY_ˇúo_£t_sour˚_surÁ˚_AND_ˇúo_∑öt


	)

115 
	#ˇúo_c›y
 
ˇúo_c›y_DEPRECATED_BY_ˇúo_¸óã_AND_MANY_INDIVIDUAL_FUNCTIONS


	)

116 
	#ˇúo_surÁ˚_£t_ª≥©
 
ˇúo_surÁ˚_£t_ª≥©_DEPRECATED_BY_ˇúo_∑âîn_£t_exãnd


	)

117 
	#ˇúo_surÁ˚_£t_m©rix
 
ˇúo_surÁ˚_£t_m©rix_DEPRECATED_BY_ˇúo_∑âîn_£t_m©rix


	)

118 
	#ˇúo_surÁ˚_gë_m©rix
 
ˇúo_surÁ˚_gë_m©rix_DEPRECATED_BY_ˇúo_∑âîn_gë_m©rix


	)

119 
	#ˇúo_surÁ˚_£t_fûãr
 
ˇúo_surÁ˚_£t_fûãr_DEPRECATED_BY_ˇúo_∑âîn_£t_fûãr


	)

120 
	#ˇúo_surÁ˚_gë_fûãr
 
ˇúo_surÁ˚_gë_fûãr_DEPRECATED_BY_ˇúo_∑âîn_gë_fûãr


	)

121 
	#ˇúo_m©rix_¸óã
 
ˇúo_m©rix_¸óã_DEPRECATED_BY_ˇúo_m©rix_t


	)

122 
	#ˇúo_m©rix_de°roy
 
ˇúo_m©rix_de°roy_DEPRECATED_BY_ˇúo_m©rix_t


	)

123 
	#ˇúo_m©rix_c›y
 
ˇúo_m©rix_c›y_DEPRECATED_BY_ˇúo_m©rix_t


	)

124 
	#ˇúo_m©rix_gë_afföe
 
ˇúo_m©rix_gë_afföe_DEPRECATED_BY_ˇúo_m©rix_t


	)

125 
	#ˇúo_£t_èrgë_surÁ˚
 
ˇúo_£t_èrgë_surÁ˚_DEPRECATED_BY_ˇúo_¸óã


	)

126 
	#ˇúo_£t_èrgë_glôz
 
ˇúo_£t_èrgë_glôz_DEPRECATED_BY_ˇúo_glôz_surÁ˚_¸óã


	)

127 
	#ˇúo_£t_èrgë_image
 
ˇúo_£t_èrgë_image_DEPRECATED_BY_ˇúo_image_surÁ˚_¸óã_f‹_d©a


	)

128 
	#ˇúo_£t_èrgë_pdf
 
ˇúo_£t_èrgë_pdf_DEPRECATED_BY_ˇúo_pdf_surÁ˚_¸óã


	)

129 
	#ˇúo_£t_èrgë_≤g
 
ˇúo_£t_èrgë_≤g_DEPRECATED_BY_ˇúo_surÁ˚_wrôe_to_≤g


	)

130 
	#ˇúo_£t_èrgë_ps
 
ˇúo_£t_èrgë_ps_DEPRECATED_BY_ˇúo_ps_surÁ˚_¸óã


	)

131 
	#ˇúo_£t_èrgë_qu¨tz
 
ˇúo_£t_èrgë_qu¨tz_DEPRECATED_BY_ˇúo_qu¨tz_surÁ˚_¸óã


	)

132 
	#ˇúo_£t_èrgë_wö32
 
ˇúo_£t_èrgë_wö32_DEPRECATED_BY_ˇúo_wö32_surÁ˚_¸óã


	)

133 
	#ˇúo_£t_èrgë_xcb
 
ˇúo_£t_èrgë_xcb_DEPRECATED_BY_ˇúo_xcb_surÁ˚_¸óã


	)

134 
	#ˇúo_£t_èrgë_døwabÀ
 
ˇúo_£t_èrgë_døwabÀ_DEPRECATED_BY_ˇúo_xlib_surÁ˚_¸óã


	)

135 
	#ˇúo_gë_°©us_°rög
 
ˇúo_gë_°©us_°rög_DEPRECATED_BY_ˇúo_°©us_AND_ˇúo_°©us_to_°rög


	)

136 
	#ˇúo_°©us_°rög
 
ˇúo_°©us_°rög_DEPRECATED_BY_ˇúo_°©us_AND_ˇúo_°©us_to_°rög


	)

	@/usr/include/cairo/cairo-features.h

2 #i‚de‡
CAIRO_FEATURES_H


3 
	#CAIRO_FEATURES_H


	)

5 
	#CAIRO_HAS_DIRECTFB_SURFACE
 1

	)

6 
	#CAIRO_HAS_FT_FONT
 1

	)

7 
	#CAIRO_HAS_IMAGE_SURFACE
 1

	)

8 
	#CAIRO_HAS_PDF_SURFACE
 1

	)

9 
	#CAIRO_HAS_PNG_FUNCTIONS
 1

	)

10 
	#CAIRO_HAS_PS_SURFACE
 1

	)

11 
	#CAIRO_HAS_SVG_SURFACE
 1

	)

12 
	#CAIRO_HAS_USER_FONT
 1

	)

13 
	#CAIRO_HAS_XCB_SURFACE
 1

	)

14 
	#CAIRO_HAS_XLIB_SURFACE
 1

	)

15 
	#CAIRO_HAS_XLIB_XRENDER_SURFACE
 1

	)

	@/usr/include/cairo/cairo-version.h

1 #i‚de‡
CAIRO_VERSION_H


2 
	#CAIRO_VERSION_H


	)

4 
	#CAIRO_VERSION_MAJOR
 1

	)

5 
	#CAIRO_VERSION_MINOR
 8

	)

6 
	#CAIRO_VERSION_MICRO
 6

	)

	@/usr/include/glib-2.0/gio/gappinfo.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_APP_INFO_H__


28 
	#__G_APP_INFO_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_APP_INFO
 (
	`g_≠p_öfo_gë_ty≥
 ())

	)

35 
	#G_APP_INFO
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_APP_INFO
, 
GAµInfo
))

	)

36 
	#G_IS_APP_INFO
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_APP_INFO
))

	)

37 
	#G_APP_INFO_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_APP_INFO
, 
GAµInfoIÁ˚
))

	)

39 
	#G_TYPE_APP_LAUNCH_CONTEXT
 (
	`g_≠p_œunch_c⁄ãxt_gë_ty≥
 ())

	)

40 
	#G_APP_LAUNCH_CONTEXT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_APP_LAUNCH_CONTEXT
, 
GAµLaunchC⁄ãxt
))

	)

41 
	#G_APP_LAUNCH_CONTEXT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_APP_LAUNCH_CONTEXT
, 
GAµLaunchC⁄ãxtCœss
))

	)

42 
	#G_IS_APP_LAUNCH_CONTEXT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_APP_LAUNCH_CONTEXT
))

	)

43 
	#G_IS_APP_LAUNCH_CONTEXT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_APP_LAUNCH_CONTEXT
))

	)

44 
	#G_APP_LAUNCH_CONTEXT_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_APP_LAUNCH_CONTEXT
, 
GAµLaunchC⁄ãxtCœss
))

	)

46 
_GAµLaunchC⁄ãxtCœss
 
	tGAµLaunchC⁄ãxtCœss
;

47 
_GAµLaunchC⁄ãxtPriv©e
 
	tGAµLaunchC⁄ãxtPriv©e
;

84 
_GAµInfoIÁ˚
 
	tGAµInfoIÁ˚
;

86 
	s_GAµInfoIÁ˚


88 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

92 
	mGAµInfo
 * (* 
	mdup
Ë(
GAµInfo
 *
	m≠pöfo
);

93 
gboﬁón
 (* 
equÆ
Ë(
GAµInfo
 *
	m≠pöfo1
,

94 
GAµInfo
 *
	m≠pöfo2
);

95 c⁄° * (* 
	mgë_id
Ë(
GAµInfo
 *
	m≠pöfo
);

96 c⁄° * (* 
	mgë_«me
Ë(
GAµInfo
 *
	m≠pöfo
);

97 c⁄° * (* 
	mgë_des¸ùti⁄
Ë(
GAµInfo
 *
	m≠pöfo
);

98 c⁄° * (* 
	mgë_execuèbÀ
Ë(
GAµInfo
 *
	m≠pöfo
);

99 
	mGIc⁄
 * (* 
	mgë_ic⁄
Ë(
GAµInfo
 *
	m≠pöfo
);

100 
gboﬁón
 (* 
œunch
Ë(
GAµInfo
 *
	m≠pöfo
,

101 
GLi°
 *
	mfûíames
,

102 
GAµLaunchC⁄ãxt
 *
	mœunch_c⁄ãxt
,

103 
GEº‹
 **
	mîr‹
);

104 
gboﬁón
 (* 
suµ‹ts_uris
Ë(
GAµInfo
 *
	m≠pöfo
);

105 
gboﬁón
 (* 
suµ‹ts_fûes
Ë(
GAµInfo
 *
	m≠pöfo
);

106 
gboﬁón
 (* 
œunch_uris
Ë(
GAµInfo
 *
	m≠pöfo
,

107 
GLi°
 *
	muris
,

108 
GAµLaunchC⁄ãxt
 *
	mœunch_c⁄ãxt
,

109 
GEº‹
 **
	mîr‹
);

110 
gboﬁón
 (* 
should_show
Ë(
GAµInfo
 *
	m≠pöfo
);

113 
gboﬁón
 (* 
£t_as_deÁu…_f‹_ty≥
Ë(
GAµInfo
 *
	m≠pöfo
,

114 c⁄° *
	mc⁄ã¡_ty≥
,

115 
GEº‹
 **
	mîr‹
);

116 
gboﬁón
 (* 
£t_as_deÁu…_f‹_exãnsi⁄
Ë(
GAµInfo
 *
	m≠pöfo
,

117 c⁄° *
	mexãnsi⁄
,

118 
GEº‹
 **
	mîr‹
);

119 
gboﬁón
 (* 
add_suµ‹ts_ty≥
Ë(
GAµInfo
 *
	m≠pöfo
,

120 c⁄° *
	mc⁄ã¡_ty≥
,

121 
GEº‹
 **
	mîr‹
);

122 
gboﬁón
 (* 
ˇn_ªmove_suµ‹ts_ty≥
Ë(
GAµInfo
 *
	m≠pöfo
);

123 
gboﬁón
 (* 
ªmove_suµ‹ts_ty≥
Ë(
GAµInfo
 *
	m≠pöfo
,

124 c⁄° *
	mc⁄ã¡_ty≥
,

125 
GEº‹
 **
	mîr‹
);

126 
gboﬁón
 (* 
ˇn_dñëe
Ë(
GAµInfo
 *
	m≠pöfo
);

127 
gboﬁón
 (* 
do_dñëe
Ë(
GAµInfo
 *
	m≠pöfo
);

128 c⁄° * (* 
	mgë_comm™dlöe
Ë(
GAµInfo
 *
	m≠pöfo
);

131 
GTy≥
 
	$g_≠p_öfo_gë_ty≥
 (Ë
G_GNUC_CONST
;

132 
GAµInfo
 * 
	`g_≠p_öfo_¸óã_‰om_comm™dlöe
 (c⁄° *
comm™dlöe
,

133 c⁄° *
≠∂iˇti⁄_«me
,

134 
GAµInfoCª©eFœgs
 
Êags
,

135 
GEº‹
 **
îr‹
);

136 
GAµInfo
 * 
	`g_≠p_öfo_dup
 (GAµInfÿ*
≠pöfo
);

137 
gboﬁón
 
	`g_≠p_öfo_equÆ
 (
GAµInfo
 *
≠pöfo1
,

138 
GAµInfo
 *
≠pöfo2
);

139 c⁄° *
	`g_≠p_öfo_gë_id
 (
GAµInfo
 *
≠pöfo
);

140 c⁄° *
	`g_≠p_öfo_gë_«me
 (
GAµInfo
 *
≠pöfo
);

141 c⁄° *
	`g_≠p_öfo_gë_des¸ùti⁄
 (
GAµInfo
 *
≠pöfo
);

142 c⁄° *
	`g_≠p_öfo_gë_execuèbÀ
 (
GAµInfo
 *
≠pöfo
);

143 c⁄° *
	`g_≠p_öfo_gë_comm™dlöe
 (
GAµInfo
 *
≠pöfo
);

144 
GIc⁄
 * 
	`g_≠p_öfo_gë_ic⁄
 (
GAµInfo
 *
≠pöfo
);

145 
gboﬁón
 
	`g_≠p_öfo_œunch
 (
GAµInfo
 *
≠pöfo
,

146 
GLi°
 *
fûes
,

147 
GAµLaunchC⁄ãxt
 *
œunch_c⁄ãxt
,

148 
GEº‹
 **
îr‹
);

149 
gboﬁón
 
	`g_≠p_öfo_suµ‹ts_uris
 (
GAµInfo
 *
≠pöfo
);

150 
gboﬁón
 
	`g_≠p_öfo_suµ‹ts_fûes
 (
GAµInfo
 *
≠pöfo
);

151 
gboﬁón
 
	`g_≠p_öfo_œunch_uris
 (
GAµInfo
 *
≠pöfo
,

152 
GLi°
 *
uris
,

153 
GAµLaunchC⁄ãxt
 *
œunch_c⁄ãxt
,

154 
GEº‹
 **
îr‹
);

155 
gboﬁón
 
	`g_≠p_öfo_should_show
 (
GAµInfo
 *
≠pöfo
);

157 
gboﬁón
 
	`g_≠p_öfo_£t_as_deÁu…_f‹_ty≥
 (
GAµInfo
 *
≠pöfo
,

158 c⁄° *
c⁄ã¡_ty≥
,

159 
GEº‹
 **
îr‹
);

160 
gboﬁón
 
	`g_≠p_öfo_£t_as_deÁu…_f‹_exãnsi⁄
 (
GAµInfo
 *
≠pöfo
,

161 c⁄° *
exãnsi⁄
,

162 
GEº‹
 **
îr‹
);

163 
gboﬁón
 
	`g_≠p_öfo_add_suµ‹ts_ty≥
 (
GAµInfo
 *
≠pöfo
,

164 c⁄° *
c⁄ã¡_ty≥
,

165 
GEº‹
 **
îr‹
);

166 
gboﬁón
 
	`g_≠p_öfo_ˇn_ªmove_suµ‹ts_ty≥
 (
GAµInfo
 *
≠pöfo
);

167 
gboﬁón
 
	`g_≠p_öfo_ªmove_suµ‹ts_ty≥
 (
GAµInfo
 *
≠pöfo
,

168 c⁄° *
c⁄ã¡_ty≥
,

169 
GEº‹
 **
îr‹
);

170 
gboﬁón
 
	`g_≠p_öfo_ˇn_dñëe
 (
GAµInfo
 *
≠pöfo
);

171 
gboﬁón
 
	`g_≠p_öfo_dñëe
 (
GAµInfo
 *
≠pöfo
);

173 
GLi°
 * 
	`g_≠p_öfo_gë_Æl
 ();

174 
GLi°
 * 
	`g_≠p_öfo_gë_Æl_f‹_ty≥
 (c⁄° *
c⁄ã¡_ty≥
);

175 
	`g_≠p_öfo_ª£t_ty≥_assocüti⁄s
 (c⁄° *
c⁄ã¡_ty≥
);

176 
GAµInfo
 *
	`g_≠p_öfo_gë_deÁu…_f‹_ty≥
 (c⁄° *
c⁄ã¡_ty≥
,

177 
gboﬁón
 
mu°_suµ‹t_uris
);

178 
GAµInfo
 *
	`g_≠p_öfo_gë_deÁu…_f‹_uri_scheme
 (c⁄° *
uri_scheme
);

180 
gboﬁón
 
	`g_≠p_öfo_œunch_deÁu…_f‹_uri
 (c⁄° *
uri
,

181 
GAµLaunchC⁄ãxt
 *
œunch_c⁄ãxt
,

182 
GEº‹
 **
îr‹
);

192 
	s_GAµLaunchC⁄ãxt


194 
GObje˘
 
∑ª¡_ö°™˚
;

197 
GAµLaunchC⁄ãxtPriv©e
 *
¥iv
;

200 
	s_GAµLaunchC⁄ãxtCœss


202 
GObje˘Cœss
 
∑ª¡_˛ass
;

204 * (* 
gë_di•œy
Ë(
GAµLaunchC⁄ãxt
 *
c⁄ãxt
,

205 
GAµInfo
 *
öfo
,

206 
GLi°
 *
fûes
);

207 * (* 
gë_°¨tup_nŸify_id
Ë(
GAµLaunchC⁄ãxt
 *
c⁄ãxt
,

208 
GAµInfo
 *
öfo
,

209 
GLi°
 *
fûes
);

210 (* 
œunch_Áûed
Ë(
GAµLaunchC⁄ãxt
 *
c⁄ãxt
,

211 c⁄° *
°¨tup_nŸify_id
);

214 (*
_g_ª£rved1
) ();

215 (*
_g_ª£rved2
) ();

216 (*
_g_ª£rved3
) ();

217 (*
_g_ª£rved4
) ();

218 (*
_g_ª£rved5
) ();

221 
GTy≥
 
	$g_≠p_œunch_c⁄ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

222 
GAµLaunchC⁄ãxt
 *
	`g_≠p_œunch_c⁄ãxt_√w
 ();

223 * 
	`g_≠p_œunch_c⁄ãxt_gë_di•œy
 (
GAµLaunchC⁄ãxt
 *
c⁄ãxt
,

224 
GAµInfo
 *
öfo
,

225 
GLi°
 *
fûes
);

226 * 
	`g_≠p_œunch_c⁄ãxt_gë_°¨tup_nŸify_id
 (
GAµLaunchC⁄ãxt
 *
c⁄ãxt
,

227 
GAµInfo
 *
öfo
,

228 
GLi°
 *
fûes
);

229 
	`g_≠p_œunch_c⁄ãxt_œunch_Áûed
 (
GAµLaunchC⁄ãxt
 *
c⁄ãxt
,

230 c⁄° * 
°¨tup_nŸify_id
);

232 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gasyncresult.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_ASYNC_RESULT_H__


28 
	#__G_ASYNC_RESULT_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_ASYNC_RESULT
 (
	`g_async_ªsu…_gë_ty≥
 ())

	)

35 
	#G_ASYNC_RESULT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_ASYNC_RESULT
, 
GAsyncResu…
))

	)

36 
	#G_IS_ASYNC_RESULT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_ASYNC_RESULT
))

	)

37 
	#G_ASYNC_RESULT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_ASYNC_RESULT
, 
GAsyncResu…IÁ˚
))

	)

45 
_GAsyncResu…IÁ˚
 
	tGAsyncResu…IÁ˚
;

56 
	s_GAsyncResu…IÁ˚


58 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

62 
gpoöãr
 (* 
gë_u£r_d©a
Ë(
GAsyncResu…
 *
	masync_ªsu…
);

63 
	mGObje˘
 * (* 
	mgë_sour˚_obje˘
Ë(
GAsyncResu…
 *
	masync_ªsu…
);

66 
GTy≥
 
	$g_async_ªsu…_gë_ty≥
 (Ë
G_GNUC_CONST
;

68 
gpoöãr
 
	`g_async_ªsu…_gë_u£r_d©a
 (
GAsyncResu…
 *
ªs
);

69 
GObje˘
 *
	`g_async_ªsu…_gë_sour˚_obje˘
 (
GAsyncResu…
 *
ªs
);

71 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gbufferedinputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_BUFFERED_INPUT_STREAM_H__


28 
	#__G_BUFFERED_INPUT_STREAM_H__


	)

30 
	~<gio/gfûãröput°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_BUFFERED_INPUT_STREAM
 (
	`g_buf„ªd_öput_°ªam_gë_ty≥
 ())

	)

35 
	#G_BUFFERED_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_BUFFERED_INPUT_STREAM
, 
GBuf„ªdI≈utSåóm
))

	)

36 
	#G_BUFFERED_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_BUFFERED_INPUT_STREAM
, 
GBuf„ªdI≈utSåómCœss
))

	)

37 
	#G_IS_BUFFERED_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_BUFFERED_INPUT_STREAM
))

	)

38 
	#G_IS_BUFFERED_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_BUFFERED_INPUT_STREAM
))

	)

39 
	#G_BUFFERED_INPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_BUFFERED_INPUT_STREAM
, 
GBuf„ªdI≈utSåómCœss
))

	)

46 
_GBuf„ªdI≈utSåómCœss
 
	tGBuf„ªdI≈utSåómCœss
;

47 
_GBuf„ªdI≈utSåómPriv©e
 
	tGBuf„ªdI≈utSåómPriv©e
;

49 
	s_GBuf„ªdI≈utSåóm


51 
GFûãrI≈utSåóm
 
	m∑ª¡_ö°™˚
;

54 
GBuf„ªdI≈utSåómPriv©e
 *
	m¥iv
;

57 
	s_GBuf„ªdI≈utSåómCœss


59 
GFûãrI≈utSåómCœss
 
	m∑ª¡_˛ass
;

61 
gssize
 (* 
fûl
Ë(
GBuf„ªdI≈utSåóm
 *
	m°ªam
,

62 
gssize
 
	mcou¡
,

63 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

64 
GEº‹
 **
	mîr‹
);

67 (* 
	mfûl_async
Ë(
GBuf„ªdI≈utSåóm
 *
	m°ªam
,

68 
gssize
 
	mcou¡
,

69 
	mio_¥i‹ôy
,

70 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

71 
GAsyncRódyCÆlback
 
	mˇŒback
,

72 
gpoöãr
 
	mu£r_d©a
);

73 
gssize
 (* 
fûl_föish
Ë(
GBuf„ªdI≈utSåóm
 *
	m°ªam
,

74 
GAsyncResu…
 *
	mªsu…
,

75 
GEº‹
 **
	mîr‹
);

79 (*
	m_g_ª£rved1
) ();

80 (*
	m_g_ª£rved2
) ();

81 (*
	m_g_ª£rved3
) ();

82 (*
	m_g_ª£rved4
) ();

83 (*
	m_g_ª£rved5
) ();

87 
GTy≥
 
	$g_buf„ªd_öput_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

88 
GI≈utSåóm
* 
	`g_buf„ªd_öput_°ªam_√w
 (GI≈utSåóm *
ba£_°ªam
);

89 
GI≈utSåóm
* 
	`g_buf„ªd_öput_°ªam_√w_sized
 (GI≈utSåóm *
ba£_°ªam
,

90 
gsize
 
size
);

92 
gsize
 
	`g_buf„ªd_öput_°ªam_gë_buf„r_size
 (
GBuf„ªdI≈utSåóm
 *
°ªam
);

93 
	`g_buf„ªd_öput_°ªam_£t_buf„r_size
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

94 
gsize
 
size
);

95 
gsize
 
	`g_buf„ªd_öput_°ªam_gë_avaûabÀ
 (
GBuf„ªdI≈utSåóm
 *
°ªam
);

96 
gsize
 
	`g_buf„ªd_öput_°ªam_≥ek
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

97 *
buf„r
,

98 
gsize
 
off£t
,

99 
gsize
 
cou¡
);

100 c⁄° * 
	`g_buf„ªd_öput_°ªam_≥ek_buf„r
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

101 
gsize
 *
cou¡
);

103 
gssize
 
	`g_buf„ªd_öput_°ªam_fûl
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

104 
gssize
 
cou¡
,

105 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

106 
GEº‹
 **
îr‹
);

107 
	`g_buf„ªd_öput_°ªam_fûl_async
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

108 
gssize
 
cou¡
,

109 
io_¥i‹ôy
,

110 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

111 
GAsyncRódyCÆlback
 
ˇŒback
,

112 
gpoöãr
 
u£r_d©a
);

113 
gssize
 
	`g_buf„ªd_öput_°ªam_fûl_föish
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

114 
GAsyncResu…
 *
ªsu…
,

115 
GEº‹
 **
îr‹
);

117 
	`g_buf„ªd_öput_°ªam_ªad_byã
 (
GBuf„ªdI≈utSåóm
 *
°ªam
,

118 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

119 
GEº‹
 **
îr‹
);

121 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gbufferedoutputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_BUFFERED_OUTPUT_STREAM_H__


28 
	#__G_BUFFERED_OUTPUT_STREAM_H__


	)

30 
	~<gio/gfûãrouçut°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_BUFFERED_OUTPUT_STREAM
 (
	`g_buf„ªd_ouçut_°ªam_gë_ty≥
 ())

	)

35 
	#G_BUFFERED_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_BUFFERED_OUTPUT_STREAM
, 
GBuf„ªdOuçutSåóm
))

	)

36 
	#G_BUFFERED_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_BUFFERED_OUTPUT_STREAM
, 
GBuf„ªdOuçutSåómCœss
))

	)

37 
	#G_IS_BUFFERED_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_BUFFERED_OUTPUT_STREAM
))

	)

38 
	#G_IS_BUFFERED_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_BUFFERED_OUTPUT_STREAM
))

	)

39 
	#G_BUFFERED_OUTPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_BUFFERED_OUTPUT_STREAM
, 
GBuf„ªdOuçutSåómCœss
))

	)

47 
_GBuf„ªdOuçutSåómCœss
 
	tGBuf„ªdOuçutSåómCœss
;

48 
_GBuf„ªdOuçutSåómPriv©e
 
	tGBuf„ªdOuçutSåómPriv©e
;

50 
	s_GBuf„ªdOuçutSåóm


52 
GFûãrOuçutSåóm
 
	m∑ª¡_ö°™˚
;

55 
GBuf„ªdOuçutSåómPriv©e
 *
	m¥iv
;

58 
	s_GBuf„ªdOuçutSåómCœss


60 
GFûãrOuçutSåómCœss
 
	m∑ª¡_˛ass
;

64 (*
	m_g_ª£rved1
) ();

65 (*
	m_g_ª£rved2
) ();

69 
GTy≥
 
	$g_buf„ªd_ouçut_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

70 
GOuçutSåóm
* 
	`g_buf„ªd_ouçut_°ªam_√w
 (GOuçutSåóm *
ba£_°ªam
);

71 
GOuçutSåóm
* 
	`g_buf„ªd_ouçut_°ªam_√w_sized
 (GOuçutSåóm *
ba£_°ªam
,

72 
gsize
 
size
);

73 
gsize
 
	`g_buf„ªd_ouçut_°ªam_gë_buf„r_size
 (
GBuf„ªdOuçutSåóm
 *
°ªam
);

74 
	`g_buf„ªd_ouçut_°ªam_£t_buf„r_size
 (
GBuf„ªdOuçutSåóm
 *
°ªam
,

75 
gsize
 
size
);

76 
gboﬁón
 
	`g_buf„ªd_ouçut_°ªam_gë_auto_grow
 (
GBuf„ªdOuçutSåóm
 *
°ªam
);

77 
	`g_buf„ªd_ouçut_°ªam_£t_auto_grow
 (
GBuf„ªdOuçutSåóm
 *
°ªam
,

78 
gboﬁón
 
auto_grow
);

80 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gcancellable.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_CANCELLABLE_H__


28 
	#__G_CANCELLABLE_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_CANCELLABLE
 (
	`g_ˇn˚ŒabÀ_gë_ty≥
 ())

	)

35 
	#G_CANCELLABLE
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_CANCELLABLE
, 
GC™˚ŒabÀ
))

	)

36 
	#G_CANCELLABLE_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_CANCELLABLE
, 
GC™˚ŒabÀCœss
))

	)

37 
	#G_IS_CANCELLABLE
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_CANCELLABLE
))

	)

38 
	#G_IS_CANCELLABLE_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_CANCELLABLE
))

	)

39 
	#G_CANCELLABLE_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_CANCELLABLE
, 
GC™˚ŒabÀCœss
))

	)

46 
_GC™˚ŒabÀCœss
 
	tGC™˚ŒabÀCœss
;

48 
	s_GC™˚ŒabÀCœss


50 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

52 (* 
	mˇn˚Œed
Ë(
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
);

56 (*
	m_g_ª£rved1
) ();

57 (*
	m_g_ª£rved2
) ();

58 (*
	m_g_ª£rved3
) ();

59 (*
	m_g_ª£rved4
) ();

60 (*
	m_g_ª£rved5
) ();

63 
GTy≥
 
	$g_ˇn˚ŒabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
GC™˚ŒabÀ
 *
	`g_ˇn˚ŒabÀ_√w
 ();

68 
gboﬁón
 
	`g_ˇn˚ŒabÀ_is_ˇn˚Œed
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

69 
gboﬁón
 
	`g_ˇn˚ŒabÀ_£t_îr‹_if_ˇn˚Œed
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

70 
GEº‹
 **
îr‹
);

72 
	`g_ˇn˚ŒabÀ_gë_fd
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

73 
	`g_ˇn˚ŒabÀ_make_pﬁlfd
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

74 
GPﬁlFD
 *
pﬁlfd
);

76 
GC™˚ŒabÀ
 *
	`g_ˇn˚ŒabÀ_gë_cuºít
 ();

77 
	`g_ˇn˚ŒabÀ_push_cuºít
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

78 
	`g_ˇn˚ŒabÀ_p›_cuºít
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

79 
	`g_ˇn˚ŒabÀ_ª£t
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

83 
	`g_ˇn˚ŒabÀ_ˇn˚l
 (
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

85 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gcontenttype.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_CONTENT_TYPE_H__


28 
	#__G_CONTENT_TYPE_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
G_BEGIN_DECLS


34 
gboﬁón
 
g_c⁄ã¡_ty≥_equÆs
 (c⁄° *
ty≥1
,

35 c⁄° *
ty≥2
);

36 
gboﬁón
 
g_c⁄ã¡_ty≥_is_a
 (c⁄° *
ty≥
,

37 c⁄° *
su≥πy≥
);

38 
gboﬁón
 
g_c⁄ã¡_ty≥_is_unknown
 (c⁄° *
ty≥
);

39 * 
g_c⁄ã¡_ty≥_gë_des¸ùti⁄
 (c⁄° *
ty≥
);

40 * 
g_c⁄ã¡_ty≥_gë_mime_ty≥
 (c⁄° *
ty≥
);

41 
GIc⁄
 * 
g_c⁄ã¡_ty≥_gë_ic⁄
 (c⁄° *
ty≥
);

42 
gboﬁón
 
g_c⁄ã¡_ty≥_ˇn_be_execuèbÀ
 (c⁄° *
ty≥
);

44 * 
g_c⁄ã¡_ty≥_‰om_mime_ty≥
 (c⁄° *
mime_ty≥
);

46 * 
g_c⁄ã¡_ty≥_guess
 (c⁄° *
fûíame
,

47 c⁄° 
guch¨
 *
d©a
,

48 
gsize
 
d©a_size
,

49 
gboﬁón
 *
ªsu…_un˚πaö
);

51 ** 
g_c⁄ã¡_ty≥_guess_f‹_åì
 (
GFûe
 *
roŸ
);

53 
GLi°
 * 
g_c⁄ã¡_ty≥s_gë_ªgi°îed
 ();

55 
	gG_END_DECLS


	@/usr/include/glib-2.0/gio/gdatainputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_DATA_INPUT_STREAM_H__


28 
	#__G_DATA_INPUT_STREAM_H__


	)

30 
	~<gio/gbuf„ªdöput°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_DATA_INPUT_STREAM
 (
	`g_d©a_öput_°ªam_gë_ty≥
 ())

	)

35 
	#G_DATA_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_DATA_INPUT_STREAM
, 
GD©aI≈utSåóm
))

	)

36 
	#G_DATA_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_DATA_INPUT_STREAM
, 
GD©aI≈utSåómCœss
))

	)

37 
	#G_IS_DATA_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_DATA_INPUT_STREAM
))

	)

38 
	#G_IS_DATA_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_DATA_INPUT_STREAM
))

	)

39 
	#G_DATA_INPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_DATA_INPUT_STREAM
, 
GD©aI≈utSåómCœss
))

	)

48 
_GD©aI≈utSåómCœss
 
	tGD©aI≈utSåómCœss
;

49 
_GD©aI≈utSåómPriv©e
 
	tGD©aI≈utSåómPriv©e
;

51 
	s_GD©aI≈utSåóm


53 
GBuf„ªdI≈utSåóm
 
	m∑ª¡_ö°™˚
;

56 
GD©aI≈utSåómPriv©e
 *
	m¥iv
;

59 
	s_GD©aI≈utSåómCœss


61 
GBuf„ªdI≈utSåómCœss
 
	m∑ª¡_˛ass
;

65 (*
	m_g_ª£rved1
) ();

66 (*
	m_g_ª£rved2
) ();

67 (*
	m_g_ª£rved3
) ();

68 (*
	m_g_ª£rved4
) ();

69 (*
	m_g_ª£rved5
) ();

72 
GTy≥
 
	$g_d©a_öput_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

73 
GD©aI≈utSåóm
 * 
	`g_d©a_öput_°ªam_√w
 (
GI≈utSåóm
 *
ba£_°ªam
);

75 
	`g_d©a_öput_°ªam_£t_byã_‹dî
 (
GD©aI≈utSåóm
 *
°ªam
,

76 
GD©aSåómByãOrdî
 
‹dî
);

77 
GD©aSåómByãOrdî
 
	`g_d©a_öput_°ªam_gë_byã_‹dî
 (
GD©aI≈utSåóm
 *
°ªam
);

78 
	`g_d©a_öput_°ªam_£t_√wlöe_ty≥
 (
GD©aI≈utSåóm
 *
°ªam
,

79 
GD©aSåómNewlöeTy≥
 
ty≥
);

80 
GD©aSåómNewlöeTy≥
 
	`g_d©a_öput_°ªam_gë_√wlöe_ty≥
 (
GD©aI≈utSåóm
 *
°ªam
);

81 
guch¨
 
	`g_d©a_öput_°ªam_ªad_byã
 (
GD©aI≈utSåóm
 *
°ªam
,

82 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

83 
GEº‹
 **
îr‹
);

84 
göt16
 
	`g_d©a_öput_°ªam_ªad_öt16
 (
GD©aI≈utSåóm
 *
°ªam
,

85 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

86 
GEº‹
 **
îr‹
);

87 
guöt16
 
	`g_d©a_öput_°ªam_ªad_uöt16
 (
GD©aI≈utSåóm
 *
°ªam
,

88 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

89 
GEº‹
 **
îr‹
);

90 
göt32
 
	`g_d©a_öput_°ªam_ªad_öt32
 (
GD©aI≈utSåóm
 *
°ªam
,

91 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

92 
GEº‹
 **
îr‹
);

93 
guöt32
 
	`g_d©a_öput_°ªam_ªad_uöt32
 (
GD©aI≈utSåóm
 *
°ªam
,

94 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

95 
GEº‹
 **
îr‹
);

96 
göt64
 
	`g_d©a_öput_°ªam_ªad_öt64
 (
GD©aI≈utSåóm
 *
°ªam
,

97 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

98 
GEº‹
 **
îr‹
);

99 
guöt64
 
	`g_d©a_öput_°ªam_ªad_uöt64
 (
GD©aI≈utSåóm
 *
°ªam
,

100 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

101 
GEº‹
 **
îr‹
);

102 * 
	`g_d©a_öput_°ªam_ªad_löe
 (
GD©aI≈utSåóm
 *
°ªam
,

103 
gsize
 *
Àngth
,

104 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

105 
GEº‹
 **
îr‹
);

106 
	`g_d©a_öput_°ªam_ªad_löe_async
 (
GD©aI≈utSåóm
 *
°ªam
,

107 
göt
 
io_¥i‹ôy
,

108 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

109 
GAsyncRódyCÆlback
 
ˇŒback
,

110 
gpoöãr
 
u£r_d©a
);

111 * 
	`g_d©a_öput_°ªam_ªad_löe_föish
 (
GD©aI≈utSåóm
 *
°ªam
,

112 
GAsyncResu…
 *
ªsu…
,

113 
gsize
 *
Àngth
,

114 
GEº‹
 **
îr‹
);

115 * 
	`g_d©a_öput_°ªam_ªad_u¡û
 (
GD©aI≈utSåóm
 *
°ªam
,

116 c⁄° 
gch¨
 *
°›_ch¨s
,

117 
gsize
 *
Àngth
,

118 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

119 
GEº‹
 **
îr‹
);

120 
	`g_d©a_öput_°ªam_ªad_u¡û_async
 (
GD©aI≈utSåóm
 *
°ªam
,

121 c⁄° 
gch¨
 *
°›_ch¨s
,

122 
göt
 
io_¥i‹ôy
,

123 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

124 
GAsyncRódyCÆlback
 
ˇŒback
,

125 
gpoöãr
 
u£r_d©a
);

126 * 
	`g_d©a_öput_°ªam_ªad_u¡û_föish
 (
GD©aI≈utSåóm
 *
°ªam
,

127 
GAsyncResu…
 *
ªsu…
,

128 
gsize
 *
Àngth
,

129 
GEº‹
 **
îr‹
);

131 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gdataoutputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_DATA_OUTPUT_STREAM_H__


28 
	#__G_DATA_OUTPUT_STREAM_H__


	)

30 
	~<gio/gfûãrouçut°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_DATA_OUTPUT_STREAM
 (
	`g_d©a_ouçut_°ªam_gë_ty≥
 ())

	)

35 
	#G_DATA_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_DATA_OUTPUT_STREAM
, 
GD©aOuçutSåóm
))

	)

36 
	#G_DATA_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_DATA_OUTPUT_STREAM
, 
GD©aOuçutSåómCœss
))

	)

37 
	#G_IS_DATA_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_DATA_OUTPUT_STREAM
))

	)

38 
	#G_IS_DATA_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_DATA_OUTPUT_STREAM
))

	)

39 
	#G_DATA_OUTPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_DATA_OUTPUT_STREAM
, 
GD©aOuçutSåómCœss
))

	)

48 
_GD©aOuçutSåóm
 
	tGD©aOuçutSåóm
;

49 
_GD©aOuçutSåómCœss
 
	tGD©aOuçutSåómCœss
;

50 
_GD©aOuçutSåómPriv©e
 
	tGD©aOuçutSåómPriv©e
;

52 
	s_GD©aOuçutSåóm


54 
GFûãrOuçutSåóm
 
	m∑ª¡_ö°™˚
;

57 
GD©aOuçutSåómPriv©e
 *
	m¥iv
;

60 
	s_GD©aOuçutSåómCœss


62 
GFûãrOuçutSåómCœss
 
	m∑ª¡_˛ass
;

66 (*
	m_g_ª£rved1
) ();

67 (*
	m_g_ª£rved2
) ();

68 (*
	m_g_ª£rved3
) ();

69 (*
	m_g_ª£rved4
) ();

70 (*
	m_g_ª£rved5
) ();

74 
GTy≥
 
	$g_d©a_ouçut_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

75 
GD©aOuçutSåóm
 * 
	`g_d©a_ouçut_°ªam_√w
 (
GOuçutSåóm
 *
ba£_°ªam
);

77 
	`g_d©a_ouçut_°ªam_£t_byã_‹dî
 (
GD©aOuçutSåóm
 *
°ªam
,

78 
GD©aSåómByãOrdî
 
‹dî
);

79 
GD©aSåómByãOrdî
 
	`g_d©a_ouçut_°ªam_gë_byã_‹dî
 (
GD©aOuçutSåóm
 *
°ªam
);

81 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_byã
 (
GD©aOuçutSåóm
 *
°ªam
,

82 
guch¨
 
d©a
,

83 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

84 
GEº‹
 **
îr‹
);

85 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_öt16
 (
GD©aOuçutSåóm
 *
°ªam
,

86 
göt16
 
d©a
,

87 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

88 
GEº‹
 **
îr‹
);

89 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_uöt16
 (
GD©aOuçutSåóm
 *
°ªam
,

90 
guöt16
 
d©a
,

91 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

92 
GEº‹
 **
îr‹
);

93 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_öt32
 (
GD©aOuçutSåóm
 *
°ªam
,

94 
göt32
 
d©a
,

95 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

96 
GEº‹
 **
îr‹
);

97 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_uöt32
 (
GD©aOuçutSåóm
 *
°ªam
,

98 
guöt32
 
d©a
,

99 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

100 
GEº‹
 **
îr‹
);

101 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_öt64
 (
GD©aOuçutSåóm
 *
°ªam
,

102 
göt64
 
d©a
,

103 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

104 
GEº‹
 **
îr‹
);

105 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_uöt64
 (
GD©aOuçutSåóm
 *
°ªam
,

106 
guöt64
 
d©a
,

107 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

108 
GEº‹
 **
îr‹
);

109 
gboﬁón
 
	`g_d©a_ouçut_°ªam_put_°rög
 (
GD©aOuçutSåóm
 *
°ªam
,

110 c⁄° *
°r
,

111 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

112 
GEº‹
 **
îr‹
);

114 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gdrive.h

24 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

28 #i‚de‡
__G_DRIVE_H__


29 
	#__G_DRIVE_H__


	)

31 
	~<gio/giŸy≥s.h
>

33 
	gG_BEGIN_DECLS


35 
	#G_TYPE_DRIVE
 (
	`g_drive_gë_ty≥
 ())

	)

36 
	#G_DRIVE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_DRIVE
, 
GDrive
))

	)

37 
	#G_IS_DRIVE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_DRIVE
))

	)

38 
	#G_DRIVE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_DRIVE
, 
GDriveIÁ˚
))

	)

66 
_GDriveIÁ˚
 
	tGDriveIÁ˚
;

68 
	s_GDriveIÁ˚


70 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

73 (* 
	mch™ged
Ë(
GDrive
 *
	mdrive
);

74 (* 
	mdisc⁄√˘ed
Ë(
GDrive
 *
	mdrive
);

75 (* 
	meje˘_buâ⁄
Ë(
GDrive
 *
	mdrive
);

78 * (* 
	mgë_«me
Ë(
GDrive
 *
	mdrive
);

79 
	mGIc⁄
 * (* 
	mgë_ic⁄
Ë(
GDrive
 *
	mdrive
);

80 
gboﬁón
 (* 
has_vﬁumes
Ë(
GDrive
 *
	mdrive
);

81 
	mGLi°
 * (* 
	mgë_vﬁumes
Ë(
GDrive
 *
	mdrive
);

82 
gboﬁón
 (* 
is_medü_ªmovabÀ
Ë(
GDrive
 *
	mdrive
);

83 
gboﬁón
 (* 
has_medü
Ë(
GDrive
 *
	mdrive
);

84 
gboﬁón
 (* 
is_medü_check_autom©ic
Ë(
GDrive
 *
	mdrive
);

85 
gboﬁón
 (* 
ˇn_eje˘
Ë(
GDrive
 *
	mdrive
);

86 
gboﬁón
 (* 
ˇn_pﬁl_f‹_medü
Ë(
GDrive
 *
	mdrive
);

87 (* 
	meje˘
Ë(
GDrive
 *
	mdrive
,

88 
GMou¡Unmou¡Fœgs
 
	mÊags
,

89 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

90 
GAsyncRódyCÆlback
 
	mˇŒback
,

91 
gpoöãr
 
	mu£r_d©a
);

92 
gboﬁón
 (* 
eje˘_föish
Ë(
GDrive
 *
	mdrive
,

93 
GAsyncResu…
 *
	mªsu…
,

94 
GEº‹
 **
	mîr‹
);

95 (* 
	mpﬁl_f‹_medü
Ë(
GDrive
 *
	mdrive
,

96 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

97 
GAsyncRódyCÆlback
 
	mˇŒback
,

98 
gpoöãr
 
	mu£r_d©a
);

99 
gboﬁón
 (* 
pﬁl_f‹_medü_föish
Ë(
GDrive
 *
	mdrive
,

100 
GAsyncResu…
 *
	mªsu…
,

101 
GEº‹
 **
	mîr‹
);

103 * (* 
	mgë_idítifõr
Ë(
GDrive
 *
	mdrive
,

104 c⁄° *
	mköd
);

105 ** (* 
	míumî©e_idítifõrs
Ë(
GDrive
 *
	mdrive
);

108 
GTy≥
 
	$g_drive_gë_ty≥
 (Ë
G_GNUC_CONST
;

110 * 
	`g_drive_gë_«me
 (
GDrive
 *
drive
);

111 
GIc⁄
 * 
	`g_drive_gë_ic⁄
 (
GDrive
 *
drive
);

112 
gboﬁón
 
	`g_drive_has_vﬁumes
 (
GDrive
 *
drive
);

113 
GLi°
 * 
	`g_drive_gë_vﬁumes
 (
GDrive
 *
drive
);

114 
gboﬁón
 
	`g_drive_is_medü_ªmovabÀ
 (
GDrive
 *
drive
);

115 
gboﬁón
 
	`g_drive_has_medü
 (
GDrive
 *
drive
);

116 
gboﬁón
 
	`g_drive_is_medü_check_autom©ic
 (
GDrive
 *
drive
);

117 
gboﬁón
 
	`g_drive_ˇn_pﬁl_f‹_medü
 (
GDrive
 *
drive
);

118 
gboﬁón
 
	`g_drive_ˇn_eje˘
 (
GDrive
 *
drive
);

119 
	`g_drive_eje˘
 (
GDrive
 *
drive
,

120 
GMou¡Unmou¡Fœgs
 
Êags
,

121 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

122 
GAsyncRódyCÆlback
 
ˇŒback
,

123 
gpoöãr
 
u£r_d©a
);

124 
gboﬁón
 
	`g_drive_eje˘_föish
 (
GDrive
 *
drive
,

125 
GAsyncResu…
 *
ªsu…
,

126 
GEº‹
 **
îr‹
);

127 
	`g_drive_pﬁl_f‹_medü
 (
GDrive
 *
drive
,

128 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

129 
GAsyncRódyCÆlback
 
ˇŒback
,

130 
gpoöãr
 
u£r_d©a
);

131 
gboﬁón
 
	`g_drive_pﬁl_f‹_medü_föish
 (
GDrive
 *
drive
,

132 
GAsyncResu…
 *
ªsu…
,

133 
GEº‹
 **
îr‹
);

134 * 
	`g_drive_gë_idítifõr
 (
GDrive
 *
drive
,

135 c⁄° *
köd
);

136 ** 
	`g_drive_íumî©e_idítifõrs
 (
GDrive
 *
drive
);

138 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gemblemedicon.h

24 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

28 #i‚de‡
__G_EMBLEMED_ICON_H__


29 
	#__G_EMBLEMED_ICON_H__


	)

31 
	~<gio/gic⁄.h
>

32 
	~<gio/gembÀm.h
>

34 
	gG_BEGIN_DECLS


36 
	#G_TYPE_EMBLEMED_ICON
 (
	`g_embÀmed_ic⁄_gë_ty≥
 ())

	)

37 
	#G_EMBLEMED_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_EMBLEMED_ICON
, 
GEmbÀmedIc⁄
))

	)

38 
	#G_EMBLEMED_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_EMBLEMED_ICON
, 
GEmbÀmedIc⁄Cœss
))

	)

39 
	#G_IS_EMBLEMED_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_EMBLEMED_ICON
))

	)

40 
	#G_IS_EMBLEMED_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_EMBLEMED_ICON
))

	)

41 
	#G_EMBLEMED_ICON_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_EMBLEMED_ICON
, 
GEmbÀmedIc⁄Cœss
))

	)

48 
_GEmbÀmedIc⁄
 
	tGEmbÀmedIc⁄
;

49 
_GEmbÀmedIc⁄Cœss
 
	tGEmbÀmedIc⁄Cœss
;

51 
GTy≥
 
	$g_embÀmed_ic⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

53 
GIc⁄
 *
	`g_embÀmed_ic⁄_√w
 (GIc⁄ *
ic⁄
,

54 
GEmbÀm
 *
embÀm
);

55 
GIc⁄
 *
	`g_embÀmed_ic⁄_gë_ic⁄
 (
GEmbÀmedIc⁄
 *
embÀmed
);

56 
GLi°
 *
	`g_embÀmed_ic⁄_gë_embÀms
 (
GEmbÀmedIc⁄
 *
embÀmed
);

57 
	`g_embÀmed_ic⁄_add_embÀm
 (
GEmbÀmedIc⁄
 *
embÀmed
,

58 
GEmbÀm
 *
embÀm
);

60 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfile.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_H__


28 
	#__G_FILE_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE
 (
	`g_fûe_gë_ty≥
 ())

	)

35 
	#G_FILE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_FILE
, 
GFûe
))

	)

36 
	#G_IS_FILE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_FILE
))

	)

37 
	#G_FILE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_FILE
, 
GFûeIÁ˚
))

	)

47 
_GFûe
 
	tGFûe
;

49 
_GFûeIÁ˚
 
	tGFûeIÁ˚
;

138 
	s_GFûeIÁ˚


140 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

144 
	mGFûe
 * (* 
	mdup
Ë(
GFûe
 *
	mfûe
);

145 
guöt
 (* 
hash
Ë(
GFûe
 *
	mfûe
);

146 
gboﬁón
 (* 
equÆ
Ë(
GFûe
 *
	mfûe1
,

147 
GFûe
 *
	mfûe2
);

148 
gboﬁón
 (* 
is_«tive
Ë(
GFûe
 *
	mfûe
);

149 
gboﬁón
 (* 
has_uri_scheme
Ë(
GFûe
 *
	mfûe
,

150 c⁄° *
	muri_scheme
);

151 * (* 
	mgë_uri_scheme
Ë(
GFûe
 *
	mfûe
);

152 * (* 
	mgë_ba£«me
Ë(
GFûe
 *
	mfûe
);

153 * (* 
	mgë_∑th
Ë(
GFûe
 *
	mfûe
);

154 * (* 
	mgë_uri
Ë(
GFûe
 *
	mfûe
);

155 * (* 
	mgë_∑r£_«me
Ë(
GFûe
 *
	mfûe
);

156 
	mGFûe
 * (* 
	mgë_∑ª¡
Ë(
GFûe
 *
	mfûe
);

157 
gboﬁón
 (* 
¥efix_m©ches
Ë(
GFûe
 *
	m¥efix
,

158 
GFûe
 *
	mfûe
);

159 * (* 
	mgë_ªœtive_∑th
Ë(
GFûe
 *
	m∑ª¡
,

160 
GFûe
 *
	mdes˚nd™t
);

161 
	mGFûe
 * (* 
	mªsﬁve_ªœtive_∑th
Ë(
GFûe
 *
	mfûe
,

162 c⁄° *
	mªœtive_∑th
);

163 
	mGFûe
 * (* 
	mgë_chûd_f‹_di•œy_«me
Ë(
GFûe
 *
	mfûe
,

164 c⁄° *
	mdi•œy_«me
,

165 
GEº‹
 **
	mîr‹
);

167 
	mGFûeEnumî©‹
 * (* 
	míumî©e_chûdªn
Ë(
GFûe
 *
	mfûe
,

168 c⁄° *
	m©åibuãs
,

169 
GFûeQuîyInfoFœgs
 
	mÊags
,

170 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

171 
GEº‹
 **
	mîr‹
);

172 (* 
	míumî©e_chûdªn_async
Ë(
GFûe
 *
	mfûe
,

173 c⁄° *
	m©åibuãs
,

174 
GFûeQuîyInfoFœgs
 
	mÊags
,

175 
	mio_¥i‹ôy
,

176 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

177 
GAsyncRódyCÆlback
 
	mˇŒback
,

178 
gpoöãr
 
	mu£r_d©a
);

179 
	mGFûeEnumî©‹
 * (* 
	míumî©e_chûdªn_föish
Ë(
GFûe
 *
	mfûe
,

180 
GAsyncResu…
 *
	mªs
,

181 
GEº‹
 **
	mîr‹
);

183 
	mGFûeInfo
 * (* 
	mquîy_öfo
Ë(
GFûe
 *
	mfûe
,

184 c⁄° *
	m©åibuãs
,

185 
GFûeQuîyInfoFœgs
 
	mÊags
,

186 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

187 
GEº‹
 **
	mîr‹
);

188 (* 
	mquîy_öfo_async
Ë(
GFûe
 *
	mfûe
,

189 c⁄° *
	m©åibuãs
,

190 
GFûeQuîyInfoFœgs
 
	mÊags
,

191 
	mio_¥i‹ôy
,

192 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

193 
GAsyncRódyCÆlback
 
	mˇŒback
,

194 
gpoöãr
 
	mu£r_d©a
);

195 
	mGFûeInfo
 * (* 
	mquîy_öfo_föish
Ë(
GFûe
 *
	mfûe
,

196 
GAsyncResu…
 *
	mªs
,

197 
GEº‹
 **
	mîr‹
);

199 
	mGFûeInfo
 * (* 
	mquîy_fûesy°em_öfo
Ë(
GFûe
 *
	mfûe
,

200 c⁄° *
	m©åibuãs
,

201 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

202 
GEº‹
 **
	mîr‹
);

203 (* 
	mquîy_fûesy°em_öfo_async
Ë(
GFûe
 *
	mfûe
,

204 c⁄° *
	m©åibuãs
,

205 
	mio_¥i‹ôy
,

206 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

207 
GAsyncRódyCÆlback
 
	mˇŒback
,

208 
gpoöãr
 
	mu£r_d©a
);

209 
	mGFûeInfo
 * (* 
	mquîy_fûesy°em_öfo_föish
)(
GFûe
 *
	mfûe
,

210 
GAsyncResu…
 *
	mªs
,

211 
GEº‹
 **
	mîr‹
);

213 
	mGMou¡
 * (* 
	mföd_í˛osög_mou¡
Ë(
GFûe
 *
	mfûe
,

214 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

215 
GEº‹
 **
	mîr‹
);

216 (* 
	mföd_í˛osög_mou¡_async
Ë(
GFûe
 *
	mfûe
,

217 
	mio_¥i‹ôy
,

218 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

219 
GAsyncRódyCÆlback
 
	mˇŒback
,

220 
gpoöãr
 
	mu£r_d©a
);

221 
	mGMou¡
 * (* 
	mföd_í˛osög_mou¡_föish
Ë(
GFûe
 *
	mfûe
,

222 
GAsyncResu…
 *
	mªs
,

223 
GEº‹
 **
	mîr‹
);

225 
	mGFûe
 * (* 
	m£t_di•œy_«me
Ë(
GFûe
 *
	mfûe
,

226 c⁄° *
	mdi•œy_«me
,

227 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

228 
GEº‹
 **
	mîr‹
);

229 (* 
	m£t_di•œy_«me_async
Ë(
GFûe
 *
	mfûe
,

230 c⁄° *
	mdi•œy_«me
,

231 
	mio_¥i‹ôy
,

232 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

233 
GAsyncRódyCÆlback
 
	mˇŒback
,

234 
gpoöãr
 
	mu£r_d©a
);

235 
	mGFûe
 * (* 
	m£t_di•œy_«me_föish
Ë(
GFûe
 *
	mfûe
,

236 
GAsyncResu…
 *
	mªs
,

237 
GEº‹
 **
	mîr‹
);

239 
	mGFûeAâribuãInfoLi°
 * (* 
	mquîy_£âabÀ_©åibuãs
Ë(
GFûe
 *
	mfûe
,

240 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

241 
GEº‹
 **
	mîr‹
);

242 (* 
	m_quîy_£âabÀ_©åibuãs_async
) ();

243 (* 
	m_quîy_£âabÀ_©åibuãs_föish
) ();

245 
	mGFûeAâribuãInfoLi°
 * (* 
	mquîy_wrôabÀ_«me•a˚s
Ë(
GFûe
 *
	mfûe
,

246 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

247 
GEº‹
 **
	mîr‹
);

248 (* 
	m_quîy_wrôabÀ_«me•a˚s_async
) ();

249 (* 
	m_quîy_wrôabÀ_«me•a˚s_föish
) ();

251 
gboﬁón
 (* 
£t_©åibuã
Ë(
GFûe
 *
	mfûe
,

252 c⁄° *
	m©åibuã
,

253 
GFûeAâribuãTy≥
 
	mty≥
,

254 
gpoöãr
 
	mvÆue_p
,

255 
GFûeQuîyInfoFœgs
 
	mÊags
,

256 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

257 
GEº‹
 **
	mîr‹
);

258 
gboﬁón
 (* 
£t_©åibuãs_‰om_öfo
Ë(
GFûe
 *
	mfûe
,

259 
GFûeInfo
 *
	möfo
,

260 
GFûeQuîyInfoFœgs
 
	mÊags
,

261 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

262 
GEº‹
 **
	mîr‹
);

263 (* 
	m£t_©åibuãs_async
Ë(
GFûe
 *
	mfûe
,

264 
GFûeInfo
 *
	möfo
,

265 
GFûeQuîyInfoFœgs
 
	mÊags
,

266 
	mio_¥i‹ôy
,

267 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

268 
GAsyncRódyCÆlback
 
	mˇŒback
,

269 
gpoöãr
 
	mu£r_d©a
);

270 
gboﬁón
 (* 
£t_©åibuãs_föish
Ë(
GFûe
 *
	mfûe
,

271 
GAsyncResu…
 *
	mªsu…
,

272 
GFûeInfo
 **
	möfo
,

273 
GEº‹
 **
	mîr‹
);

275 
	mGFûeI≈utSåóm
 * (* 
	mªad_‚
Ë(
GFûe
 *
	mfûe
,

276 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

277 
GEº‹
 **
	mîr‹
);

278 (* 
	mªad_async
Ë(
GFûe
 *
	mfûe
,

279 
	mio_¥i‹ôy
,

280 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

281 
GAsyncRódyCÆlback
 
	mˇŒback
,

282 
gpoöãr
 
	mu£r_d©a
);

283 
	mGFûeI≈utSåóm
 * (* 
	mªad_föish
Ë(
GFûe
 *
	mfûe
,

284 
GAsyncResu…
 *
	mªs
,

285 
GEº‹
 **
	mîr‹
);

287 
	mGFûeOuçutSåóm
 * (* 
	m≠≥nd_to
Ë(
GFûe
 *
	mfûe
,

288 
GFûeCª©eFœgs
 
	mÊags
,

289 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

290 
GEº‹
 **
	mîr‹
);

291 (* 
	m≠≥nd_to_async
Ë(
GFûe
 *
	mfûe
,

292 
GFûeCª©eFœgs
 
	mÊags
,

293 
	mio_¥i‹ôy
,

294 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

295 
GAsyncRódyCÆlback
 
	mˇŒback
,

296 
gpoöãr
 
	mu£r_d©a
);

297 
	mGFûeOuçutSåóm
 * (* 
	m≠≥nd_to_föish
Ë(
GFûe
 *
	mfûe
,

298 
GAsyncResu…
 *
	mªs
,

299 
GEº‹
 **
	mîr‹
);

301 
	mGFûeOuçutSåóm
 * (* 
	m¸óã
Ë(
GFûe
 *
	mfûe
,

302 
GFûeCª©eFœgs
 
	mÊags
,

303 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

304 
GEº‹
 **
	mîr‹
);

305 (* 
	m¸óã_async
Ë(
GFûe
 *
	mfûe
,

306 
GFûeCª©eFœgs
 
	mÊags
,

307 
	mio_¥i‹ôy
,

308 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

309 
GAsyncRódyCÆlback
 
	mˇŒback
,

310 
gpoöãr
 
	mu£r_d©a
);

311 
	mGFûeOuçutSåóm
 * (* 
	m¸óã_föish
Ë(
GFûe
 *
	mfûe
,

312 
GAsyncResu…
 *
	mªs
,

313 
GEº‹
 **
	mîr‹
);

315 
	mGFûeOuçutSåóm
 * (* 
	mª∂a˚
Ë(
GFûe
 *
	mfûe
,

316 c⁄° *
	mëag
,

317 
gboﬁón
 
	mmake_backup
,

318 
GFûeCª©eFœgs
 
	mÊags
,

319 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

320 
GEº‹
 **
	mîr‹
);

321 (* 
	mª∂a˚_async
Ë(
GFûe
 *
	mfûe
,

322 c⁄° *
	mëag
,

323 
gboﬁón
 
	mmake_backup
,

324 
GFûeCª©eFœgs
 
	mÊags
,

325 
	mio_¥i‹ôy
,

326 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

327 
GAsyncRódyCÆlback
 
	mˇŒback
,

328 
gpoöãr
 
	mu£r_d©a
);

329 
	mGFûeOuçutSåóm
 * (* 
	mª∂a˚_föish
Ë(
GFûe
 *
	mfûe
,

330 
GAsyncResu…
 *
	mªs
,

331 
GEº‹
 **
	mîr‹
);

333 
gboﬁón
 (* 
dñëe_fûe
Ë(
GFûe
 *
	mfûe
,

334 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

335 
GEº‹
 **
	mîr‹
);

336 (* 
	m_dñëe_fûe_async
) ();

337 (* 
	m_dñëe_fûe_föish
) ();

339 
gboﬁón
 (* 
åash
Ë(
GFûe
 *
	mfûe
,

340 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

341 
GEº‹
 **
	mîr‹
);

342 (* 
	m_åash_async
) ();

343 (* 
	m_åash_föish
) ();

345 
gboﬁón
 (* 
make_dúe˘‹y
Ë(
GFûe
 *
	mfûe
,

346 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

347 
GEº‹
 **
	mîr‹
);

348 (* 
	m_make_dúe˘‹y_async
) ();

349 (* 
	m_make_dúe˘‹y_föish
) ();

351 
gboﬁón
 (* 
make_symbﬁic_lök
Ë(
GFûe
 *
	mfûe
,

352 c⁄° *
	msymlök_vÆue
,

353 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

354 
GEº‹
 **
	mîr‹
);

355 (* 
	m_make_symbﬁic_lök_async
) ();

356 (* 
	m_make_symbﬁic_lök_föish
) ();

358 
gboﬁón
 (* 
c›y
Ë(
GFûe
 *
	msour˚
,

359 
GFûe
 *
	mde°ö©i⁄
,

360 
GFûeC›yFœgs
 
	mÊags
,

361 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

362 
GFûeProgªssCÆlback
 
	m¥ogªss_ˇŒback
,

363 
gpoöãr
 
	m¥ogªss_ˇŒback_d©a
,

364 
GEº‹
 **
	mîr‹
);

365 (* 
	mc›y_async
Ë(
GFûe
 *
	msour˚
,

366 
GFûe
 *
	mde°ö©i⁄
,

367 
GFûeC›yFœgs
 
	mÊags
,

368 
	mio_¥i‹ôy
,

369 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

370 
GFûeProgªssCÆlback
 
	m¥ogªss_ˇŒback
,

371 
gpoöãr
 
	m¥ogªss_ˇŒback_d©a
,

372 
GAsyncRódyCÆlback
 
	mˇŒback
,

373 
gpoöãr
 
	mu£r_d©a
);

374 
gboﬁón
 (* 
c›y_föish
Ë(
GFûe
 *
	mfûe
,

375 
GAsyncResu…
 *
	mªs
,

376 
GEº‹
 **
	mîr‹
);

378 
gboﬁón
 (* 
move
Ë(
GFûe
 *
	msour˚
,

379 
GFûe
 *
	mde°ö©i⁄
,

380 
GFûeC›yFœgs
 
	mÊags
,

381 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

382 
GFûeProgªssCÆlback
 
	m¥ogªss_ˇŒback
,

383 
gpoöãr
 
	m¥ogªss_ˇŒback_d©a
,

384 
GEº‹
 **
	mîr‹
);

385 (* 
	m_move_async
) ();

386 (* 
	m_move_föish
) ();

388 (* 
	mmou¡_mou¡abÀ
Ë(
GFûe
 *
	mfûe
,

389 
GMou¡Mou¡Fœgs
 
	mÊags
,

390 
GMou¡O≥øti⁄
 *
	mmou¡_›î©i⁄
,

391 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

392 
GAsyncRódyCÆlback
 
	mˇŒback
,

393 
gpoöãr
 
	mu£r_d©a
);

394 
	mGFûe
 * (* 
	mmou¡_mou¡abÀ_föish
Ë(
GFûe
 *
	mfûe
,

395 
GAsyncResu…
 *
	mªsu…
,

396 
GEº‹
 **
	mîr‹
);

398 (* 
	munmou¡_mou¡abÀ
Ë(
GFûe
 *
	mfûe
,

399 
GMou¡Unmou¡Fœgs
 
	mÊags
,

400 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

401 
GAsyncRódyCÆlback
 
	mˇŒback
,

402 
gpoöãr
 
	mu£r_d©a
);

403 
gboﬁón
 (* 
unmou¡_mou¡abÀ_föish
Ë(
GFûe
 *
	mfûe
,

404 
GAsyncResu…
 *
	mªsu…
,

405 
GEº‹
 **
	mîr‹
);

407 (* 
	meje˘_mou¡abÀ
Ë(
GFûe
 *
	mfûe
,

408 
GMou¡Unmou¡Fœgs
 
	mÊags
,

409 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

410 
GAsyncRódyCÆlback
 
	mˇŒback
,

411 
gpoöãr
 
	mu£r_d©a
);

412 
gboﬁón
 (* 
eje˘_mou¡abÀ_föish
Ë(
GFûe
 *
	mfûe
,

413 
GAsyncResu…
 *
	mªsu…
,

414 
GEº‹
 **
	mîr‹
);

416 (* 
	mmou¡_í˛osög_vﬁume
Ë(
GFûe
 *
	mloˇti⁄
,

417 
GMou¡Mou¡Fœgs
 
	mÊags
,

418 
GMou¡O≥øti⁄
 *
	mmou¡_›î©i⁄
,

419 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

420 
GAsyncRódyCÆlback
 
	mˇŒback
,

421 
gpoöãr
 
	mu£r_d©a
);

422 
gboﬁón
 (* 
mou¡_í˛osög_vﬁume_föish
Ë(
GFûe
 *
	mloˇti⁄
,

423 
GAsyncResu…
 *
	mªsu…
,

424 
GEº‹
 **
	mîr‹
);

426 
	mGFûeM⁄ô‹
 * (* 
	mm⁄ô‹_dú
Ë(
GFûe
 *
	mfûe
,

427 
GFûeM⁄ô‹Fœgs
 
	mÊags
,

428 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

429 
GEº‹
 **
	mîr‹
);

430 
	mGFûeM⁄ô‹
 * (* 
	mm⁄ô‹_fûe
Ë(
GFûe
 *
	mfûe
,

431 
GFûeM⁄ô‹Fœgs
 
	mÊags
,

432 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

433 
GEº‹
 **
	mîr‹
);

436 
GTy≥
 
	$g_fûe_gë_ty≥
 (Ë
G_GNUC_CONST
;

438 
GFûe
 * 
	`g_fûe_√w_f‹_∑th
 (c⁄° *
∑th
);

439 
GFûe
 * 
	`g_fûe_√w_f‹_uri
 (c⁄° *
uri
);

440 
GFûe
 * 
	`g_fûe_√w_f‹_comm™dlöe_¨g
 (c⁄° *
¨g
);

441 
GFûe
 * 
	`g_fûe_∑r£_«me
 (c⁄° *
∑r£_«me
);

442 
GFûe
 * 
	`g_fûe_dup
 (GFûê*
fûe
);

443 
guöt
 
	`g_fûe_hash
 (
gc⁄°poöãr
 
fûe
);

444 
gboﬁón
 
	`g_fûe_equÆ
 (
GFûe
 *
fûe1
,

445 
GFûe
 *
fûe2
);

446 * 
	`g_fûe_gë_ba£«me
 (
GFûe
 *
fûe
);

447 * 
	`g_fûe_gë_∑th
 (
GFûe
 *
fûe
);

448 * 
	`g_fûe_gë_uri
 (
GFûe
 *
fûe
);

449 * 
	`g_fûe_gë_∑r£_«me
 (
GFûe
 *
fûe
);

450 
GFûe
 * 
	`g_fûe_gë_∑ª¡
 (GFûê*
fûe
);

451 
GFûe
 * 
	`g_fûe_gë_chûd
 (GFûê*
fûe
,

452 c⁄° *
«me
);

453 
GFûe
 * 
	`g_fûe_gë_chûd_f‹_di•œy_«me
 (GFûê*
fûe
,

454 c⁄° *
di•œy_«me
,

455 
GEº‹
 **
îr‹
);

456 
gboﬁón
 
	`g_fûe_has_¥efix
 (
GFûe
 *
fûe
,

457 
GFûe
 *
¥efix
);

458 * 
	`g_fûe_gë_ªœtive_∑th
 (
GFûe
 *
∑ª¡
,

459 
GFûe
 *
des˚nd™t
);

460 
GFûe
 * 
	`g_fûe_ªsﬁve_ªœtive_∑th
 (GFûê*
fûe
,

461 c⁄° *
ªœtive_∑th
);

462 
gboﬁón
 
	`g_fûe_is_«tive
 (
GFûe
 *
fûe
);

463 
gboﬁón
 
	`g_fûe_has_uri_scheme
 (
GFûe
 *
fûe
,

464 c⁄° *
uri_scheme
);

465 * 
	`g_fûe_gë_uri_scheme
 (
GFûe
 *
fûe
);

466 
GFûeI≈utSåóm
 * 
	`g_fûe_ªad
 (
GFûe
 *
fûe
,

467 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

468 
GEº‹
 **
îr‹
);

469 
	`g_fûe_ªad_async
 (
GFûe
 *
fûe
,

470 
io_¥i‹ôy
,

471 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

472 
GAsyncRódyCÆlback
 
ˇŒback
,

473 
gpoöãr
 
u£r_d©a
);

474 
GFûeI≈utSåóm
 * 
	`g_fûe_ªad_föish
 (
GFûe
 *
fûe
,

475 
GAsyncResu…
 *
ªs
,

476 
GEº‹
 **
îr‹
);

477 
GFûeOuçutSåóm
 * 
	`g_fûe_≠≥nd_to
 (
GFûe
 *
fûe
,

478 
GFûeCª©eFœgs
 
Êags
,

479 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

480 
GEº‹
 **
îr‹
);

481 
GFûeOuçutSåóm
 * 
	`g_fûe_¸óã
 (
GFûe
 *
fûe
,

482 
GFûeCª©eFœgs
 
Êags
,

483 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

484 
GEº‹
 **
îr‹
);

485 
GFûeOuçutSåóm
 * 
	`g_fûe_ª∂a˚
 (
GFûe
 *
fûe
,

486 c⁄° *
ëag
,

487 
gboﬁón
 
make_backup
,

488 
GFûeCª©eFœgs
 
Êags
,

489 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

490 
GEº‹
 **
îr‹
);

491 
	`g_fûe_≠≥nd_to_async
 (
GFûe
 *
fûe
,

492 
GFûeCª©eFœgs
 
Êags
,

493 
io_¥i‹ôy
,

494 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

495 
GAsyncRódyCÆlback
 
ˇŒback
,

496 
gpoöãr
 
u£r_d©a
);

497 
GFûeOuçutSåóm
 * 
	`g_fûe_≠≥nd_to_föish
 (
GFûe
 *
fûe
,

498 
GAsyncResu…
 *
ªs
,

499 
GEº‹
 **
îr‹
);

500 
	`g_fûe_¸óã_async
 (
GFûe
 *
fûe
,

501 
GFûeCª©eFœgs
 
Êags
,

502 
io_¥i‹ôy
,

503 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

504 
GAsyncRódyCÆlback
 
ˇŒback
,

505 
gpoöãr
 
u£r_d©a
);

506 
GFûeOuçutSåóm
 * 
	`g_fûe_¸óã_föish
 (
GFûe
 *
fûe
,

507 
GAsyncResu…
 *
ªs
,

508 
GEº‹
 **
îr‹
);

509 
	`g_fûe_ª∂a˚_async
 (
GFûe
 *
fûe
,

510 c⁄° *
ëag
,

511 
gboﬁón
 
make_backup
,

512 
GFûeCª©eFœgs
 
Êags
,

513 
io_¥i‹ôy
,

514 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

515 
GAsyncRódyCÆlback
 
ˇŒback
,

516 
gpoöãr
 
u£r_d©a
);

517 
GFûeOuçutSåóm
 * 
	`g_fûe_ª∂a˚_föish
 (
GFûe
 *
fûe
,

518 
GAsyncResu…
 *
ªs
,

519 
GEº‹
 **
îr‹
);

520 
gboﬁón
 
	`g_fûe_quîy_exi°s
 (
GFûe
 *
fûe
,

521 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

522 
GFûeTy≥
 
	`g_fûe_quîy_fûe_ty≥
 (
GFûe
 *
fûe
,

523 
GFûeQuîyInfoFœgs
 
Êags
,

524 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

525 
GFûeInfo
 * 
	`g_fûe_quîy_öfo
 (
GFûe
 *
fûe
,

526 c⁄° *
©åibuãs
,

527 
GFûeQuîyInfoFœgs
 
Êags
,

528 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

529 
GEº‹
 **
îr‹
);

530 
	`g_fûe_quîy_öfo_async
 (
GFûe
 *
fûe
,

531 c⁄° *
©åibuãs
,

532 
GFûeQuîyInfoFœgs
 
Êags
,

533 
io_¥i‹ôy
,

534 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

535 
GAsyncRódyCÆlback
 
ˇŒback
,

536 
gpoöãr
 
u£r_d©a
);

537 
GFûeInfo
 * 
	`g_fûe_quîy_öfo_föish
 (
GFûe
 *
fûe
,

538 
GAsyncResu…
 *
ªs
,

539 
GEº‹
 **
îr‹
);

540 
GFûeInfo
 * 
	`g_fûe_quîy_fûesy°em_öfo
 (
GFûe
 *
fûe
,

541 c⁄° *
©åibuãs
,

542 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

543 
GEº‹
 **
îr‹
);

544 
	`g_fûe_quîy_fûesy°em_öfo_async
 (
GFûe
 *
fûe
,

545 c⁄° *
©åibuãs
,

546 
io_¥i‹ôy
,

547 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

548 
GAsyncRódyCÆlback
 
ˇŒback
,

549 
gpoöãr
 
u£r_d©a
);

550 
GFûeInfo
 * 
	`g_fûe_quîy_fûesy°em_öfo_föish
 (
GFûe
 *
fûe
,

551 
GAsyncResu…
 *
ªs
,

552 
GEº‹
 **
îr‹
);

553 
GMou¡
 * 
	`g_fûe_föd_í˛osög_mou¡
 (
GFûe
 *
fûe
,

554 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

555 
GEº‹
 **
îr‹
);

556 
	`g_fûe_föd_í˛osög_mou¡_async
 (
GFûe
 *
fûe
,

557 
io_¥i‹ôy
,

558 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

559 
GAsyncRódyCÆlback
 
ˇŒback
,

560 
gpoöãr
 
u£r_d©a
);

561 
GMou¡
 * 
	`g_fûe_föd_í˛osög_mou¡_föish
 (
GFûe
 *
fûe
,

562 
GAsyncResu…
 *
ªs
,

563 
GEº‹
 **
îr‹
);

564 
GFûeEnumî©‹
 * 
	`g_fûe_íumî©e_chûdªn
 (
GFûe
 *
fûe
,

565 c⁄° *
©åibuãs
,

566 
GFûeQuîyInfoFœgs
 
Êags
,

567 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

568 
GEº‹
 **
îr‹
);

569 
	`g_fûe_íumî©e_chûdªn_async
 (
GFûe
 *
fûe
,

570 c⁄° *
©åibuãs
,

571 
GFûeQuîyInfoFœgs
 
Êags
,

572 
io_¥i‹ôy
,

573 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

574 
GAsyncRódyCÆlback
 
ˇŒback
,

575 
gpoöãr
 
u£r_d©a
);

576 
GFûeEnumî©‹
 * 
	`g_fûe_íumî©e_chûdªn_föish
 (
GFûe
 *
fûe
,

577 
GAsyncResu…
 *
ªs
,

578 
GEº‹
 **
îr‹
);

579 
GFûe
 * 
	`g_fûe_£t_di•œy_«me
 (GFûê*
fûe
,

580 c⁄° *
di•œy_«me
,

581 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

582 
GEº‹
 **
îr‹
);

583 
	`g_fûe_£t_di•œy_«me_async
 (
GFûe
 *
fûe
,

584 c⁄° *
di•œy_«me
,

585 
io_¥i‹ôy
,

586 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

587 
GAsyncRódyCÆlback
 
ˇŒback
,

588 
gpoöãr
 
u£r_d©a
);

589 
GFûe
 * 
	`g_fûe_£t_di•œy_«me_föish
 (GFûê*
fûe
,

590 
GAsyncResu…
 *
ªs
,

591 
GEº‹
 **
îr‹
);

592 
gboﬁón
 
	`g_fûe_dñëe
 (
GFûe
 *
fûe
,

593 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

594 
GEº‹
 **
îr‹
);

595 
gboﬁón
 
	`g_fûe_åash
 (
GFûe
 *
fûe
,

596 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

597 
GEº‹
 **
îr‹
);

598 
gboﬁón
 
	`g_fûe_c›y
 (
GFûe
 *
sour˚
,

599 
GFûe
 *
de°ö©i⁄
,

600 
GFûeC›yFœgs
 
Êags
,

601 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

602 
GFûeProgªssCÆlback
 
¥ogªss_ˇŒback
,

603 
gpoöãr
 
¥ogªss_ˇŒback_d©a
,

604 
GEº‹
 **
îr‹
);

605 
	`g_fûe_c›y_async
 (
GFûe
 *
sour˚
,

606 
GFûe
 *
de°ö©i⁄
,

607 
GFûeC›yFœgs
 
Êags
,

608 
io_¥i‹ôy
,

609 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

610 
GFûeProgªssCÆlback
 
¥ogªss_ˇŒback
,

611 
gpoöãr
 
¥ogªss_ˇŒback_d©a
,

612 
GAsyncRódyCÆlback
 
ˇŒback
,

613 
gpoöãr
 
u£r_d©a
);

614 
gboﬁón
 
	`g_fûe_c›y_föish
 (
GFûe
 *
fûe
,

615 
GAsyncResu…
 *
ªs
,

616 
GEº‹
 **
îr‹
);

617 
gboﬁón
 
	`g_fûe_move
 (
GFûe
 *
sour˚
,

618 
GFûe
 *
de°ö©i⁄
,

619 
GFûeC›yFœgs
 
Êags
,

620 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

621 
GFûeProgªssCÆlback
 
¥ogªss_ˇŒback
,

622 
gpoöãr
 
¥ogªss_ˇŒback_d©a
,

623 
GEº‹
 **
îr‹
);

624 
gboﬁón
 
	`g_fûe_make_dúe˘‹y
 (
GFûe
 *
fûe
,

625 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

626 
GEº‹
 **
îr‹
);

627 
gboﬁón
 
	`g_fûe_make_dúe˘‹y_wôh_∑ª¡s
 (
GFûe
 *
fûe
,

628 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

629 
GEº‹
 **
îr‹
);

630 
gboﬁón
 
	`g_fûe_make_symbﬁic_lök
 (
GFûe
 *
fûe
,

631 c⁄° *
symlök_vÆue
,

632 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

633 
GEº‹
 **
îr‹
);

634 
GFûeAâribuãInfoLi°
 *
	`g_fûe_quîy_£âabÀ_©åibuãs
 (
GFûe
 *
fûe
,

635 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

636 
GEº‹
 **
îr‹
);

637 
GFûeAâribuãInfoLi°
 *
	`g_fûe_quîy_wrôabÀ_«me•a˚s
 (
GFûe
 *
fûe
,

638 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

639 
GEº‹
 **
îr‹
);

640 
gboﬁón
 
	`g_fûe_£t_©åibuã
 (
GFûe
 *
fûe
,

641 c⁄° *
©åibuã
,

642 
GFûeAâribuãTy≥
 
ty≥
,

643 
gpoöãr
 
vÆue_p
,

644 
GFûeQuîyInfoFœgs
 
Êags
,

645 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

646 
GEº‹
 **
îr‹
);

647 
gboﬁón
 
	`g_fûe_£t_©åibuãs_‰om_öfo
 (
GFûe
 *
fûe
,

648 
GFûeInfo
 *
öfo
,

649 
GFûeQuîyInfoFœgs
 
Êags
,

650 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

651 
GEº‹
 **
îr‹
);

652 
	`g_fûe_£t_©åibuãs_async
 (
GFûe
 *
fûe
,

653 
GFûeInfo
 *
öfo
,

654 
GFûeQuîyInfoFœgs
 
Êags
,

655 
io_¥i‹ôy
,

656 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

657 
GAsyncRódyCÆlback
 
ˇŒback
,

658 
gpoöãr
 
u£r_d©a
);

659 
gboﬁón
 
	`g_fûe_£t_©åibuãs_föish
 (
GFûe
 *
fûe
,

660 
GAsyncResu…
 *
ªsu…
,

661 
GFûeInfo
 **
öfo
,

662 
GEº‹
 **
îr‹
);

663 
gboﬁón
 
	`g_fûe_£t_©åibuã_°rög
 (
GFûe
 *
fûe
,

664 c⁄° *
©åibuã
,

665 c⁄° *
vÆue
,

666 
GFûeQuîyInfoFœgs
 
Êags
,

667 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

668 
GEº‹
 **
îr‹
);

669 
gboﬁón
 
	`g_fûe_£t_©åibuã_byã_°rög
 (
GFûe
 *
fûe
,

670 c⁄° *
©åibuã
,

671 c⁄° *
vÆue
,

672 
GFûeQuîyInfoFœgs
 
Êags
,

673 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

674 
GEº‹
 **
îr‹
);

675 
gboﬁón
 
	`g_fûe_£t_©åibuã_uöt32
 (
GFûe
 *
fûe
,

676 c⁄° *
©åibuã
,

677 
guöt32
 
vÆue
,

678 
GFûeQuîyInfoFœgs
 
Êags
,

679 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

680 
GEº‹
 **
îr‹
);

681 
gboﬁón
 
	`g_fûe_£t_©åibuã_öt32
 (
GFûe
 *
fûe
,

682 c⁄° *
©åibuã
,

683 
göt32
 
vÆue
,

684 
GFûeQuîyInfoFœgs
 
Êags
,

685 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

686 
GEº‹
 **
îr‹
);

687 
gboﬁón
 
	`g_fûe_£t_©åibuã_uöt64
 (
GFûe
 *
fûe
,

688 c⁄° *
©åibuã
,

689 
guöt64
 
vÆue
,

690 
GFûeQuîyInfoFœgs
 
Êags
,

691 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

692 
GEº‹
 **
îr‹
);

693 
gboﬁón
 
	`g_fûe_£t_©åibuã_öt64
 (
GFûe
 *
fûe
,

694 c⁄° *
©åibuã
,

695 
göt64
 
vÆue
,

696 
GFûeQuîyInfoFœgs
 
Êags
,

697 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

698 
GEº‹
 **
îr‹
);

699 
	`g_fûe_mou¡_í˛osög_vﬁume
 (
GFûe
 *
loˇti⁄
,

700 
GMou¡Mou¡Fœgs
 
Êags
,

701 
GMou¡O≥øti⁄
 *
mou¡_›î©i⁄
,

702 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

703 
GAsyncRódyCÆlback
 
ˇŒback
,

704 
gpoöãr
 
u£r_d©a
);

705 
gboﬁón
 
	`g_fûe_mou¡_í˛osög_vﬁume_föish
 (
GFûe
 *
loˇti⁄
,

706 
GAsyncResu…
 *
ªsu…
,

707 
GEº‹
 **
îr‹
);

708 
	`g_fûe_mou¡_mou¡abÀ
 (
GFûe
 *
fûe
,

709 
GMou¡Mou¡Fœgs
 
Êags
,

710 
GMou¡O≥øti⁄
 *
mou¡_›î©i⁄
,

711 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

712 
GAsyncRódyCÆlback
 
ˇŒback
,

713 
gpoöãr
 
u£r_d©a
);

714 
GFûe
 * 
	`g_fûe_mou¡_mou¡abÀ_föish
 (GFûê*
fûe
,

715 
GAsyncResu…
 *
ªsu…
,

716 
GEº‹
 **
îr‹
);

717 
	`g_fûe_unmou¡_mou¡abÀ
 (
GFûe
 *
fûe
,

718 
GMou¡Unmou¡Fœgs
 
Êags
,

719 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

720 
GAsyncRódyCÆlback
 
ˇŒback
,

721 
gpoöãr
 
u£r_d©a
);

722 
gboﬁón
 
	`g_fûe_unmou¡_mou¡abÀ_föish
 (
GFûe
 *
fûe
,

723 
GAsyncResu…
 *
ªsu…
,

724 
GEº‹
 **
îr‹
);

725 
	`g_fûe_eje˘_mou¡abÀ
 (
GFûe
 *
fûe
,

726 
GMou¡Unmou¡Fœgs
 
Êags
,

727 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

728 
GAsyncRódyCÆlback
 
ˇŒback
,

729 
gpoöãr
 
u£r_d©a
);

730 
gboﬁón
 
	`g_fûe_eje˘_mou¡abÀ_föish
 (
GFûe
 *
fûe
,

731 
GAsyncResu…
 *
ªsu…
,

732 
GEº‹
 **
îr‹
);

734 
gboﬁón
 
	`g_fûe_c›y_©åibuãs
 (
GFûe
 *
sour˚
,

735 
GFûe
 *
de°ö©i⁄
,

736 
GFûeC›yFœgs
 
Êags
,

737 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

738 
GEº‹
 **
îr‹
);

741 
GFûeM⁄ô‹
* 
	`g_fûe_m⁄ô‹_dúe˘‹y
 (
GFûe
 *
fûe
,

742 
GFûeM⁄ô‹Fœgs
 
Êags
,

743 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

744 
GEº‹
 **
îr‹
);

745 
GFûeM⁄ô‹
* 
	`g_fûe_m⁄ô‹_fûe
 (
GFûe
 *
fûe
,

746 
GFûeM⁄ô‹Fœgs
 
Êags
,

747 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

748 
GEº‹
 **
îr‹
);

749 
GFûeM⁄ô‹
* 
	`g_fûe_m⁄ô‹
 (
GFûe
 *
fûe
,

750 
GFûeM⁄ô‹Fœgs
 
Êags
,

751 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

752 
GEº‹
 **
îr‹
);

757 
GAµInfo
 *
	`g_fûe_quîy_deÁu…_h™dÀr
 (
GFûe
 *
fûe
,

758 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

759 
GEº‹
 **
îr‹
);

760 
gboﬁón
 
	`g_fûe_lﬂd_c⁄ã¡s
 (
GFûe
 *
fûe
,

761 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

762 **
c⁄ã¡s
,

763 
gsize
 *
Àngth
,

764 **
ëag_out
,

765 
GEº‹
 **
îr‹
);

766 
	`g_fûe_lﬂd_c⁄ã¡s_async
 (
GFûe
 *
fûe
,

767 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

768 
GAsyncRódyCÆlback
 
ˇŒback
,

769 
gpoöãr
 
u£r_d©a
);

770 
gboﬁón
 
	`g_fûe_lﬂd_c⁄ã¡s_föish
 (
GFûe
 *
fûe
,

771 
GAsyncResu…
 *
ªs
,

772 **
c⁄ã¡s
,

773 
gsize
 *
Àngth
,

774 **
ëag_out
,

775 
GEº‹
 **
îr‹
);

776 
	`g_fûe_lﬂd_∑πül_c⁄ã¡s_async
 (
GFûe
 *
fûe
,

777 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

778 
GFûeRódM‹eCÆlback
 
ªad_m‹e_ˇŒback
,

779 
GAsyncRódyCÆlback
 
ˇŒback
,

780 
gpoöãr
 
u£r_d©a
);

781 
gboﬁón
 
	`g_fûe_lﬂd_∑πül_c⁄ã¡s_föish
 (
GFûe
 *
fûe
,

782 
GAsyncResu…
 *
ªs
,

783 **
c⁄ã¡s
,

784 
gsize
 *
Àngth
,

785 **
ëag_out
,

786 
GEº‹
 **
îr‹
);

787 
gboﬁón
 
	`g_fûe_ª∂a˚_c⁄ã¡s
 (
GFûe
 *
fûe
,

788 c⁄° *
c⁄ã¡s
,

789 
gsize
 
Àngth
,

790 c⁄° *
ëag
,

791 
gboﬁón
 
make_backup
,

792 
GFûeCª©eFœgs
 
Êags
,

793 **
√w_ëag
,

794 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

795 
GEº‹
 **
îr‹
);

796 
	`g_fûe_ª∂a˚_c⁄ã¡s_async
 (
GFûe
 *
fûe
,

797 c⁄° *
c⁄ã¡s
,

798 
gsize
 
Àngth
,

799 c⁄° *
ëag
,

800 
gboﬁón
 
make_backup
,

801 
GFûeCª©eFœgs
 
Êags
,

802 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

803 
GAsyncRódyCÆlback
 
ˇŒback
,

804 
gpoöãr
 
u£r_d©a
);

805 
gboﬁón
 
	`g_fûe_ª∂a˚_c⁄ã¡s_föish
 (
GFûe
 *
fûe
,

806 
GAsyncResu…
 *
ªs
,

807 **
√w_ëag
,

808 
GEº‹
 **
îr‹
);

810 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfileattribute.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_ATTRIBUTE_H__


28 
	#__G_FILE_ATTRIBUTE_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


42 
	s_GFûeAâribuãInfo


44 *
	m«me
;

45 
GFûeAâribuãTy≥
 
	mty≥
;

46 
GFûeAâribuãInfoFœgs
 
	mÊags
;

57 
	s_GFûeAâribuãInfoLi°


59 
GFûeAâribuãInfo
 *
	möfos
;

60 
	mn_öfos
;

63 
GTy≥
 
g_fûe_©åibuã_öfo_li°_gë_ty≥
 ();

64 
GFûeAâribuãInfoLi°
 * 
g_fûe_©åibuã_öfo_li°_√w
 ();

65 
GFûeAâribuãInfoLi°
 * 
g_fûe_©åibuã_öfo_li°_ªf
 (GFûeAâribuãInfoLi° *
li°
);

66 
g_fûe_©åibuã_öfo_li°_uƒef
 (
GFûeAâribuãInfoLi°
 *
li°
);

67 
GFûeAâribuãInfoLi°
 * 
g_fûe_©åibuã_öfo_li°_dup
 (GFûeAâribuãInfoLi° *
li°
);

68 c⁄° 
GFûeAâribuãInfo
 *
g_fûe_©åibuã_öfo_li°_lookup
 (
GFûeAâribuãInfoLi°
 *
li°
,

69 c⁄° *
«me
);

70 
g_fûe_©åibuã_öfo_li°_add
 (
GFûeAâribuãInfoLi°
 *
li°
,

71 c⁄° *
«me
,

72 
GFûeAâribuãTy≥
 
ty≥
,

73 
GFûeAâribuãInfoFœgs
 
Êags
);

75 
	gG_END_DECLS


	@/usr/include/glib-2.0/gio/gfileenumerator.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_ENUMERATOR_H__


28 
	#__G_FILE_ENUMERATOR_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE_ENUMERATOR
 (
	`g_fûe_íumî©‹_gë_ty≥
 ())

	)

35 
	#G_FILE_ENUMERATOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILE_ENUMERATOR
, 
GFûeEnumî©‹
))

	)

36 
	#G_FILE_ENUMERATOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILE_ENUMERATOR
, 
GFûeEnumî©‹Cœss
))

	)

37 
	#G_IS_FILE_ENUMERATOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILE_ENUMERATOR
))

	)

38 
	#G_IS_FILE_ENUMERATOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILE_ENUMERATOR
))

	)

39 
	#G_FILE_ENUMERATOR_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILE_ENUMERATOR
, 
GFûeEnumî©‹Cœss
))

	)

47 
_GFûeEnumî©‹Cœss
 
	tGFûeEnumî©‹Cœss
;

48 
_GFûeEnumî©‹Priv©e
 
	tGFûeEnumî©‹Priv©e
;

50 
	s_GFûeEnumî©‹


52 
GObje˘
 
	m∑ª¡_ö°™˚
;

55 
GFûeEnumî©‹Priv©e
 *
	m¥iv
;

58 
	s_GFûeEnumî©‹Cœss


60 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

64 
	mGFûeInfo
 * (* 
	m√xt_fûe
Ë(
GFûeEnumî©‹
 *
	míumî©‹
,

65 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

66 
GEº‹
 **
	mîr‹
);

67 
gboﬁón
 (* 
˛o£_‚
Ë(
GFûeEnumî©‹
 *
	míumî©‹
,

68 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

69 
GEº‹
 **
	mîr‹
);

71 (* 
	m√xt_fûes_async
Ë(
GFûeEnumî©‹
 *
	míumî©‹
,

72 
	mnum_fûes
,

73 
	mio_¥i‹ôy
,

74 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

75 
GAsyncRódyCÆlback
 
	mˇŒback
,

76 
gpoöãr
 
	mu£r_d©a
);

77 
	mGLi°
 * (* 
	m√xt_fûes_föish
Ë(
GFûeEnumî©‹
 *
	míumî©‹
,

78 
GAsyncResu…
 *
	mªs
,

79 
GEº‹
 **
	mîr‹
);

80 (* 
	m˛o£_async
Ë(
GFûeEnumî©‹
 *
	míumî©‹
,

81 
	mio_¥i‹ôy
,

82 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

83 
GAsyncRódyCÆlback
 
	mˇŒback
,

84 
gpoöãr
 
	mu£r_d©a
);

85 
gboﬁón
 (* 
˛o£_föish
Ë(
GFûeEnumî©‹
 *
	míumî©‹
,

86 
GAsyncResu…
 *
	mªs
,

87 
GEº‹
 **
	mîr‹
);

91 (*
	m_g_ª£rved1
) ();

92 (*
	m_g_ª£rved2
) ();

93 (*
	m_g_ª£rved3
) ();

94 (*
	m_g_ª£rved4
) ();

95 (*
	m_g_ª£rved5
) ();

96 (*
	m_g_ª£rved6
) ();

97 (*
	m_g_ª£rved7
) ();

100 
GTy≥
 
	$g_fûe_íumî©‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

102 
GFûeInfo
 *
	`g_fûe_íumî©‹_√xt_fûe
 (
GFûeEnumî©‹
 *
íumî©‹
,

103 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

104 
GEº‹
 **
îr‹
);

105 
gboﬁón
 
	`g_fûe_íumî©‹_˛o£
 (
GFûeEnumî©‹
 *
íumî©‹
,

106 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

107 
GEº‹
 **
îr‹
);

108 
	`g_fûe_íumî©‹_√xt_fûes_async
 (
GFûeEnumî©‹
 *
íumî©‹
,

109 
num_fûes
,

110 
io_¥i‹ôy
,

111 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

112 
GAsyncRódyCÆlback
 
ˇŒback
,

113 
gpoöãr
 
u£r_d©a
);

114 
GLi°
 * 
	`g_fûe_íumî©‹_√xt_fûes_föish
 (
GFûeEnumî©‹
 *
íumî©‹
,

115 
GAsyncResu…
 *
ªsu…
,

116 
GEº‹
 **
îr‹
);

117 
	`g_fûe_íumî©‹_˛o£_async
 (
GFûeEnumî©‹
 *
íumî©‹
,

118 
io_¥i‹ôy
,

119 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

120 
GAsyncRódyCÆlback
 
ˇŒback
,

121 
gpoöãr
 
u£r_d©a
);

122 
gboﬁón
 
	`g_fûe_íumî©‹_˛o£_föish
 (
GFûeEnumî©‹
 *
íumî©‹
,

123 
GAsyncResu…
 *
ªsu…
,

124 
GEº‹
 **
îr‹
);

125 
gboﬁón
 
	`g_fûe_íumî©‹_is_˛o£d
 (
GFûeEnumî©‹
 *
íumî©‹
);

126 
gboﬁón
 
	`g_fûe_íumî©‹_has_≥ndög
 (
GFûeEnumî©‹
 *
íumî©‹
);

127 
	`g_fûe_íumî©‹_£t_≥ndög
 (
GFûeEnumî©‹
 *
íumî©‹
,

128 
gboﬁón
 
≥ndög
);

129 
GFûe
 * 
	`g_fûe_íumî©‹_gë_c⁄èöî
 (
GFûeEnumî©‹
 *
íumî©‹
);

131 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfileicon.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_ICON_H__


28 
	#__G_FILE_ICON_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE_ICON
 (
	`g_fûe_ic⁄_gë_ty≥
 ())

	)

35 
	#G_FILE_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILE_ICON
, 
GFûeIc⁄
))

	)

36 
	#G_FILE_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILE_ICON
, 
GFûeIc⁄Cœss
))

	)

37 
	#G_IS_FILE_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILE_ICON
))

	)

38 
	#G_IS_FILE_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILE_ICON
))

	)

39 
	#G_FILE_ICON_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILE_ICON
, 
GFûeIc⁄Cœss
))

	)

46 
_GFûeIc⁄Cœss
 
	tGFûeIc⁄Cœss
;

48 
GTy≥
 
	$g_fûe_ic⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

50 
GIc⁄
 * 
	`g_fûe_ic⁄_√w
 (
GFûe
 *
fûe
);

52 
GFûe
 * 
	`g_fûe_ic⁄_gë_fûe
 (
GFûeIc⁄
 *
ic⁄
);

54 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfileinfo.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_INFO_H__


28 
	#__G_FILE_INFO_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE_INFO
 (
	`g_fûe_öfo_gë_ty≥
 ())

	)

35 
	#G_FILE_INFO
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILE_INFO
, 
GFûeInfo
))

	)

36 
	#G_FILE_INFO_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILE_INFO
, 
GFûeInfoCœss
))

	)

37 
	#G_IS_FILE_INFO
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILE_INFO
))

	)

38 
	#G_IS_FILE_INFO_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILE_INFO
))

	)

39 
	#G_FILE_INFO_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILE_INFO
, 
GFûeInfoCœss
))

	)

46 
_GFûeInfoCœss
 
	tGFûeInfoCœss
;

57 
	#G_FILE_ATTRIBUTE_STANDARD_TYPE
 "°™d¨d::ty≥"

	)

65 
	#G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN
 "°™d¨d::is-hiddí"

	)

73 
	#G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP
 "°™d¨d::is-backup"

	)

83 
	#G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK
 "°™d¨d::is-symlök"

	)

91 
	#G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL
 "°™d¨d::is-vútuÆ"

	)

103 
	#G_FILE_ATTRIBUTE_STANDARD_NAME
 "°™d¨d::«me"

	)

113 
	#G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME
 "°™d¨d::di•œy-«me"

	)

126 
	#G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME
 "°™d¨d::edô-«me"

	)

140 
	#G_FILE_ATTRIBUTE_STANDARD_COPY_NAME
 "°™d¨d::c›y-«me"

	)

154 
	#G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION
 "°™d¨d::des¸ùti⁄"

	)

163 
	#G_FILE_ATTRIBUTE_STANDARD_ICON
 "°™d¨d::ic⁄"

	)

172 
	#G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE
 "°™d¨d::c⁄ã¡-ty≥"

	)

184 
	#G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE
 "°™d¨d::Á°-c⁄ã¡-ty≥"

	)

192 
	#G_FILE_ATTRIBUTE_STANDARD_SIZE
 "°™d¨d::size"

	)

204 
	#G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE
 "°™d¨d::Æloˇãd-size"

	)

213 
	#G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET
 "°™d¨d::symlök-èrgë"

	)

222 
	#G_FILE_ATTRIBUTE_STANDARD_TARGET_URI
 "°™d¨d::èrgë-uri"

	)

234 
	#G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER
 "°™d¨d::s‹t-‹dî"

	)

245 
	#G_FILE_ATTRIBUTE_ETAG_VALUE
 "ëag::vÆue"

	)

259 
	#G_FILE_ATTRIBUTE_ID_FILE
 "id::fûe"

	)

270 
	#G_FILE_ATTRIBUTE_ID_FILESYSTEM
 "id::fûesy°em"

	)

281 
	#G_FILE_ATTRIBUTE_ACCESS_CAN_READ
 "ac˚ss::ˇn-ªad"

	)

290 
	#G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE
 "ac˚ss::ˇn-wrôe"

	)

299 
	#G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE
 "ac˚ss::ˇn-execuã"

	)

308 
	#G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE
 "ac˚ss::ˇn-dñëe"

	)

318 
	#G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH
 "ac˚ss::ˇn-åash"

	)

327 
	#G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME
 "ac˚ss::ˇn-ª«me"

	)

339 
	#G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT
 "mou¡abÀ::ˇn-mou¡"

	)

347 
	#G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT
 "mou¡abÀ::ˇn-unmou¡"

	)

355 
	#G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT
 "mou¡abÀ::ˇn-eje˘"

	)

363 
	#G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE
 "mou¡abÀ::unix-devi˚"

	)

371 
	#G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI
 "mou¡abÀ::hÆ-udi"

	)

383 
	#G_FILE_ATTRIBUTE_TIME_MODIFIED
 "time::modifõd"

	)

393 
	#G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC
 "time::modifõd-u£c"

	)

403 
	#G_FILE_ATTRIBUTE_TIME_ACCESS
 "time::ac˚ss"

	)

413 
	#G_FILE_ATTRIBUTE_TIME_ACCESS_USEC
 "time::ac˚ss-u£c"

	)

424 
	#G_FILE_ATTRIBUTE_TIME_CHANGED
 "time::ch™ged"

	)

434 
	#G_FILE_ATTRIBUTE_TIME_CHANGED_USEC
 "time::ch™ged-u£c"

	)

445 
	#G_FILE_ATTRIBUTE_TIME_CREATED
 "time::¸óãd"

	)

455 
	#G_FILE_ATTRIBUTE_TIME_CREATED_USEC
 "time::¸óãd-u£c"

	)

467 
	#G_FILE_ATTRIBUTE_UNIX_DEVICE
 "unix::devi˚"

	)

476 
	#G_FILE_ATTRIBUTE_UNIX_INODE
 "unix::öode"

	)

486 
	#G_FILE_ATTRIBUTE_UNIX_MODE
 "unix::mode"

	)

496 
	#G_FILE_ATTRIBUTE_UNIX_NLINK
 "unix::∆ök"

	)

505 
	#G_FILE_ATTRIBUTE_UNIX_UID
 "unix::uid"

	)

514 
	#G_FILE_ATTRIBUTE_UNIX_GID
 "unix::gid"

	)

524 
	#G_FILE_ATTRIBUTE_UNIX_RDEV
 "unix::rdev"

	)

533 
	#G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE
 "unix::block-size"

	)

542 
	#G_FILE_ATTRIBUTE_UNIX_BLOCKS
 "unix::blocks"

	)

552 
	#G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT
 "unix::is-mou¡poöt"

	)

564 
	#G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE
 "dos::is-¨chive"

	)

574 
	#G_FILE_ATTRIBUTE_DOS_IS_SYSTEM
 "dos::is-sy°em"

	)

585 
	#G_FILE_ATTRIBUTE_OWNER_USER
 "ow√r::u£r"

	)

594 
	#G_FILE_ATTRIBUTE_OWNER_USER_REAL
 "ow√r::u£r-ªÆ"

	)

602 
	#G_FILE_ATTRIBUTE_OWNER_GROUP
 "ow√r::group"

	)

613 
	#G_FILE_ATTRIBUTE_THUMBNAIL_PATH
 "thumb«û::∑th"

	)

621 
	#G_FILE_ATTRIBUTE_THUMBNAILING_FAILED
 "thumb«û::Áûed"

	)

636 
	#G_FILE_ATTRIBUTE_PREVIEW_ICON
 "¥evõw::ic⁄"

	)

647 
	#G_FILE_ATTRIBUTE_FILESYSTEM_SIZE
 "fûesy°em::size"

	)

656 
	#G_FILE_ATTRIBUTE_FILESYSTEM_FREE
 "fûesy°em::‰ì"

	)

664 
	#G_FILE_ATTRIBUTE_FILESYSTEM_TYPE
 "fûesy°em::ty≥"

	)

673 
	#G_FILE_ATTRIBUTE_FILESYSTEM_READONLY
 "fûesy°em::ªad⁄ly"

	)

683 
	#G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW
 "fûesy°em::u£-¥evõw"

	)

692 
	#G_FILE_ATTRIBUTE_GVFS_BACKEND
 "gvfs::backíd"

	)

702 
	#G_FILE_ATTRIBUTE_SELINUX_CONTEXT
 "£löux::c⁄ãxt"

	)

711 
	#G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT
 "åash::ôem-cou¡"

	)

713 
GTy≥
 
	$g_fûe_öfo_gë_ty≥
 (Ë
G_GNUC_CONST
;

715 
GFûeInfo
 * 
	`g_fûe_öfo_√w
 ();

716 
GFûeInfo
 * 
	`g_fûe_öfo_dup
 (GFûeInfÿ*
Ÿhî
);

717 
	`g_fûe_öfo_c›y_öto
 (
GFûeInfo
 *
§c_öfo
,

718 
GFûeInfo
 *
de°_öfo
);

719 
gboﬁón
 
	`g_fûe_öfo_has_©åibuã
 (
GFûeInfo
 *
öfo
,

720 c⁄° *
©åibuã
);

721 ** 
	`g_fûe_öfo_li°_©åibuãs
 (
GFûeInfo
 *
öfo
,

722 c⁄° *
«me_•a˚
);

723 
gboﬁón
 
	`g_fûe_öfo_gë_©åibuã_d©a
 (
GFûeInfo
 *
öfo
,

724 c⁄° *
©åibuã
,

725 
GFûeAâribuãTy≥
 *
ty≥
,

726 
gpoöãr
 *
vÆue_µ
,

727 
GFûeAâribuãSètus
 *
°©us
);

728 
GFûeAâribuãTy≥
 
	`g_fûe_öfo_gë_©åibuã_ty≥
 (
GFûeInfo
 *
öfo
,

729 c⁄° *
©åibuã
);

730 
	`g_fûe_öfo_ªmove_©åibuã
 (
GFûeInfo
 *
öfo
,

731 c⁄° *
©åibuã
);

732 
GFûeAâribuãSètus
 
	`g_fûe_öfo_gë_©åibuã_°©us
 (
GFûeInfo
 *
öfo
,

733 c⁄° *
©åibuã
);

734 * 
	`g_fûe_öfo_gë_©åibuã_as_°rög
 (
GFûeInfo
 *
öfo
,

735 c⁄° *
©åibuã
);

736 c⁄° * 
	`g_fûe_öfo_gë_©åibuã_°rög
 (
GFûeInfo
 *
öfo
,

737 c⁄° *
©åibuã
);

738 c⁄° * 
	`g_fûe_öfo_gë_©åibuã_byã_°rög
 (
GFûeInfo
 *
öfo
,

739 c⁄° *
©åibuã
);

740 
gboﬁón
 
	`g_fûe_öfo_gë_©åibuã_boﬁón
 (
GFûeInfo
 *
öfo
,

741 c⁄° *
©åibuã
);

742 
guöt32
 
	`g_fûe_öfo_gë_©åibuã_uöt32
 (
GFûeInfo
 *
öfo
,

743 c⁄° *
©åibuã
);

744 
göt32
 
	`g_fûe_öfo_gë_©åibuã_öt32
 (
GFûeInfo
 *
öfo
,

745 c⁄° *
©åibuã
);

746 
guöt64
 
	`g_fûe_öfo_gë_©åibuã_uöt64
 (
GFûeInfo
 *
öfo
,

747 c⁄° *
©åibuã
);

748 
göt64
 
	`g_fûe_öfo_gë_©åibuã_öt64
 (
GFûeInfo
 *
öfo
,

749 c⁄° *
©åibuã
);

750 
GObje˘
 * 
	`g_fûe_öfo_gë_©åibuã_obje˘
 (
GFûeInfo
 *
öfo
,

751 c⁄° *
©åibuã
);

753 
	`g_fûe_öfo_£t_©åibuã
 (
GFûeInfo
 *
öfo
,

754 c⁄° *
©åibuã
,

755 
GFûeAâribuãTy≥
 
ty≥
,

756 
gpoöãr
 
vÆue_p
);

757 
	`g_fûe_öfo_£t_©åibuã_°rög
 (
GFûeInfo
 *
öfo
,

758 c⁄° *
©åibuã
,

759 c⁄° *
©å_vÆue
);

760 
	`g_fûe_öfo_£t_©åibuã_byã_°rög
 (
GFûeInfo
 *
öfo
,

761 c⁄° *
©åibuã
,

762 c⁄° *
©å_vÆue
);

763 
	`g_fûe_öfo_£t_©åibuã_boﬁón
 (
GFûeInfo
 *
öfo
,

764 c⁄° *
©åibuã
,

765 
gboﬁón
 
©å_vÆue
);

766 
	`g_fûe_öfo_£t_©åibuã_uöt32
 (
GFûeInfo
 *
öfo
,

767 c⁄° *
©åibuã
,

768 
guöt32
 
©å_vÆue
);

769 
	`g_fûe_öfo_£t_©åibuã_öt32
 (
GFûeInfo
 *
öfo
,

770 c⁄° *
©åibuã
,

771 
göt32
 
©å_vÆue
);

772 
	`g_fûe_öfo_£t_©åibuã_uöt64
 (
GFûeInfo
 *
öfo
,

773 c⁄° *
©åibuã
,

774 
guöt64
 
©å_vÆue
);

775 
	`g_fûe_öfo_£t_©åibuã_öt64
 (
GFûeInfo
 *
öfo
,

776 c⁄° *
©åibuã
,

777 
göt64
 
©å_vÆue
);

778 
	`g_fûe_öfo_£t_©åibuã_obje˘
 (
GFûeInfo
 *
öfo
,

779 c⁄° *
©åibuã
,

780 
GObje˘
 *
©å_vÆue
);

782 
	`g_fûe_öfo_˛ór_°©us
 (
GFûeInfo
 *
öfo
);

785 
GFûeTy≥
 
	`g_fûe_öfo_gë_fûe_ty≥
 (
GFûeInfo
 *
öfo
);

786 
gboﬁón
 
	`g_fûe_öfo_gë_is_hiddí
 (
GFûeInfo
 *
öfo
);

787 
gboﬁón
 
	`g_fûe_öfo_gë_is_backup
 (
GFûeInfo
 *
öfo
);

788 
gboﬁón
 
	`g_fûe_öfo_gë_is_symlök
 (
GFûeInfo
 *
öfo
);

789 c⁄° * 
	`g_fûe_öfo_gë_«me
 (
GFûeInfo
 *
öfo
);

790 c⁄° * 
	`g_fûe_öfo_gë_di•œy_«me
 (
GFûeInfo
 *
öfo
);

791 c⁄° * 
	`g_fûe_öfo_gë_edô_«me
 (
GFûeInfo
 *
öfo
);

792 
GIc⁄
 * 
	`g_fûe_öfo_gë_ic⁄
 (
GFûeInfo
 *
öfo
);

793 c⁄° * 
	`g_fûe_öfo_gë_c⁄ã¡_ty≥
 (
GFûeInfo
 *
öfo
);

794 
goff£t
 
	`g_fûe_öfo_gë_size
 (
GFûeInfo
 *
öfo
);

795 
	`g_fûe_öfo_gë_modifiˇti⁄_time
 (
GFûeInfo
 *
öfo
,

796 
GTimeVÆ
 *
ªsu…
);

797 c⁄° * 
	`g_fûe_öfo_gë_symlök_èrgë
 (
GFûeInfo
 *
öfo
);

798 c⁄° * 
	`g_fûe_öfo_gë_ëag
 (
GFûeInfo
 *
öfo
);

799 
göt32
 
	`g_fûe_öfo_gë_s‹t_‹dî
 (
GFûeInfo
 *
öfo
);

801 
	`g_fûe_öfo_£t_©åibuã_mask
 (
GFûeInfo
 *
öfo
,

802 
GFûeAâribuãM©chî
 *
mask
);

803 
	`g_fûe_öfo_un£t_©åibuã_mask
 (
GFûeInfo
 *
öfo
);

806 
	`g_fûe_öfo_£t_fûe_ty≥
 (
GFûeInfo
 *
öfo
,

807 
GFûeTy≥
 
ty≥
);

808 
	`g_fûe_öfo_£t_is_hiddí
 (
GFûeInfo
 *
öfo
,

809 
gboﬁón
 
is_hiddí
);

810 
	`g_fûe_öfo_£t_is_symlök
 (
GFûeInfo
 *
öfo
,

811 
gboﬁón
 
is_symlök
);

812 
	`g_fûe_öfo_£t_«me
 (
GFûeInfo
 *
öfo
,

813 c⁄° *
«me
);

814 
	`g_fûe_öfo_£t_di•œy_«me
 (
GFûeInfo
 *
öfo
,

815 c⁄° *
di•œy_«me
);

816 
	`g_fûe_öfo_£t_edô_«me
 (
GFûeInfo
 *
öfo
,

817 c⁄° *
edô_«me
);

818 
	`g_fûe_öfo_£t_ic⁄
 (
GFûeInfo
 *
öfo
,

819 
GIc⁄
 *
ic⁄
);

820 
	`g_fûe_öfo_£t_c⁄ã¡_ty≥
 (
GFûeInfo
 *
öfo
,

821 c⁄° *
c⁄ã¡_ty≥
);

822 
	`g_fûe_öfo_£t_size
 (
GFûeInfo
 *
öfo
,

823 
goff£t
 
size
);

824 
	`g_fûe_öfo_£t_modifiˇti⁄_time
 (
GFûeInfo
 *
öfo
,

825 
GTimeVÆ
 *
mtime
);

826 
	`g_fûe_öfo_£t_symlök_èrgë
 (
GFûeInfo
 *
öfo
,

827 c⁄° *
symlök_èrgë
);

828 
	`g_fûe_öfo_£t_s‹t_‹dî
 (
GFûeInfo
 *
öfo
,

829 
göt32
 
s‹t_‹dî
);

831 
GFûeAâribuãM©chî
 *
	`g_fûe_©åibuã_m©chî_√w
 (c⁄° *
©åibuãs
);

832 
GFûeAâribuãM©chî
 *
	`g_fûe_©åibuã_m©chî_ªf
 (GFûeAâribuãM©chî *
m©chî
);

833 
	`g_fûe_©åibuã_m©chî_uƒef
 (
GFûeAâribuãM©chî
 *
m©chî
);

834 
gboﬁón
 
	`g_fûe_©åibuã_m©chî_m©ches
 (
GFûeAâribuãM©chî
 *
m©chî
,

835 c⁄° *
©åibuã
);

836 
gboﬁón
 
	`g_fûe_©åibuã_m©chî_m©ches_⁄ly
 (
GFûeAâribuãM©chî
 *
m©chî
,

837 c⁄° *
©åibuã
);

838 
gboﬁón
 
	`g_fûe_©åibuã_m©chî_íumî©e_«me•a˚
 (
GFûeAâribuãM©chî
 *
m©chî
,

839 c⁄° *
ns
);

840 c⁄° * 
	`g_fûe_©åibuã_m©chî_íumî©e_√xt
 (
GFûeAâribuãM©chî
 *
m©chî
);

842 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfileinputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_INPUT_STREAM_H__


28 
	#__G_FILE_INPUT_STREAM_H__


	)

30 
	~<gio/göput°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE_INPUT_STREAM
 (
	`g_fûe_öput_°ªam_gë_ty≥
 ())

	)

35 
	#G_FILE_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILE_INPUT_STREAM
, 
GFûeI≈utSåóm
))

	)

36 
	#G_FILE_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILE_INPUT_STREAM
, 
GFûeI≈utSåómCœss
))

	)

37 
	#G_IS_FILE_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILE_INPUT_STREAM
))

	)

38 
	#G_IS_FILE_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILE_INPUT_STREAM
))

	)

39 
	#G_FILE_INPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILE_INPUT_STREAM
, 
GFûeI≈utSåómCœss
))

	)

49 
_GFûeI≈utSåómCœss
 
	tGFûeI≈utSåómCœss
;

50 
_GFûeI≈utSåómPriv©e
 
	tGFûeI≈utSåómPriv©e
;

52 
	s_GFûeI≈utSåóm


54 
GI≈utSåóm
 
	m∑ª¡_ö°™˚
;

57 
GFûeI≈utSåómPriv©e
 *
	m¥iv
;

60 
	s_GFûeI≈utSåómCœss


62 
GI≈utSåómCœss
 
	m∑ª¡_˛ass
;

64 
goff£t
 (* 
ãŒ
Ë(
GFûeI≈utSåóm
 *
	m°ªam
);

65 
gboﬁón
 (* 
ˇn_£ek
Ë(
GFûeI≈utSåóm
 *
	m°ªam
);

66 
gboﬁón
 (* 
£ek
Ë(
GFûeI≈utSåóm
 *
	m°ªam
,

67 
goff£t
 
	moff£t
,

68 
GSìkTy≥
 
	mty≥
,

69 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

70 
GEº‹
 **
	mîr‹
);

71 
	mGFûeInfo
 * (* 
	mquîy_öfo
Ë(
GFûeI≈utSåóm
 *
	m°ªam
,

72 c⁄° *
	m©åibuãs
,

73 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

74 
GEº‹
 **
	mîr‹
);

75 (* 
	mquîy_öfo_async
Ë(
GFûeI≈utSåóm
 *
	m°ªam
,

76 c⁄° *
	m©åibuãs
,

77 
	mio_¥i‹ôy
,

78 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

79 
GAsyncRódyCÆlback
 
	mˇŒback
,

80 
gpoöãr
 
	mu£r_d©a
);

81 
	mGFûeInfo
 * (* 
	mquîy_öfo_föish
Ë(
GFûeI≈utSåóm
 *
	m°ªam
,

82 
GAsyncResu…
 *
	mªs
,

83 
GEº‹
 **
	mîr‹
);

87 (*
	m_g_ª£rved1
) ();

88 (*
	m_g_ª£rved2
) ();

89 (*
	m_g_ª£rved3
) ();

90 (*
	m_g_ª£rved4
) ();

91 (*
	m_g_ª£rved5
) ();

94 
GTy≥
 
	$g_fûe_öput_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

96 
GFûeInfo
 *
	`g_fûe_öput_°ªam_quîy_öfo
 (
GFûeI≈utSåóm
 *
°ªam
,

97 c⁄° *
©åibuãs
,

98 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

99 
GEº‹
 **
îr‹
);

100 
	`g_fûe_öput_°ªam_quîy_öfo_async
 (
GFûeI≈utSåóm
 *
°ªam
,

101 c⁄° *
©åibuãs
,

102 
io_¥i‹ôy
,

103 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

104 
GAsyncRódyCÆlback
 
ˇŒback
,

105 
gpoöãr
 
u£r_d©a
);

106 
GFûeInfo
 *
	`g_fûe_öput_°ªam_quîy_öfo_föish
 (
GFûeI≈utSåóm
 *
°ªam
,

107 
GAsyncResu…
 *
ªsu…
,

108 
GEº‹
 **
îr‹
);

110 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfilemonitor.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_MONITOR_H__


28 
	#__G_FILE_MONITOR_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE_MONITOR
 (
	`g_fûe_m⁄ô‹_gë_ty≥
 ())

	)

35 
	#G_FILE_MONITOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILE_MONITOR
, 
GFûeM⁄ô‹
))

	)

36 
	#G_FILE_MONITOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILE_MONITOR
, 
GFûeM⁄ô‹Cœss
))

	)

37 
	#G_IS_FILE_MONITOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILE_MONITOR
))

	)

38 
	#G_IS_FILE_MONITOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILE_MONITOR
))

	)

39 
	#G_FILE_MONITOR_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILE_MONITOR
, 
GFûeM⁄ô‹Cœss
))

	)

41 
_GFûeM⁄ô‹Cœss
 
	tGFûeM⁄ô‹Cœss
;

42 
_GFûeM⁄ô‹Priv©e
 
	tGFûeM⁄ô‹Priv©e
;

49 
	s_GFûeM⁄ô‹


51 
GObje˘
 
	m∑ª¡_ö°™˚
;

54 
GFûeM⁄ô‹Priv©e
 *
	m¥iv
;

57 
	s_GFûeM⁄ô‹Cœss


59 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

62 (* 
	mch™ged
Ë(
GFûeM⁄ô‹
 *
	mm⁄ô‹
,

63 
GFûe
 *
	mfûe
,

64 
GFûe
 *
	mŸhî_fûe
,

65 
GFûeM⁄ô‹Evít
 
	mevít_ty≥
);

68 
gboﬁón
 (* 
ˇn˚l
Ë(
GFûeM⁄ô‹
 *
	mm⁄ô‹
);

72 (*
	m_g_ª£rved1
) ();

73 (*
	m_g_ª£rved2
) ();

74 (*
	m_g_ª£rved3
) ();

75 (*
	m_g_ª£rved4
) ();

76 (*
	m_g_ª£rved5
) ();

79 
GTy≥
 
	$g_fûe_m⁄ô‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

81 
gboﬁón
 
	`g_fûe_m⁄ô‹_ˇn˚l
 (
GFûeM⁄ô‹
 *
m⁄ô‹
);

82 
gboﬁón
 
	`g_fûe_m⁄ô‹_is_ˇn˚Œed
 (
GFûeM⁄ô‹
 *
m⁄ô‹
);

83 
	`g_fûe_m⁄ô‹_£t_øã_limô
 (
GFûeM⁄ô‹
 *
m⁄ô‹
,

84 
limô_m£cs
);

88 
	`g_fûe_m⁄ô‹_emô_evít
 (
GFûeM⁄ô‹
 *
m⁄ô‹
,

89 
GFûe
 *
chûd
,

90 
GFûe
 *
Ÿhî_fûe
,

91 
GFûeM⁄ô‹Evít
 
evít_ty≥
);

93 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfilenamecompleter.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILENAME_COMPLETER_H__


28 
	#__G_FILENAME_COMPLETER_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILENAME_COMPLETER
 (
	`g_fûíame_com∂ëî_gë_ty≥
 ())

	)

35 
	#G_FILENAME_COMPLETER
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILENAME_COMPLETER
, 
GFûíameCom∂ëî
))

	)

36 
	#G_FILENAME_COMPLETER_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILENAME_COMPLETER
, 
GFûíameCom∂ëîCœss
))

	)

37 
	#G_FILENAME_COMPLETER_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILENAME_COMPLETER
, 
GFûíameCom∂ëîCœss
))

	)

38 
	#G_IS_FILENAME_COMPLETER
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILENAME_COMPLETER
))

	)

39 
	#G_IS_FILENAME_COMPLETER_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILENAME_COMPLETER
))

	)

46 
_GFûíameCom∂ëîCœss
 
	tGFûíameCom∂ëîCœss
;

48 
	s_GFûíameCom∂ëîCœss


50 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

54 (* 
	mgŸ_com∂ëi⁄_d©a
Ë(
GFûíameCom∂ëî
 *
	mfûíame_com∂ëî
);

58 (*
	m_g_ª£rved1
) ();

59 (*
	m_g_ª£rved2
) ();

60 (*
	m_g_ª£rved3
) ();

63 
GTy≥
 
	$g_fûíame_com∂ëî_gë_ty≥
 (Ë
G_GNUC_CONST
;

65 
GFûíameCom∂ëî
 *
	`g_fûíame_com∂ëî_√w
 ();

67 * 
	`g_fûíame_com∂ëî_gë_com∂ëi⁄_suffix
 (
GFûíameCom∂ëî
 *
com∂ëî
,

68 c⁄° *
öôül_ãxt
);

69 ** 
	`g_fûíame_com∂ëî_gë_com∂ëi⁄s
 (
GFûíameCom∂ëî
 *
com∂ëî
,

70 c⁄° *
öôül_ãxt
);

71 
	`g_fûíame_com∂ëî_£t_dús_⁄ly
 (
GFûíameCom∂ëî
 *
com∂ëî
,

72 
gboﬁón
 
dús_⁄ly
);

74 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfileoutputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILE_OUTPUT_STREAM_H__


28 
	#__G_FILE_OUTPUT_STREAM_H__


	)

30 
	~<gio/gouçut°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILE_OUTPUT_STREAM
 (
	`g_fûe_ouçut_°ªam_gë_ty≥
 ())

	)

35 
	#G_FILE_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILE_OUTPUT_STREAM
, 
GFûeOuçutSåóm
))

	)

36 
	#G_FILE_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILE_OUTPUT_STREAM
, 
GFûeOuçutSåómCœss
))

	)

37 
	#G_IS_FILE_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILE_OUTPUT_STREAM
))

	)

38 
	#G_IS_FILE_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILE_OUTPUT_STREAM
))

	)

39 
	#G_FILE_OUTPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILE_OUTPUT_STREAM
, 
GFûeOuçutSåómCœss
))

	)

49 
_GFûeOuçutSåómCœss
 
	tGFûeOuçutSåómCœss
;

50 
_GFûeOuçutSåómPriv©e
 
	tGFûeOuçutSåómPriv©e
;

52 
	s_GFûeOuçutSåóm


54 
GOuçutSåóm
 
	m∑ª¡_ö°™˚
;

57 
GFûeOuçutSåómPriv©e
 *
	m¥iv
;

60 
	s_GFûeOuçutSåómCœss


62 
GOuçutSåómCœss
 
	m∑ª¡_˛ass
;

64 
goff£t
 (* 
ãŒ
Ë(
GFûeOuçutSåóm
 *
	m°ªam
);

65 
gboﬁón
 (* 
ˇn_£ek
Ë(
GFûeOuçutSåóm
 *
	m°ªam
);

66 
gboﬁón
 (* 
£ek
Ë(
GFûeOuçutSåóm
 *
	m°ªam
,

67 
goff£t
 
	moff£t
,

68 
GSìkTy≥
 
	mty≥
,

69 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

70 
GEº‹
 **
	mîr‹
);

71 
gboﬁón
 (* 
ˇn_åunˇã
Ë(
GFûeOuçutSåóm
 *
	m°ªam
);

72 
gboﬁón
 (* 
åunˇã_‚
Ë(
GFûeOuçutSåóm
 *
	m°ªam
,

73 
goff£t
 
	msize
,

74 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

75 
GEº‹
 **
	mîr‹
);

76 
	mGFûeInfo
 * (* 
	mquîy_öfo
Ë(
GFûeOuçutSåóm
 *
	m°ªam
,

77 c⁄° *
	m©åibuãs
,

78 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

79 
GEº‹
 **
	mîr‹
);

80 (* 
	mquîy_öfo_async
Ë(
GFûeOuçutSåóm
 *
	m°ªam
,

81 c⁄° *
	m©åibuãs
,

82 
	mio_¥i‹ôy
,

83 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

84 
GAsyncRódyCÆlback
 
	mˇŒback
,

85 
gpoöãr
 
	mu£r_d©a
);

86 
	mGFûeInfo
 * (* 
	mquîy_öfo_föish
Ë(
GFûeOuçutSåóm
 *
	m°ªam
,

87 
GAsyncResu…
 *
	mªs
,

88 
GEº‹
 **
	mîr‹
);

89 * (* 
	mgë_ëag
Ë(
GFûeOuçutSåóm
 *
	m°ªam
);

92 (*
	m_g_ª£rved1
) ();

93 (*
	m_g_ª£rved2
) ();

94 (*
	m_g_ª£rved3
) ();

95 (*
	m_g_ª£rved4
) ();

96 (*
	m_g_ª£rved5
) ();

99 
GTy≥
 
	$g_fûe_ouçut_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

102 
GFûeInfo
 *
	`g_fûe_ouçut_°ªam_quîy_öfo
 (
GFûeOuçutSåóm
 *
°ªam
,

103 c⁄° *
©åibuãs
,

104 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

105 
GEº‹
 **
îr‹
);

106 
	`g_fûe_ouçut_°ªam_quîy_öfo_async
 (
GFûeOuçutSåóm
 *
°ªam
,

107 c⁄° *
©åibuãs
,

108 
io_¥i‹ôy
,

109 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

110 
GAsyncRódyCÆlback
 
ˇŒback
,

111 
gpoöãr
 
u£r_d©a
);

112 
GFûeInfo
 *
	`g_fûe_ouçut_°ªam_quîy_öfo_föish
 (
GFûeOuçutSåóm
 *
°ªam
,

113 
GAsyncResu…
 *
ªsu…
,

114 
GEº‹
 **
îr‹
);

115 * 
	`g_fûe_ouçut_°ªam_gë_ëag
 (
GFûeOuçutSåóm
 *
°ªam
);

117 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfilterinputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILTER_INPUT_STREAM_H__


28 
	#__G_FILTER_INPUT_STREAM_H__


	)

30 
	~<gio/göput°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILTER_INPUT_STREAM
 (
	`g_fûãr_öput_°ªam_gë_ty≥
 ())

	)

35 
	#G_FILTER_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILTER_INPUT_STREAM
, 
GFûãrI≈utSåóm
))

	)

36 
	#G_FILTER_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILTER_INPUT_STREAM
, 
GFûãrI≈utSåómCœss
))

	)

37 
	#G_IS_FILTER_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILTER_INPUT_STREAM
))

	)

38 
	#G_IS_FILTER_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILTER_INPUT_STREAM
))

	)

39 
	#G_FILTER_INPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILTER_INPUT_STREAM
, 
GFûãrI≈utSåómCœss
))

	)

46 
_GFûãrI≈utSåómCœss
 
	tGFûãrI≈utSåómCœss
;

48 
	s_GFûãrI≈utSåóm


50 
GI≈utSåóm
 
	m∑ª¡_ö°™˚
;

53 
GI≈utSåóm
 *
	mba£_°ªam
;

56 
	s_GFûãrI≈utSåómCœss


58 
GI≈utSåómCœss
 
	m∑ª¡_˛ass
;

62 (*
	m_g_ª£rved1
) ();

63 (*
	m_g_ª£rved2
) ();

64 (*
	m_g_ª£rved3
) ();

68 
GTy≥
 
	$g_fûãr_öput_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GI≈utSåóm
 * 
	`g_fûãr_öput_°ªam_gë_ba£_°ªam
 (
GFûãrI≈utSåóm
 *
°ªam
);

70 
gboﬁón
 
	`g_fûãr_öput_°ªam_gë_˛o£_ba£_°ªam
 (
GFûãrI≈utSåóm
 *
°ªam
);

71 
	`g_fûãr_öput_°ªam_£t_˛o£_ba£_°ªam
 (
GFûãrI≈utSåóm
 *
°ªam
,

72 
gboﬁón
 
˛o£_ba£
);

74 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gfilteroutputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_FILTER_OUTPUT_STREAM_H__


28 
	#__G_FILTER_OUTPUT_STREAM_H__


	)

30 
	~<gio/gouçut°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_FILTER_OUTPUT_STREAM
 (
	`g_fûãr_ouçut_°ªam_gë_ty≥
 ())

	)

35 
	#G_FILTER_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_FILTER_OUTPUT_STREAM
, 
GFûãrOuçutSåóm
))

	)

36 
	#G_FILTER_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_FILTER_OUTPUT_STREAM
, 
GFûãrOuçutSåómCœss
))

	)

37 
	#G_IS_FILTER_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_FILTER_OUTPUT_STREAM
))

	)

38 
	#G_IS_FILTER_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_FILTER_OUTPUT_STREAM
))

	)

39 
	#G_FILTER_OUTPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_FILTER_OUTPUT_STREAM
, 
GFûãrOuçutSåómCœss
))

	)

46 
_GFûãrOuçutSåómCœss
 
	tGFûãrOuçutSåómCœss
;

48 
	s_GFûãrOuçutSåóm


50 
GOuçutSåóm
 
	m∑ª¡_ö°™˚
;

53 
GOuçutSåóm
 *
	mba£_°ªam
;

56 
	s_GFûãrOuçutSåómCœss


58 
GOuçutSåómCœss
 
	m∑ª¡_˛ass
;

62 (*
	m_g_ª£rved1
) ();

63 (*
	m_g_ª£rved2
) ();

64 (*
	m_g_ª£rved3
) ();

68 
GTy≥
 
	$g_fûãr_ouçut_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

69 
GOuçutSåóm
 * 
	`g_fûãr_ouçut_°ªam_gë_ba£_°ªam
 (
GFûãrOuçutSåóm
 *
°ªam
);

70 
gboﬁón
 
	`g_fûãr_ouçut_°ªam_gë_˛o£_ba£_°ªam
 (
GFûãrOuçutSåóm
 *
°ªam
);

71 
	`g_fûãr_ouçut_°ªam_£t_˛o£_ba£_°ªam
 (
GFûãrOuçutSåóm
 *
°ªam
,

72 
gboﬁón
 
˛o£_ba£
);

74 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gicon.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_ICON_H__


28 
	#__G_ICON_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_ICON
 (
	`g_ic⁄_gë_ty≥
 ())

	)

35 
	#G_ICON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_ICON
, 
GIc⁄
))

	)

36 
	#G_IS_ICON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_ICON
))

	)

37 
	#G_ICON_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_ICON
, 
GIc⁄IÁ˚
))

	)

44 
_GIc⁄IÁ˚
 
	tGIc⁄IÁ˚
;

62 
	s_GIc⁄IÁ˚


64 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

68 
guöt
 (* 
hash
Ë(
GIc⁄
 *
	mic⁄
);

69 
gboﬁón
 (* 
equÆ
Ë(
GIc⁄
 *
	mic⁄1
,

70 
GIc⁄
 *
	mic⁄2
);

71 
gboﬁón
 (* 
to_tokís
Ë(
GIc⁄
 *
	mic⁄
,

72 
GPåAºay
 *
	mtokís
,

73 
göt
 *
	mout_vîsi⁄
);

74 
	mGIc⁄
 * (* 
	m‰om_tokís
Ë(
gch¨
 **
	mtokís
,

75 
göt
 
	mnum_tokís
,

76 
göt
 
	mvîsi⁄
,

77 
GEº‹
 **
	mîr‹
);

80 
GTy≥
 
	$g_ic⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

82 
guöt
 
	`g_ic⁄_hash
 (
gc⁄°poöãr
 
ic⁄
);

83 
gboﬁón
 
	`g_ic⁄_equÆ
 (
GIc⁄
 *
ic⁄1
,

84 
GIc⁄
 *
ic⁄2
);

85 
gch¨
 *
	`g_ic⁄_to_°rög
 (
GIc⁄
 *
ic⁄
);

86 
GIc⁄
 *
	`g_ic⁄_√w_f‹_°rög
 (c⁄° 
gch¨
 *
°r
,

87 
GEº‹
 **
îr‹
);

89 
G_END_DECLS


	@/usr/include/glib-2.0/gio/ginputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_INPUT_STREAM_H__


28 
	#__G_INPUT_STREAM_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_INPUT_STREAM
 (
	`g_öput_°ªam_gë_ty≥
 ())

	)

35 
	#G_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_INPUT_STREAM
, 
GI≈utSåóm
))

	)

36 
	#G_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_INPUT_STREAM
, 
GI≈utSåómCœss
))

	)

37 
	#G_IS_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_INPUT_STREAM
))

	)

38 
	#G_IS_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_INPUT_STREAM
))

	)

39 
	#G_INPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_INPUT_STREAM
, 
GI≈utSåómCœss
))

	)

46 
_GI≈utSåómCœss
 
	tGI≈utSåómCœss
;

47 
_GI≈utSåómPriv©e
 
	tGI≈utSåómPriv©e
;

49 
	s_GI≈utSåóm


51 
GObje˘
 
	m∑ª¡_ö°™˚
;

54 
GI≈utSåómPriv©e
 *
	m¥iv
;

57 
	s_GI≈utSåómCœss


59 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

63 
gssize
 (* 
ªad_‚
Ë(
GI≈utSåóm
 *
	m°ªam
,

64 *
	mbuf„r
,

65 
gsize
 
	mcou¡
,

66 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

67 
GEº‹
 **
	mîr‹
);

68 
gssize
 (* 
skù
Ë(
GI≈utSåóm
 *
	m°ªam
,

69 
gsize
 
	mcou¡
,

70 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

71 
GEº‹
 **
	mîr‹
);

72 
gboﬁón
 (* 
˛o£_‚
Ë(
GI≈utSåóm
 *
	m°ªam
,

73 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

74 
GEº‹
 **
	mîr‹
);

77 (* 
	mªad_async
Ë(
GI≈utSåóm
 *
	m°ªam
,

78 *
	mbuf„r
,

79 
gsize
 
	mcou¡
,

80 
	mio_¥i‹ôy
,

81 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

82 
GAsyncRódyCÆlback
 
	mˇŒback
,

83 
gpoöãr
 
	mu£r_d©a
);

84 
gssize
 (* 
ªad_föish
Ë(
GI≈utSåóm
 *
	m°ªam
,

85 
GAsyncResu…
 *
	mªsu…
,

86 
GEº‹
 **
	mîr‹
);

87 (* 
	mskù_async
Ë(
GI≈utSåóm
 *
	m°ªam
,

88 
gsize
 
	mcou¡
,

89 
	mio_¥i‹ôy
,

90 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

91 
GAsyncRódyCÆlback
 
	mˇŒback
,

92 
gpoöãr
 
	mu£r_d©a
);

93 
gssize
 (* 
skù_föish
Ë(
GI≈utSåóm
 *
	m°ªam
,

94 
GAsyncResu…
 *
	mªsu…
,

95 
GEº‹
 **
	mîr‹
);

96 (* 
	m˛o£_async
Ë(
GI≈utSåóm
 *
	m°ªam
,

97 
	mio_¥i‹ôy
,

98 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

99 
GAsyncRódyCÆlback
 
	mˇŒback
,

100 
gpoöãr
 
	mu£r_d©a
);

101 
gboﬁón
 (* 
˛o£_föish
Ë(
GI≈utSåóm
 *
	m°ªam
,

102 
GAsyncResu…
 *
	mªsu…
,

103 
GEº‹
 **
	mîr‹
);

107 (*
	m_g_ª£rved1
) ();

108 (*
	m_g_ª£rved2
) ();

109 (*
	m_g_ª£rved3
) ();

110 (*
	m_g_ª£rved4
) ();

111 (*
	m_g_ª£rved5
) ();

114 
GTy≥
 
	$g_öput_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

116 
gssize
 
	`g_öput_°ªam_ªad
 (
GI≈utSåóm
 *
°ªam
,

117 *
buf„r
,

118 
gsize
 
cou¡
,

119 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

120 
GEº‹
 **
îr‹
);

121 
gboﬁón
 
	`g_öput_°ªam_ªad_Æl
 (
GI≈utSåóm
 *
°ªam
,

122 *
buf„r
,

123 
gsize
 
cou¡
,

124 
gsize
 *
byãs_ªad
,

125 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

126 
GEº‹
 **
îr‹
);

127 
gssize
 
	`g_öput_°ªam_skù
 (
GI≈utSåóm
 *
°ªam
,

128 
gsize
 
cou¡
,

129 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

130 
GEº‹
 **
îr‹
);

131 
gboﬁón
 
	`g_öput_°ªam_˛o£
 (
GI≈utSåóm
 *
°ªam
,

132 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

133 
GEº‹
 **
îr‹
);

134 
	`g_öput_°ªam_ªad_async
 (
GI≈utSåóm
 *
°ªam
,

135 *
buf„r
,

136 
gsize
 
cou¡
,

137 
io_¥i‹ôy
,

138 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

139 
GAsyncRódyCÆlback
 
ˇŒback
,

140 
gpoöãr
 
u£r_d©a
);

141 
gssize
 
	`g_öput_°ªam_ªad_föish
 (
GI≈utSåóm
 *
°ªam
,

142 
GAsyncResu…
 *
ªsu…
,

143 
GEº‹
 **
îr‹
);

144 
	`g_öput_°ªam_skù_async
 (
GI≈utSåóm
 *
°ªam
,

145 
gsize
 
cou¡
,

146 
io_¥i‹ôy
,

147 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

148 
GAsyncRódyCÆlback
 
ˇŒback
,

149 
gpoöãr
 
u£r_d©a
);

150 
gssize
 
	`g_öput_°ªam_skù_föish
 (
GI≈utSåóm
 *
°ªam
,

151 
GAsyncResu…
 *
ªsu…
,

152 
GEº‹
 **
îr‹
);

153 
	`g_öput_°ªam_˛o£_async
 (
GI≈utSåóm
 *
°ªam
,

154 
io_¥i‹ôy
,

155 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

156 
GAsyncRódyCÆlback
 
ˇŒback
,

157 
gpoöãr
 
u£r_d©a
);

158 
gboﬁón
 
	`g_öput_°ªam_˛o£_föish
 (
GI≈utSåóm
 *
°ªam
,

159 
GAsyncResu…
 *
ªsu…
,

160 
GEº‹
 **
îr‹
);

164 
gboﬁón
 
	`g_öput_°ªam_is_˛o£d
 (
GI≈utSåóm
 *
°ªam
);

165 
gboﬁón
 
	`g_öput_°ªam_has_≥ndög
 (
GI≈utSåóm
 *
°ªam
);

166 
gboﬁón
 
	`g_öput_°ªam_£t_≥ndög
 (
GI≈utSåóm
 *
°ªam
,

167 
GEº‹
 **
îr‹
);

168 
	`g_öput_°ªam_˛ór_≥ndög
 (
GI≈utSåóm
 *
°ªam
);

170 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gioenums.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__GIO_ENUMS_H__


28 
	#__GIO_ENUMS_H__


	)

30 
	~<glib-obje˘.h
>

32 
G_BEGIN_DECLS


44 
	mG_APP_INFO_CREATE_NONE
 = 0,

45 
	mG_APP_INFO_CREATE_NEEDS_TERMINAL
 = (1 << 0),

46 
	mG_APP_INFO_CREATE_SUPPORTS_URIS
 = (1 << 1)

47 } 
	tGAµInfoCª©eFœgs
;

61 
	mG_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN
,

62 
	mG_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN
,

63 
	mG_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN


64 } 
	tGD©aSåómByãOrdî
;

77 
	mG_DATA_STREAM_NEWLINE_TYPE_LF
,

78 
	mG_DATA_STREAM_NEWLINE_TYPE_CR
,

79 
	mG_DATA_STREAM_NEWLINE_TYPE_CR_LF
,

80 
	mG_DATA_STREAM_NEWLINE_TYPE_ANY


81 } 
	tGD©aSåómNewlöeTy≥
;

99 
	mG_FILE_ATTRIBUTE_TYPE_INVALID
 = 0,

100 
	mG_FILE_ATTRIBUTE_TYPE_STRING
,

101 
	mG_FILE_ATTRIBUTE_TYPE_BYTE_STRING
,

102 
	mG_FILE_ATTRIBUTE_TYPE_BOOLEAN
,

103 
	mG_FILE_ATTRIBUTE_TYPE_UINT32
,

104 
	mG_FILE_ATTRIBUTE_TYPE_INT32
,

105 
	mG_FILE_ATTRIBUTE_TYPE_UINT64
,

106 
	mG_FILE_ATTRIBUTE_TYPE_INT64
,

107 
	mG_FILE_ATTRIBUTE_TYPE_OBJECT


108 } 
	tGFûeAâribuãTy≥
;

120 
	mG_FILE_ATTRIBUTE_INFO_NONE
 = 0,

121 
	mG_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE
 = (1 << 0),

122 
	mG_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED
 = (1 << 1)

123 } 
	tGFûeAâribuãInfoFœgs
;

135 
	mG_FILE_ATTRIBUTE_STATUS_UNSET
 = 0,

136 
	mG_FILE_ATTRIBUTE_STATUS_SET
,

137 
	mG_FILE_ATTRIBUTE_STATUS_ERROR_SETTING


138 } 
	tGFûeAâribuãSètus
;

149 
	mG_FILE_QUERY_INFO_NONE
 = 0,

150 
	mG_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS
 = (1 << 0)

151 } 
	tGFûeQuîyInfoFœgs
;

171 
	mG_FILE_CREATE_NONE
 = 0,

172 
	mG_FILE_CREATE_PRIVATE
 = (1 << 0),

173 
	mG_FILE_CREATE_REPLACE_DESTINATION
 = (1 << 1)

174 } 
	tGFûeCª©eFœgs
;

184 
	mG_MOUNT_MOUNT_NONE
 = 0

185 } 
	tGMou¡Mou¡Fœgs
;

197 
	mG_MOUNT_UNMOUNT_NONE
 = 0,

198 
	mG_MOUNT_UNMOUNT_FORCE
 = (1 << 0)

199 } 
	tGMou¡Unmou¡Fœgs
;

215 
	mG_FILE_COPY_NONE
 = 0,

216 
	mG_FILE_COPY_OVERWRITE
 = (1 << 0),

217 
	mG_FILE_COPY_BACKUP
 = (1 << 1),

218 
	mG_FILE_COPY_NOFOLLOW_SYMLINKS
 = (1 << 2),

219 
	mG_FILE_COPY_ALL_METADATA
 = (1 << 3),

220 
	mG_FILE_COPY_NO_FALLBACK_FOR_MOVE
 = (1 << 4),

221 
	mG_FILE_COPY_TARGET_DEFAULT_PERMS
 = (1 << 5)

222 } 
	tGFûeC›yFœgs
;

233 
	mG_FILE_MONITOR_NONE
 = 0,

234 
	mG_FILE_MONITOR_WATCH_MOUNTS
 = (1 << 0)

235 } 
	tGFûeM⁄ô‹Fœgs
;

253 
	mG_FILE_TYPE_UNKNOWN
 = 0,

254 
	mG_FILE_TYPE_REGULAR
,

255 
	mG_FILE_TYPE_DIRECTORY
,

256 
	mG_FILE_TYPE_SYMBOLIC_LINK
,

257 
	mG_FILE_TYPE_SPECIAL
,

258 
	mG_FILE_TYPE_SHORTCUT
,

259 
	mG_FILE_TYPE_MOUNTABLE


260 } 
	tGFûeTy≥
;

274 
	mG_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS
 = 0,

275 
	mG_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL
,

276 
	mG_FILESYSTEM_PREVIEW_TYPE_NEVER


277 } 
	tGFûesy°emPªvõwTy≥
;

293 
	mG_FILE_MONITOR_EVENT_CHANGED
,

294 
	mG_FILE_MONITOR_EVENT_CHANGES_DONE_HINT
,

295 
	mG_FILE_MONITOR_EVENT_DELETED
,

296 
	mG_FILE_MONITOR_EVENT_CREATED
,

297 
	mG_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED
,

298 
	mG_FILE_MONITOR_EVENT_PRE_UNMOUNT
,

299 
	mG_FILE_MONITOR_EVENT_UNMOUNTED


300 } 
	tGFûeM⁄ô‹Evít
;

350 
	mG_IO_ERROR_FAILED
,

351 
	mG_IO_ERROR_NOT_FOUND
,

352 
	mG_IO_ERROR_EXISTS
,

353 
	mG_IO_ERROR_IS_DIRECTORY
,

354 
	mG_IO_ERROR_NOT_DIRECTORY
,

355 
	mG_IO_ERROR_NOT_EMPTY
,

356 
	mG_IO_ERROR_NOT_REGULAR_FILE
,

357 
	mG_IO_ERROR_NOT_SYMBOLIC_LINK
,

358 
	mG_IO_ERROR_NOT_MOUNTABLE_FILE
,

359 
	mG_IO_ERROR_FILENAME_TOO_LONG
,

360 
	mG_IO_ERROR_INVALID_FILENAME
,

361 
	mG_IO_ERROR_TOO_MANY_LINKS
,

362 
	mG_IO_ERROR_NO_SPACE
,

363 
	mG_IO_ERROR_INVALID_ARGUMENT
,

364 
	mG_IO_ERROR_PERMISSION_DENIED
,

365 
	mG_IO_ERROR_NOT_SUPPORTED
,

366 
	mG_IO_ERROR_NOT_MOUNTED
,

367 
	mG_IO_ERROR_ALREADY_MOUNTED
,

368 
	mG_IO_ERROR_CLOSED
,

369 
	mG_IO_ERROR_CANCELLED
,

370 
	mG_IO_ERROR_PENDING
,

371 
	mG_IO_ERROR_READ_ONLY
,

372 
	mG_IO_ERROR_CANT_CREATE_BACKUP
,

373 
	mG_IO_ERROR_WRONG_ETAG
,

374 
	mG_IO_ERROR_TIMED_OUT
,

375 
	mG_IO_ERROR_WOULD_RECURSE
,

376 
	mG_IO_ERROR_BUSY
,

377 
	mG_IO_ERROR_WOULD_BLOCK
,

378 
	mG_IO_ERROR_HOST_NOT_FOUND
,

379 
	mG_IO_ERROR_WOULD_MERGE
,

380 
	mG_IO_ERROR_FAILED_HANDLED
,

381 
	mG_IO_ERROR_TOO_MANY_OPEN_FILES


382 } 
	tGIOEº‹Enum
;

398 
	mG_ASK_PASSWORD_NEED_PASSWORD
 = (1 << 0),

399 
	mG_ASK_PASSWORD_NEED_USERNAME
 = (1 << 1),

400 
	mG_ASK_PASSWORD_NEED_DOMAIN
 = (1 << 2),

401 
	mG_ASK_PASSWORD_SAVING_SUPPORTED
 = (1 << 3),

402 
	mG_ASK_PASSWORD_ANONYMOUS_SUPPORTED
 = (1 << 4)

403 } 
	tGAskPassw‹dFœgs
;

418 
	mG_PASSWORD_SAVE_NEVER
,

419 
	mG_PASSWORD_SAVE_FOR_SESSION
,

420 
	mG_PASSWORD_SAVE_PERMANENTLY


421 } 
	tGPassw‹dSave
;

437 
	mG_MOUNT_OPERATION_HANDLED
,

438 
	mG_MOUNT_OPERATION_ABORTED
,

439 
	mG_MOUNT_OPERATION_UNHANDLED


440 } 
	tGMou¡O≥øti⁄Resu…
;

454 
	mG_OUTPUT_STREAM_SPLICE_NONE
 = 0,

455 
	mG_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE
 = (1 << 0),

456 
	mG_OUTPUT_STREAM_SPLICE_CLOSE_TARGET
 = (1 << 1)

457 } 
	tGOuçutSåómS∂i˚Fœgs
;

473 
	mG_EMBLEM_ORIGIN_UNKNOWN
,

474 
	mG_EMBLEM_ORIGIN_DEVICE
,

475 
	mG_EMBLEM_ORIGIN_LIVEMETADATA
,

476 
	mG_EMBLEM_ORIGIN_TAG


477 } 
	tGEmbÀmOrigö
;

480 
	gG_END_DECLS


	@/usr/include/glib-2.0/gio/gioenumtypes.h

4 #i‚de‡
__GIO_ENUM_TYPES_H__


5 
	#__GIO_ENUM_TYPES_H__


	)

7 
	~<glib-obje˘.h
>

9 
G_BEGIN_DECLS


12 
GTy≥
 
	$g_≠p_öfo_¸óã_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

13 
	#G_TYPE_APP_INFO_CREATE_FLAGS
 (
	`g_≠p_öfo_¸óã_Êags_gë_ty≥
 ())

	)

14 
GTy≥
 
	$g_d©a_°ªam_byã_‹dî_gë_ty≥
 (Ë
G_GNUC_CONST
;

15 
	#G_TYPE_DATA_STREAM_BYTE_ORDER
 (
	`g_d©a_°ªam_byã_‹dî_gë_ty≥
 ())

	)

16 
GTy≥
 
	$g_d©a_°ªam_√wlöe_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

17 
	#G_TYPE_DATA_STREAM_NEWLINE_TYPE
 (
	`g_d©a_°ªam_√wlöe_ty≥_gë_ty≥
 ())

	)

18 
GTy≥
 
	$g_fûe_©åibuã_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

19 
	#G_TYPE_FILE_ATTRIBUTE_TYPE
 (
	`g_fûe_©åibuã_ty≥_gë_ty≥
 ())

	)

20 
GTy≥
 
	$g_fûe_©åibuã_öfo_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

21 
	#G_TYPE_FILE_ATTRIBUTE_INFO_FLAGS
 (
	`g_fûe_©åibuã_öfo_Êags_gë_ty≥
 ())

	)

22 
GTy≥
 
	$g_fûe_©åibuã_°©us_gë_ty≥
 (Ë
G_GNUC_CONST
;

23 
	#G_TYPE_FILE_ATTRIBUTE_STATUS
 (
	`g_fûe_©åibuã_°©us_gë_ty≥
 ())

	)

24 
GTy≥
 
	$g_fûe_quîy_öfo_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

25 
	#G_TYPE_FILE_QUERY_INFO_FLAGS
 (
	`g_fûe_quîy_öfo_Êags_gë_ty≥
 ())

	)

26 
GTy≥
 
	$g_fûe_¸óã_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

27 
	#G_TYPE_FILE_CREATE_FLAGS
 (
	`g_fûe_¸óã_Êags_gë_ty≥
 ())

	)

28 
GTy≥
 
	$g_mou¡_mou¡_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

29 
	#G_TYPE_MOUNT_MOUNT_FLAGS
 (
	`g_mou¡_mou¡_Êags_gë_ty≥
 ())

	)

30 
GTy≥
 
	$g_mou¡_unmou¡_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

31 
	#G_TYPE_MOUNT_UNMOUNT_FLAGS
 (
	`g_mou¡_unmou¡_Êags_gë_ty≥
 ())

	)

32 
GTy≥
 
	$g_fûe_c›y_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

33 
	#G_TYPE_FILE_COPY_FLAGS
 (
	`g_fûe_c›y_Êags_gë_ty≥
 ())

	)

34 
GTy≥
 
	$g_fûe_m⁄ô‹_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

35 
	#G_TYPE_FILE_MONITOR_FLAGS
 (
	`g_fûe_m⁄ô‹_Êags_gë_ty≥
 ())

	)

36 
GTy≥
 
	$g_fûe_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

37 
	#G_TYPE_FILE_TYPE
 (
	`g_fûe_ty≥_gë_ty≥
 ())

	)

38 
GTy≥
 
	$g_fûesy°em_¥evõw_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

39 
	#G_TYPE_FILESYSTEM_PREVIEW_TYPE
 (
	`g_fûesy°em_¥evõw_ty≥_gë_ty≥
 ())

	)

40 
GTy≥
 
	$g_fûe_m⁄ô‹_evít_gë_ty≥
 (Ë
G_GNUC_CONST
;

41 
	#G_TYPE_FILE_MONITOR_EVENT
 (
	`g_fûe_m⁄ô‹_evít_gë_ty≥
 ())

	)

42 
GTy≥
 
	$g_io_îr‹_íum_gë_ty≥
 (Ë
G_GNUC_CONST
;

43 
	#G_TYPE_IO_ERROR_ENUM
 (
	`g_io_îr‹_íum_gë_ty≥
 ())

	)

44 
GTy≥
 
	$g_ask_∑ssw‹d_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

45 
	#G_TYPE_ASK_PASSWORD_FLAGS
 (
	`g_ask_∑ssw‹d_Êags_gë_ty≥
 ())

	)

46 
GTy≥
 
	$g_∑ssw‹d_ßve_gë_ty≥
 (Ë
G_GNUC_CONST
;

47 
	#G_TYPE_PASSWORD_SAVE
 (
	`g_∑ssw‹d_ßve_gë_ty≥
 ())

	)

48 
GTy≥
 
	$g_mou¡_›î©i⁄_ªsu…_gë_ty≥
 (Ë
G_GNUC_CONST
;

49 
	#G_TYPE_MOUNT_OPERATION_RESULT
 (
	`g_mou¡_›î©i⁄_ªsu…_gë_ty≥
 ())

	)

50 
GTy≥
 
	$g_ouçut_°ªam_•li˚_Êags_gë_ty≥
 (Ë
G_GNUC_CONST
;

51 
	#G_TYPE_OUTPUT_STREAM_SPLICE_FLAGS
 (
	`g_ouçut_°ªam_•li˚_Êags_gë_ty≥
 ())

	)

52 
GTy≥
 
	$g_embÀm_‹igö_gë_ty≥
 (Ë
G_GNUC_CONST
;

53 
	#G_TYPE_EMBLEM_ORIGIN
 (
	`g_embÀm_‹igö_gë_ty≥
 ())

	)

54 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gioerror.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_IO_ERROR_H__


28 
	#__G_IO_ERROR_H__


	)

30 
	~<glib.h
>

31 
	~<gio/gi€nums.h
>

33 
	gG_BEGIN_DECLS


41 
	#G_IO_ERROR
 
	`g_io_îr‹_qu¨k
()

	)

43 
GQu¨k
 
g_io_îr‹_qu¨k
 ();

44 
GIOEº‹Enum
 
g_io_îr‹_‰om_î∫o
 (
göt
 
îr_no
);

46 
	gG_END_DECLS


	@/usr/include/glib-2.0/gio/giomodule.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_IO_MODULE_H__


28 
	#__G_IO_MODULE_H__


	)

30 
	~<gio/giŸy≥s.h
>

31 
	~<gmoduÀ.h
>

33 
	gG_BEGIN_DECLS


35 
	#G_IO_TYPE_MODULE
 (
	`g_io_moduÀ_gë_ty≥
 ())

	)

36 
	#G_IO_MODULE
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_IO_TYPE_MODULE
, 
GIOModuÀ
))

	)

37 
	#G_IO_MODULE_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_IO_TYPE_MODULE
, 
GIOModuÀCœss
))

	)

38 
	#G_IO_IS_MODULE
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_IO_TYPE_MODULE
))

	)

39 
	#G_IO_IS_MODULE_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_IO_TYPE_MODULE
))

	)

40 
	#G_IO_MODULE_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_IO_TYPE_MODULE
, 
GIOModuÀCœss
))

	)

47 
_GIOModuÀCœss
 
	tGIOModuÀCœss
;

49 
GTy≥
 
	$g_io_moduÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

50 
GIOModuÀ
 *
	`g_io_moduÀ_√w
 (c⁄° 
gch¨
 *
fûíame
);

52 
GLi°
 *
	`g_io_moduÀs_lﬂd_Æl_ö_dúe˘‹y
 (c⁄° 
gch¨
 *
dú«me
);

54 
GIOExãnsi⁄Poöt
 *
	`g_io_exãnsi⁄_poöt_ªgi°î
 (c⁄° *
«me
);

55 
GIOExãnsi⁄Poöt
 *
	`g_io_exãnsi⁄_poöt_lookup
 (c⁄° *
«me
);

56 
	`g_io_exãnsi⁄_poöt_£t_ªquúed_ty≥
 (
GIOExãnsi⁄Poöt
 *
exãnsi⁄_poöt
,

57 
GTy≥
 
ty≥
);

58 
GTy≥
 
	`g_io_exãnsi⁄_poöt_gë_ªquúed_ty≥
 (
GIOExãnsi⁄Poöt
 *
exãnsi⁄_poöt
);

59 
GLi°
 *
	`g_io_exãnsi⁄_poöt_gë_exãnsi⁄s
 (
GIOExãnsi⁄Poöt
 *
exãnsi⁄_poöt
);

60 
GIOExãnsi⁄
 * 
	`g_io_exãnsi⁄_poöt_gë_exãnsi⁄_by_«me
 (
GIOExãnsi⁄Poöt
 *
exãnsi⁄_poöt
,

61 c⁄° *
«me
);

62 
GIOExãnsi⁄
 * 
	`g_io_exãnsi⁄_poöt_im∂emít
 (c⁄° *
exãnsi⁄_poöt_«me
,

63 
GTy≥
 
ty≥
,

64 c⁄° *
exãnsi⁄_«me
,

65 
göt
 
¥i‹ôy
);

67 
GTy≥
 
	`g_io_exãnsi⁄_gë_ty≥
 (
GIOExãnsi⁄
 *
exãnsi⁄
);

68 c⁄° * 
	`g_io_exãnsi⁄_gë_«me
 (
GIOExãnsi⁄
 *
exãnsi⁄
);

69 
göt
 
	`g_io_exãnsi⁄_gë_¥i‹ôy
 (
GIOExãnsi⁄
 *
exãnsi⁄
);

70 
GTy≥Cœss
* 
	`g_io_exãnsi⁄_ªf_˛ass
 (
GIOExãnsi⁄
 *
exãnsi⁄
);

83 
	`g_io_moduÀ_lﬂd
 (
GIOModuÀ
 *
moduÀ
);

93 
	`g_io_moduÀ_u∆ﬂd
 (
GIOModuÀ
 *
moduÀ
);

95 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gioscheduler.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_IO_SCHEDULER_H__


28 
	#__G_IO_SCHEDULER_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
G_BEGIN_DECLS


35 
g_io_scheduÀr_push_job
 (
GIOScheduÀrJobFunc
 
job_func
,

36 
gpoöãr
 
u£r_d©a
,

37 
GDe°royNŸify
 
nŸify
,

38 
göt
 
io_¥i‹ôy
,

39 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

40 
g_io_scheduÀr_ˇn˚l_Æl_jobs
 ();

41 
gboﬁón
 
g_io_scheduÀr_job_£nd_to_maölo›
 (
GIOScheduÀrJob
 *
job
,

42 
GSour˚Func
 
func
,

43 
gpoöãr
 
u£r_d©a
,

44 
GDe°royNŸify
 
nŸify
);

45 
g_io_scheduÀr_job_£nd_to_maölo›_async
 (
GIOScheduÀrJob
 *
job
,

46 
GSour˚Func
 
func
,

47 
gpoöãr
 
u£r_d©a
,

48 
GDe°royNŸify
 
nŸify
);

50 
	gG_END_DECLS


	@/usr/include/glib-2.0/gio/giotypes.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__GIO_TYPES_H__


28 
	#__GIO_TYPES_H__


	)

30 
	~<gio/gi€nums.h
>

32 
G_BEGIN_DECLS


34 
_GAµLaunchC⁄ãxt
 
	tGAµLaunchC⁄ãxt
;

35 
_GAµInfo
 
	tGAµInfo
;

36 
_GAsyncResu…
 
	tGAsyncResu…
;

37 
_GBuf„ªdI≈utSåóm
 
	tGBuf„ªdI≈utSåóm
;

38 
_GBuf„ªdOuçutSåóm
 
	tGBuf„ªdOuçutSåóm
;

39 
_GC™˚ŒabÀ
 
	tGC™˚ŒabÀ
;

40 
_GD©aI≈utSåóm
 
	tGD©aI≈utSåóm
;

47 
_GDrive
 
	tGDrive
;

48 
_GFûeEnumî©‹
 
	tGFûeEnumî©‹
;

49 
_GFûeM⁄ô‹
 
	tGFûeM⁄ô‹
;

50 
_GFûãrI≈utSåóm
 
	tGFûãrI≈utSåóm
;

51 
_GFûãrOuçutSåóm
 
	tGFûãrOuçutSåóm
;

60 
_GFûe
 
	tGFûe
;

61 
_GFûeInfo
 
	tGFûeInfo
;

68 
_GFûeAâribuãM©chî
 
	tGFûeAâribuãM©chî
;

69 
_GFûeAâribuãInfo
 
	tGFûeAâribuãInfo
;

70 
_GFûeAâribuãInfoLi°
 
	tGFûeAâribuãInfoLi°
;

71 
_GFûeI≈utSåóm
 
	tGFûeI≈utSåóm
;

72 
_GFûeOuçutSåóm
 
	tGFûeOuçutSåóm
;

73 
_GFûeIc⁄
 
	tGFûeIc⁄
;

74 
_GFûíameCom∂ëî
 
	tGFûíameCom∂ëî
;

77 
_GIc⁄
 
	tGIc⁄
;

78 
_GI≈utSåóm
 
	tGI≈utSåóm
;

79 
_GIOModuÀ
 
	tGIOModuÀ
;

80 
_GIOExãnsi⁄Poöt
 
	tGIOExãnsi⁄Poöt
;

81 
_GIOExãnsi⁄
 
	tGIOExãnsi⁄
;

88 
_GIOScheduÀrJob
 
	tGIOScheduÀrJob
;

89 
_GLﬂdabÀIc⁄
 
	tGLﬂdabÀIc⁄
;

90 
_GMem‹yI≈utSåóm
 
	tGMem‹yI≈utSåóm
;

91 
_GMem‹yOuçutSåóm
 
	tGMem‹yOuçutSåóm
;

98 
_GMou¡
 
	tGMou¡
;

99 
_GMou¡O≥øti⁄
 
	tGMou¡O≥øti⁄
;

100 
_GOuçutSåóm
 
	tGOuçutSåóm
;

101 
_GSìkabÀ
 
	tGSìkabÀ
;

102 
_GSim∂eAsyncResu…
 
	tGSim∂eAsyncResu…
;

103 
_GThemedIc⁄
 
	tGThemedIc⁄
;

104 
_GVfs
 
	tGVfs
;

111 
_GVﬁume
 
	tGVﬁume
;

112 
_GVﬁumeM⁄ô‹
 
	tGVﬁumeM⁄ô‹
;

123 (*
	tGAsyncRódyCÆlback
Ë(
	tGObje˘
 *
	tsour˚_obje˘
,

124 
	tGAsyncResu…
 *
	tªs
,

125 
	tgpoöãr
 
	tu£r_d©a
);

137 (*
	tGFûeProgªssCÆlback
Ë(
	tgoff£t
 
	tcuºít_num_byãs
,

138 
	tgoff£t
 
	ttŸÆ_num_byãs
,

139 
	tgpoöãr
 
	tu£r_d©a
);

154 
	$gboﬁón
 (* 
	tGFûeRódM‹eCÆlback
Ë(c⁄° *
	tfûe_c⁄ã¡s
,

155 
	tgoff£t
 
	tfûe_size
,

156 
	tgpoöãr
 
	tˇŒback_d©a
);

177 
	$gboﬁón
 (*
	tGIOScheduÀrJobFunc
Ë(
	tGIOScheduÀrJob
 *
	tjob
,

178 
	tGC™˚ŒabÀ
 *
	tˇn˚ŒabÀ
,

179 
	tgpoöãr
 
	tu£r_d©a
);

190 (*
	tGSim∂eAsyncThªadFunc
Ë(
	tGSim∂eAsyncResu…
 *
	tªs
,

191 
	tGObje˘
 *
	tobje˘
,

192 
	tGC™˚ŒabÀ
 *
	tˇn˚ŒabÀ
);

194 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gloadableicon.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_LOADABLE_ICON_H__


28 
	#__G_LOADABLE_ICON_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_LOADABLE_ICON
 (
	`g_lﬂdabÀ_ic⁄_gë_ty≥
 ())

	)

35 
	#G_LOADABLE_ICON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_LOADABLE_ICON
, 
GLﬂdabÀIc⁄
))

	)

36 
	#G_IS_LOADABLE_ICON
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_LOADABLE_ICON
))

	)

37 
	#G_LOADABLE_ICON_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_LOADABLE_ICON
, 
GLﬂdabÀIc⁄IÁ˚
))

	)

45 
_GLﬂdabÀIc⁄IÁ˚
 
	tGLﬂdabÀIc⁄IÁ˚
;

56 
	s_GLﬂdabÀIc⁄IÁ˚


58 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

62 
	mGI≈utSåóm
 * (* 
	mlﬂd
Ë(
GLﬂdabÀIc⁄
 *
	mic⁄
,

63 
	msize
,

64 **
	mty≥
,

65 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

66 
GEº‹
 **
	mîr‹
);

67 (* 
	mlﬂd_async
Ë(
GLﬂdabÀIc⁄
 *
	mic⁄
,

68 
	msize
,

69 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

70 
GAsyncRódyCÆlback
 
	mˇŒback
,

71 
gpoöãr
 
	mu£r_d©a
);

72 
	mGI≈utSåóm
 * (* 
	mlﬂd_föish
Ë(
GLﬂdabÀIc⁄
 *
	mic⁄
,

73 
GAsyncResu…
 *
	mªs
,

74 **
	mty≥
,

75 
GEº‹
 **
	mîr‹
);

78 
GTy≥
 
	$g_lﬂdabÀ_ic⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

80 
GI≈utSåóm
 *
	`g_lﬂdabÀ_ic⁄_lﬂd
 (
GLﬂdabÀIc⁄
 *
ic⁄
,

81 
size
,

82 **
ty≥
,

83 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

84 
GEº‹
 **
îr‹
);

85 
	`g_lﬂdabÀ_ic⁄_lﬂd_async
 (
GLﬂdabÀIc⁄
 *
ic⁄
,

86 
size
,

87 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

88 
GAsyncRódyCÆlback
 
ˇŒback
,

89 
gpoöãr
 
u£r_d©a
);

90 
GI≈utSåóm
 *
	`g_lﬂdabÀ_ic⁄_lﬂd_föish
 (
GLﬂdabÀIc⁄
 *
ic⁄
,

91 
GAsyncResu…
 *
ªs
,

92 **
ty≥
,

93 
GEº‹
 **
îr‹
);

95 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gmemoryinputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_MEMORY_INPUT_STREAM_H__


28 
	#__G_MEMORY_INPUT_STREAM_H__


	)

30 
	~<gio/göput°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_MEMORY_INPUT_STREAM
 (
	`g_mem‹y_öput_°ªam_gë_ty≥
 ())

	)

35 
	#G_MEMORY_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_MEMORY_INPUT_STREAM
, 
GMem‹yI≈utSåóm
))

	)

36 
	#G_MEMORY_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_MEMORY_INPUT_STREAM
, 
GMem‹yI≈utSåómCœss
))

	)

37 
	#G_IS_MEMORY_INPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_MEMORY_INPUT_STREAM
))

	)

38 
	#G_IS_MEMORY_INPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_MEMORY_INPUT_STREAM
))

	)

39 
	#G_MEMORY_INPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_MEMORY_INPUT_STREAM
, 
GMem‹yI≈utSåómCœss
))

	)

46 
_GMem‹yI≈utSåómCœss
 
	tGMem‹yI≈utSåómCœss
;

47 
_GMem‹yI≈utSåómPriv©e
 
	tGMem‹yI≈utSåómPriv©e
;

49 
	s_GMem‹yI≈utSåóm


51 
GI≈utSåóm
 
	m∑ª¡_ö°™˚
;

54 
GMem‹yI≈utSåómPriv©e
 *
	m¥iv
;

57 
	s_GMem‹yI≈utSåómCœss


59 
GI≈utSåómCœss
 
	m∑ª¡_˛ass
;

62 (*
	m_g_ª£rved1
) ();

63 (*
	m_g_ª£rved2
) ();

64 (*
	m_g_ª£rved3
) ();

65 (*
	m_g_ª£rved4
) ();

66 (*
	m_g_ª£rved5
) ();

70 
GTy≥
 
	$g_mem‹y_öput_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

71 
GI≈utSåóm
 * 
	`g_mem‹y_öput_°ªam_√w
 ();

72 
GI≈utSåóm
 * 
	`g_mem‹y_öput_°ªam_√w_‰om_d©a
 (c⁄° *
d©a
,

73 
gssize
 
Àn
,

74 
GDe°royNŸify
 
de°roy
);

75 
	`g_mem‹y_öput_°ªam_add_d©a
 (
GMem‹yI≈utSåóm
 *
°ªam
,

76 c⁄° *
d©a
,

77 
gssize
 
Àn
,

78 
GDe°royNŸify
 
de°roy
);

80 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gmemoryoutputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_MEMORY_OUTPUT_STREAM_H__


28 
	#__G_MEMORY_OUTPUT_STREAM_H__


	)

30 
	~<gio/gouçut°ªam.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_MEMORY_OUTPUT_STREAM
 (
	`g_mem‹y_ouçut_°ªam_gë_ty≥
 ())

	)

35 
	#G_MEMORY_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_MEMORY_OUTPUT_STREAM
, 
GMem‹yOuçutSåóm
))

	)

36 
	#G_MEMORY_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_MEMORY_OUTPUT_STREAM
, 
GMem‹yOuçutSåómCœss
))

	)

37 
	#G_IS_MEMORY_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_MEMORY_OUTPUT_STREAM
))

	)

38 
	#G_IS_MEMORY_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_MEMORY_OUTPUT_STREAM
))

	)

39 
	#G_MEMORY_OUTPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_MEMORY_OUTPUT_STREAM
, 
GMem‹yOuçutSåómCœss
))

	)

46 
_GMem‹yOuçutSåómCœss
 
	tGMem‹yOuçutSåómCœss
;

47 
_GMem‹yOuçutSåómPriv©e
 
	tGMem‹yOuçutSåómPriv©e
;

49 
	s_GMem‹yOuçutSåóm


51 
GOuçutSåóm
 
	m∑ª¡_ö°™˚
;

54 
GMem‹yOuçutSåómPriv©e
 *
	m¥iv
;

57 
	s_GMem‹yOuçutSåómCœss


59 
GOuçutSåómCœss
 
	m∑ª¡_˛ass
;

63 (*
	m_g_ª£rved1
) ();

64 (*
	m_g_ª£rved2
) ();

65 (*
	m_g_ª£rved3
) ();

66 (*
	m_g_ª£rved4
) ();

67 (*
	m_g_ª£rved5
) ();

82 
	$gpoöãr
 (* 
	tGRóŒocFunc
Ë(
	tgpoöãr
 
	td©a
,

83 
	tgsize
 
	tsize
);

85 
GTy≥
 
	$g_mem‹y_ouçut_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

87 
GOuçutSåóm
 *
	`g_mem‹y_ouçut_°ªam_√w
 (
gpoöãr
 
d©a
,

88 
gsize
 
Àn
,

89 
GRóŒocFunc
 
ªÆloc_‚
,

90 
GDe°royNŸify
 
de°roy
);

91 
gpoöãr
 
	`g_mem‹y_ouçut_°ªam_gë_d©a
 (
GMem‹yOuçutSåóm
 *
o°ªam
);

92 
gsize
 
	`g_mem‹y_ouçut_°ªam_gë_size
 (
GMem‹yOuçutSåóm
 *
o°ªam
);

93 
gsize
 
	`g_mem‹y_ouçut_°ªam_gë_d©a_size
 (
GMem‹yOuçutSåóm
 *
o°ªam
);

95 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gmount.h

24 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

28 #i‚de‡
__G_MOUNT_H__


29 
	#__G_MOUNT_H__


	)

31 
	~<gio/giŸy≥s.h
>

33 
	gG_BEGIN_DECLS


35 
	#G_TYPE_MOUNT
 (
	`g_mou¡_gë_ty≥
 ())

	)

36 
	#G_MOUNT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_MOUNT
, 
GMou¡
))

	)

37 
	#G_IS_MOUNT
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_MOUNT
))

	)

38 
	#G_MOUNT_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_MOUNT
, 
GMou¡IÁ˚
))

	)

40 
_GMou¡IÁ˚
 
	tGMou¡IÁ˚
;

69 
	s_GMou¡IÁ˚


71 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

75 (* 
	mch™ged
Ë(
GMou¡
 *
	mmou¡
);

76 (* 
	munmou¡ed
Ë(
GMou¡
 *
	mmou¡
);

80 
	mGFûe
 * (* 
	mgë_roŸ
Ë(
GMou¡
 *
	mmou¡
);

81 * (* 
	mgë_«me
Ë(
GMou¡
 *
	mmou¡
);

82 
	mGIc⁄
 * (* 
	mgë_ic⁄
Ë(
GMou¡
 *
	mmou¡
);

83 * (* 
	mgë_uuid
Ë(
GMou¡
 *
	mmou¡
);

84 
	mGVﬁume
 * (* 
	mgë_vﬁume
Ë(
GMou¡
 *
	mmou¡
);

85 
	mGDrive
 * (* 
	mgë_drive
Ë(
GMou¡
 *
	mmou¡
);

86 
gboﬁón
 (* 
ˇn_unmou¡
Ë(
GMou¡
 *
	mmou¡
);

87 
gboﬁón
 (* 
ˇn_eje˘
Ë(
GMou¡
 *
	mmou¡
);

89 (* 
	munmou¡
Ë(
GMou¡
 *
	mmou¡
,

90 
GMou¡Unmou¡Fœgs
 
	mÊags
,

91 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

92 
GAsyncRódyCÆlback
 
	mˇŒback
,

93 
gpoöãr
 
	mu£r_d©a
);

94 
gboﬁón
 (* 
unmou¡_föish
Ë(
GMou¡
 *
	mmou¡
,

95 
GAsyncResu…
 *
	mªsu…
,

96 
GEº‹
 **
	mîr‹
);

98 (* 
	meje˘
Ë(
GMou¡
 *
	mmou¡
,

99 
GMou¡Unmou¡Fœgs
 
	mÊags
,

100 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

101 
GAsyncRódyCÆlback
 
	mˇŒback
,

102 
gpoöãr
 
	mu£r_d©a
);

103 
gboﬁón
 (* 
eje˘_föish
Ë(
GMou¡
 *
	mmou¡
,

104 
GAsyncResu…
 *
	mªsu…
,

105 
GEº‹
 **
	mîr‹
);

107 (* 
	mªmou¡
Ë(
GMou¡
 *
	mmou¡
,

108 
GMou¡Mou¡Fœgs
 
	mÊags
,

109 
GMou¡O≥øti⁄
 *
	mmou¡_›î©i⁄
,

110 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

111 
GAsyncRódyCÆlback
 
	mˇŒback
,

112 
gpoöãr
 
	mu£r_d©a
);

113 
gboﬁón
 (* 
ªmou¡_föish
Ë(
GMou¡
 *
	mmou¡
,

114 
GAsyncResu…
 *
	mªsu…
,

115 
GEº‹
 **
	mîr‹
);

117 (* 
	mguess_c⁄ã¡_ty≥
Ë(
GMou¡
 *
	mmou¡
,

118 
gboﬁón
 
	mf‹˚_ªsˇn
,

119 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

120 
GAsyncRódyCÆlback
 
	mˇŒback
,

121 
gpoöãr
 
	mu£r_d©a
);

122 
	mgch¨
 ** (* 
	mguess_c⁄ã¡_ty≥_föish
Ë(
GMou¡
 *
	mmou¡
,

123 
GAsyncResu…
 *
	mªsu…
,

124 
GEº‹
 **
	mîr‹
);

125 
	mgch¨
 ** (* 
	mguess_c⁄ã¡_ty≥_sync
Ë(
GMou¡
 *
	mmou¡
,

126 
gboﬁón
 
	mf‹˚_ªsˇn
,

127 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

128 
GEº‹
 **
	mîr‹
);

131 
GTy≥
 
	$g_mou¡_gë_ty≥
 (Ë
G_GNUC_CONST
;

133 
GFûe
 * 
	`g_mou¡_gë_roŸ
 (
GMou¡
 *
mou¡
);

134 * 
	`g_mou¡_gë_«me
 (
GMou¡
 *
mou¡
);

135 
GIc⁄
 * 
	`g_mou¡_gë_ic⁄
 (
GMou¡
 *
mou¡
);

136 * 
	`g_mou¡_gë_uuid
 (
GMou¡
 *
mou¡
);

137 
GVﬁume
 * 
	`g_mou¡_gë_vﬁume
 (
GMou¡
 *
mou¡
);

138 
GDrive
 * 
	`g_mou¡_gë_drive
 (
GMou¡
 *
mou¡
);

139 
gboﬁón
 
	`g_mou¡_ˇn_unmou¡
 (
GMou¡
 *
mou¡
);

140 
gboﬁón
 
	`g_mou¡_ˇn_eje˘
 (
GMou¡
 *
mou¡
);

142 
	`g_mou¡_unmou¡
 (
GMou¡
 *
mou¡
,

143 
GMou¡Unmou¡Fœgs
 
Êags
,

144 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

145 
GAsyncRódyCÆlback
 
ˇŒback
,

146 
gpoöãr
 
u£r_d©a
);

147 
gboﬁón
 
	`g_mou¡_unmou¡_föish
 (
GMou¡
 *
mou¡
,

148 
GAsyncResu…
 *
ªsu…
,

149 
GEº‹
 **
îr‹
);

151 
	`g_mou¡_eje˘
 (
GMou¡
 *
mou¡
,

152 
GMou¡Unmou¡Fœgs
 
Êags
,

153 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

154 
GAsyncRódyCÆlback
 
ˇŒback
,

155 
gpoöãr
 
u£r_d©a
);

156 
gboﬁón
 
	`g_mou¡_eje˘_föish
 (
GMou¡
 *
mou¡
,

157 
GAsyncResu…
 *
ªsu…
,

158 
GEº‹
 **
îr‹
);

160 
	`g_mou¡_ªmou¡
 (
GMou¡
 *
mou¡
,

161 
GMou¡Mou¡Fœgs
 
Êags
,

162 
GMou¡O≥øti⁄
 *
mou¡_›î©i⁄
,

163 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

164 
GAsyncRódyCÆlback
 
ˇŒback
,

165 
gpoöãr
 
u£r_d©a
);

166 
gboﬁón
 
	`g_mou¡_ªmou¡_föish
 (
GMou¡
 *
mou¡
,

167 
GAsyncResu…
 *
ªsu…
,

168 
GEº‹
 **
îr‹
);

170 
	`g_mou¡_guess_c⁄ã¡_ty≥
 (
GMou¡
 *
mou¡
,

171 
gboﬁón
 
f‹˚_ªsˇn
,

172 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

173 
GAsyncRódyCÆlback
 
ˇŒback
,

174 
gpoöãr
 
u£r_d©a
);

175 
gch¨
 ** 
	`g_mou¡_guess_c⁄ã¡_ty≥_föish
 (
GMou¡
 *
mou¡
,

176 
GAsyncResu…
 *
ªsu…
,

177 
GEº‹
 **
îr‹
);

178 
gch¨
 ** 
	`g_mou¡_guess_c⁄ã¡_ty≥_sync
 (
GMou¡
 *
mou¡
,

179 
gboﬁón
 
f‹˚_ªsˇn
,

180 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

181 
GEº‹
 **
îr‹
);

183 
gboﬁón
 
	`g_mou¡_is_shadowed
 (
GMou¡
 *
mou¡
);

184 
	`g_mou¡_shadow
 (
GMou¡
 *
mou¡
);

185 
	`g_mou¡_unshadow
 (
GMou¡
 *
mou¡
);

187 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gmountoperation.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_MOUNT_OPERATION_H__


28 
	#__G_MOUNT_OPERATION_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_MOUNT_OPERATION
 (
	`g_mou¡_›î©i⁄_gë_ty≥
 ())

	)

35 
	#G_MOUNT_OPERATION
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_MOUNT_OPERATION
, 
GMou¡O≥øti⁄
))

	)

36 
	#G_MOUNT_OPERATION_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_MOUNT_OPERATION
, 
GMou¡O≥øti⁄Cœss
))

	)

37 
	#G_IS_MOUNT_OPERATION
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_MOUNT_OPERATION
))

	)

38 
	#G_IS_MOUNT_OPERATION_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_MOUNT_OPERATION
))

	)

39 
	#G_MOUNT_OPERATION_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_MOUNT_OPERATION
, 
GMou¡O≥øti⁄Cœss
))

	)

47 
_GMou¡O≥øti⁄Cœss
 
	tGMou¡O≥øti⁄Cœss
;

48 
_GMou¡O≥øti⁄Priv©e
 
	tGMou¡O≥øti⁄Priv©e
;

50 
	s_GMou¡O≥øti⁄


52 
GObje˘
 
	m∑ª¡_ö°™˚
;

54 
GMou¡O≥øti⁄Priv©e
 *
	m¥iv
;

57 
	s_GMou¡O≥øti⁄Cœss


59 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

63 (* 
	mask_∑ssw‹d
Ë(
GMou¡O≥øti⁄
 *
	m›
,

64 c⁄° *
	mmesßge
,

65 c⁄° *
	mdeÁu…_u£r
,

66 c⁄° *
	mdeÁu…_domaö
,

67 
GAskPassw‹dFœgs
 
	mÊags
);

69 (* 
	mask_que°i⁄
Ë(
GMou¡O≥øti⁄
 *
	m›
,

70 c⁄° *
	mmesßge
,

71 c⁄° *
	mchoi˚s
[]);

73 (* 
	mª∂y
Ë(
GMou¡O≥øti⁄
 *
	m›
,

74 
GMou¡O≥øti⁄Resu…
 
	mªsu…
);

76 (* 
	mab‹ãd
Ë(
GMou¡O≥øti⁄
 *
	m›
);

80 (*
	m_g_ª£rved1
) ();

81 (*
	m_g_ª£rved2
) ();

82 (*
	m_g_ª£rved3
) ();

83 (*
	m_g_ª£rved4
) ();

84 (*
	m_g_ª£rved5
) ();

85 (*
	m_g_ª£rved6
) ();

86 (*
	m_g_ª£rved7
) ();

87 (*
	m_g_ª£rved8
) ();

88 (*
	m_g_ª£rved9
) ();

89 (*
	m_g_ª£rved10
) ();

90 (*
	m_g_ª£rved11
) ();

93 
GTy≥
 
	$g_mou¡_›î©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

94 
GMou¡O≥øti⁄
 * 
	`g_mou¡_›î©i⁄_√w
 ();

96 c⁄° * 
	`g_mou¡_›î©i⁄_gë_u£∫ame
 (
GMou¡O≥øti⁄
 *
›
);

97 
	`g_mou¡_›î©i⁄_£t_u£∫ame
 (
GMou¡O≥øti⁄
 *
›
,

98 c⁄° *
u£∫ame
);

99 c⁄° * 
	`g_mou¡_›î©i⁄_gë_∑ssw‹d
 (
GMou¡O≥øti⁄
 *
›
);

100 
	`g_mou¡_›î©i⁄_£t_∑ssw‹d
 (
GMou¡O≥øti⁄
 *
›
,

101 c⁄° *
∑ssw‹d
);

102 
gboﬁón
 
	`g_mou¡_›î©i⁄_gë_™⁄ymous
 (
GMou¡O≥øti⁄
 *
›
);

103 
	`g_mou¡_›î©i⁄_£t_™⁄ymous
 (
GMou¡O≥øti⁄
 *
›
,

104 
gboﬁón
 
™⁄ymous
);

105 c⁄° * 
	`g_mou¡_›î©i⁄_gë_domaö
 (
GMou¡O≥øti⁄
 *
›
);

106 
	`g_mou¡_›î©i⁄_£t_domaö
 (
GMou¡O≥øti⁄
 *
›
,

107 c⁄° *
domaö
);

108 
GPassw‹dSave
 
	`g_mou¡_›î©i⁄_gë_∑ssw‹d_ßve
 (
GMou¡O≥øti⁄
 *
›
);

109 
	`g_mou¡_›î©i⁄_£t_∑ssw‹d_ßve
 (
GMou¡O≥øti⁄
 *
›
,

110 
GPassw‹dSave
 
ßve
);

111 
	`g_mou¡_›î©i⁄_gë_choi˚
 (
GMou¡O≥øti⁄
 *
›
);

112 
	`g_mou¡_›î©i⁄_£t_choi˚
 (
GMou¡O≥øti⁄
 *
›
,

113 
choi˚
);

114 
	`g_mou¡_›î©i⁄_ª∂y
 (
GMou¡O≥øti⁄
 *
›
,

115 
GMou¡O≥øti⁄Resu…
 
ªsu…
);

117 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gnativevolumemonitor.h

1 #i‚de‡
__G_NATIVE_VOLUME_MONITOR_H__


2 
	#__G_NATIVE_VOLUME_MONITOR_H__


	)

4 
	~<gio/gvﬁumem⁄ô‹.h
>

6 
	gG_BEGIN_DECLS


8 
	#G_TYPE_NATIVE_VOLUME_MONITOR
 (
	`g_«tive_vﬁume_m⁄ô‹_gë_ty≥
 ())

	)

9 
	#G_NATIVE_VOLUME_MONITOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_NATIVE_VOLUME_MONITOR
, 
GN©iveVﬁumeM⁄ô‹
))

	)

10 
	#G_NATIVE_VOLUME_MONITOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_NATIVE_VOLUME_MONITOR
, 
GN©iveVﬁumeM⁄ô‹Cœss
))

	)

11 
	#G_IS_NATIVE_VOLUME_MONITOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_NATIVE_VOLUME_MONITOR
))

	)

12 
	#G_IS_NATIVE_VOLUME_MONITOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_NATIVE_VOLUME_MONITOR
))

	)

14 
	#G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME
 "gio-«tive-vﬁume-m⁄ô‹"

	)

16 
_GN©iveVﬁumeM⁄ô‹
 
	tGN©iveVﬁumeM⁄ô‹
;

17 
_GN©iveVﬁumeM⁄ô‹Cœss
 
	tGN©iveVﬁumeM⁄ô‹Cœss
;

19 
	s_GN©iveVﬁumeM⁄ô‹


21 
GVﬁumeM⁄ô‹
 
	m∑ª¡_ö°™˚
;

24 
	s_GN©iveVﬁumeM⁄ô‹Cœss


26 
GVﬁumeM⁄ô‹Cœss
 
	m∑ª¡_˛ass
;

28 
	mGMou¡
 * (* 
	mgë_mou¡_f‹_mou¡_∑th
Ë(c⁄° *
	mmou¡_∑th
,

29 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
);

32 
GTy≥
 
	$g_«tive_vﬁume_m⁄ô‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

34 
G_END_DECLS


	@/usr/include/glib-2.0/gio/goutputstream.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_OUTPUT_STREAM_H__


28 
	#__G_OUTPUT_STREAM_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_OUTPUT_STREAM
 (
	`g_ouçut_°ªam_gë_ty≥
 ())

	)

35 
	#G_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_OUTPUT_STREAM
, 
GOuçutSåóm
))

	)

36 
	#G_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_OUTPUT_STREAM
, 
GOuçutSåómCœss
))

	)

37 
	#G_IS_OUTPUT_STREAM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_OUTPUT_STREAM
))

	)

38 
	#G_IS_OUTPUT_STREAM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_OUTPUT_STREAM
))

	)

39 
	#G_OUTPUT_STREAM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_OUTPUT_STREAM
, 
GOuçutSåómCœss
))

	)

50 
_GOuçutSåómCœss
 
	tGOuçutSåómCœss
;

51 
_GOuçutSåómPriv©e
 
	tGOuçutSåómPriv©e
;

53 
	s_GOuçutSåóm


55 
GObje˘
 
	m∑ª¡_ö°™˚
;

58 
GOuçutSåómPriv©e
 *
	m¥iv
;

62 
	s_GOuçutSåómCœss


64 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

68 
gssize
 (* 
wrôe_‚
Ë(
GOuçutSåóm
 *
	m°ªam
,

69 c⁄° *
	mbuf„r
,

70 
gsize
 
	mcou¡
,

71 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

72 
GEº‹
 **
	mîr‹
);

73 
gssize
 (* 
•li˚
Ë(
GOuçutSåóm
 *
	m°ªam
,

74 
GI≈utSåóm
 *
	msour˚
,

75 
GOuçutSåómS∂i˚Fœgs
 
	mÊags
,

76 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

77 
GEº‹
 **
	mîr‹
);

78 
gboﬁón
 (* 
Êush
Ë(
GOuçutSåóm
 *
	m°ªam
,

79 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

80 
GEº‹
 **
	mîr‹
);

81 
gboﬁón
 (* 
˛o£_‚
Ë(
GOuçutSåóm
 *
	m°ªam
,

82 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

83 
GEº‹
 **
	mîr‹
);

87 (* 
	mwrôe_async
Ë(
GOuçutSåóm
 *
	m°ªam
,

88 c⁄° *
	mbuf„r
,

89 
gsize
 
	mcou¡
,

90 
	mio_¥i‹ôy
,

91 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

92 
GAsyncRódyCÆlback
 
	mˇŒback
,

93 
gpoöãr
 
	mu£r_d©a
);

94 
gssize
 (* 
wrôe_föish
Ë(
GOuçutSåóm
 *
	m°ªam
,

95 
GAsyncResu…
 *
	mªsu…
,

96 
GEº‹
 **
	mîr‹
);

97 (* 
	m•li˚_async
Ë(
GOuçutSåóm
 *
	m°ªam
,

98 
GI≈utSåóm
 *
	msour˚
,

99 
GOuçutSåómS∂i˚Fœgs
 
	mÊags
,

100 
	mio_¥i‹ôy
,

101 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

102 
GAsyncRódyCÆlback
 
	mˇŒback
,

103 
gpoöãr
 
	md©a
);

104 
gssize
 (* 
•li˚_föish
Ë(
GOuçutSåóm
 *
	m°ªam
,

105 
GAsyncResu…
 *
	mªsu…
,

106 
GEº‹
 **
	mîr‹
);

107 (* 
	mÊush_async
Ë(
GOuçutSåóm
 *
	m°ªam
,

108 
	mio_¥i‹ôy
,

109 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

110 
GAsyncRódyCÆlback
 
	mˇŒback
,

111 
gpoöãr
 
	mu£r_d©a
);

112 
gboﬁón
 (* 
Êush_föish
Ë(
GOuçutSåóm
 *
	m°ªam
,

113 
GAsyncResu…
 *
	mªsu…
,

114 
GEº‹
 **
	mîr‹
);

115 (* 
	m˛o£_async
Ë(
GOuçutSåóm
 *
	m°ªam
,

116 
	mio_¥i‹ôy
,

117 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

118 
GAsyncRódyCÆlback
 
	mˇŒback
,

119 
gpoöãr
 
	mu£r_d©a
);

120 
gboﬁón
 (* 
˛o£_föish
Ë(
GOuçutSåóm
 *
	m°ªam
,

121 
GAsyncResu…
 *
	mªsu…
,

122 
GEº‹
 **
	mîr‹
);

126 (*
	m_g_ª£rved1
) ();

127 (*
	m_g_ª£rved2
) ();

128 (*
	m_g_ª£rved3
) ();

129 (*
	m_g_ª£rved4
) ();

130 (*
	m_g_ª£rved5
) ();

131 (*
	m_g_ª£rved6
) ();

132 (*
	m_g_ª£rved7
) ();

133 (*
	m_g_ª£rved8
) ();

136 
GTy≥
 
	$g_ouçut_°ªam_gë_ty≥
 (Ë
G_GNUC_CONST
;

138 
gssize
 
	`g_ouçut_°ªam_wrôe
 (
GOuçutSåóm
 *
°ªam
,

139 c⁄° *
buf„r
,

140 
gsize
 
cou¡
,

141 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

142 
GEº‹
 **
îr‹
);

143 
gboﬁón
 
	`g_ouçut_°ªam_wrôe_Æl
 (
GOuçutSåóm
 *
°ªam
,

144 c⁄° *
buf„r
,

145 
gsize
 
cou¡
,

146 
gsize
 *
byãs_wrôãn
,

147 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

148 
GEº‹
 **
îr‹
);

149 
gssize
 
	`g_ouçut_°ªam_•li˚
 (
GOuçutSåóm
 *
°ªam
,

150 
GI≈utSåóm
 *
sour˚
,

151 
GOuçutSåómS∂i˚Fœgs
 
Êags
,

152 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

153 
GEº‹
 **
îr‹
);

154 
gboﬁón
 
	`g_ouçut_°ªam_Êush
 (
GOuçutSåóm
 *
°ªam
,

155 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

156 
GEº‹
 **
îr‹
);

157 
gboﬁón
 
	`g_ouçut_°ªam_˛o£
 (
GOuçutSåóm
 *
°ªam
,

158 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

159 
GEº‹
 **
îr‹
);

160 
	`g_ouçut_°ªam_wrôe_async
 (
GOuçutSåóm
 *
°ªam
,

161 c⁄° *
buf„r
,

162 
gsize
 
cou¡
,

163 
io_¥i‹ôy
,

164 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

165 
GAsyncRódyCÆlback
 
ˇŒback
,

166 
gpoöãr
 
u£r_d©a
);

167 
gssize
 
	`g_ouçut_°ªam_wrôe_föish
 (
GOuçutSåóm
 *
°ªam
,

168 
GAsyncResu…
 *
ªsu…
,

169 
GEº‹
 **
îr‹
);

170 
	`g_ouçut_°ªam_•li˚_async
 (
GOuçutSåóm
 *
°ªam
,

171 
GI≈utSåóm
 *
sour˚
,

172 
GOuçutSåómS∂i˚Fœgs
 
Êags
,

173 
io_¥i‹ôy
,

174 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

175 
GAsyncRódyCÆlback
 
ˇŒback
,

176 
gpoöãr
 
u£r_d©a
);

177 
gssize
 
	`g_ouçut_°ªam_•li˚_föish
 (
GOuçutSåóm
 *
°ªam
,

178 
GAsyncResu…
 *
ªsu…
,

179 
GEº‹
 **
îr‹
);

180 
	`g_ouçut_°ªam_Êush_async
 (
GOuçutSåóm
 *
°ªam
,

181 
io_¥i‹ôy
,

182 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

183 
GAsyncRódyCÆlback
 
ˇŒback
,

184 
gpoöãr
 
u£r_d©a
);

185 
gboﬁón
 
	`g_ouçut_°ªam_Êush_föish
 (
GOuçutSåóm
 *
°ªam
,

186 
GAsyncResu…
 *
ªsu…
,

187 
GEº‹
 **
îr‹
);

188 
	`g_ouçut_°ªam_˛o£_async
 (
GOuçutSåóm
 *
°ªam
,

189 
io_¥i‹ôy
,

190 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

191 
GAsyncRódyCÆlback
 
ˇŒback
,

192 
gpoöãr
 
u£r_d©a
);

193 
gboﬁón
 
	`g_ouçut_°ªam_˛o£_föish
 (
GOuçutSåóm
 *
°ªam
,

194 
GAsyncResu…
 *
ªsu…
,

195 
GEº‹
 **
îr‹
);

197 
gboﬁón
 
	`g_ouçut_°ªam_is_˛o£d
 (
GOuçutSåóm
 *
°ªam
);

198 
gboﬁón
 
	`g_ouçut_°ªam_has_≥ndög
 (
GOuçutSåóm
 *
°ªam
);

199 
gboﬁón
 
	`g_ouçut_°ªam_£t_≥ndög
 (
GOuçutSåóm
 *
°ªam
,

200 
GEº‹
 **
îr‹
);

201 
	`g_ouçut_°ªam_˛ór_≥ndög
 (
GOuçutSåóm
 *
°ªam
);

204 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gseekable.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_SEEKABLE_H__


28 
	#__G_SEEKABLE_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_SEEKABLE
 (
	`g_£ekabÀ_gë_ty≥
 ())

	)

35 
	#G_SEEKABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_SEEKABLE
, 
GSìkabÀ
))

	)

36 
	#G_IS_SEEKABLE
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_SEEKABLE
))

	)

37 
	#G_SEEKABLE_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_SEEKABLE
, 
GSìkabÀIÁ˚
))

	)

44 
_GSìkabÀIÁ˚
 
	tGSìkabÀIÁ˚
;

57 
	s_GSìkabÀIÁ˚


59 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

63 
goff£t
 (* 
ãŒ
Ë(
GSìkabÀ
 *
	m£ekabÀ
);

65 
gboﬁón
 (* 
ˇn_£ek
Ë(
GSìkabÀ
 *
	m£ekabÀ
);

66 
gboﬁón
 (* 
£ek
Ë(
GSìkabÀ
 *
	m£ekabÀ
,

67 
goff£t
 
	moff£t
,

68 
GSìkTy≥
 
	mty≥
,

69 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

70 
GEº‹
 **
	mîr‹
);

72 
gboﬁón
 (* 
ˇn_åunˇã
Ë(
GSìkabÀ
 *
	m£ekabÀ
);

73 
gboﬁón
 (* 
åunˇã_‚
Ë(
GSìkabÀ
 *
	m£ekabÀ
,

74 
goff£t
 
	moff£t
,

75 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

76 
GEº‹
 **
	mîr‹
);

81 
GTy≥
 
	$g_£ekabÀ_gë_ty≥
 (Ë
G_GNUC_CONST
;

83 
goff£t
 
	`g_£ekabÀ_ãŒ
 (
GSìkabÀ
 *
£ekabÀ
);

84 
gboﬁón
 
	`g_£ekabÀ_ˇn_£ek
 (
GSìkabÀ
 *
£ekabÀ
);

85 
gboﬁón
 
	`g_£ekabÀ_£ek
 (
GSìkabÀ
 *
£ekabÀ
,

86 
goff£t
 
off£t
,

87 
GSìkTy≥
 
ty≥
,

88 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

89 
GEº‹
 **
îr‹
);

90 
gboﬁón
 
	`g_£ekabÀ_ˇn_åunˇã
 (
GSìkabÀ
 *
£ekabÀ
);

91 
gboﬁón
 
	`g_£ekabÀ_åunˇã
 (
GSìkabÀ
 *
£ekabÀ
,

92 
goff£t
 
off£t
,

93 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

94 
GEº‹
 **
îr‹
);

96 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gsimpleasyncresult.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_SIMPLE_ASYNC_RESULT_H__


28 
	#__G_SIMPLE_ASYNC_RESULT_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_SIMPLE_ASYNC_RESULT
 (
	`g_sim∂e_async_ªsu…_gë_ty≥
 ())

	)

35 
	#G_SIMPLE_ASYNC_RESULT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_SIMPLE_ASYNC_RESULT
, 
GSim∂eAsyncResu…
))

	)

36 
	#G_SIMPLE_ASYNC_RESULT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_SIMPLE_ASYNC_RESULT
, 
GSim∂eAsyncResu…Cœss
))

	)

37 
	#G_IS_SIMPLE_ASYNC_RESULT
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_SIMPLE_ASYNC_RESULT
))

	)

38 
	#G_IS_SIMPLE_ASYNC_RESULT_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_SIMPLE_ASYNC_RESULT
))

	)

39 
	#G_SIMPLE_ASYNC_RESULT_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_SIMPLE_ASYNC_RESULT
, 
GSim∂eAsyncResu…Cœss
))

	)

46 
_GSim∂eAsyncResu…Cœss
 
	tGSim∂eAsyncResu…Cœss
;

49 
GTy≥
 
	$g_sim∂e_async_ªsu…_gë_ty≥
 (Ë
G_GNUC_CONST
;

51 
GSim∂eAsyncResu…
 *
	`g_sim∂e_async_ªsu…_√w
 (
GObje˘
 *
sour˚_obje˘
,

52 
GAsyncRódyCÆlback
 
ˇŒback
,

53 
gpoöãr
 
u£r_d©a
,

54 
gpoöãr
 
sour˚_èg
);

55 
GSim∂eAsyncResu…
 *
	$g_sim∂e_async_ªsu…_√w_îr‹
 (
GObje˘
 *
sour˚_obje˘
,

56 
GAsyncRódyCÆlback
 
ˇŒback
,

57 
gpoöãr
 
u£r_d©a
,

58 
GQu¨k
 
domaö
,

59 
göt
 
code
,

60 c⁄° *
f‹m©
,

61 ...Ë
	`G_GNUC_PRINTF
 (6, 7);

62 
GSim∂eAsyncResu…
 *
	`g_sim∂e_async_ªsu…_√w_‰om_îr‹
 (
GObje˘
 *
sour˚_obje˘
,

63 
GAsyncRódyCÆlback
 
ˇŒback
,

64 
gpoöãr
 
u£r_d©a
,

65 
GEº‹
 *
îr‹
);

67 
	`g_sim∂e_async_ªsu…_£t_›_ªs_gpoöãr
 (
GSim∂eAsyncResu…
 *
sim∂e
,

68 
gpoöãr
 
›_ªs
,

69 
GDe°royNŸify
 
de°roy_›_ªs
);

70 
gpoöãr
 
	`g_sim∂e_async_ªsu…_gë_›_ªs_gpoöãr
 (
GSim∂eAsyncResu…
 *
sim∂e
);

72 
	`g_sim∂e_async_ªsu…_£t_›_ªs_gssize
 (
GSim∂eAsyncResu…
 *
sim∂e
,

73 
gssize
 
›_ªs
);

74 
gssize
 
	`g_sim∂e_async_ªsu…_gë_›_ªs_gssize
 (
GSim∂eAsyncResu…
 *
sim∂e
);

76 
	`g_sim∂e_async_ªsu…_£t_›_ªs_gboﬁón
 (
GSim∂eAsyncResu…
 *
sim∂e
,

77 
gboﬁón
 
›_ªs
);

78 
gboﬁón
 
	`g_sim∂e_async_ªsu…_gë_›_ªs_gboﬁón
 (
GSim∂eAsyncResu…
 *
sim∂e
);

82 
gpoöãr
 
	`g_sim∂e_async_ªsu…_gë_sour˚_èg
 (
GSim∂eAsyncResu…
 *
sim∂e
);

83 
	`g_sim∂e_async_ªsu…_£t_h™dÀ_ˇn˚Œ©i⁄
 (
GSim∂eAsyncResu…
 *
sim∂e
,

84 
gboﬁón
 
h™dÀ_ˇn˚Œ©i⁄
);

85 
	`g_sim∂e_async_ªsu…_com∂ëe
 (
GSim∂eAsyncResu…
 *
sim∂e
);

86 
	`g_sim∂e_async_ªsu…_com∂ëe_ö_idÀ
 (
GSim∂eAsyncResu…
 *
sim∂e
);

87 
	`g_sim∂e_async_ªsu…_run_ö_thªad
 (
GSim∂eAsyncResu…
 *
sim∂e
,

88 
GSim∂eAsyncThªadFunc
 
func
,

89 
io_¥i‹ôy
,

90 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
);

91 
	`g_sim∂e_async_ªsu…_£t_‰om_îr‹
 (
GSim∂eAsyncResu…
 *
sim∂e
,

92 
GEº‹
 *
îr‹
);

93 
gboﬁón
 
	`g_sim∂e_async_ªsu…_¥›ag©e_îr‹
 (
GSim∂eAsyncResu…
 *
sim∂e
,

94 
GEº‹
 **
de°
);

95 
	$g_sim∂e_async_ªsu…_£t_îr‹
 (
GSim∂eAsyncResu…
 *
sim∂e
,

96 
GQu¨k
 
domaö
,

97 
göt
 
code
,

98 c⁄° *
f‹m©
,

99 ...Ë
	`G_GNUC_PRINTF
 (4, 5);

100 
	`g_sim∂e_async_ªsu…_£t_îr‹_va
 (
GSim∂eAsyncResu…
 *
sim∂e
,

101 
GQu¨k
 
domaö
,

102 
göt
 
code
,

103 c⁄° *
f‹m©
,

104 
va_li°
 
¨gs
);

105 
gboﬁón
 
	`g_sim∂e_async_ªsu…_is_vÆid
 (
GAsyncResu…
 *
ªsu…
,

106 
GObje˘
 *
sour˚
,

107 
gpoöãr
 
sour˚_èg
);

109 
	`g_sim∂e_async_ªp‹t_îr‹_ö_idÀ
 (
GObje˘
 *
obje˘
,

110 
GAsyncRódyCÆlback
 
ˇŒback
,

111 
gpoöãr
 
u£r_d©a
,

112 
GQu¨k
 
domaö
,

113 
göt
 
code
,

114 c⁄° *
f‹m©
,

116 
	`g_sim∂e_async_ªp‹t_gîr‹_ö_idÀ
 (
GObje˘
 *
obje˘
,

117 
GAsyncRódyCÆlback
 
ˇŒback
,

118 
gpoöãr
 
u£r_d©a
,

119 
GEº‹
 *
îr‹
);

121 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gthemedicon.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_THEMED_ICON_H__


28 
	#__G_THEMED_ICON_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_THEMED_ICON
 (
	`g_themed_ic⁄_gë_ty≥
 ())

	)

35 
	#G_THEMED_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_THEMED_ICON
, 
GThemedIc⁄
))

	)

36 
	#G_THEMED_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_THEMED_ICON
, 
GThemedIc⁄Cœss
))

	)

37 
	#G_IS_THEMED_ICON
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_THEMED_ICON
))

	)

38 
	#G_IS_THEMED_ICON_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_THEMED_ICON
))

	)

39 
	#G_THEMED_ICON_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_THEMED_ICON
, 
GThemedIc⁄Cœss
))

	)

46 
_GThemedIc⁄Cœss
 
	tGThemedIc⁄Cœss
;

48 
GTy≥
 
	$g_themed_ic⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

50 
GIc⁄
 *
	`g_themed_ic⁄_√w
 (c⁄° *
ic⁄«me
);

51 
GIc⁄
 *
	`g_themed_ic⁄_√w_wôh_deÁu…_ÁŒbacks
 (c⁄° *
ic⁄«me
);

52 
GIc⁄
 *
	`g_themed_ic⁄_√w_‰om_«mes
 (**
ic⁄«mes
,

53 
Àn
);

54 
	`g_themed_ic⁄_¥ïíd_«me
 (
GThemedIc⁄
 *
ic⁄
,

55 c⁄° *
ic⁄«me
);

56 
	`g_themed_ic⁄_≠≥nd_«me
 (
GThemedIc⁄
 *
ic⁄
,

57 c⁄° *
ic⁄«me
);

59 c⁄° * c⁄° *
	`g_themed_ic⁄_gë_«mes
 (
GThemedIc⁄
 *
ic⁄
);

61 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gvfs.h

23 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

27 #i‚de‡
__G_VFS_H__


28 
	#__G_VFS_H__


	)

30 
	~<gio/giŸy≥s.h
>

32 
	gG_BEGIN_DECLS


34 
	#G_TYPE_VFS
 (
	`g_vfs_gë_ty≥
 ())

	)

35 
	#G_VFS
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_VFS
, 
GVfs
))

	)

36 
	#G_VFS_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_VFS
, 
GVfsCœss
))

	)

37 
	#G_VFS_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_VFS
, 
GVfsCœss
))

	)

38 
	#G_IS_VFS
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_VFS
))

	)

39 
	#G_IS_VFS_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_VFS
))

	)

47 
	#G_VFS_EXTENSION_POINT_NAME
 "gio-vfs"

	)

54 
_GVfsCœss
 
	tGVfsCœss
;

56 
	s_GVfs


58 
GObje˘
 
	m∑ª¡_ö°™˚
;

61 
	s_GVfsCœss


63 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

67 
gboﬁón
 (* 
is_a˘ive
Ë(
GVfs
 *
	mvfs
);

68 
	mGFûe
 * (* 
	mgë_fûe_f‹_∑th
Ë(
GVfs
 *
	mvfs
,

69 c⁄° *
	m∑th
);

70 
	mGFûe
 * (* 
	mgë_fûe_f‹_uri
Ë(
GVfs
 *
	mvfs
,

71 c⁄° *
	muri
);

72 c⁄° 
gch¨
 * c⁄° * (* 
	mgë_suµ‹ãd_uri_schemes
Ë(
GVfs
 *
	mvfs
);

73 
	mGFûe
 * (* 
	m∑r£_«me
Ë(
GVfs
 *
	mvfs
,

74 c⁄° *
	m∑r£_«me
);

78 (*
	m_g_ª£rved1
) ();

79 (*
	m_g_ª£rved2
) ();

80 (*
	m_g_ª£rved3
) ();

81 (*
	m_g_ª£rved4
) ();

82 (*
	m_g_ª£rved5
) ();

83 (*
	m_g_ª£rved6
) ();

84 (*
	m_g_ª£rved7
) ();

85 (*
	m_g_ª£rved8
) ();

86 (*
	m_g_ª£rved9
) ();

87 (*
	m_g_ª£rved10
) ();

88 (*
	m_g_ª£rved11
) ();

89 (*
	m_g_ª£rved12
) ();

92 
GTy≥
 
	$g_vfs_gë_ty≥
 (Ë
G_GNUC_CONST
;

94 
gboﬁón
 
	`g_vfs_is_a˘ive
 (
GVfs
 *
vfs
);

95 
GFûe
 * 
	`g_vfs_gë_fûe_f‹_∑th
 (
GVfs
 *
vfs
,

96 c⁄° *
∑th
);

97 
GFûe
 * 
	`g_vfs_gë_fûe_f‹_uri
 (
GVfs
 *
vfs
,

98 c⁄° *
uri
);

99 c⁄° 
gch¨
* c⁄° * 
	`g_vfs_gë_suµ‹ãd_uri_schemes
 (
GVfs
 *
vfs
);

101 
GFûe
 * 
	`g_vfs_∑r£_«me
 (
GVfs
 *
vfs
,

102 c⁄° *
∑r£_«me
);

104 
GVfs
 * 
	`g_vfs_gë_deÁu…
 ();

105 
GVfs
 * 
	`g_vfs_gë_loˇl
 ();

107 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gvolume.h

24 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

28 #i‚de‡
__G_VOLUME_H__


29 
	#__G_VOLUME_H__


	)

31 
	~<gio/giŸy≥s.h
>

33 
	gG_BEGIN_DECLS


40 
	#G_VOLUME_IDENTIFIER_KIND_HAL_UDI
 "hÆ-udi"

	)

47 
	#G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE
 "unix-devi˚"

	)

54 
	#G_VOLUME_IDENTIFIER_KIND_LABEL
 "œbñ"

	)

61 
	#G_VOLUME_IDENTIFIER_KIND_UUID
 "uuid"

	)

68 
	#G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT
 "nfs-mou¡"

	)

71 
	#G_TYPE_VOLUME
 (
	`g_vﬁume_gë_ty≥
 ())

	)

72 
	#G_VOLUME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
G_TYPE_VOLUME
, 
GVﬁume
))

	)

73 
	#G_IS_VOLUME
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
G_TYPE_VOLUME
))

	)

74 
	#G_VOLUME_GET_IFACE
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_INTERFACE
 ((obj), 
G_TYPE_VOLUME
, 
GVﬁumeIÁ˚
))

	)

105 
_GVﬁumeIÁ˚
 
	tGVﬁumeIÁ˚
;

107 
	s_GVﬁumeIÁ˚


109 
GTy≥I¡îÁ˚
 
	mg_iÁ˚
;

113 (* 
	mch™ged
Ë(
GVﬁume
 *
	mvﬁume
);

114 (* 
	mªmoved
Ë(
GVﬁume
 *
	mvﬁume
);

118 * (* 
	mgë_«me
Ë(
GVﬁume
 *
	mvﬁume
);

119 
	mGIc⁄
 * (* 
	mgë_ic⁄
Ë(
GVﬁume
 *
	mvﬁume
);

120 * (* 
	mgë_uuid
Ë(
GVﬁume
 *
	mvﬁume
);

121 
	mGDrive
 * (* 
	mgë_drive
Ë(
GVﬁume
 *
	mvﬁume
);

122 
	mGMou¡
 * (* 
	mgë_mou¡
Ë(
GVﬁume
 *
	mvﬁume
);

123 
gboﬁón
 (* 
ˇn_mou¡
Ë(
GVﬁume
 *
	mvﬁume
);

124 
gboﬁón
 (* 
ˇn_eje˘
Ë(
GVﬁume
 *
	mvﬁume
);

125 (* 
	mmou¡_‚
Ë(
GVﬁume
 *
	mvﬁume
,

126 
GMou¡Mou¡Fœgs
 
	mÊags
,

127 
GMou¡O≥øti⁄
 *
	mmou¡_›î©i⁄
,

128 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

129 
GAsyncRódyCÆlback
 
	mˇŒback
,

130 
gpoöãr
 
	mu£r_d©a
);

131 
gboﬁón
 (* 
mou¡_föish
Ë(
GVﬁume
 *
	mvﬁume
,

132 
GAsyncResu…
 *
	mªsu…
,

133 
GEº‹
 **
	mîr‹
);

134 (* 
	meje˘
Ë(
GVﬁume
 *
	mvﬁume
,

135 
GMou¡Unmou¡Fœgs
 
	mÊags
,

136 
GC™˚ŒabÀ
 *
	mˇn˚ŒabÀ
,

137 
GAsyncRódyCÆlback
 
	mˇŒback
,

138 
gpoöãr
 
	mu£r_d©a
);

139 
gboﬁón
 (* 
eje˘_föish
Ë(
GVﬁume
 *
	mvﬁume
,

140 
GAsyncResu…
 *
	mªsu…
,

141 
GEº‹
 **
	mîr‹
);

143 * (* 
	mgë_idítifõr
Ë(
GVﬁume
 *
	mvﬁume
,

144 c⁄° *
	mköd
);

145 ** (* 
	míumî©e_idítifõrs
Ë(
GVﬁume
 *
	mvﬁume
);

147 
gboﬁón
 (* 
should_automou¡
Ë(
GVﬁume
 *
	mvﬁume
);

149 
	mGFûe
 * (* 
	mgë_a˘iv©i⁄_roŸ
Ë(
GVﬁume
 *
	mvﬁume
);

153 
GTy≥
 
	$g_vﬁume_gë_ty≥
 (Ë
G_GNUC_CONST
;

155 * 
	`g_vﬁume_gë_«me
 (
GVﬁume
 *
vﬁume
);

156 
GIc⁄
 * 
	`g_vﬁume_gë_ic⁄
 (
GVﬁume
 *
vﬁume
);

157 * 
	`g_vﬁume_gë_uuid
 (
GVﬁume
 *
vﬁume
);

158 
GDrive
 * 
	`g_vﬁume_gë_drive
 (
GVﬁume
 *
vﬁume
);

159 
GMou¡
 * 
	`g_vﬁume_gë_mou¡
 (
GVﬁume
 *
vﬁume
);

160 
gboﬁón
 
	`g_vﬁume_ˇn_mou¡
 (
GVﬁume
 *
vﬁume
);

161 
gboﬁón
 
	`g_vﬁume_ˇn_eje˘
 (
GVﬁume
 *
vﬁume
);

162 
gboﬁón
 
	`g_vﬁume_should_automou¡
 (
GVﬁume
 *
vﬁume
);

163 
	`g_vﬁume_mou¡
 (
GVﬁume
 *
vﬁume
,

164 
GMou¡Mou¡Fœgs
 
Êags
,

165 
GMou¡O≥øti⁄
 *
mou¡_›î©i⁄
,

166 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

167 
GAsyncRódyCÆlback
 
ˇŒback
,

168 
gpoöãr
 
u£r_d©a
);

169 
gboﬁón
 
	`g_vﬁume_mou¡_föish
 (
GVﬁume
 *
vﬁume
,

170 
GAsyncResu…
 *
ªsu…
,

171 
GEº‹
 **
îr‹
);

172 
	`g_vﬁume_eje˘
 (
GVﬁume
 *
vﬁume
,

173 
GMou¡Unmou¡Fœgs
 
Êags
,

174 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

175 
GAsyncRódyCÆlback
 
ˇŒback
,

176 
gpoöãr
 
u£r_d©a
);

177 
gboﬁón
 
	`g_vﬁume_eje˘_föish
 (
GVﬁume
 *
vﬁume
,

178 
GAsyncResu…
 *
ªsu…
,

179 
GEº‹
 **
îr‹
);

180 * 
	`g_vﬁume_gë_idítifõr
 (
GVﬁume
 *
vﬁume
,

181 c⁄° *
köd
);

182 ** 
	`g_vﬁume_íumî©e_idítifõrs
 (
GVﬁume
 *
vﬁume
);

184 
GFûe
 * 
	`g_vﬁume_gë_a˘iv©i⁄_roŸ
 (
GVﬁume
 *
vﬁume
);

186 
G_END_DECLS


	@/usr/include/glib-2.0/gio/gvolumemonitor.h

26 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

30 #i‚de‡
__G_VOLUME_MONITOR_H__


31 
	#__G_VOLUME_MONITOR_H__


	)

33 
	~<gio/giŸy≥s.h
>

35 
	gG_BEGIN_DECLS


37 
	#G_TYPE_VOLUME_MONITOR
 (
	`g_vﬁume_m⁄ô‹_gë_ty≥
 ())

	)

38 
	#G_VOLUME_MONITOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_VOLUME_MONITOR
, 
GVﬁumeM⁄ô‹
))

	)

39 
	#G_VOLUME_MONITOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_VOLUME_MONITOR
, 
GVﬁumeM⁄ô‹Cœss
))

	)

40 
	#G_VOLUME_MONITOR_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_VOLUME_MONITOR
, 
GVﬁumeM⁄ô‹Cœss
))

	)

41 
	#G_IS_VOLUME_MONITOR
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_VOLUME_MONITOR
))

	)

42 
	#G_IS_VOLUME_MONITOR_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_VOLUME_MONITOR
))

	)

50 
	#G_VOLUME_MONITOR_EXTENSION_POINT_NAME
 "gio-vﬁume-m⁄ô‹"

	)

58 
_GVﬁumeM⁄ô‹Cœss
 
	tGVﬁumeM⁄ô‹Cœss
;

60 
	s_GVﬁumeM⁄ô‹


62 
GObje˘
 
	m∑ª¡_ö°™˚
;

65 
gpoöãr
 
	m¥iv
;

68 
	s_GVﬁumeM⁄ô‹Cœss


70 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

74 (* 
	mvﬁume_added
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

75 
GVﬁume
 *
	mvﬁume
);

76 (* 
	mvﬁume_ªmoved
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

77 
GVﬁume
 *
	mvﬁume
);

78 (* 
	mvﬁume_ch™ged
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

79 
GVﬁume
 *
	mvﬁume
);

81 (* 
	mmou¡_added
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

82 
GMou¡
 *
	mmou¡
);

83 (* 
	mmou¡_ªmoved
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

84 
GMou¡
 *
	mmou¡
);

85 (* 
	mmou¡_¥e_unmou¡
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

86 
GMou¡
 *
	mmou¡
);

87 (* 
	mmou¡_ch™ged
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

88 
GMou¡
 *
	mmou¡
);

90 (* 
	mdrive_c⁄√˘ed
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

91 
GDrive
 *
	mdrive
);

92 (* 
	mdrive_disc⁄√˘ed
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

93 
GDrive
 *
	mdrive
);

94 (* 
	mdrive_ch™ged
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

95 
GDrive
 *
	mdrive
);

99 
gboﬁón
 (* 
is_suµ‹ãd
) ();

101 
	mGLi°
 * (* 
	mgë_c⁄√˘ed_drives
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
);

102 
	mGLi°
 * (* 
	mgë_vﬁumes
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
);

103 
	mGLi°
 * (* 
	mgë_mou¡s
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
);

105 
	mGVﬁume
 * (* 
	mgë_vﬁume_f‹_uuid
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

106 c⁄° *
	muuid
);

108 
	mGMou¡
 * (* 
	mgë_mou¡_f‹_uuid
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

109 c⁄° *
	muuid
);

113 
	mGVﬁume
 * (* 
	mad›t_‹ph™_mou¡
Ë(
GMou¡
 *
	mmou¡
,

114 
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
);

117 (* 
	mdrive_eje˘_buâ⁄
Ë(
GVﬁumeM⁄ô‹
 *
	mvﬁume_m⁄ô‹
,

118 
GDrive
 *
	mdrive
);

122 (*
	m_g_ª£rved1
) ();

123 (*
	m_g_ª£rved2
) ();

124 (*
	m_g_ª£rved3
) ();

125 (*
	m_g_ª£rved4
) ();

126 (*
	m_g_ª£rved5
) ();

127 (*
	m_g_ª£rved6
) ();

128 (*
	m_g_ª£rved7
) ();

131 
GTy≥
 
	$g_vﬁume_m⁄ô‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

133 
GVﬁumeM⁄ô‹
 *
	`g_vﬁume_m⁄ô‹_gë
 ();

134 
GLi°
 * 
	`g_vﬁume_m⁄ô‹_gë_c⁄√˘ed_drives
 (
GVﬁumeM⁄ô‹
 *
vﬁume_m⁄ô‹
);

135 
GLi°
 * 
	`g_vﬁume_m⁄ô‹_gë_vﬁumes
 (
GVﬁumeM⁄ô‹
 *
vﬁume_m⁄ô‹
);

136 
GLi°
 * 
	`g_vﬁume_m⁄ô‹_gë_mou¡s
 (
GVﬁumeM⁄ô‹
 *
vﬁume_m⁄ô‹
);

137 
GVﬁume
 * 
	`g_vﬁume_m⁄ô‹_gë_vﬁume_f‹_uuid
 (
GVﬁumeM⁄ô‹
 *
vﬁume_m⁄ô‹
,

138 c⁄° *
uuid
);

139 
GMou¡
 * 
	`g_vﬁume_m⁄ô‹_gë_mou¡_f‹_uuid
 (
GVﬁumeM⁄ô‹
 *
vﬁume_m⁄ô‹
,

140 c⁄° *
uuid
);

142 #i‚de‡
G_DISABLE_DEPRECATED


143 
GVﬁume
 * 
	`g_vﬁume_m⁄ô‹_ad›t_‹ph™_mou¡
 (
GMou¡
 *
mou¡
);

146 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/gclosure.h

20 #i‡!
deföed
 (
__GLIB_GOBJECT_H_INSIDE__
Ë&& !deföed (
GOBJECT_COMPILATION
)

24 #i‚de‡
__G_CLOSURE_H__


25 
	#__G_CLOSURE_H__


	)

27 
	~<gobje˘/gty≥.h
>

29 
	gG_BEGIN_DECLS


41 
	#G_CLOSURE_NEEDS_MARSHAL
(
˛osuª
Ë(((
GClosuª
*Ë(˛osuª))->
m¨shÆ
 =
NULL
)

	)

54 
	#G_CLOSURE_N_NOTIFIERS
(
˛
Ë((˛)->
mëa_m¨shÆ
 + ((˛)->
n_gu¨ds
 << 1L) + \

55 (
˛
)->
n_‚Ÿifõrs
 + (˛)->
n_öŸifõrs
)

	)

65 
	#G_CCLOSURE_SWAP_DATA
(
c˛osuª
Ë(((
GClosuª
*Ë(c˛osuª))->
dîiv©ive_Êag
)

	)

72 
	#G_CALLBACK
(
f
Ë((
GCÆlback
Ë(f))

	)

76 
_GClosuª
 
	tGClosuª
;

77 
_GClosuªNŸifyD©a
 
	tGClosuªNŸifyD©a
;

88 (*
	tGCÆlback
) ();

97 (*
	tGClosuªNŸify
Ë(
	tgpoöãr
 
	td©a
,

98 
	tGClosuª
 *
	t˛osuª
);

114 (*
	tGClosuªM¨shÆ
Ë(
	tGClosuª
 *
	t˛osuª
,

115 
	tGVÆue
 *
	tªtu∫_vÆue
,

116 
	tguöt
 
	tn_∑øm_vÆues
,

117 c⁄° 
	tGVÆue
 *
	t∑øm_vÆues
,

118 
	tgpoöãr
 
	tövoˇti⁄_höt
,

119 
	tgpoöãr
 
	tm¨shÆ_d©a
);

127 
_GCClosuª
 
	tGCClosuª
;

131 
	s_GClosuªNŸifyD©a


133 
gpoöãr
 
d©a
;

134 
GClosuªNŸify
 
nŸify
;

145 
	s_GClosuª


148 vﬁ©ûê
guöt
 
ªf_cou¡
 : 15;

149 vﬁ©ûê
guöt
 
mëa_m¨shÆ
 : 1;

150 vﬁ©ûê
guöt
 
n_gu¨ds
 : 1;

151 vﬁ©ûê
guöt
 
n_‚Ÿifõrs
 : 2;

152 vﬁ©ûê
guöt
 
n_öŸifõrs
 : 8;

153 vﬁ©ûê
guöt
 
ö_öŸify
 : 1;

154 vﬁ©ûê
guöt
 
Êﬂtög
 : 1;

156 vﬁ©ûê
guöt
 
dîiv©ive_Êag
 : 1;

158 vﬁ©ûê
guöt
 
ö_m¨shÆ
 : 1;

159 vﬁ©ûê
guöt
 
is_övÆid
 : 1;

161  (*
m¨shÆ
Ë(
GClosuª
 *
˛osuª
,

162 
GVÆue
 *
ªtu∫_vÆue
,

163 
guöt
 
n_∑øm_vÆues
,

164 c⁄° 
GVÆue
 *
∑øm_vÆues
,

165 
gpoöãr
 
övoˇti⁄_höt
,

166 
gpoöãr
 
m¨shÆ_d©a
);

167  
gpoöãr
 
d©a
;

169  
GClosuªNŸifyD©a
 *
nŸifõrs
;

184 
	s_GCClosuª


186 
GClosuª
 
˛osuª
;

187 
gpoöãr
 
ˇŒback
;

192 
GClosuª
* 
	`g_c˛osuª_√w
 (
GCÆlback
 
ˇŒback_func
,

193 
gpoöãr
 
u£r_d©a
,

194 
GClosuªNŸify
 
de°roy_d©a
);

195 
GClosuª
* 
	`g_c˛osuª_√w_sw≠
 (
GCÆlback
 
ˇŒback_func
,

196 
gpoöãr
 
u£r_d©a
,

197 
GClosuªNŸify
 
de°roy_d©a
);

198 
GClosuª
* 
	`g_sig«l_ty≥_c˛osuª_√w
 (
GTy≥
 
ôy≥
,

199 
guöt
 
°ru˘_off£t
);

203 
GClosuª
* 
	`g_˛osuª_ªf
 (GClosuª *
˛osuª
);

204 
	`g_˛osuª_sök
 (
GClosuª
 *
˛osuª
);

205 
	`g_˛osuª_uƒef
 (
GClosuª
 *
˛osuª
);

207 
GClosuª
* 
	`g_˛osuª_√w_sim∂e
 (
guöt
 
sizeof_˛osuª
,

208 
gpoöãr
 
d©a
);

209 
	`g_˛osuª_add_föÆize_nŸifõr
 (
GClosuª
 *
˛osuª
,

210 
gpoöãr
 
nŸify_d©a
,

211 
GClosuªNŸify
 
nŸify_func
);

212 
	`g_˛osuª_ªmove_föÆize_nŸifõr
 (
GClosuª
 *
˛osuª
,

213 
gpoöãr
 
nŸify_d©a
,

214 
GClosuªNŸify
 
nŸify_func
);

215 
	`g_˛osuª_add_övÆid©e_nŸifõr
 (
GClosuª
 *
˛osuª
,

216 
gpoöãr
 
nŸify_d©a
,

217 
GClosuªNŸify
 
nŸify_func
);

218 
	`g_˛osuª_ªmove_övÆid©e_nŸifõr
 (
GClosuª
 *
˛osuª
,

219 
gpoöãr
 
nŸify_d©a
,

220 
GClosuªNŸify
 
nŸify_func
);

221 
	`g_˛osuª_add_m¨shÆ_gu¨ds
 (
GClosuª
 *
˛osuª
,

222 
gpoöãr
 
¥e_m¨shÆ_d©a
,

223 
GClosuªNŸify
 
¥e_m¨shÆ_nŸify
,

224 
gpoöãr
 
po°_m¨shÆ_d©a
,

225 
GClosuªNŸify
 
po°_m¨shÆ_nŸify
);

226 
	`g_˛osuª_£t_m¨shÆ
 (
GClosuª
 *
˛osuª
,

227 
GClosuªM¨shÆ
 
m¨shÆ
);

228 
	`g_˛osuª_£t_mëa_m¨shÆ
 (
GClosuª
 *
˛osuª
,

229 
gpoöãr
 
m¨shÆ_d©a
,

230 
GClosuªM¨shÆ
 
mëa_m¨shÆ
);

231 
	`g_˛osuª_övÆid©e
 (
GClosuª
 *
˛osuª
);

232 
	`g_˛osuª_övoke
 (
GClosuª
 *
˛osuª
,

233 
GVÆue
 *
ªtu∫_vÆue
,

234 
guöt
 
n_∑øm_vÆues
,

235 c⁄° 
GVÆue
 *
∑øm_vÆues
,

236 
gpoöãr
 
övoˇti⁄_höt
);

249 
G_END_DECLS


	@/usr/include/glib-2.0/gobject/gmarshal.h

1 #i‚de‡
__G_MARSHAL_H__


2 
	#__G_MARSHAL_H__


	)

4 
G_BEGIN_DECLS


7 
g_c˛osuª_m¨shÆ_VOID__VOID
 (
GClosuª
 *
˛osuª
,

8 
GVÆue
 *
ªtu∫_vÆue
,

9 
guöt
 
n_∑øm_vÆues
,

10 c⁄° 
GVÆue
 *
∑øm_vÆues
,

11 
gpoöãr
 
övoˇti⁄_höt
,

12 
gpoöãr
 
m¨shÆ_d©a
);

15 
g_c˛osuª_m¨shÆ_VOID__BOOLEAN
 (
GClosuª
 *
˛osuª
,

16 
GVÆue
 *
ªtu∫_vÆue
,

17 
guöt
 
n_∑øm_vÆues
,

18 c⁄° 
GVÆue
 *
∑øm_vÆues
,

19 
gpoöãr
 
övoˇti⁄_höt
,

20 
gpoöãr
 
m¨shÆ_d©a
);

23 
g_c˛osuª_m¨shÆ_VOID__CHAR
 (
GClosuª
 *
˛osuª
,

24 
GVÆue
 *
ªtu∫_vÆue
,

25 
guöt
 
n_∑øm_vÆues
,

26 c⁄° 
GVÆue
 *
∑øm_vÆues
,

27 
gpoöãr
 
övoˇti⁄_höt
,

28 
gpoöãr
 
m¨shÆ_d©a
);

31 
g_c˛osuª_m¨shÆ_VOID__UCHAR
 (
GClosuª
 *
˛osuª
,

32 
GVÆue
 *
ªtu∫_vÆue
,

33 
guöt
 
n_∑øm_vÆues
,

34 c⁄° 
GVÆue
 *
∑øm_vÆues
,

35 
gpoöãr
 
övoˇti⁄_höt
,

36 
gpoöãr
 
m¨shÆ_d©a
);

39 
g_c˛osuª_m¨shÆ_VOID__INT
 (
GClosuª
 *
˛osuª
,

40 
GVÆue
 *
ªtu∫_vÆue
,

41 
guöt
 
n_∑øm_vÆues
,

42 c⁄° 
GVÆue
 *
∑øm_vÆues
,

43 
gpoöãr
 
övoˇti⁄_höt
,

44 
gpoöãr
 
m¨shÆ_d©a
);

47 
g_c˛osuª_m¨shÆ_VOID__UINT
 (
GClosuª
 *
˛osuª
,

48 
GVÆue
 *
ªtu∫_vÆue
,

49 
guöt
 
n_∑øm_vÆues
,

50 c⁄° 
GVÆue
 *
∑øm_vÆues
,

51 
gpoöãr
 
övoˇti⁄_höt
,

52 
gpoöãr
 
m¨shÆ_d©a
);

55 
g_c˛osuª_m¨shÆ_VOID__LONG
 (
GClosuª
 *
˛osuª
,

56 
GVÆue
 *
ªtu∫_vÆue
,

57 
guöt
 
n_∑øm_vÆues
,

58 c⁄° 
GVÆue
 *
∑øm_vÆues
,

59 
gpoöãr
 
övoˇti⁄_höt
,

60 
gpoöãr
 
m¨shÆ_d©a
);

63 
g_c˛osuª_m¨shÆ_VOID__ULONG
 (
GClosuª
 *
˛osuª
,

64 
GVÆue
 *
ªtu∫_vÆue
,

65 
guöt
 
n_∑øm_vÆues
,

66 c⁄° 
GVÆue
 *
∑øm_vÆues
,

67 
gpoöãr
 
övoˇti⁄_höt
,

68 
gpoöãr
 
m¨shÆ_d©a
);

71 
g_c˛osuª_m¨shÆ_VOID__ENUM
 (
GClosuª
 *
˛osuª
,

72 
GVÆue
 *
ªtu∫_vÆue
,

73 
guöt
 
n_∑øm_vÆues
,

74 c⁄° 
GVÆue
 *
∑øm_vÆues
,

75 
gpoöãr
 
övoˇti⁄_höt
,

76 
gpoöãr
 
m¨shÆ_d©a
);

79 
g_c˛osuª_m¨shÆ_VOID__FLAGS
 (
GClosuª
 *
˛osuª
,

80 
GVÆue
 *
ªtu∫_vÆue
,

81 
guöt
 
n_∑øm_vÆues
,

82 c⁄° 
GVÆue
 *
∑øm_vÆues
,

83 
gpoöãr
 
övoˇti⁄_höt
,

84 
gpoöãr
 
m¨shÆ_d©a
);

87 
g_c˛osuª_m¨shÆ_VOID__FLOAT
 (
GClosuª
 *
˛osuª
,

88 
GVÆue
 *
ªtu∫_vÆue
,

89 
guöt
 
n_∑øm_vÆues
,

90 c⁄° 
GVÆue
 *
∑øm_vÆues
,

91 
gpoöãr
 
övoˇti⁄_höt
,

92 
gpoöãr
 
m¨shÆ_d©a
);

95 
g_c˛osuª_m¨shÆ_VOID__DOUBLE
 (
GClosuª
 *
˛osuª
,

96 
GVÆue
 *
ªtu∫_vÆue
,

97 
guöt
 
n_∑øm_vÆues
,

98 c⁄° 
GVÆue
 *
∑øm_vÆues
,

99 
gpoöãr
 
övoˇti⁄_höt
,

100 
gpoöãr
 
m¨shÆ_d©a
);

103 
g_c˛osuª_m¨shÆ_VOID__STRING
 (
GClosuª
 *
˛osuª
,

104 
GVÆue
 *
ªtu∫_vÆue
,

105 
guöt
 
n_∑øm_vÆues
,

106 c⁄° 
GVÆue
 *
∑øm_vÆues
,

107 
gpoöãr
 
övoˇti⁄_höt
,

108 
gpoöãr
 
m¨shÆ_d©a
);

111 
g_c˛osuª_m¨shÆ_VOID__PARAM
 (
GClosuª
 *
˛osuª
,

112 
GVÆue
 *
ªtu∫_vÆue
,

113 
guöt
 
n_∑øm_vÆues
,

114 c⁄° 
GVÆue
 *
∑øm_vÆues
,

115 
gpoöãr
 
övoˇti⁄_höt
,

116 
gpoöãr
 
m¨shÆ_d©a
);

119 
g_c˛osuª_m¨shÆ_VOID__BOXED
 (
GClosuª
 *
˛osuª
,

120 
GVÆue
 *
ªtu∫_vÆue
,

121 
guöt
 
n_∑øm_vÆues
,

122 c⁄° 
GVÆue
 *
∑øm_vÆues
,

123 
gpoöãr
 
övoˇti⁄_höt
,

124 
gpoöãr
 
m¨shÆ_d©a
);

127 
g_c˛osuª_m¨shÆ_VOID__POINTER
 (
GClosuª
 *
˛osuª
,

128 
GVÆue
 *
ªtu∫_vÆue
,

129 
guöt
 
n_∑øm_vÆues
,

130 c⁄° 
GVÆue
 *
∑øm_vÆues
,

131 
gpoöãr
 
övoˇti⁄_höt
,

132 
gpoöãr
 
m¨shÆ_d©a
);

135 
g_c˛osuª_m¨shÆ_VOID__OBJECT
 (
GClosuª
 *
˛osuª
,

136 
GVÆue
 *
ªtu∫_vÆue
,

137 
guöt
 
n_∑øm_vÆues
,

138 c⁄° 
GVÆue
 *
∑øm_vÆues
,

139 
gpoöãr
 
övoˇti⁄_höt
,

140 
gpoöãr
 
m¨shÆ_d©a
);

143 
g_c˛osuª_m¨shÆ_VOID__UINT_POINTER
 (
GClosuª
 *
˛osuª
,

144 
GVÆue
 *
ªtu∫_vÆue
,

145 
guöt
 
n_∑øm_vÆues
,

146 c⁄° 
GVÆue
 *
∑øm_vÆues
,

147 
gpoöãr
 
övoˇti⁄_höt
,

148 
gpoöãr
 
m¨shÆ_d©a
);

151 
g_c˛osuª_m¨shÆ_BOOLEAN__FLAGS
 (
GClosuª
 *
˛osuª
,

152 
GVÆue
 *
ªtu∫_vÆue
,

153 
guöt
 
n_∑øm_vÆues
,

154 c⁄° 
GVÆue
 *
∑øm_vÆues
,

155 
gpoöãr
 
övoˇti⁄_höt
,

156 
gpoöãr
 
m¨shÆ_d©a
);

157 
	#g_c˛osuª_m¨shÆ_BOOL__FLAGS
 
g_c˛osuª_m¨shÆ_BOOLEAN__FLAGS


	)

160 
g_c˛osuª_m¨shÆ_STRING__OBJECT_POINTER
 (
GClosuª
 *
˛osuª
,

161 
GVÆue
 *
ªtu∫_vÆue
,

162 
guöt
 
n_∑øm_vÆues
,

163 c⁄° 
GVÆue
 *
∑øm_vÆues
,

164 
gpoöãr
 
övoˇti⁄_höt
,

165 
gpoöãr
 
m¨shÆ_d©a
);

167 
	gG_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-animation.h

27 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

31 #i‚de‡
GDK_PIXBUF_ANIMATION_H


32 
	#GDK_PIXBUF_ANIMATION_H


	)

34 
	~<glib-obje˘.h
>

35 
	~<gdk-pixbuf/gdk-pixbuf-c‹e.h
>

37 
G_BEGIN_DECLS


41 
_GdkPixbufAnim©i⁄
 
	tGdkPixbufAnim©i⁄
;

42 
_GdkPixbufAnim©i⁄Iãr
 
	tGdkPixbufAnim©i⁄Iãr
;

44 
	#GDK_TYPE_PIXBUF_ANIMATION
 (
	`gdk_pixbuf_™im©i⁄_gë_ty≥
 ())

	)

45 
	#GDK_PIXBUF_ANIMATION
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_PIXBUF_ANIMATION
, 
GdkPixbufAnim©i⁄
))

	)

46 
	#GDK_IS_PIXBUF_ANIMATION
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_PIXBUF_ANIMATION
))

	)

48 
	#GDK_TYPE_PIXBUF_ANIMATION_ITER
 (
	`gdk_pixbuf_™im©i⁄_ôî_gë_ty≥
 ())

	)

49 
	#GDK_PIXBUF_ANIMATION_ITER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_PIXBUF_ANIMATION_ITER
, 
GdkPixbufAnim©i⁄Iãr
))

	)

50 
	#GDK_IS_PIXBUF_ANIMATION_ITER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_PIXBUF_ANIMATION_ITER
))

	)

52 
GTy≥
 
	$gdk_pixbuf_™im©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

54 #ifde‡
G_OS_WIN32


55 
	#gdk_pixbuf_™im©i⁄_√w_‰om_fûe
 
gdk_pixbuf_™im©i⁄_√w_‰om_fûe_utf8


	)

58 
GdkPixbufAnim©i⁄
 *
	`gdk_pixbuf_™im©i⁄_√w_‰om_fûe
 (c⁄° *
fûíame
,

59 
GEº‹
 **
îr‹
);

61 #i‚de‡
GDK_PIXBUF_DISABLE_DEPRECATED


62 
GdkPixbufAnim©i⁄
 *
	`gdk_pixbuf_™im©i⁄_ªf
 (GdkPixbufAnim©i⁄ *
™im©i⁄
);

63 
	`gdk_pixbuf_™im©i⁄_uƒef
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

66 
	`gdk_pixbuf_™im©i⁄_gë_width
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

67 
	`gdk_pixbuf_™im©i⁄_gë_height
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

68 
gboﬁón
 
	`gdk_pixbuf_™im©i⁄_is_°©ic_image
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

69 
GdkPixbuf
 *
	`gdk_pixbuf_™im©i⁄_gë_°©ic_image
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
);

71 
GdkPixbufAnim©i⁄Iãr
 *
	`gdk_pixbuf_™im©i⁄_gë_ôî
 (
GdkPixbufAnim©i⁄
 *
™im©i⁄
,

72 c⁄° 
GTimeVÆ
 *
°¨t_time
);

73 
GTy≥
 
	$gdk_pixbuf_™im©i⁄_ôî_gë_ty≥
 (Ë
G_GNUC_CONST
;

74 
	`gdk_pixbuf_™im©i⁄_ôî_gë_dñay_time
 (
GdkPixbufAnim©i⁄Iãr
 *
ôî
);

75 
GdkPixbuf
 *
	`gdk_pixbuf_™im©i⁄_ôî_gë_pixbuf
 (
GdkPixbufAnim©i⁄Iãr
 *
ôî
);

76 
gboﬁón
 
	`gdk_pixbuf_™im©i⁄_ôî_⁄_cuºíéy_lﬂdög_‰ame
 (
GdkPixbufAnim©i⁄Iãr
 *
ôî
);

77 
gboﬁón
 
	`gdk_pixbuf_™im©i⁄_ôî_adv™˚
 (
GdkPixbufAnim©i⁄Iãr
 *
ôî
,

78 c⁄° 
GTimeVÆ
 *
cuºít_time
);

81 #ifde‡
GDK_PIXBUF_ENABLE_BACKEND


85 
_GdkPixbufAnim©i⁄Cœss
 
	tGdkPixbufAnim©i⁄Cœss
;

87 
	#GDK_PIXBUF_ANIMATION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_PIXBUF_ANIMATION
, 
GdkPixbufAnim©i⁄Cœss
))

	)

88 
	#GDK_IS_PIXBUF_ANIMATION_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_PIXBUF_ANIMATION
))

	)

89 
	#GDK_PIXBUF_ANIMATION_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_PIXBUF_ANIMATION
, 
GdkPixbufAnim©i⁄Cœss
))

	)

92 
	s_GdkPixbufAnim©i⁄
 {

93 
GObje˘
 
∑ª¡_ö°™˚
;

97 
	s_GdkPixbufAnim©i⁄Cœss
 {

98 
GObje˘Cœss
 
∑ª¡_˛ass
;

102 
	`gboﬁón
 (*
is_°©ic_image
Ë(
GdkPixbufAnim©i⁄
 *
™im
);

104 
GdkPixbuf
* (*
gë_°©ic_image
Ë(
GdkPixbufAnim©i⁄
 *
™im
);

106 (*
gë_size
Ë(
GdkPixbufAnim©i⁄
 *
™im
,

107 *
width
,

108 *
height
);

110 
GdkPixbufAnim©i⁄Iãr
* (*
gë_ôî
Ë(
GdkPixbufAnim©i⁄
 *
™im
,

111 c⁄° 
GTimeVÆ
 *
°¨t_time
);

117 
_GdkPixbufAnim©i⁄IãrCœss
 
	tGdkPixbufAnim©i⁄IãrCœss
;

119 
	#GDK_PIXBUF_ANIMATION_ITER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_PIXBUF_ANIMATION_ITER
, 
GdkPixbufAnim©i⁄IãrCœss
))

	)

120 
	#GDK_IS_PIXBUF_ANIMATION_ITER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_PIXBUF_ANIMATION_ITER
))

	)

121 
	#GDK_PIXBUF_ANIMATION_ITER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_PIXBUF_ANIMATION_ITER
, 
GdkPixbufAnim©i⁄IãrCœss
))

	)

123 
	s_GdkPixbufAnim©i⁄Iãr
 {

124 
GObje˘
 
∑ª¡_ö°™˚
;

128 
	s_GdkPixbufAnim©i⁄IãrCœss
 {

129 
GObje˘Cœss
 
∑ª¡_˛ass
;

133 (*
gë_dñay_time
Ë(
GdkPixbufAnim©i⁄Iãr
 *
ôî
);

135 
GdkPixbuf
* (*
gë_pixbuf
Ë(
GdkPixbufAnim©i⁄Iãr
 *
ôî
);

137 
	`gboﬁón
 (*
⁄_cuºíéy_lﬂdög_‰ame
Ë(
GdkPixbufAnim©i⁄Iãr
 *
ôî
);

139 
	`gboﬁón
 (*
adv™˚
Ë(
GdkPixbufAnim©i⁄Iãr
 *
ôî
,

140 c⁄° 
GTimeVÆ
 *
cuºít_time
);

144 
GTy≥
 
	$gdk_pixbuf_n⁄_™im_gë_ty≥
 (Ë
G_GNUC_CONST
;

145 
GdkPixbufAnim©i⁄
* 
	`gdk_pixbuf_n⁄_™im_√w
 (
GdkPixbuf
 *
pixbuf
);

149 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-core.h

26 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

30 #i‚de‡
GDK_PIXBUF_CORE_H


31 
	#GDK_PIXBUF_CORE_H


	)

33 
	~<glib.h
>

34 
	~<glib-obje˘.h
>

35 
	~<gio/gio.h
>

37 
G_BEGIN_DECLS


42 
	mGDK_PIXBUF_ALPHA_BILEVEL
,

43 
	mGDK_PIXBUF_ALPHA_FULL


44 } 
	tGdkPixbufAÕhaMode
;

51 
	mGDK_COLORSPACE_RGB


52 } 
	tGdkCﬁ‹•a˚
;

55 
_GdkPixbuf
 
	tGdkPixbuf
;

57 
	#GDK_TYPE_PIXBUF
 (
	`gdk_pixbuf_gë_ty≥
 ())

	)

58 
	#GDK_PIXBUF
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_PIXBUF
, 
GdkPixbuf
))

	)

59 
	#GDK_IS_PIXBUF
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_PIXBUF
))

	)

63 (* 
	tGdkPixbufDe°royNŸify
Ë(
	tguch¨
 *
	tpixñs
, 
	tgpoöãr
 
	td©a
);

65 
	#GDK_PIXBUF_ERROR
 
	`gdk_pixbuf_îr‹_qu¨k
 ()

	)

69 
GDK_PIXBUF_ERROR_CORRUPT_IMAGE
,

71 
GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY
,

73 
GDK_PIXBUF_ERROR_BAD_OPTION
,

75 
GDK_PIXBUF_ERROR_UNKNOWN_TYPE
,

77 
GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION
,

78 
GDK_PIXBUF_ERROR_FAILED


79 } 
	tGdkPixbufEº‹
;

81 
GQu¨k
 
	`gdk_pixbuf_îr‹_qu¨k
 ();

85 
GTy≥
 
	$gdk_pixbuf_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 #i‚de‡
GDK_PIXBUF_DISABLE_DEPRECATED


90 
GdkPixbuf
 *
	`gdk_pixbuf_ªf
 (GdkPixbu‡*
pixbuf
);

91 
	`gdk_pixbuf_uƒef
 (
GdkPixbuf
 *
pixbuf
);

96 
GdkCﬁ‹•a˚
 
	`gdk_pixbuf_gë_cﬁ‹•a˚
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

97 
	`gdk_pixbuf_gë_n_ch™√ls
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

98 
gboﬁón
 
	`gdk_pixbuf_gë_has_Æpha
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

99 
	`gdk_pixbuf_gë_bôs_≥r_ßm∂e
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

100 
guch¨
 *
	`gdk_pixbuf_gë_pixñs
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

101 
	`gdk_pixbuf_gë_width
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

102 
	`gdk_pixbuf_gë_height
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

103 
	`gdk_pixbuf_gë_row°ride
 (c⁄° 
GdkPixbuf
 *
pixbuf
);

108 
GdkPixbuf
 *
	`gdk_pixbuf_√w
 (
GdkCﬁ‹•a˚
 
cﬁ‹•a˚
, 
gboﬁón
 
has_Æpha
, 
bôs_≥r_ßm∂e
,

109 
width
, 
height
);

113 
GdkPixbuf
 *
	`gdk_pixbuf_c›y
 (c⁄° GdkPixbu‡*
pixbuf
);

116 
GdkPixbuf
 *
	`gdk_pixbuf_√w_subpixbuf
 (GdkPixbu‡*
§c_pixbuf
,

117 
§c_x
,

118 
§c_y
,

119 
width
,

120 
height
);

124 #ifde‡
G_OS_WIN32


126 
	#gdk_pixbuf_√w_‰om_fûe
 
gdk_pixbuf_√w_‰om_fûe_utf8


	)

127 
	#gdk_pixbuf_√w_‰om_fûe_©_size
 
gdk_pixbuf_√w_‰om_fûe_©_size_utf8


	)

128 
	#gdk_pixbuf_√w_‰om_fûe_©_sˇÀ
 
gdk_pixbuf_√w_‰om_fûe_©_sˇÀ_utf8


	)

131 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_fûe
 (c⁄° *
fûíame
,

132 
GEº‹
 **
îr‹
);

133 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_fûe_©_size
 (c⁄° *
fûíame
,

134 
width
,

135 
height
,

136 
GEº‹
 **
îr‹
);

137 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_fûe_©_sˇÀ
 (c⁄° *
fûíame
,

138 
width
,

139 
height
,

140 
gboﬁón
 
¥e£rve_a•e˘_øtio
,

141 
GEº‹
 **
îr‹
);

143 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_d©a
 (c⁄° 
guch¨
 *
d©a
,

144 
GdkCﬁ‹•a˚
 
cﬁ‹•a˚
,

145 
gboﬁón
 
has_Æpha
,

146 
bôs_≥r_ßm∂e
,

147 
width
, 
height
,

148 
row°ride
,

149 
GdkPixbufDe°royNŸify
 
de°roy_‚
,

150 
gpoöãr
 
de°roy_‚_d©a
);

152 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_xpm_d©a
 (c⁄° **
d©a
);

153 
GdkPixbuf
* 
	`gdk_pixbuf_√w_‰om_ölöe
 (
göt
 
d©a_Àngth
,

154 c⁄° 
guöt8
 *
d©a
,

155 
gboﬁón
 
c›y_pixñs
,

156 
GEº‹
 **
îr‹
);

159 
	`gdk_pixbuf_fûl
 (
GdkPixbuf
 *
pixbuf
,

160 
guöt32
 
pixñ
);

164 #ifde‡
G_OS_WIN32


166 
	#gdk_pixbuf_ßve
 
gdk_pixbuf_ßve_utf8


	)

167 
	#gdk_pixbuf_ßvev
 
gdk_pixbuf_ßvev_utf8


	)

170 
gboﬁón
 
	$gdk_pixbuf_ßve
 (
GdkPixbuf
 *
pixbuf
,

171 c⁄° *
fûíame
,

172 c⁄° *
ty≥
,

173 
GEº‹
 **
îr‹
,

174 ...Ë
G_GNUC_NULL_TERMINATED
;

176 
gboﬁón
 
	`gdk_pixbuf_ßvev
 (
GdkPixbuf
 *
pixbuf
,

177 c⁄° *
fûíame
,

178 c⁄° *
ty≥
,

179 **
›ti⁄_keys
,

180 **
›ti⁄_vÆues
,

181 
GEº‹
 **
îr‹
);

185 
	$gboﬁón
 (*
	tGdkPixbufSaveFunc
Ë(c⁄° 
	tgch¨
 *
	tbuf
,

186 
	tgsize
 
	tcou¡
,

187 
	tGEº‹
 **
	tîr‹
,

188 
	tgpoöãr
 
	td©a
);

190 
gboﬁón
 
	$gdk_pixbuf_ßve_to_ˇŒback
 (
GdkPixbuf
 *
pixbuf
,

191 
GdkPixbufSaveFunc
 
ßve_func
,

192 
gpoöãr
 
u£r_d©a
,

193 c⁄° *
ty≥
,

194 
GEº‹
 **
îr‹
,

195 ...Ë
G_GNUC_NULL_TERMINATED
;

197 
gboﬁón
 
	`gdk_pixbuf_ßve_to_ˇŒbackv
 (
GdkPixbuf
 *
pixbuf
,

198 
GdkPixbufSaveFunc
 
ßve_func
,

199 
gpoöãr
 
u£r_d©a
,

200 c⁄° *
ty≥
,

201 **
›ti⁄_keys
,

202 **
›ti⁄_vÆues
,

203 
GEº‹
 **
îr‹
);

207 
gboﬁón
 
	$gdk_pixbuf_ßve_to_buf„r
 (
GdkPixbuf
 *
pixbuf
,

208 
gch¨
 **
buf„r
,

209 
gsize
 *
buf„r_size
,

210 c⁄° *
ty≥
,

211 
GEº‹
 **
îr‹
,

212 ...Ë
G_GNUC_NULL_TERMINATED
;

214 
gboﬁón
 
	`gdk_pixbuf_ßve_to_buf„rv
 (
GdkPixbuf
 *
pixbuf
,

215 
gch¨
 **
buf„r
,

216 
gsize
 *
buf„r_size
,

217 c⁄° *
ty≥
,

218 **
›ti⁄_keys
,

219 **
›ti⁄_vÆues
,

220 
GEº‹
 **
îr‹
);

222 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_°ªam
 (
GI≈utSåóm
 *
°ªam
,

223 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

224 
GEº‹
 **
îr‹
);

226 
GdkPixbuf
 *
	`gdk_pixbuf_√w_‰om_°ªam_©_sˇÀ
 (
GI≈utSåóm
 *
°ªam
,

227 
göt
 
width
,

228 
göt
 
height
,

229 
gboﬁón
 
¥e£rve_a•e˘_øtio
,

230 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

231 
GEº‹
 **
îr‹
);

233 
gboﬁón
 
	`gdk_pixbuf_ßve_to_°ªam
 (
GdkPixbuf
 *
pixbuf
,

234 
GOuçutSåóm
 *
°ªam
,

235 c⁄° *
ty≥
,

236 
GC™˚ŒabÀ
 *
ˇn˚ŒabÀ
,

237 
GEº‹
 **
îr‹
,

241 
GdkPixbuf
 *
	`gdk_pixbuf_add_Æpha
 (c⁄° GdkPixbu‡*
pixbuf
, 
gboﬁón
 
sub°ôuã_cﬁ‹
,

242 
guch¨
 
r
, guch¨ 
g
, guch¨ 
b
);

245 
	`gdk_pixbuf_c›y_¨ó
 (c⁄° 
GdkPixbuf
 *
§c_pixbuf
,

246 
§c_x
, 
§c_y
,

247 
width
, 
height
,

248 
GdkPixbuf
 *
de°_pixbuf
,

249 
de°_x
, 
de°_y
);

252 
	`gdk_pixbuf_ßtuøã_™d_pixñ©e
 (c⁄° 
GdkPixbuf
 *
§c
,

253 
GdkPixbuf
 *
de°
,

254 
gÊﬂt
 
ßtuøti⁄
,

255 
gboﬁón
 
pixñ©e
);

258 
GdkPixbuf
 *
	`gdk_pixbuf_≠∂y_embedded_‹õ¡©i⁄
 (GdkPixbu‡*
§c
);

260 
G_CONST_RETURN
 
gch¨
 * 
	`gdk_pixbuf_gë_›ti⁄
 (
GdkPixbuf
 *
pixbuf
,

261 c⁄° 
gch¨
 *
key
);

264 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h

4 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

8 #i‚de‡
__GDK_PIXBUF_ENUM_TYPES_H__


9 
	#__GDK_PIXBUF_ENUM_TYPES_H__


	)

11 
	~<glib-obje˘.h
>

13 
G_BEGIN_DECLS


16 
GTy≥
 
	$gdk_pixbuf_Æpha_mode_gë_ty≥
 (Ë
G_GNUC_CONST
;

17 
	#GDK_TYPE_PIXBUF_ALPHA_MODE
 (
	`gdk_pixbuf_Æpha_mode_gë_ty≥
 ())

	)

18 
GTy≥
 
	$gdk_cﬁ‹•a˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

19 
	#GDK_TYPE_COLORSPACE
 (
	`gdk_cﬁ‹•a˚_gë_ty≥
 ())

	)

20 
GTy≥
 
	$gdk_pixbuf_îr‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

21 
	#GDK_TYPE_PIXBUF_ERROR
 (
	`gdk_pixbuf_îr‹_gë_ty≥
 ())

	)

24 
GTy≥
 
	$gdk_öãΩ_ty≥_gë_ty≥
 (Ë
G_GNUC_CONST
;

25 
	#GDK_TYPE_INTERP_TYPE
 (
	`gdk_öãΩ_ty≥_gë_ty≥
 ())

	)

26 
GTy≥
 
	$gdk_pixbuf_rŸ©i⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

27 
	#GDK_TYPE_PIXBUF_ROTATION
 (
	`gdk_pixbuf_rŸ©i⁄_gë_ty≥
 ())

	)

28 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-features.h

1 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

5 #i‚de‡
GDK_PIXBUF_FEATURES_H


6 
	#GDK_PIXBUF_FEATURES_H
 1

	)

8 
	#GDK_PIXBUF_MAJOR
 (2)

	)

9 
	#GDK_PIXBUF_MINOR
 (16)

	)

10 
	#GDK_PIXBUF_MICRO
 (1)

	)

11 
	#GDK_PIXBUF_VERSION
 "2.16.1"

	)

16 #ifde‡
G_PLATFORM_WIN32


17 #ifde‡
GDK_PIXBUF_STATIC_COMPILATION


18 
	#GDK_PIXBUF_VAR
 

	)

20 #ifde‡
GDK_PIXBUF_C_COMPILATION


21 #ifde‡
DLL_EXPORT


22 
	#GDK_PIXBUF_VAR
 
	`__de˛•ec
(
dŒexp‹t
)

	)

24 
	#GDK_PIXBUF_VAR
 

	)

27 
	#GDK_PIXBUF_VAR
 
	`__de˛•ec
(
dŒimp‹t
)

	)

31 
	#GDK_PIXBUF_VAR
 

	)

34 
GDK_PIXBUF_VAR
 c⁄° 
guöt
 
gdk_pixbuf_maj‹_vîsi⁄
;

35 
GDK_PIXBUF_VAR
 c⁄° 
guöt
 
	ggdk_pixbuf_mö‹_vîsi⁄
;

36 
GDK_PIXBUF_VAR
 c⁄° 
guöt
 
	ggdk_pixbuf_mi¸o_vîsi⁄
;

37 
GDK_PIXBUF_VAR
 c⁄° *
	ggdk_pixbuf_vîsi⁄
;

	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-io.h

29 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

33 #i‚de‡
GDK_PIXBUF_IO_H


34 
	#GDK_PIXBUF_IO_H


	)

36 
	~<°dio.h
>

37 
	~<glib.h
>

38 
	~<gmoduÀ.h
>

39 
	~<gdk-pixbuf/gdk-pixbuf-c‹e.h
>

40 
	~<gdk-pixbuf/gdk-pixbuf-™im©i⁄.h
>

42 
G_BEGIN_DECLS


44 
_GdkPixbufF‹m©
 
	tGdkPixbufF‹m©
;

46 
GSLi°
 *
gdk_pixbuf_gë_f‹m©s
 ();

47 
gch¨
 *
gdk_pixbuf_f‹m©_gë_«me
 (
GdkPixbufF‹m©
 *
f‹m©
);

48 
gch¨
 *
gdk_pixbuf_f‹m©_gë_des¸ùti⁄
 (
GdkPixbufF‹m©
 *
f‹m©
);

49 
gch¨
 **
gdk_pixbuf_f‹m©_gë_mime_ty≥s
 (
GdkPixbufF‹m©
 *
f‹m©
);

50 
gch¨
 **
gdk_pixbuf_f‹m©_gë_exãnsi⁄s
 (
GdkPixbufF‹m©
 *
f‹m©
);

51 
gboﬁón
 
gdk_pixbuf_f‹m©_is_wrôabÀ
 (
GdkPixbufF‹m©
 *
f‹m©
);

52 
gboﬁón
 
gdk_pixbuf_f‹m©_is_sˇœbÀ
 (
GdkPixbufF‹m©
 *
f‹m©
);

53 
gboﬁón
 
gdk_pixbuf_f‹m©_is_dißbÀd
 (
GdkPixbufF‹m©
 *
f‹m©
);

54 
gdk_pixbuf_f‹m©_£t_dißbÀd
 (
GdkPixbufF‹m©
 *
f‹m©
,

55 
gboﬁón
 
dißbÀd
);

56 
gch¨
 *
gdk_pixbuf_f‹m©_gë_li˚n£
 (
GdkPixbufF‹m©
 *
f‹m©
);

58 
GdkPixbufF‹m©
 *
gdk_pixbuf_gë_fûe_öfo
 (c⁄° 
gch¨
 *
fûíame
,

59 
göt
 *
width
,

60 
göt
 *
height
);

62 #ifde‡
GDK_PIXBUF_ENABLE_BACKEND


66 (* 
	tGdkPixbufModuÀSizeFunc
Ë(
	tgöt
 *
	twidth
,

67 
	tgöt
 *
	theight
,

68 
	tgpoöãr
 
	tu£r_d©a
);

70 (* 
	tGdkPixbufModuÀPª∑ªdFunc
Ë(
	tGdkPixbuf
 *
	tpixbuf
,

71 
	tGdkPixbufAnim©i⁄
 *
	t™im
,

72 
	tgpoöãr
 
	tu£r_d©a
);

73 (* 
	tGdkPixbufModuÀUpd©edFunc
Ë(
	tGdkPixbuf
 *
	tpixbuf
,

74 
	tx
,

75 
	ty
,

76 
	twidth
,

77 
	theight
,

78 
	tgpoöãr
 
	tu£r_d©a
);

80 
_GdkPixbufModuÀP©ã∫
 
	tGdkPixbufModuÀP©ã∫
;

81 
	s_GdkPixbufModuÀP©ã∫
 {

82 *
¥efix
;

83 *
mask
;

84 
ªÀv™˚
;

87 
_GdkPixbufModuÀ
 
	tGdkPixbufModuÀ
;

88 
	s_GdkPixbufModuÀ
 {

89 *
moduÀ_«me
;

90 *
moduÀ_∑th
;

91 
GModuÀ
 *
moduÀ
;

92 
GdkPixbufF‹m©
 *
öfo
;

94 
GdkPixbuf
 *(* 
lﬂd
Ë(
FILE
 *
f
,

95 
GEº‹
 **
îr‹
);

96 
GdkPixbuf
 *(* 
lﬂd_xpm_d©a
Ë(c⁄° **
d©a
);

100 
	`gpoöãr
 (* 
begö_lﬂd
Ë(
GdkPixbufModuÀSizeFunc
 
size_func
,

101 
GdkPixbufModuÀPª∑ªdFunc
 
¥ï¨e_func
,

102 
GdkPixbufModuÀUpd©edFunc
 
upd©e_func
,

103 
gpoöãr
 
u£r_d©a
,

104 
GEº‹
 **
îr‹
);

105 
	`gboﬁón
 (* 
°›_lﬂd
Ë(
gpoöãr
 
c⁄ãxt
,

106 
GEº‹
 **
îr‹
);

107 
	`gboﬁón
 (* 
lﬂd_ö¸emít
Ë(
gpoöãr
 
c⁄ãxt
,

108 c⁄° 
guch¨
 *
buf
,

109 
guöt
 
size
,

110 
GEº‹
 **
îr‹
);

113 
GdkPixbufAnim©i⁄
 *(* 
lﬂd_™im©i⁄
Ë(
FILE
 *
f
,

114 
GEº‹
 **
îr‹
);

117 
	`gboﬁón
 (* 
ßve
Ë(
FILE
 *
f
,

118 
GdkPixbuf
 *
pixbuf
,

119 
gch¨
 **
∑øm_keys
,

120 
gch¨
 **
∑øm_vÆues
,

121 
GEº‹
 **
îr‹
);

123 
	`gboﬁón
 (*
ßve_to_ˇŒback
Ë(
GdkPixbufSaveFunc
 
ßve_func
,

124 
gpoöãr
 
u£r_d©a
,

125 
GdkPixbuf
 *
pixbuf
,

126 
gch¨
 **
›ti⁄_keys
,

127 
gch¨
 **
›ti⁄_vÆues
,

128 
GEº‹
 **
îr‹
);

131 (*
_ª£rved1
) ();

132 (*
_ª£rved2
) ();

133 (*
_ª£rved3
) ();

134 (*
_ª£rved4
) ();

135 (*
_ª£rved5
) ();

139 (* 
	tGdkPixbufModuÀFûlVèbÀFunc
Ë(
	tGdkPixbufModuÀ
 *
	tmoduÀ
);

140 (* 
	tGdkPixbufModuÀFûlInfoFunc
Ë(
	tGdkPixbufF‹m©
 *
	töfo
);

144 
gboﬁón
 
	`gdk_pixbuf_£t_›ti⁄
 (
GdkPixbuf
 *
pixbuf
,

145 c⁄° 
gch¨
 *
key
,

146 c⁄° 
gch¨
 *
vÆue
);

150 
GDK_PIXBUF_FORMAT_WRITABLE
 = 1 << 0,

151 
GDK_PIXBUF_FORMAT_SCALABLE
 = 1 << 1,

152 
GDK_PIXBUF_FORMAT_THREADSAFE
 = 1 << 2

153 } 
	tGdkPixbufF‹m©Fœgs
;

155 
	s_GdkPixbufF‹m©
 {

156 
gch¨
 *
«me
;

157 
GdkPixbufModuÀP©ã∫
 *
sig«tuª
;

158 
gch¨
 *
domaö
;

159 
gch¨
 *
des¸ùti⁄
;

160 
gch¨
 **
mime_ty≥s
;

161 
gch¨
 **
exãnsi⁄s
;

162 
guöt32
 
Êags
;

163 
gboﬁón
 
dißbÀd
;

164 
gch¨
 *
li˚n£
;

170 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-loader.h

26 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

30 #i‚de‡
GDK_PIXBUF_LOADER_H


31 
	#GDK_PIXBUF_LOADER_H


	)

33 
	~<glib.h
>

34 
	~<glib-obje˘.h
>

35 
	~<gdk-pixbuf/gdk-pixbuf-c‹e.h
>

36 
	~<gdk-pixbuf/gdk-pixbuf-™im©i⁄.h
>

37 
	~<gdk-pixbuf/gdk-pixbuf-io.h
>

39 
	gG_BEGIN_DECLS


41 
	#GDK_TYPE_PIXBUF_LOADER
 (
	`gdk_pixbuf_lﬂdî_gë_ty≥
 ())

	)

42 
	#GDK_PIXBUF_LOADER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
GDK_TYPE_PIXBUF_LOADER
, 
GdkPixbufLﬂdî
))

	)

43 
	#GDK_PIXBUF_LOADER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_PIXBUF_LOADER
, 
GdkPixbufLﬂdîCœss
))

	)

44 
	#GDK_IS_PIXBUF_LOADER
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
GDK_TYPE_PIXBUF_LOADER
))

	)

45 
	#GDK_IS_PIXBUF_LOADER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_PIXBUF_LOADER
))

	)

46 
	#GDK_PIXBUF_LOADER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_PIXBUF_LOADER
, 
GdkPixbufLﬂdîCœss
))

	)

49 
_GdkPixbufLﬂdî
 
	tGdkPixbufLﬂdî
;

50 
	s_GdkPixbufLﬂdî


52 
GObje˘
 
	m∑ª¡_ö°™˚
;

55 
gpoöãr
 
	m¥iv
;

58 
_GdkPixbufLﬂdîCœss
 
	tGdkPixbufLﬂdîCœss
;

59 
	s_GdkPixbufLﬂdîCœss


61 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

63 (*
	msize_¥ï¨ed
Ë(
GdkPixbufLﬂdî
 *
	mlﬂdî
,

64 
	mwidth
,

65 
	mheight
);

67 (*
	m¨ó_¥ï¨ed
Ë(
GdkPixbufLﬂdî
 *
	mlﬂdî
);

70 (*
	m¨ó_upd©ed
Ë(
GdkPixbufLﬂdî
 *
	mlﬂdî
,

71 
	mx
,

72 
	my
,

73 
	mwidth
,

74 
	mheight
);

76 (*
	m˛o£d
Ë(
GdkPixbufLﬂdî
 *
	mlﬂdî
);

79 
GTy≥
 
	$gdk_pixbuf_lﬂdî_gë_ty≥
 (Ë
G_GNUC_CONST
;

80 
GdkPixbufLﬂdî
 * 
	`gdk_pixbuf_lﬂdî_√w
 ();

81 
GdkPixbufLﬂdî
 * 
	`gdk_pixbuf_lﬂdî_√w_wôh_ty≥
 (c⁄° *
image_ty≥
,

82 
GEº‹
 **
îr‹
);

83 
GdkPixbufLﬂdî
 * 
	`gdk_pixbuf_lﬂdî_√w_wôh_mime_ty≥
 (c⁄° *
mime_ty≥
,

84 
GEº‹
 **
îr‹
);

85 
	`gdk_pixbuf_lﬂdî_£t_size
 (
GdkPixbufLﬂdî
 *
lﬂdî
,

86 
width
,

87 
height
);

88 
gboﬁón
 
	`gdk_pixbuf_lﬂdî_wrôe
 (
GdkPixbufLﬂdî
 *
lﬂdî
,

89 c⁄° 
guch¨
 *
buf
,

90 
gsize
 
cou¡
,

91 
GEº‹
 **
îr‹
);

92 
GdkPixbuf
 * 
	`gdk_pixbuf_lﬂdî_gë_pixbuf
 (
GdkPixbufLﬂdî
 *
lﬂdî
);

93 
GdkPixbufAnim©i⁄
 * 
	`gdk_pixbuf_lﬂdî_gë_™im©i⁄
 (
GdkPixbufLﬂdî
 *
lﬂdî
);

94 
gboﬁón
 
	`gdk_pixbuf_lﬂdî_˛o£
 (
GdkPixbufLﬂdî
 *
lﬂdî
,

95 
GEº‹
 **
îr‹
);

96 
GdkPixbufF‹m©
 *
	`gdk_pixbuf_lﬂdî_gë_f‹m©
 (
GdkPixbufLﬂdî
 *
lﬂdî
);

98 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h

24 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

28 #i‚de‡
GDK_PIXBUF_SIMPLE_ANIM_H


29 
	#GDK_PIXBUF_SIMPLE_ANIM_H


	)

31 
	~<gdk-pixbuf/gdk-pixbuf-™im©i⁄.h
>

33 
G_BEGIN_DECLS


35 
_GdkPixbufSim∂eAnim
 
	tGdkPixbufSim∂eAnim
;

36 
_GdkPixbufSim∂eAnimCœss
 
	tGdkPixbufSim∂eAnimCœss
;

38 
	#GDK_TYPE_PIXBUF_SIMPLE_ANIM
 (
	`gdk_pixbuf_sim∂e_™im_gë_ty≥
 ())

	)

39 
	#GDK_PIXBUF_SIMPLE_ANIM
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
GDK_TYPE_PIXBUF_SIMPLE_ANIM
, 
GdkPixbufSim∂eAnim
))

	)

40 
	#GDK_IS_PIXBUF_SIMPLE_ANIM
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
GDK_TYPE_PIXBUF_SIMPLE_ANIM
))

	)

42 
	#GDK_PIXBUF_SIMPLE_ANIM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
GDK_TYPE_PIXBUF_SIMPLE_ANIM
, 
GdkPixbufSim∂eAnimCœss
))

	)

43 
	#GDK_IS_PIXBUF_SIMPLE_ANIM_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
GDK_TYPE_PIXBUF_SIMPLE_ANIM
))

	)

44 
	#GDK_PIXBUF_SIMPLE_ANIM_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
GDK_TYPE_PIXBUF_SIMPLE_ANIM
, 
GdkPixbufSim∂eAnimCœss
))

	)

46 
GTy≥
 
	$gdk_pixbuf_sim∂e_™im_gë_ty≥
 (Ë
G_GNUC_CONST
;

47 
GTy≥
 
	$gdk_pixbuf_sim∂e_™im_ôî_gë_ty≥
 (Ë
G_GNUC_CONST
;

49 
GdkPixbufSim∂eAnim
 *
	`gdk_pixbuf_sim∂e_™im_√w
 (
göt
 
width
,

50 
göt
 
height
,

51 
gÊﬂt
 
øã
);

52 
	`gdk_pixbuf_sim∂e_™im_add_‰ame
 (
GdkPixbufSim∂eAnim
 *
™im©i⁄
,

53 
GdkPixbuf
 *
pixbuf
);

55 
G_END_DECLS


	@/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-transform.h

26 #i‡
deföed
(
GDK_PIXBUF_DISABLE_SINGLE_INCLUDES
Ë&& !deföed (
GDK_PIXBUF_H_INSIDE
Ë&& !deföed (
GDK_PIXBUF_COMPILATION
)

30 #i‚de‡
GDK_PIXBUF_TRANSFORM_H


31 
	#GDK_PIXBUF_TRANSFORM_H


	)

33 
	~<glib.h
>

34 
	~<gdk-pixbuf/gdk-pixbuf-c‹e.h
>

37 
G_BEGIN_DECLS


43 
	mGDK_INTERP_NEAREST
,

44 
	mGDK_INTERP_TILES
,

45 
	mGDK_INTERP_BILINEAR
,

46 
	mGDK_INTERP_HYPER


47 } 
	tGdkI¡îpTy≥
;

50 
	mGDK_PIXBUF_ROTATE_NONE
 = 0,

51 
	mGDK_PIXBUF_ROTATE_COUNTERCLOCKWISE
 = 90,

52 
	mGDK_PIXBUF_ROTATE_UPSIDEDOWN
 = 180,

53 
	mGDK_PIXBUF_ROTATE_CLOCKWISE
 = 270

54 } 
	tGdkPixbufRŸ©i⁄
;

56 
gdk_pixbuf_sˇÀ
 (c⁄° 
GdkPixbuf
 *
§c
,

57 
GdkPixbuf
 *
de°
,

58 
de°_x
,

59 
de°_y
,

60 
de°_width
,

61 
de°_height
,

62 
off£t_x
,

63 
off£t_y
,

64 
sˇÀ_x
,

65 
sˇÀ_y
,

66 
GdkI¡îpTy≥
 
öãΩ_ty≥
);

67 
gdk_pixbuf_composôe
 (c⁄° 
GdkPixbuf
 *
§c
,

68 
GdkPixbuf
 *
de°
,

69 
de°_x
,

70 
de°_y
,

71 
de°_width
,

72 
de°_height
,

73 
off£t_x
,

74 
off£t_y
,

75 
sˇÀ_x
,

76 
sˇÀ_y
,

77 
GdkI¡îpTy≥
 
öãΩ_ty≥
,

78 
ovîÆl_Æpha
);

79 
gdk_pixbuf_composôe_cﬁ‹
 (c⁄° 
GdkPixbuf
 *
§c
,

80 
GdkPixbuf
 *
de°
,

81 
de°_x
,

82 
de°_y
,

83 
de°_width
,

84 
de°_height
,

85 
off£t_x
,

86 
off£t_y
,

87 
sˇÀ_x
,

88 
sˇÀ_y
,

89 
GdkI¡îpTy≥
 
öãΩ_ty≥
,

90 
ovîÆl_Æpha
,

91 
check_x
,

92 
check_y
,

93 
check_size
,

94 
guöt32
 
cﬁ‹1
,

95 
guöt32
 
cﬁ‹2
);

97 
GdkPixbuf
 *
gdk_pixbuf_sˇÀ_sim∂e
 (c⁄° GdkPixbu‡*
§c
,

98 
de°_width
,

99 
de°_height
,

100 
GdkI¡îpTy≥
 
öãΩ_ty≥
);

102 
GdkPixbuf
 *
gdk_pixbuf_composôe_cﬁ‹_sim∂e
 (c⁄° GdkPixbu‡*
§c
,

103 
de°_width
,

104 
de°_height
,

105 
GdkI¡îpTy≥
 
öãΩ_ty≥
,

106 
ovîÆl_Æpha
,

107 
check_size
,

108 
guöt32
 
cﬁ‹1
,

109 
guöt32
 
cﬁ‹2
);

111 
GdkPixbuf
 *
gdk_pixbuf_rŸ©e_sim∂e
 (c⁄° GdkPixbu‡*
§c
,

112 
GdkPixbufRŸ©i⁄
 
™gÀ
);

113 
GdkPixbuf
 *
gdk_pixbuf_Êù
 (c⁄° GdkPixbu‡*
§c
,

114 
gboﬁón
 
h‹iz⁄èl
);

116 
	gG_END_DECLS


	@/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-sync.h

11 #i‚de‡
_BONOBO_UI_SYNC_H_


12 
	#_BONOBO_UI_SYNC_H_


	)

15 #ifde‡
BONOBO_UI_INTERNAL


17 
	~<°dio.h
>

18 
	~<glib.h
>

19 
	~<gtk/gtk.h
>

20 
	~<b⁄obo/b⁄obo-ui-node.h
>

22 
_B⁄oboUISync
 
	tB⁄oboUISync
;

24 
	~<b⁄obo/b⁄obo-ui-ígöe.h
>

26 
	gG_BEGIN_DECLS


28 
	#BONOBO_TYPE_UI_SYNC
 (
	`b⁄obo_ui_sync_gë_ty≥
 ())

	)

29 
	#BONOBO_UI_SYNC
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obj), 
BONOBO_TYPE_UI_SYNC
, 
B⁄oboUISync
))

	)

30 
	#BONOBO_UI_SYNC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
BONOBO_TYPE_UI_SYNC
, 
B⁄oboUISyncCœss
))

	)

31 
	#BONOBO_IS_UI_SYNC
(
obj
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obj), 
BONOBO_TYPE_UI_SYNC
))

	)

32 
	#BONOBO_IS_UI_SYNC_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
BONOBO_TYPE_UI_SYNC
))

	)

34 (*
	tB⁄oboUISyncSèãFn
Ë(
	tB⁄oboUISync
 *
	tsync
,

35 
	tB⁄oboUINode
 *
	tnode
,

36 
	tB⁄oboUINode
 *
	tcmd_node
,

37 
	tGtkWidgë
 *
	twidgë
,

38 
	tGtkWidgë
 *
	t∑ª¡
);

40 
GtkWidgë
 *(*
	tB⁄oboUISyncBuûdFn
Ë(
	tB⁄oboUISync
 *
	tsync
,

41 
	tB⁄oboUINode
 *
	tnode
,

42 
	tB⁄oboUINode
 *
	tcmd_node
,

43 *
	tpos
,

44 
	tGtkWidgë
 *
	t∑ª¡
);

46 
_B⁄oboUISyncPriv©e
 
	tB⁄oboUISyncPriv©e
;

48 
	s_B⁄oboUISync
 {

49 
GObje˘
 
∑ª¡
;

51 
B⁄oboUIEngöe
 *
ígöe
;

52 
gboﬁón
 
is_ªcursive
;

53 
gboﬁón
 
has_widgës
;

55 
B⁄oboUISyncPriv©e
 *
¥iv
;

59 
GObje˘Cœss
 
∑ª¡_˛ass
;

61 
B⁄oboUISyncSèãFn
 
sync_°©e
;

62 
B⁄oboUISyncSèãFn
 
sync_°©e_∂a˚hﬁdî
;

63 
B⁄oboUISyncBuûdFn
 
buûd
;

64 
B⁄oboUISyncBuûdFn
 
buûd_∂a˚hﬁdî
;

66 (*
upd©e_roŸ
Ë(
B⁄oboUISync
 *
sync
,

67 
B⁄oboUINode
 *
roŸ
);

69 (*
ªmove_roŸ
Ë(
B⁄oboUISync
 *
sync
,

70 
B⁄oboUINode
 *
roŸ
);

72 
GLi°
 *(*
gë_widgës
Ë(
B⁄oboUISync
 *
sync
,

73 
B⁄oboUINode
 *
node
);

75 (*
°©e_upd©e
Ë(
B⁄oboUISync
 *
sync
,

76 
GtkWidgë
 *
widgë
,

77 c⁄° *
√w_°©e
);

79 
	`gboﬁón
 (*
ign‹e_widgë
Ë(
B⁄oboUISync
 *
sync
,

80 
GtkWidgë
 *
widgë
);

82 
	`gboﬁón
 (*
ˇn_h™dÀ
Ë(
B⁄oboUISync
 *
sync
,

83 
B⁄oboUINode
 *
node
);

85 (*
°amp_roŸ
Ë(
B⁄oboUISync
 *
sync
);

87 
GtkWidgë
 *(*
gë_©èched
Ë(
B⁄oboUISync
 *
sync
,

88 
GtkWidgë
 *
widgë
,

89 
B⁄oboUINode
 *
node
);

91 
GtkWidgë
 *(*
wøp_widgë
Ë(
B⁄oboUISync
 *
sync
,

92 
GtkWidgë
 *
cu°om_widgë
);

93 } 
	tB⁄oboUISyncCœss
;

95 
GTy≥
 
	$b⁄obo_ui_sync_gë_ty≥
 (Ë
G_GNUC_CONST
;

96 
B⁄oboUISync
 *
	`b⁄obo_ui_sync_c⁄°ru˘
 (B⁄oboUISyn¯*
sync
,

97 
B⁄oboUIEngöe
 *
ígöe
,

98 
gboﬁón
 
is_ªcursive
,

99 
gboﬁón
 
has_widgës
);

101 
gboﬁón
 
	`b⁄obo_ui_sync_is_ªcursive
 (
B⁄oboUISync
 *
sync
);

102 
gboﬁón
 
	`b⁄obo_ui_sync_has_widgës
 (
B⁄oboUISync
 *
sync
);

104 
	`b⁄obo_ui_sync_ªmove_roŸ
 (
B⁄oboUISync
 *
sync
,

105 
B⁄oboUINode
 *
roŸ
);

106 
	`b⁄obo_ui_sync_upd©e_roŸ
 (
B⁄oboUISync
 *
sync
,

107 
B⁄oboUINode
 *
roŸ
);

109 
	`b⁄obo_ui_sync_°©e
 (
B⁄oboUISync
 *
sync
,

110 
B⁄oboUINode
 *
node
,

111 
B⁄oboUINode
 *
cmd_node
,

112 
GtkWidgë
 *
widgë
,

113 
GtkWidgë
 *
∑ª¡
);

114 
	`b⁄obo_ui_sync_°©e_∂a˚hﬁdî
 (
B⁄oboUISync
 *
sync
,

115 
B⁄oboUINode
 *
node
,

116 
B⁄oboUINode
 *
cmd_node
,

117 
GtkWidgë
 *
widgë
,

118 
GtkWidgë
 *
∑ª¡
);

120 
GtkWidgë
 *
	`b⁄obo_ui_sync_buûd
 (
B⁄oboUISync
 *
sync
,

121 
B⁄oboUINode
 *
node
,

122 
B⁄oboUINode
 *
cmd_node
,

123 *
pos
,

124 
GtkWidgë
 *
∑ª¡
);

125 
GtkWidgë
 *
	`b⁄obo_ui_sync_buûd_∂a˚hﬁdî
 (
B⁄oboUISync
 *
sync
,

126 
B⁄oboUINode
 *
node
,

127 
B⁄oboUINode
 *
cmd_node
,

128 *
pos
,

129 
GtkWidgë
 *
∑ª¡
);

131 
gboﬁón
 
	`b⁄obo_ui_sync_ign‹e_widgë
 (
B⁄oboUISync
 *
sync
,

132 
GtkWidgë
 *
widgë
);

134 
GLi°
 *
	`b⁄obo_ui_sync_gë_widgës
 (
B⁄oboUISync
 *
sync
,

135 
B⁄oboUINode
 *
node
);

137 
	`b⁄obo_ui_sync_°amp_roŸ
 (
B⁄oboUISync
 *
sync
);

139 
gboﬁón
 
	`b⁄obo_ui_sync_ˇn_h™dÀ
 (
B⁄oboUISync
 *
sync
,

140 
B⁄oboUINode
 *
node
);

142 
GtkWidgë
 *
	`b⁄obo_ui_sync_gë_©èched
 (
B⁄oboUISync
 *
sync
,

143 
GtkWidgë
 *
widgë
,

144 
B⁄oboUINode
 *
node
);

146 
	`b⁄obo_ui_sync_°©e_upd©e
 (
B⁄oboUISync
 *
sync
,

147 
GtkWidgë
 *
widgë
,

148 c⁄° *
√w_°©e
);

150 
gboﬁón
 
	`b⁄obo_ui_sync_do_show_hide
 (
B⁄oboUISync
 *
sync
,

151 
B⁄oboUINode
 *
node
,

152 
B⁄oboUINode
 *
cmd_node
,

153 
GtkWidgë
 *
widgë
);

155 
GtkWidgë
 *
	`b⁄obo_ui_sync_wøp_widgë
 (
B⁄oboUISync
 *
sync
,

156 
GtkWidgë
 *
cu°om_widgë
);

163 
GTy≥
 
	`b⁄obo_ui_sync_keys_gë_ty≥
 ();

164 
GTy≥
 
	`b⁄obo_ui_sync_míu_gë_ty≥
 ();

165 
GTy≥
 
	`b⁄obo_ui_sync_°©us_gë_ty≥
 ();

166 
GTy≥
 
	`b⁄obo_ui_sync_toﬁb¨_gë_ty≥
 ();

168 
G_END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/orbit-2.0/orbit/dynamic/dynamic-defs.h

5 #i‚de‡
dy«mic_defs_H


6 
	#dy«mic_defs_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynAny
Ë&& !deföed(
_Dy«micAny_DynAny_deföed
)

18 
	#ORBIT_DECL_Dy«micAny_DynAny
 1

	)

19 
	#_Dy«micAny_DynAny_deföed
 1

	)

20 
Dy«micAny_DynAny_ty≥
 *
	tDy«micAny_DynAny
;

21 #i‚de‡
TC_Dy«micAny_DynAny


22 
	#TC_Dy«micAny_DynAny
 
TC_CORBA_Obje˘


	)

25 #unde‡
ex_Dy«micAny_DynAny_InvÆidVÆue


26 
	#ex_Dy«micAny_DynAny_InvÆidVÆue
 "IDL:omg.‹g/Dy«micAny/DynAny/InvÆidVÆue:1.0"

	)

27 #i‡!
deföed
(
_Dy«micAny_DynAny_InvÆidVÆue_deföed
)

28 
	#_Dy«micAny_DynAny_InvÆidVÆue_deföed
 1

	)

29 
Dy«micAny_DynAny_InvÆidVÆue_ty≥
 
	tDy«micAny_DynAny_InvÆidVÆue
;

30 
	sDy«micAny_DynAny_InvÆidVÆue_ty≥
 {

31 
	gdummy
;

34 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_0
)

35 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_0
 'd'

	)

36 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_1
 'y'

	)

37 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_2
 'n'

	)

38 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_3
 'a'

	)

39 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_4
 'm'

	)

40 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_5
 'i'

	)

41 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_6
 'c'

	)

42 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_7
 '_'

	)

43 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_8
 'd'

	)

44 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_9
 'e'

	)

45 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_10
 'f'

	)

46 
	#TC_IMPL_TC_Dy«micAny_DynAny_InvÆidVÆue_11
 's'

	)

47 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


52 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_DynAny_InvÆidVÆue_°ru˘
;

53 
	#TC_Dy«micAny_DynAny_InvÆidVÆue
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_DynAny_InvÆidVÆue_°ru˘
)

	)

55 
	#Dy«micAny_DynAny_InvÆidVÆue__Æloc
(Ë((
Dy«micAny_DynAny_InvÆidVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_Dy«micAny_DynAny_InvÆidVÆue
))

	)

56 
	#Dy«micAny_DynAny_InvÆidVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_Dy«micAny_DynAny_InvÆidVÆue
,(m),(d))

	)

58 #unde‡
ex_Dy«micAny_DynAny_Ty≥Mism©ch


59 
	#ex_Dy«micAny_DynAny_Ty≥Mism©ch
 "IDL:omg.‹g/Dy«micAny/DynAny/Ty≥Mism©ch:1.0"

	)

60 #i‡!
deföed
(
_Dy«micAny_DynAny_Ty≥Mism©ch_deföed
)

61 
	#_Dy«micAny_DynAny_Ty≥Mism©ch_deföed
 1

	)

62 
Dy«micAny_DynAny_Ty≥Mism©ch_ty≥
 
	tDy«micAny_DynAny_Ty≥Mism©ch
;

63 
	sDy«micAny_DynAny_Ty≥Mism©ch_ty≥
 {

64 
	gdummy
;

67 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_0
)

68 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_0
 'd'

	)

69 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_1
 'y'

	)

70 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_2
 'n'

	)

71 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_3
 'a'

	)

72 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_4
 'm'

	)

73 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_5
 'i'

	)

74 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_6
 'c'

	)

75 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_7
 '_'

	)

76 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_8
 'd'

	)

77 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_9
 'e'

	)

78 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_10
 'f'

	)

79 
	#TC_IMPL_TC_Dy«micAny_DynAny_Ty≥Mism©ch_11
 's'

	)

80 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


85 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_DynAny_Ty≥Mism©ch_°ru˘
;

86 
	#TC_Dy«micAny_DynAny_Ty≥Mism©ch
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_DynAny_Ty≥Mism©ch_°ru˘
)

	)

88 
	#Dy«micAny_DynAny_Ty≥Mism©ch__Æloc
(Ë((
Dy«micAny_DynAny_Ty≥Mism©ch
 *)
	`ORBô_smÆl_Æloc
 (
TC_Dy«micAny_DynAny_Ty≥Mism©ch
))

	)

89 
	#Dy«micAny_DynAny_Ty≥Mism©ch__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_Dy«micAny_DynAny_Ty≥Mism©ch
,(m),(d))

	)

91 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynFixed
Ë&& !deföed(
_Dy«micAny_DynFixed_deföed
)

92 
	#ORBIT_DECL_Dy«micAny_DynFixed
 1

	)

93 
	#_Dy«micAny_DynFixed_deföed
 1

	)

94 
Dy«micAny_DynFixed_ty≥
 *
	tDy«micAny_DynFixed
;

95 #i‚de‡
TC_Dy«micAny_DynFixed


96 
	#TC_Dy«micAny_DynFixed
 
TC_CORBA_Obje˘


	)

99 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynEnum
Ë&& !deföed(
_Dy«micAny_DynEnum_deföed
)

100 
	#ORBIT_DECL_Dy«micAny_DynEnum
 1

	)

101 
	#_Dy«micAny_DynEnum_deföed
 1

	)

102 
Dy«micAny_DynEnum_ty≥
 *
	tDy«micAny_DynEnum
;

103 #i‚de‡
TC_Dy«micAny_DynEnum


104 
	#TC_Dy«micAny_DynEnum
 
TC_CORBA_Obje˘


	)

107 #i‡!
deföed
(
_Dy«micAny_FõldName_deföed
)

108 
	#_Dy«micAny_FõldName_deföed
 1

	)

109 
CORBA_°rög
 
	tDy«micAny_FõldName
;

110 
	#Dy«micAny_FõldName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

111 
	#Dy«micAny_FõldName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

112 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_FõldName_0
)

113 
	#TC_IMPL_TC_Dy«micAny_FõldName_0
 'd'

	)

114 
	#TC_IMPL_TC_Dy«micAny_FõldName_1
 'y'

	)

115 
	#TC_IMPL_TC_Dy«micAny_FõldName_2
 'n'

	)

116 
	#TC_IMPL_TC_Dy«micAny_FõldName_3
 'a'

	)

117 
	#TC_IMPL_TC_Dy«micAny_FõldName_4
 'm'

	)

118 
	#TC_IMPL_TC_Dy«micAny_FõldName_5
 'i'

	)

119 
	#TC_IMPL_TC_Dy«micAny_FõldName_6
 'c'

	)

120 
	#TC_IMPL_TC_Dy«micAny_FõldName_7
 '_'

	)

121 
	#TC_IMPL_TC_Dy«micAny_FõldName_8
 'd'

	)

122 
	#TC_IMPL_TC_Dy«micAny_FõldName_9
 'e'

	)

123 
	#TC_IMPL_TC_Dy«micAny_FõldName_10
 'f'

	)

124 
	#TC_IMPL_TC_Dy«micAny_FõldName_11
 's'

	)

125 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


130 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_FõldName_°ru˘
;

131 
	#TC_Dy«micAny_FõldName
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_FõldName_°ru˘
)

	)

133 
	#Dy«micAny_FõldName__Æloc
(Ë((
Dy«micAny_FõldName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

134 
	#Dy«micAny_FõldName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

136 #i‡!
deföed
(
_Dy«micAny_NameVÆuePaú_deföed
)

137 
	#_Dy«micAny_NameVÆuePaú_deföed
 1

	)

138 
Dy«micAny_NameVÆuePaú_ty≥
 
	tDy«micAny_NameVÆuePaú
;

139 
	sDy«micAny_NameVÆuePaú_ty≥
 {

140 
Dy«micAny_FõldName
 
	gid
;

141 
CORBA_™y
 
	gvÆue
;

144 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_NameVÆuePaú_0
)

145 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_0
 'd'

	)

146 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_1
 'y'

	)

147 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_2
 'n'

	)

148 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_3
 'a'

	)

149 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_4
 'm'

	)

150 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_5
 'i'

	)

151 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_6
 'c'

	)

152 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_7
 '_'

	)

153 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_8
 'd'

	)

154 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_9
 'e'

	)

155 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_10
 'f'

	)

156 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaú_11
 's'

	)

157 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


162 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_NameVÆuePaú_°ru˘
;

163 
	#TC_Dy«micAny_NameVÆuePaú
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_NameVÆuePaú_°ru˘
)

	)

165 
	#Dy«micAny_NameVÆuePaú__Æloc
(Ë((
Dy«micAny_NameVÆuePaú
 *)
	`ORBô_smÆl_Æloc
 (
TC_Dy«micAny_NameVÆuePaú
))

	)

166 
	#Dy«micAny_NameVÆuePaú__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_Dy«micAny_NameVÆuePaú
,(m),(d))

	)

168 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
)

169 
	#ORBIT_DECL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
 1

	)

170 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_0
 'd'

	)

171 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_1
 'y'

	)

172 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_2
 'n'

	)

173 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_3
 'a'

	)

174 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_4
 'm'

	)

175 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_5
 'i'

	)

176 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_6
 'c'

	)

177 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_7
 '_'

	)

178 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_8
 'd'

	)

179 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_9
 'e'

	)

180 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_10
 'f'

	)

181 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_11
 's'

	)

182 #i‡!
deföed
(
_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_deföed
)

183 
	#_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_deföed
 1

	)

184 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
Dy«micAny_NameVÆuePaú
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_Dy«micAny_NameVÆuePaú
;

186 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_0
)

187 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_0
 'd'

	)

188 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_1
 'y'

	)

189 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_2
 'n'

	)

190 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_3
 'a'

	)

191 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_4
 'm'

	)

192 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_5
 'i'

	)

193 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_6
 'c'

	)

194 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_7
 '_'

	)

195 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_8
 'd'

	)

196 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_9
 'e'

	)

197 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_10
 'f'

	)

198 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_11
 's'

	)

199 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


204 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_°ru˘
;

205 
	#TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú_°ru˘
)

	)

207 
	#CORBA_£quí˚_Dy«micAny_NameVÆuePaú__Æloc
(Ë((
CORBA_£quí˚_Dy«micAny_NameVÆuePaú
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
))

	)

208 
	#CORBA_£quí˚_Dy«micAny_NameVÆuePaú__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
,(m),(d))

	)

209 
	#CORBA_£quí˚_Dy«micAny_NameVÆuePaú_Ælocbuf
(
l
Ë((
Dy«micAny_NameVÆuePaú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
, (l)))

	)

210 
	#CORBA_£quí˚_Dy«micAny_NameVÆuePaú_Ælocbuf
(
l
Ë((
Dy«micAny_NameVÆuePaú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
, (l)))

	)

212 #i‡!
deföed
(
_Dy«micAny_NameVÆuePaúSeq_deföed
)

213 
	#_Dy«micAny_NameVÆuePaúSeq_deföed
 1

	)

214 
CORBA_£quí˚_Dy«micAny_NameVÆuePaú
 
	tDy«micAny_NameVÆuePaúSeq
;

215 
	#Dy«micAny_NameVÆuePaúSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_Dy«micAny_NameVÆuePaú_m¨shÆ
((x),(y),(z))

	)

216 
	#Dy«micAny_NameVÆuePaúSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_Dy«micAny_NameVÆuePaú_dem¨shÆ
((x),(y),(z),(i))

	)

217 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_0
)

218 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_0
 'd'

	)

219 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_1
 'y'

	)

220 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_2
 'n'

	)

221 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_3
 'a'

	)

222 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_4
 'm'

	)

223 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_5
 'i'

	)

224 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_6
 'c'

	)

225 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_7
 '_'

	)

226 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_8
 'd'

	)

227 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_9
 'e'

	)

228 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_10
 'f'

	)

229 
	#TC_IMPL_TC_Dy«micAny_NameVÆuePaúSeq_11
 's'

	)

230 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


235 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_NameVÆuePaúSeq_°ru˘
;

236 
	#TC_Dy«micAny_NameVÆuePaúSeq
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_NameVÆuePaúSeq_°ru˘
)

	)

238 
	#Dy«micAny_NameVÆuePaúSeq__Æloc
(Ë((
Dy«micAny_NameVÆuePaúSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
))

	)

239 
	#Dy«micAny_NameVÆuePaúSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
,(m),(d))

	)

240 
	#Dy«micAny_NameVÆuePaúSeq_Ælocbuf
(
l
Ë((
Dy«micAny_NameVÆuePaú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_NameVÆuePaú
, (l)))

	)

242 #i‡!
deföed
(
_Dy«micAny_NameDynAnyPaú_deföed
)

243 
	#_Dy«micAny_NameDynAnyPaú_deföed
 1

	)

244 
Dy«micAny_NameDynAnyPaú_ty≥
 
	tDy«micAny_NameDynAnyPaú
;

245 
	sDy«micAny_NameDynAnyPaú_ty≥
 {

246 
Dy«micAny_FõldName
 
	gid
;

247 
Dy«micAny_DynAny
 
	gvÆue
;

250 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_0
)

251 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_0
 'd'

	)

252 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_1
 'y'

	)

253 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_2
 'n'

	)

254 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_3
 'a'

	)

255 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_4
 'm'

	)

256 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_5
 'i'

	)

257 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_6
 'c'

	)

258 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_7
 '_'

	)

259 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_8
 'd'

	)

260 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_9
 'e'

	)

261 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_10
 'f'

	)

262 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaú_11
 's'

	)

263 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


268 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_NameDynAnyPaú_°ru˘
;

269 
	#TC_Dy«micAny_NameDynAnyPaú
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_NameDynAnyPaú_°ru˘
)

	)

271 
	#Dy«micAny_NameDynAnyPaú__Æloc
(Ë((
Dy«micAny_NameDynAnyPaú
 *)
	`ORBô_smÆl_Æloc
 (
TC_Dy«micAny_NameDynAnyPaú
))

	)

272 
	#Dy«micAny_NameDynAnyPaú__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_Dy«micAny_NameDynAnyPaú
,(m),(d))

	)

274 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
)

275 
	#ORBIT_DECL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
 1

	)

276 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_0
 'd'

	)

277 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_1
 'y'

	)

278 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_2
 'n'

	)

279 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_3
 'a'

	)

280 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_4
 'm'

	)

281 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_5
 'i'

	)

282 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_6
 'c'

	)

283 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_7
 '_'

	)

284 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_8
 'd'

	)

285 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_9
 'e'

	)

286 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_10
 'f'

	)

287 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_11
 's'

	)

288 #i‡!
deföed
(
_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_deföed
)

289 
	#_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_deföed
 1

	)

290 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
Dy«micAny_NameDynAnyPaú
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_Dy«micAny_NameDynAnyPaú
;

292 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_0
)

293 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_0
 'd'

	)

294 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_1
 'y'

	)

295 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_2
 'n'

	)

296 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_3
 'a'

	)

297 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_4
 'm'

	)

298 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_5
 'i'

	)

299 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_6
 'c'

	)

300 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_7
 '_'

	)

301 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_8
 'd'

	)

302 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_9
 'e'

	)

303 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_10
 'f'

	)

304 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_11
 's'

	)

305 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


310 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_°ru˘
;

311 
	#TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_°ru˘
)

	)

313 
	#CORBA_£quí˚_Dy«micAny_NameDynAnyPaú__Æloc
(Ë((
CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
))

	)

314 
	#CORBA_£quí˚_Dy«micAny_NameDynAnyPaú__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
,(m),(d))

	)

315 
	#CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_Ælocbuf
(
l
Ë((
Dy«micAny_NameDynAnyPaú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
, (l)))

	)

316 
	#CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_Ælocbuf
(
l
Ë((
Dy«micAny_NameDynAnyPaú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
, (l)))

	)

318 #i‡!
deföed
(
_Dy«micAny_NameDynAnyPaúSeq_deföed
)

319 
	#_Dy«micAny_NameDynAnyPaúSeq_deföed
 1

	)

320 
CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
 
	tDy«micAny_NameDynAnyPaúSeq
;

321 
	#Dy«micAny_NameDynAnyPaúSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_m¨shÆ
((x),(y),(z))

	)

322 
	#Dy«micAny_NameDynAnyPaúSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_Dy«micAny_NameDynAnyPaú_dem¨shÆ
((x),(y),(z),(i))

	)

323 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_0
)

324 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_0
 'd'

	)

325 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_1
 'y'

	)

326 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_2
 'n'

	)

327 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_3
 'a'

	)

328 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_4
 'm'

	)

329 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_5
 'i'

	)

330 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_6
 'c'

	)

331 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_7
 '_'

	)

332 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_8
 'd'

	)

333 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_9
 'e'

	)

334 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_10
 'f'

	)

335 
	#TC_IMPL_TC_Dy«micAny_NameDynAnyPaúSeq_11
 's'

	)

336 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


341 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_NameDynAnyPaúSeq_°ru˘
;

342 
	#TC_Dy«micAny_NameDynAnyPaúSeq
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_NameDynAnyPaúSeq_°ru˘
)

	)

344 
	#Dy«micAny_NameDynAnyPaúSeq__Æloc
(Ë((
Dy«micAny_NameDynAnyPaúSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
))

	)

345 
	#Dy«micAny_NameDynAnyPaúSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
,(m),(d))

	)

346 
	#Dy«micAny_NameDynAnyPaúSeq_Ælocbuf
(
l
Ë((
Dy«micAny_NameDynAnyPaú
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_NameDynAnyPaú
, (l)))

	)

348 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynSåu˘
Ë&& !deföed(
_Dy«micAny_DynSåu˘_deföed
)

349 
	#ORBIT_DECL_Dy«micAny_DynSåu˘
 1

	)

350 
	#_Dy«micAny_DynSåu˘_deföed
 1

	)

351 
Dy«micAny_DynSåu˘_ty≥
 *
	tDy«micAny_DynSåu˘
;

352 #i‚de‡
TC_Dy«micAny_DynSåu˘


353 
	#TC_Dy«micAny_DynSåu˘
 
TC_CORBA_Obje˘


	)

356 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynUni⁄
Ë&& !deföed(
_Dy«micAny_DynUni⁄_deföed
)

357 
	#ORBIT_DECL_Dy«micAny_DynUni⁄
 1

	)

358 
	#_Dy«micAny_DynUni⁄_deföed
 1

	)

359 
Dy«micAny_DynUni⁄_ty≥
 *
	tDy«micAny_DynUni⁄
;

360 #i‚de‡
TC_Dy«micAny_DynUni⁄


361 
	#TC_Dy«micAny_DynUni⁄
 
TC_CORBA_Obje˘


	)

364 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_™y
)

365 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_™y
 1

	)

366 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_0
 'd'

	)

367 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_1
 'y'

	)

368 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_2
 'n'

	)

369 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_3
 'a'

	)

370 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_4
 'm'

	)

371 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_5
 'i'

	)

372 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_6
 'c'

	)

373 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_7
 '_'

	)

374 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_8
 'd'

	)

375 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_9
 'e'

	)

376 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_10
 'f'

	)

377 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_11
 's'

	)

378 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_™y_deföed
)

379 
	#_CORBA_£quí˚_CORBA_™y_deföed
 1

	)

380 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_™y
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_™y
;

382 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_0
)

383 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_0
 'd'

	)

384 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_1
 'y'

	)

385 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_2
 'n'

	)

386 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_3
 'a'

	)

387 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_4
 'm'

	)

388 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_5
 'i'

	)

389 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_6
 'c'

	)

390 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_7
 '_'

	)

391 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_8
 'd'

	)

392 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_9
 'e'

	)

393 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_10
 'f'

	)

394 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_11
 's'

	)

395 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


400 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_™y_°ru˘
;

401 
	#TC_CORBA_£quí˚_CORBA_™y
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_™y_°ru˘
)

	)

403 
	#CORBA_£quí˚_CORBA_™y__Æloc
(Ë((
CORBA_£quí˚_CORBA_™y
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_™y
))

	)

404 
	#CORBA_£quí˚_CORBA_™y__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_™y
,(m),(d))

	)

405 
	#CORBA_£quí˚_CORBA_™y_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

406 
	#CORBA_£quí˚_CORBA_™y_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

408 #i‡!
deföed
(
_Dy«micAny_AnySeq_deföed
)

409 
	#_Dy«micAny_AnySeq_deföed
 1

	)

410 
CORBA_£quí˚_CORBA_™y
 
	tDy«micAny_AnySeq
;

411 
	#Dy«micAny_AnySeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_™y_m¨shÆ
((x),(y),(z))

	)

412 
	#Dy«micAny_AnySeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_™y_dem¨shÆ
((x),(y),(z),(i))

	)

413 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_AnySeq_0
)

414 
	#TC_IMPL_TC_Dy«micAny_AnySeq_0
 'd'

	)

415 
	#TC_IMPL_TC_Dy«micAny_AnySeq_1
 'y'

	)

416 
	#TC_IMPL_TC_Dy«micAny_AnySeq_2
 'n'

	)

417 
	#TC_IMPL_TC_Dy«micAny_AnySeq_3
 'a'

	)

418 
	#TC_IMPL_TC_Dy«micAny_AnySeq_4
 'm'

	)

419 
	#TC_IMPL_TC_Dy«micAny_AnySeq_5
 'i'

	)

420 
	#TC_IMPL_TC_Dy«micAny_AnySeq_6
 'c'

	)

421 
	#TC_IMPL_TC_Dy«micAny_AnySeq_7
 '_'

	)

422 
	#TC_IMPL_TC_Dy«micAny_AnySeq_8
 'd'

	)

423 
	#TC_IMPL_TC_Dy«micAny_AnySeq_9
 'e'

	)

424 
	#TC_IMPL_TC_Dy«micAny_AnySeq_10
 'f'

	)

425 
	#TC_IMPL_TC_Dy«micAny_AnySeq_11
 's'

	)

426 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


431 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_AnySeq_°ru˘
;

432 
	#TC_Dy«micAny_AnySeq
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_AnySeq_°ru˘
)

	)

434 
	#Dy«micAny_AnySeq__Æloc
(Ë((
Dy«micAny_AnySeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_™y
))

	)

435 
	#Dy«micAny_AnySeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_™y
,(m),(d))

	)

436 
	#Dy«micAny_AnySeq_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

438 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

439 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

440 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'd'

	)

441 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'y'

	)

442 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'n'

	)

443 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'a'

	)

444 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'm'

	)

445 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 'i'

	)

446 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'c'

	)

447 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 '_'

	)

448 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'd'

	)

449 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 'e'

	)

450 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_10
 'f'

	)

451 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_11
 's'

	)

452 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

453 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

454 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

456 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

457 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'd'

	)

458 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'y'

	)

459 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'n'

	)

460 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'a'

	)

461 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'm'

	)

462 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 'i'

	)

463 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'c'

	)

464 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 '_'

	)

465 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'd'

	)

466 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 'e'

	)

467 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_10
 'f'

	)

468 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_11
 's'

	)

469 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


474 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

475 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

477 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

478 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

479 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

480 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

482 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_Dy«micAny_DynAny
)

483 
	#ORBIT_DECL_CORBA_£quí˚_Dy«micAny_DynAny
 1

	)

484 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_0
 'd'

	)

485 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_1
 'y'

	)

486 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_2
 'n'

	)

487 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_3
 'a'

	)

488 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_4
 'm'

	)

489 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_5
 'i'

	)

490 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_6
 'c'

	)

491 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_7
 '_'

	)

492 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_8
 'd'

	)

493 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_9
 'e'

	)

494 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_10
 'f'

	)

495 
	#ORBIT_IMPL_CORBA_£quí˚_Dy«micAny_DynAny_11
 's'

	)

496 #i‡!
deföed
(
_CORBA_£quí˚_Dy«micAny_DynAny_deföed
)

497 
	#_CORBA_£quí˚_Dy«micAny_DynAny_deföed
 1

	)

498 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_Dy«micAny_DynAny
;

500 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_0
)

501 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_0
 'd'

	)

502 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_1
 'y'

	)

503 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_2
 'n'

	)

504 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_3
 'a'

	)

505 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_4
 'm'

	)

506 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_5
 'i'

	)

507 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_6
 'c'

	)

508 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_7
 '_'

	)

509 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_8
 'd'

	)

510 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_9
 'e'

	)

511 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_10
 'f'

	)

512 
	#TC_IMPL_TC_CORBA_£quí˚_Dy«micAny_DynAny_11
 's'

	)

513 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


518 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_Dy«micAny_DynAny_°ru˘
;

519 
	#TC_CORBA_£quí˚_Dy«micAny_DynAny
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_Dy«micAny_DynAny_°ru˘
)

	)

521 
	#CORBA_£quí˚_Dy«micAny_DynAny__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

522 
	#CORBA_£quí˚_Dy«micAny_DynAny__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

523 
	#CORBA_£quí˚_Dy«micAny_DynAny_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

524 
	#CORBA_£quí˚_Dy«micAny_DynAny_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

525 
	#CORBA_£quí˚_Dy«micAny_DynAny_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

527 #i‡!
deföed
(
_Dy«micAny_DynAnySeq_deföed
)

528 
	#_Dy«micAny_DynAnySeq_deföed
 1

	)

529 
CORBA_£quí˚_Dy«micAny_DynAny
 
	tDy«micAny_DynAnySeq
;

530 
	#Dy«micAny_DynAnySeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_Dy«micAny_DynAny_m¨shÆ
((x),(y),(z))

	)

531 
	#Dy«micAny_DynAnySeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_Dy«micAny_DynAny_dem¨shÆ
((x),(y),(z),(i))

	)

532 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_DynAnySeq_0
)

533 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_0
 'd'

	)

534 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_1
 'y'

	)

535 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_2
 'n'

	)

536 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_3
 'a'

	)

537 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_4
 'm'

	)

538 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_5
 'i'

	)

539 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_6
 'c'

	)

540 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_7
 '_'

	)

541 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_8
 'd'

	)

542 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_9
 'e'

	)

543 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_10
 'f'

	)

544 
	#TC_IMPL_TC_Dy«micAny_DynAnySeq_11
 's'

	)

545 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


550 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_DynAnySeq_°ru˘
;

551 
	#TC_Dy«micAny_DynAnySeq
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_DynAnySeq_°ru˘
)

	)

553 
	#Dy«micAny_DynAnySeq__Æloc
(Ë((
Dy«micAny_DynAnySeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_Dy«micAny_DynAny
))

	)

554 
	#Dy«micAny_DynAnySeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_Dy«micAny_DynAny
,(m),(d))

	)

555 
	#Dy«micAny_DynAnySeq_Ælocbuf
(
l
Ë((
Dy«micAny_DynAny
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_Dy«micAny_DynAny
, (l)))

	)

557 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynSequí˚
Ë&& !deföed(
_Dy«micAny_DynSequí˚_deföed
)

558 
	#ORBIT_DECL_Dy«micAny_DynSequí˚
 1

	)

559 
	#_Dy«micAny_DynSequí˚_deföed
 1

	)

560 
Dy«micAny_DynSequí˚_ty≥
 *
	tDy«micAny_DynSequí˚
;

561 #i‚de‡
TC_Dy«micAny_DynSequí˚


562 
	#TC_Dy«micAny_DynSequí˚
 
TC_CORBA_Obje˘


	)

565 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynAºay
Ë&& !deföed(
_Dy«micAny_DynAºay_deföed
)

566 
	#ORBIT_DECL_Dy«micAny_DynAºay
 1

	)

567 
	#_Dy«micAny_DynAºay_deföed
 1

	)

568 
Dy«micAny_DynAºay_ty≥
 *
	tDy«micAny_DynAºay
;

569 #i‚de‡
TC_Dy«micAny_DynAºay


570 
	#TC_Dy«micAny_DynAºay
 
TC_CORBA_Obje˘


	)

573 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynVÆueComm⁄
Ë&& !deföed(
_Dy«micAny_DynVÆueComm⁄_deföed
)

574 
	#ORBIT_DECL_Dy«micAny_DynVÆueComm⁄
 1

	)

575 
	#_Dy«micAny_DynVÆueComm⁄_deföed
 1

	)

576 
Dy«micAny_DynVÆueComm⁄_ty≥
 *
	tDy«micAny_DynVÆueComm⁄
;

577 #i‚de‡
TC_Dy«micAny_DynVÆueComm⁄


578 
	#TC_Dy«micAny_DynVÆueComm⁄
 
TC_CORBA_Obje˘


	)

581 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynVÆue
Ë&& !deföed(
_Dy«micAny_DynVÆue_deföed
)

582 
	#ORBIT_DECL_Dy«micAny_DynVÆue
 1

	)

583 
	#_Dy«micAny_DynVÆue_deföed
 1

	)

584 
Dy«micAny_DynVÆue_ty≥
 *
	tDy«micAny_DynVÆue
;

585 #i‚de‡
TC_Dy«micAny_DynVÆue


586 
	#TC_Dy«micAny_DynVÆue
 
TC_CORBA_Obje˘


	)

589 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynVÆueBox
Ë&& !deföed(
_Dy«micAny_DynVÆueBox_deföed
)

590 
	#ORBIT_DECL_Dy«micAny_DynVÆueBox
 1

	)

591 
	#_Dy«micAny_DynVÆueBox_deföed
 1

	)

592 
Dy«micAny_DynVÆueBox_ty≥
 *
	tDy«micAny_DynVÆueBox
;

593 #i‚de‡
TC_Dy«micAny_DynVÆueBox


594 
	#TC_Dy«micAny_DynVÆueBox
 
TC_CORBA_Obje˘


	)

597 #unde‡
ex_Dy«micAny_Mu°Trunˇã


598 
	#ex_Dy«micAny_Mu°Trunˇã
 "IDL:omg.‹g/Dy«micAny/Mu°Trunˇã:1.0"

	)

599 #i‡!
deföed
(
_Dy«micAny_Mu°Trunˇã_deföed
)

600 
	#_Dy«micAny_Mu°Trunˇã_deföed
 1

	)

601 
Dy«micAny_Mu°Trunˇã_ty≥
 
	tDy«micAny_Mu°Trunˇã
;

602 
	sDy«micAny_Mu°Trunˇã_ty≥
 {

603 
	gdummy
;

606 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_0
)

607 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_0
 'd'

	)

608 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_1
 'y'

	)

609 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_2
 'n'

	)

610 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_3
 'a'

	)

611 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_4
 'm'

	)

612 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_5
 'i'

	)

613 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_6
 'c'

	)

614 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_7
 '_'

	)

615 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_8
 'd'

	)

616 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_9
 'e'

	)

617 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_10
 'f'

	)

618 
	#TC_IMPL_TC_Dy«micAny_Mu°Trunˇã_11
 's'

	)

619 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


624 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_Mu°Trunˇã_°ru˘
;

625 
	#TC_Dy«micAny_Mu°Trunˇã
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_Mu°Trunˇã_°ru˘
)

	)

627 
	#Dy«micAny_Mu°Trunˇã__Æloc
(Ë((
Dy«micAny_Mu°Trunˇã
 *)
	`ORBô_smÆl_Æloc
 (
TC_Dy«micAny_Mu°Trunˇã
))

	)

628 
	#Dy«micAny_Mu°Trunˇã__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_Dy«micAny_Mu°Trunˇã
,(m),(d))

	)

630 #i‡!
deföed
(
ORBIT_DECL_Dy«micAny_DynAnyFa˘‹y
Ë&& !deföed(
_Dy«micAny_DynAnyFa˘‹y_deföed
)

631 
	#ORBIT_DECL_Dy«micAny_DynAnyFa˘‹y
 1

	)

632 
	#_Dy«micAny_DynAnyFa˘‹y_deföed
 1

	)

633 
Dy«micAny_DynAnyFa˘‹y_ty≥
 *
	tDy«micAny_DynAnyFa˘‹y
;

634 #i‚de‡
TC_Dy«micAny_DynAnyFa˘‹y


635 
	#TC_Dy«micAny_DynAnyFa˘‹y
 
TC_CORBA_Obje˘


	)

638 #unde‡
ex_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code


639 
	#ex_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code
 "IDL:omg.‹g/Dy«micAny/DynAnyFa˘‹y/Inc⁄si°ítTy≥Code:1.0"

	)

640 #i‡!
deföed
(
_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_deföed
)

641 
	#_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_deföed
 1

	)

642 
Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_ty≥
 
	tDy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code
;

643 
	sDy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_ty≥
 {

644 
	gdummy
;

647 #i‡!
deföed
(
TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_0
)

648 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_0
 'd'

	)

649 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_1
 'y'

	)

650 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_2
 'n'

	)

651 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_3
 'a'

	)

652 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_4
 'm'

	)

653 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_5
 'i'

	)

654 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_6
 'c'

	)

655 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_7
 '_'

	)

656 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_8
 'd'

	)

657 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_9
 'e'

	)

658 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_10
 'f'

	)

659 
	#TC_IMPL_TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_11
 's'

	)

660 #ifde‡
ORBIT_IDL_C_IMODULE_dy«mic_defs


665 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_°ru˘
;

666 
	#TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code
 ((
CORBA_Ty≥Code
)&
TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code_°ru˘
)

	)

668 
	#Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code__Æloc
(Ë((
Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code
 *)
	`ORBô_smÆl_Æloc
 (
TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code
))

	)

669 
	#Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_Dy«micAny_DynAnyFa˘‹y_Inc⁄si°ítTy≥Code
,(m),(d))

	)

673 
CORBA_Ty≥Code
 
Dy«micAny_DynAny_ty≥
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

674 
Dy«micAny_DynAny_assign
(
Dy«micAny_DynAny
 
_obj
, c⁄° Dy«micAny_DynAny 
dyn_™y
, 
CORBA_Envú⁄mít
 *
ev
);

675 
Dy«micAny_DynAny_‰om_™y
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

676 
CORBA_™y
* 
Dy«micAny_DynAny_to_™y
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

677 
CORBA_boﬁón
 
Dy«micAny_DynAny_equÆ
(
Dy«micAny_DynAny
 
_obj
, c⁄° Dy«micAny_DynAny 
dyn_™y
, 
CORBA_Envú⁄mít
 *
ev
);

678 
Dy«micAny_DynAny_de°roy
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

679 
Dy«micAny_DynAny
 
Dy«micAny_DynAny_c›y
(Dy«micAny_DynAny 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

680 
Dy«micAny_DynAny_ö£π_boﬁón
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_boﬁón
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

681 
Dy«micAny_DynAny_ö£π_o˘ë
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_o˘ë
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

682 
Dy«micAny_DynAny_ö£π_ch¨
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_ch¨
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

683 
Dy«micAny_DynAny_ö£π_sh‹t
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_sh‹t
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

684 
Dy«micAny_DynAny_ö£π_ush‹t
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_unsig√d_sh‹t
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

685 
Dy«micAny_DynAny_ö£π_l⁄g
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

686 
Dy«micAny_DynAny_ö£π_ul⁄g
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

687 
Dy«micAny_DynAny_ö£π_Êﬂt
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_Êﬂt
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

688 
Dy«micAny_DynAny_ö£π_doubÀ
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_doubÀ
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

689 
Dy«micAny_DynAny_ö£π_°rög
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_ch¨
 * 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

690 
Dy«micAny_DynAny_ö£π_ª„ªn˚
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_Obje˘
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

691 
Dy«micAny_DynAny_ö£π_ty≥code
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_Ty≥Code
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

692 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_l⁄g_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

693 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

694 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_l⁄g_doubÀ
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

695 
Dy«micAny_DynAny_ö£π_wch¨
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_wch¨
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

696 
Dy«micAny_DynAny_ö£π_w°rög
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_w°rög
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

697 
Dy«micAny_DynAny_ö£π_™y
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

698 
Dy«micAny_DynAny_ö£π_dyn_™y
(
Dy«micAny_DynAny
 
_obj
, c⁄° Dy«micAny_DynAny 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

699 
CORBA_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

700 
CORBA_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

701 
CORBA_ch¨
 
Dy«micAny_DynAny_gë_ch¨
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

702 
CORBA_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

703 
CORBA_unsig√d_sh‹t
 
Dy«micAny_DynAny_gë_ush‹t
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

704 
CORBA_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

705 
CORBA_unsig√d_l⁄g
 
Dy«micAny_DynAny_gë_ul⁄g
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

706 
CORBA_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

707 
CORBA_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

708 
CORBA_°rög
 
Dy«micAny_DynAny_gë_°rög
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

709 
CORBA_Obje˘
 
Dy«micAny_DynAny_gë_ª„ªn˚
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

710 
CORBA_Ty≥Code
 
Dy«micAny_DynAny_gë_ty≥code
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

711 
CORBA_l⁄g_l⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

712 
CORBA_unsig√d_l⁄g_l⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

713 
CORBA_l⁄g_doubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

714 
CORBA_wch¨
 
Dy«micAny_DynAny_gë_wch¨
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

715 
CORBA_w°rög
 
Dy«micAny_DynAny_gë_w°rög
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

716 
CORBA_™y
* 
Dy«micAny_DynAny_gë_™y
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

717 
Dy«micAny_DynAny
 
Dy«micAny_DynAny_gë_dyn_™y
(Dy«micAny_DynAny 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

718 
CORBA_boﬁón
 
Dy«micAny_DynAny_£ek
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_l⁄g
 
ödex
, 
CORBA_Envú⁄mít
 *
ev
);

719 
Dy«micAny_DynAny_ªwöd
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

720 
CORBA_boﬁón
 
Dy«micAny_DynAny_√xt
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

721 
CORBA_unsig√d_l⁄g
 
Dy«micAny_DynAny_comp⁄ít_cou¡
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

722 
Dy«micAny_DynAny
 
Dy«micAny_DynAny_cuºít_comp⁄ít
(Dy«micAny_DynAny 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

723 
Dy«micAny_DynAny_ö£π_ab°ø˘
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_Ab°ø˘Ba£
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

724 
CORBA_Ab°ø˘Ba£
 
Dy«micAny_DynAny_gë_ab°ø˘
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

725 
Dy«micAny_DynAny_ö£π_boﬁón_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_BoﬁónSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

726 
Dy«micAny_DynAny_ö£π_o˘ë_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_O˘ëSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

727 
Dy«micAny_DynAny_ö£π_ch¨_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_Ch¨Seq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

728 
Dy«micAny_DynAny_ö£π_sh‹t_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_Sh‹tSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

729 
Dy«micAny_DynAny_ö£π_ush‹t_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_USh‹tSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

730 
Dy«micAny_DynAny_ö£π_l⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_L⁄gSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

731 
Dy«micAny_DynAny_ö£π_ul⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_UL⁄gSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

732 
Dy«micAny_DynAny_ö£π_Êﬂt_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_FlﬂtSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

733 
Dy«micAny_DynAny_ö£π_doubÀ_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_DoubÀSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

734 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_L⁄gL⁄gSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

735 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_UL⁄gL⁄gSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

736 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_L⁄gDoubÀSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

737 
Dy«micAny_DynAny_ö£π_wch¨_£q
(
Dy«micAny_DynAny
 
_obj
, c⁄° 
CORBA_WCh¨Seq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

738 
CORBA_BoﬁónSeq
* 
Dy«micAny_DynAny_gë_boﬁón_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

739 
CORBA_O˘ëSeq
* 
Dy«micAny_DynAny_gë_o˘ë_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

740 
CORBA_Ch¨Seq
* 
Dy«micAny_DynAny_gë_ch¨_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

741 
CORBA_Sh‹tSeq
* 
Dy«micAny_DynAny_gë_sh‹t_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

742 
CORBA_USh‹tSeq
* 
Dy«micAny_DynAny_gë_ush‹t_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

743 
CORBA_L⁄gSeq
* 
Dy«micAny_DynAny_gë_l⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

744 
CORBA_UL⁄gSeq
* 
Dy«micAny_DynAny_gë_ul⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

745 
CORBA_FlﬂtSeq
* 
Dy«micAny_DynAny_gë_Êﬂt_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

746 
CORBA_DoubÀSeq
* 
Dy«micAny_DynAny_gë_doubÀ_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

747 
CORBA_L⁄gL⁄gSeq
* 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

748 
CORBA_UL⁄gL⁄gSeq
* 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

749 
CORBA_L⁄gDoubÀSeq
* 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

750 
CORBA_WCh¨Seq
* 
Dy«micAny_DynAny_gë_wch¨_£q
(
Dy«micAny_DynAny
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

751 
	#Dy«micAny_DynFixed_ty≥
 
Dy«micAny_DynAny_ty≥


	)

752 
	#Dy«micAny_DynFixed_assign
 
Dy«micAny_DynAny_assign


	)

753 
	#Dy«micAny_DynFixed_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

754 
	#Dy«micAny_DynFixed_to_™y
 
Dy«micAny_DynAny_to_™y


	)

755 
	#Dy«micAny_DynFixed_equÆ
 
Dy«micAny_DynAny_equÆ


	)

756 
	#Dy«micAny_DynFixed_de°roy
 
Dy«micAny_DynAny_de°roy


	)

757 
	#Dy«micAny_DynFixed_c›y
 
Dy«micAny_DynAny_c›y


	)

758 
	#Dy«micAny_DynFixed_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

759 
	#Dy«micAny_DynFixed_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

760 
	#Dy«micAny_DynFixed_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

761 
	#Dy«micAny_DynFixed_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

762 
	#Dy«micAny_DynFixed_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

763 
	#Dy«micAny_DynFixed_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

764 
	#Dy«micAny_DynFixed_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

765 
	#Dy«micAny_DynFixed_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

766 
	#Dy«micAny_DynFixed_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

767 
	#Dy«micAny_DynFixed_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

768 
	#Dy«micAny_DynFixed_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

769 
	#Dy«micAny_DynFixed_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

770 
	#Dy«micAny_DynFixed_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

771 
	#Dy«micAny_DynFixed_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

772 
	#Dy«micAny_DynFixed_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

773 
	#Dy«micAny_DynFixed_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

774 
	#Dy«micAny_DynFixed_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

775 
	#Dy«micAny_DynFixed_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

776 
	#Dy«micAny_DynFixed_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

777 
	#Dy«micAny_DynFixed_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

778 
	#Dy«micAny_DynFixed_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

779 
	#Dy«micAny_DynFixed_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

780 
	#Dy«micAny_DynFixed_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

781 
	#Dy«micAny_DynFixed_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

782 
	#Dy«micAny_DynFixed_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

783 
	#Dy«micAny_DynFixed_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

784 
	#Dy«micAny_DynFixed_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

785 
	#Dy«micAny_DynFixed_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

786 
	#Dy«micAny_DynFixed_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

787 
	#Dy«micAny_DynFixed_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

788 
	#Dy«micAny_DynFixed_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

789 
	#Dy«micAny_DynFixed_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

790 
	#Dy«micAny_DynFixed_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

791 
	#Dy«micAny_DynFixed_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

792 
	#Dy«micAny_DynFixed_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

793 
	#Dy«micAny_DynFixed_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

794 
	#Dy«micAny_DynFixed_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

795 
	#Dy«micAny_DynFixed_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

796 
	#Dy«micAny_DynFixed_£ek
 
Dy«micAny_DynAny_£ek


	)

797 
	#Dy«micAny_DynFixed_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

798 
	#Dy«micAny_DynFixed_√xt
 
Dy«micAny_DynAny_√xt


	)

799 
	#Dy«micAny_DynFixed_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

800 
	#Dy«micAny_DynFixed_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

801 
	#Dy«micAny_DynFixed_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

802 
	#Dy«micAny_DynFixed_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

803 
	#Dy«micAny_DynFixed_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

804 
	#Dy«micAny_DynFixed_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

805 
	#Dy«micAny_DynFixed_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

806 
	#Dy«micAny_DynFixed_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

807 
	#Dy«micAny_DynFixed_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

808 
	#Dy«micAny_DynFixed_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

809 
	#Dy«micAny_DynFixed_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

810 
	#Dy«micAny_DynFixed_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

811 
	#Dy«micAny_DynFixed_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

812 
	#Dy«micAny_DynFixed_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

813 
	#Dy«micAny_DynFixed_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

814 
	#Dy«micAny_DynFixed_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

815 
	#Dy«micAny_DynFixed_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

816 
	#Dy«micAny_DynFixed_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

817 
	#Dy«micAny_DynFixed_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

818 
	#Dy«micAny_DynFixed_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

819 
	#Dy«micAny_DynFixed_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

820 
	#Dy«micAny_DynFixed_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

821 
	#Dy«micAny_DynFixed_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

822 
	#Dy«micAny_DynFixed_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

823 
	#Dy«micAny_DynFixed_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

824 
	#Dy«micAny_DynFixed_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

825 
	#Dy«micAny_DynFixed_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

826 
	#Dy«micAny_DynFixed_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

827 
	#Dy«micAny_DynFixed_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

828 
	#Dy«micAny_DynFixed_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

829 
CORBA_°rög
 
Dy«micAny_DynFixed_gë_vÆue
(
Dy«micAny_DynFixed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

830 
CORBA_boﬁón
 
Dy«micAny_DynFixed_£t_vÆue
(
Dy«micAny_DynFixed
 
_obj
, c⁄° 
CORBA_ch¨
 * 
vÆ
, 
CORBA_Envú⁄mít
 *
ev
);

831 
	#Dy«micAny_DynEnum_ty≥
 
Dy«micAny_DynAny_ty≥


	)

832 
	#Dy«micAny_DynEnum_assign
 
Dy«micAny_DynAny_assign


	)

833 
	#Dy«micAny_DynEnum_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

834 
	#Dy«micAny_DynEnum_to_™y
 
Dy«micAny_DynAny_to_™y


	)

835 
	#Dy«micAny_DynEnum_equÆ
 
Dy«micAny_DynAny_equÆ


	)

836 
	#Dy«micAny_DynEnum_de°roy
 
Dy«micAny_DynAny_de°roy


	)

837 
	#Dy«micAny_DynEnum_c›y
 
Dy«micAny_DynAny_c›y


	)

838 
	#Dy«micAny_DynEnum_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

839 
	#Dy«micAny_DynEnum_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

840 
	#Dy«micAny_DynEnum_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

841 
	#Dy«micAny_DynEnum_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

842 
	#Dy«micAny_DynEnum_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

843 
	#Dy«micAny_DynEnum_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

844 
	#Dy«micAny_DynEnum_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

845 
	#Dy«micAny_DynEnum_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

846 
	#Dy«micAny_DynEnum_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

847 
	#Dy«micAny_DynEnum_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

848 
	#Dy«micAny_DynEnum_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

849 
	#Dy«micAny_DynEnum_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

850 
	#Dy«micAny_DynEnum_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

851 
	#Dy«micAny_DynEnum_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

852 
	#Dy«micAny_DynEnum_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

853 
	#Dy«micAny_DynEnum_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

854 
	#Dy«micAny_DynEnum_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

855 
	#Dy«micAny_DynEnum_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

856 
	#Dy«micAny_DynEnum_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

857 
	#Dy«micAny_DynEnum_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

858 
	#Dy«micAny_DynEnum_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

859 
	#Dy«micAny_DynEnum_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

860 
	#Dy«micAny_DynEnum_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

861 
	#Dy«micAny_DynEnum_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

862 
	#Dy«micAny_DynEnum_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

863 
	#Dy«micAny_DynEnum_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

864 
	#Dy«micAny_DynEnum_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

865 
	#Dy«micAny_DynEnum_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

866 
	#Dy«micAny_DynEnum_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

867 
	#Dy«micAny_DynEnum_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

868 
	#Dy«micAny_DynEnum_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

869 
	#Dy«micAny_DynEnum_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

870 
	#Dy«micAny_DynEnum_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

871 
	#Dy«micAny_DynEnum_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

872 
	#Dy«micAny_DynEnum_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

873 
	#Dy«micAny_DynEnum_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

874 
	#Dy«micAny_DynEnum_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

875 
	#Dy«micAny_DynEnum_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

876 
	#Dy«micAny_DynEnum_£ek
 
Dy«micAny_DynAny_£ek


	)

877 
	#Dy«micAny_DynEnum_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

878 
	#Dy«micAny_DynEnum_√xt
 
Dy«micAny_DynAny_√xt


	)

879 
	#Dy«micAny_DynEnum_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

880 
	#Dy«micAny_DynEnum_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

881 
	#Dy«micAny_DynEnum_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

882 
	#Dy«micAny_DynEnum_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

883 
	#Dy«micAny_DynEnum_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

884 
	#Dy«micAny_DynEnum_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

885 
	#Dy«micAny_DynEnum_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

886 
	#Dy«micAny_DynEnum_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

887 
	#Dy«micAny_DynEnum_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

888 
	#Dy«micAny_DynEnum_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

889 
	#Dy«micAny_DynEnum_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

890 
	#Dy«micAny_DynEnum_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

891 
	#Dy«micAny_DynEnum_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

892 
	#Dy«micAny_DynEnum_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

893 
	#Dy«micAny_DynEnum_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

894 
	#Dy«micAny_DynEnum_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

895 
	#Dy«micAny_DynEnum_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

896 
	#Dy«micAny_DynEnum_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

897 
	#Dy«micAny_DynEnum_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

898 
	#Dy«micAny_DynEnum_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

899 
	#Dy«micAny_DynEnum_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

900 
	#Dy«micAny_DynEnum_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

901 
	#Dy«micAny_DynEnum_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

902 
	#Dy«micAny_DynEnum_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

903 
	#Dy«micAny_DynEnum_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

904 
	#Dy«micAny_DynEnum_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

905 
	#Dy«micAny_DynEnum_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

906 
	#Dy«micAny_DynEnum_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

907 
	#Dy«micAny_DynEnum_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

908 
	#Dy«micAny_DynEnum_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

909 
CORBA_°rög
 
Dy«micAny_DynEnum_gë_as_°rög
(
Dy«micAny_DynEnum
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

910 
Dy«micAny_DynEnum_£t_as_°rög
(
Dy«micAny_DynEnum
 
_obj
, c⁄° 
CORBA_ch¨
 * 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

911 
CORBA_unsig√d_l⁄g
 
Dy«micAny_DynEnum_gë_as_ul⁄g
(
Dy«micAny_DynEnum
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

912 
Dy«micAny_DynEnum_£t_as_ul⁄g
(
Dy«micAny_DynEnum
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

913 
	#Dy«micAny_DynSåu˘_ty≥
 
Dy«micAny_DynAny_ty≥


	)

914 
	#Dy«micAny_DynSåu˘_assign
 
Dy«micAny_DynAny_assign


	)

915 
	#Dy«micAny_DynSåu˘_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

916 
	#Dy«micAny_DynSåu˘_to_™y
 
Dy«micAny_DynAny_to_™y


	)

917 
	#Dy«micAny_DynSåu˘_equÆ
 
Dy«micAny_DynAny_equÆ


	)

918 
	#Dy«micAny_DynSåu˘_de°roy
 
Dy«micAny_DynAny_de°roy


	)

919 
	#Dy«micAny_DynSåu˘_c›y
 
Dy«micAny_DynAny_c›y


	)

920 
	#Dy«micAny_DynSåu˘_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

921 
	#Dy«micAny_DynSåu˘_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

922 
	#Dy«micAny_DynSåu˘_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

923 
	#Dy«micAny_DynSåu˘_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

924 
	#Dy«micAny_DynSåu˘_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

925 
	#Dy«micAny_DynSåu˘_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

926 
	#Dy«micAny_DynSåu˘_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

927 
	#Dy«micAny_DynSåu˘_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

928 
	#Dy«micAny_DynSåu˘_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

929 
	#Dy«micAny_DynSåu˘_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

930 
	#Dy«micAny_DynSåu˘_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

931 
	#Dy«micAny_DynSåu˘_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

932 
	#Dy«micAny_DynSåu˘_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

933 
	#Dy«micAny_DynSåu˘_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

934 
	#Dy«micAny_DynSåu˘_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

935 
	#Dy«micAny_DynSåu˘_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

936 
	#Dy«micAny_DynSåu˘_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

937 
	#Dy«micAny_DynSåu˘_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

938 
	#Dy«micAny_DynSåu˘_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

939 
	#Dy«micAny_DynSåu˘_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

940 
	#Dy«micAny_DynSåu˘_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

941 
	#Dy«micAny_DynSåu˘_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

942 
	#Dy«micAny_DynSåu˘_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

943 
	#Dy«micAny_DynSåu˘_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

944 
	#Dy«micAny_DynSåu˘_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

945 
	#Dy«micAny_DynSåu˘_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

946 
	#Dy«micAny_DynSåu˘_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

947 
	#Dy«micAny_DynSåu˘_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

948 
	#Dy«micAny_DynSåu˘_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

949 
	#Dy«micAny_DynSåu˘_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

950 
	#Dy«micAny_DynSåu˘_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

951 
	#Dy«micAny_DynSåu˘_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

952 
	#Dy«micAny_DynSåu˘_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

953 
	#Dy«micAny_DynSåu˘_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

954 
	#Dy«micAny_DynSåu˘_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

955 
	#Dy«micAny_DynSåu˘_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

956 
	#Dy«micAny_DynSåu˘_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

957 
	#Dy«micAny_DynSåu˘_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

958 
	#Dy«micAny_DynSåu˘_£ek
 
Dy«micAny_DynAny_£ek


	)

959 
	#Dy«micAny_DynSåu˘_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

960 
	#Dy«micAny_DynSåu˘_√xt
 
Dy«micAny_DynAny_√xt


	)

961 
	#Dy«micAny_DynSåu˘_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

962 
	#Dy«micAny_DynSåu˘_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

963 
	#Dy«micAny_DynSåu˘_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

964 
	#Dy«micAny_DynSåu˘_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

965 
	#Dy«micAny_DynSåu˘_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

966 
	#Dy«micAny_DynSåu˘_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

967 
	#Dy«micAny_DynSåu˘_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

968 
	#Dy«micAny_DynSåu˘_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

969 
	#Dy«micAny_DynSåu˘_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

970 
	#Dy«micAny_DynSåu˘_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

971 
	#Dy«micAny_DynSåu˘_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

972 
	#Dy«micAny_DynSåu˘_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

973 
	#Dy«micAny_DynSåu˘_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

974 
	#Dy«micAny_DynSåu˘_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

975 
	#Dy«micAny_DynSåu˘_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

976 
	#Dy«micAny_DynSåu˘_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

977 
	#Dy«micAny_DynSåu˘_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

978 
	#Dy«micAny_DynSåu˘_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

979 
	#Dy«micAny_DynSåu˘_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

980 
	#Dy«micAny_DynSåu˘_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

981 
	#Dy«micAny_DynSåu˘_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

982 
	#Dy«micAny_DynSåu˘_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

983 
	#Dy«micAny_DynSåu˘_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

984 
	#Dy«micAny_DynSåu˘_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

985 
	#Dy«micAny_DynSåu˘_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

986 
	#Dy«micAny_DynSåu˘_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

987 
	#Dy«micAny_DynSåu˘_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

988 
	#Dy«micAny_DynSåu˘_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

989 
	#Dy«micAny_DynSåu˘_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

990 
	#Dy«micAny_DynSåu˘_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

991 
Dy«micAny_FõldName
 
Dy«micAny_DynSåu˘_cuºít_membî_«me
(
Dy«micAny_DynSåu˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

992 
CORBA_TCKöd
 
Dy«micAny_DynSåu˘_cuºít_membî_köd
(
Dy«micAny_DynSåu˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

993 
Dy«micAny_NameVÆuePaúSeq
* 
Dy«micAny_DynSåu˘_gë_membîs
(
Dy«micAny_DynSåu˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

994 
Dy«micAny_DynSåu˘_£t_membîs
(
Dy«micAny_DynSåu˘
 
_obj
, c⁄° 
Dy«micAny_NameVÆuePaúSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

995 
Dy«micAny_NameDynAnyPaúSeq
* 
Dy«micAny_DynSåu˘_gë_membîs_as_dyn_™y
(
Dy«micAny_DynSåu˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

996 
Dy«micAny_DynSåu˘_£t_membîs_as_dyn_™y
(
Dy«micAny_DynSåu˘
 
_obj
, c⁄° 
Dy«micAny_NameDynAnyPaúSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

997 
	#Dy«micAny_DynUni⁄_ty≥
 
Dy«micAny_DynAny_ty≥


	)

998 
	#Dy«micAny_DynUni⁄_assign
 
Dy«micAny_DynAny_assign


	)

999 
	#Dy«micAny_DynUni⁄_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

1000 
	#Dy«micAny_DynUni⁄_to_™y
 
Dy«micAny_DynAny_to_™y


	)

1001 
	#Dy«micAny_DynUni⁄_equÆ
 
Dy«micAny_DynAny_equÆ


	)

1002 
	#Dy«micAny_DynUni⁄_de°roy
 
Dy«micAny_DynAny_de°roy


	)

1003 
	#Dy«micAny_DynUni⁄_c›y
 
Dy«micAny_DynAny_c›y


	)

1004 
	#Dy«micAny_DynUni⁄_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

1005 
	#Dy«micAny_DynUni⁄_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

1006 
	#Dy«micAny_DynUni⁄_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

1007 
	#Dy«micAny_DynUni⁄_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

1008 
	#Dy«micAny_DynUni⁄_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

1009 
	#Dy«micAny_DynUni⁄_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

1010 
	#Dy«micAny_DynUni⁄_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

1011 
	#Dy«micAny_DynUni⁄_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

1012 
	#Dy«micAny_DynUni⁄_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

1013 
	#Dy«micAny_DynUni⁄_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

1014 
	#Dy«micAny_DynUni⁄_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

1015 
	#Dy«micAny_DynUni⁄_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

1016 
	#Dy«micAny_DynUni⁄_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

1017 
	#Dy«micAny_DynUni⁄_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

1018 
	#Dy«micAny_DynUni⁄_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

1019 
	#Dy«micAny_DynUni⁄_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

1020 
	#Dy«micAny_DynUni⁄_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

1021 
	#Dy«micAny_DynUni⁄_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

1022 
	#Dy«micAny_DynUni⁄_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

1023 
	#Dy«micAny_DynUni⁄_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

1024 
	#Dy«micAny_DynUni⁄_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

1025 
	#Dy«micAny_DynUni⁄_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

1026 
	#Dy«micAny_DynUni⁄_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

1027 
	#Dy«micAny_DynUni⁄_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

1028 
	#Dy«micAny_DynUni⁄_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

1029 
	#Dy«micAny_DynUni⁄_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

1030 
	#Dy«micAny_DynUni⁄_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

1031 
	#Dy«micAny_DynUni⁄_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

1032 
	#Dy«micAny_DynUni⁄_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

1033 
	#Dy«micAny_DynUni⁄_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

1034 
	#Dy«micAny_DynUni⁄_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

1035 
	#Dy«micAny_DynUni⁄_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

1036 
	#Dy«micAny_DynUni⁄_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

1037 
	#Dy«micAny_DynUni⁄_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

1038 
	#Dy«micAny_DynUni⁄_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

1039 
	#Dy«micAny_DynUni⁄_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

1040 
	#Dy«micAny_DynUni⁄_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

1041 
	#Dy«micAny_DynUni⁄_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

1042 
	#Dy«micAny_DynUni⁄_£ek
 
Dy«micAny_DynAny_£ek


	)

1043 
	#Dy«micAny_DynUni⁄_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

1044 
	#Dy«micAny_DynUni⁄_√xt
 
Dy«micAny_DynAny_√xt


	)

1045 
	#Dy«micAny_DynUni⁄_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

1046 
	#Dy«micAny_DynUni⁄_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

1047 
	#Dy«micAny_DynUni⁄_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

1048 
	#Dy«micAny_DynUni⁄_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

1049 
	#Dy«micAny_DynUni⁄_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

1050 
	#Dy«micAny_DynUni⁄_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

1051 
	#Dy«micAny_DynUni⁄_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

1052 
	#Dy«micAny_DynUni⁄_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

1053 
	#Dy«micAny_DynUni⁄_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

1054 
	#Dy«micAny_DynUni⁄_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

1055 
	#Dy«micAny_DynUni⁄_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

1056 
	#Dy«micAny_DynUni⁄_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

1057 
	#Dy«micAny_DynUni⁄_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

1058 
	#Dy«micAny_DynUni⁄_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

1059 
	#Dy«micAny_DynUni⁄_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

1060 
	#Dy«micAny_DynUni⁄_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

1061 
	#Dy«micAny_DynUni⁄_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

1062 
	#Dy«micAny_DynUni⁄_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

1063 
	#Dy«micAny_DynUni⁄_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

1064 
	#Dy«micAny_DynUni⁄_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

1065 
	#Dy«micAny_DynUni⁄_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

1066 
	#Dy«micAny_DynUni⁄_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

1067 
	#Dy«micAny_DynUni⁄_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

1068 
	#Dy«micAny_DynUni⁄_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

1069 
	#Dy«micAny_DynUni⁄_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

1070 
	#Dy«micAny_DynUni⁄_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

1071 
	#Dy«micAny_DynUni⁄_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

1072 
	#Dy«micAny_DynUni⁄_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

1073 
	#Dy«micAny_DynUni⁄_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

1074 
	#Dy«micAny_DynUni⁄_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

1075 
Dy«micAny_DynAny
 
Dy«micAny_DynUni⁄_gë_dis¸imö©‹
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1076 
Dy«micAny_DynUni⁄_£t_dis¸imö©‹
(
Dy«micAny_DynUni⁄
 
_obj
, c⁄° 
Dy«micAny_DynAny
 
d
, 
CORBA_Envú⁄mít
 *
ev
);

1077 
Dy«micAny_DynUni⁄_£t_to_deÁu…_membî
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1078 
Dy«micAny_DynUni⁄_£t_to_no_a˘ive_membî
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1079 
CORBA_boﬁón
 
Dy«micAny_DynUni⁄_has_no_a˘ive_membî
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1080 
CORBA_TCKöd
 
Dy«micAny_DynUni⁄_dis¸imö©‹_köd
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1081 
Dy«micAny_DynAny
 
Dy«micAny_DynUni⁄_membî
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1082 
Dy«micAny_FõldName
 
Dy«micAny_DynUni⁄_membî_«me
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1083 
CORBA_TCKöd
 
Dy«micAny_DynUni⁄_membî_köd
(
Dy«micAny_DynUni⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1084 
	#Dy«micAny_DynSequí˚_ty≥
 
Dy«micAny_DynAny_ty≥


	)

1085 
	#Dy«micAny_DynSequí˚_assign
 
Dy«micAny_DynAny_assign


	)

1086 
	#Dy«micAny_DynSequí˚_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

1087 
	#Dy«micAny_DynSequí˚_to_™y
 
Dy«micAny_DynAny_to_™y


	)

1088 
	#Dy«micAny_DynSequí˚_equÆ
 
Dy«micAny_DynAny_equÆ


	)

1089 
	#Dy«micAny_DynSequí˚_de°roy
 
Dy«micAny_DynAny_de°roy


	)

1090 
	#Dy«micAny_DynSequí˚_c›y
 
Dy«micAny_DynAny_c›y


	)

1091 
	#Dy«micAny_DynSequí˚_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

1092 
	#Dy«micAny_DynSequí˚_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

1093 
	#Dy«micAny_DynSequí˚_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

1094 
	#Dy«micAny_DynSequí˚_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

1095 
	#Dy«micAny_DynSequí˚_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

1096 
	#Dy«micAny_DynSequí˚_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

1097 
	#Dy«micAny_DynSequí˚_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

1098 
	#Dy«micAny_DynSequí˚_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

1099 
	#Dy«micAny_DynSequí˚_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

1100 
	#Dy«micAny_DynSequí˚_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

1101 
	#Dy«micAny_DynSequí˚_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

1102 
	#Dy«micAny_DynSequí˚_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

1103 
	#Dy«micAny_DynSequí˚_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

1104 
	#Dy«micAny_DynSequí˚_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

1105 
	#Dy«micAny_DynSequí˚_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

1106 
	#Dy«micAny_DynSequí˚_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

1107 
	#Dy«micAny_DynSequí˚_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

1108 
	#Dy«micAny_DynSequí˚_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

1109 
	#Dy«micAny_DynSequí˚_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

1110 
	#Dy«micAny_DynSequí˚_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

1111 
	#Dy«micAny_DynSequí˚_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

1112 
	#Dy«micAny_DynSequí˚_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

1113 
	#Dy«micAny_DynSequí˚_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

1114 
	#Dy«micAny_DynSequí˚_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

1115 
	#Dy«micAny_DynSequí˚_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

1116 
	#Dy«micAny_DynSequí˚_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

1117 
	#Dy«micAny_DynSequí˚_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

1118 
	#Dy«micAny_DynSequí˚_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

1119 
	#Dy«micAny_DynSequí˚_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

1120 
	#Dy«micAny_DynSequí˚_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

1121 
	#Dy«micAny_DynSequí˚_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

1122 
	#Dy«micAny_DynSequí˚_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

1123 
	#Dy«micAny_DynSequí˚_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

1124 
	#Dy«micAny_DynSequí˚_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

1125 
	#Dy«micAny_DynSequí˚_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

1126 
	#Dy«micAny_DynSequí˚_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

1127 
	#Dy«micAny_DynSequí˚_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

1128 
	#Dy«micAny_DynSequí˚_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

1129 
	#Dy«micAny_DynSequí˚_£ek
 
Dy«micAny_DynAny_£ek


	)

1130 
	#Dy«micAny_DynSequí˚_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

1131 
	#Dy«micAny_DynSequí˚_√xt
 
Dy«micAny_DynAny_√xt


	)

1132 
	#Dy«micAny_DynSequí˚_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

1133 
	#Dy«micAny_DynSequí˚_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

1134 
	#Dy«micAny_DynSequí˚_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

1135 
	#Dy«micAny_DynSequí˚_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

1136 
	#Dy«micAny_DynSequí˚_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

1137 
	#Dy«micAny_DynSequí˚_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

1138 
	#Dy«micAny_DynSequí˚_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

1139 
	#Dy«micAny_DynSequí˚_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

1140 
	#Dy«micAny_DynSequí˚_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

1141 
	#Dy«micAny_DynSequí˚_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

1142 
	#Dy«micAny_DynSequí˚_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

1143 
	#Dy«micAny_DynSequí˚_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

1144 
	#Dy«micAny_DynSequí˚_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

1145 
	#Dy«micAny_DynSequí˚_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

1146 
	#Dy«micAny_DynSequí˚_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

1147 
	#Dy«micAny_DynSequí˚_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

1148 
	#Dy«micAny_DynSequí˚_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

1149 
	#Dy«micAny_DynSequí˚_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

1150 
	#Dy«micAny_DynSequí˚_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

1151 
	#Dy«micAny_DynSequí˚_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

1152 
	#Dy«micAny_DynSequí˚_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

1153 
	#Dy«micAny_DynSequí˚_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

1154 
	#Dy«micAny_DynSequí˚_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

1155 
	#Dy«micAny_DynSequí˚_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

1156 
	#Dy«micAny_DynSequí˚_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

1157 
	#Dy«micAny_DynSequí˚_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

1158 
	#Dy«micAny_DynSequí˚_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

1159 
	#Dy«micAny_DynSequí˚_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

1160 
	#Dy«micAny_DynSequí˚_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

1161 
	#Dy«micAny_DynSequí˚_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

1162 
CORBA_unsig√d_l⁄g
 
Dy«micAny_DynSequí˚_gë_Àngth
(
Dy«micAny_DynSequí˚
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1163 
Dy«micAny_DynSequí˚_£t_Àngth
(
Dy«micAny_DynSequí˚
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
Àn
, 
CORBA_Envú⁄mít
 *
ev
);

1164 
Dy«micAny_AnySeq
* 
Dy«micAny_DynSequí˚_gë_ñemíts
(
Dy«micAny_DynSequí˚
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1165 
Dy«micAny_DynSequí˚_£t_ñemíts
(
Dy«micAny_DynSequí˚
 
_obj
, c⁄° 
Dy«micAny_AnySeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1166 
Dy«micAny_DynAnySeq
* 
Dy«micAny_DynSequí˚_gë_ñemíts_as_dyn_™y
(
Dy«micAny_DynSequí˚
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1167 
Dy«micAny_DynSequí˚_£t_ñemíts_as_dyn_™y
(
Dy«micAny_DynSequí˚
 
_obj
, c⁄° 
Dy«micAny_DynAnySeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1168 
	#Dy«micAny_DynAºay_ty≥
 
Dy«micAny_DynAny_ty≥


	)

1169 
	#Dy«micAny_DynAºay_assign
 
Dy«micAny_DynAny_assign


	)

1170 
	#Dy«micAny_DynAºay_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

1171 
	#Dy«micAny_DynAºay_to_™y
 
Dy«micAny_DynAny_to_™y


	)

1172 
	#Dy«micAny_DynAºay_equÆ
 
Dy«micAny_DynAny_equÆ


	)

1173 
	#Dy«micAny_DynAºay_de°roy
 
Dy«micAny_DynAny_de°roy


	)

1174 
	#Dy«micAny_DynAºay_c›y
 
Dy«micAny_DynAny_c›y


	)

1175 
	#Dy«micAny_DynAºay_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

1176 
	#Dy«micAny_DynAºay_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

1177 
	#Dy«micAny_DynAºay_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

1178 
	#Dy«micAny_DynAºay_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

1179 
	#Dy«micAny_DynAºay_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

1180 
	#Dy«micAny_DynAºay_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

1181 
	#Dy«micAny_DynAºay_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

1182 
	#Dy«micAny_DynAºay_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

1183 
	#Dy«micAny_DynAºay_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

1184 
	#Dy«micAny_DynAºay_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

1185 
	#Dy«micAny_DynAºay_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

1186 
	#Dy«micAny_DynAºay_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

1187 
	#Dy«micAny_DynAºay_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

1188 
	#Dy«micAny_DynAºay_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

1189 
	#Dy«micAny_DynAºay_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

1190 
	#Dy«micAny_DynAºay_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

1191 
	#Dy«micAny_DynAºay_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

1192 
	#Dy«micAny_DynAºay_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

1193 
	#Dy«micAny_DynAºay_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

1194 
	#Dy«micAny_DynAºay_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

1195 
	#Dy«micAny_DynAºay_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

1196 
	#Dy«micAny_DynAºay_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

1197 
	#Dy«micAny_DynAºay_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

1198 
	#Dy«micAny_DynAºay_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

1199 
	#Dy«micAny_DynAºay_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

1200 
	#Dy«micAny_DynAºay_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

1201 
	#Dy«micAny_DynAºay_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

1202 
	#Dy«micAny_DynAºay_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

1203 
	#Dy«micAny_DynAºay_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

1204 
	#Dy«micAny_DynAºay_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

1205 
	#Dy«micAny_DynAºay_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

1206 
	#Dy«micAny_DynAºay_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

1207 
	#Dy«micAny_DynAºay_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

1208 
	#Dy«micAny_DynAºay_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

1209 
	#Dy«micAny_DynAºay_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

1210 
	#Dy«micAny_DynAºay_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

1211 
	#Dy«micAny_DynAºay_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

1212 
	#Dy«micAny_DynAºay_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

1213 
	#Dy«micAny_DynAºay_£ek
 
Dy«micAny_DynAny_£ek


	)

1214 
	#Dy«micAny_DynAºay_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

1215 
	#Dy«micAny_DynAºay_√xt
 
Dy«micAny_DynAny_√xt


	)

1216 
	#Dy«micAny_DynAºay_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

1217 
	#Dy«micAny_DynAºay_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

1218 
	#Dy«micAny_DynAºay_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

1219 
	#Dy«micAny_DynAºay_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

1220 
	#Dy«micAny_DynAºay_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

1221 
	#Dy«micAny_DynAºay_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

1222 
	#Dy«micAny_DynAºay_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

1223 
	#Dy«micAny_DynAºay_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

1224 
	#Dy«micAny_DynAºay_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

1225 
	#Dy«micAny_DynAºay_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

1226 
	#Dy«micAny_DynAºay_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

1227 
	#Dy«micAny_DynAºay_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

1228 
	#Dy«micAny_DynAºay_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

1229 
	#Dy«micAny_DynAºay_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

1230 
	#Dy«micAny_DynAºay_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

1231 
	#Dy«micAny_DynAºay_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

1232 
	#Dy«micAny_DynAºay_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

1233 
	#Dy«micAny_DynAºay_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

1234 
	#Dy«micAny_DynAºay_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

1235 
	#Dy«micAny_DynAºay_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

1236 
	#Dy«micAny_DynAºay_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

1237 
	#Dy«micAny_DynAºay_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

1238 
	#Dy«micAny_DynAºay_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

1239 
	#Dy«micAny_DynAºay_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

1240 
	#Dy«micAny_DynAºay_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

1241 
	#Dy«micAny_DynAºay_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

1242 
	#Dy«micAny_DynAºay_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

1243 
	#Dy«micAny_DynAºay_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

1244 
	#Dy«micAny_DynAºay_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

1245 
	#Dy«micAny_DynAºay_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

1246 
Dy«micAny_AnySeq
* 
Dy«micAny_DynAºay_gë_ñemíts
(
Dy«micAny_DynAºay
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1247 
Dy«micAny_DynAºay_£t_ñemíts
(
Dy«micAny_DynAºay
 
_obj
, c⁄° 
Dy«micAny_AnySeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1248 
Dy«micAny_DynAnySeq
* 
Dy«micAny_DynAºay_gë_ñemíts_as_dyn_™y
(
Dy«micAny_DynAºay
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1249 
Dy«micAny_DynAºay_£t_ñemíts_as_dyn_™y
(
Dy«micAny_DynAºay
 
_obj
, c⁄° 
Dy«micAny_DynAnySeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1250 
	#Dy«micAny_DynVÆueComm⁄_ty≥
 
Dy«micAny_DynAny_ty≥


	)

1251 
	#Dy«micAny_DynVÆueComm⁄_assign
 
Dy«micAny_DynAny_assign


	)

1252 
	#Dy«micAny_DynVÆueComm⁄_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

1253 
	#Dy«micAny_DynVÆueComm⁄_to_™y
 
Dy«micAny_DynAny_to_™y


	)

1254 
	#Dy«micAny_DynVÆueComm⁄_equÆ
 
Dy«micAny_DynAny_equÆ


	)

1255 
	#Dy«micAny_DynVÆueComm⁄_de°roy
 
Dy«micAny_DynAny_de°roy


	)

1256 
	#Dy«micAny_DynVÆueComm⁄_c›y
 
Dy«micAny_DynAny_c›y


	)

1257 
	#Dy«micAny_DynVÆueComm⁄_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

1258 
	#Dy«micAny_DynVÆueComm⁄_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

1259 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

1260 
	#Dy«micAny_DynVÆueComm⁄_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

1261 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

1262 
	#Dy«micAny_DynVÆueComm⁄_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

1263 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

1264 
	#Dy«micAny_DynVÆueComm⁄_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

1265 
	#Dy«micAny_DynVÆueComm⁄_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

1266 
	#Dy«micAny_DynVÆueComm⁄_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

1267 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

1268 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

1269 
	#Dy«micAny_DynVÆueComm⁄_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

1270 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

1271 
	#Dy«micAny_DynVÆueComm⁄_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

1272 
	#Dy«micAny_DynVÆueComm⁄_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

1273 
	#Dy«micAny_DynVÆueComm⁄_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

1274 
	#Dy«micAny_DynVÆueComm⁄_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

1275 
	#Dy«micAny_DynVÆueComm⁄_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

1276 
	#Dy«micAny_DynVÆueComm⁄_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

1277 
	#Dy«micAny_DynVÆueComm⁄_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

1278 
	#Dy«micAny_DynVÆueComm⁄_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

1279 
	#Dy«micAny_DynVÆueComm⁄_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

1280 
	#Dy«micAny_DynVÆueComm⁄_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

1281 
	#Dy«micAny_DynVÆueComm⁄_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

1282 
	#Dy«micAny_DynVÆueComm⁄_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

1283 
	#Dy«micAny_DynVÆueComm⁄_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

1284 
	#Dy«micAny_DynVÆueComm⁄_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

1285 
	#Dy«micAny_DynVÆueComm⁄_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

1286 
	#Dy«micAny_DynVÆueComm⁄_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

1287 
	#Dy«micAny_DynVÆueComm⁄_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

1288 
	#Dy«micAny_DynVÆueComm⁄_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

1289 
	#Dy«micAny_DynVÆueComm⁄_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

1290 
	#Dy«micAny_DynVÆueComm⁄_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

1291 
	#Dy«micAny_DynVÆueComm⁄_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

1292 
	#Dy«micAny_DynVÆueComm⁄_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

1293 
	#Dy«micAny_DynVÆueComm⁄_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

1294 
	#Dy«micAny_DynVÆueComm⁄_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

1295 
	#Dy«micAny_DynVÆueComm⁄_£ek
 
Dy«micAny_DynAny_£ek


	)

1296 
	#Dy«micAny_DynVÆueComm⁄_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

1297 
	#Dy«micAny_DynVÆueComm⁄_√xt
 
Dy«micAny_DynAny_√xt


	)

1298 
	#Dy«micAny_DynVÆueComm⁄_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

1299 
	#Dy«micAny_DynVÆueComm⁄_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

1300 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

1301 
	#Dy«micAny_DynVÆueComm⁄_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

1302 
	#Dy«micAny_DynVÆueComm⁄_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

1303 
	#Dy«micAny_DynVÆueComm⁄_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

1304 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

1305 
	#Dy«micAny_DynVÆueComm⁄_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

1306 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

1307 
	#Dy«micAny_DynVÆueComm⁄_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

1308 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

1309 
	#Dy«micAny_DynVÆueComm⁄_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

1310 
	#Dy«micAny_DynVÆueComm⁄_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

1311 
	#Dy«micAny_DynVÆueComm⁄_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

1312 
	#Dy«micAny_DynVÆueComm⁄_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

1313 
	#Dy«micAny_DynVÆueComm⁄_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

1314 
	#Dy«micAny_DynVÆueComm⁄_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

1315 
	#Dy«micAny_DynVÆueComm⁄_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

1316 
	#Dy«micAny_DynVÆueComm⁄_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

1317 
	#Dy«micAny_DynVÆueComm⁄_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

1318 
	#Dy«micAny_DynVÆueComm⁄_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

1319 
	#Dy«micAny_DynVÆueComm⁄_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

1320 
	#Dy«micAny_DynVÆueComm⁄_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

1321 
	#Dy«micAny_DynVÆueComm⁄_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

1322 
	#Dy«micAny_DynVÆueComm⁄_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

1323 
	#Dy«micAny_DynVÆueComm⁄_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

1324 
	#Dy«micAny_DynVÆueComm⁄_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

1325 
	#Dy«micAny_DynVÆueComm⁄_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

1326 
	#Dy«micAny_DynVÆueComm⁄_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

1327 
	#Dy«micAny_DynVÆueComm⁄_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

1328 
CORBA_boﬁón
 
Dy«micAny_DynVÆueComm⁄_is_nuŒ
(
Dy«micAny_DynVÆueComm⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1329 
Dy«micAny_DynVÆueComm⁄_£t_to_nuŒ
(
Dy«micAny_DynVÆueComm⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1330 
Dy«micAny_DynVÆueComm⁄_£t_to_vÆue
(
Dy«micAny_DynVÆueComm⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1331 
	#Dy«micAny_DynVÆue_ty≥
 
Dy«micAny_DynAny_ty≥


	)

1332 
	#Dy«micAny_DynVÆue_assign
 
Dy«micAny_DynAny_assign


	)

1333 
	#Dy«micAny_DynVÆue_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

1334 
	#Dy«micAny_DynVÆue_to_™y
 
Dy«micAny_DynAny_to_™y


	)

1335 
	#Dy«micAny_DynVÆue_equÆ
 
Dy«micAny_DynAny_equÆ


	)

1336 
	#Dy«micAny_DynVÆue_de°roy
 
Dy«micAny_DynAny_de°roy


	)

1337 
	#Dy«micAny_DynVÆue_c›y
 
Dy«micAny_DynAny_c›y


	)

1338 
	#Dy«micAny_DynVÆue_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

1339 
	#Dy«micAny_DynVÆue_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

1340 
	#Dy«micAny_DynVÆue_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

1341 
	#Dy«micAny_DynVÆue_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

1342 
	#Dy«micAny_DynVÆue_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

1343 
	#Dy«micAny_DynVÆue_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

1344 
	#Dy«micAny_DynVÆue_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

1345 
	#Dy«micAny_DynVÆue_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

1346 
	#Dy«micAny_DynVÆue_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

1347 
	#Dy«micAny_DynVÆue_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

1348 
	#Dy«micAny_DynVÆue_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

1349 
	#Dy«micAny_DynVÆue_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

1350 
	#Dy«micAny_DynVÆue_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

1351 
	#Dy«micAny_DynVÆue_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

1352 
	#Dy«micAny_DynVÆue_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

1353 
	#Dy«micAny_DynVÆue_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

1354 
	#Dy«micAny_DynVÆue_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

1355 
	#Dy«micAny_DynVÆue_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

1356 
	#Dy«micAny_DynVÆue_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

1357 
	#Dy«micAny_DynVÆue_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

1358 
	#Dy«micAny_DynVÆue_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

1359 
	#Dy«micAny_DynVÆue_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

1360 
	#Dy«micAny_DynVÆue_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

1361 
	#Dy«micAny_DynVÆue_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

1362 
	#Dy«micAny_DynVÆue_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

1363 
	#Dy«micAny_DynVÆue_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

1364 
	#Dy«micAny_DynVÆue_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

1365 
	#Dy«micAny_DynVÆue_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

1366 
	#Dy«micAny_DynVÆue_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

1367 
	#Dy«micAny_DynVÆue_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

1368 
	#Dy«micAny_DynVÆue_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

1369 
	#Dy«micAny_DynVÆue_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

1370 
	#Dy«micAny_DynVÆue_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

1371 
	#Dy«micAny_DynVÆue_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

1372 
	#Dy«micAny_DynVÆue_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

1373 
	#Dy«micAny_DynVÆue_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

1374 
	#Dy«micAny_DynVÆue_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

1375 
	#Dy«micAny_DynVÆue_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

1376 
	#Dy«micAny_DynVÆue_£ek
 
Dy«micAny_DynAny_£ek


	)

1377 
	#Dy«micAny_DynVÆue_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

1378 
	#Dy«micAny_DynVÆue_√xt
 
Dy«micAny_DynAny_√xt


	)

1379 
	#Dy«micAny_DynVÆue_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

1380 
	#Dy«micAny_DynVÆue_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

1381 
	#Dy«micAny_DynVÆue_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

1382 
	#Dy«micAny_DynVÆue_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

1383 
	#Dy«micAny_DynVÆue_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

1384 
	#Dy«micAny_DynVÆue_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

1385 
	#Dy«micAny_DynVÆue_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

1386 
	#Dy«micAny_DynVÆue_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

1387 
	#Dy«micAny_DynVÆue_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

1388 
	#Dy«micAny_DynVÆue_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

1389 
	#Dy«micAny_DynVÆue_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

1390 
	#Dy«micAny_DynVÆue_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

1391 
	#Dy«micAny_DynVÆue_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

1392 
	#Dy«micAny_DynVÆue_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

1393 
	#Dy«micAny_DynVÆue_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

1394 
	#Dy«micAny_DynVÆue_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

1395 
	#Dy«micAny_DynVÆue_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

1396 
	#Dy«micAny_DynVÆue_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

1397 
	#Dy«micAny_DynVÆue_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

1398 
	#Dy«micAny_DynVÆue_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

1399 
	#Dy«micAny_DynVÆue_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

1400 
	#Dy«micAny_DynVÆue_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

1401 
	#Dy«micAny_DynVÆue_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

1402 
	#Dy«micAny_DynVÆue_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

1403 
	#Dy«micAny_DynVÆue_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

1404 
	#Dy«micAny_DynVÆue_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

1405 
	#Dy«micAny_DynVÆue_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

1406 
	#Dy«micAny_DynVÆue_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

1407 
	#Dy«micAny_DynVÆue_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

1408 
	#Dy«micAny_DynVÆue_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

1409 
	#Dy«micAny_DynVÆue_is_nuŒ
 
Dy«micAny_DynVÆueComm⁄_is_nuŒ


	)

1410 
	#Dy«micAny_DynVÆue_£t_to_nuŒ
 
Dy«micAny_DynVÆueComm⁄_£t_to_nuŒ


	)

1411 
	#Dy«micAny_DynVÆue_£t_to_vÆue
 
Dy«micAny_DynVÆueComm⁄_£t_to_vÆue


	)

1412 
Dy«micAny_FõldName
 
Dy«micAny_DynVÆue_cuºít_membî_«me
(
Dy«micAny_DynVÆue
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1413 
CORBA_TCKöd
 
Dy«micAny_DynVÆue_cuºít_membî_köd
(
Dy«micAny_DynVÆue
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1414 
Dy«micAny_NameVÆuePaúSeq
* 
Dy«micAny_DynVÆue_gë_membîs
(
Dy«micAny_DynVÆue
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1415 
Dy«micAny_DynVÆue_£t_membîs
(
Dy«micAny_DynVÆue
 
_obj
, c⁄° 
Dy«micAny_NameVÆuePaúSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1416 
Dy«micAny_NameDynAnyPaúSeq
* 
Dy«micAny_DynVÆue_gë_membîs_as_dyn_™y
(
Dy«micAny_DynVÆue
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1417 
Dy«micAny_DynVÆue_£t_membîs_as_dyn_™y
(
Dy«micAny_DynVÆue
 
_obj
, c⁄° 
Dy«micAny_NameDynAnyPaúSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1418 
	#Dy«micAny_DynVÆueBox_ty≥
 
Dy«micAny_DynAny_ty≥


	)

1419 
	#Dy«micAny_DynVÆueBox_assign
 
Dy«micAny_DynAny_assign


	)

1420 
	#Dy«micAny_DynVÆueBox_‰om_™y
 
Dy«micAny_DynAny_‰om_™y


	)

1421 
	#Dy«micAny_DynVÆueBox_to_™y
 
Dy«micAny_DynAny_to_™y


	)

1422 
	#Dy«micAny_DynVÆueBox_equÆ
 
Dy«micAny_DynAny_equÆ


	)

1423 
	#Dy«micAny_DynVÆueBox_de°roy
 
Dy«micAny_DynAny_de°roy


	)

1424 
	#Dy«micAny_DynVÆueBox_c›y
 
Dy«micAny_DynAny_c›y


	)

1425 
	#Dy«micAny_DynVÆueBox_ö£π_boﬁón
 
Dy«micAny_DynAny_ö£π_boﬁón


	)

1426 
	#Dy«micAny_DynVÆueBox_ö£π_o˘ë
 
Dy«micAny_DynAny_ö£π_o˘ë


	)

1427 
	#Dy«micAny_DynVÆueBox_ö£π_ch¨
 
Dy«micAny_DynAny_ö£π_ch¨


	)

1428 
	#Dy«micAny_DynVÆueBox_ö£π_sh‹t
 
Dy«micAny_DynAny_ö£π_sh‹t


	)

1429 
	#Dy«micAny_DynVÆueBox_ö£π_ush‹t
 
Dy«micAny_DynAny_ö£π_ush‹t


	)

1430 
	#Dy«micAny_DynVÆueBox_ö£π_l⁄g
 
Dy«micAny_DynAny_ö£π_l⁄g


	)

1431 
	#Dy«micAny_DynVÆueBox_ö£π_ul⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄g


	)

1432 
	#Dy«micAny_DynVÆueBox_ö£π_Êﬂt
 
Dy«micAny_DynAny_ö£π_Êﬂt


	)

1433 
	#Dy«micAny_DynVÆueBox_ö£π_doubÀ
 
Dy«micAny_DynAny_ö£π_doubÀ


	)

1434 
	#Dy«micAny_DynVÆueBox_ö£π_°rög
 
Dy«micAny_DynAny_ö£π_°rög


	)

1435 
	#Dy«micAny_DynVÆueBox_ö£π_ª„ªn˚
 
Dy«micAny_DynAny_ö£π_ª„ªn˚


	)

1436 
	#Dy«micAny_DynVÆueBox_ö£π_ty≥code
 
Dy«micAny_DynAny_ö£π_ty≥code


	)

1437 
	#Dy«micAny_DynVÆueBox_ö£π_l⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g


	)

1438 
	#Dy«micAny_DynVÆueBox_ö£π_ul⁄gl⁄g
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g


	)

1439 
	#Dy«micAny_DynVÆueBox_ö£π_l⁄gdoubÀ
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ


	)

1440 
	#Dy«micAny_DynVÆueBox_ö£π_wch¨
 
Dy«micAny_DynAny_ö£π_wch¨


	)

1441 
	#Dy«micAny_DynVÆueBox_ö£π_w°rög
 
Dy«micAny_DynAny_ö£π_w°rög


	)

1442 
	#Dy«micAny_DynVÆueBox_ö£π_™y
 
Dy«micAny_DynAny_ö£π_™y


	)

1443 
	#Dy«micAny_DynVÆueBox_ö£π_dyn_™y
 
Dy«micAny_DynAny_ö£π_dyn_™y


	)

1444 
	#Dy«micAny_DynVÆueBox_gë_boﬁón
 
Dy«micAny_DynAny_gë_boﬁón


	)

1445 
	#Dy«micAny_DynVÆueBox_gë_o˘ë
 
Dy«micAny_DynAny_gë_o˘ë


	)

1446 
	#Dy«micAny_DynVÆueBox_gë_ch¨
 
Dy«micAny_DynAny_gë_ch¨


	)

1447 
	#Dy«micAny_DynVÆueBox_gë_sh‹t
 
Dy«micAny_DynAny_gë_sh‹t


	)

1448 
	#Dy«micAny_DynVÆueBox_gë_ush‹t
 
Dy«micAny_DynAny_gë_ush‹t


	)

1449 
	#Dy«micAny_DynVÆueBox_gë_l⁄g
 
Dy«micAny_DynAny_gë_l⁄g


	)

1450 
	#Dy«micAny_DynVÆueBox_gë_ul⁄g
 
Dy«micAny_DynAny_gë_ul⁄g


	)

1451 
	#Dy«micAny_DynVÆueBox_gë_Êﬂt
 
Dy«micAny_DynAny_gë_Êﬂt


	)

1452 
	#Dy«micAny_DynVÆueBox_gë_doubÀ
 
Dy«micAny_DynAny_gë_doubÀ


	)

1453 
	#Dy«micAny_DynVÆueBox_gë_°rög
 
Dy«micAny_DynAny_gë_°rög


	)

1454 
	#Dy«micAny_DynVÆueBox_gë_ª„ªn˚
 
Dy«micAny_DynAny_gë_ª„ªn˚


	)

1455 
	#Dy«micAny_DynVÆueBox_gë_ty≥code
 
Dy«micAny_DynAny_gë_ty≥code


	)

1456 
	#Dy«micAny_DynVÆueBox_gë_l⁄gl⁄g
 
Dy«micAny_DynAny_gë_l⁄gl⁄g


	)

1457 
	#Dy«micAny_DynVÆueBox_gë_ul⁄gl⁄g
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g


	)

1458 
	#Dy«micAny_DynVÆueBox_gë_l⁄gdoubÀ
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ


	)

1459 
	#Dy«micAny_DynVÆueBox_gë_wch¨
 
Dy«micAny_DynAny_gë_wch¨


	)

1460 
	#Dy«micAny_DynVÆueBox_gë_w°rög
 
Dy«micAny_DynAny_gë_w°rög


	)

1461 
	#Dy«micAny_DynVÆueBox_gë_™y
 
Dy«micAny_DynAny_gë_™y


	)

1462 
	#Dy«micAny_DynVÆueBox_gë_dyn_™y
 
Dy«micAny_DynAny_gë_dyn_™y


	)

1463 
	#Dy«micAny_DynVÆueBox_£ek
 
Dy«micAny_DynAny_£ek


	)

1464 
	#Dy«micAny_DynVÆueBox_ªwöd
 
Dy«micAny_DynAny_ªwöd


	)

1465 
	#Dy«micAny_DynVÆueBox_√xt
 
Dy«micAny_DynAny_√xt


	)

1466 
	#Dy«micAny_DynVÆueBox_comp⁄ít_cou¡
 
Dy«micAny_DynAny_comp⁄ít_cou¡


	)

1467 
	#Dy«micAny_DynVÆueBox_cuºít_comp⁄ít
 
Dy«micAny_DynAny_cuºít_comp⁄ít


	)

1468 
	#Dy«micAny_DynVÆueBox_ö£π_ab°ø˘
 
Dy«micAny_DynAny_ö£π_ab°ø˘


	)

1469 
	#Dy«micAny_DynVÆueBox_gë_ab°ø˘
 
Dy«micAny_DynAny_gë_ab°ø˘


	)

1470 
	#Dy«micAny_DynVÆueBox_ö£π_boﬁón_£q
 
Dy«micAny_DynAny_ö£π_boﬁón_£q


	)

1471 
	#Dy«micAny_DynVÆueBox_ö£π_o˘ë_£q
 
Dy«micAny_DynAny_ö£π_o˘ë_£q


	)

1472 
	#Dy«micAny_DynVÆueBox_ö£π_ch¨_£q
 
Dy«micAny_DynAny_ö£π_ch¨_£q


	)

1473 
	#Dy«micAny_DynVÆueBox_ö£π_sh‹t_£q
 
Dy«micAny_DynAny_ö£π_sh‹t_£q


	)

1474 
	#Dy«micAny_DynVÆueBox_ö£π_ush‹t_£q
 
Dy«micAny_DynAny_ö£π_ush‹t_£q


	)

1475 
	#Dy«micAny_DynVÆueBox_ö£π_l⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄g_£q


	)

1476 
	#Dy«micAny_DynVÆueBox_ö£π_ul⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄g_£q


	)

1477 
	#Dy«micAny_DynVÆueBox_ö£π_Êﬂt_£q
 
Dy«micAny_DynAny_ö£π_Êﬂt_£q


	)

1478 
	#Dy«micAny_DynVÆueBox_ö£π_doubÀ_£q
 
Dy«micAny_DynAny_ö£π_doubÀ_£q


	)

1479 
	#Dy«micAny_DynVÆueBox_ö£π_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_l⁄gl⁄g_£q


	)

1480 
	#Dy«micAny_DynVÆueBox_ö£π_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_ö£π_ul⁄gl⁄g_£q


	)

1481 
	#Dy«micAny_DynVÆueBox_ö£π_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_ö£π_l⁄gdoubÀ_£q


	)

1482 
	#Dy«micAny_DynVÆueBox_ö£π_wch¨_£q
 
Dy«micAny_DynAny_ö£π_wch¨_£q


	)

1483 
	#Dy«micAny_DynVÆueBox_gë_boﬁón_£q
 
Dy«micAny_DynAny_gë_boﬁón_£q


	)

1484 
	#Dy«micAny_DynVÆueBox_gë_o˘ë_£q
 
Dy«micAny_DynAny_gë_o˘ë_£q


	)

1485 
	#Dy«micAny_DynVÆueBox_gë_ch¨_£q
 
Dy«micAny_DynAny_gë_ch¨_£q


	)

1486 
	#Dy«micAny_DynVÆueBox_gë_sh‹t_£q
 
Dy«micAny_DynAny_gë_sh‹t_£q


	)

1487 
	#Dy«micAny_DynVÆueBox_gë_ush‹t_£q
 
Dy«micAny_DynAny_gë_ush‹t_£q


	)

1488 
	#Dy«micAny_DynVÆueBox_gë_l⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄g_£q


	)

1489 
	#Dy«micAny_DynVÆueBox_gë_ul⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄g_£q


	)

1490 
	#Dy«micAny_DynVÆueBox_gë_Êﬂt_£q
 
Dy«micAny_DynAny_gë_Êﬂt_£q


	)

1491 
	#Dy«micAny_DynVÆueBox_gë_doubÀ_£q
 
Dy«micAny_DynAny_gë_doubÀ_£q


	)

1492 
	#Dy«micAny_DynVÆueBox_gë_l⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_l⁄gl⁄g_£q


	)

1493 
	#Dy«micAny_DynVÆueBox_gë_ul⁄gl⁄g_£q
 
Dy«micAny_DynAny_gë_ul⁄gl⁄g_£q


	)

1494 
	#Dy«micAny_DynVÆueBox_gë_l⁄gdoubÀ_£q
 
Dy«micAny_DynAny_gë_l⁄gdoubÀ_£q


	)

1495 
	#Dy«micAny_DynVÆueBox_gë_wch¨_£q
 
Dy«micAny_DynAny_gë_wch¨_£q


	)

1496 
	#Dy«micAny_DynVÆueBox_is_nuŒ
 
Dy«micAny_DynVÆueComm⁄_is_nuŒ


	)

1497 
	#Dy«micAny_DynVÆueBox_£t_to_nuŒ
 
Dy«micAny_DynVÆueComm⁄_£t_to_nuŒ


	)

1498 
	#Dy«micAny_DynVÆueBox_£t_to_vÆue
 
Dy«micAny_DynVÆueComm⁄_£t_to_vÆue


	)

1499 
CORBA_™y
* 
Dy«micAny_DynVÆueBox_gë_boxed_vÆue
(
Dy«micAny_DynVÆueBox
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1500 
Dy«micAny_DynVÆueBox_£t_boxed_vÆue
(
Dy«micAny_DynVÆueBox
 
_obj
, c⁄° 
CORBA_™y
* 
boxed
, 
CORBA_Envú⁄mít
 *
ev
);

1501 
Dy«micAny_DynAny
 
Dy«micAny_DynVÆueBox_gë_boxed_vÆue_as_dyn_™y
(
Dy«micAny_DynVÆueBox
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1502 
Dy«micAny_DynVÆueBox_£t_boxed_vÆue_as_dyn_™y
(
Dy«micAny_DynVÆueBox
 
_obj
, c⁄° 
Dy«micAny_DynAny
 
boxed
, 
CORBA_Envú⁄mít
 *
ev
);

1503 
Dy«micAny_DynAny
 
Dy«micAny_DynAnyFa˘‹y_¸óã_dyn_™y
(
Dy«micAny_DynAnyFa˘‹y
 
_obj
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1504 
Dy«micAny_DynAny
 
Dy«micAny_DynAnyFa˘‹y_¸óã_dyn_™y_‰om_ty≥_code
(
Dy«micAny_DynAnyFa˘‹y
 
_obj
, c⁄° 
CORBA_Ty≥Code
 
ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

1505 
Dy«micAny_DynAny
 
Dy«micAny_DynAnyFa˘‹y_¸óã_dyn_™y_wôhout_åunˇti⁄
(
Dy«micAny_DynAnyFa˘‹y
 
_obj
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1506 
Dy«micAny_DynAnySeq
* 
Dy«micAny_DynAnyFa˘‹y_¸óã_mu…ùÀ_dyn_™ys
(
Dy«micAny_DynAnyFa˘‹y
 
_obj
, c⁄° 
Dy«micAny_AnySeq
* 
vÆues
, c⁄° 
CORBA_boﬁón
 
Ælow_åunˇã
, 
CORBA_Envú⁄mít
 *
ev
);

1507 
Dy«micAny_AnySeq
* 
Dy«micAny_DynAnyFa˘‹y_¸óã_mu…ùÀ_™ys
(
Dy«micAny_DynAnyFa˘‹y
 
_obj
, c⁄° 
Dy«micAny_DynAnySeq
* 
vÆues
, 
CORBA_Envú⁄mít
 *
ev
);

1508 #i‚de‡
__ORBIT_IMETHODS_INDEX


1509 
	#__ORBIT_IMETHODS_INDEX


	)

1510 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

1513 #ifde‡
__˝lu•lus


1517 #i‚de‡
EXCLUDE_ORBIT_H


1518 
	~<‹bô/‹bô.h
>

1522 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/orbit-2.0/orbit/orb-core/allocators.h

1 #i‚de‡
_ALLOCATORS_H_


2 
	#_ALLOCATORS_H_


	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 
	#CORBA_£quí˚_£t_ªÀa£
(
s
,
r
Ë(s)->
_ªÀa£
 = 
	)
r

9 
	#CORBA_£quí˚_gë_ªÀa£
(
s
Ë(s)->
_ªÀa£


	)

11 
CORBA_‰ì
 (
gpoöãr
 
mem
);

12 
gpoöãr
 
ORBô_Æloc_tcvÆ
 (
CORBA_Ty≥Code
 
tc
,

13 
guöt
 
√Àmíts
);

14 
gpoöãr
 
ORBô_ªÆloc_tcvÆ
 (gpoöã∏
ﬁd
,

15 
CORBA_Ty≥Code
 
tc
,

16 
guöt
 
ﬁd_num_ñemíts
,

17 
guöt
 
num_ñemíts
);

19 #ifde‡
ORBIT2_INTERNAL_API


21 
	#PTR_TO_MEMINFO
(
x
Ë(((
ORBô_mem_öfo
 *)(x)Ë- 1)

	)

22 
	#MEMINFO_TO_PTR
(
x
Ë((
gpoöãr
)((xË+ 1))

	)

43 
	$gpoöãr
 (*
	tORBô_Mem_‰ì_‚
Ë(
	tgpoöãr
 
	tmem
,

44 
	tgpoöãr
 
	tfunc_d©a
);

46 
	#ORBIT_MEMHOW_HOW
(
how
Ë((howË& 0x3)

	)

47 
	#ORBIT_MEMHOW_ELEMENTS
(
how
Ë((howË>> 2)

	)

48 
	#ORBIT_MEMHOW_MAKE
(
how
,
ñemíts
Ë((”ÀmítsË<< 2Ë| (how))

	)

51 
ORBIT_MEMHOW_NONE
 = 0,

52 
ORBIT_MEMHOW_SIMPLE
 = 1,

53 
ORBIT_MEMHOW_TYPECODE
 = 2,

54 
ORBIT_MEMHOW_FREEFNC
 = 3

55 } 
	tORBôMemHow
;

57 
	sORBô_Mem¥efix
 {

59 
CORBA_Ty≥Code
 
tc
;

60 
ORBô_Mem_‰ì_‚
 
‰ì_‚
;

61 } 
u
;

62 
ORBôMemHow
 
how
;

63 } 
	tORBô_MemPªfix
;

65 
	`ORBô_‰ì
 (
gpoöãr
 
mem
);

66 
	`ORBô_‰ì_T
 (
gpoöãr
 
mem
);

68 
CORBA_ch¨
 *
	`ORBô_Æloc_°rög
 (
size_t
 
°rög_Àngth
);

69 
gpoöãr
 
	`ORBô_Æloc_sim∂e
 (
size_t
 
block_size
);

70 
gpoöãr
 
	`ORBô_Æloc_by_tc
 (
CORBA_Ty≥Code
 
tc
);

71 
gpoöãr
 
	`ORBô_Æloc_wôh_‰ì_‚
 (
size_t
 
ñemít_size
,

72 
guöt
 
num_ñemíts
,

73 
ORBô_Mem_‰ì_‚
 
‰ì_‚
);

74 
CORBA_Ty≥Code
 
	`ORBô_Æloc_gë_tcvÆ
 (
gpoöãr
 
mem
);

76 
gpoöãr
 
	`CORBA_™y__‰ìkids
 (gpoöã∏
mem
, gpoöã∏
d©
);

77 
gpoöãr
 
	`ORBô_‰ìkids_vü_Ty≥Code
 (
CORBA_Ty≥Code
 
tc
, gpoöã∏
mem
);

81 
G_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-any-type.h

1 #i‚de‡
CORBA_ANY_TYPE_H


2 
	#CORBA_ANY_TYPE_H
 1

	)

4 
	~<‹bô/‹b-c‹e/c‹ba-pobj.h
>

6 
G_BEGIN_DECLS


8 
	sCORBA_™y_°ru˘
 {

9 
CORBA_Ty≥Code
 
	m_ty≥
;

10 
gpoöãr
 
	m_vÆue
;

11 
CORBA_boﬁón
 
	m_ªÀa£
;

14 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-any.h

1 #i‚de‡
CORBA_ANY_H


2 
	#CORBA_ANY_H
 1

	)

4 
	~<glib.h
>

6 
G_BEGIN_DECLS


8 
CORBA_™y__c›y
 (
CORBA_™y
 *
out
,

9 c⁄° 
CORBA_™y
 *
ö
);

10 
CORBA_™y
 *
CORBA_™y__Æloc
 ();

12 
	#CORBA_™y_Æloc
 
CORBA_™y__Æloc


	)

14 
gpoöãr
 
CORBA_™y__‰ìkids
 (gpoöã∏
mem
,

15 
gpoöãr
 
d©a
);

17 
	#CORBA_™y_£t_ªÀa£
(
a
, 
r
Ë◊)->
_ªÀa£
 = 
	)
r

18 
	#CORBA_™y_gë_ªÀa£
(
a
Ë◊)->
_ªÀa£


	)

20 
gpoöãr
 
ORBô_c›y_vÆue
 (
gc⁄°poöãr
 
vÆue
,

21 
CORBA_Ty≥Code
 
tc
);

23 
CORBA_boﬁón


24 
ORBô_™y_equivÆít
 (
CORBA_™y
 *
obj
,

25 
CORBA_™y
 *
™y
,

26 
CORBA_Envú⁄mít
 *
ev
);

28 #ifde‡
ORBIT2_INTERNAL_API


30 
ORBô_m¨shÆ_¨g
 (
GIOPSídBuf„r
 *
buf
,

31 
gc⁄°poöãr
 
vÆ
,

32 
CORBA_Ty≥Code
 
tc
);

34 
ORBô_m¨shÆ_™y
 (
GIOPSídBuf„r
 *
buf
,

35 c⁄° 
CORBA_™y
 *
vÆ
);

37 
gpoöãr
 
ORBô_dem¨shÆ_¨g
 (
GIOPRecvBuf„r
 *
buf
,

38 
CORBA_Ty≥Code
 
tc
,

39 
CORBA_ORB
 
‹b
);

41 
gboﬁón
 
ORBô_dem¨shÆ_™y
 (
GIOPRecvBuf„r
 *
buf
,

42 
CORBA_™y
 *
ªtvÆ
,

43 
CORBA_ORB
 
‹b
);

45 
gboﬁón
 
ORBô_dem¨shÆ_vÆue
 (
CORBA_Ty≥Code
 
tc
,

46 
gpoöãr
 *
vÆ
,

47 
GIOPRecvBuf„r
 *
buf
,

48 
CORBA_ORB
 
‹b
);

50 
ORBô_m¨shÆ_vÆue
 (
GIOPSídBuf„r
 *
buf
,

51 
gc⁄°poöãr
 *
vÆ
,

52 
CORBA_Ty≥Code
 
tc
);

54 
CORBA_boﬁón


55 
ORBô_vÆue_equivÆít
 (
gpoöãr
 *
a
,

56 
gpoöãr
 *
b
,

57 
CORBA_Ty≥Code
 
tc
,

58 
CORBA_Envú⁄mít
 *
ev
);

60 
size_t
 
ORBô_g©hî_Æloc_öfo
 (
CORBA_Ty≥Code
 
tc
);

64 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-context-type.h

1 #i‚de‡
CORBA_CONTEXT_TYPE_H


2 
	#CORBA_CONTEXT_TYPE_H
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


11 
CORBA_unsig√d_l⁄g
 
	mÀn
;

12 c⁄° 
CORBA_ch¨
 *
	m°r
;

13 } 
	tORBô_C⁄ãxtM¨shÆIãm
;

17 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-context.h

1 #i‚de‡
CORBA_CONTEXT_H


2 
	#CORBA_CONTEXT_H
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


10 
	sCORBA_C⁄ãxt_ty≥
 {

11 
ORBô_RoŸObje˘_°ru˘
 
	m∑ª¡
;

13 
GHashTabÀ
 *
	mm≠pögs
;

14 
GSLi°
 *
	mchûdªn
;

16 
gch¨
 *
	mthe_«me
;

18 
CORBA_C⁄ãxt
 
	m∑ª¡_˘x
;

21 
ORBô_C⁄ãxt_m¨shÆ
 (
CORBA_C⁄ãxt
 
˘x
,

22 c⁄° 
ORBô_C⁄ãxtM¨shÆIãm
 *
mli°
,

23 
CORBA_unsig√d_l⁄g
 
nôems
,

24 
GIOPSídBuf„r
 *
buf
);

26 
gboﬁón
 
ORBô_C⁄ãxt_dem¨shÆ
 (
CORBA_C⁄ãxt
 
∑ª¡
,

27 
CORBA_C⁄ãxt
 
öôme
,

28 
GIOPRecvBuf„r
 *
ªcv_buf„r
);

30 
ORBô_C⁄ãxt_£rvî_‰ì
 (
CORBA_C⁄ãxt
 
˘x
);

34 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-defs.h

5 #i‚de‡
c‹ba_defs_H


6 
	#c‹ba_defs_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄°ru˘i⁄Pﬁicy
Ë&& !deföed(
_CORBA_C⁄°ru˘i⁄Pﬁicy_deföed
)

18 
	#ORBIT_DECL_CORBA_C⁄°ru˘i⁄Pﬁicy
 1

	)

19 
	#_CORBA_C⁄°ru˘i⁄Pﬁicy_deföed
 1

	)

20 
	#CORBA_C⁄°ru˘i⁄Pﬁicy__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

21 
CORBA_Obje˘
 
	tCORBA_C⁄°ru˘i⁄Pﬁicy
;

22 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄°ru˘i⁄Pﬁicy__˛assid
;

23 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_0
)

24 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_0
 'c'

	)

25 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_1
 'o'

	)

26 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_2
 'r'

	)

27 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_3
 'b'

	)

28 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_4
 'a'

	)

29 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_5
 '_'

	)

30 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_6
 'd'

	)

31 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_7
 'e'

	)

32 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_8
 'f'

	)

33 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_9
 's'

	)

34 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


39 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄°ru˘i⁄Pﬁicy_°ru˘
;

40 
	#TC_CORBA_C⁄°ru˘i⁄Pﬁicy
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄°ru˘i⁄Pﬁicy_°ru˘
)

	)

43 #i‡!
deföed
(
ORBIT_DECL_CORBA_Cuºít
Ë&& !deföed(
_CORBA_Cuºít_deföed
)

44 
	#ORBIT_DECL_CORBA_Cuºít
 1

	)

45 
	#_CORBA_Cuºít_deföed
 1

	)

46 
	#CORBA_Cuºít__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

47 
CORBA_Obje˘
 
	tCORBA_Cuºít
;

48 
CORBA_unsig√d_l⁄g
 
CORBA_Cuºít__˛assid
;

49 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Cuºít_0
)

50 
	#TC_IMPL_TC_CORBA_Cuºít_0
 'c'

	)

51 
	#TC_IMPL_TC_CORBA_Cuºít_1
 'o'

	)

52 
	#TC_IMPL_TC_CORBA_Cuºít_2
 'r'

	)

53 
	#TC_IMPL_TC_CORBA_Cuºít_3
 'b'

	)

54 
	#TC_IMPL_TC_CORBA_Cuºít_4
 'a'

	)

55 
	#TC_IMPL_TC_CORBA_Cuºít_5
 '_'

	)

56 
	#TC_IMPL_TC_CORBA_Cuºít_6
 'd'

	)

57 
	#TC_IMPL_TC_CORBA_Cuºít_7
 'e'

	)

58 
	#TC_IMPL_TC_CORBA_Cuºít_8
 'f'

	)

59 
	#TC_IMPL_TC_CORBA_Cuºít_9
 's'

	)

60 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


65 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Cuºít_°ru˘
;

66 
	#TC_CORBA_Cuºít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Cuºít_°ru˘
)

	)

69 #i‡!
deföed
(
ORBIT_DECL_CORBA_DomaöM™agî
Ë&& !deföed(
_CORBA_DomaöM™agî_deföed
)

70 
	#ORBIT_DECL_CORBA_DomaöM™agî
 1

	)

71 
	#_CORBA_DomaöM™agî_deföed
 1

	)

72 
	#CORBA_DomaöM™agî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

73 
CORBA_Obje˘
 
	tCORBA_DomaöM™agî
;

74 
CORBA_unsig√d_l⁄g
 
CORBA_DomaöM™agî__˛assid
;

75 #i‡!
deföed
(
TC_IMPL_TC_CORBA_DomaöM™agî_0
)

76 
	#TC_IMPL_TC_CORBA_DomaöM™agî_0
 'c'

	)

77 
	#TC_IMPL_TC_CORBA_DomaöM™agî_1
 'o'

	)

78 
	#TC_IMPL_TC_CORBA_DomaöM™agî_2
 'r'

	)

79 
	#TC_IMPL_TC_CORBA_DomaöM™agî_3
 'b'

	)

80 
	#TC_IMPL_TC_CORBA_DomaöM™agî_4
 'a'

	)

81 
	#TC_IMPL_TC_CORBA_DomaöM™agî_5
 '_'

	)

82 
	#TC_IMPL_TC_CORBA_DomaöM™agî_6
 'd'

	)

83 
	#TC_IMPL_TC_CORBA_DomaöM™agî_7
 'e'

	)

84 
	#TC_IMPL_TC_CORBA_DomaöM™agî_8
 'f'

	)

85 
	#TC_IMPL_TC_CORBA_DomaöM™agî_9
 's'

	)

86 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


91 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_DomaöM™agî_°ru˘
;

92 
	#TC_CORBA_DomaöM™agî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_DomaöM™agî_°ru˘
)

	)

95 #i‡!
deföed
(
ORBIT_DECL_CORBA_Pﬁicy
Ë&& !deföed(
_CORBA_Pﬁicy_deföed
)

96 
	#ORBIT_DECL_CORBA_Pﬁicy
 1

	)

97 
	#_CORBA_Pﬁicy_deföed
 1

	)

98 
	#CORBA_Pﬁicy__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

99 
CORBA_Obje˘
 
	tCORBA_Pﬁicy
;

100 
CORBA_unsig√d_l⁄g
 
CORBA_Pﬁicy__˛assid
;

101 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Pﬁicy_0
)

102 
	#TC_IMPL_TC_CORBA_Pﬁicy_0
 'c'

	)

103 
	#TC_IMPL_TC_CORBA_Pﬁicy_1
 'o'

	)

104 
	#TC_IMPL_TC_CORBA_Pﬁicy_2
 'r'

	)

105 
	#TC_IMPL_TC_CORBA_Pﬁicy_3
 'b'

	)

106 
	#TC_IMPL_TC_CORBA_Pﬁicy_4
 'a'

	)

107 
	#TC_IMPL_TC_CORBA_Pﬁicy_5
 '_'

	)

108 
	#TC_IMPL_TC_CORBA_Pﬁicy_6
 'd'

	)

109 
	#TC_IMPL_TC_CORBA_Pﬁicy_7
 'e'

	)

110 
	#TC_IMPL_TC_CORBA_Pﬁicy_8
 'f'

	)

111 
	#TC_IMPL_TC_CORBA_Pﬁicy_9
 's'

	)

112 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


117 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Pﬁicy_°ru˘
;

118 
	#TC_CORBA_Pﬁicy
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Pﬁicy_°ru˘
)

	)

121 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ab°ø˘I¡îÁ˚Def
Ë&& !deföed(
_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
)

122 
	#ORBIT_DECL_CORBA_Ab°ø˘I¡îÁ˚Def
 1

	)

123 
	#_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
 1

	)

124 
	#CORBA_Ab°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

125 
CORBA_Obje˘
 
	tCORBA_Ab°ø˘I¡îÁ˚Def
;

126 
CORBA_unsig√d_l⁄g
 
CORBA_Ab°ø˘I¡îÁ˚Def__˛assid
;

127 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_0
)

128 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_0
 'c'

	)

129 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_1
 'o'

	)

130 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_2
 'r'

	)

131 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_3
 'b'

	)

132 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_4
 'a'

	)

133 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_5
 '_'

	)

134 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_6
 'd'

	)

135 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_7
 'e'

	)

136 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_8
 'f'

	)

137 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_9
 's'

	)

138 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


143 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
;

144 
	#TC_CORBA_Ab°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
)

	)

147 #i‡!
deföed
(
ORBIT_DECL_CORBA_AlüsDef
Ë&& !deföed(
_CORBA_AlüsDef_deföed
)

148 
	#ORBIT_DECL_CORBA_AlüsDef
 1

	)

149 
	#_CORBA_AlüsDef_deföed
 1

	)

150 
	#CORBA_AlüsDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

151 
CORBA_Obje˘
 
	tCORBA_AlüsDef
;

152 
CORBA_unsig√d_l⁄g
 
CORBA_AlüsDef__˛assid
;

153 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AlüsDef_0
)

154 
	#TC_IMPL_TC_CORBA_AlüsDef_0
 'c'

	)

155 
	#TC_IMPL_TC_CORBA_AlüsDef_1
 'o'

	)

156 
	#TC_IMPL_TC_CORBA_AlüsDef_2
 'r'

	)

157 
	#TC_IMPL_TC_CORBA_AlüsDef_3
 'b'

	)

158 
	#TC_IMPL_TC_CORBA_AlüsDef_4
 'a'

	)

159 
	#TC_IMPL_TC_CORBA_AlüsDef_5
 '_'

	)

160 
	#TC_IMPL_TC_CORBA_AlüsDef_6
 'd'

	)

161 
	#TC_IMPL_TC_CORBA_AlüsDef_7
 'e'

	)

162 
	#TC_IMPL_TC_CORBA_AlüsDef_8
 'f'

	)

163 
	#TC_IMPL_TC_CORBA_AlüsDef_9
 's'

	)

164 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


169 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AlüsDef_°ru˘
;

170 
	#TC_CORBA_AlüsDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AlüsDef_°ru˘
)

	)

173 #i‡!
deföed
(
ORBIT_DECL_CORBA_AºayDef
Ë&& !deföed(
_CORBA_AºayDef_deföed
)

174 
	#ORBIT_DECL_CORBA_AºayDef
 1

	)

175 
	#_CORBA_AºayDef_deföed
 1

	)

176 
	#CORBA_AºayDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

177 
CORBA_Obje˘
 
	tCORBA_AºayDef
;

178 
CORBA_unsig√d_l⁄g
 
CORBA_AºayDef__˛assid
;

179 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AºayDef_0
)

180 
	#TC_IMPL_TC_CORBA_AºayDef_0
 'c'

	)

181 
	#TC_IMPL_TC_CORBA_AºayDef_1
 'o'

	)

182 
	#TC_IMPL_TC_CORBA_AºayDef_2
 'r'

	)

183 
	#TC_IMPL_TC_CORBA_AºayDef_3
 'b'

	)

184 
	#TC_IMPL_TC_CORBA_AºayDef_4
 'a'

	)

185 
	#TC_IMPL_TC_CORBA_AºayDef_5
 '_'

	)

186 
	#TC_IMPL_TC_CORBA_AºayDef_6
 'd'

	)

187 
	#TC_IMPL_TC_CORBA_AºayDef_7
 'e'

	)

188 
	#TC_IMPL_TC_CORBA_AºayDef_8
 'f'

	)

189 
	#TC_IMPL_TC_CORBA_AºayDef_9
 's'

	)

190 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


195 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AºayDef_°ru˘
;

196 
	#TC_CORBA_AºayDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AºayDef_°ru˘
)

	)

199 #i‡!
deföed
(
ORBIT_DECL_CORBA_AâribuãDef
Ë&& !deföed(
_CORBA_AâribuãDef_deföed
)

200 
	#ORBIT_DECL_CORBA_AâribuãDef
 1

	)

201 
	#_CORBA_AâribuãDef_deföed
 1

	)

202 
	#CORBA_AâribuãDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

203 
CORBA_Obje˘
 
	tCORBA_AâribuãDef
;

204 
CORBA_unsig√d_l⁄g
 
CORBA_AâribuãDef__˛assid
;

205 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AâribuãDef_0
)

206 
	#TC_IMPL_TC_CORBA_AâribuãDef_0
 'c'

	)

207 
	#TC_IMPL_TC_CORBA_AâribuãDef_1
 'o'

	)

208 
	#TC_IMPL_TC_CORBA_AâribuãDef_2
 'r'

	)

209 
	#TC_IMPL_TC_CORBA_AâribuãDef_3
 'b'

	)

210 
	#TC_IMPL_TC_CORBA_AâribuãDef_4
 'a'

	)

211 
	#TC_IMPL_TC_CORBA_AâribuãDef_5
 '_'

	)

212 
	#TC_IMPL_TC_CORBA_AâribuãDef_6
 'd'

	)

213 
	#TC_IMPL_TC_CORBA_AâribuãDef_7
 'e'

	)

214 
	#TC_IMPL_TC_CORBA_AâribuãDef_8
 'f'

	)

215 
	#TC_IMPL_TC_CORBA_AâribuãDef_9
 's'

	)

216 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


221 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AâribuãDef_°ru˘
;

222 
	#TC_CORBA_AâribuãDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AâribuãDef_°ru˘
)

	)

225 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄°™tDef
Ë&& !deföed(
_CORBA_C⁄°™tDef_deföed
)

226 
	#ORBIT_DECL_CORBA_C⁄°™tDef
 1

	)

227 
	#_CORBA_C⁄°™tDef_deföed
 1

	)

228 
	#CORBA_C⁄°™tDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

229 
CORBA_Obje˘
 
	tCORBA_C⁄°™tDef
;

230 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄°™tDef__˛assid
;

231 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄°™tDef_0
)

232 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_0
 'c'

	)

233 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_1
 'o'

	)

234 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_2
 'r'

	)

235 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_3
 'b'

	)

236 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_4
 'a'

	)

237 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_5
 '_'

	)

238 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_6
 'd'

	)

239 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_7
 'e'

	)

240 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_8
 'f'

	)

241 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_9
 's'

	)

242 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


247 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄°™tDef_°ru˘
;

248 
	#TC_CORBA_C⁄°™tDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄°™tDef_°ru˘
)

	)

251 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄èöed
Ë&& !deföed(
_CORBA_C⁄èöed_deföed
)

252 
	#ORBIT_DECL_CORBA_C⁄èöed
 1

	)

253 
	#_CORBA_C⁄èöed_deföed
 1

	)

254 
	#CORBA_C⁄èöed__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

255 
CORBA_Obje˘
 
	tCORBA_C⁄èöed
;

256 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄èöed__˛assid
;

257 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöed_0
)

258 
	#TC_IMPL_TC_CORBA_C⁄èöed_0
 'c'

	)

259 
	#TC_IMPL_TC_CORBA_C⁄èöed_1
 'o'

	)

260 
	#TC_IMPL_TC_CORBA_C⁄èöed_2
 'r'

	)

261 
	#TC_IMPL_TC_CORBA_C⁄èöed_3
 'b'

	)

262 
	#TC_IMPL_TC_CORBA_C⁄èöed_4
 'a'

	)

263 
	#TC_IMPL_TC_CORBA_C⁄èöed_5
 '_'

	)

264 
	#TC_IMPL_TC_CORBA_C⁄èöed_6
 'd'

	)

265 
	#TC_IMPL_TC_CORBA_C⁄èöed_7
 'e'

	)

266 
	#TC_IMPL_TC_CORBA_C⁄èöed_8
 'f'

	)

267 
	#TC_IMPL_TC_CORBA_C⁄èöed_9
 's'

	)

268 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


273 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöed_°ru˘
;

274 
	#TC_CORBA_C⁄èöed
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöed_°ru˘
)

	)

277 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄èöî
Ë&& !deföed(
_CORBA_C⁄èöî_deföed
)

278 
	#ORBIT_DECL_CORBA_C⁄èöî
 1

	)

279 
	#_CORBA_C⁄èöî_deföed
 1

	)

280 
	#CORBA_C⁄èöî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

281 
CORBA_Obje˘
 
	tCORBA_C⁄èöî
;

282 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄èöî__˛assid
;

283 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöî_0
)

284 
	#TC_IMPL_TC_CORBA_C⁄èöî_0
 'c'

	)

285 
	#TC_IMPL_TC_CORBA_C⁄èöî_1
 'o'

	)

286 
	#TC_IMPL_TC_CORBA_C⁄èöî_2
 'r'

	)

287 
	#TC_IMPL_TC_CORBA_C⁄èöî_3
 'b'

	)

288 
	#TC_IMPL_TC_CORBA_C⁄èöî_4
 'a'

	)

289 
	#TC_IMPL_TC_CORBA_C⁄èöî_5
 '_'

	)

290 
	#TC_IMPL_TC_CORBA_C⁄èöî_6
 'd'

	)

291 
	#TC_IMPL_TC_CORBA_C⁄èöî_7
 'e'

	)

292 
	#TC_IMPL_TC_CORBA_C⁄èöî_8
 'f'

	)

293 
	#TC_IMPL_TC_CORBA_C⁄èöî_9
 's'

	)

294 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


299 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöî_°ru˘
;

300 
	#TC_CORBA_C⁄èöî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöî_°ru˘
)

	)

303 #i‡!
deföed
(
ORBIT_DECL_CORBA_EnumDef
Ë&& !deföed(
_CORBA_EnumDef_deföed
)

304 
	#ORBIT_DECL_CORBA_EnumDef
 1

	)

305 
	#_CORBA_EnumDef_deföed
 1

	)

306 
	#CORBA_EnumDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

307 
CORBA_Obje˘
 
	tCORBA_EnumDef
;

308 
CORBA_unsig√d_l⁄g
 
CORBA_EnumDef__˛assid
;

309 #i‡!
deföed
(
TC_IMPL_TC_CORBA_EnumDef_0
)

310 
	#TC_IMPL_TC_CORBA_EnumDef_0
 'c'

	)

311 
	#TC_IMPL_TC_CORBA_EnumDef_1
 'o'

	)

312 
	#TC_IMPL_TC_CORBA_EnumDef_2
 'r'

	)

313 
	#TC_IMPL_TC_CORBA_EnumDef_3
 'b'

	)

314 
	#TC_IMPL_TC_CORBA_EnumDef_4
 'a'

	)

315 
	#TC_IMPL_TC_CORBA_EnumDef_5
 '_'

	)

316 
	#TC_IMPL_TC_CORBA_EnumDef_6
 'd'

	)

317 
	#TC_IMPL_TC_CORBA_EnumDef_7
 'e'

	)

318 
	#TC_IMPL_TC_CORBA_EnumDef_8
 'f'

	)

319 
	#TC_IMPL_TC_CORBA_EnumDef_9
 's'

	)

320 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


325 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_EnumDef_°ru˘
;

326 
	#TC_CORBA_EnumDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_EnumDef_°ru˘
)

	)

329 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ex˚±i⁄Def
Ë&& !deföed(
_CORBA_Ex˚±i⁄Def_deföed
)

330 
	#ORBIT_DECL_CORBA_Ex˚±i⁄Def
 1

	)

331 
	#_CORBA_Ex˚±i⁄Def_deföed
 1

	)

332 
	#CORBA_Ex˚±i⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

333 
CORBA_Obje˘
 
	tCORBA_Ex˚±i⁄Def
;

334 
CORBA_unsig√d_l⁄g
 
CORBA_Ex˚±i⁄Def__˛assid
;

335 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ex˚±i⁄Def_0
)

336 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_0
 'c'

	)

337 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_1
 'o'

	)

338 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_2
 'r'

	)

339 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_3
 'b'

	)

340 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_4
 'a'

	)

341 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_5
 '_'

	)

342 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_6
 'd'

	)

343 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_7
 'e'

	)

344 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_8
 'f'

	)

345 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_9
 's'

	)

346 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


351 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ex˚±i⁄Def_°ru˘
;

352 
	#TC_CORBA_Ex˚±i⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ex˚±i⁄Def_°ru˘
)

	)

355 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtI¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtI¡îÁ˚Def_deföed
)

356 
	#ORBIT_DECL_CORBA_ExtI¡îÁ˚Def
 1

	)

357 
	#_CORBA_ExtI¡îÁ˚Def_deföed
 1

	)

358 
	#CORBA_ExtI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

359 
CORBA_Obje˘
 
	tCORBA_ExtI¡îÁ˚Def
;

360 
CORBA_unsig√d_l⁄g
 
CORBA_ExtI¡îÁ˚Def__˛assid
;

361 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_0
)

362 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_0
 'c'

	)

363 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_1
 'o'

	)

364 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_2
 'r'

	)

365 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_3
 'b'

	)

366 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_4
 'a'

	)

367 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_5
 '_'

	)

368 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_6
 'd'

	)

369 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_7
 'e'

	)

370 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_8
 'f'

	)

371 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_9
 's'

	)

372 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


377 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtI¡îÁ˚Def_°ru˘
;

378 
	#TC_CORBA_ExtI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtI¡îÁ˚Def_°ru˘
)

	)

381 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtVÆueDef
Ë&& !deföed(
_CORBA_ExtVÆueDef_deföed
)

382 
	#ORBIT_DECL_CORBA_ExtVÆueDef
 1

	)

383 
	#_CORBA_ExtVÆueDef_deföed
 1

	)

384 
	#CORBA_ExtVÆueDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

385 
CORBA_Obje˘
 
	tCORBA_ExtVÆueDef
;

386 
CORBA_unsig√d_l⁄g
 
CORBA_ExtVÆueDef__˛assid
;

387 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtVÆueDef_0
)

388 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_0
 'c'

	)

389 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_1
 'o'

	)

390 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_2
 'r'

	)

391 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_3
 'b'

	)

392 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_4
 'a'

	)

393 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_5
 '_'

	)

394 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_6
 'd'

	)

395 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_7
 'e'

	)

396 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_8
 'f'

	)

397 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_9
 's'

	)

398 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


403 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtVÆueDef_°ru˘
;

404 
	#TC_CORBA_ExtVÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtVÆueDef_°ru˘
)

	)

407 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtAb°ø˘I¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
)

408 
	#ORBIT_DECL_CORBA_ExtAb°ø˘I¡îÁ˚Def
 1

	)

409 
	#_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
 1

	)

410 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

411 
CORBA_Obje˘
 
	tCORBA_ExtAb°ø˘I¡îÁ˚Def
;

412 
CORBA_unsig√d_l⁄g
 
CORBA_ExtAb°ø˘I¡îÁ˚Def__˛assid
;

413 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
)

414 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
 'c'

	)

415 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_1
 'o'

	)

416 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_2
 'r'

	)

417 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_3
 'b'

	)

418 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_4
 'a'

	)

419 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_5
 '_'

	)

420 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_6
 'd'

	)

421 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_7
 'e'

	)

422 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_8
 'f'

	)

423 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_9
 's'

	)

424 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


429 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
;

430 
	#TC_CORBA_ExtAb°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
)

	)

433 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtLoˇlI¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
)

434 
	#ORBIT_DECL_CORBA_ExtLoˇlI¡îÁ˚Def
 1

	)

435 
	#_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
 1

	)

436 
	#CORBA_ExtLoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

437 
CORBA_Obje˘
 
	tCORBA_ExtLoˇlI¡îÁ˚Def
;

438 
CORBA_unsig√d_l⁄g
 
CORBA_ExtLoˇlI¡îÁ˚Def__˛assid
;

439 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_0
)

440 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_0
 'c'

	)

441 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_1
 'o'

	)

442 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_2
 'r'

	)

443 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_3
 'b'

	)

444 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_4
 'a'

	)

445 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_5
 '_'

	)

446 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_6
 'd'

	)

447 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_7
 'e'

	)

448 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_8
 'f'

	)

449 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_9
 's'

	)

450 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


455 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
;

456 
	#TC_CORBA_ExtLoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
)

	)

459 #i‡!
deföed
(
ORBIT_DECL_CORBA_FixedDef
Ë&& !deföed(
_CORBA_FixedDef_deföed
)

460 
	#ORBIT_DECL_CORBA_FixedDef
 1

	)

461 
	#_CORBA_FixedDef_deföed
 1

	)

462 
	#CORBA_FixedDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

463 
CORBA_Obje˘
 
	tCORBA_FixedDef
;

464 
CORBA_unsig√d_l⁄g
 
CORBA_FixedDef__˛assid
;

465 #i‡!
deföed
(
TC_IMPL_TC_CORBA_FixedDef_0
)

466 
	#TC_IMPL_TC_CORBA_FixedDef_0
 'c'

	)

467 
	#TC_IMPL_TC_CORBA_FixedDef_1
 'o'

	)

468 
	#TC_IMPL_TC_CORBA_FixedDef_2
 'r'

	)

469 
	#TC_IMPL_TC_CORBA_FixedDef_3
 'b'

	)

470 
	#TC_IMPL_TC_CORBA_FixedDef_4
 'a'

	)

471 
	#TC_IMPL_TC_CORBA_FixedDef_5
 '_'

	)

472 
	#TC_IMPL_TC_CORBA_FixedDef_6
 'd'

	)

473 
	#TC_IMPL_TC_CORBA_FixedDef_7
 'e'

	)

474 
	#TC_IMPL_TC_CORBA_FixedDef_8
 'f'

	)

475 
	#TC_IMPL_TC_CORBA_FixedDef_9
 's'

	)

476 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


481 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_FixedDef_°ru˘
;

482 
	#TC_CORBA_FixedDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_FixedDef_°ru˘
)

	)

485 #i‡!
deföed
(
ORBIT_DECL_CORBA_IDLTy≥
Ë&& !deföed(
_CORBA_IDLTy≥_deföed
)

486 
	#ORBIT_DECL_CORBA_IDLTy≥
 1

	)

487 
	#_CORBA_IDLTy≥_deföed
 1

	)

488 
	#CORBA_IDLTy≥__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

489 
CORBA_Obje˘
 
	tCORBA_IDLTy≥
;

490 
CORBA_unsig√d_l⁄g
 
CORBA_IDLTy≥__˛assid
;

491 #i‡!
deföed
(
TC_IMPL_TC_CORBA_IDLTy≥_0
)

492 
	#TC_IMPL_TC_CORBA_IDLTy≥_0
 'c'

	)

493 
	#TC_IMPL_TC_CORBA_IDLTy≥_1
 'o'

	)

494 
	#TC_IMPL_TC_CORBA_IDLTy≥_2
 'r'

	)

495 
	#TC_IMPL_TC_CORBA_IDLTy≥_3
 'b'

	)

496 
	#TC_IMPL_TC_CORBA_IDLTy≥_4
 'a'

	)

497 
	#TC_IMPL_TC_CORBA_IDLTy≥_5
 '_'

	)

498 
	#TC_IMPL_TC_CORBA_IDLTy≥_6
 'd'

	)

499 
	#TC_IMPL_TC_CORBA_IDLTy≥_7
 'e'

	)

500 
	#TC_IMPL_TC_CORBA_IDLTy≥_8
 'f'

	)

501 
	#TC_IMPL_TC_CORBA_IDLTy≥_9
 's'

	)

502 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


507 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_IDLTy≥_°ru˘
;

508 
	#TC_CORBA_IDLTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_IDLTy≥_°ru˘
)

	)

511 #i‡!
deföed
(
ORBIT_DECL_CORBA_I¡îÁ˚Def
Ë&& !deföed(
_CORBA_I¡îÁ˚Def_deföed
)

512 
	#ORBIT_DECL_CORBA_I¡îÁ˚Def
 1

	)

513 
	#_CORBA_I¡îÁ˚Def_deföed
 1

	)

514 
	#CORBA_I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

515 
CORBA_Obje˘
 
	tCORBA_I¡îÁ˚Def
;

516 
CORBA_unsig√d_l⁄g
 
CORBA_I¡îÁ˚Def__˛assid
;

517 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
)

518 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
 'c'

	)

519 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_1
 'o'

	)

520 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_2
 'r'

	)

521 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_3
 'b'

	)

522 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_4
 'a'

	)

523 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_5
 '_'

	)

524 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_6
 'd'

	)

525 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_7
 'e'

	)

526 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_8
 'f'

	)

527 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_9
 's'

	)

528 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


533 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚Def_°ru˘
;

534 
	#TC_CORBA_I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚Def_°ru˘
)

	)

537 #i‡!
deföed
(
ORBIT_DECL_CORBA_IRObje˘
Ë&& !deföed(
_CORBA_IRObje˘_deföed
)

538 
	#ORBIT_DECL_CORBA_IRObje˘
 1

	)

539 
	#_CORBA_IRObje˘_deföed
 1

	)

540 
	#CORBA_IRObje˘__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

541 
CORBA_Obje˘
 
	tCORBA_IRObje˘
;

542 
CORBA_unsig√d_l⁄g
 
CORBA_IRObje˘__˛assid
;

543 #i‡!
deföed
(
TC_IMPL_TC_CORBA_IRObje˘_0
)

544 
	#TC_IMPL_TC_CORBA_IRObje˘_0
 'c'

	)

545 
	#TC_IMPL_TC_CORBA_IRObje˘_1
 'o'

	)

546 
	#TC_IMPL_TC_CORBA_IRObje˘_2
 'r'

	)

547 
	#TC_IMPL_TC_CORBA_IRObje˘_3
 'b'

	)

548 
	#TC_IMPL_TC_CORBA_IRObje˘_4
 'a'

	)

549 
	#TC_IMPL_TC_CORBA_IRObje˘_5
 '_'

	)

550 
	#TC_IMPL_TC_CORBA_IRObje˘_6
 'd'

	)

551 
	#TC_IMPL_TC_CORBA_IRObje˘_7
 'e'

	)

552 
	#TC_IMPL_TC_CORBA_IRObje˘_8
 'f'

	)

553 
	#TC_IMPL_TC_CORBA_IRObje˘_9
 's'

	)

554 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


559 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_IRObje˘_°ru˘
;

560 
	#TC_CORBA_IRObje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_IRObje˘_°ru˘
)

	)

563 #i‡!
deföed
(
ORBIT_DECL_CORBA_LoˇlI¡îÁ˚Def
Ë&& !deföed(
_CORBA_LoˇlI¡îÁ˚Def_deföed
)

564 
	#ORBIT_DECL_CORBA_LoˇlI¡îÁ˚Def
 1

	)

565 
	#_CORBA_LoˇlI¡îÁ˚Def_deföed
 1

	)

566 
	#CORBA_LoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

567 
CORBA_Obje˘
 
	tCORBA_LoˇlI¡îÁ˚Def
;

568 
CORBA_unsig√d_l⁄g
 
CORBA_LoˇlI¡îÁ˚Def__˛assid
;

569 #i‡!
deföed
(
TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_0
)

570 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_0
 'c'

	)

571 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_1
 'o'

	)

572 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_2
 'r'

	)

573 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_3
 'b'

	)

574 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_4
 'a'

	)

575 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_5
 '_'

	)

576 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_6
 'd'

	)

577 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_7
 'e'

	)

578 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_8
 'f'

	)

579 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_9
 's'

	)

580 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


585 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_LoˇlI¡îÁ˚Def_°ru˘
;

586 
	#TC_CORBA_LoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_LoˇlI¡îÁ˚Def_°ru˘
)

	)

589 #i‡!
deföed
(
ORBIT_DECL_CORBA_ModuÀDef
Ë&& !deföed(
_CORBA_ModuÀDef_deföed
)

590 
	#ORBIT_DECL_CORBA_ModuÀDef
 1

	)

591 
	#_CORBA_ModuÀDef_deföed
 1

	)

592 
	#CORBA_ModuÀDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

593 
CORBA_Obje˘
 
	tCORBA_ModuÀDef
;

594 
CORBA_unsig√d_l⁄g
 
CORBA_ModuÀDef__˛assid
;

595 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ModuÀDef_0
)

596 
	#TC_IMPL_TC_CORBA_ModuÀDef_0
 'c'

	)

597 
	#TC_IMPL_TC_CORBA_ModuÀDef_1
 'o'

	)

598 
	#TC_IMPL_TC_CORBA_ModuÀDef_2
 'r'

	)

599 
	#TC_IMPL_TC_CORBA_ModuÀDef_3
 'b'

	)

600 
	#TC_IMPL_TC_CORBA_ModuÀDef_4
 'a'

	)

601 
	#TC_IMPL_TC_CORBA_ModuÀDef_5
 '_'

	)

602 
	#TC_IMPL_TC_CORBA_ModuÀDef_6
 'd'

	)

603 
	#TC_IMPL_TC_CORBA_ModuÀDef_7
 'e'

	)

604 
	#TC_IMPL_TC_CORBA_ModuÀDef_8
 'f'

	)

605 
	#TC_IMPL_TC_CORBA_ModuÀDef_9
 's'

	)

606 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


611 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ModuÀDef_°ru˘
;

612 
	#TC_CORBA_ModuÀDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ModuÀDef_°ru˘
)

	)

615 #i‡!
deföed
(
ORBIT_DECL_CORBA_N©iveDef
Ë&& !deföed(
_CORBA_N©iveDef_deföed
)

616 
	#ORBIT_DECL_CORBA_N©iveDef
 1

	)

617 
	#_CORBA_N©iveDef_deföed
 1

	)

618 
	#CORBA_N©iveDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

619 
CORBA_Obje˘
 
	tCORBA_N©iveDef
;

620 
CORBA_unsig√d_l⁄g
 
CORBA_N©iveDef__˛assid
;

621 #i‡!
deföed
(
TC_IMPL_TC_CORBA_N©iveDef_0
)

622 
	#TC_IMPL_TC_CORBA_N©iveDef_0
 'c'

	)

623 
	#TC_IMPL_TC_CORBA_N©iveDef_1
 'o'

	)

624 
	#TC_IMPL_TC_CORBA_N©iveDef_2
 'r'

	)

625 
	#TC_IMPL_TC_CORBA_N©iveDef_3
 'b'

	)

626 
	#TC_IMPL_TC_CORBA_N©iveDef_4
 'a'

	)

627 
	#TC_IMPL_TC_CORBA_N©iveDef_5
 '_'

	)

628 
	#TC_IMPL_TC_CORBA_N©iveDef_6
 'd'

	)

629 
	#TC_IMPL_TC_CORBA_N©iveDef_7
 'e'

	)

630 
	#TC_IMPL_TC_CORBA_N©iveDef_8
 'f'

	)

631 
	#TC_IMPL_TC_CORBA_N©iveDef_9
 's'

	)

632 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


637 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_N©iveDef_°ru˘
;

638 
	#TC_CORBA_N©iveDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_N©iveDef_°ru˘
)

	)

641 #i‡!
deföed
(
ORBIT_DECL_CORBA_O≥øti⁄Def
Ë&& !deföed(
_CORBA_O≥øti⁄Def_deföed
)

642 
	#ORBIT_DECL_CORBA_O≥øti⁄Def
 1

	)

643 
	#_CORBA_O≥øti⁄Def_deföed
 1

	)

644 
	#CORBA_O≥øti⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

645 
CORBA_Obje˘
 
	tCORBA_O≥øti⁄Def
;

646 
CORBA_unsig√d_l⁄g
 
CORBA_O≥øti⁄Def__˛assid
;

647 #i‡!
deföed
(
TC_IMPL_TC_CORBA_O≥øti⁄Def_0
)

648 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_0
 'c'

	)

649 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_1
 'o'

	)

650 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_2
 'r'

	)

651 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_3
 'b'

	)

652 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_4
 'a'

	)

653 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_5
 '_'

	)

654 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_6
 'd'

	)

655 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_7
 'e'

	)

656 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_8
 'f'

	)

657 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_9
 's'

	)

658 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


663 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_O≥øti⁄Def_°ru˘
;

664 
	#TC_CORBA_O≥øti⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_O≥øti⁄Def_°ru˘
)

	)

667 #i‡!
deföed
(
ORBIT_DECL_CORBA_PrimôiveDef
Ë&& !deföed(
_CORBA_PrimôiveDef_deföed
)

668 
	#ORBIT_DECL_CORBA_PrimôiveDef
 1

	)

669 
	#_CORBA_PrimôiveDef_deföed
 1

	)

670 
	#CORBA_PrimôiveDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

671 
CORBA_Obje˘
 
	tCORBA_PrimôiveDef
;

672 
CORBA_unsig√d_l⁄g
 
CORBA_PrimôiveDef__˛assid
;

673 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PrimôiveDef_0
)

674 
	#TC_IMPL_TC_CORBA_PrimôiveDef_0
 'c'

	)

675 
	#TC_IMPL_TC_CORBA_PrimôiveDef_1
 'o'

	)

676 
	#TC_IMPL_TC_CORBA_PrimôiveDef_2
 'r'

	)

677 
	#TC_IMPL_TC_CORBA_PrimôiveDef_3
 'b'

	)

678 
	#TC_IMPL_TC_CORBA_PrimôiveDef_4
 'a'

	)

679 
	#TC_IMPL_TC_CORBA_PrimôiveDef_5
 '_'

	)

680 
	#TC_IMPL_TC_CORBA_PrimôiveDef_6
 'd'

	)

681 
	#TC_IMPL_TC_CORBA_PrimôiveDef_7
 'e'

	)

682 
	#TC_IMPL_TC_CORBA_PrimôiveDef_8
 'f'

	)

683 
	#TC_IMPL_TC_CORBA_PrimôiveDef_9
 's'

	)

684 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


689 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PrimôiveDef_°ru˘
;

690 
	#TC_CORBA_PrimôiveDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PrimôiveDef_°ru˘
)

	)

693 #i‡!
deföed
(
ORBIT_DECL_CORBA_Rïosô‹y
Ë&& !deföed(
_CORBA_Rïosô‹y_deföed
)

694 
	#ORBIT_DECL_CORBA_Rïosô‹y
 1

	)

695 
	#_CORBA_Rïosô‹y_deföed
 1

	)

696 
	#CORBA_Rïosô‹y__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

697 
CORBA_Obje˘
 
	tCORBA_Rïosô‹y
;

698 
CORBA_unsig√d_l⁄g
 
CORBA_Rïosô‹y__˛assid
;

699 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Rïosô‹y_0
)

700 
	#TC_IMPL_TC_CORBA_Rïosô‹y_0
 'c'

	)

701 
	#TC_IMPL_TC_CORBA_Rïosô‹y_1
 'o'

	)

702 
	#TC_IMPL_TC_CORBA_Rïosô‹y_2
 'r'

	)

703 
	#TC_IMPL_TC_CORBA_Rïosô‹y_3
 'b'

	)

704 
	#TC_IMPL_TC_CORBA_Rïosô‹y_4
 'a'

	)

705 
	#TC_IMPL_TC_CORBA_Rïosô‹y_5
 '_'

	)

706 
	#TC_IMPL_TC_CORBA_Rïosô‹y_6
 'd'

	)

707 
	#TC_IMPL_TC_CORBA_Rïosô‹y_7
 'e'

	)

708 
	#TC_IMPL_TC_CORBA_Rïosô‹y_8
 'f'

	)

709 
	#TC_IMPL_TC_CORBA_Rïosô‹y_9
 's'

	)

710 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


715 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Rïosô‹y_°ru˘
;

716 
	#TC_CORBA_Rïosô‹y
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Rïosô‹y_°ru˘
)

	)

719 #i‡!
deföed
(
ORBIT_DECL_CORBA_Sequí˚Def
Ë&& !deföed(
_CORBA_Sequí˚Def_deföed
)

720 
	#ORBIT_DECL_CORBA_Sequí˚Def
 1

	)

721 
	#_CORBA_Sequí˚Def_deföed
 1

	)

722 
	#CORBA_Sequí˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

723 
CORBA_Obje˘
 
	tCORBA_Sequí˚Def
;

724 
CORBA_unsig√d_l⁄g
 
CORBA_Sequí˚Def__˛assid
;

725 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sequí˚Def_0
)

726 
	#TC_IMPL_TC_CORBA_Sequí˚Def_0
 'c'

	)

727 
	#TC_IMPL_TC_CORBA_Sequí˚Def_1
 'o'

	)

728 
	#TC_IMPL_TC_CORBA_Sequí˚Def_2
 'r'

	)

729 
	#TC_IMPL_TC_CORBA_Sequí˚Def_3
 'b'

	)

730 
	#TC_IMPL_TC_CORBA_Sequí˚Def_4
 'a'

	)

731 
	#TC_IMPL_TC_CORBA_Sequí˚Def_5
 '_'

	)

732 
	#TC_IMPL_TC_CORBA_Sequí˚Def_6
 'd'

	)

733 
	#TC_IMPL_TC_CORBA_Sequí˚Def_7
 'e'

	)

734 
	#TC_IMPL_TC_CORBA_Sequí˚Def_8
 'f'

	)

735 
	#TC_IMPL_TC_CORBA_Sequí˚Def_9
 's'

	)

736 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


741 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sequí˚Def_°ru˘
;

742 
	#TC_CORBA_Sequí˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sequí˚Def_°ru˘
)

	)

745 #i‡!
deföed
(
ORBIT_DECL_CORBA_SåögDef
Ë&& !deföed(
_CORBA_SåögDef_deföed
)

746 
	#ORBIT_DECL_CORBA_SåögDef
 1

	)

747 
	#_CORBA_SåögDef_deföed
 1

	)

748 
	#CORBA_SåögDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

749 
CORBA_Obje˘
 
	tCORBA_SåögDef
;

750 
CORBA_unsig√d_l⁄g
 
CORBA_SåögDef__˛assid
;

751 #i‡!
deföed
(
TC_IMPL_TC_CORBA_SåögDef_0
)

752 
	#TC_IMPL_TC_CORBA_SåögDef_0
 'c'

	)

753 
	#TC_IMPL_TC_CORBA_SåögDef_1
 'o'

	)

754 
	#TC_IMPL_TC_CORBA_SåögDef_2
 'r'

	)

755 
	#TC_IMPL_TC_CORBA_SåögDef_3
 'b'

	)

756 
	#TC_IMPL_TC_CORBA_SåögDef_4
 'a'

	)

757 
	#TC_IMPL_TC_CORBA_SåögDef_5
 '_'

	)

758 
	#TC_IMPL_TC_CORBA_SåögDef_6
 'd'

	)

759 
	#TC_IMPL_TC_CORBA_SåögDef_7
 'e'

	)

760 
	#TC_IMPL_TC_CORBA_SåögDef_8
 'f'

	)

761 
	#TC_IMPL_TC_CORBA_SåögDef_9
 's'

	)

762 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


767 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_SåögDef_°ru˘
;

768 
	#TC_CORBA_SåögDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_SåögDef_°ru˘
)

	)

771 #i‡!
deföed
(
ORBIT_DECL_CORBA_Såu˘Def
Ë&& !deföed(
_CORBA_Såu˘Def_deföed
)

772 
	#ORBIT_DECL_CORBA_Såu˘Def
 1

	)

773 
	#_CORBA_Såu˘Def_deföed
 1

	)

774 
	#CORBA_Såu˘Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

775 
CORBA_Obje˘
 
	tCORBA_Såu˘Def
;

776 
CORBA_unsig√d_l⁄g
 
CORBA_Såu˘Def__˛assid
;

777 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Såu˘Def_0
)

778 
	#TC_IMPL_TC_CORBA_Såu˘Def_0
 'c'

	)

779 
	#TC_IMPL_TC_CORBA_Såu˘Def_1
 'o'

	)

780 
	#TC_IMPL_TC_CORBA_Såu˘Def_2
 'r'

	)

781 
	#TC_IMPL_TC_CORBA_Såu˘Def_3
 'b'

	)

782 
	#TC_IMPL_TC_CORBA_Såu˘Def_4
 'a'

	)

783 
	#TC_IMPL_TC_CORBA_Såu˘Def_5
 '_'

	)

784 
	#TC_IMPL_TC_CORBA_Såu˘Def_6
 'd'

	)

785 
	#TC_IMPL_TC_CORBA_Såu˘Def_7
 'e'

	)

786 
	#TC_IMPL_TC_CORBA_Såu˘Def_8
 'f'

	)

787 
	#TC_IMPL_TC_CORBA_Såu˘Def_9
 's'

	)

788 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


793 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Såu˘Def_°ru˘
;

794 
	#TC_CORBA_Såu˘Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Såu˘Def_°ru˘
)

	)

797 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ty≥Code
Ë&& !deföed(
_CORBA_Ty≥Code_deföed
)

798 
	#ORBIT_DECL_CORBA_Ty≥Code
 1

	)

799 
	#_CORBA_Ty≥Code_deföed
 1

	)

800 
	#CORBA_Ty≥Code__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

801 
CORBA_Obje˘
 
	tCORBA_Ty≥Code
;

802 
CORBA_unsig√d_l⁄g
 
CORBA_Ty≥Code__˛assid
;

803 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥Code_0
)

804 
	#TC_IMPL_TC_CORBA_Ty≥Code_0
 'c'

	)

805 
	#TC_IMPL_TC_CORBA_Ty≥Code_1
 'o'

	)

806 
	#TC_IMPL_TC_CORBA_Ty≥Code_2
 'r'

	)

807 
	#TC_IMPL_TC_CORBA_Ty≥Code_3
 'b'

	)

808 
	#TC_IMPL_TC_CORBA_Ty≥Code_4
 'a'

	)

809 
	#TC_IMPL_TC_CORBA_Ty≥Code_5
 '_'

	)

810 
	#TC_IMPL_TC_CORBA_Ty≥Code_6
 'd'

	)

811 
	#TC_IMPL_TC_CORBA_Ty≥Code_7
 'e'

	)

812 
	#TC_IMPL_TC_CORBA_Ty≥Code_8
 'f'

	)

813 
	#TC_IMPL_TC_CORBA_Ty≥Code_9
 's'

	)

814 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


819 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥Code_°ru˘
;

820 
	#TC_CORBA_Ty≥Code
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥Code_°ru˘
)

	)

823 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ty≥defDef
Ë&& !deföed(
_CORBA_Ty≥defDef_deföed
)

824 
	#ORBIT_DECL_CORBA_Ty≥defDef
 1

	)

825 
	#_CORBA_Ty≥defDef_deföed
 1

	)

826 
	#CORBA_Ty≥defDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

827 
CORBA_Obje˘
 
	tCORBA_Ty≥defDef
;

828 
CORBA_unsig√d_l⁄g
 
CORBA_Ty≥defDef__˛assid
;

829 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥defDef_0
)

830 
	#TC_IMPL_TC_CORBA_Ty≥defDef_0
 'c'

	)

831 
	#TC_IMPL_TC_CORBA_Ty≥defDef_1
 'o'

	)

832 
	#TC_IMPL_TC_CORBA_Ty≥defDef_2
 'r'

	)

833 
	#TC_IMPL_TC_CORBA_Ty≥defDef_3
 'b'

	)

834 
	#TC_IMPL_TC_CORBA_Ty≥defDef_4
 'a'

	)

835 
	#TC_IMPL_TC_CORBA_Ty≥defDef_5
 '_'

	)

836 
	#TC_IMPL_TC_CORBA_Ty≥defDef_6
 'd'

	)

837 
	#TC_IMPL_TC_CORBA_Ty≥defDef_7
 'e'

	)

838 
	#TC_IMPL_TC_CORBA_Ty≥defDef_8
 'f'

	)

839 
	#TC_IMPL_TC_CORBA_Ty≥defDef_9
 's'

	)

840 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


845 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥defDef_°ru˘
;

846 
	#TC_CORBA_Ty≥defDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥defDef_°ru˘
)

	)

849 #i‡!
deföed
(
ORBIT_DECL_CORBA_Uni⁄Def
Ë&& !deföed(
_CORBA_Uni⁄Def_deföed
)

850 
	#ORBIT_DECL_CORBA_Uni⁄Def
 1

	)

851 
	#_CORBA_Uni⁄Def_deföed
 1

	)

852 
	#CORBA_Uni⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

853 
CORBA_Obje˘
 
	tCORBA_Uni⁄Def
;

854 
CORBA_unsig√d_l⁄g
 
CORBA_Uni⁄Def__˛assid
;

855 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Uni⁄Def_0
)

856 
	#TC_IMPL_TC_CORBA_Uni⁄Def_0
 'c'

	)

857 
	#TC_IMPL_TC_CORBA_Uni⁄Def_1
 'o'

	)

858 
	#TC_IMPL_TC_CORBA_Uni⁄Def_2
 'r'

	)

859 
	#TC_IMPL_TC_CORBA_Uni⁄Def_3
 'b'

	)

860 
	#TC_IMPL_TC_CORBA_Uni⁄Def_4
 'a'

	)

861 
	#TC_IMPL_TC_CORBA_Uni⁄Def_5
 '_'

	)

862 
	#TC_IMPL_TC_CORBA_Uni⁄Def_6
 'd'

	)

863 
	#TC_IMPL_TC_CORBA_Uni⁄Def_7
 'e'

	)

864 
	#TC_IMPL_TC_CORBA_Uni⁄Def_8
 'f'

	)

865 
	#TC_IMPL_TC_CORBA_Uni⁄Def_9
 's'

	)

866 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


871 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Uni⁄Def_°ru˘
;

872 
	#TC_CORBA_Uni⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Uni⁄Def_°ru˘
)

	)

875 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueDef
Ë&& !deföed(
_CORBA_VÆueDef_deföed
)

876 
	#ORBIT_DECL_CORBA_VÆueDef
 1

	)

877 
	#_CORBA_VÆueDef_deföed
 1

	)

878 
	#CORBA_VÆueDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

879 
CORBA_Obje˘
 
	tCORBA_VÆueDef
;

880 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueDef__˛assid
;

881 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueDef_0
)

882 
	#TC_IMPL_TC_CORBA_VÆueDef_0
 'c'

	)

883 
	#TC_IMPL_TC_CORBA_VÆueDef_1
 'o'

	)

884 
	#TC_IMPL_TC_CORBA_VÆueDef_2
 'r'

	)

885 
	#TC_IMPL_TC_CORBA_VÆueDef_3
 'b'

	)

886 
	#TC_IMPL_TC_CORBA_VÆueDef_4
 'a'

	)

887 
	#TC_IMPL_TC_CORBA_VÆueDef_5
 '_'

	)

888 
	#TC_IMPL_TC_CORBA_VÆueDef_6
 'd'

	)

889 
	#TC_IMPL_TC_CORBA_VÆueDef_7
 'e'

	)

890 
	#TC_IMPL_TC_CORBA_VÆueDef_8
 'f'

	)

891 
	#TC_IMPL_TC_CORBA_VÆueDef_9
 's'

	)

892 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


897 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueDef_°ru˘
;

898 
	#TC_CORBA_VÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueDef_°ru˘
)

	)

901 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueBoxDef
Ë&& !deföed(
_CORBA_VÆueBoxDef_deföed
)

902 
	#ORBIT_DECL_CORBA_VÆueBoxDef
 1

	)

903 
	#_CORBA_VÆueBoxDef_deföed
 1

	)

904 
	#CORBA_VÆueBoxDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

905 
CORBA_Obje˘
 
	tCORBA_VÆueBoxDef
;

906 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueBoxDef__˛assid
;

907 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueBoxDef_0
)

908 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_0
 'c'

	)

909 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_1
 'o'

	)

910 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_2
 'r'

	)

911 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_3
 'b'

	)

912 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_4
 'a'

	)

913 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_5
 '_'

	)

914 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_6
 'd'

	)

915 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_7
 'e'

	)

916 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_8
 'f'

	)

917 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_9
 's'

	)

918 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


923 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueBoxDef_°ru˘
;

924 
	#TC_CORBA_VÆueBoxDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueBoxDef_°ru˘
)

	)

927 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueMembîDef
Ë&& !deföed(
_CORBA_VÆueMembîDef_deföed
)

928 
	#ORBIT_DECL_CORBA_VÆueMembîDef
 1

	)

929 
	#_CORBA_VÆueMembîDef_deföed
 1

	)

930 
	#CORBA_VÆueMembîDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

931 
CORBA_Obje˘
 
	tCORBA_VÆueMembîDef
;

932 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueMembîDef__˛assid
;

933 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueMembîDef_0
)

934 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_0
 'c'

	)

935 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_1
 'o'

	)

936 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_2
 'r'

	)

937 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_3
 'b'

	)

938 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_4
 'a'

	)

939 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_5
 '_'

	)

940 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_6
 'd'

	)

941 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_7
 'e'

	)

942 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_8
 'f'

	)

943 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_9
 's'

	)

944 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


949 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueMembîDef_°ru˘
;

950 
	#TC_CORBA_VÆueMembîDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueMembîDef_°ru˘
)

	)

953 #i‡!
deföed
(
ORBIT_DECL_CORBA_W°rögDef
Ë&& !deföed(
_CORBA_W°rögDef_deföed
)

954 
	#ORBIT_DECL_CORBA_W°rögDef
 1

	)

955 
	#_CORBA_W°rögDef_deföed
 1

	)

956 
	#CORBA_W°rögDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

957 
CORBA_Obje˘
 
	tCORBA_W°rögDef
;

958 
CORBA_unsig√d_l⁄g
 
CORBA_W°rögDef__˛assid
;

959 #i‡!
deföed
(
TC_IMPL_TC_CORBA_W°rögDef_0
)

960 
	#TC_IMPL_TC_CORBA_W°rögDef_0
 'c'

	)

961 
	#TC_IMPL_TC_CORBA_W°rögDef_1
 'o'

	)

962 
	#TC_IMPL_TC_CORBA_W°rögDef_2
 'r'

	)

963 
	#TC_IMPL_TC_CORBA_W°rögDef_3
 'b'

	)

964 
	#TC_IMPL_TC_CORBA_W°rögDef_4
 'a'

	)

965 
	#TC_IMPL_TC_CORBA_W°rögDef_5
 '_'

	)

966 
	#TC_IMPL_TC_CORBA_W°rögDef_6
 'd'

	)

967 
	#TC_IMPL_TC_CORBA_W°rögDef_7
 'e'

	)

968 
	#TC_IMPL_TC_CORBA_W°rögDef_8
 'f'

	)

969 
	#TC_IMPL_TC_CORBA_W°rögDef_9
 's'

	)

970 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


975 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_W°rögDef_°ru˘
;

976 
	#TC_CORBA_W°rögDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_W°rögDef_°ru˘
)

	)

979 #i‡!
deföed
(
_CORBA_Idítifõr_deföed
)

980 
	#_CORBA_Idítifõr_deföed
 1

	)

981 
CORBA_°rög
 
	tCORBA_Idítifõr
;

982 
	#CORBA_Idítifõr_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

983 
	#CORBA_Idítifõr_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

984 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Idítifõr_0
)

985 
	#TC_IMPL_TC_CORBA_Idítifõr_0
 'c'

	)

986 
	#TC_IMPL_TC_CORBA_Idítifõr_1
 'o'

	)

987 
	#TC_IMPL_TC_CORBA_Idítifõr_2
 'r'

	)

988 
	#TC_IMPL_TC_CORBA_Idítifõr_3
 'b'

	)

989 
	#TC_IMPL_TC_CORBA_Idítifõr_4
 'a'

	)

990 
	#TC_IMPL_TC_CORBA_Idítifõr_5
 '_'

	)

991 
	#TC_IMPL_TC_CORBA_Idítifõr_6
 'd'

	)

992 
	#TC_IMPL_TC_CORBA_Idítifõr_7
 'e'

	)

993 
	#TC_IMPL_TC_CORBA_Idítifõr_8
 'f'

	)

994 
	#TC_IMPL_TC_CORBA_Idítifõr_9
 's'

	)

995 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1000 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Idítifõr_°ru˘
;

1001 
	#TC_CORBA_Idítifõr
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Idítifõr_°ru˘
)

	)

1003 
	#CORBA_Idítifõr__Æloc
(Ë((
CORBA_Idítifõr
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

1004 
	#CORBA_Idítifõr__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

1006 #i‚de‡
CORBA_OMGVMCID


1007 
	#CORBA_OMGVMCID
 1330446336U

	)

1010 #i‡!
deföed
(
_CORBA_com∂ëi⁄_°©us_deföed
)

1011 
	#_CORBA_com∂ëi⁄_°©us_deföed
 1

	)

1013 
	gCORBA_COMPLETED_YES
,

1014 
	gCORBA_COMPLETED_NO
,

1015 
	gCORBA_COMPLETED_MAYBE


1016 } 
	tCORBA_com∂ëi⁄_°©us
;

1017 #i‡!
deföed
(
TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_0
)

1018 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_0
 'c'

	)

1019 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_1
 'o'

	)

1020 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_2
 'r'

	)

1021 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_3
 'b'

	)

1022 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_4
 'a'

	)

1023 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_5
 '_'

	)

1024 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_6
 'd'

	)

1025 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_7
 'e'

	)

1026 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_8
 'f'

	)

1027 
	#TC_IMPL_TC_CORBA_com∂ëi⁄_°©us_9
 's'

	)

1028 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1033 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_com∂ëi⁄_°©us_°ru˘
;

1034 
	#TC_CORBA_com∂ëi⁄_°©us
 ((
CORBA_Ty≥Code
)&
TC_CORBA_com∂ëi⁄_°©us_°ru˘
)

	)

1037 #i‡!
deföed
(
_CORBA_ex˚±i⁄_ty≥_deföed
)

1038 
	#_CORBA_ex˚±i⁄_ty≥_deföed
 1

	)

1040 
	gCORBA_NO_EXCEPTION
,

1041 
	gCORBA_USER_EXCEPTION
,

1042 
	gCORBA_SYSTEM_EXCEPTION


1043 } 
	tCORBA_ex˚±i⁄_ty≥
;

1044 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_0
)

1045 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_0
 'c'

	)

1046 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_1
 'o'

	)

1047 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_2
 'r'

	)

1048 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_3
 'b'

	)

1049 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_4
 'a'

	)

1050 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_5
 '_'

	)

1051 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_6
 'd'

	)

1052 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_7
 'e'

	)

1053 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_8
 'f'

	)

1054 
	#TC_IMPL_TC_CORBA_ex˚±i⁄_ty≥_9
 's'

	)

1055 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1060 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ex˚±i⁄_ty≥_°ru˘
;

1061 
	#TC_CORBA_ex˚±i⁄_ty≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ex˚±i⁄_ty≥_°ru˘
)

	)

1064 #unde‡
ex_CORBA_UNKNOWN


1065 
	#ex_CORBA_UNKNOWN
 "IDL:omg.‹g/CORBA/UNKNOWN:1.0"

	)

1066 #i‡!
deföed
(
_CORBA_UNKNOWN_deföed
)

1067 
	#_CORBA_UNKNOWN_deföed
 1

	)

1068 
CORBA_UNKNOWN_ty≥
 
	tCORBA_UNKNOWN
;

1069 
	sCORBA_UNKNOWN_ty≥
 {

1070 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1071 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1074 #i‡!
deföed
(
TC_IMPL_TC_CORBA_UNKNOWN_0
)

1075 
	#TC_IMPL_TC_CORBA_UNKNOWN_0
 'c'

	)

1076 
	#TC_IMPL_TC_CORBA_UNKNOWN_1
 'o'

	)

1077 
	#TC_IMPL_TC_CORBA_UNKNOWN_2
 'r'

	)

1078 
	#TC_IMPL_TC_CORBA_UNKNOWN_3
 'b'

	)

1079 
	#TC_IMPL_TC_CORBA_UNKNOWN_4
 'a'

	)

1080 
	#TC_IMPL_TC_CORBA_UNKNOWN_5
 '_'

	)

1081 
	#TC_IMPL_TC_CORBA_UNKNOWN_6
 'd'

	)

1082 
	#TC_IMPL_TC_CORBA_UNKNOWN_7
 'e'

	)

1083 
	#TC_IMPL_TC_CORBA_UNKNOWN_8
 'f'

	)

1084 
	#TC_IMPL_TC_CORBA_UNKNOWN_9
 's'

	)

1085 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1090 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_UNKNOWN_°ru˘
;

1091 
	#TC_CORBA_UNKNOWN
 ((
CORBA_Ty≥Code
)&
TC_CORBA_UNKNOWN_°ru˘
)

	)

1093 
	#CORBA_UNKNOWN__Æloc
(Ë((
CORBA_UNKNOWN
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_UNKNOWN
))

	)

1094 
	#CORBA_UNKNOWN__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_UNKNOWN
,(m),(d))

	)

1096 #unde‡
ex_CORBA_BAD_PARAM


1097 
	#ex_CORBA_BAD_PARAM
 "IDL:omg.‹g/CORBA/BAD_PARAM:1.0"

	)

1098 #i‡!
deföed
(
_CORBA_BAD_PARAM_deföed
)

1099 
	#_CORBA_BAD_PARAM_deföed
 1

	)

1100 
CORBA_BAD_PARAM_ty≥
 
	tCORBA_BAD_PARAM
;

1101 
	sCORBA_BAD_PARAM_ty≥
 {

1102 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1103 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1106 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BAD_PARAM_0
)

1107 
	#TC_IMPL_TC_CORBA_BAD_PARAM_0
 'c'

	)

1108 
	#TC_IMPL_TC_CORBA_BAD_PARAM_1
 'o'

	)

1109 
	#TC_IMPL_TC_CORBA_BAD_PARAM_2
 'r'

	)

1110 
	#TC_IMPL_TC_CORBA_BAD_PARAM_3
 'b'

	)

1111 
	#TC_IMPL_TC_CORBA_BAD_PARAM_4
 'a'

	)

1112 
	#TC_IMPL_TC_CORBA_BAD_PARAM_5
 '_'

	)

1113 
	#TC_IMPL_TC_CORBA_BAD_PARAM_6
 'd'

	)

1114 
	#TC_IMPL_TC_CORBA_BAD_PARAM_7
 'e'

	)

1115 
	#TC_IMPL_TC_CORBA_BAD_PARAM_8
 'f'

	)

1116 
	#TC_IMPL_TC_CORBA_BAD_PARAM_9
 's'

	)

1117 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1122 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BAD_PARAM_°ru˘
;

1123 
	#TC_CORBA_BAD_PARAM
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BAD_PARAM_°ru˘
)

	)

1125 
	#CORBA_BAD_PARAM__Æloc
(Ë((
CORBA_BAD_PARAM
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BAD_PARAM
))

	)

1126 
	#CORBA_BAD_PARAM__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BAD_PARAM
,(m),(d))

	)

1128 #unde‡
ex_CORBA_NO_MEMORY


1129 
	#ex_CORBA_NO_MEMORY
 "IDL:omg.‹g/CORBA/NO_MEMORY:1.0"

	)

1130 #i‡!
deföed
(
_CORBA_NO_MEMORY_deföed
)

1131 
	#_CORBA_NO_MEMORY_deföed
 1

	)

1132 
CORBA_NO_MEMORY_ty≥
 
	tCORBA_NO_MEMORY
;

1133 
	sCORBA_NO_MEMORY_ty≥
 {

1134 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1135 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1138 #i‡!
deföed
(
TC_IMPL_TC_CORBA_NO_MEMORY_0
)

1139 
	#TC_IMPL_TC_CORBA_NO_MEMORY_0
 'c'

	)

1140 
	#TC_IMPL_TC_CORBA_NO_MEMORY_1
 'o'

	)

1141 
	#TC_IMPL_TC_CORBA_NO_MEMORY_2
 'r'

	)

1142 
	#TC_IMPL_TC_CORBA_NO_MEMORY_3
 'b'

	)

1143 
	#TC_IMPL_TC_CORBA_NO_MEMORY_4
 'a'

	)

1144 
	#TC_IMPL_TC_CORBA_NO_MEMORY_5
 '_'

	)

1145 
	#TC_IMPL_TC_CORBA_NO_MEMORY_6
 'd'

	)

1146 
	#TC_IMPL_TC_CORBA_NO_MEMORY_7
 'e'

	)

1147 
	#TC_IMPL_TC_CORBA_NO_MEMORY_8
 'f'

	)

1148 
	#TC_IMPL_TC_CORBA_NO_MEMORY_9
 's'

	)

1149 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1154 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_NO_MEMORY_°ru˘
;

1155 
	#TC_CORBA_NO_MEMORY
 ((
CORBA_Ty≥Code
)&
TC_CORBA_NO_MEMORY_°ru˘
)

	)

1157 
	#CORBA_NO_MEMORY__Æloc
(Ë((
CORBA_NO_MEMORY
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_NO_MEMORY
))

	)

1158 
	#CORBA_NO_MEMORY__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_NO_MEMORY
,(m),(d))

	)

1160 #unde‡
ex_CORBA_IMP_LIMIT


1161 
	#ex_CORBA_IMP_LIMIT
 "IDL:omg.‹g/CORBA/IMP_LIMIT:1.0"

	)

1162 #i‡!
deföed
(
_CORBA_IMP_LIMIT_deföed
)

1163 
	#_CORBA_IMP_LIMIT_deföed
 1

	)

1164 
CORBA_IMP_LIMIT_ty≥
 
	tCORBA_IMP_LIMIT
;

1165 
	sCORBA_IMP_LIMIT_ty≥
 {

1166 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1167 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1170 #i‡!
deföed
(
TC_IMPL_TC_CORBA_IMP_LIMIT_0
)

1171 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_0
 'c'

	)

1172 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_1
 'o'

	)

1173 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_2
 'r'

	)

1174 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_3
 'b'

	)

1175 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_4
 'a'

	)

1176 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_5
 '_'

	)

1177 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_6
 'd'

	)

1178 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_7
 'e'

	)

1179 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_8
 'f'

	)

1180 
	#TC_IMPL_TC_CORBA_IMP_LIMIT_9
 's'

	)

1181 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1186 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_IMP_LIMIT_°ru˘
;

1187 
	#TC_CORBA_IMP_LIMIT
 ((
CORBA_Ty≥Code
)&
TC_CORBA_IMP_LIMIT_°ru˘
)

	)

1189 
	#CORBA_IMP_LIMIT__Æloc
(Ë((
CORBA_IMP_LIMIT
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_IMP_LIMIT
))

	)

1190 
	#CORBA_IMP_LIMIT__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_IMP_LIMIT
,(m),(d))

	)

1192 #unde‡
ex_CORBA_COMM_FAILURE


1193 
	#ex_CORBA_COMM_FAILURE
 "IDL:omg.‹g/CORBA/COMM_FAILURE:1.0"

	)

1194 #i‡!
deföed
(
_CORBA_COMM_FAILURE_deföed
)

1195 
	#_CORBA_COMM_FAILURE_deföed
 1

	)

1196 
CORBA_COMM_FAILURE_ty≥
 
	tCORBA_COMM_FAILURE
;

1197 
	sCORBA_COMM_FAILURE_ty≥
 {

1198 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1199 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1202 #i‡!
deföed
(
TC_IMPL_TC_CORBA_COMM_FAILURE_0
)

1203 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_0
 'c'

	)

1204 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_1
 'o'

	)

1205 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_2
 'r'

	)

1206 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_3
 'b'

	)

1207 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_4
 'a'

	)

1208 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_5
 '_'

	)

1209 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_6
 'd'

	)

1210 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_7
 'e'

	)

1211 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_8
 'f'

	)

1212 
	#TC_IMPL_TC_CORBA_COMM_FAILURE_9
 's'

	)

1213 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1218 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_COMM_FAILURE_°ru˘
;

1219 
	#TC_CORBA_COMM_FAILURE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_COMM_FAILURE_°ru˘
)

	)

1221 
	#CORBA_COMM_FAILURE__Æloc
(Ë((
CORBA_COMM_FAILURE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_COMM_FAILURE
))

	)

1222 
	#CORBA_COMM_FAILURE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_COMM_FAILURE
,(m),(d))

	)

1224 #unde‡
ex_CORBA_INV_OBJREF


1225 
	#ex_CORBA_INV_OBJREF
 "IDL:omg.‹g/CORBA/INV_OBJREF:1.0"

	)

1226 #i‡!
deföed
(
_CORBA_INV_OBJREF_deföed
)

1227 
	#_CORBA_INV_OBJREF_deföed
 1

	)

1228 
CORBA_INV_OBJREF_ty≥
 
	tCORBA_INV_OBJREF
;

1229 
	sCORBA_INV_OBJREF_ty≥
 {

1230 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1231 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1234 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INV_OBJREF_0
)

1235 
	#TC_IMPL_TC_CORBA_INV_OBJREF_0
 'c'

	)

1236 
	#TC_IMPL_TC_CORBA_INV_OBJREF_1
 'o'

	)

1237 
	#TC_IMPL_TC_CORBA_INV_OBJREF_2
 'r'

	)

1238 
	#TC_IMPL_TC_CORBA_INV_OBJREF_3
 'b'

	)

1239 
	#TC_IMPL_TC_CORBA_INV_OBJREF_4
 'a'

	)

1240 
	#TC_IMPL_TC_CORBA_INV_OBJREF_5
 '_'

	)

1241 
	#TC_IMPL_TC_CORBA_INV_OBJREF_6
 'd'

	)

1242 
	#TC_IMPL_TC_CORBA_INV_OBJREF_7
 'e'

	)

1243 
	#TC_IMPL_TC_CORBA_INV_OBJREF_8
 'f'

	)

1244 
	#TC_IMPL_TC_CORBA_INV_OBJREF_9
 's'

	)

1245 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1250 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INV_OBJREF_°ru˘
;

1251 
	#TC_CORBA_INV_OBJREF
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INV_OBJREF_°ru˘
)

	)

1253 
	#CORBA_INV_OBJREF__Æloc
(Ë((
CORBA_INV_OBJREF
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INV_OBJREF
))

	)

1254 
	#CORBA_INV_OBJREF__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INV_OBJREF
,(m),(d))

	)

1256 #unde‡
ex_CORBA_NO_PERMISSION


1257 
	#ex_CORBA_NO_PERMISSION
 "IDL:omg.‹g/CORBA/NO_PERMISSION:1.0"

	)

1258 #i‡!
deföed
(
_CORBA_NO_PERMISSION_deföed
)

1259 
	#_CORBA_NO_PERMISSION_deföed
 1

	)

1260 
CORBA_NO_PERMISSION_ty≥
 
	tCORBA_NO_PERMISSION
;

1261 
	sCORBA_NO_PERMISSION_ty≥
 {

1262 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1263 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1266 #i‡!
deföed
(
TC_IMPL_TC_CORBA_NO_PERMISSION_0
)

1267 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_0
 'c'

	)

1268 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_1
 'o'

	)

1269 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_2
 'r'

	)

1270 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_3
 'b'

	)

1271 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_4
 'a'

	)

1272 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_5
 '_'

	)

1273 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_6
 'd'

	)

1274 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_7
 'e'

	)

1275 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_8
 'f'

	)

1276 
	#TC_IMPL_TC_CORBA_NO_PERMISSION_9
 's'

	)

1277 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1282 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_NO_PERMISSION_°ru˘
;

1283 
	#TC_CORBA_NO_PERMISSION
 ((
CORBA_Ty≥Code
)&
TC_CORBA_NO_PERMISSION_°ru˘
)

	)

1285 
	#CORBA_NO_PERMISSION__Æloc
(Ë((
CORBA_NO_PERMISSION
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_NO_PERMISSION
))

	)

1286 
	#CORBA_NO_PERMISSION__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_NO_PERMISSION
,(m),(d))

	)

1288 #unde‡
ex_CORBA_INTERNAL


1289 
	#ex_CORBA_INTERNAL
 "IDL:omg.‹g/CORBA/INTERNAL:1.0"

	)

1290 #i‡!
deföed
(
_CORBA_INTERNAL_deföed
)

1291 
	#_CORBA_INTERNAL_deföed
 1

	)

1292 
CORBA_INTERNAL_ty≥
 
	tCORBA_INTERNAL
;

1293 
	sCORBA_INTERNAL_ty≥
 {

1294 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1295 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1298 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INTERNAL_0
)

1299 
	#TC_IMPL_TC_CORBA_INTERNAL_0
 'c'

	)

1300 
	#TC_IMPL_TC_CORBA_INTERNAL_1
 'o'

	)

1301 
	#TC_IMPL_TC_CORBA_INTERNAL_2
 'r'

	)

1302 
	#TC_IMPL_TC_CORBA_INTERNAL_3
 'b'

	)

1303 
	#TC_IMPL_TC_CORBA_INTERNAL_4
 'a'

	)

1304 
	#TC_IMPL_TC_CORBA_INTERNAL_5
 '_'

	)

1305 
	#TC_IMPL_TC_CORBA_INTERNAL_6
 'd'

	)

1306 
	#TC_IMPL_TC_CORBA_INTERNAL_7
 'e'

	)

1307 
	#TC_IMPL_TC_CORBA_INTERNAL_8
 'f'

	)

1308 
	#TC_IMPL_TC_CORBA_INTERNAL_9
 's'

	)

1309 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1314 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INTERNAL_°ru˘
;

1315 
	#TC_CORBA_INTERNAL
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INTERNAL_°ru˘
)

	)

1317 
	#CORBA_INTERNAL__Æloc
(Ë((
CORBA_INTERNAL
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INTERNAL
))

	)

1318 
	#CORBA_INTERNAL__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INTERNAL
,(m),(d))

	)

1320 #unde‡
ex_CORBA_MARSHAL


1321 
	#ex_CORBA_MARSHAL
 "IDL:omg.‹g/CORBA/MARSHAL:1.0"

	)

1322 #i‡!
deföed
(
_CORBA_MARSHAL_deföed
)

1323 
	#_CORBA_MARSHAL_deföed
 1

	)

1324 
CORBA_MARSHAL_ty≥
 
	tCORBA_MARSHAL
;

1325 
	sCORBA_MARSHAL_ty≥
 {

1326 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1327 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1330 #i‡!
deföed
(
TC_IMPL_TC_CORBA_MARSHAL_0
)

1331 
	#TC_IMPL_TC_CORBA_MARSHAL_0
 'c'

	)

1332 
	#TC_IMPL_TC_CORBA_MARSHAL_1
 'o'

	)

1333 
	#TC_IMPL_TC_CORBA_MARSHAL_2
 'r'

	)

1334 
	#TC_IMPL_TC_CORBA_MARSHAL_3
 'b'

	)

1335 
	#TC_IMPL_TC_CORBA_MARSHAL_4
 'a'

	)

1336 
	#TC_IMPL_TC_CORBA_MARSHAL_5
 '_'

	)

1337 
	#TC_IMPL_TC_CORBA_MARSHAL_6
 'd'

	)

1338 
	#TC_IMPL_TC_CORBA_MARSHAL_7
 'e'

	)

1339 
	#TC_IMPL_TC_CORBA_MARSHAL_8
 'f'

	)

1340 
	#TC_IMPL_TC_CORBA_MARSHAL_9
 's'

	)

1341 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1346 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_MARSHAL_°ru˘
;

1347 
	#TC_CORBA_MARSHAL
 ((
CORBA_Ty≥Code
)&
TC_CORBA_MARSHAL_°ru˘
)

	)

1349 
	#CORBA_MARSHAL__Æloc
(Ë((
CORBA_MARSHAL
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_MARSHAL
))

	)

1350 
	#CORBA_MARSHAL__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_MARSHAL
,(m),(d))

	)

1352 #unde‡
ex_CORBA_INITIALIZE


1353 
	#ex_CORBA_INITIALIZE
 "IDL:omg.‹g/CORBA/INITIALIZE:1.0"

	)

1354 #i‡!
deföed
(
_CORBA_INITIALIZE_deföed
)

1355 
	#_CORBA_INITIALIZE_deföed
 1

	)

1356 
CORBA_INITIALIZE_ty≥
 
	tCORBA_INITIALIZE
;

1357 
	sCORBA_INITIALIZE_ty≥
 {

1358 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1359 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1362 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INITIALIZE_0
)

1363 
	#TC_IMPL_TC_CORBA_INITIALIZE_0
 'c'

	)

1364 
	#TC_IMPL_TC_CORBA_INITIALIZE_1
 'o'

	)

1365 
	#TC_IMPL_TC_CORBA_INITIALIZE_2
 'r'

	)

1366 
	#TC_IMPL_TC_CORBA_INITIALIZE_3
 'b'

	)

1367 
	#TC_IMPL_TC_CORBA_INITIALIZE_4
 'a'

	)

1368 
	#TC_IMPL_TC_CORBA_INITIALIZE_5
 '_'

	)

1369 
	#TC_IMPL_TC_CORBA_INITIALIZE_6
 'd'

	)

1370 
	#TC_IMPL_TC_CORBA_INITIALIZE_7
 'e'

	)

1371 
	#TC_IMPL_TC_CORBA_INITIALIZE_8
 'f'

	)

1372 
	#TC_IMPL_TC_CORBA_INITIALIZE_9
 's'

	)

1373 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1378 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INITIALIZE_°ru˘
;

1379 
	#TC_CORBA_INITIALIZE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INITIALIZE_°ru˘
)

	)

1381 
	#CORBA_INITIALIZE__Æloc
(Ë((
CORBA_INITIALIZE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INITIALIZE
))

	)

1382 
	#CORBA_INITIALIZE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INITIALIZE
,(m),(d))

	)

1384 #unde‡
ex_CORBA_NO_IMPLEMENT


1385 
	#ex_CORBA_NO_IMPLEMENT
 "IDL:omg.‹g/CORBA/NO_IMPLEMENT:1.0"

	)

1386 #i‡!
deföed
(
_CORBA_NO_IMPLEMENT_deföed
)

1387 
	#_CORBA_NO_IMPLEMENT_deföed
 1

	)

1388 
CORBA_NO_IMPLEMENT_ty≥
 
	tCORBA_NO_IMPLEMENT
;

1389 
	sCORBA_NO_IMPLEMENT_ty≥
 {

1390 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1391 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1394 #i‡!
deföed
(
TC_IMPL_TC_CORBA_NO_IMPLEMENT_0
)

1395 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_0
 'c'

	)

1396 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_1
 'o'

	)

1397 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_2
 'r'

	)

1398 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_3
 'b'

	)

1399 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_4
 'a'

	)

1400 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_5
 '_'

	)

1401 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_6
 'd'

	)

1402 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_7
 'e'

	)

1403 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_8
 'f'

	)

1404 
	#TC_IMPL_TC_CORBA_NO_IMPLEMENT_9
 's'

	)

1405 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1410 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_NO_IMPLEMENT_°ru˘
;

1411 
	#TC_CORBA_NO_IMPLEMENT
 ((
CORBA_Ty≥Code
)&
TC_CORBA_NO_IMPLEMENT_°ru˘
)

	)

1413 
	#CORBA_NO_IMPLEMENT__Æloc
(Ë((
CORBA_NO_IMPLEMENT
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_NO_IMPLEMENT
))

	)

1414 
	#CORBA_NO_IMPLEMENT__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_NO_IMPLEMENT
,(m),(d))

	)

1416 #unde‡
ex_CORBA_BAD_TYPECODE


1417 
	#ex_CORBA_BAD_TYPECODE
 "IDL:omg.‹g/CORBA/BAD_TYPECODE:1.0"

	)

1418 #i‡!
deföed
(
_CORBA_BAD_TYPECODE_deföed
)

1419 
	#_CORBA_BAD_TYPECODE_deföed
 1

	)

1420 
CORBA_BAD_TYPECODE_ty≥
 
	tCORBA_BAD_TYPECODE
;

1421 
	sCORBA_BAD_TYPECODE_ty≥
 {

1422 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1423 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1426 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BAD_TYPECODE_0
)

1427 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_0
 'c'

	)

1428 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_1
 'o'

	)

1429 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_2
 'r'

	)

1430 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_3
 'b'

	)

1431 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_4
 'a'

	)

1432 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_5
 '_'

	)

1433 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_6
 'd'

	)

1434 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_7
 'e'

	)

1435 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_8
 'f'

	)

1436 
	#TC_IMPL_TC_CORBA_BAD_TYPECODE_9
 's'

	)

1437 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1442 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BAD_TYPECODE_°ru˘
;

1443 
	#TC_CORBA_BAD_TYPECODE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BAD_TYPECODE_°ru˘
)

	)

1445 
	#CORBA_BAD_TYPECODE__Æloc
(Ë((
CORBA_BAD_TYPECODE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BAD_TYPECODE
))

	)

1446 
	#CORBA_BAD_TYPECODE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BAD_TYPECODE
,(m),(d))

	)

1448 #unde‡
ex_CORBA_BAD_OPERATION


1449 
	#ex_CORBA_BAD_OPERATION
 "IDL:omg.‹g/CORBA/BAD_OPERATION:1.0"

	)

1450 #i‡!
deföed
(
_CORBA_BAD_OPERATION_deföed
)

1451 
	#_CORBA_BAD_OPERATION_deföed
 1

	)

1452 
CORBA_BAD_OPERATION_ty≥
 
	tCORBA_BAD_OPERATION
;

1453 
	sCORBA_BAD_OPERATION_ty≥
 {

1454 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1455 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1458 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BAD_OPERATION_0
)

1459 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_0
 'c'

	)

1460 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_1
 'o'

	)

1461 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_2
 'r'

	)

1462 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_3
 'b'

	)

1463 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_4
 'a'

	)

1464 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_5
 '_'

	)

1465 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_6
 'd'

	)

1466 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_7
 'e'

	)

1467 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_8
 'f'

	)

1468 
	#TC_IMPL_TC_CORBA_BAD_OPERATION_9
 's'

	)

1469 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1474 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BAD_OPERATION_°ru˘
;

1475 
	#TC_CORBA_BAD_OPERATION
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BAD_OPERATION_°ru˘
)

	)

1477 
	#CORBA_BAD_OPERATION__Æloc
(Ë((
CORBA_BAD_OPERATION
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BAD_OPERATION
))

	)

1478 
	#CORBA_BAD_OPERATION__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BAD_OPERATION
,(m),(d))

	)

1480 #unde‡
ex_CORBA_NO_RESOURCES


1481 
	#ex_CORBA_NO_RESOURCES
 "IDL:omg.‹g/CORBA/NO_RESOURCES:1.0"

	)

1482 #i‡!
deföed
(
_CORBA_NO_RESOURCES_deföed
)

1483 
	#_CORBA_NO_RESOURCES_deföed
 1

	)

1484 
CORBA_NO_RESOURCES_ty≥
 
	tCORBA_NO_RESOURCES
;

1485 
	sCORBA_NO_RESOURCES_ty≥
 {

1486 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1487 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1490 #i‡!
deföed
(
TC_IMPL_TC_CORBA_NO_RESOURCES_0
)

1491 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_0
 'c'

	)

1492 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_1
 'o'

	)

1493 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_2
 'r'

	)

1494 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_3
 'b'

	)

1495 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_4
 'a'

	)

1496 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_5
 '_'

	)

1497 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_6
 'd'

	)

1498 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_7
 'e'

	)

1499 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_8
 'f'

	)

1500 
	#TC_IMPL_TC_CORBA_NO_RESOURCES_9
 's'

	)

1501 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1506 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_NO_RESOURCES_°ru˘
;

1507 
	#TC_CORBA_NO_RESOURCES
 ((
CORBA_Ty≥Code
)&
TC_CORBA_NO_RESOURCES_°ru˘
)

	)

1509 
	#CORBA_NO_RESOURCES__Æloc
(Ë((
CORBA_NO_RESOURCES
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_NO_RESOURCES
))

	)

1510 
	#CORBA_NO_RESOURCES__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_NO_RESOURCES
,(m),(d))

	)

1512 #unde‡
ex_CORBA_NO_RESPONSE


1513 
	#ex_CORBA_NO_RESPONSE
 "IDL:omg.‹g/CORBA/NO_RESPONSE:1.0"

	)

1514 #i‡!
deföed
(
_CORBA_NO_RESPONSE_deföed
)

1515 
	#_CORBA_NO_RESPONSE_deföed
 1

	)

1516 
CORBA_NO_RESPONSE_ty≥
 
	tCORBA_NO_RESPONSE
;

1517 
	sCORBA_NO_RESPONSE_ty≥
 {

1518 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1519 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1522 #i‡!
deföed
(
TC_IMPL_TC_CORBA_NO_RESPONSE_0
)

1523 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_0
 'c'

	)

1524 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_1
 'o'

	)

1525 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_2
 'r'

	)

1526 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_3
 'b'

	)

1527 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_4
 'a'

	)

1528 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_5
 '_'

	)

1529 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_6
 'd'

	)

1530 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_7
 'e'

	)

1531 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_8
 'f'

	)

1532 
	#TC_IMPL_TC_CORBA_NO_RESPONSE_9
 's'

	)

1533 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1538 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_NO_RESPONSE_°ru˘
;

1539 
	#TC_CORBA_NO_RESPONSE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_NO_RESPONSE_°ru˘
)

	)

1541 
	#CORBA_NO_RESPONSE__Æloc
(Ë((
CORBA_NO_RESPONSE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_NO_RESPONSE
))

	)

1542 
	#CORBA_NO_RESPONSE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_NO_RESPONSE
,(m),(d))

	)

1544 #unde‡
ex_CORBA_PERSIST_STORE


1545 
	#ex_CORBA_PERSIST_STORE
 "IDL:omg.‹g/CORBA/PERSIST_STORE:1.0"

	)

1546 #i‡!
deföed
(
_CORBA_PERSIST_STORE_deföed
)

1547 
	#_CORBA_PERSIST_STORE_deföed
 1

	)

1548 
CORBA_PERSIST_STORE_ty≥
 
	tCORBA_PERSIST_STORE
;

1549 
	sCORBA_PERSIST_STORE_ty≥
 {

1550 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1551 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1554 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PERSIST_STORE_0
)

1555 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_0
 'c'

	)

1556 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_1
 'o'

	)

1557 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_2
 'r'

	)

1558 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_3
 'b'

	)

1559 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_4
 'a'

	)

1560 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_5
 '_'

	)

1561 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_6
 'd'

	)

1562 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_7
 'e'

	)

1563 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_8
 'f'

	)

1564 
	#TC_IMPL_TC_CORBA_PERSIST_STORE_9
 's'

	)

1565 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1570 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PERSIST_STORE_°ru˘
;

1571 
	#TC_CORBA_PERSIST_STORE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PERSIST_STORE_°ru˘
)

	)

1573 
	#CORBA_PERSIST_STORE__Æloc
(Ë((
CORBA_PERSIST_STORE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_PERSIST_STORE
))

	)

1574 
	#CORBA_PERSIST_STORE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_PERSIST_STORE
,(m),(d))

	)

1576 #unde‡
ex_CORBA_BAD_INV_ORDER


1577 
	#ex_CORBA_BAD_INV_ORDER
 "IDL:omg.‹g/CORBA/BAD_INV_ORDER:1.0"

	)

1578 #i‡!
deföed
(
_CORBA_BAD_INV_ORDER_deföed
)

1579 
	#_CORBA_BAD_INV_ORDER_deföed
 1

	)

1580 
CORBA_BAD_INV_ORDER_ty≥
 
	tCORBA_BAD_INV_ORDER
;

1581 
	sCORBA_BAD_INV_ORDER_ty≥
 {

1582 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1583 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1586 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BAD_INV_ORDER_0
)

1587 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_0
 'c'

	)

1588 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_1
 'o'

	)

1589 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_2
 'r'

	)

1590 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_3
 'b'

	)

1591 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_4
 'a'

	)

1592 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_5
 '_'

	)

1593 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_6
 'd'

	)

1594 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_7
 'e'

	)

1595 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_8
 'f'

	)

1596 
	#TC_IMPL_TC_CORBA_BAD_INV_ORDER_9
 's'

	)

1597 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1602 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BAD_INV_ORDER_°ru˘
;

1603 
	#TC_CORBA_BAD_INV_ORDER
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BAD_INV_ORDER_°ru˘
)

	)

1605 
	#CORBA_BAD_INV_ORDER__Æloc
(Ë((
CORBA_BAD_INV_ORDER
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BAD_INV_ORDER
))

	)

1606 
	#CORBA_BAD_INV_ORDER__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BAD_INV_ORDER
,(m),(d))

	)

1608 #unde‡
ex_CORBA_TRANSIENT


1609 
	#ex_CORBA_TRANSIENT
 "IDL:omg.‹g/CORBA/TRANSIENT:1.0"

	)

1610 #i‡!
deföed
(
_CORBA_TRANSIENT_deföed
)

1611 
	#_CORBA_TRANSIENT_deföed
 1

	)

1612 
CORBA_TRANSIENT_ty≥
 
	tCORBA_TRANSIENT
;

1613 
	sCORBA_TRANSIENT_ty≥
 {

1614 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1615 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1618 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TRANSIENT_0
)

1619 
	#TC_IMPL_TC_CORBA_TRANSIENT_0
 'c'

	)

1620 
	#TC_IMPL_TC_CORBA_TRANSIENT_1
 'o'

	)

1621 
	#TC_IMPL_TC_CORBA_TRANSIENT_2
 'r'

	)

1622 
	#TC_IMPL_TC_CORBA_TRANSIENT_3
 'b'

	)

1623 
	#TC_IMPL_TC_CORBA_TRANSIENT_4
 'a'

	)

1624 
	#TC_IMPL_TC_CORBA_TRANSIENT_5
 '_'

	)

1625 
	#TC_IMPL_TC_CORBA_TRANSIENT_6
 'd'

	)

1626 
	#TC_IMPL_TC_CORBA_TRANSIENT_7
 'e'

	)

1627 
	#TC_IMPL_TC_CORBA_TRANSIENT_8
 'f'

	)

1628 
	#TC_IMPL_TC_CORBA_TRANSIENT_9
 's'

	)

1629 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1634 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TRANSIENT_°ru˘
;

1635 
	#TC_CORBA_TRANSIENT
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TRANSIENT_°ru˘
)

	)

1637 
	#CORBA_TRANSIENT__Æloc
(Ë((
CORBA_TRANSIENT
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_TRANSIENT
))

	)

1638 
	#CORBA_TRANSIENT__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_TRANSIENT
,(m),(d))

	)

1640 #unde‡
ex_CORBA_FREE_MEM


1641 
	#ex_CORBA_FREE_MEM
 "IDL:omg.‹g/CORBA/FREE_MEM:1.0"

	)

1642 #i‡!
deföed
(
_CORBA_FREE_MEM_deföed
)

1643 
	#_CORBA_FREE_MEM_deföed
 1

	)

1644 
CORBA_FREE_MEM_ty≥
 
	tCORBA_FREE_MEM
;

1645 
	sCORBA_FREE_MEM_ty≥
 {

1646 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1647 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1650 #i‡!
deföed
(
TC_IMPL_TC_CORBA_FREE_MEM_0
)

1651 
	#TC_IMPL_TC_CORBA_FREE_MEM_0
 'c'

	)

1652 
	#TC_IMPL_TC_CORBA_FREE_MEM_1
 'o'

	)

1653 
	#TC_IMPL_TC_CORBA_FREE_MEM_2
 'r'

	)

1654 
	#TC_IMPL_TC_CORBA_FREE_MEM_3
 'b'

	)

1655 
	#TC_IMPL_TC_CORBA_FREE_MEM_4
 'a'

	)

1656 
	#TC_IMPL_TC_CORBA_FREE_MEM_5
 '_'

	)

1657 
	#TC_IMPL_TC_CORBA_FREE_MEM_6
 'd'

	)

1658 
	#TC_IMPL_TC_CORBA_FREE_MEM_7
 'e'

	)

1659 
	#TC_IMPL_TC_CORBA_FREE_MEM_8
 'f'

	)

1660 
	#TC_IMPL_TC_CORBA_FREE_MEM_9
 's'

	)

1661 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1666 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_FREE_MEM_°ru˘
;

1667 
	#TC_CORBA_FREE_MEM
 ((
CORBA_Ty≥Code
)&
TC_CORBA_FREE_MEM_°ru˘
)

	)

1669 
	#CORBA_FREE_MEM__Æloc
(Ë((
CORBA_FREE_MEM
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_FREE_MEM
))

	)

1670 
	#CORBA_FREE_MEM__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_FREE_MEM
,(m),(d))

	)

1672 #unde‡
ex_CORBA_INV_IDENT


1673 
	#ex_CORBA_INV_IDENT
 "IDL:omg.‹g/CORBA/INV_IDENT:1.0"

	)

1674 #i‡!
deföed
(
_CORBA_INV_IDENT_deföed
)

1675 
	#_CORBA_INV_IDENT_deföed
 1

	)

1676 
CORBA_INV_IDENT_ty≥
 
	tCORBA_INV_IDENT
;

1677 
	sCORBA_INV_IDENT_ty≥
 {

1678 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1679 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1682 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INV_IDENT_0
)

1683 
	#TC_IMPL_TC_CORBA_INV_IDENT_0
 'c'

	)

1684 
	#TC_IMPL_TC_CORBA_INV_IDENT_1
 'o'

	)

1685 
	#TC_IMPL_TC_CORBA_INV_IDENT_2
 'r'

	)

1686 
	#TC_IMPL_TC_CORBA_INV_IDENT_3
 'b'

	)

1687 
	#TC_IMPL_TC_CORBA_INV_IDENT_4
 'a'

	)

1688 
	#TC_IMPL_TC_CORBA_INV_IDENT_5
 '_'

	)

1689 
	#TC_IMPL_TC_CORBA_INV_IDENT_6
 'd'

	)

1690 
	#TC_IMPL_TC_CORBA_INV_IDENT_7
 'e'

	)

1691 
	#TC_IMPL_TC_CORBA_INV_IDENT_8
 'f'

	)

1692 
	#TC_IMPL_TC_CORBA_INV_IDENT_9
 's'

	)

1693 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1698 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INV_IDENT_°ru˘
;

1699 
	#TC_CORBA_INV_IDENT
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INV_IDENT_°ru˘
)

	)

1701 
	#CORBA_INV_IDENT__Æloc
(Ë((
CORBA_INV_IDENT
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INV_IDENT
))

	)

1702 
	#CORBA_INV_IDENT__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INV_IDENT
,(m),(d))

	)

1704 #unde‡
ex_CORBA_INV_FLAG


1705 
	#ex_CORBA_INV_FLAG
 "IDL:omg.‹g/CORBA/INV_FLAG:1.0"

	)

1706 #i‡!
deföed
(
_CORBA_INV_FLAG_deföed
)

1707 
	#_CORBA_INV_FLAG_deföed
 1

	)

1708 
CORBA_INV_FLAG_ty≥
 
	tCORBA_INV_FLAG
;

1709 
	sCORBA_INV_FLAG_ty≥
 {

1710 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1711 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1714 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INV_FLAG_0
)

1715 
	#TC_IMPL_TC_CORBA_INV_FLAG_0
 'c'

	)

1716 
	#TC_IMPL_TC_CORBA_INV_FLAG_1
 'o'

	)

1717 
	#TC_IMPL_TC_CORBA_INV_FLAG_2
 'r'

	)

1718 
	#TC_IMPL_TC_CORBA_INV_FLAG_3
 'b'

	)

1719 
	#TC_IMPL_TC_CORBA_INV_FLAG_4
 'a'

	)

1720 
	#TC_IMPL_TC_CORBA_INV_FLAG_5
 '_'

	)

1721 
	#TC_IMPL_TC_CORBA_INV_FLAG_6
 'd'

	)

1722 
	#TC_IMPL_TC_CORBA_INV_FLAG_7
 'e'

	)

1723 
	#TC_IMPL_TC_CORBA_INV_FLAG_8
 'f'

	)

1724 
	#TC_IMPL_TC_CORBA_INV_FLAG_9
 's'

	)

1725 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1730 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INV_FLAG_°ru˘
;

1731 
	#TC_CORBA_INV_FLAG
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INV_FLAG_°ru˘
)

	)

1733 
	#CORBA_INV_FLAG__Æloc
(Ë((
CORBA_INV_FLAG
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INV_FLAG
))

	)

1734 
	#CORBA_INV_FLAG__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INV_FLAG
,(m),(d))

	)

1736 #unde‡
ex_CORBA_INTF_REPOS


1737 
	#ex_CORBA_INTF_REPOS
 "IDL:omg.‹g/CORBA/INTF_REPOS:1.0"

	)

1738 #i‡!
deföed
(
_CORBA_INTF_REPOS_deföed
)

1739 
	#_CORBA_INTF_REPOS_deföed
 1

	)

1740 
CORBA_INTF_REPOS_ty≥
 
	tCORBA_INTF_REPOS
;

1741 
	sCORBA_INTF_REPOS_ty≥
 {

1742 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1743 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1746 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INTF_REPOS_0
)

1747 
	#TC_IMPL_TC_CORBA_INTF_REPOS_0
 'c'

	)

1748 
	#TC_IMPL_TC_CORBA_INTF_REPOS_1
 'o'

	)

1749 
	#TC_IMPL_TC_CORBA_INTF_REPOS_2
 'r'

	)

1750 
	#TC_IMPL_TC_CORBA_INTF_REPOS_3
 'b'

	)

1751 
	#TC_IMPL_TC_CORBA_INTF_REPOS_4
 'a'

	)

1752 
	#TC_IMPL_TC_CORBA_INTF_REPOS_5
 '_'

	)

1753 
	#TC_IMPL_TC_CORBA_INTF_REPOS_6
 'd'

	)

1754 
	#TC_IMPL_TC_CORBA_INTF_REPOS_7
 'e'

	)

1755 
	#TC_IMPL_TC_CORBA_INTF_REPOS_8
 'f'

	)

1756 
	#TC_IMPL_TC_CORBA_INTF_REPOS_9
 's'

	)

1757 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1762 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INTF_REPOS_°ru˘
;

1763 
	#TC_CORBA_INTF_REPOS
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INTF_REPOS_°ru˘
)

	)

1765 
	#CORBA_INTF_REPOS__Æloc
(Ë((
CORBA_INTF_REPOS
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INTF_REPOS
))

	)

1766 
	#CORBA_INTF_REPOS__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INTF_REPOS
,(m),(d))

	)

1768 #unde‡
ex_CORBA_BAD_CONTEXT


1769 
	#ex_CORBA_BAD_CONTEXT
 "IDL:omg.‹g/CORBA/BAD_CONTEXT:1.0"

	)

1770 #i‡!
deföed
(
_CORBA_BAD_CONTEXT_deföed
)

1771 
	#_CORBA_BAD_CONTEXT_deföed
 1

	)

1772 
CORBA_BAD_CONTEXT_ty≥
 
	tCORBA_BAD_CONTEXT
;

1773 
	sCORBA_BAD_CONTEXT_ty≥
 {

1774 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1775 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1778 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BAD_CONTEXT_0
)

1779 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_0
 'c'

	)

1780 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_1
 'o'

	)

1781 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_2
 'r'

	)

1782 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_3
 'b'

	)

1783 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_4
 'a'

	)

1784 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_5
 '_'

	)

1785 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_6
 'd'

	)

1786 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_7
 'e'

	)

1787 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_8
 'f'

	)

1788 
	#TC_IMPL_TC_CORBA_BAD_CONTEXT_9
 's'

	)

1789 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1794 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BAD_CONTEXT_°ru˘
;

1795 
	#TC_CORBA_BAD_CONTEXT
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BAD_CONTEXT_°ru˘
)

	)

1797 
	#CORBA_BAD_CONTEXT__Æloc
(Ë((
CORBA_BAD_CONTEXT
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BAD_CONTEXT
))

	)

1798 
	#CORBA_BAD_CONTEXT__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BAD_CONTEXT
,(m),(d))

	)

1800 #unde‡
ex_CORBA_OBJ_ADAPTER


1801 
	#ex_CORBA_OBJ_ADAPTER
 "IDL:omg.‹g/CORBA/OBJ_ADAPTER:1.0"

	)

1802 #i‡!
deföed
(
_CORBA_OBJ_ADAPTER_deföed
)

1803 
	#_CORBA_OBJ_ADAPTER_deföed
 1

	)

1804 
CORBA_OBJ_ADAPTER_ty≥
 
	tCORBA_OBJ_ADAPTER
;

1805 
	sCORBA_OBJ_ADAPTER_ty≥
 {

1806 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1807 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1810 #i‡!
deföed
(
TC_IMPL_TC_CORBA_OBJ_ADAPTER_0
)

1811 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_0
 'c'

	)

1812 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_1
 'o'

	)

1813 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_2
 'r'

	)

1814 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_3
 'b'

	)

1815 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_4
 'a'

	)

1816 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_5
 '_'

	)

1817 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_6
 'd'

	)

1818 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_7
 'e'

	)

1819 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_8
 'f'

	)

1820 
	#TC_IMPL_TC_CORBA_OBJ_ADAPTER_9
 's'

	)

1821 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1826 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_OBJ_ADAPTER_°ru˘
;

1827 
	#TC_CORBA_OBJ_ADAPTER
 ((
CORBA_Ty≥Code
)&
TC_CORBA_OBJ_ADAPTER_°ru˘
)

	)

1829 
	#CORBA_OBJ_ADAPTER__Æloc
(Ë((
CORBA_OBJ_ADAPTER
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_OBJ_ADAPTER
))

	)

1830 
	#CORBA_OBJ_ADAPTER__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_OBJ_ADAPTER
,(m),(d))

	)

1832 #unde‡
ex_CORBA_DATA_CONVERSION


1833 
	#ex_CORBA_DATA_CONVERSION
 "IDL:omg.‹g/CORBA/DATA_CONVERSION:1.0"

	)

1834 #i‡!
deföed
(
_CORBA_DATA_CONVERSION_deföed
)

1835 
	#_CORBA_DATA_CONVERSION_deföed
 1

	)

1836 
CORBA_DATA_CONVERSION_ty≥
 
	tCORBA_DATA_CONVERSION
;

1837 
	sCORBA_DATA_CONVERSION_ty≥
 {

1838 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1839 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1842 #i‡!
deföed
(
TC_IMPL_TC_CORBA_DATA_CONVERSION_0
)

1843 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_0
 'c'

	)

1844 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_1
 'o'

	)

1845 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_2
 'r'

	)

1846 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_3
 'b'

	)

1847 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_4
 'a'

	)

1848 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_5
 '_'

	)

1849 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_6
 'd'

	)

1850 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_7
 'e'

	)

1851 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_8
 'f'

	)

1852 
	#TC_IMPL_TC_CORBA_DATA_CONVERSION_9
 's'

	)

1853 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1858 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_DATA_CONVERSION_°ru˘
;

1859 
	#TC_CORBA_DATA_CONVERSION
 ((
CORBA_Ty≥Code
)&
TC_CORBA_DATA_CONVERSION_°ru˘
)

	)

1861 
	#CORBA_DATA_CONVERSION__Æloc
(Ë((
CORBA_DATA_CONVERSION
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_DATA_CONVERSION
))

	)

1862 
	#CORBA_DATA_CONVERSION__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_DATA_CONVERSION
,(m),(d))

	)

1864 #unde‡
ex_CORBA_OBJECT_NOT_EXIST


1865 
	#ex_CORBA_OBJECT_NOT_EXIST
 "IDL:omg.‹g/CORBA/OBJECT_NOT_EXIST:1.0"

	)

1866 #i‡!
deföed
(
_CORBA_OBJECT_NOT_EXIST_deföed
)

1867 
	#_CORBA_OBJECT_NOT_EXIST_deföed
 1

	)

1868 
CORBA_OBJECT_NOT_EXIST_ty≥
 
	tCORBA_OBJECT_NOT_EXIST
;

1869 
	sCORBA_OBJECT_NOT_EXIST_ty≥
 {

1870 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1871 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1874 #i‡!
deföed
(
TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_0
)

1875 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_0
 'c'

	)

1876 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_1
 'o'

	)

1877 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_2
 'r'

	)

1878 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_3
 'b'

	)

1879 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_4
 'a'

	)

1880 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_5
 '_'

	)

1881 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_6
 'd'

	)

1882 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_7
 'e'

	)

1883 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_8
 'f'

	)

1884 
	#TC_IMPL_TC_CORBA_OBJECT_NOT_EXIST_9
 's'

	)

1885 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1890 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_OBJECT_NOT_EXIST_°ru˘
;

1891 
	#TC_CORBA_OBJECT_NOT_EXIST
 ((
CORBA_Ty≥Code
)&
TC_CORBA_OBJECT_NOT_EXIST_°ru˘
)

	)

1893 
	#CORBA_OBJECT_NOT_EXIST__Æloc
(Ë((
CORBA_OBJECT_NOT_EXIST
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_OBJECT_NOT_EXIST
))

	)

1894 
	#CORBA_OBJECT_NOT_EXIST__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_OBJECT_NOT_EXIST
,(m),(d))

	)

1896 #unde‡
ex_CORBA_TRANSACTION_REQUIRED


1897 
	#ex_CORBA_TRANSACTION_REQUIRED
 "IDL:omg.‹g/CORBA/TRANSACTION_REQUIRED:1.0"

	)

1898 #i‡!
deföed
(
_CORBA_TRANSACTION_REQUIRED_deföed
)

1899 
	#_CORBA_TRANSACTION_REQUIRED_deföed
 1

	)

1900 
CORBA_TRANSACTION_REQUIRED_ty≥
 
	tCORBA_TRANSACTION_REQUIRED
;

1901 
	sCORBA_TRANSACTION_REQUIRED_ty≥
 {

1902 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1903 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1906 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_0
)

1907 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_0
 'c'

	)

1908 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_1
 'o'

	)

1909 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_2
 'r'

	)

1910 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_3
 'b'

	)

1911 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_4
 'a'

	)

1912 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_5
 '_'

	)

1913 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_6
 'd'

	)

1914 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_7
 'e'

	)

1915 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_8
 'f'

	)

1916 
	#TC_IMPL_TC_CORBA_TRANSACTION_REQUIRED_9
 's'

	)

1917 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1922 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TRANSACTION_REQUIRED_°ru˘
;

1923 
	#TC_CORBA_TRANSACTION_REQUIRED
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TRANSACTION_REQUIRED_°ru˘
)

	)

1925 
	#CORBA_TRANSACTION_REQUIRED__Æloc
(Ë((
CORBA_TRANSACTION_REQUIRED
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_TRANSACTION_REQUIRED
))

	)

1926 
	#CORBA_TRANSACTION_REQUIRED__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_TRANSACTION_REQUIRED
,(m),(d))

	)

1928 #unde‡
ex_CORBA_TRANSACTION_ROLLEDBACK


1929 
	#ex_CORBA_TRANSACTION_ROLLEDBACK
 "IDL:omg.‹g/CORBA/TRANSACTION_ROLLEDBACK:1.0"

	)

1930 #i‡!
deföed
(
_CORBA_TRANSACTION_ROLLEDBACK_deföed
)

1931 
	#_CORBA_TRANSACTION_ROLLEDBACK_deföed
 1

	)

1932 
CORBA_TRANSACTION_ROLLEDBACK_ty≥
 
	tCORBA_TRANSACTION_ROLLEDBACK
;

1933 
	sCORBA_TRANSACTION_ROLLEDBACK_ty≥
 {

1934 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1935 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1938 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_0
)

1939 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_0
 'c'

	)

1940 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_1
 'o'

	)

1941 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_2
 'r'

	)

1942 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_3
 'b'

	)

1943 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_4
 'a'

	)

1944 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_5
 '_'

	)

1945 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_6
 'd'

	)

1946 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_7
 'e'

	)

1947 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_8
 'f'

	)

1948 
	#TC_IMPL_TC_CORBA_TRANSACTION_ROLLEDBACK_9
 's'

	)

1949 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1954 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TRANSACTION_ROLLEDBACK_°ru˘
;

1955 
	#TC_CORBA_TRANSACTION_ROLLEDBACK
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TRANSACTION_ROLLEDBACK_°ru˘
)

	)

1957 
	#CORBA_TRANSACTION_ROLLEDBACK__Æloc
(Ë((
CORBA_TRANSACTION_ROLLEDBACK
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_TRANSACTION_ROLLEDBACK
))

	)

1958 
	#CORBA_TRANSACTION_ROLLEDBACK__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_TRANSACTION_ROLLEDBACK
,(m),(d))

	)

1960 #unde‡
ex_CORBA_INVALID_TRANSACTION


1961 
	#ex_CORBA_INVALID_TRANSACTION
 "IDL:omg.‹g/CORBA/INVALID_TRANSACTION:1.0"

	)

1962 #i‡!
deföed
(
_CORBA_INVALID_TRANSACTION_deföed
)

1963 
	#_CORBA_INVALID_TRANSACTION_deföed
 1

	)

1964 
CORBA_INVALID_TRANSACTION_ty≥
 
	tCORBA_INVALID_TRANSACTION
;

1965 
	sCORBA_INVALID_TRANSACTION_ty≥
 {

1966 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1967 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

1970 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INVALID_TRANSACTION_0
)

1971 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_0
 'c'

	)

1972 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_1
 'o'

	)

1973 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_2
 'r'

	)

1974 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_3
 'b'

	)

1975 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_4
 'a'

	)

1976 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_5
 '_'

	)

1977 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_6
 'd'

	)

1978 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_7
 'e'

	)

1979 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_8
 'f'

	)

1980 
	#TC_IMPL_TC_CORBA_INVALID_TRANSACTION_9
 's'

	)

1981 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


1986 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INVALID_TRANSACTION_°ru˘
;

1987 
	#TC_CORBA_INVALID_TRANSACTION
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INVALID_TRANSACTION_°ru˘
)

	)

1989 
	#CORBA_INVALID_TRANSACTION__Æloc
(Ë((
CORBA_INVALID_TRANSACTION
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INVALID_TRANSACTION
))

	)

1990 
	#CORBA_INVALID_TRANSACTION__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INVALID_TRANSACTION
,(m),(d))

	)

1992 #unde‡
ex_CORBA_INV_POLICY


1993 
	#ex_CORBA_INV_POLICY
 "IDL:omg.‹g/CORBA/INV_POLICY:1.0"

	)

1994 #i‡!
deföed
(
_CORBA_INV_POLICY_deföed
)

1995 
	#_CORBA_INV_POLICY_deföed
 1

	)

1996 
CORBA_INV_POLICY_ty≥
 
	tCORBA_INV_POLICY
;

1997 
	sCORBA_INV_POLICY_ty≥
 {

1998 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

1999 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2002 #i‡!
deföed
(
TC_IMPL_TC_CORBA_INV_POLICY_0
)

2003 
	#TC_IMPL_TC_CORBA_INV_POLICY_0
 'c'

	)

2004 
	#TC_IMPL_TC_CORBA_INV_POLICY_1
 'o'

	)

2005 
	#TC_IMPL_TC_CORBA_INV_POLICY_2
 'r'

	)

2006 
	#TC_IMPL_TC_CORBA_INV_POLICY_3
 'b'

	)

2007 
	#TC_IMPL_TC_CORBA_INV_POLICY_4
 'a'

	)

2008 
	#TC_IMPL_TC_CORBA_INV_POLICY_5
 '_'

	)

2009 
	#TC_IMPL_TC_CORBA_INV_POLICY_6
 'd'

	)

2010 
	#TC_IMPL_TC_CORBA_INV_POLICY_7
 'e'

	)

2011 
	#TC_IMPL_TC_CORBA_INV_POLICY_8
 'f'

	)

2012 
	#TC_IMPL_TC_CORBA_INV_POLICY_9
 's'

	)

2013 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2018 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_INV_POLICY_°ru˘
;

2019 
	#TC_CORBA_INV_POLICY
 ((
CORBA_Ty≥Code
)&
TC_CORBA_INV_POLICY_°ru˘
)

	)

2021 
	#CORBA_INV_POLICY__Æloc
(Ë((
CORBA_INV_POLICY
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_INV_POLICY
))

	)

2022 
	#CORBA_INV_POLICY__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_INV_POLICY
,(m),(d))

	)

2024 #unde‡
ex_CORBA_CODESET_INCOMPATIBLE


2025 
	#ex_CORBA_CODESET_INCOMPATIBLE
 "IDL:omg.‹g/CORBA/CODESET_INCOMPATIBLE:1.0"

	)

2026 #i‡!
deföed
(
_CORBA_CODESET_INCOMPATIBLE_deföed
)

2027 
	#_CORBA_CODESET_INCOMPATIBLE_deföed
 1

	)

2028 
CORBA_CODESET_INCOMPATIBLE_ty≥
 
	tCORBA_CODESET_INCOMPATIBLE
;

2029 
	sCORBA_CODESET_INCOMPATIBLE_ty≥
 {

2030 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

2031 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2034 #i‡!
deföed
(
TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_0
)

2035 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_0
 'c'

	)

2036 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_1
 'o'

	)

2037 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_2
 'r'

	)

2038 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_3
 'b'

	)

2039 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_4
 'a'

	)

2040 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_5
 '_'

	)

2041 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_6
 'd'

	)

2042 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_7
 'e'

	)

2043 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_8
 'f'

	)

2044 
	#TC_IMPL_TC_CORBA_CODESET_INCOMPATIBLE_9
 's'

	)

2045 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2050 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_CODESET_INCOMPATIBLE_°ru˘
;

2051 
	#TC_CORBA_CODESET_INCOMPATIBLE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_CODESET_INCOMPATIBLE_°ru˘
)

	)

2053 
	#CORBA_CODESET_INCOMPATIBLE__Æloc
(Ë((
CORBA_CODESET_INCOMPATIBLE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_CODESET_INCOMPATIBLE
))

	)

2054 
	#CORBA_CODESET_INCOMPATIBLE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_CODESET_INCOMPATIBLE
,(m),(d))

	)

2056 #unde‡
ex_CORBA_REBIND


2057 
	#ex_CORBA_REBIND
 "IDL:omg.‹g/CORBA/REBIND:1.0"

	)

2058 #i‡!
deföed
(
_CORBA_REBIND_deföed
)

2059 
	#_CORBA_REBIND_deföed
 1

	)

2060 
CORBA_REBIND_ty≥
 
	tCORBA_REBIND
;

2061 
	sCORBA_REBIND_ty≥
 {

2062 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

2063 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2066 #i‡!
deföed
(
TC_IMPL_TC_CORBA_REBIND_0
)

2067 
	#TC_IMPL_TC_CORBA_REBIND_0
 'c'

	)

2068 
	#TC_IMPL_TC_CORBA_REBIND_1
 'o'

	)

2069 
	#TC_IMPL_TC_CORBA_REBIND_2
 'r'

	)

2070 
	#TC_IMPL_TC_CORBA_REBIND_3
 'b'

	)

2071 
	#TC_IMPL_TC_CORBA_REBIND_4
 'a'

	)

2072 
	#TC_IMPL_TC_CORBA_REBIND_5
 '_'

	)

2073 
	#TC_IMPL_TC_CORBA_REBIND_6
 'd'

	)

2074 
	#TC_IMPL_TC_CORBA_REBIND_7
 'e'

	)

2075 
	#TC_IMPL_TC_CORBA_REBIND_8
 'f'

	)

2076 
	#TC_IMPL_TC_CORBA_REBIND_9
 's'

	)

2077 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2082 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_REBIND_°ru˘
;

2083 
	#TC_CORBA_REBIND
 ((
CORBA_Ty≥Code
)&
TC_CORBA_REBIND_°ru˘
)

	)

2085 
	#CORBA_REBIND__Æloc
(Ë((
CORBA_REBIND
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_REBIND
))

	)

2086 
	#CORBA_REBIND__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_REBIND
,(m),(d))

	)

2088 #unde‡
ex_CORBA_TIMEOUT


2089 
	#ex_CORBA_TIMEOUT
 "IDL:omg.‹g/CORBA/TIMEOUT:1.0"

	)

2090 #i‡!
deföed
(
_CORBA_TIMEOUT_deföed
)

2091 
	#_CORBA_TIMEOUT_deföed
 1

	)

2092 
CORBA_TIMEOUT_ty≥
 
	tCORBA_TIMEOUT
;

2093 
	sCORBA_TIMEOUT_ty≥
 {

2094 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

2095 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2098 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TIMEOUT_0
)

2099 
	#TC_IMPL_TC_CORBA_TIMEOUT_0
 'c'

	)

2100 
	#TC_IMPL_TC_CORBA_TIMEOUT_1
 'o'

	)

2101 
	#TC_IMPL_TC_CORBA_TIMEOUT_2
 'r'

	)

2102 
	#TC_IMPL_TC_CORBA_TIMEOUT_3
 'b'

	)

2103 
	#TC_IMPL_TC_CORBA_TIMEOUT_4
 'a'

	)

2104 
	#TC_IMPL_TC_CORBA_TIMEOUT_5
 '_'

	)

2105 
	#TC_IMPL_TC_CORBA_TIMEOUT_6
 'd'

	)

2106 
	#TC_IMPL_TC_CORBA_TIMEOUT_7
 'e'

	)

2107 
	#TC_IMPL_TC_CORBA_TIMEOUT_8
 'f'

	)

2108 
	#TC_IMPL_TC_CORBA_TIMEOUT_9
 's'

	)

2109 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2114 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TIMEOUT_°ru˘
;

2115 
	#TC_CORBA_TIMEOUT
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TIMEOUT_°ru˘
)

	)

2117 
	#CORBA_TIMEOUT__Æloc
(Ë((
CORBA_TIMEOUT
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_TIMEOUT
))

	)

2118 
	#CORBA_TIMEOUT__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_TIMEOUT
,(m),(d))

	)

2120 #unde‡
ex_CORBA_TRANSACTION_UNAVAILABLE


2121 
	#ex_CORBA_TRANSACTION_UNAVAILABLE
 "IDL:omg.‹g/CORBA/TRANSACTION_UNAVAILABLE:1.0"

	)

2122 #i‡!
deföed
(
_CORBA_TRANSACTION_UNAVAILABLE_deföed
)

2123 
	#_CORBA_TRANSACTION_UNAVAILABLE_deföed
 1

	)

2124 
CORBA_TRANSACTION_UNAVAILABLE_ty≥
 
	tCORBA_TRANSACTION_UNAVAILABLE
;

2125 
	sCORBA_TRANSACTION_UNAVAILABLE_ty≥
 {

2126 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

2127 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2130 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_0
)

2131 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_0
 'c'

	)

2132 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_1
 'o'

	)

2133 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_2
 'r'

	)

2134 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_3
 'b'

	)

2135 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_4
 'a'

	)

2136 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_5
 '_'

	)

2137 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_6
 'd'

	)

2138 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_7
 'e'

	)

2139 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_8
 'f'

	)

2140 
	#TC_IMPL_TC_CORBA_TRANSACTION_UNAVAILABLE_9
 's'

	)

2141 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2146 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TRANSACTION_UNAVAILABLE_°ru˘
;

2147 
	#TC_CORBA_TRANSACTION_UNAVAILABLE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TRANSACTION_UNAVAILABLE_°ru˘
)

	)

2149 
	#CORBA_TRANSACTION_UNAVAILABLE__Æloc
(Ë((
CORBA_TRANSACTION_UNAVAILABLE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_TRANSACTION_UNAVAILABLE
))

	)

2150 
	#CORBA_TRANSACTION_UNAVAILABLE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_TRANSACTION_UNAVAILABLE
,(m),(d))

	)

2152 #unde‡
ex_CORBA_TRANSACTION_MODE


2153 
	#ex_CORBA_TRANSACTION_MODE
 "IDL:omg.‹g/CORBA/TRANSACTION_MODE:1.0"

	)

2154 #i‡!
deföed
(
_CORBA_TRANSACTION_MODE_deföed
)

2155 
	#_CORBA_TRANSACTION_MODE_deföed
 1

	)

2156 
CORBA_TRANSACTION_MODE_ty≥
 
	tCORBA_TRANSACTION_MODE
;

2157 
	sCORBA_TRANSACTION_MODE_ty≥
 {

2158 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

2159 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2162 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TRANSACTION_MODE_0
)

2163 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_0
 'c'

	)

2164 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_1
 'o'

	)

2165 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_2
 'r'

	)

2166 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_3
 'b'

	)

2167 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_4
 'a'

	)

2168 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_5
 '_'

	)

2169 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_6
 'd'

	)

2170 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_7
 'e'

	)

2171 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_8
 'f'

	)

2172 
	#TC_IMPL_TC_CORBA_TRANSACTION_MODE_9
 's'

	)

2173 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2178 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TRANSACTION_MODE_°ru˘
;

2179 
	#TC_CORBA_TRANSACTION_MODE
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TRANSACTION_MODE_°ru˘
)

	)

2181 
	#CORBA_TRANSACTION_MODE__Æloc
(Ë((
CORBA_TRANSACTION_MODE
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_TRANSACTION_MODE
))

	)

2182 
	#CORBA_TRANSACTION_MODE__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_TRANSACTION_MODE
,(m),(d))

	)

2184 #unde‡
ex_CORBA_BAD_QOS


2185 
	#ex_CORBA_BAD_QOS
 "IDL:omg.‹g/CORBA/BAD_QOS:1.0"

	)

2186 #i‡!
deföed
(
_CORBA_BAD_QOS_deföed
)

2187 
	#_CORBA_BAD_QOS_deföed
 1

	)

2188 
CORBA_BAD_QOS_ty≥
 
	tCORBA_BAD_QOS
;

2189 
	sCORBA_BAD_QOS_ty≥
 {

2190 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

2191 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

2194 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BAD_QOS_0
)

2195 
	#TC_IMPL_TC_CORBA_BAD_QOS_0
 'c'

	)

2196 
	#TC_IMPL_TC_CORBA_BAD_QOS_1
 'o'

	)

2197 
	#TC_IMPL_TC_CORBA_BAD_QOS_2
 'r'

	)

2198 
	#TC_IMPL_TC_CORBA_BAD_QOS_3
 'b'

	)

2199 
	#TC_IMPL_TC_CORBA_BAD_QOS_4
 'a'

	)

2200 
	#TC_IMPL_TC_CORBA_BAD_QOS_5
 '_'

	)

2201 
	#TC_IMPL_TC_CORBA_BAD_QOS_6
 'd'

	)

2202 
	#TC_IMPL_TC_CORBA_BAD_QOS_7
 'e'

	)

2203 
	#TC_IMPL_TC_CORBA_BAD_QOS_8
 'f'

	)

2204 
	#TC_IMPL_TC_CORBA_BAD_QOS_9
 's'

	)

2205 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2210 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BAD_QOS_°ru˘
;

2211 
	#TC_CORBA_BAD_QOS
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BAD_QOS_°ru˘
)

	)

2213 
	#CORBA_BAD_QOS__Æloc
(Ë((
CORBA_BAD_QOS
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BAD_QOS
))

	)

2214 
	#CORBA_BAD_QOS__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BAD_QOS
,(m),(d))

	)

2216 #i‡!
deföed
(
ORBIT_DECL_CORBA_Cuºít
Ë&& !deföed(
_CORBA_Cuºít_deföed
)

2217 
	#ORBIT_DECL_CORBA_Cuºít
 1

	)

2218 
	#_CORBA_Cuºít_deföed
 1

	)

2219 
	#CORBA_Cuºít__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2220 
CORBA_Obje˘
 
	tCORBA_Cuºít
;

2221 
CORBA_unsig√d_l⁄g
 
CORBA_Cuºít__˛assid
;

2222 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Cuºít_0
)

2223 
	#TC_IMPL_TC_CORBA_Cuºít_0
 'c'

	)

2224 
	#TC_IMPL_TC_CORBA_Cuºít_1
 'o'

	)

2225 
	#TC_IMPL_TC_CORBA_Cuºít_2
 'r'

	)

2226 
	#TC_IMPL_TC_CORBA_Cuºít_3
 'b'

	)

2227 
	#TC_IMPL_TC_CORBA_Cuºít_4
 'a'

	)

2228 
	#TC_IMPL_TC_CORBA_Cuºít_5
 '_'

	)

2229 
	#TC_IMPL_TC_CORBA_Cuºít_6
 'd'

	)

2230 
	#TC_IMPL_TC_CORBA_Cuºít_7
 'e'

	)

2231 
	#TC_IMPL_TC_CORBA_Cuºít_8
 'f'

	)

2232 
	#TC_IMPL_TC_CORBA_Cuºít_9
 's'

	)

2233 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2238 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Cuºít_°ru˘
;

2239 
	#TC_CORBA_Cuºít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Cuºít_°ru˘
)

	)

2242 #i‡!
deföed
(
_CORBA_PﬁicyTy≥_deföed
)

2243 
	#_CORBA_PﬁicyTy≥_deföed
 1

	)

2244 
CORBA_unsig√d_l⁄g
 
	tCORBA_PﬁicyTy≥
;

2245 
	#CORBA_PﬁicyTy≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

2246 
	#CORBA_PﬁicyTy≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

2247 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PﬁicyTy≥_0
)

2248 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_0
 'c'

	)

2249 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_1
 'o'

	)

2250 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_2
 'r'

	)

2251 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_3
 'b'

	)

2252 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_4
 'a'

	)

2253 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_5
 '_'

	)

2254 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_6
 'd'

	)

2255 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_7
 'e'

	)

2256 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_8
 'f'

	)

2257 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥_9
 's'

	)

2258 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2263 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PﬁicyTy≥_°ru˘
;

2264 
	#TC_CORBA_PﬁicyTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PﬁicyTy≥_°ru˘
)

	)

2266 
	#CORBA_PﬁicyTy≥__Æloc
(Ë((
CORBA_PﬁicyTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

2267 
	#CORBA_PﬁicyTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

2269 #i‡!
deföed
(
ORBIT_DECL_CORBA_Pﬁicy
Ë&& !deföed(
_CORBA_Pﬁicy_deföed
)

2270 
	#ORBIT_DECL_CORBA_Pﬁicy
 1

	)

2271 
	#_CORBA_Pﬁicy_deföed
 1

	)

2272 
	#CORBA_Pﬁicy__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2273 
CORBA_Obje˘
 
	tCORBA_Pﬁicy
;

2274 
CORBA_unsig√d_l⁄g
 
CORBA_Pﬁicy__˛assid
;

2275 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Pﬁicy_0
)

2276 
	#TC_IMPL_TC_CORBA_Pﬁicy_0
 'c'

	)

2277 
	#TC_IMPL_TC_CORBA_Pﬁicy_1
 'o'

	)

2278 
	#TC_IMPL_TC_CORBA_Pﬁicy_2
 'r'

	)

2279 
	#TC_IMPL_TC_CORBA_Pﬁicy_3
 'b'

	)

2280 
	#TC_IMPL_TC_CORBA_Pﬁicy_4
 'a'

	)

2281 
	#TC_IMPL_TC_CORBA_Pﬁicy_5
 '_'

	)

2282 
	#TC_IMPL_TC_CORBA_Pﬁicy_6
 'd'

	)

2283 
	#TC_IMPL_TC_CORBA_Pﬁicy_7
 'e'

	)

2284 
	#TC_IMPL_TC_CORBA_Pﬁicy_8
 'f'

	)

2285 
	#TC_IMPL_TC_CORBA_Pﬁicy_9
 's'

	)

2286 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2291 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Pﬁicy_°ru˘
;

2292 
	#TC_CORBA_Pﬁicy
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Pﬁicy_°ru˘
)

	)

2295 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

2296 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

2297 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

2298 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

2299 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

2300 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

2301 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

2302 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

2303 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

2304 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

2305 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

2306 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

2307 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

2308 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

2309 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

2311 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

2312 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

2313 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

2314 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

2315 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

2316 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

2317 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

2318 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

2319 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

2320 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

2321 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

2322 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2327 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

2328 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

2330 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

2331 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

2332 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

2333 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

2335 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Pﬁicy
)

2336 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Pﬁicy
 1

	)

2337 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_0
 'c'

	)

2338 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_1
 'o'

	)

2339 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_2
 'r'

	)

2340 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_3
 'b'

	)

2341 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_4
 'a'

	)

2342 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_5
 '_'

	)

2343 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_6
 'd'

	)

2344 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_7
 'e'

	)

2345 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_8
 'f'

	)

2346 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Pﬁicy_9
 's'

	)

2347 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Pﬁicy_deföed
)

2348 
	#_CORBA_£quí˚_CORBA_Pﬁicy_deföed
 1

	)

2349 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_Pﬁicy
;

2351 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_0
)

2352 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_0
 'c'

	)

2353 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_1
 'o'

	)

2354 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_2
 'r'

	)

2355 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_3
 'b'

	)

2356 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_4
 'a'

	)

2357 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_5
 '_'

	)

2358 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_6
 'd'

	)

2359 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_7
 'e'

	)

2360 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_8
 'f'

	)

2361 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Pﬁicy_9
 's'

	)

2362 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2367 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Pﬁicy_°ru˘
;

2368 
	#TC_CORBA_£quí˚_CORBA_Pﬁicy
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Pﬁicy_°ru˘
)

	)

2370 
	#CORBA_£quí˚_CORBA_Pﬁicy__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

2371 
	#CORBA_£quí˚_CORBA_Pﬁicy__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

2372 
	#CORBA_£quí˚_CORBA_Pﬁicy_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

2373 
	#CORBA_£quí˚_CORBA_Pﬁicy_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

2374 
	#CORBA_£quí˚_CORBA_Pﬁicy_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

2376 #i‡!
deföed
(
_CORBA_PﬁicyLi°_deföed
)

2377 
	#_CORBA_PﬁicyLi°_deföed
 1

	)

2378 
CORBA_£quí˚_CORBA_Pﬁicy
 
	tCORBA_PﬁicyLi°
;

2379 
	#CORBA_PﬁicyLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Pﬁicy_m¨shÆ
((x),(y),(z))

	)

2380 
	#CORBA_PﬁicyLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Pﬁicy_dem¨shÆ
((x),(y),(z),(i))

	)

2381 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PﬁicyLi°_0
)

2382 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_0
 'c'

	)

2383 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_1
 'o'

	)

2384 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_2
 'r'

	)

2385 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_3
 'b'

	)

2386 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_4
 'a'

	)

2387 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_5
 '_'

	)

2388 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_6
 'd'

	)

2389 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_7
 'e'

	)

2390 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_8
 'f'

	)

2391 
	#TC_IMPL_TC_CORBA_PﬁicyLi°_9
 's'

	)

2392 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2397 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PﬁicyLi°_°ru˘
;

2398 
	#TC_CORBA_PﬁicyLi°
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PﬁicyLi°_°ru˘
)

	)

2400 
	#CORBA_PﬁicyLi°__Æloc
(Ë((
CORBA_PﬁicyLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Pﬁicy
))

	)

2401 
	#CORBA_PﬁicyLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Pﬁicy
,(m),(d))

	)

2402 
	#CORBA_PﬁicyLi°_Ælocbuf
(
l
Ë((
CORBA_Pﬁicy
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Pﬁicy
, (l)))

	)

2404 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
)

2405 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 1

	)

2406 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'c'

	)

2407 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

2408 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'r'

	)

2409 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 'b'

	)

2410 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'a'

	)

2411 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 '_'

	)

2412 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'd'

	)

2413 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 'e'

	)

2414 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_8
 'f'

	)

2415 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_9
 's'

	)

2416 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
)

2417 
	#_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
 1

	)

2418 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; CORBA_unsig√d_l⁄g* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_l⁄g
;

2420 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
)

2421 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'c'

	)

2422 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

2423 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'r'

	)

2424 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 'b'

	)

2425 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'a'

	)

2426 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 '_'

	)

2427 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'd'

	)

2428 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 'e'

	)

2429 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_8
 'f'

	)

2430 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_9
 's'

	)

2431 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2436 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
;

2437 
	#TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
)

	)

2439 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
))

	)

2440 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
,(m),(d))

	)

2441 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

2442 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

2444 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_PﬁicyTy≥
)

2445 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_PﬁicyTy≥
 1

	)

2446 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_0
 'c'

	)

2447 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_1
 'o'

	)

2448 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_2
 'r'

	)

2449 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_3
 'b'

	)

2450 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_4
 'a'

	)

2451 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_5
 '_'

	)

2452 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_6
 'd'

	)

2453 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_7
 'e'

	)

2454 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_8
 'f'

	)

2455 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_PﬁicyTy≥_9
 's'

	)

2456 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_PﬁicyTy≥_deföed
)

2457 
	#_CORBA_£quí˚_CORBA_PﬁicyTy≥_deföed
 1

	)

2458 
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 
	tCORBA_£quí˚_CORBA_PﬁicyTy≥
;

2460 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_0
)

2461 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_0
 'c'

	)

2462 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_1
 'o'

	)

2463 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_2
 'r'

	)

2464 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_3
 'b'

	)

2465 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_4
 'a'

	)

2466 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_5
 '_'

	)

2467 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_6
 'd'

	)

2468 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_7
 'e'

	)

2469 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_8
 'f'

	)

2470 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_9
 's'

	)

2471 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2476 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_°ru˘
;

2477 
	#TC_CORBA_£quí˚_CORBA_PﬁicyTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_PﬁicyTy≥_°ru˘
)

	)

2479 
	#CORBA_£quí˚_CORBA_PﬁicyTy≥__Æloc
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc


	)

2480 
	#CORBA_£quí˚_CORBA_PﬁicyTy≥__‰ìkids
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids


	)

2481 
	#CORBA_£quí˚_CORBA_PﬁicyTy≥_Ælocbuf
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf


	)

2482 
	#CORBA_£quí˚_CORBA_PﬁicyTy≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

2483 
	#CORBA_£quí˚_CORBA_PﬁicyTy≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

2485 #i‡!
deföed
(
_CORBA_PﬁicyTy≥Seq_deföed
)

2486 
	#_CORBA_PﬁicyTy≥Seq_deföed
 1

	)

2487 
CORBA_£quí˚_CORBA_PﬁicyTy≥
 
	tCORBA_PﬁicyTy≥Seq
;

2488 
	#CORBA_PﬁicyTy≥Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_PﬁicyTy≥_m¨shÆ
((x),(y),(z))

	)

2489 
	#CORBA_PﬁicyTy≥Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_PﬁicyTy≥_dem¨shÆ
((x),(y),(z),(i))

	)

2490 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_0
)

2491 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_0
 'c'

	)

2492 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_1
 'o'

	)

2493 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_2
 'r'

	)

2494 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_3
 'b'

	)

2495 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_4
 'a'

	)

2496 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_5
 '_'

	)

2497 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_6
 'd'

	)

2498 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_7
 'e'

	)

2499 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_8
 'f'

	)

2500 
	#TC_IMPL_TC_CORBA_PﬁicyTy≥Seq_9
 's'

	)

2501 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2506 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PﬁicyTy≥Seq_°ru˘
;

2507 
	#TC_CORBA_PﬁicyTy≥Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PﬁicyTy≥Seq_°ru˘
)

	)

2509 
	#CORBA_PﬁicyTy≥Seq__Æloc
(Ë((
CORBA_PﬁicyTy≥Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_PﬁicyTy≥
))

	)

2510 
	#CORBA_PﬁicyTy≥Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_PﬁicyTy≥
,(m),(d))

	)

2511 
	#CORBA_PﬁicyTy≥Seq_Ælocbuf
(
l
Ë((
CORBA_PﬁicyTy≥
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_PﬁicyTy≥
, (l)))

	)

2513 #unde‡
ex_CORBA_InvÆidPﬁicõs


2514 
	#ex_CORBA_InvÆidPﬁicõs
 "IDL:omg.‹g/CORBA/InvÆidPﬁicõs:1.0"

	)

2515 #i‡!
deföed
(
_CORBA_InvÆidPﬁicõs_deföed
)

2516 
	#_CORBA_InvÆidPﬁicõs_deföed
 1

	)

2517 
CORBA_InvÆidPﬁicõs_ty≥
 
	tCORBA_InvÆidPﬁicõs
;

2518 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_sh‹t
)

2519 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_sh‹t
 1

	)

2520 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_0
 'c'

	)

2521 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_1
 'o'

	)

2522 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_2
 'r'

	)

2523 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_3
 'b'

	)

2524 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_4
 'a'

	)

2525 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_5
 '_'

	)

2526 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_6
 'd'

	)

2527 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_7
 'e'

	)

2528 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_8
 'f'

	)

2529 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_9
 's'

	)

2530 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_sh‹t_deföed
)

2531 
	#_CORBA_£quí˚_CORBA_unsig√d_sh‹t_deföed
 1

	)

2532 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_unsig√d_sh‹t
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_sh‹t
;

2534 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_0
)

2535 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_0
 'c'

	)

2536 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_1
 'o'

	)

2537 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_2
 'r'

	)

2538 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_3
 'b'

	)

2539 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_4
 'a'

	)

2540 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_5
 '_'

	)

2541 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_6
 'd'

	)

2542 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_7
 'e'

	)

2543 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_8
 'f'

	)

2544 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_9
 's'

	)

2545 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2550 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_°ru˘
;

2551 
	#TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_°ru˘
)

	)

2553 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_sh‹t
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
))

	)

2554 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
,(m),(d))

	)

2555 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t_Ælocbuf
(
l
Ë((
CORBA_unsig√d_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
, (l)))

	)

2556 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t_Ælocbuf
(
l
Ë((
CORBA_unsig√d_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
, (l)))

	)

2558 
	sCORBA_InvÆidPﬁicõs_ty≥
 {

2559 
CORBA_£quí˚_CORBA_unsig√d_sh‹t
 
	gödi˚s
;

2562 #i‡!
deföed
(
TC_IMPL_TC_CORBA_InvÆidPﬁicõs_0
)

2563 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_0
 'c'

	)

2564 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_1
 'o'

	)

2565 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_2
 'r'

	)

2566 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_3
 'b'

	)

2567 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_4
 'a'

	)

2568 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_5
 '_'

	)

2569 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_6
 'd'

	)

2570 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_7
 'e'

	)

2571 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_8
 'f'

	)

2572 
	#TC_IMPL_TC_CORBA_InvÆidPﬁicõs_9
 's'

	)

2573 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2578 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_InvÆidPﬁicõs_°ru˘
;

2579 
	#TC_CORBA_InvÆidPﬁicõs
 ((
CORBA_Ty≥Code
)&
TC_CORBA_InvÆidPﬁicõs_°ru˘
)

	)

2581 
	#CORBA_InvÆidPﬁicõs__Æloc
(Ë((
CORBA_InvÆidPﬁicõs
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_InvÆidPﬁicõs
))

	)

2582 
	#CORBA_InvÆidPﬁicõs__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_InvÆidPﬁicõs
,(m),(d))

	)

2584 #i‡!
deföed
(
_CORBA_PﬁicyEº‹Code_deföed
)

2585 
	#_CORBA_PﬁicyEº‹Code_deföed
 1

	)

2586 
CORBA_sh‹t
 
	tCORBA_PﬁicyEº‹Code
;

2587 
	#CORBA_PﬁicyEº‹Code_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

2588 
	#CORBA_PﬁicyEº‹Code_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

2589 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PﬁicyEº‹Code_0
)

2590 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_0
 'c'

	)

2591 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_1
 'o'

	)

2592 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_2
 'r'

	)

2593 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_3
 'b'

	)

2594 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_4
 'a'

	)

2595 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_5
 '_'

	)

2596 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_6
 'd'

	)

2597 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_7
 'e'

	)

2598 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_8
 'f'

	)

2599 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹Code_9
 's'

	)

2600 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2605 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PﬁicyEº‹Code_°ru˘
;

2606 
	#TC_CORBA_PﬁicyEº‹Code
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PﬁicyEº‹Code_°ru˘
)

	)

2608 
	#CORBA_PﬁicyEº‹Code__Æloc
(Ë((
CORBA_PﬁicyEº‹Code
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_sh‹t
))

	)

2609 
	#CORBA_PﬁicyEº‹Code__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_sh‹t
,(m),(d))

	)

2611 #unde‡
ex_CORBA_PﬁicyEº‹


2612 
	#ex_CORBA_PﬁicyEº‹
 "IDL:omg.‹g/CORBA/PﬁicyEº‹:1.0"

	)

2613 #i‡!
deföed
(
_CORBA_PﬁicyEº‹_deföed
)

2614 
	#_CORBA_PﬁicyEº‹_deföed
 1

	)

2615 
CORBA_PﬁicyEº‹_ty≥
 
	tCORBA_PﬁicyEº‹
;

2616 
	sCORBA_PﬁicyEº‹_ty≥
 {

2617 
CORBA_PﬁicyEº‹Code
 
	gªas⁄
;

2620 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PﬁicyEº‹_0
)

2621 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_0
 'c'

	)

2622 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_1
 'o'

	)

2623 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_2
 'r'

	)

2624 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_3
 'b'

	)

2625 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_4
 'a'

	)

2626 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_5
 '_'

	)

2627 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_6
 'd'

	)

2628 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_7
 'e'

	)

2629 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_8
 'f'

	)

2630 
	#TC_IMPL_TC_CORBA_PﬁicyEº‹_9
 's'

	)

2631 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2636 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PﬁicyEº‹_°ru˘
;

2637 
	#TC_CORBA_PﬁicyEº‹
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PﬁicyEº‹_°ru˘
)

	)

2639 
	#CORBA_PﬁicyEº‹__Æloc
(Ë((
CORBA_PﬁicyEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_PﬁicyEº‹
))

	)

2640 
	#CORBA_PﬁicyEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_PﬁicyEº‹
,(m),(d))

	)

2642 #i‚de‡
CORBA_BAD_POLICY


2643 
	#CORBA_BAD_POLICY
 0

	)

2646 #i‚de‡
CORBA_UNSUPPORTED_POLICY


2647 
	#CORBA_UNSUPPORTED_POLICY
 1

	)

2650 #i‚de‡
CORBA_BAD_POLICY_TYPE


2651 
	#CORBA_BAD_POLICY_TYPE
 2

	)

2654 #i‚de‡
CORBA_BAD_POLICY_VALUE


2655 
	#CORBA_BAD_POLICY_VALUE
 3

	)

2658 #i‚de‡
CORBA_UNSUPPORTED_POLICY_VALUE


2659 
	#CORBA_UNSUPPORTED_POLICY_VALUE
 4

	)

2662 #i‡!
deföed
(
ORBIT_DECL_CORBA_DomaöM™agî
Ë&& !deföed(
_CORBA_DomaöM™agî_deföed
)

2663 
	#ORBIT_DECL_CORBA_DomaöM™agî
 1

	)

2664 
	#_CORBA_DomaöM™agî_deföed
 1

	)

2665 
	#CORBA_DomaöM™agî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2666 
CORBA_Obje˘
 
	tCORBA_DomaöM™agî
;

2667 
CORBA_unsig√d_l⁄g
 
CORBA_DomaöM™agî__˛assid
;

2668 #i‡!
deföed
(
TC_IMPL_TC_CORBA_DomaöM™agî_0
)

2669 
	#TC_IMPL_TC_CORBA_DomaöM™agî_0
 'c'

	)

2670 
	#TC_IMPL_TC_CORBA_DomaöM™agî_1
 'o'

	)

2671 
	#TC_IMPL_TC_CORBA_DomaöM™agî_2
 'r'

	)

2672 
	#TC_IMPL_TC_CORBA_DomaöM™agî_3
 'b'

	)

2673 
	#TC_IMPL_TC_CORBA_DomaöM™agî_4
 'a'

	)

2674 
	#TC_IMPL_TC_CORBA_DomaöM™agî_5
 '_'

	)

2675 
	#TC_IMPL_TC_CORBA_DomaöM™agî_6
 'd'

	)

2676 
	#TC_IMPL_TC_CORBA_DomaöM™agî_7
 'e'

	)

2677 
	#TC_IMPL_TC_CORBA_DomaöM™agî_8
 'f'

	)

2678 
	#TC_IMPL_TC_CORBA_DomaöM™agî_9
 's'

	)

2679 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2684 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_DomaöM™agî_°ru˘
;

2685 
	#TC_CORBA_DomaöM™agî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_DomaöM™agî_°ru˘
)

	)

2688 #i‚de‡
CORBA_SecC⁄°ru˘i⁄


2689 
	#CORBA_SecC⁄°ru˘i⁄
 11U

	)

2692 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄°ru˘i⁄Pﬁicy
Ë&& !deföed(
_CORBA_C⁄°ru˘i⁄Pﬁicy_deföed
)

2693 
	#ORBIT_DECL_CORBA_C⁄°ru˘i⁄Pﬁicy
 1

	)

2694 
	#_CORBA_C⁄°ru˘i⁄Pﬁicy_deföed
 1

	)

2695 
	#CORBA_C⁄°ru˘i⁄Pﬁicy__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2696 
CORBA_Obje˘
 
	tCORBA_C⁄°ru˘i⁄Pﬁicy
;

2697 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄°ru˘i⁄Pﬁicy__˛assid
;

2698 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_0
)

2699 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_0
 'c'

	)

2700 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_1
 'o'

	)

2701 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_2
 'r'

	)

2702 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_3
 'b'

	)

2703 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_4
 'a'

	)

2704 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_5
 '_'

	)

2705 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_6
 'd'

	)

2706 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_7
 'e'

	)

2707 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_8
 'f'

	)

2708 
	#TC_IMPL_TC_CORBA_C⁄°ru˘i⁄Pﬁicy_9
 's'

	)

2709 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2714 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄°ru˘i⁄Pﬁicy_°ru˘
;

2715 
	#TC_CORBA_C⁄°ru˘i⁄Pﬁicy
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄°ru˘i⁄Pﬁicy_°ru˘
)

	)

2718 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

2719 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

2720 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

2721 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

2722 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

2723 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

2724 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

2725 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

2726 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

2727 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

2728 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

2729 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

2730 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

2731 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

2732 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

2734 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

2735 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

2736 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

2737 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

2738 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

2739 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

2740 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

2741 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

2742 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

2743 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

2744 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

2745 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2750 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

2751 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

2753 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

2754 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

2755 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

2756 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

2758 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_DomaöM™agî
)

2759 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_DomaöM™agî
 1

	)

2760 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_0
 'c'

	)

2761 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_1
 'o'

	)

2762 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_2
 'r'

	)

2763 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_3
 'b'

	)

2764 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_4
 'a'

	)

2765 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_5
 '_'

	)

2766 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_6
 'd'

	)

2767 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_7
 'e'

	)

2768 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_8
 'f'

	)

2769 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_DomaöM™agî_9
 's'

	)

2770 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_DomaöM™agî_deföed
)

2771 
	#_CORBA_£quí˚_CORBA_DomaöM™agî_deföed
 1

	)

2772 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_DomaöM™agî
;

2774 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_0
)

2775 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_0
 'c'

	)

2776 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_1
 'o'

	)

2777 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_2
 'r'

	)

2778 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_3
 'b'

	)

2779 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_4
 'a'

	)

2780 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_5
 '_'

	)

2781 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_6
 'd'

	)

2782 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_7
 'e'

	)

2783 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_8
 'f'

	)

2784 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_DomaöM™agî_9
 's'

	)

2785 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2790 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_DomaöM™agî_°ru˘
;

2791 
	#TC_CORBA_£quí˚_CORBA_DomaöM™agî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_DomaöM™agî_°ru˘
)

	)

2793 
	#CORBA_£quí˚_CORBA_DomaöM™agî__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

2794 
	#CORBA_£quí˚_CORBA_DomaöM™agî__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

2795 
	#CORBA_£quí˚_CORBA_DomaöM™agî_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

2796 
	#CORBA_£quí˚_CORBA_DomaöM™agî_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

2797 
	#CORBA_£quí˚_CORBA_DomaöM™agî_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

2799 #i‡!
deföed
(
_CORBA_DomaöM™agîsLi°_deföed
)

2800 
	#_CORBA_DomaöM™agîsLi°_deföed
 1

	)

2801 
CORBA_£quí˚_CORBA_DomaöM™agî
 
	tCORBA_DomaöM™agîsLi°
;

2802 
	#CORBA_DomaöM™agîsLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_DomaöM™agî_m¨shÆ
((x),(y),(z))

	)

2803 
	#CORBA_DomaöM™agîsLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_DomaöM™agî_dem¨shÆ
((x),(y),(z),(i))

	)

2804 #i‡!
deföed
(
TC_IMPL_TC_CORBA_DomaöM™agîsLi°_0
)

2805 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_0
 'c'

	)

2806 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_1
 'o'

	)

2807 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_2
 'r'

	)

2808 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_3
 'b'

	)

2809 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_4
 'a'

	)

2810 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_5
 '_'

	)

2811 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_6
 'd'

	)

2812 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_7
 'e'

	)

2813 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_8
 'f'

	)

2814 
	#TC_IMPL_TC_CORBA_DomaöM™agîsLi°_9
 's'

	)

2815 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2820 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_DomaöM™agîsLi°_°ru˘
;

2821 
	#TC_CORBA_DomaöM™agîsLi°
 ((
CORBA_Ty≥Code
)&
TC_CORBA_DomaöM™agîsLi°_°ru˘
)

	)

2823 
	#CORBA_DomaöM™agîsLi°__Æloc
(Ë((
CORBA_DomaöM™agîsLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_DomaöM™agî
))

	)

2824 
	#CORBA_DomaöM™agîsLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_DomaöM™agî
,(m),(d))

	)

2825 
	#CORBA_DomaöM™agîsLi°_Ælocbuf
(
l
Ë((
CORBA_DomaöM™agî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_DomaöM™agî
, (l)))

	)

2827 #i‡!
deföed
(
_CORBA_Sc›edName_deföed
)

2828 
	#_CORBA_Sc›edName_deföed
 1

	)

2829 
CORBA_°rög
 
	tCORBA_Sc›edName
;

2830 
	#CORBA_Sc›edName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2831 
	#CORBA_Sc›edName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2832 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sc›edName_0
)

2833 
	#TC_IMPL_TC_CORBA_Sc›edName_0
 'c'

	)

2834 
	#TC_IMPL_TC_CORBA_Sc›edName_1
 'o'

	)

2835 
	#TC_IMPL_TC_CORBA_Sc›edName_2
 'r'

	)

2836 
	#TC_IMPL_TC_CORBA_Sc›edName_3
 'b'

	)

2837 
	#TC_IMPL_TC_CORBA_Sc›edName_4
 'a'

	)

2838 
	#TC_IMPL_TC_CORBA_Sc›edName_5
 '_'

	)

2839 
	#TC_IMPL_TC_CORBA_Sc›edName_6
 'd'

	)

2840 
	#TC_IMPL_TC_CORBA_Sc›edName_7
 'e'

	)

2841 
	#TC_IMPL_TC_CORBA_Sc›edName_8
 'f'

	)

2842 
	#TC_IMPL_TC_CORBA_Sc›edName_9
 's'

	)

2843 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2848 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sc›edName_°ru˘
;

2849 
	#TC_CORBA_Sc›edName
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sc›edName_°ru˘
)

	)

2851 
	#CORBA_Sc›edName__Æloc
(Ë((
CORBA_Sc›edName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

2852 
	#CORBA_Sc›edName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

2854 #i‡!
deföed
(
_CORBA_Rïosô‹yId_deföed
)

2855 
	#_CORBA_Rïosô‹yId_deföed
 1

	)

2856 
CORBA_°rög
 
	tCORBA_Rïosô‹yId
;

2857 
	#CORBA_Rïosô‹yId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2858 
	#CORBA_Rïosô‹yId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2859 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Rïosô‹yId_0
)

2860 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_0
 'c'

	)

2861 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_1
 'o'

	)

2862 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_2
 'r'

	)

2863 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_3
 'b'

	)

2864 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_4
 'a'

	)

2865 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_5
 '_'

	)

2866 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_6
 'd'

	)

2867 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_7
 'e'

	)

2868 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_8
 'f'

	)

2869 
	#TC_IMPL_TC_CORBA_Rïosô‹yId_9
 's'

	)

2870 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2875 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Rïosô‹yId_°ru˘
;

2876 
	#TC_CORBA_Rïosô‹yId
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Rïosô‹yId_°ru˘
)

	)

2878 
	#CORBA_Rïosô‹yId__Æloc
(Ë((
CORBA_Rïosô‹yId
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

2879 
	#CORBA_Rïosô‹yId__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

2881 #i‡!
deföed
(
_CORBA_Deföôi⁄Köd_deföed
)

2882 
	#_CORBA_Deföôi⁄Köd_deföed
 1

	)

2884 
	gCORBA_dk_n⁄e
,

2885 
	gCORBA_dk_Æl
,

2886 
	gCORBA_dk_Aâribuã
,

2887 
	gCORBA_dk_C⁄°™t
,

2888 
	gCORBA_dk_Ex˚±i⁄
,

2889 
	gCORBA_dk_I¡îÁ˚
,

2890 
	gCORBA_dk_ModuÀ
,

2891 
	gCORBA_dk_O≥øti⁄
,

2892 
	gCORBA_dk_Ty≥def
,

2893 
	gCORBA_dk_Alüs
,

2894 
	gCORBA_dk_Såu˘
,

2895 
	gCORBA_dk_Uni⁄
,

2896 
	gCORBA_dk_Enum
,

2897 
	gCORBA_dk_Primôive
,

2898 
	gCORBA_dk_Såög
,

2899 
	gCORBA_dk_Sequí˚
,

2900 
	gCORBA_dk_Aºay
,

2901 
	gCORBA_dk_Rïosô‹y
,

2902 
	gCORBA_dk_W°rög
,

2903 
	gCORBA_dk_Fixed
,

2904 
	gCORBA_dk_VÆue
,

2905 
	gCORBA_dk_VÆueBox
,

2906 
	gCORBA_dk_VÆueMembî
,

2907 
	gCORBA_dk_N©ive
,

2908 
	gCORBA_dk_Ab°ø˘I¡îÁ˚
,

2909 
	gCORBA_dk_LoˇlI¡îÁ˚
,

2910 
	gCORBA_dk_Comp⁄ít
,

2911 
	gCORBA_dk_Home
,

2912 
	gCORBA_dk_Fa˘‹y
,

2913 
	gCORBA_dk_Födî
,

2914 
	gCORBA_dk_Emôs
,

2915 
	gCORBA_dk_Publishes
,

2916 
	gCORBA_dk_C⁄sumes
,

2917 
	gCORBA_dk_Provides
,

2918 
	gCORBA_dk_U£s
,

2919 
	gCORBA_dk_Evít


2920 } 
	tCORBA_Deföôi⁄Köd
;

2921 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Deföôi⁄Köd_0
)

2922 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_0
 'c'

	)

2923 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_1
 'o'

	)

2924 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_2
 'r'

	)

2925 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_3
 'b'

	)

2926 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_4
 'a'

	)

2927 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_5
 '_'

	)

2928 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_6
 'd'

	)

2929 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_7
 'e'

	)

2930 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_8
 'f'

	)

2931 
	#TC_IMPL_TC_CORBA_Deföôi⁄Köd_9
 's'

	)

2932 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2937 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Deföôi⁄Köd_°ru˘
;

2938 
	#TC_CORBA_Deföôi⁄Köd
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Deföôi⁄Köd_°ru˘
)

	)

2941 #i‡!
deföed
(
ORBIT_DECL_CORBA_IRObje˘
Ë&& !deföed(
_CORBA_IRObje˘_deföed
)

2942 
	#ORBIT_DECL_CORBA_IRObje˘
 1

	)

2943 
	#_CORBA_IRObje˘_deföed
 1

	)

2944 
	#CORBA_IRObje˘__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2945 
CORBA_Obje˘
 
	tCORBA_IRObje˘
;

2946 
CORBA_unsig√d_l⁄g
 
CORBA_IRObje˘__˛assid
;

2947 #i‡!
deföed
(
TC_IMPL_TC_CORBA_IRObje˘_0
)

2948 
	#TC_IMPL_TC_CORBA_IRObje˘_0
 'c'

	)

2949 
	#TC_IMPL_TC_CORBA_IRObje˘_1
 'o'

	)

2950 
	#TC_IMPL_TC_CORBA_IRObje˘_2
 'r'

	)

2951 
	#TC_IMPL_TC_CORBA_IRObje˘_3
 'b'

	)

2952 
	#TC_IMPL_TC_CORBA_IRObje˘_4
 'a'

	)

2953 
	#TC_IMPL_TC_CORBA_IRObje˘_5
 '_'

	)

2954 
	#TC_IMPL_TC_CORBA_IRObje˘_6
 'd'

	)

2955 
	#TC_IMPL_TC_CORBA_IRObje˘_7
 'e'

	)

2956 
	#TC_IMPL_TC_CORBA_IRObje˘_8
 'f'

	)

2957 
	#TC_IMPL_TC_CORBA_IRObje˘_9
 's'

	)

2958 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2963 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_IRObje˘_°ru˘
;

2964 
	#TC_CORBA_IRObje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_IRObje˘_°ru˘
)

	)

2967 #i‡!
deföed
(
_CORBA_Vîsi⁄S≥c_deföed
)

2968 
	#_CORBA_Vîsi⁄S≥c_deföed
 1

	)

2969 
CORBA_°rög
 
	tCORBA_Vîsi⁄S≥c
;

2970 
	#CORBA_Vîsi⁄S≥c_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

2971 
	#CORBA_Vîsi⁄S≥c_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

2972 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Vîsi⁄S≥c_0
)

2973 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_0
 'c'

	)

2974 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_1
 'o'

	)

2975 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_2
 'r'

	)

2976 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_3
 'b'

	)

2977 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_4
 'a'

	)

2978 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_5
 '_'

	)

2979 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_6
 'd'

	)

2980 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_7
 'e'

	)

2981 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_8
 'f'

	)

2982 
	#TC_IMPL_TC_CORBA_Vîsi⁄S≥c_9
 's'

	)

2983 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


2988 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Vîsi⁄S≥c_°ru˘
;

2989 
	#TC_CORBA_Vîsi⁄S≥c
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Vîsi⁄S≥c_°ru˘
)

	)

2991 
	#CORBA_Vîsi⁄S≥c__Æloc
(Ë((
CORBA_Vîsi⁄S≥c
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

2992 
	#CORBA_Vîsi⁄S≥c__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

2994 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄èöed
Ë&& !deföed(
_CORBA_C⁄èöed_deföed
)

2995 
	#ORBIT_DECL_CORBA_C⁄èöed
 1

	)

2996 
	#_CORBA_C⁄èöed_deföed
 1

	)

2997 
	#CORBA_C⁄èöed__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

2998 
CORBA_Obje˘
 
	tCORBA_C⁄èöed
;

2999 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄èöed__˛assid
;

3000 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöed_0
)

3001 
	#TC_IMPL_TC_CORBA_C⁄èöed_0
 'c'

	)

3002 
	#TC_IMPL_TC_CORBA_C⁄èöed_1
 'o'

	)

3003 
	#TC_IMPL_TC_CORBA_C⁄èöed_2
 'r'

	)

3004 
	#TC_IMPL_TC_CORBA_C⁄èöed_3
 'b'

	)

3005 
	#TC_IMPL_TC_CORBA_C⁄èöed_4
 'a'

	)

3006 
	#TC_IMPL_TC_CORBA_C⁄èöed_5
 '_'

	)

3007 
	#TC_IMPL_TC_CORBA_C⁄èöed_6
 'd'

	)

3008 
	#TC_IMPL_TC_CORBA_C⁄èöed_7
 'e'

	)

3009 
	#TC_IMPL_TC_CORBA_C⁄èöed_8
 'f'

	)

3010 
	#TC_IMPL_TC_CORBA_C⁄èöed_9
 's'

	)

3011 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3016 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöed_°ru˘
;

3017 
	#TC_CORBA_C⁄èöed
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöed_°ru˘
)

	)

3020 #i‡!
deföed
(
_CORBA_C⁄èöed_Des¸ùti⁄_deföed
)

3021 
	#_CORBA_C⁄èöed_Des¸ùti⁄_deföed
 1

	)

3022 
CORBA_C⁄èöed_Des¸ùti⁄_ty≥
 
	tCORBA_C⁄èöed_Des¸ùti⁄
;

3023 
	sCORBA_C⁄èöed_Des¸ùti⁄_ty≥
 {

3024 
CORBA_Deföôi⁄Köd
 
	gköd
;

3025 
CORBA_™y
 
	gvÆue
;

3028 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_0
)

3029 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_0
 'c'

	)

3030 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_1
 'o'

	)

3031 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_2
 'r'

	)

3032 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_3
 'b'

	)

3033 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_4
 'a'

	)

3034 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_5
 '_'

	)

3035 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_6
 'd'

	)

3036 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_7
 'e'

	)

3037 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_8
 'f'

	)

3038 
	#TC_IMPL_TC_CORBA_C⁄èöed_Des¸ùti⁄_9
 's'

	)

3039 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3044 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöed_Des¸ùti⁄_°ru˘
;

3045 
	#TC_CORBA_C⁄èöed_Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöed_Des¸ùti⁄_°ru˘
)

	)

3047 
	#CORBA_C⁄èöed_Des¸ùti⁄__Æloc
(Ë((
CORBA_C⁄èöed_Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_C⁄èöed_Des¸ùti⁄
))

	)

3048 
	#CORBA_C⁄èöed_Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_C⁄èöed_Des¸ùti⁄
,(m),(d))

	)

3050 #i‡!
deföed
(
ORBIT_DECL_CORBA_ModuÀDef
Ë&& !deföed(
_CORBA_ModuÀDef_deföed
)

3051 
	#ORBIT_DECL_CORBA_ModuÀDef
 1

	)

3052 
	#_CORBA_ModuÀDef_deföed
 1

	)

3053 
	#CORBA_ModuÀDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3054 
CORBA_Obje˘
 
	tCORBA_ModuÀDef
;

3055 
CORBA_unsig√d_l⁄g
 
CORBA_ModuÀDef__˛assid
;

3056 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ModuÀDef_0
)

3057 
	#TC_IMPL_TC_CORBA_ModuÀDef_0
 'c'

	)

3058 
	#TC_IMPL_TC_CORBA_ModuÀDef_1
 'o'

	)

3059 
	#TC_IMPL_TC_CORBA_ModuÀDef_2
 'r'

	)

3060 
	#TC_IMPL_TC_CORBA_ModuÀDef_3
 'b'

	)

3061 
	#TC_IMPL_TC_CORBA_ModuÀDef_4
 'a'

	)

3062 
	#TC_IMPL_TC_CORBA_ModuÀDef_5
 '_'

	)

3063 
	#TC_IMPL_TC_CORBA_ModuÀDef_6
 'd'

	)

3064 
	#TC_IMPL_TC_CORBA_ModuÀDef_7
 'e'

	)

3065 
	#TC_IMPL_TC_CORBA_ModuÀDef_8
 'f'

	)

3066 
	#TC_IMPL_TC_CORBA_ModuÀDef_9
 's'

	)

3067 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3072 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ModuÀDef_°ru˘
;

3073 
	#TC_CORBA_ModuÀDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ModuÀDef_°ru˘
)

	)

3076 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄°™tDef
Ë&& !deföed(
_CORBA_C⁄°™tDef_deföed
)

3077 
	#ORBIT_DECL_CORBA_C⁄°™tDef
 1

	)

3078 
	#_CORBA_C⁄°™tDef_deföed
 1

	)

3079 
	#CORBA_C⁄°™tDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3080 
CORBA_Obje˘
 
	tCORBA_C⁄°™tDef
;

3081 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄°™tDef__˛assid
;

3082 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄°™tDef_0
)

3083 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_0
 'c'

	)

3084 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_1
 'o'

	)

3085 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_2
 'r'

	)

3086 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_3
 'b'

	)

3087 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_4
 'a'

	)

3088 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_5
 '_'

	)

3089 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_6
 'd'

	)

3090 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_7
 'e'

	)

3091 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_8
 'f'

	)

3092 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_9
 's'

	)

3093 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3098 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄°™tDef_°ru˘
;

3099 
	#TC_CORBA_C⁄°™tDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄°™tDef_°ru˘
)

	)

3102 #i‡!
deföed
(
ORBIT_DECL_CORBA_IDLTy≥
Ë&& !deföed(
_CORBA_IDLTy≥_deföed
)

3103 
	#ORBIT_DECL_CORBA_IDLTy≥
 1

	)

3104 
	#_CORBA_IDLTy≥_deföed
 1

	)

3105 
	#CORBA_IDLTy≥__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3106 
CORBA_Obje˘
 
	tCORBA_IDLTy≥
;

3107 
CORBA_unsig√d_l⁄g
 
CORBA_IDLTy≥__˛assid
;

3108 #i‡!
deföed
(
TC_IMPL_TC_CORBA_IDLTy≥_0
)

3109 
	#TC_IMPL_TC_CORBA_IDLTy≥_0
 'c'

	)

3110 
	#TC_IMPL_TC_CORBA_IDLTy≥_1
 'o'

	)

3111 
	#TC_IMPL_TC_CORBA_IDLTy≥_2
 'r'

	)

3112 
	#TC_IMPL_TC_CORBA_IDLTy≥_3
 'b'

	)

3113 
	#TC_IMPL_TC_CORBA_IDLTy≥_4
 'a'

	)

3114 
	#TC_IMPL_TC_CORBA_IDLTy≥_5
 '_'

	)

3115 
	#TC_IMPL_TC_CORBA_IDLTy≥_6
 'd'

	)

3116 
	#TC_IMPL_TC_CORBA_IDLTy≥_7
 'e'

	)

3117 
	#TC_IMPL_TC_CORBA_IDLTy≥_8
 'f'

	)

3118 
	#TC_IMPL_TC_CORBA_IDLTy≥_9
 's'

	)

3119 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3124 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_IDLTy≥_°ru˘
;

3125 
	#TC_CORBA_IDLTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_IDLTy≥_°ru˘
)

	)

3128 #i‡!
deföed
(
ORBIT_DECL_CORBA_Såu˘Def
Ë&& !deföed(
_CORBA_Såu˘Def_deföed
)

3129 
	#ORBIT_DECL_CORBA_Såu˘Def
 1

	)

3130 
	#_CORBA_Såu˘Def_deföed
 1

	)

3131 
	#CORBA_Såu˘Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3132 
CORBA_Obje˘
 
	tCORBA_Såu˘Def
;

3133 
CORBA_unsig√d_l⁄g
 
CORBA_Såu˘Def__˛assid
;

3134 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Såu˘Def_0
)

3135 
	#TC_IMPL_TC_CORBA_Såu˘Def_0
 'c'

	)

3136 
	#TC_IMPL_TC_CORBA_Såu˘Def_1
 'o'

	)

3137 
	#TC_IMPL_TC_CORBA_Såu˘Def_2
 'r'

	)

3138 
	#TC_IMPL_TC_CORBA_Såu˘Def_3
 'b'

	)

3139 
	#TC_IMPL_TC_CORBA_Såu˘Def_4
 'a'

	)

3140 
	#TC_IMPL_TC_CORBA_Såu˘Def_5
 '_'

	)

3141 
	#TC_IMPL_TC_CORBA_Såu˘Def_6
 'd'

	)

3142 
	#TC_IMPL_TC_CORBA_Såu˘Def_7
 'e'

	)

3143 
	#TC_IMPL_TC_CORBA_Såu˘Def_8
 'f'

	)

3144 
	#TC_IMPL_TC_CORBA_Såu˘Def_9
 's'

	)

3145 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3150 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Såu˘Def_°ru˘
;

3151 
	#TC_CORBA_Såu˘Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Såu˘Def_°ru˘
)

	)

3154 #i‡!
deföed
(
ORBIT_DECL_CORBA_Uni⁄Def
Ë&& !deföed(
_CORBA_Uni⁄Def_deföed
)

3155 
	#ORBIT_DECL_CORBA_Uni⁄Def
 1

	)

3156 
	#_CORBA_Uni⁄Def_deföed
 1

	)

3157 
	#CORBA_Uni⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3158 
CORBA_Obje˘
 
	tCORBA_Uni⁄Def
;

3159 
CORBA_unsig√d_l⁄g
 
CORBA_Uni⁄Def__˛assid
;

3160 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Uni⁄Def_0
)

3161 
	#TC_IMPL_TC_CORBA_Uni⁄Def_0
 'c'

	)

3162 
	#TC_IMPL_TC_CORBA_Uni⁄Def_1
 'o'

	)

3163 
	#TC_IMPL_TC_CORBA_Uni⁄Def_2
 'r'

	)

3164 
	#TC_IMPL_TC_CORBA_Uni⁄Def_3
 'b'

	)

3165 
	#TC_IMPL_TC_CORBA_Uni⁄Def_4
 'a'

	)

3166 
	#TC_IMPL_TC_CORBA_Uni⁄Def_5
 '_'

	)

3167 
	#TC_IMPL_TC_CORBA_Uni⁄Def_6
 'd'

	)

3168 
	#TC_IMPL_TC_CORBA_Uni⁄Def_7
 'e'

	)

3169 
	#TC_IMPL_TC_CORBA_Uni⁄Def_8
 'f'

	)

3170 
	#TC_IMPL_TC_CORBA_Uni⁄Def_9
 's'

	)

3171 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3176 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Uni⁄Def_°ru˘
;

3177 
	#TC_CORBA_Uni⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Uni⁄Def_°ru˘
)

	)

3180 #i‡!
deföed
(
ORBIT_DECL_CORBA_EnumDef
Ë&& !deföed(
_CORBA_EnumDef_deföed
)

3181 
	#ORBIT_DECL_CORBA_EnumDef
 1

	)

3182 
	#_CORBA_EnumDef_deföed
 1

	)

3183 
	#CORBA_EnumDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3184 
CORBA_Obje˘
 
	tCORBA_EnumDef
;

3185 
CORBA_unsig√d_l⁄g
 
CORBA_EnumDef__˛assid
;

3186 #i‡!
deföed
(
TC_IMPL_TC_CORBA_EnumDef_0
)

3187 
	#TC_IMPL_TC_CORBA_EnumDef_0
 'c'

	)

3188 
	#TC_IMPL_TC_CORBA_EnumDef_1
 'o'

	)

3189 
	#TC_IMPL_TC_CORBA_EnumDef_2
 'r'

	)

3190 
	#TC_IMPL_TC_CORBA_EnumDef_3
 'b'

	)

3191 
	#TC_IMPL_TC_CORBA_EnumDef_4
 'a'

	)

3192 
	#TC_IMPL_TC_CORBA_EnumDef_5
 '_'

	)

3193 
	#TC_IMPL_TC_CORBA_EnumDef_6
 'd'

	)

3194 
	#TC_IMPL_TC_CORBA_EnumDef_7
 'e'

	)

3195 
	#TC_IMPL_TC_CORBA_EnumDef_8
 'f'

	)

3196 
	#TC_IMPL_TC_CORBA_EnumDef_9
 's'

	)

3197 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3202 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_EnumDef_°ru˘
;

3203 
	#TC_CORBA_EnumDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_EnumDef_°ru˘
)

	)

3206 #i‡!
deföed
(
ORBIT_DECL_CORBA_AlüsDef
Ë&& !deföed(
_CORBA_AlüsDef_deföed
)

3207 
	#ORBIT_DECL_CORBA_AlüsDef
 1

	)

3208 
	#_CORBA_AlüsDef_deföed
 1

	)

3209 
	#CORBA_AlüsDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3210 
CORBA_Obje˘
 
	tCORBA_AlüsDef
;

3211 
CORBA_unsig√d_l⁄g
 
CORBA_AlüsDef__˛assid
;

3212 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AlüsDef_0
)

3213 
	#TC_IMPL_TC_CORBA_AlüsDef_0
 'c'

	)

3214 
	#TC_IMPL_TC_CORBA_AlüsDef_1
 'o'

	)

3215 
	#TC_IMPL_TC_CORBA_AlüsDef_2
 'r'

	)

3216 
	#TC_IMPL_TC_CORBA_AlüsDef_3
 'b'

	)

3217 
	#TC_IMPL_TC_CORBA_AlüsDef_4
 'a'

	)

3218 
	#TC_IMPL_TC_CORBA_AlüsDef_5
 '_'

	)

3219 
	#TC_IMPL_TC_CORBA_AlüsDef_6
 'd'

	)

3220 
	#TC_IMPL_TC_CORBA_AlüsDef_7
 'e'

	)

3221 
	#TC_IMPL_TC_CORBA_AlüsDef_8
 'f'

	)

3222 
	#TC_IMPL_TC_CORBA_AlüsDef_9
 's'

	)

3223 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3228 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AlüsDef_°ru˘
;

3229 
	#TC_CORBA_AlüsDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AlüsDef_°ru˘
)

	)

3232 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ex˚±i⁄Def
Ë&& !deföed(
_CORBA_Ex˚±i⁄Def_deföed
)

3233 
	#ORBIT_DECL_CORBA_Ex˚±i⁄Def
 1

	)

3234 
	#_CORBA_Ex˚±i⁄Def_deföed
 1

	)

3235 
	#CORBA_Ex˚±i⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3236 
CORBA_Obje˘
 
	tCORBA_Ex˚±i⁄Def
;

3237 
CORBA_unsig√d_l⁄g
 
CORBA_Ex˚±i⁄Def__˛assid
;

3238 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ex˚±i⁄Def_0
)

3239 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_0
 'c'

	)

3240 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_1
 'o'

	)

3241 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_2
 'r'

	)

3242 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_3
 'b'

	)

3243 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_4
 'a'

	)

3244 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_5
 '_'

	)

3245 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_6
 'd'

	)

3246 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_7
 'e'

	)

3247 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_8
 'f'

	)

3248 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_9
 's'

	)

3249 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3254 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ex˚±i⁄Def_°ru˘
;

3255 
	#TC_CORBA_Ex˚±i⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ex˚±i⁄Def_°ru˘
)

	)

3258 #i‡!
deföed
(
ORBIT_DECL_CORBA_N©iveDef
Ë&& !deföed(
_CORBA_N©iveDef_deföed
)

3259 
	#ORBIT_DECL_CORBA_N©iveDef
 1

	)

3260 
	#_CORBA_N©iveDef_deföed
 1

	)

3261 
	#CORBA_N©iveDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3262 
CORBA_Obje˘
 
	tCORBA_N©iveDef
;

3263 
CORBA_unsig√d_l⁄g
 
CORBA_N©iveDef__˛assid
;

3264 #i‡!
deföed
(
TC_IMPL_TC_CORBA_N©iveDef_0
)

3265 
	#TC_IMPL_TC_CORBA_N©iveDef_0
 'c'

	)

3266 
	#TC_IMPL_TC_CORBA_N©iveDef_1
 'o'

	)

3267 
	#TC_IMPL_TC_CORBA_N©iveDef_2
 'r'

	)

3268 
	#TC_IMPL_TC_CORBA_N©iveDef_3
 'b'

	)

3269 
	#TC_IMPL_TC_CORBA_N©iveDef_4
 'a'

	)

3270 
	#TC_IMPL_TC_CORBA_N©iveDef_5
 '_'

	)

3271 
	#TC_IMPL_TC_CORBA_N©iveDef_6
 'd'

	)

3272 
	#TC_IMPL_TC_CORBA_N©iveDef_7
 'e'

	)

3273 
	#TC_IMPL_TC_CORBA_N©iveDef_8
 'f'

	)

3274 
	#TC_IMPL_TC_CORBA_N©iveDef_9
 's'

	)

3275 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3280 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_N©iveDef_°ru˘
;

3281 
	#TC_CORBA_N©iveDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_N©iveDef_°ru˘
)

	)

3284 #i‡!
deföed
(
ORBIT_DECL_CORBA_I¡îÁ˚Def
Ë&& !deföed(
_CORBA_I¡îÁ˚Def_deföed
)

3285 
	#ORBIT_DECL_CORBA_I¡îÁ˚Def
 1

	)

3286 
	#_CORBA_I¡îÁ˚Def_deföed
 1

	)

3287 
	#CORBA_I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3288 
CORBA_Obje˘
 
	tCORBA_I¡îÁ˚Def
;

3289 
CORBA_unsig√d_l⁄g
 
CORBA_I¡îÁ˚Def__˛assid
;

3290 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
)

3291 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
 'c'

	)

3292 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_1
 'o'

	)

3293 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_2
 'r'

	)

3294 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_3
 'b'

	)

3295 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_4
 'a'

	)

3296 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_5
 '_'

	)

3297 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_6
 'd'

	)

3298 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_7
 'e'

	)

3299 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_8
 'f'

	)

3300 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_9
 's'

	)

3301 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3306 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚Def_°ru˘
;

3307 
	#TC_CORBA_I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚Def_°ru˘
)

	)

3310 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

3311 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

3312 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3313 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3314 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3315 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3316 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3317 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3318 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3319 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3320 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3321 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3322 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

3323 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

3324 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

3326 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

3327 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3328 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3329 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3330 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3331 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3332 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3333 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3334 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3335 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3336 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3337 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3342 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

3343 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

3345 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

3346 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

3347 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3348 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3350 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_I¡îÁ˚Def
)

3351 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_I¡îÁ˚Def
 1

	)

3352 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_0
 'c'

	)

3353 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_1
 'o'

	)

3354 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_2
 'r'

	)

3355 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_3
 'b'

	)

3356 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_4
 'a'

	)

3357 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_5
 '_'

	)

3358 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_6
 'd'

	)

3359 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_7
 'e'

	)

3360 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_8
 'f'

	)

3361 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_I¡îÁ˚Def_9
 's'

	)

3362 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_I¡îÁ˚Def_deföed
)

3363 
	#_CORBA_£quí˚_CORBA_I¡îÁ˚Def_deföed
 1

	)

3364 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_I¡îÁ˚Def
;

3366 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_0
)

3367 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_0
 'c'

	)

3368 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_1
 'o'

	)

3369 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_2
 'r'

	)

3370 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_3
 'b'

	)

3371 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_4
 'a'

	)

3372 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_5
 '_'

	)

3373 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_6
 'd'

	)

3374 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_7
 'e'

	)

3375 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_8
 'f'

	)

3376 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_9
 's'

	)

3377 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3382 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_°ru˘
;

3383 
	#TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def_°ru˘
)

	)

3385 
	#CORBA_£quí˚_CORBA_I¡îÁ˚Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

3386 
	#CORBA_£quí˚_CORBA_I¡îÁ˚Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

3387 
	#CORBA_£quí˚_CORBA_I¡îÁ˚Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

3388 
	#CORBA_£quí˚_CORBA_I¡îÁ˚Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

3389 
	#CORBA_£quí˚_CORBA_I¡îÁ˚Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

3391 #i‡!
deföed
(
_CORBA_I¡îÁ˚DefSeq_deföed
)

3392 
	#_CORBA_I¡îÁ˚DefSeq_deföed
 1

	)

3393 
CORBA_£quí˚_CORBA_I¡îÁ˚Def
 
	tCORBA_I¡îÁ˚DefSeq
;

3394 
	#CORBA_I¡îÁ˚DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_I¡îÁ˚Def_m¨shÆ
((x),(y),(z))

	)

3395 
	#CORBA_I¡îÁ˚DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_I¡îÁ˚Def_dem¨shÆ
((x),(y),(z),(i))

	)

3396 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_0
)

3397 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_0
 'c'

	)

3398 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_1
 'o'

	)

3399 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_2
 'r'

	)

3400 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_3
 'b'

	)

3401 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_4
 'a'

	)

3402 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_5
 '_'

	)

3403 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_6
 'd'

	)

3404 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_7
 'e'

	)

3405 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_8
 'f'

	)

3406 
	#TC_IMPL_TC_CORBA_I¡îÁ˚DefSeq_9
 's'

	)

3407 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3412 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚DefSeq_°ru˘
;

3413 
	#TC_CORBA_I¡îÁ˚DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚DefSeq_°ru˘
)

	)

3415 
	#CORBA_I¡îÁ˚DefSeq__Æloc
(Ë((
CORBA_I¡îÁ˚DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def
))

	)

3416 
	#CORBA_I¡îÁ˚DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def
,(m),(d))

	)

3417 
	#CORBA_I¡îÁ˚DefSeq_Ælocbuf
(
l
Ë((
CORBA_I¡îÁ˚Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_I¡îÁ˚Def
, (l)))

	)

3419 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueDef
Ë&& !deföed(
_CORBA_VÆueDef_deföed
)

3420 
	#ORBIT_DECL_CORBA_VÆueDef
 1

	)

3421 
	#_CORBA_VÆueDef_deföed
 1

	)

3422 
	#CORBA_VÆueDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3423 
CORBA_Obje˘
 
	tCORBA_VÆueDef
;

3424 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueDef__˛assid
;

3425 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueDef_0
)

3426 
	#TC_IMPL_TC_CORBA_VÆueDef_0
 'c'

	)

3427 
	#TC_IMPL_TC_CORBA_VÆueDef_1
 'o'

	)

3428 
	#TC_IMPL_TC_CORBA_VÆueDef_2
 'r'

	)

3429 
	#TC_IMPL_TC_CORBA_VÆueDef_3
 'b'

	)

3430 
	#TC_IMPL_TC_CORBA_VÆueDef_4
 'a'

	)

3431 
	#TC_IMPL_TC_CORBA_VÆueDef_5
 '_'

	)

3432 
	#TC_IMPL_TC_CORBA_VÆueDef_6
 'd'

	)

3433 
	#TC_IMPL_TC_CORBA_VÆueDef_7
 'e'

	)

3434 
	#TC_IMPL_TC_CORBA_VÆueDef_8
 'f'

	)

3435 
	#TC_IMPL_TC_CORBA_VÆueDef_9
 's'

	)

3436 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3441 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueDef_°ru˘
;

3442 
	#TC_CORBA_VÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueDef_°ru˘
)

	)

3445 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

3446 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

3447 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3448 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3449 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3450 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3451 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3452 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3453 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3454 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3455 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3456 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3457 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

3458 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

3459 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

3461 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

3462 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3463 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3464 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3465 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3466 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3467 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3468 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3469 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3470 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3471 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3472 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3477 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

3478 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

3480 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

3481 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

3482 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3483 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3485 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_VÆueDef
)

3486 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_VÆueDef
 1

	)

3487 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_0
 'c'

	)

3488 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_1
 'o'

	)

3489 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_2
 'r'

	)

3490 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_3
 'b'

	)

3491 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_4
 'a'

	)

3492 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_5
 '_'

	)

3493 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_6
 'd'

	)

3494 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_7
 'e'

	)

3495 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_8
 'f'

	)

3496 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueDef_9
 's'

	)

3497 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_VÆueDef_deföed
)

3498 
	#_CORBA_£quí˚_CORBA_VÆueDef_deföed
 1

	)

3499 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_VÆueDef
;

3501 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_0
)

3502 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_0
 'c'

	)

3503 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_1
 'o'

	)

3504 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_2
 'r'

	)

3505 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_3
 'b'

	)

3506 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_4
 'a'

	)

3507 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_5
 '_'

	)

3508 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_6
 'd'

	)

3509 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_7
 'e'

	)

3510 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_8
 'f'

	)

3511 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueDef_9
 's'

	)

3512 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3517 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_VÆueDef_°ru˘
;

3518 
	#TC_CORBA_£quí˚_CORBA_VÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_VÆueDef_°ru˘
)

	)

3520 
	#CORBA_£quí˚_CORBA_VÆueDef__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

3521 
	#CORBA_£quí˚_CORBA_VÆueDef__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

3522 
	#CORBA_£quí˚_CORBA_VÆueDef_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

3523 
	#CORBA_£quí˚_CORBA_VÆueDef_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

3524 
	#CORBA_£quí˚_CORBA_VÆueDef_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

3526 #i‡!
deföed
(
_CORBA_VÆueDefSeq_deföed
)

3527 
	#_CORBA_VÆueDefSeq_deföed
 1

	)

3528 
CORBA_£quí˚_CORBA_VÆueDef
 
	tCORBA_VÆueDefSeq
;

3529 
	#CORBA_VÆueDefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_VÆueDef_m¨shÆ
((x),(y),(z))

	)

3530 
	#CORBA_VÆueDefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_VÆueDef_dem¨shÆ
((x),(y),(z),(i))

	)

3531 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueDefSeq_0
)

3532 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_0
 'c'

	)

3533 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_1
 'o'

	)

3534 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_2
 'r'

	)

3535 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_3
 'b'

	)

3536 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_4
 'a'

	)

3537 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_5
 '_'

	)

3538 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_6
 'd'

	)

3539 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_7
 'e'

	)

3540 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_8
 'f'

	)

3541 
	#TC_IMPL_TC_CORBA_VÆueDefSeq_9
 's'

	)

3542 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3547 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueDefSeq_°ru˘
;

3548 
	#TC_CORBA_VÆueDefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueDefSeq_°ru˘
)

	)

3550 
	#CORBA_VÆueDefSeq__Æloc
(Ë((
CORBA_VÆueDefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_VÆueDef
))

	)

3551 
	#CORBA_VÆueDefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_VÆueDef
,(m),(d))

	)

3552 
	#CORBA_VÆueDefSeq_Ælocbuf
(
l
Ë((
CORBA_VÆueDef
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_VÆueDef
, (l)))

	)

3554 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueBoxDef
Ë&& !deföed(
_CORBA_VÆueBoxDef_deföed
)

3555 
	#ORBIT_DECL_CORBA_VÆueBoxDef
 1

	)

3556 
	#_CORBA_VÆueBoxDef_deföed
 1

	)

3557 
	#CORBA_VÆueBoxDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3558 
CORBA_Obje˘
 
	tCORBA_VÆueBoxDef
;

3559 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueBoxDef__˛assid
;

3560 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueBoxDef_0
)

3561 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_0
 'c'

	)

3562 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_1
 'o'

	)

3563 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_2
 'r'

	)

3564 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_3
 'b'

	)

3565 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_4
 'a'

	)

3566 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_5
 '_'

	)

3567 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_6
 'd'

	)

3568 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_7
 'e'

	)

3569 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_8
 'f'

	)

3570 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_9
 's'

	)

3571 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3576 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueBoxDef_°ru˘
;

3577 
	#TC_CORBA_VÆueBoxDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueBoxDef_°ru˘
)

	)

3580 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ab°ø˘I¡îÁ˚Def
Ë&& !deföed(
_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
)

3581 
	#ORBIT_DECL_CORBA_Ab°ø˘I¡îÁ˚Def
 1

	)

3582 
	#_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
 1

	)

3583 
	#CORBA_Ab°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3584 
CORBA_Obje˘
 
	tCORBA_Ab°ø˘I¡îÁ˚Def
;

3585 
CORBA_unsig√d_l⁄g
 
CORBA_Ab°ø˘I¡îÁ˚Def__˛assid
;

3586 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_0
)

3587 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_0
 'c'

	)

3588 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_1
 'o'

	)

3589 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_2
 'r'

	)

3590 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_3
 'b'

	)

3591 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_4
 'a'

	)

3592 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_5
 '_'

	)

3593 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_6
 'd'

	)

3594 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_7
 'e'

	)

3595 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_8
 'f'

	)

3596 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_9
 's'

	)

3597 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3602 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
;

3603 
	#TC_CORBA_Ab°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
)

	)

3606 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

3607 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

3608 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3609 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3610 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3611 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3612 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3613 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3614 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3615 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3616 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3617 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3618 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

3619 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

3620 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

3622 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

3623 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3624 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3625 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3626 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3627 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3628 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3629 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3630 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3631 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3632 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3633 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3638 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

3639 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

3641 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

3642 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

3643 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3644 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3646 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
)

3647 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
 1

	)

3648 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_0
 'c'

	)

3649 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_1
 'o'

	)

3650 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_2
 'r'

	)

3651 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_3
 'b'

	)

3652 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_4
 'a'

	)

3653 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_5
 '_'

	)

3654 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_6
 'd'

	)

3655 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_7
 'e'

	)

3656 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_8
 'f'

	)

3657 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_9
 's'

	)

3658 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
)

3659 
	#_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
 1

	)

3660 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
;

3662 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_0
)

3663 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_0
 'c'

	)

3664 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_1
 'o'

	)

3665 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_2
 'r'

	)

3666 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_3
 'b'

	)

3667 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_4
 'a'

	)

3668 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_5
 '_'

	)

3669 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_6
 'd'

	)

3670 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_7
 'e'

	)

3671 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_8
 'f'

	)

3672 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_9
 's'

	)

3673 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3678 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
;

3679 
	#TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
)

	)

3681 
	#CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

3682 
	#CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

3683 
	#CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

3684 
	#CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

3685 
	#CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

3687 #i‡!
deföed
(
_CORBA_Ab°ø˘I¡îÁ˚DefSeq_deföed
)

3688 
	#_CORBA_Ab°ø˘I¡îÁ˚DefSeq_deföed
 1

	)

3689 
CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
 
	tCORBA_Ab°ø˘I¡îÁ˚DefSeq
;

3690 
	#CORBA_Ab°ø˘I¡îÁ˚DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_m¨shÆ
((x),(y),(z))

	)

3691 
	#CORBA_Ab°ø˘I¡îÁ˚DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def_dem¨shÆ
((x),(y),(z),(i))

	)

3692 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_0
)

3693 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_0
 'c'

	)

3694 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_1
 'o'

	)

3695 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_2
 'r'

	)

3696 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_3
 'b'

	)

3697 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_4
 'a'

	)

3698 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_5
 '_'

	)

3699 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_6
 'd'

	)

3700 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_7
 'e'

	)

3701 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_8
 'f'

	)

3702 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_9
 's'

	)

3703 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3708 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_°ru˘
;

3709 
	#TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ab°ø˘I¡îÁ˚DefSeq_°ru˘
)

	)

3711 
	#CORBA_Ab°ø˘I¡îÁ˚DefSeq__Æloc
(Ë((
CORBA_Ab°ø˘I¡îÁ˚DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
))

	)

3712 
	#CORBA_Ab°ø˘I¡îÁ˚DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
,(m),(d))

	)

3713 
	#CORBA_Ab°ø˘I¡îÁ˚DefSeq_Ælocbuf
(
l
Ë((
CORBA_Ab°ø˘I¡îÁ˚Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ab°ø˘I¡îÁ˚Def
, (l)))

	)

3715 #i‡!
deföed
(
ORBIT_DECL_CORBA_LoˇlI¡îÁ˚Def
Ë&& !deföed(
_CORBA_LoˇlI¡îÁ˚Def_deföed
)

3716 
	#ORBIT_DECL_CORBA_LoˇlI¡îÁ˚Def
 1

	)

3717 
	#_CORBA_LoˇlI¡îÁ˚Def_deföed
 1

	)

3718 
	#CORBA_LoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3719 
CORBA_Obje˘
 
	tCORBA_LoˇlI¡îÁ˚Def
;

3720 
CORBA_unsig√d_l⁄g
 
CORBA_LoˇlI¡îÁ˚Def__˛assid
;

3721 #i‡!
deföed
(
TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_0
)

3722 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_0
 'c'

	)

3723 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_1
 'o'

	)

3724 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_2
 'r'

	)

3725 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_3
 'b'

	)

3726 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_4
 'a'

	)

3727 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_5
 '_'

	)

3728 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_6
 'd'

	)

3729 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_7
 'e'

	)

3730 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_8
 'f'

	)

3731 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_9
 's'

	)

3732 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3737 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_LoˇlI¡îÁ˚Def_°ru˘
;

3738 
	#TC_CORBA_LoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_LoˇlI¡îÁ˚Def_°ru˘
)

	)

3741 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

3742 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

3743 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3744 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3745 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3746 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3747 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3748 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3749 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3750 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3751 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3752 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3753 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

3754 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

3755 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

3757 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

3758 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3759 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3760 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3761 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3762 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3763 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3764 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3765 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3766 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3767 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3768 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3773 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

3774 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

3776 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

3777 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

3778 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3779 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3781 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
)

3782 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
 1

	)

3783 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_0
 'c'

	)

3784 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_1
 'o'

	)

3785 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_2
 'r'

	)

3786 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_3
 'b'

	)

3787 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_4
 'a'

	)

3788 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_5
 '_'

	)

3789 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_6
 'd'

	)

3790 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_7
 'e'

	)

3791 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_8
 'f'

	)

3792 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_9
 's'

	)

3793 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_deföed
)

3794 
	#_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_deföed
 1

	)

3795 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
;

3797 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_0
)

3798 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_0
 'c'

	)

3799 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_1
 'o'

	)

3800 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_2
 'r'

	)

3801 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_3
 'b'

	)

3802 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_4
 'a'

	)

3803 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_5
 '_'

	)

3804 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_6
 'd'

	)

3805 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_7
 'e'

	)

3806 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_8
 'f'

	)

3807 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_9
 's'

	)

3808 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3813 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_°ru˘
;

3814 
	#TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_°ru˘
)

	)

3816 
	#CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

3817 
	#CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

3818 
	#CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

3819 
	#CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

3820 
	#CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

3822 #i‡!
deföed
(
_CORBA_LoˇlI¡îÁ˚DefSeq_deföed
)

3823 
	#_CORBA_LoˇlI¡îÁ˚DefSeq_deföed
 1

	)

3824 
CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
 
	tCORBA_LoˇlI¡îÁ˚DefSeq
;

3825 
	#CORBA_LoˇlI¡îÁ˚DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_m¨shÆ
((x),(y),(z))

	)

3826 
	#CORBA_LoˇlI¡îÁ˚DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def_dem¨shÆ
((x),(y),(z),(i))

	)

3827 #i‡!
deföed
(
TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_0
)

3828 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_0
 'c'

	)

3829 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_1
 'o'

	)

3830 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_2
 'r'

	)

3831 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_3
 'b'

	)

3832 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_4
 'a'

	)

3833 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_5
 '_'

	)

3834 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_6
 'd'

	)

3835 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_7
 'e'

	)

3836 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_8
 'f'

	)

3837 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚DefSeq_9
 's'

	)

3838 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3843 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_LoˇlI¡îÁ˚DefSeq_°ru˘
;

3844 
	#TC_CORBA_LoˇlI¡îÁ˚DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_LoˇlI¡îÁ˚DefSeq_°ru˘
)

	)

3846 
	#CORBA_LoˇlI¡îÁ˚DefSeq__Æloc
(Ë((
CORBA_LoˇlI¡îÁ˚DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
))

	)

3847 
	#CORBA_LoˇlI¡îÁ˚DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
,(m),(d))

	)

3848 
	#CORBA_LoˇlI¡îÁ˚DefSeq_Ælocbuf
(
l
Ë((
CORBA_LoˇlI¡îÁ˚Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_LoˇlI¡îÁ˚Def
, (l)))

	)

3850 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtI¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtI¡îÁ˚Def_deföed
)

3851 
	#ORBIT_DECL_CORBA_ExtI¡îÁ˚Def
 1

	)

3852 
	#_CORBA_ExtI¡îÁ˚Def_deföed
 1

	)

3853 
	#CORBA_ExtI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3854 
CORBA_Obje˘
 
	tCORBA_ExtI¡îÁ˚Def
;

3855 
CORBA_unsig√d_l⁄g
 
CORBA_ExtI¡îÁ˚Def__˛assid
;

3856 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_0
)

3857 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_0
 'c'

	)

3858 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_1
 'o'

	)

3859 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_2
 'r'

	)

3860 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_3
 'b'

	)

3861 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_4
 'a'

	)

3862 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_5
 '_'

	)

3863 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_6
 'd'

	)

3864 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_7
 'e'

	)

3865 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_8
 'f'

	)

3866 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_9
 's'

	)

3867 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3872 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtI¡îÁ˚Def_°ru˘
;

3873 
	#TC_CORBA_ExtI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtI¡îÁ˚Def_°ru˘
)

	)

3876 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

3877 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

3878 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3879 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3880 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3881 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3882 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3883 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3884 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3885 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3886 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3887 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3888 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

3889 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

3890 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

3892 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

3893 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

3894 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

3895 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

3896 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

3897 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

3898 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

3899 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

3900 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

3901 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

3902 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

3903 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3908 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

3909 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

3911 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

3912 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

3913 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3914 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

3916 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
)

3917 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
 1

	)

3918 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_0
 'c'

	)

3919 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_1
 'o'

	)

3920 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_2
 'r'

	)

3921 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_3
 'b'

	)

3922 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_4
 'a'

	)

3923 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_5
 '_'

	)

3924 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_6
 'd'

	)

3925 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_7
 'e'

	)

3926 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_8
 'f'

	)

3927 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_9
 's'

	)

3928 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_deföed
)

3929 
	#_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_deföed
 1

	)

3930 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
;

3932 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_0
)

3933 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_0
 'c'

	)

3934 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_1
 'o'

	)

3935 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_2
 'r'

	)

3936 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_3
 'b'

	)

3937 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_4
 'a'

	)

3938 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_5
 '_'

	)

3939 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_6
 'd'

	)

3940 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_7
 'e'

	)

3941 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_8
 'f'

	)

3942 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_9
 's'

	)

3943 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3948 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_°ru˘
;

3949 
	#TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_°ru˘
)

	)

3951 
	#CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

3952 
	#CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

3953 
	#CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

3954 
	#CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

3955 
	#CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

3957 #i‡!
deföed
(
_CORBA_ExtI¡îÁ˚DefSeq_deföed
)

3958 
	#_CORBA_ExtI¡îÁ˚DefSeq_deföed
 1

	)

3959 
CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
 
	tCORBA_ExtI¡îÁ˚DefSeq
;

3960 
	#CORBA_ExtI¡îÁ˚DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_m¨shÆ
((x),(y),(z))

	)

3961 
	#CORBA_ExtI¡îÁ˚DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def_dem¨shÆ
((x),(y),(z),(i))

	)

3962 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_0
)

3963 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_0
 'c'

	)

3964 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_1
 'o'

	)

3965 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_2
 'r'

	)

3966 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_3
 'b'

	)

3967 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_4
 'a'

	)

3968 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_5
 '_'

	)

3969 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_6
 'd'

	)

3970 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_7
 'e'

	)

3971 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_8
 'f'

	)

3972 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚DefSeq_9
 's'

	)

3973 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


3978 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtI¡îÁ˚DefSeq_°ru˘
;

3979 
	#TC_CORBA_ExtI¡îÁ˚DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtI¡îÁ˚DefSeq_°ru˘
)

	)

3981 
	#CORBA_ExtI¡îÁ˚DefSeq__Æloc
(Ë((
CORBA_ExtI¡îÁ˚DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
))

	)

3982 
	#CORBA_ExtI¡îÁ˚DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
,(m),(d))

	)

3983 
	#CORBA_ExtI¡îÁ˚DefSeq_Ælocbuf
(
l
Ë((
CORBA_ExtI¡îÁ˚Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtI¡îÁ˚Def
, (l)))

	)

3985 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtVÆueDef
Ë&& !deföed(
_CORBA_ExtVÆueDef_deföed
)

3986 
	#ORBIT_DECL_CORBA_ExtVÆueDef
 1

	)

3987 
	#_CORBA_ExtVÆueDef_deföed
 1

	)

3988 
	#CORBA_ExtVÆueDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

3989 
CORBA_Obje˘
 
	tCORBA_ExtVÆueDef
;

3990 
CORBA_unsig√d_l⁄g
 
CORBA_ExtVÆueDef__˛assid
;

3991 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtVÆueDef_0
)

3992 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_0
 'c'

	)

3993 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_1
 'o'

	)

3994 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_2
 'r'

	)

3995 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_3
 'b'

	)

3996 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_4
 'a'

	)

3997 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_5
 '_'

	)

3998 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_6
 'd'

	)

3999 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_7
 'e'

	)

4000 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_8
 'f'

	)

4001 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_9
 's'

	)

4002 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4007 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtVÆueDef_°ru˘
;

4008 
	#TC_CORBA_ExtVÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtVÆueDef_°ru˘
)

	)

4011 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

4012 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

4013 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4014 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4015 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4016 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4017 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4018 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4019 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4020 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4021 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4022 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4023 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

4024 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

4025 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

4027 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

4028 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4029 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4030 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4031 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4032 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4033 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4034 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4035 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4036 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4037 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4038 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4043 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

4044 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

4046 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

4047 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

4048 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4049 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4051 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ExtVÆueDef
)

4052 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ExtVÆueDef
 1

	)

4053 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_0
 'c'

	)

4054 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_1
 'o'

	)

4055 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_2
 'r'

	)

4056 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_3
 'b'

	)

4057 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_4
 'a'

	)

4058 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_5
 '_'

	)

4059 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_6
 'd'

	)

4060 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_7
 'e'

	)

4061 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_8
 'f'

	)

4062 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtVÆueDef_9
 's'

	)

4063 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ExtVÆueDef_deföed
)

4064 
	#_CORBA_£quí˚_CORBA_ExtVÆueDef_deföed
 1

	)

4065 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_ExtVÆueDef
;

4067 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_0
)

4068 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_0
 'c'

	)

4069 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_1
 'o'

	)

4070 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_2
 'r'

	)

4071 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_3
 'b'

	)

4072 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_4
 'a'

	)

4073 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_5
 '_'

	)

4074 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_6
 'd'

	)

4075 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_7
 'e'

	)

4076 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_8
 'f'

	)

4077 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtVÆueDef_9
 's'

	)

4078 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4083 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ExtVÆueDef_°ru˘
;

4084 
	#TC_CORBA_£quí˚_CORBA_ExtVÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ExtVÆueDef_°ru˘
)

	)

4086 
	#CORBA_£quí˚_CORBA_ExtVÆueDef__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

4087 
	#CORBA_£quí˚_CORBA_ExtVÆueDef__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

4088 
	#CORBA_£quí˚_CORBA_ExtVÆueDef_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

4089 
	#CORBA_£quí˚_CORBA_ExtVÆueDef_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

4090 
	#CORBA_£quí˚_CORBA_ExtVÆueDef_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

4092 #i‡!
deföed
(
_CORBA_ExtVÆueDefSeq_deföed
)

4093 
	#_CORBA_ExtVÆueDefSeq_deföed
 1

	)

4094 
CORBA_£quí˚_CORBA_ExtVÆueDef
 
	tCORBA_ExtVÆueDefSeq
;

4095 
	#CORBA_ExtVÆueDefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ExtVÆueDef_m¨shÆ
((x),(y),(z))

	)

4096 
	#CORBA_ExtVÆueDefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ExtVÆueDef_dem¨shÆ
((x),(y),(z),(i))

	)

4097 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtVÆueDefSeq_0
)

4098 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_0
 'c'

	)

4099 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_1
 'o'

	)

4100 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_2
 'r'

	)

4101 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_3
 'b'

	)

4102 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_4
 'a'

	)

4103 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_5
 '_'

	)

4104 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_6
 'd'

	)

4105 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_7
 'e'

	)

4106 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_8
 'f'

	)

4107 
	#TC_IMPL_TC_CORBA_ExtVÆueDefSeq_9
 's'

	)

4108 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4113 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtVÆueDefSeq_°ru˘
;

4114 
	#TC_CORBA_ExtVÆueDefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtVÆueDefSeq_°ru˘
)

	)

4116 
	#CORBA_ExtVÆueDefSeq__Æloc
(Ë((
CORBA_ExtVÆueDefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtVÆueDef
))

	)

4117 
	#CORBA_ExtVÆueDefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtVÆueDef
,(m),(d))

	)

4118 
	#CORBA_ExtVÆueDefSeq_Ælocbuf
(
l
Ë((
CORBA_ExtVÆueDef
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtVÆueDef
, (l)))

	)

4120 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtAb°ø˘I¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
)

4121 
	#ORBIT_DECL_CORBA_ExtAb°ø˘I¡îÁ˚Def
 1

	)

4122 
	#_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
 1

	)

4123 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

4124 
CORBA_Obje˘
 
	tCORBA_ExtAb°ø˘I¡îÁ˚Def
;

4125 
CORBA_unsig√d_l⁄g
 
CORBA_ExtAb°ø˘I¡îÁ˚Def__˛assid
;

4126 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
)

4127 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
 'c'

	)

4128 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_1
 'o'

	)

4129 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_2
 'r'

	)

4130 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_3
 'b'

	)

4131 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_4
 'a'

	)

4132 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_5
 '_'

	)

4133 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_6
 'd'

	)

4134 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_7
 'e'

	)

4135 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_8
 'f'

	)

4136 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_9
 's'

	)

4137 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4142 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
;

4143 
	#TC_CORBA_ExtAb°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
)

	)

4146 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

4147 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

4148 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4149 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4150 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4151 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4152 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4153 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4154 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4155 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4156 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4157 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4158 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

4159 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

4160 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

4162 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

4163 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4164 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4165 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4166 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4167 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4168 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4169 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4170 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4171 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4172 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4173 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4178 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

4179 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

4181 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

4182 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

4183 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4184 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4186 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
)

4187 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
 1

	)

4188 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
 'c'

	)

4189 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_1
 'o'

	)

4190 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_2
 'r'

	)

4191 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_3
 'b'

	)

4192 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_4
 'a'

	)

4193 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_5
 '_'

	)

4194 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_6
 'd'

	)

4195 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_7
 'e'

	)

4196 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_8
 'f'

	)

4197 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_9
 's'

	)

4198 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
)

4199 
	#_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
 1

	)

4200 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
;

4202 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
)

4203 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
 'c'

	)

4204 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_1
 'o'

	)

4205 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_2
 'r'

	)

4206 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_3
 'b'

	)

4207 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_4
 'a'

	)

4208 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_5
 '_'

	)

4209 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_6
 'd'

	)

4210 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_7
 'e'

	)

4211 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_8
 'f'

	)

4212 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_9
 's'

	)

4213 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4218 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
;

4219 
	#TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
)

	)

4221 
	#CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

4222 
	#CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

4223 
	#CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

4224 
	#CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

4225 
	#CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

4227 #i‡!
deföed
(
_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_deföed
)

4228 
	#_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_deföed
 1

	)

4229 
CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
 
	tCORBA_ExtAb°ø˘I¡îÁ˚DefSeq
;

4230 
	#CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_m¨shÆ
((x),(y),(z))

	)

4231 
	#CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def_dem¨shÆ
((x),(y),(z),(i))

	)

4232 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_0
)

4233 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_0
 'c'

	)

4234 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_1
 'o'

	)

4235 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_2
 'r'

	)

4236 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_3
 'b'

	)

4237 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_4
 'a'

	)

4238 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_5
 '_'

	)

4239 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_6
 'd'

	)

4240 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_7
 'e'

	)

4241 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_8
 'f'

	)

4242 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_9
 's'

	)

4243 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4248 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_°ru˘
;

4249 
	#TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_°ru˘
)

	)

4251 
	#CORBA_ExtAb°ø˘I¡îÁ˚DefSeq__Æloc
(Ë((
CORBA_ExtAb°ø˘I¡îÁ˚DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
))

	)

4252 
	#CORBA_ExtAb°ø˘I¡îÁ˚DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
,(m),(d))

	)

4253 
	#CORBA_ExtAb°ø˘I¡îÁ˚DefSeq_Ælocbuf
(
l
Ë((
CORBA_ExtAb°ø˘I¡îÁ˚Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtAb°ø˘I¡îÁ˚Def
, (l)))

	)

4255 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtLoˇlI¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
)

4256 
	#ORBIT_DECL_CORBA_ExtLoˇlI¡îÁ˚Def
 1

	)

4257 
	#_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
 1

	)

4258 
	#CORBA_ExtLoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

4259 
CORBA_Obje˘
 
	tCORBA_ExtLoˇlI¡îÁ˚Def
;

4260 
CORBA_unsig√d_l⁄g
 
CORBA_ExtLoˇlI¡îÁ˚Def__˛assid
;

4261 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_0
)

4262 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_0
 'c'

	)

4263 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_1
 'o'

	)

4264 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_2
 'r'

	)

4265 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_3
 'b'

	)

4266 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_4
 'a'

	)

4267 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_5
 '_'

	)

4268 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_6
 'd'

	)

4269 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_7
 'e'

	)

4270 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_8
 'f'

	)

4271 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_9
 's'

	)

4272 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4277 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
;

4278 
	#TC_CORBA_ExtLoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
)

	)

4281 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

4282 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

4283 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4284 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4285 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4286 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4287 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4288 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4289 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4290 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4291 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4292 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4293 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

4294 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

4295 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

4297 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

4298 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4299 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4300 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4301 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4302 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4303 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4304 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4305 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4306 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4307 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4308 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4313 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

4314 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

4316 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

4317 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

4318 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4319 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4321 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
)

4322 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
 1

	)

4323 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_0
 'c'

	)

4324 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_1
 'o'

	)

4325 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_2
 'r'

	)

4326 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_3
 'b'

	)

4327 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_4
 'a'

	)

4328 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_5
 '_'

	)

4329 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_6
 'd'

	)

4330 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_7
 'e'

	)

4331 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_8
 'f'

	)

4332 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_9
 's'

	)

4333 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
)

4334 
	#_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
 1

	)

4335 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
;

4337 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_0
)

4338 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_0
 'c'

	)

4339 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_1
 'o'

	)

4340 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_2
 'r'

	)

4341 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_3
 'b'

	)

4342 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_4
 'a'

	)

4343 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_5
 '_'

	)

4344 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_6
 'd'

	)

4345 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_7
 'e'

	)

4346 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_8
 'f'

	)

4347 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_9
 's'

	)

4348 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4353 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
;

4354 
	#TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
)

	)

4356 
	#CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

4357 
	#CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

4358 
	#CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

4359 
	#CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

4360 
	#CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

4362 #i‡!
deföed
(
_CORBA_ExtLoˇlI¡îÁ˚DefSeq_deföed
)

4363 
	#_CORBA_ExtLoˇlI¡îÁ˚DefSeq_deföed
 1

	)

4364 
CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
 
	tCORBA_ExtLoˇlI¡îÁ˚DefSeq
;

4365 
	#CORBA_ExtLoˇlI¡îÁ˚DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_m¨shÆ
((x),(y),(z))

	)

4366 
	#CORBA_ExtLoˇlI¡îÁ˚DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def_dem¨shÆ
((x),(y),(z),(i))

	)

4367 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_0
)

4368 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_0
 'c'

	)

4369 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_1
 'o'

	)

4370 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_2
 'r'

	)

4371 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_3
 'b'

	)

4372 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_4
 'a'

	)

4373 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_5
 '_'

	)

4374 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_6
 'd'

	)

4375 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_7
 'e'

	)

4376 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_8
 'f'

	)

4377 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_9
 's'

	)

4378 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4383 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_°ru˘
;

4384 
	#TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtLoˇlI¡îÁ˚DefSeq_°ru˘
)

	)

4386 
	#CORBA_ExtLoˇlI¡îÁ˚DefSeq__Æloc
(Ë((
CORBA_ExtLoˇlI¡îÁ˚DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
))

	)

4387 
	#CORBA_ExtLoˇlI¡îÁ˚DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
,(m),(d))

	)

4388 
	#CORBA_ExtLoˇlI¡îÁ˚DefSeq_Ælocbuf
(
l
Ë((
CORBA_ExtLoˇlI¡îÁ˚Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtLoˇlI¡îÁ˚Def
, (l)))

	)

4390 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

4391 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

4392 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4393 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4394 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4395 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4396 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4397 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4398 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4399 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4400 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4401 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4402 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

4403 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

4404 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

4406 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

4407 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

4408 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

4409 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

4410 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

4411 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

4412 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

4413 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

4414 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

4415 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

4416 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

4417 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4422 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

4423 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

4425 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

4426 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

4427 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4428 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

4430 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_C⁄èöed
)

4431 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_C⁄èöed
 1

	)

4432 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_0
 'c'

	)

4433 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_1
 'o'

	)

4434 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_2
 'r'

	)

4435 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_3
 'b'

	)

4436 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_4
 'a'

	)

4437 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_5
 '_'

	)

4438 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_6
 'd'

	)

4439 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_7
 'e'

	)

4440 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_8
 'f'

	)

4441 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöed_9
 's'

	)

4442 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_C⁄èöed_deföed
)

4443 
	#_CORBA_£quí˚_CORBA_C⁄èöed_deföed
 1

	)

4444 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_C⁄èöed
;

4446 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_0
)

4447 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_0
 'c'

	)

4448 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_1
 'o'

	)

4449 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_2
 'r'

	)

4450 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_3
 'b'

	)

4451 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_4
 'a'

	)

4452 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_5
 '_'

	)

4453 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_6
 'd'

	)

4454 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_7
 'e'

	)

4455 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_8
 'f'

	)

4456 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöed_9
 's'

	)

4457 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4462 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_C⁄èöed_°ru˘
;

4463 
	#TC_CORBA_£quí˚_CORBA_C⁄èöed
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_C⁄èöed_°ru˘
)

	)

4465 
	#CORBA_£quí˚_CORBA_C⁄èöed__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

4466 
	#CORBA_£quí˚_CORBA_C⁄èöed__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

4467 
	#CORBA_£quí˚_CORBA_C⁄èöed_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

4468 
	#CORBA_£quí˚_CORBA_C⁄èöed_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

4469 
	#CORBA_£quí˚_CORBA_C⁄èöed_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

4471 #i‡!
deföed
(
_CORBA_C⁄èöedSeq_deföed
)

4472 
	#_CORBA_C⁄èöedSeq_deföed
 1

	)

4473 
CORBA_£quí˚_CORBA_C⁄èöed
 
	tCORBA_C⁄èöedSeq
;

4474 
	#CORBA_C⁄èöedSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_C⁄èöed_m¨shÆ
((x),(y),(z))

	)

4475 
	#CORBA_C⁄èöedSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_C⁄èöed_dem¨shÆ
((x),(y),(z),(i))

	)

4476 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöedSeq_0
)

4477 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_0
 'c'

	)

4478 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_1
 'o'

	)

4479 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_2
 'r'

	)

4480 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_3
 'b'

	)

4481 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_4
 'a'

	)

4482 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_5
 '_'

	)

4483 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_6
 'd'

	)

4484 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_7
 'e'

	)

4485 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_8
 'f'

	)

4486 
	#TC_IMPL_TC_CORBA_C⁄èöedSeq_9
 's'

	)

4487 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4492 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöedSeq_°ru˘
;

4493 
	#TC_CORBA_C⁄èöedSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöedSeq_°ru˘
)

	)

4495 
	#CORBA_C⁄èöedSeq__Æloc
(Ë((
CORBA_C⁄èöedSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_C⁄èöed
))

	)

4496 
	#CORBA_C⁄èöedSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_C⁄èöed
,(m),(d))

	)

4497 
	#CORBA_C⁄èöedSeq_Ælocbuf
(
l
Ë((
CORBA_C⁄èöed
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_C⁄èöed
, (l)))

	)

4499 #i‡!
deföed
(
_CORBA_Såu˘Membî_deföed
)

4500 
	#_CORBA_Såu˘Membî_deföed
 1

	)

4501 
CORBA_Såu˘Membî_ty≥
 
	tCORBA_Såu˘Membî
;

4502 
	sCORBA_Såu˘Membî_ty≥
 {

4503 
CORBA_Idítifõr
 
	g«me
;

4504 
CORBA_Ty≥Code
 
	gty≥
;

4505 
CORBA_IDLTy≥
 
	gty≥_def
;

4508 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Såu˘Membî_0
)

4509 
	#TC_IMPL_TC_CORBA_Såu˘Membî_0
 'c'

	)

4510 
	#TC_IMPL_TC_CORBA_Såu˘Membî_1
 'o'

	)

4511 
	#TC_IMPL_TC_CORBA_Såu˘Membî_2
 'r'

	)

4512 
	#TC_IMPL_TC_CORBA_Såu˘Membî_3
 'b'

	)

4513 
	#TC_IMPL_TC_CORBA_Såu˘Membî_4
 'a'

	)

4514 
	#TC_IMPL_TC_CORBA_Såu˘Membî_5
 '_'

	)

4515 
	#TC_IMPL_TC_CORBA_Såu˘Membî_6
 'd'

	)

4516 
	#TC_IMPL_TC_CORBA_Såu˘Membî_7
 'e'

	)

4517 
	#TC_IMPL_TC_CORBA_Såu˘Membî_8
 'f'

	)

4518 
	#TC_IMPL_TC_CORBA_Såu˘Membî_9
 's'

	)

4519 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4524 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Såu˘Membî_°ru˘
;

4525 
	#TC_CORBA_Såu˘Membî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Såu˘Membî_°ru˘
)

	)

4527 
	#CORBA_Såu˘Membî__Æloc
(Ë((
CORBA_Såu˘Membî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Såu˘Membî
))

	)

4528 
	#CORBA_Såu˘Membî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Såu˘Membî
,(m),(d))

	)

4530 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Såu˘Membî
)

4531 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Såu˘Membî
 1

	)

4532 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_0
 'c'

	)

4533 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_1
 'o'

	)

4534 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_2
 'r'

	)

4535 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_3
 'b'

	)

4536 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_4
 'a'

	)

4537 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_5
 '_'

	)

4538 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_6
 'd'

	)

4539 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_7
 'e'

	)

4540 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_8
 'f'

	)

4541 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Såu˘Membî_9
 's'

	)

4542 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Såu˘Membî_deföed
)

4543 
	#_CORBA_£quí˚_CORBA_Såu˘Membî_deföed
 1

	)

4544 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Såu˘Membî
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Såu˘Membî
;

4546 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_0
)

4547 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_0
 'c'

	)

4548 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_1
 'o'

	)

4549 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_2
 'r'

	)

4550 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_3
 'b'

	)

4551 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_4
 'a'

	)

4552 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_5
 '_'

	)

4553 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_6
 'd'

	)

4554 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_7
 'e'

	)

4555 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_8
 'f'

	)

4556 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Såu˘Membî_9
 's'

	)

4557 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4562 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Såu˘Membî_°ru˘
;

4563 
	#TC_CORBA_£quí˚_CORBA_Såu˘Membî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Såu˘Membî_°ru˘
)

	)

4565 
	#CORBA_£quí˚_CORBA_Såu˘Membî__Æloc
(Ë((
CORBA_£quí˚_CORBA_Såu˘Membî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
))

	)

4566 
	#CORBA_£quí˚_CORBA_Såu˘Membî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
,(m),(d))

	)

4567 
	#CORBA_£quí˚_CORBA_Såu˘Membî_Ælocbuf
(
l
Ë((
CORBA_Såu˘Membî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
, (l)))

	)

4568 
	#CORBA_£quí˚_CORBA_Såu˘Membî_Ælocbuf
(
l
Ë((
CORBA_Såu˘Membî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
, (l)))

	)

4570 #i‡!
deföed
(
_CORBA_Såu˘MembîSeq_deföed
)

4571 
	#_CORBA_Såu˘MembîSeq_deföed
 1

	)

4572 
CORBA_£quí˚_CORBA_Såu˘Membî
 
	tCORBA_Såu˘MembîSeq
;

4573 
	#CORBA_Såu˘MembîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Såu˘Membî_m¨shÆ
((x),(y),(z))

	)

4574 
	#CORBA_Såu˘MembîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Såu˘Membî_dem¨shÆ
((x),(y),(z),(i))

	)

4575 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Såu˘MembîSeq_0
)

4576 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_0
 'c'

	)

4577 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_1
 'o'

	)

4578 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_2
 'r'

	)

4579 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_3
 'b'

	)

4580 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_4
 'a'

	)

4581 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_5
 '_'

	)

4582 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_6
 'd'

	)

4583 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_7
 'e'

	)

4584 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_8
 'f'

	)

4585 
	#TC_IMPL_TC_CORBA_Såu˘MembîSeq_9
 's'

	)

4586 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4591 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Såu˘MembîSeq_°ru˘
;

4592 
	#TC_CORBA_Såu˘MembîSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Såu˘MembîSeq_°ru˘
)

	)

4594 
	#CORBA_Såu˘MembîSeq__Æloc
(Ë((
CORBA_Såu˘MembîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
))

	)

4595 
	#CORBA_Såu˘MembîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
,(m),(d))

	)

4596 
	#CORBA_Såu˘MembîSeq_Ælocbuf
(
l
Ë((
CORBA_Såu˘Membî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Såu˘Membî
, (l)))

	)

4598 #i‡!
deföed
(
_CORBA_Inôülizî_deföed
)

4599 
	#_CORBA_Inôülizî_deföed
 1

	)

4600 
CORBA_Inôülizî_ty≥
 
	tCORBA_Inôülizî
;

4601 
	sCORBA_Inôülizî_ty≥
 {

4602 
CORBA_Såu˘MembîSeq
 
	gmembîs
;

4603 
CORBA_Idítifõr
 
	g«me
;

4606 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Inôülizî_0
)

4607 
	#TC_IMPL_TC_CORBA_Inôülizî_0
 'c'

	)

4608 
	#TC_IMPL_TC_CORBA_Inôülizî_1
 'o'

	)

4609 
	#TC_IMPL_TC_CORBA_Inôülizî_2
 'r'

	)

4610 
	#TC_IMPL_TC_CORBA_Inôülizî_3
 'b'

	)

4611 
	#TC_IMPL_TC_CORBA_Inôülizî_4
 'a'

	)

4612 
	#TC_IMPL_TC_CORBA_Inôülizî_5
 '_'

	)

4613 
	#TC_IMPL_TC_CORBA_Inôülizî_6
 'd'

	)

4614 
	#TC_IMPL_TC_CORBA_Inôülizî_7
 'e'

	)

4615 
	#TC_IMPL_TC_CORBA_Inôülizî_8
 'f'

	)

4616 
	#TC_IMPL_TC_CORBA_Inôülizî_9
 's'

	)

4617 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4622 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Inôülizî_°ru˘
;

4623 
	#TC_CORBA_Inôülizî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Inôülizî_°ru˘
)

	)

4625 
	#CORBA_Inôülizî__Æloc
(Ë((
CORBA_Inôülizî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Inôülizî
))

	)

4626 
	#CORBA_Inôülizî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Inôülizî
,(m),(d))

	)

4628 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Inôülizî
)

4629 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Inôülizî
 1

	)

4630 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_0
 'c'

	)

4631 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_1
 'o'

	)

4632 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_2
 'r'

	)

4633 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_3
 'b'

	)

4634 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_4
 'a'

	)

4635 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_5
 '_'

	)

4636 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_6
 'd'

	)

4637 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_7
 'e'

	)

4638 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_8
 'f'

	)

4639 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Inôülizî_9
 's'

	)

4640 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Inôülizî_deföed
)

4641 
	#_CORBA_£quí˚_CORBA_Inôülizî_deföed
 1

	)

4642 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Inôülizî
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Inôülizî
;

4644 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_0
)

4645 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_0
 'c'

	)

4646 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_1
 'o'

	)

4647 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_2
 'r'

	)

4648 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_3
 'b'

	)

4649 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_4
 'a'

	)

4650 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_5
 '_'

	)

4651 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_6
 'd'

	)

4652 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_7
 'e'

	)

4653 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_8
 'f'

	)

4654 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Inôülizî_9
 's'

	)

4655 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4660 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Inôülizî_°ru˘
;

4661 
	#TC_CORBA_£quí˚_CORBA_Inôülizî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Inôülizî_°ru˘
)

	)

4663 
	#CORBA_£quí˚_CORBA_Inôülizî__Æloc
(Ë((
CORBA_£quí˚_CORBA_Inôülizî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
))

	)

4664 
	#CORBA_£quí˚_CORBA_Inôülizî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
,(m),(d))

	)

4665 
	#CORBA_£quí˚_CORBA_Inôülizî_Ælocbuf
(
l
Ë((
CORBA_Inôülizî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
, (l)))

	)

4666 
	#CORBA_£quí˚_CORBA_Inôülizî_Ælocbuf
(
l
Ë((
CORBA_Inôülizî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
, (l)))

	)

4668 #i‡!
deföed
(
_CORBA_InôülizîSeq_deföed
)

4669 
	#_CORBA_InôülizîSeq_deföed
 1

	)

4670 
CORBA_£quí˚_CORBA_Inôülizî
 
	tCORBA_InôülizîSeq
;

4671 
	#CORBA_InôülizîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Inôülizî_m¨shÆ
((x),(y),(z))

	)

4672 
	#CORBA_InôülizîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Inôülizî_dem¨shÆ
((x),(y),(z),(i))

	)

4673 #i‡!
deföed
(
TC_IMPL_TC_CORBA_InôülizîSeq_0
)

4674 
	#TC_IMPL_TC_CORBA_InôülizîSeq_0
 'c'

	)

4675 
	#TC_IMPL_TC_CORBA_InôülizîSeq_1
 'o'

	)

4676 
	#TC_IMPL_TC_CORBA_InôülizîSeq_2
 'r'

	)

4677 
	#TC_IMPL_TC_CORBA_InôülizîSeq_3
 'b'

	)

4678 
	#TC_IMPL_TC_CORBA_InôülizîSeq_4
 'a'

	)

4679 
	#TC_IMPL_TC_CORBA_InôülizîSeq_5
 '_'

	)

4680 
	#TC_IMPL_TC_CORBA_InôülizîSeq_6
 'd'

	)

4681 
	#TC_IMPL_TC_CORBA_InôülizîSeq_7
 'e'

	)

4682 
	#TC_IMPL_TC_CORBA_InôülizîSeq_8
 'f'

	)

4683 
	#TC_IMPL_TC_CORBA_InôülizîSeq_9
 's'

	)

4684 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4689 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_InôülizîSeq_°ru˘
;

4690 
	#TC_CORBA_InôülizîSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_InôülizîSeq_°ru˘
)

	)

4692 
	#CORBA_InôülizîSeq__Æloc
(Ë((
CORBA_InôülizîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
))

	)

4693 
	#CORBA_InôülizîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
,(m),(d))

	)

4694 
	#CORBA_InôülizîSeq_Ælocbuf
(
l
Ë((
CORBA_Inôülizî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Inôülizî
, (l)))

	)

4696 #i‡!
deföed
(
_CORBA_Uni⁄Membî_deföed
)

4697 
	#_CORBA_Uni⁄Membî_deföed
 1

	)

4698 
CORBA_Uni⁄Membî_ty≥
 
	tCORBA_Uni⁄Membî
;

4699 
	sCORBA_Uni⁄Membî_ty≥
 {

4700 
CORBA_Idítifõr
 
	g«me
;

4701 
CORBA_™y
 
	gœbñ
;

4702 
CORBA_Ty≥Code
 
	gty≥
;

4703 
CORBA_IDLTy≥
 
	gty≥_def
;

4706 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Uni⁄Membî_0
)

4707 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_0
 'c'

	)

4708 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_1
 'o'

	)

4709 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_2
 'r'

	)

4710 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_3
 'b'

	)

4711 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_4
 'a'

	)

4712 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_5
 '_'

	)

4713 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_6
 'd'

	)

4714 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_7
 'e'

	)

4715 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_8
 'f'

	)

4716 
	#TC_IMPL_TC_CORBA_Uni⁄Membî_9
 's'

	)

4717 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4722 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Uni⁄Membî_°ru˘
;

4723 
	#TC_CORBA_Uni⁄Membî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Uni⁄Membî_°ru˘
)

	)

4725 
	#CORBA_Uni⁄Membî__Æloc
(Ë((
CORBA_Uni⁄Membî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Uni⁄Membî
))

	)

4726 
	#CORBA_Uni⁄Membî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Uni⁄Membî
,(m),(d))

	)

4728 #i‡!
deföed
(
_CORBA_Ex˚±i⁄Des¸ùti⁄_deföed
)

4729 
	#_CORBA_Ex˚±i⁄Des¸ùti⁄_deföed
 1

	)

4730 
CORBA_Ex˚±i⁄Des¸ùti⁄_ty≥
 
	tCORBA_Ex˚±i⁄Des¸ùti⁄
;

4731 
	sCORBA_Ex˚±i⁄Des¸ùti⁄_ty≥
 {

4732 
CORBA_Idítifõr
 
	g«me
;

4733 
CORBA_Rïosô‹yId
 
	gid
;

4734 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

4735 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

4736 
CORBA_Ty≥Code
 
	gty≥
;

4739 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_0
)

4740 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_0
 'c'

	)

4741 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_1
 'o'

	)

4742 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_2
 'r'

	)

4743 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_3
 'b'

	)

4744 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_4
 'a'

	)

4745 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_5
 '_'

	)

4746 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_6
 'd'

	)

4747 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_7
 'e'

	)

4748 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_8
 'f'

	)

4749 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Des¸ùti⁄_9
 's'

	)

4750 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4755 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ex˚±i⁄Des¸ùti⁄_°ru˘
;

4756 
	#TC_CORBA_Ex˚±i⁄Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ex˚±i⁄Des¸ùti⁄_°ru˘
)

	)

4758 
	#CORBA_Ex˚±i⁄Des¸ùti⁄__Æloc
(Ë((
CORBA_Ex˚±i⁄Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Ex˚±i⁄Des¸ùti⁄
))

	)

4759 
	#CORBA_Ex˚±i⁄Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Ex˚±i⁄Des¸ùti⁄
,(m),(d))

	)

4761 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
)

4762 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
 1

	)

4763 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_0
 'c'

	)

4764 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_1
 'o'

	)

4765 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_2
 'r'

	)

4766 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_3
 'b'

	)

4767 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_4
 'a'

	)

4768 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_5
 '_'

	)

4769 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_6
 'd'

	)

4770 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_7
 'e'

	)

4771 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_8
 'f'

	)

4772 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_9
 's'

	)

4773 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_deföed
)

4774 
	#_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_deföed
 1

	)

4775 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Ex˚±i⁄Des¸ùti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
;

4777 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_0
)

4778 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_0
 'c'

	)

4779 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_1
 'o'

	)

4780 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_2
 'r'

	)

4781 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_3
 'b'

	)

4782 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_4
 'a'

	)

4783 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_5
 '_'

	)

4784 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_6
 'd'

	)

4785 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_7
 'e'

	)

4786 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_8
 'f'

	)

4787 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_9
 's'

	)

4788 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4793 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_°ru˘
;

4794 
	#TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_°ru˘
)

	)

4796 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄__Æloc
(Ë((
CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
))

	)

4797 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
,(m),(d))

	)

4798 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_Ex˚±i⁄Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
, (l)))

	)

4799 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_Ex˚±i⁄Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
, (l)))

	)

4801 #i‡!
deföed
(
_CORBA_ExcDes¸ùti⁄Seq_deföed
)

4802 
	#_CORBA_ExcDes¸ùti⁄Seq_deföed
 1

	)

4803 
CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
 
	tCORBA_ExcDes¸ùti⁄Seq
;

4804 
	#CORBA_ExcDes¸ùti⁄Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_m¨shÆ
((x),(y),(z))

	)

4805 
	#CORBA_ExcDes¸ùti⁄Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

4806 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_0
)

4807 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_0
 'c'

	)

4808 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_1
 'o'

	)

4809 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_2
 'r'

	)

4810 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_3
 'b'

	)

4811 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_4
 'a'

	)

4812 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_5
 '_'

	)

4813 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_6
 'd'

	)

4814 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_7
 'e'

	)

4815 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_8
 'f'

	)

4816 
	#TC_IMPL_TC_CORBA_ExcDes¸ùti⁄Seq_9
 's'

	)

4817 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4822 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExcDes¸ùti⁄Seq_°ru˘
;

4823 
	#TC_CORBA_ExcDes¸ùti⁄Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExcDes¸ùti⁄Seq_°ru˘
)

	)

4825 
	#CORBA_ExcDes¸ùti⁄Seq__Æloc
(Ë((
CORBA_ExcDes¸ùti⁄Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
))

	)

4826 
	#CORBA_ExcDes¸ùti⁄Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
,(m),(d))

	)

4827 
	#CORBA_ExcDes¸ùti⁄Seq_Ælocbuf
(
l
Ë((
CORBA_Ex˚±i⁄Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Des¸ùti⁄
, (l)))

	)

4829 #i‡!
deföed
(
_CORBA_ExtInôülizî_deföed
)

4830 
	#_CORBA_ExtInôülizî_deföed
 1

	)

4831 
CORBA_ExtInôülizî_ty≥
 
	tCORBA_ExtInôülizî
;

4832 
	sCORBA_ExtInôülizî_ty≥
 {

4833 
CORBA_Såu˘MembîSeq
 
	gmembîs
;

4834 
CORBA_ExcDes¸ùti⁄Seq
 
	gex˚±i⁄s
;

4835 
CORBA_Idítifõr
 
	g«me
;

4838 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtInôülizî_0
)

4839 
	#TC_IMPL_TC_CORBA_ExtInôülizî_0
 'c'

	)

4840 
	#TC_IMPL_TC_CORBA_ExtInôülizî_1
 'o'

	)

4841 
	#TC_IMPL_TC_CORBA_ExtInôülizî_2
 'r'

	)

4842 
	#TC_IMPL_TC_CORBA_ExtInôülizî_3
 'b'

	)

4843 
	#TC_IMPL_TC_CORBA_ExtInôülizî_4
 'a'

	)

4844 
	#TC_IMPL_TC_CORBA_ExtInôülizî_5
 '_'

	)

4845 
	#TC_IMPL_TC_CORBA_ExtInôülizî_6
 'd'

	)

4846 
	#TC_IMPL_TC_CORBA_ExtInôülizî_7
 'e'

	)

4847 
	#TC_IMPL_TC_CORBA_ExtInôülizî_8
 'f'

	)

4848 
	#TC_IMPL_TC_CORBA_ExtInôülizî_9
 's'

	)

4849 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4854 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtInôülizî_°ru˘
;

4855 
	#TC_CORBA_ExtInôülizî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtInôülizî_°ru˘
)

	)

4857 
	#CORBA_ExtInôülizî__Æloc
(Ë((
CORBA_ExtInôülizî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_ExtInôülizî
))

	)

4858 
	#CORBA_ExtInôülizî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_ExtInôülizî
,(m),(d))

	)

4860 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ExtInôülizî
)

4861 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ExtInôülizî
 1

	)

4862 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_0
 'c'

	)

4863 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_1
 'o'

	)

4864 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_2
 'r'

	)

4865 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_3
 'b'

	)

4866 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_4
 'a'

	)

4867 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_5
 '_'

	)

4868 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_6
 'd'

	)

4869 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_7
 'e'

	)

4870 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_8
 'f'

	)

4871 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtInôülizî_9
 's'

	)

4872 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ExtInôülizî_deföed
)

4873 
	#_CORBA_£quí˚_CORBA_ExtInôülizî_deföed
 1

	)

4874 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_ExtInôülizî
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_ExtInôülizî
;

4876 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_0
)

4877 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_0
 'c'

	)

4878 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_1
 'o'

	)

4879 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_2
 'r'

	)

4880 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_3
 'b'

	)

4881 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_4
 'a'

	)

4882 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_5
 '_'

	)

4883 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_6
 'd'

	)

4884 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_7
 'e'

	)

4885 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_8
 'f'

	)

4886 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtInôülizî_9
 's'

	)

4887 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4892 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ExtInôülizî_°ru˘
;

4893 
	#TC_CORBA_£quí˚_CORBA_ExtInôülizî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ExtInôülizî_°ru˘
)

	)

4895 
	#CORBA_£quí˚_CORBA_ExtInôülizî__Æloc
(Ë((
CORBA_£quí˚_CORBA_ExtInôülizî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
))

	)

4896 
	#CORBA_£quí˚_CORBA_ExtInôülizî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
,(m),(d))

	)

4897 
	#CORBA_£quí˚_CORBA_ExtInôülizî_Ælocbuf
(
l
Ë((
CORBA_ExtInôülizî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
, (l)))

	)

4898 
	#CORBA_£quí˚_CORBA_ExtInôülizî_Ælocbuf
(
l
Ë((
CORBA_ExtInôülizî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
, (l)))

	)

4900 #i‡!
deföed
(
_CORBA_ExtInôülizîSeq_deföed
)

4901 
	#_CORBA_ExtInôülizîSeq_deföed
 1

	)

4902 
CORBA_£quí˚_CORBA_ExtInôülizî
 
	tCORBA_ExtInôülizîSeq
;

4903 
	#CORBA_ExtInôülizîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ExtInôülizî_m¨shÆ
((x),(y),(z))

	)

4904 
	#CORBA_ExtInôülizîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ExtInôülizî_dem¨shÆ
((x),(y),(z),(i))

	)

4905 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtInôülizîSeq_0
)

4906 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_0
 'c'

	)

4907 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_1
 'o'

	)

4908 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_2
 'r'

	)

4909 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_3
 'b'

	)

4910 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_4
 'a'

	)

4911 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_5
 '_'

	)

4912 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_6
 'd'

	)

4913 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_7
 'e'

	)

4914 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_8
 'f'

	)

4915 
	#TC_IMPL_TC_CORBA_ExtInôülizîSeq_9
 's'

	)

4916 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4921 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtInôülizîSeq_°ru˘
;

4922 
	#TC_CORBA_ExtInôülizîSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtInôülizîSeq_°ru˘
)

	)

4924 
	#CORBA_ExtInôülizîSeq__Æloc
(Ë((
CORBA_ExtInôülizîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
))

	)

4925 
	#CORBA_ExtInôülizîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
,(m),(d))

	)

4926 
	#CORBA_ExtInôülizîSeq_Ælocbuf
(
l
Ë((
CORBA_ExtInôülizî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtInôülizî
, (l)))

	)

4928 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Uni⁄Membî
)

4929 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Uni⁄Membî
 1

	)

4930 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_0
 'c'

	)

4931 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_1
 'o'

	)

4932 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_2
 'r'

	)

4933 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_3
 'b'

	)

4934 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_4
 'a'

	)

4935 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_5
 '_'

	)

4936 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_6
 'd'

	)

4937 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_7
 'e'

	)

4938 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_8
 'f'

	)

4939 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Uni⁄Membî_9
 's'

	)

4940 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Uni⁄Membî_deföed
)

4941 
	#_CORBA_£quí˚_CORBA_Uni⁄Membî_deföed
 1

	)

4942 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Uni⁄Membî
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Uni⁄Membî
;

4944 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_0
)

4945 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_0
 'c'

	)

4946 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_1
 'o'

	)

4947 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_2
 'r'

	)

4948 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_3
 'b'

	)

4949 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_4
 'a'

	)

4950 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_5
 '_'

	)

4951 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_6
 'd'

	)

4952 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_7
 'e'

	)

4953 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_8
 'f'

	)

4954 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Uni⁄Membî_9
 's'

	)

4955 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4960 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Uni⁄Membî_°ru˘
;

4961 
	#TC_CORBA_£quí˚_CORBA_Uni⁄Membî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Uni⁄Membî_°ru˘
)

	)

4963 
	#CORBA_£quí˚_CORBA_Uni⁄Membî__Æloc
(Ë((
CORBA_£quí˚_CORBA_Uni⁄Membî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
))

	)

4964 
	#CORBA_£quí˚_CORBA_Uni⁄Membî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
,(m),(d))

	)

4965 
	#CORBA_£quí˚_CORBA_Uni⁄Membî_Ælocbuf
(
l
Ë((
CORBA_Uni⁄Membî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
, (l)))

	)

4966 
	#CORBA_£quí˚_CORBA_Uni⁄Membî_Ælocbuf
(
l
Ë((
CORBA_Uni⁄Membî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
, (l)))

	)

4968 #i‡!
deföed
(
_CORBA_Uni⁄MembîSeq_deföed
)

4969 
	#_CORBA_Uni⁄MembîSeq_deföed
 1

	)

4970 
CORBA_£quí˚_CORBA_Uni⁄Membî
 
	tCORBA_Uni⁄MembîSeq
;

4971 
	#CORBA_Uni⁄MembîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Uni⁄Membî_m¨shÆ
((x),(y),(z))

	)

4972 
	#CORBA_Uni⁄MembîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Uni⁄Membî_dem¨shÆ
((x),(y),(z),(i))

	)

4973 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Uni⁄MembîSeq_0
)

4974 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_0
 'c'

	)

4975 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_1
 'o'

	)

4976 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_2
 'r'

	)

4977 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_3
 'b'

	)

4978 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_4
 'a'

	)

4979 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_5
 '_'

	)

4980 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_6
 'd'

	)

4981 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_7
 'e'

	)

4982 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_8
 'f'

	)

4983 
	#TC_IMPL_TC_CORBA_Uni⁄MembîSeq_9
 's'

	)

4984 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


4989 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Uni⁄MembîSeq_°ru˘
;

4990 
	#TC_CORBA_Uni⁄MembîSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Uni⁄MembîSeq_°ru˘
)

	)

4992 
	#CORBA_Uni⁄MembîSeq__Æloc
(Ë((
CORBA_Uni⁄MembîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
))

	)

4993 
	#CORBA_Uni⁄MembîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
,(m),(d))

	)

4994 
	#CORBA_Uni⁄MembîSeq_Ælocbuf
(
l
Ë((
CORBA_Uni⁄Membî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Uni⁄Membî
, (l)))

	)

4996 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

4997 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

4998 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

4999 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

5000 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

5001 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

5002 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

5003 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

5004 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

5005 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

5006 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

5007 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

5008 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

5009 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

5010 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

5012 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

5013 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

5014 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

5015 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

5016 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

5017 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

5018 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

5019 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

5020 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

5021 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

5022 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

5023 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5028 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

5029 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

5031 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

5032 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

5033 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

5034 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

5036 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Idítifõr
)

5037 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Idítifõr
 1

	)

5038 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_0
 'c'

	)

5039 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_1
 'o'

	)

5040 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_2
 'r'

	)

5041 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_3
 'b'

	)

5042 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_4
 'a'

	)

5043 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_5
 '_'

	)

5044 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_6
 'd'

	)

5045 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_7
 'e'

	)

5046 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_8
 'f'

	)

5047 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Idítifõr_9
 's'

	)

5048 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Idítifõr_deföed
)

5049 
	#_CORBA_£quí˚_CORBA_Idítifõr_deföed
 1

	)

5050 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_£quí˚_CORBA_Idítifõr
;

5052 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_0
)

5053 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_0
 'c'

	)

5054 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_1
 'o'

	)

5055 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_2
 'r'

	)

5056 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_3
 'b'

	)

5057 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_4
 'a'

	)

5058 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_5
 '_'

	)

5059 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_6
 'd'

	)

5060 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_7
 'e'

	)

5061 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_8
 'f'

	)

5062 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Idítifõr_9
 's'

	)

5063 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5068 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Idítifõr_°ru˘
;

5069 
	#TC_CORBA_£quí˚_CORBA_Idítifõr
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Idítifõr_°ru˘
)

	)

5071 
	#CORBA_£quí˚_CORBA_Idítifõr__Æloc
 
CORBA_£quí˚_CORBA_°rög__Æloc


	)

5072 
	#CORBA_£quí˚_CORBA_Idítifõr__‰ìkids
 
CORBA_£quí˚_CORBA_°rög__‰ìkids


	)

5073 
	#CORBA_£quí˚_CORBA_Idítifõr_Ælocbuf
 
CORBA_£quí˚_CORBA_°rög_Ælocbuf


	)

5074 
	#CORBA_£quí˚_CORBA_Idítifõr_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

5075 
	#CORBA_£quí˚_CORBA_Idítifõr_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

5077 #i‡!
deföed
(
_CORBA_EnumMembîSeq_deföed
)

5078 
	#_CORBA_EnumMembîSeq_deföed
 1

	)

5079 
CORBA_£quí˚_CORBA_Idítifõr
 
	tCORBA_EnumMembîSeq
;

5080 
	#CORBA_EnumMembîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Idítifõr_m¨shÆ
((x),(y),(z))

	)

5081 
	#CORBA_EnumMembîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Idítifõr_dem¨shÆ
((x),(y),(z),(i))

	)

5082 #i‡!
deföed
(
TC_IMPL_TC_CORBA_EnumMembîSeq_0
)

5083 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_0
 'c'

	)

5084 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_1
 'o'

	)

5085 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_2
 'r'

	)

5086 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_3
 'b'

	)

5087 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_4
 'a'

	)

5088 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_5
 '_'

	)

5089 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_6
 'd'

	)

5090 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_7
 'e'

	)

5091 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_8
 'f'

	)

5092 
	#TC_IMPL_TC_CORBA_EnumMembîSeq_9
 's'

	)

5093 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5098 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_EnumMembîSeq_°ru˘
;

5099 
	#TC_CORBA_EnumMembîSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_EnumMembîSeq_°ru˘
)

	)

5101 
	#CORBA_EnumMembîSeq__Æloc
(Ë((
CORBA_EnumMembîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Idítifõr
))

	)

5102 
	#CORBA_EnumMembîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Idítifõr
,(m),(d))

	)

5103 
	#CORBA_EnumMembîSeq_Ælocbuf
(
l
Ë((
CORBA_Idítifõr
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Idítifõr
, (l)))

	)

5105 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄èöî
Ë&& !deföed(
_CORBA_C⁄èöî_deföed
)

5106 
	#ORBIT_DECL_CORBA_C⁄èöî
 1

	)

5107 
	#_CORBA_C⁄èöî_deföed
 1

	)

5108 
	#CORBA_C⁄èöî__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5109 
CORBA_Obje˘
 
	tCORBA_C⁄èöî
;

5110 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄èöî__˛assid
;

5111 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöî_0
)

5112 
	#TC_IMPL_TC_CORBA_C⁄èöî_0
 'c'

	)

5113 
	#TC_IMPL_TC_CORBA_C⁄èöî_1
 'o'

	)

5114 
	#TC_IMPL_TC_CORBA_C⁄èöî_2
 'r'

	)

5115 
	#TC_IMPL_TC_CORBA_C⁄èöî_3
 'b'

	)

5116 
	#TC_IMPL_TC_CORBA_C⁄èöî_4
 'a'

	)

5117 
	#TC_IMPL_TC_CORBA_C⁄èöî_5
 '_'

	)

5118 
	#TC_IMPL_TC_CORBA_C⁄èöî_6
 'd'

	)

5119 
	#TC_IMPL_TC_CORBA_C⁄èöî_7
 'e'

	)

5120 
	#TC_IMPL_TC_CORBA_C⁄èöî_8
 'f'

	)

5121 
	#TC_IMPL_TC_CORBA_C⁄èöî_9
 's'

	)

5122 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5127 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöî_°ru˘
;

5128 
	#TC_CORBA_C⁄èöî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöî_°ru˘
)

	)

5131 #i‡!
deföed
(
_CORBA_C⁄èöî_Des¸ùti⁄_deföed
)

5132 
	#_CORBA_C⁄èöî_Des¸ùti⁄_deföed
 1

	)

5133 
CORBA_C⁄èöî_Des¸ùti⁄_ty≥
 
	tCORBA_C⁄èöî_Des¸ùti⁄
;

5134 
	sCORBA_C⁄èöî_Des¸ùti⁄_ty≥
 {

5135 
CORBA_C⁄èöed
 
	gc⁄èöed_obje˘
;

5136 
CORBA_Deföôi⁄Köd
 
	gköd
;

5137 
CORBA_™y
 
	gvÆue
;

5140 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_0
)

5141 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_0
 'c'

	)

5142 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_1
 'o'

	)

5143 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_2
 'r'

	)

5144 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_3
 'b'

	)

5145 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_4
 'a'

	)

5146 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_5
 '_'

	)

5147 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_6
 'd'

	)

5148 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_7
 'e'

	)

5149 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_8
 'f'

	)

5150 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄_9
 's'

	)

5151 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5156 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöî_Des¸ùti⁄_°ru˘
;

5157 
	#TC_CORBA_C⁄èöî_Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöî_Des¸ùti⁄_°ru˘
)

	)

5159 
	#CORBA_C⁄èöî_Des¸ùti⁄__Æloc
(Ë((
CORBA_C⁄èöî_Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_C⁄èöî_Des¸ùti⁄
))

	)

5160 
	#CORBA_C⁄èöî_Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_C⁄èöî_Des¸ùti⁄
,(m),(d))

	)

5162 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
)

5163 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
 1

	)

5164 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_0
 'c'

	)

5165 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_1
 'o'

	)

5166 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_2
 'r'

	)

5167 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_3
 'b'

	)

5168 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_4
 'a'

	)

5169 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_5
 '_'

	)

5170 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_6
 'd'

	)

5171 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_7
 'e'

	)

5172 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_8
 'f'

	)

5173 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_9
 's'

	)

5174 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_deföed
)

5175 
	#_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_deföed
 1

	)

5176 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_C⁄èöî_Des¸ùti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
;

5178 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_0
)

5179 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_0
 'c'

	)

5180 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_1
 'o'

	)

5181 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_2
 'r'

	)

5182 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_3
 'b'

	)

5183 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_4
 'a'

	)

5184 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_5
 '_'

	)

5185 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_6
 'd'

	)

5186 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_7
 'e'

	)

5187 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_8
 'f'

	)

5188 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_9
 's'

	)

5189 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5194 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_°ru˘
;

5195 
	#TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_°ru˘
)

	)

5197 
	#CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄__Æloc
(Ë((
CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
))

	)

5198 
	#CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
,(m),(d))

	)

5199 
	#CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_C⁄èöî_Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
, (l)))

	)

5200 
	#CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_C⁄èöî_Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
, (l)))

	)

5202 #i‡!
deföed
(
_CORBA_C⁄èöî_Des¸ùti⁄Seq_deföed
)

5203 
	#_CORBA_C⁄èöî_Des¸ùti⁄Seq_deföed
 1

	)

5204 
CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
 
	tCORBA_C⁄èöî_Des¸ùti⁄Seq
;

5205 
	#CORBA_C⁄èöî_Des¸ùti⁄Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_m¨shÆ
((x),(y),(z))

	)

5206 
	#CORBA_C⁄èöî_Des¸ùti⁄Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

5207 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_0
)

5208 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_0
 'c'

	)

5209 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_1
 'o'

	)

5210 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_2
 'r'

	)

5211 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_3
 'b'

	)

5212 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_4
 'a'

	)

5213 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_5
 '_'

	)

5214 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_6
 'd'

	)

5215 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_7
 'e'

	)

5216 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_8
 'f'

	)

5217 
	#TC_IMPL_TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_9
 's'

	)

5218 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5223 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_°ru˘
;

5224 
	#TC_CORBA_C⁄èöî_Des¸ùti⁄Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄èöî_Des¸ùti⁄Seq_°ru˘
)

	)

5226 
	#CORBA_C⁄èöî_Des¸ùti⁄Seq__Æloc
(Ë((
CORBA_C⁄èöî_Des¸ùti⁄Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
))

	)

5227 
	#CORBA_C⁄èöî_Des¸ùti⁄Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
,(m),(d))

	)

5228 
	#CORBA_C⁄èöî_Des¸ùti⁄Seq_Ælocbuf
(
l
Ë((
CORBA_C⁄èöî_Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_C⁄èöî_Des¸ùti⁄
, (l)))

	)

5230 #i‡!
deföed
(
ORBIT_DECL_CORBA_IDLTy≥
Ë&& !deföed(
_CORBA_IDLTy≥_deföed
)

5231 
	#ORBIT_DECL_CORBA_IDLTy≥
 1

	)

5232 
	#_CORBA_IDLTy≥_deföed
 1

	)

5233 
	#CORBA_IDLTy≥__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5234 
CORBA_Obje˘
 
	tCORBA_IDLTy≥
;

5235 
CORBA_unsig√d_l⁄g
 
CORBA_IDLTy≥__˛assid
;

5236 #i‡!
deföed
(
TC_IMPL_TC_CORBA_IDLTy≥_0
)

5237 
	#TC_IMPL_TC_CORBA_IDLTy≥_0
 'c'

	)

5238 
	#TC_IMPL_TC_CORBA_IDLTy≥_1
 'o'

	)

5239 
	#TC_IMPL_TC_CORBA_IDLTy≥_2
 'r'

	)

5240 
	#TC_IMPL_TC_CORBA_IDLTy≥_3
 'b'

	)

5241 
	#TC_IMPL_TC_CORBA_IDLTy≥_4
 'a'

	)

5242 
	#TC_IMPL_TC_CORBA_IDLTy≥_5
 '_'

	)

5243 
	#TC_IMPL_TC_CORBA_IDLTy≥_6
 'd'

	)

5244 
	#TC_IMPL_TC_CORBA_IDLTy≥_7
 'e'

	)

5245 
	#TC_IMPL_TC_CORBA_IDLTy≥_8
 'f'

	)

5246 
	#TC_IMPL_TC_CORBA_IDLTy≥_9
 's'

	)

5247 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5252 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_IDLTy≥_°ru˘
;

5253 
	#TC_CORBA_IDLTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_IDLTy≥_°ru˘
)

	)

5256 #i‡!
deföed
(
_CORBA_PrimôiveKöd_deföed
)

5257 
	#_CORBA_PrimôiveKöd_deföed
 1

	)

5259 
	gCORBA_pk_nuŒ
,

5260 
	gCORBA_pk_void
,

5261 
	gCORBA_pk_sh‹t
,

5262 
	gCORBA_pk_l⁄g
,

5263 
	gCORBA_pk_ush‹t
,

5264 
	gCORBA_pk_ul⁄g
,

5265 
	gCORBA_pk_Êﬂt
,

5266 
	gCORBA_pk_doubÀ
,

5267 
	gCORBA_pk_boﬁón
,

5268 
	gCORBA_pk_ch¨
,

5269 
	gCORBA_pk_o˘ë
,

5270 
	gCORBA_pk_™y
,

5271 
	gCORBA_pk_Ty≥Code
,

5272 
	gCORBA_pk_PröcùÆ
,

5273 
	gCORBA_pk_°rög
,

5274 
	gCORBA_pk_objªf
,

5275 
	gCORBA_pk_l⁄gl⁄g
,

5276 
	gCORBA_pk_ul⁄gl⁄g
,

5277 
	gCORBA_pk_l⁄gdoubÀ
,

5278 
	gCORBA_pk_wch¨
,

5279 
	gCORBA_pk_w°rög
,

5280 
	gCORBA_pk_vÆue_ba£


5281 } 
	tCORBA_PrimôiveKöd
;

5282 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PrimôiveKöd_0
)

5283 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_0
 'c'

	)

5284 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_1
 'o'

	)

5285 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_2
 'r'

	)

5286 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_3
 'b'

	)

5287 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_4
 'a'

	)

5288 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_5
 '_'

	)

5289 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_6
 'd'

	)

5290 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_7
 'e'

	)

5291 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_8
 'f'

	)

5292 
	#TC_IMPL_TC_CORBA_PrimôiveKöd_9
 's'

	)

5293 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5298 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PrimôiveKöd_°ru˘
;

5299 
	#TC_CORBA_PrimôiveKöd
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PrimôiveKöd_°ru˘
)

	)

5302 #i‡!
deföed
(
ORBIT_DECL_CORBA_Rïosô‹y
Ë&& !deföed(
_CORBA_Rïosô‹y_deföed
)

5303 
	#ORBIT_DECL_CORBA_Rïosô‹y
 1

	)

5304 
	#_CORBA_Rïosô‹y_deföed
 1

	)

5305 
	#CORBA_Rïosô‹y__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5306 
CORBA_Obje˘
 
	tCORBA_Rïosô‹y
;

5307 
CORBA_unsig√d_l⁄g
 
CORBA_Rïosô‹y__˛assid
;

5308 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Rïosô‹y_0
)

5309 
	#TC_IMPL_TC_CORBA_Rïosô‹y_0
 'c'

	)

5310 
	#TC_IMPL_TC_CORBA_Rïosô‹y_1
 'o'

	)

5311 
	#TC_IMPL_TC_CORBA_Rïosô‹y_2
 'r'

	)

5312 
	#TC_IMPL_TC_CORBA_Rïosô‹y_3
 'b'

	)

5313 
	#TC_IMPL_TC_CORBA_Rïosô‹y_4
 'a'

	)

5314 
	#TC_IMPL_TC_CORBA_Rïosô‹y_5
 '_'

	)

5315 
	#TC_IMPL_TC_CORBA_Rïosô‹y_6
 'd'

	)

5316 
	#TC_IMPL_TC_CORBA_Rïosô‹y_7
 'e'

	)

5317 
	#TC_IMPL_TC_CORBA_Rïosô‹y_8
 'f'

	)

5318 
	#TC_IMPL_TC_CORBA_Rïosô‹y_9
 's'

	)

5319 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5324 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Rïosô‹y_°ru˘
;

5325 
	#TC_CORBA_Rïosô‹y
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Rïosô‹y_°ru˘
)

	)

5328 #i‡!
deföed
(
ORBIT_DECL_CORBA_ModuÀDef
Ë&& !deföed(
_CORBA_ModuÀDef_deföed
)

5329 
	#ORBIT_DECL_CORBA_ModuÀDef
 1

	)

5330 
	#_CORBA_ModuÀDef_deföed
 1

	)

5331 
	#CORBA_ModuÀDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5332 
CORBA_Obje˘
 
	tCORBA_ModuÀDef
;

5333 
CORBA_unsig√d_l⁄g
 
CORBA_ModuÀDef__˛assid
;

5334 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ModuÀDef_0
)

5335 
	#TC_IMPL_TC_CORBA_ModuÀDef_0
 'c'

	)

5336 
	#TC_IMPL_TC_CORBA_ModuÀDef_1
 'o'

	)

5337 
	#TC_IMPL_TC_CORBA_ModuÀDef_2
 'r'

	)

5338 
	#TC_IMPL_TC_CORBA_ModuÀDef_3
 'b'

	)

5339 
	#TC_IMPL_TC_CORBA_ModuÀDef_4
 'a'

	)

5340 
	#TC_IMPL_TC_CORBA_ModuÀDef_5
 '_'

	)

5341 
	#TC_IMPL_TC_CORBA_ModuÀDef_6
 'd'

	)

5342 
	#TC_IMPL_TC_CORBA_ModuÀDef_7
 'e'

	)

5343 
	#TC_IMPL_TC_CORBA_ModuÀDef_8
 'f'

	)

5344 
	#TC_IMPL_TC_CORBA_ModuÀDef_9
 's'

	)

5345 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5350 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ModuÀDef_°ru˘
;

5351 
	#TC_CORBA_ModuÀDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ModuÀDef_°ru˘
)

	)

5354 #i‡!
deföed
(
_CORBA_ModuÀDes¸ùti⁄_deföed
)

5355 
	#_CORBA_ModuÀDes¸ùti⁄_deföed
 1

	)

5356 
CORBA_ModuÀDes¸ùti⁄_ty≥
 
	tCORBA_ModuÀDes¸ùti⁄
;

5357 
	sCORBA_ModuÀDes¸ùti⁄_ty≥
 {

5358 
CORBA_Idítifõr
 
	g«me
;

5359 
CORBA_Rïosô‹yId
 
	gid
;

5360 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

5361 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

5364 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_0
)

5365 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_0
 'c'

	)

5366 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_1
 'o'

	)

5367 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_2
 'r'

	)

5368 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_3
 'b'

	)

5369 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_4
 'a'

	)

5370 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_5
 '_'

	)

5371 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_6
 'd'

	)

5372 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_7
 'e'

	)

5373 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_8
 'f'

	)

5374 
	#TC_IMPL_TC_CORBA_ModuÀDes¸ùti⁄_9
 's'

	)

5375 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5380 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ModuÀDes¸ùti⁄_°ru˘
;

5381 
	#TC_CORBA_ModuÀDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ModuÀDes¸ùti⁄_°ru˘
)

	)

5383 
	#CORBA_ModuÀDes¸ùti⁄__Æloc
(Ë((
CORBA_ModuÀDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_ModuÀDes¸ùti⁄
))

	)

5384 
	#CORBA_ModuÀDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_ModuÀDes¸ùti⁄
,(m),(d))

	)

5386 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄°™tDef
Ë&& !deföed(
_CORBA_C⁄°™tDef_deföed
)

5387 
	#ORBIT_DECL_CORBA_C⁄°™tDef
 1

	)

5388 
	#_CORBA_C⁄°™tDef_deföed
 1

	)

5389 
	#CORBA_C⁄°™tDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5390 
CORBA_Obje˘
 
	tCORBA_C⁄°™tDef
;

5391 
CORBA_unsig√d_l⁄g
 
CORBA_C⁄°™tDef__˛assid
;

5392 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄°™tDef_0
)

5393 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_0
 'c'

	)

5394 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_1
 'o'

	)

5395 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_2
 'r'

	)

5396 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_3
 'b'

	)

5397 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_4
 'a'

	)

5398 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_5
 '_'

	)

5399 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_6
 'd'

	)

5400 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_7
 'e'

	)

5401 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_8
 'f'

	)

5402 
	#TC_IMPL_TC_CORBA_C⁄°™tDef_9
 's'

	)

5403 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5408 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄°™tDef_°ru˘
;

5409 
	#TC_CORBA_C⁄°™tDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄°™tDef_°ru˘
)

	)

5412 #i‡!
deföed
(
_CORBA_C⁄°™tDes¸ùti⁄_deföed
)

5413 
	#_CORBA_C⁄°™tDes¸ùti⁄_deföed
 1

	)

5414 
CORBA_C⁄°™tDes¸ùti⁄_ty≥
 
	tCORBA_C⁄°™tDes¸ùti⁄
;

5415 
	sCORBA_C⁄°™tDes¸ùti⁄_ty≥
 {

5416 
CORBA_Idítifõr
 
	g«me
;

5417 
CORBA_Rïosô‹yId
 
	gid
;

5418 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

5419 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

5420 
CORBA_Ty≥Code
 
	gty≥
;

5421 
CORBA_™y
 
	gvÆue
;

5424 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_0
)

5425 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_0
 'c'

	)

5426 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_1
 'o'

	)

5427 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_2
 'r'

	)

5428 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_3
 'b'

	)

5429 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_4
 'a'

	)

5430 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_5
 '_'

	)

5431 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_6
 'd'

	)

5432 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_7
 'e'

	)

5433 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_8
 'f'

	)

5434 
	#TC_IMPL_TC_CORBA_C⁄°™tDes¸ùti⁄_9
 's'

	)

5435 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5440 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄°™tDes¸ùti⁄_°ru˘
;

5441 
	#TC_CORBA_C⁄°™tDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄°™tDes¸ùti⁄_°ru˘
)

	)

5443 
	#CORBA_C⁄°™tDes¸ùti⁄__Æloc
(Ë((
CORBA_C⁄°™tDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_C⁄°™tDes¸ùti⁄
))

	)

5444 
	#CORBA_C⁄°™tDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_C⁄°™tDes¸ùti⁄
,(m),(d))

	)

5446 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ty≥defDef
Ë&& !deföed(
_CORBA_Ty≥defDef_deföed
)

5447 
	#ORBIT_DECL_CORBA_Ty≥defDef
 1

	)

5448 
	#_CORBA_Ty≥defDef_deföed
 1

	)

5449 
	#CORBA_Ty≥defDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5450 
CORBA_Obje˘
 
	tCORBA_Ty≥defDef
;

5451 
CORBA_unsig√d_l⁄g
 
CORBA_Ty≥defDef__˛assid
;

5452 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥defDef_0
)

5453 
	#TC_IMPL_TC_CORBA_Ty≥defDef_0
 'c'

	)

5454 
	#TC_IMPL_TC_CORBA_Ty≥defDef_1
 'o'

	)

5455 
	#TC_IMPL_TC_CORBA_Ty≥defDef_2
 'r'

	)

5456 
	#TC_IMPL_TC_CORBA_Ty≥defDef_3
 'b'

	)

5457 
	#TC_IMPL_TC_CORBA_Ty≥defDef_4
 'a'

	)

5458 
	#TC_IMPL_TC_CORBA_Ty≥defDef_5
 '_'

	)

5459 
	#TC_IMPL_TC_CORBA_Ty≥defDef_6
 'd'

	)

5460 
	#TC_IMPL_TC_CORBA_Ty≥defDef_7
 'e'

	)

5461 
	#TC_IMPL_TC_CORBA_Ty≥defDef_8
 'f'

	)

5462 
	#TC_IMPL_TC_CORBA_Ty≥defDef_9
 's'

	)

5463 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5468 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥defDef_°ru˘
;

5469 
	#TC_CORBA_Ty≥defDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥defDef_°ru˘
)

	)

5472 #i‡!
deföed
(
_CORBA_Ty≥Des¸ùti⁄_deföed
)

5473 
	#_CORBA_Ty≥Des¸ùti⁄_deföed
 1

	)

5474 
CORBA_Ty≥Des¸ùti⁄_ty≥
 
	tCORBA_Ty≥Des¸ùti⁄
;

5475 
	sCORBA_Ty≥Des¸ùti⁄_ty≥
 {

5476 
CORBA_Idítifõr
 
	g«me
;

5477 
CORBA_Rïosô‹yId
 
	gid
;

5478 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

5479 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

5480 
CORBA_Ty≥Code
 
	gty≥
;

5483 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_0
)

5484 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_0
 'c'

	)

5485 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_1
 'o'

	)

5486 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_2
 'r'

	)

5487 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_3
 'b'

	)

5488 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_4
 'a'

	)

5489 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_5
 '_'

	)

5490 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_6
 'd'

	)

5491 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_7
 'e'

	)

5492 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_8
 'f'

	)

5493 
	#TC_IMPL_TC_CORBA_Ty≥Des¸ùti⁄_9
 's'

	)

5494 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5499 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥Des¸ùti⁄_°ru˘
;

5500 
	#TC_CORBA_Ty≥Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥Des¸ùti⁄_°ru˘
)

	)

5502 
	#CORBA_Ty≥Des¸ùti⁄__Æloc
(Ë((
CORBA_Ty≥Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Ty≥Des¸ùti⁄
))

	)

5503 
	#CORBA_Ty≥Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Ty≥Des¸ùti⁄
,(m),(d))

	)

5505 #i‡!
deföed
(
ORBIT_DECL_CORBA_Såu˘Def
Ë&& !deföed(
_CORBA_Såu˘Def_deföed
)

5506 
	#ORBIT_DECL_CORBA_Såu˘Def
 1

	)

5507 
	#_CORBA_Såu˘Def_deföed
 1

	)

5508 
	#CORBA_Såu˘Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5509 
CORBA_Obje˘
 
	tCORBA_Såu˘Def
;

5510 
CORBA_unsig√d_l⁄g
 
CORBA_Såu˘Def__˛assid
;

5511 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Såu˘Def_0
)

5512 
	#TC_IMPL_TC_CORBA_Såu˘Def_0
 'c'

	)

5513 
	#TC_IMPL_TC_CORBA_Såu˘Def_1
 'o'

	)

5514 
	#TC_IMPL_TC_CORBA_Såu˘Def_2
 'r'

	)

5515 
	#TC_IMPL_TC_CORBA_Såu˘Def_3
 'b'

	)

5516 
	#TC_IMPL_TC_CORBA_Såu˘Def_4
 'a'

	)

5517 
	#TC_IMPL_TC_CORBA_Såu˘Def_5
 '_'

	)

5518 
	#TC_IMPL_TC_CORBA_Såu˘Def_6
 'd'

	)

5519 
	#TC_IMPL_TC_CORBA_Såu˘Def_7
 'e'

	)

5520 
	#TC_IMPL_TC_CORBA_Såu˘Def_8
 'f'

	)

5521 
	#TC_IMPL_TC_CORBA_Såu˘Def_9
 's'

	)

5522 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5527 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Såu˘Def_°ru˘
;

5528 
	#TC_CORBA_Såu˘Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Såu˘Def_°ru˘
)

	)

5531 #i‡!
deföed
(
ORBIT_DECL_CORBA_Uni⁄Def
Ë&& !deföed(
_CORBA_Uni⁄Def_deföed
)

5532 
	#ORBIT_DECL_CORBA_Uni⁄Def
 1

	)

5533 
	#_CORBA_Uni⁄Def_deföed
 1

	)

5534 
	#CORBA_Uni⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5535 
CORBA_Obje˘
 
	tCORBA_Uni⁄Def
;

5536 
CORBA_unsig√d_l⁄g
 
CORBA_Uni⁄Def__˛assid
;

5537 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Uni⁄Def_0
)

5538 
	#TC_IMPL_TC_CORBA_Uni⁄Def_0
 'c'

	)

5539 
	#TC_IMPL_TC_CORBA_Uni⁄Def_1
 'o'

	)

5540 
	#TC_IMPL_TC_CORBA_Uni⁄Def_2
 'r'

	)

5541 
	#TC_IMPL_TC_CORBA_Uni⁄Def_3
 'b'

	)

5542 
	#TC_IMPL_TC_CORBA_Uni⁄Def_4
 'a'

	)

5543 
	#TC_IMPL_TC_CORBA_Uni⁄Def_5
 '_'

	)

5544 
	#TC_IMPL_TC_CORBA_Uni⁄Def_6
 'd'

	)

5545 
	#TC_IMPL_TC_CORBA_Uni⁄Def_7
 'e'

	)

5546 
	#TC_IMPL_TC_CORBA_Uni⁄Def_8
 'f'

	)

5547 
	#TC_IMPL_TC_CORBA_Uni⁄Def_9
 's'

	)

5548 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5553 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Uni⁄Def_°ru˘
;

5554 
	#TC_CORBA_Uni⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Uni⁄Def_°ru˘
)

	)

5557 #i‡!
deföed
(
ORBIT_DECL_CORBA_EnumDef
Ë&& !deföed(
_CORBA_EnumDef_deföed
)

5558 
	#ORBIT_DECL_CORBA_EnumDef
 1

	)

5559 
	#_CORBA_EnumDef_deföed
 1

	)

5560 
	#CORBA_EnumDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5561 
CORBA_Obje˘
 
	tCORBA_EnumDef
;

5562 
CORBA_unsig√d_l⁄g
 
CORBA_EnumDef__˛assid
;

5563 #i‡!
deföed
(
TC_IMPL_TC_CORBA_EnumDef_0
)

5564 
	#TC_IMPL_TC_CORBA_EnumDef_0
 'c'

	)

5565 
	#TC_IMPL_TC_CORBA_EnumDef_1
 'o'

	)

5566 
	#TC_IMPL_TC_CORBA_EnumDef_2
 'r'

	)

5567 
	#TC_IMPL_TC_CORBA_EnumDef_3
 'b'

	)

5568 
	#TC_IMPL_TC_CORBA_EnumDef_4
 'a'

	)

5569 
	#TC_IMPL_TC_CORBA_EnumDef_5
 '_'

	)

5570 
	#TC_IMPL_TC_CORBA_EnumDef_6
 'd'

	)

5571 
	#TC_IMPL_TC_CORBA_EnumDef_7
 'e'

	)

5572 
	#TC_IMPL_TC_CORBA_EnumDef_8
 'f'

	)

5573 
	#TC_IMPL_TC_CORBA_EnumDef_9
 's'

	)

5574 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5579 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_EnumDef_°ru˘
;

5580 
	#TC_CORBA_EnumDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_EnumDef_°ru˘
)

	)

5583 #i‡!
deföed
(
ORBIT_DECL_CORBA_AlüsDef
Ë&& !deföed(
_CORBA_AlüsDef_deföed
)

5584 
	#ORBIT_DECL_CORBA_AlüsDef
 1

	)

5585 
	#_CORBA_AlüsDef_deföed
 1

	)

5586 
	#CORBA_AlüsDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5587 
CORBA_Obje˘
 
	tCORBA_AlüsDef
;

5588 
CORBA_unsig√d_l⁄g
 
CORBA_AlüsDef__˛assid
;

5589 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AlüsDef_0
)

5590 
	#TC_IMPL_TC_CORBA_AlüsDef_0
 'c'

	)

5591 
	#TC_IMPL_TC_CORBA_AlüsDef_1
 'o'

	)

5592 
	#TC_IMPL_TC_CORBA_AlüsDef_2
 'r'

	)

5593 
	#TC_IMPL_TC_CORBA_AlüsDef_3
 'b'

	)

5594 
	#TC_IMPL_TC_CORBA_AlüsDef_4
 'a'

	)

5595 
	#TC_IMPL_TC_CORBA_AlüsDef_5
 '_'

	)

5596 
	#TC_IMPL_TC_CORBA_AlüsDef_6
 'd'

	)

5597 
	#TC_IMPL_TC_CORBA_AlüsDef_7
 'e'

	)

5598 
	#TC_IMPL_TC_CORBA_AlüsDef_8
 'f'

	)

5599 
	#TC_IMPL_TC_CORBA_AlüsDef_9
 's'

	)

5600 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5605 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AlüsDef_°ru˘
;

5606 
	#TC_CORBA_AlüsDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AlüsDef_°ru˘
)

	)

5609 #i‡!
deföed
(
ORBIT_DECL_CORBA_N©iveDef
Ë&& !deföed(
_CORBA_N©iveDef_deföed
)

5610 
	#ORBIT_DECL_CORBA_N©iveDef
 1

	)

5611 
	#_CORBA_N©iveDef_deföed
 1

	)

5612 
	#CORBA_N©iveDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5613 
CORBA_Obje˘
 
	tCORBA_N©iveDef
;

5614 
CORBA_unsig√d_l⁄g
 
CORBA_N©iveDef__˛assid
;

5615 #i‡!
deföed
(
TC_IMPL_TC_CORBA_N©iveDef_0
)

5616 
	#TC_IMPL_TC_CORBA_N©iveDef_0
 'c'

	)

5617 
	#TC_IMPL_TC_CORBA_N©iveDef_1
 'o'

	)

5618 
	#TC_IMPL_TC_CORBA_N©iveDef_2
 'r'

	)

5619 
	#TC_IMPL_TC_CORBA_N©iveDef_3
 'b'

	)

5620 
	#TC_IMPL_TC_CORBA_N©iveDef_4
 'a'

	)

5621 
	#TC_IMPL_TC_CORBA_N©iveDef_5
 '_'

	)

5622 
	#TC_IMPL_TC_CORBA_N©iveDef_6
 'd'

	)

5623 
	#TC_IMPL_TC_CORBA_N©iveDef_7
 'e'

	)

5624 
	#TC_IMPL_TC_CORBA_N©iveDef_8
 'f'

	)

5625 
	#TC_IMPL_TC_CORBA_N©iveDef_9
 's'

	)

5626 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5631 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_N©iveDef_°ru˘
;

5632 
	#TC_CORBA_N©iveDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_N©iveDef_°ru˘
)

	)

5635 #i‡!
deföed
(
ORBIT_DECL_CORBA_PrimôiveDef
Ë&& !deföed(
_CORBA_PrimôiveDef_deföed
)

5636 
	#ORBIT_DECL_CORBA_PrimôiveDef
 1

	)

5637 
	#_CORBA_PrimôiveDef_deföed
 1

	)

5638 
	#CORBA_PrimôiveDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5639 
CORBA_Obje˘
 
	tCORBA_PrimôiveDef
;

5640 
CORBA_unsig√d_l⁄g
 
CORBA_PrimôiveDef__˛assid
;

5641 #i‡!
deföed
(
TC_IMPL_TC_CORBA_PrimôiveDef_0
)

5642 
	#TC_IMPL_TC_CORBA_PrimôiveDef_0
 'c'

	)

5643 
	#TC_IMPL_TC_CORBA_PrimôiveDef_1
 'o'

	)

5644 
	#TC_IMPL_TC_CORBA_PrimôiveDef_2
 'r'

	)

5645 
	#TC_IMPL_TC_CORBA_PrimôiveDef_3
 'b'

	)

5646 
	#TC_IMPL_TC_CORBA_PrimôiveDef_4
 'a'

	)

5647 
	#TC_IMPL_TC_CORBA_PrimôiveDef_5
 '_'

	)

5648 
	#TC_IMPL_TC_CORBA_PrimôiveDef_6
 'd'

	)

5649 
	#TC_IMPL_TC_CORBA_PrimôiveDef_7
 'e'

	)

5650 
	#TC_IMPL_TC_CORBA_PrimôiveDef_8
 'f'

	)

5651 
	#TC_IMPL_TC_CORBA_PrimôiveDef_9
 's'

	)

5652 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5657 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_PrimôiveDef_°ru˘
;

5658 
	#TC_CORBA_PrimôiveDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PrimôiveDef_°ru˘
)

	)

5661 #i‡!
deföed
(
ORBIT_DECL_CORBA_SåögDef
Ë&& !deföed(
_CORBA_SåögDef_deföed
)

5662 
	#ORBIT_DECL_CORBA_SåögDef
 1

	)

5663 
	#_CORBA_SåögDef_deföed
 1

	)

5664 
	#CORBA_SåögDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5665 
CORBA_Obje˘
 
	tCORBA_SåögDef
;

5666 
CORBA_unsig√d_l⁄g
 
CORBA_SåögDef__˛assid
;

5667 #i‡!
deföed
(
TC_IMPL_TC_CORBA_SåögDef_0
)

5668 
	#TC_IMPL_TC_CORBA_SåögDef_0
 'c'

	)

5669 
	#TC_IMPL_TC_CORBA_SåögDef_1
 'o'

	)

5670 
	#TC_IMPL_TC_CORBA_SåögDef_2
 'r'

	)

5671 
	#TC_IMPL_TC_CORBA_SåögDef_3
 'b'

	)

5672 
	#TC_IMPL_TC_CORBA_SåögDef_4
 'a'

	)

5673 
	#TC_IMPL_TC_CORBA_SåögDef_5
 '_'

	)

5674 
	#TC_IMPL_TC_CORBA_SåögDef_6
 'd'

	)

5675 
	#TC_IMPL_TC_CORBA_SåögDef_7
 'e'

	)

5676 
	#TC_IMPL_TC_CORBA_SåögDef_8
 'f'

	)

5677 
	#TC_IMPL_TC_CORBA_SåögDef_9
 's'

	)

5678 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5683 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_SåögDef_°ru˘
;

5684 
	#TC_CORBA_SåögDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_SåögDef_°ru˘
)

	)

5687 #i‡!
deföed
(
ORBIT_DECL_CORBA_W°rögDef
Ë&& !deföed(
_CORBA_W°rögDef_deföed
)

5688 
	#ORBIT_DECL_CORBA_W°rögDef
 1

	)

5689 
	#_CORBA_W°rögDef_deföed
 1

	)

5690 
	#CORBA_W°rögDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5691 
CORBA_Obje˘
 
	tCORBA_W°rögDef
;

5692 
CORBA_unsig√d_l⁄g
 
CORBA_W°rögDef__˛assid
;

5693 #i‡!
deföed
(
TC_IMPL_TC_CORBA_W°rögDef_0
)

5694 
	#TC_IMPL_TC_CORBA_W°rögDef_0
 'c'

	)

5695 
	#TC_IMPL_TC_CORBA_W°rögDef_1
 'o'

	)

5696 
	#TC_IMPL_TC_CORBA_W°rögDef_2
 'r'

	)

5697 
	#TC_IMPL_TC_CORBA_W°rögDef_3
 'b'

	)

5698 
	#TC_IMPL_TC_CORBA_W°rögDef_4
 'a'

	)

5699 
	#TC_IMPL_TC_CORBA_W°rögDef_5
 '_'

	)

5700 
	#TC_IMPL_TC_CORBA_W°rögDef_6
 'd'

	)

5701 
	#TC_IMPL_TC_CORBA_W°rögDef_7
 'e'

	)

5702 
	#TC_IMPL_TC_CORBA_W°rögDef_8
 'f'

	)

5703 
	#TC_IMPL_TC_CORBA_W°rögDef_9
 's'

	)

5704 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5709 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_W°rögDef_°ru˘
;

5710 
	#TC_CORBA_W°rögDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_W°rögDef_°ru˘
)

	)

5713 #i‡!
deföed
(
ORBIT_DECL_CORBA_FixedDef
Ë&& !deföed(
_CORBA_FixedDef_deföed
)

5714 
	#ORBIT_DECL_CORBA_FixedDef
 1

	)

5715 
	#_CORBA_FixedDef_deföed
 1

	)

5716 
	#CORBA_FixedDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5717 
CORBA_Obje˘
 
	tCORBA_FixedDef
;

5718 
CORBA_unsig√d_l⁄g
 
CORBA_FixedDef__˛assid
;

5719 #i‡!
deföed
(
TC_IMPL_TC_CORBA_FixedDef_0
)

5720 
	#TC_IMPL_TC_CORBA_FixedDef_0
 'c'

	)

5721 
	#TC_IMPL_TC_CORBA_FixedDef_1
 'o'

	)

5722 
	#TC_IMPL_TC_CORBA_FixedDef_2
 'r'

	)

5723 
	#TC_IMPL_TC_CORBA_FixedDef_3
 'b'

	)

5724 
	#TC_IMPL_TC_CORBA_FixedDef_4
 'a'

	)

5725 
	#TC_IMPL_TC_CORBA_FixedDef_5
 '_'

	)

5726 
	#TC_IMPL_TC_CORBA_FixedDef_6
 'd'

	)

5727 
	#TC_IMPL_TC_CORBA_FixedDef_7
 'e'

	)

5728 
	#TC_IMPL_TC_CORBA_FixedDef_8
 'f'

	)

5729 
	#TC_IMPL_TC_CORBA_FixedDef_9
 's'

	)

5730 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5735 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_FixedDef_°ru˘
;

5736 
	#TC_CORBA_FixedDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_FixedDef_°ru˘
)

	)

5739 #i‡!
deföed
(
ORBIT_DECL_CORBA_Sequí˚Def
Ë&& !deföed(
_CORBA_Sequí˚Def_deföed
)

5740 
	#ORBIT_DECL_CORBA_Sequí˚Def
 1

	)

5741 
	#_CORBA_Sequí˚Def_deföed
 1

	)

5742 
	#CORBA_Sequí˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5743 
CORBA_Obje˘
 
	tCORBA_Sequí˚Def
;

5744 
CORBA_unsig√d_l⁄g
 
CORBA_Sequí˚Def__˛assid
;

5745 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sequí˚Def_0
)

5746 
	#TC_IMPL_TC_CORBA_Sequí˚Def_0
 'c'

	)

5747 
	#TC_IMPL_TC_CORBA_Sequí˚Def_1
 'o'

	)

5748 
	#TC_IMPL_TC_CORBA_Sequí˚Def_2
 'r'

	)

5749 
	#TC_IMPL_TC_CORBA_Sequí˚Def_3
 'b'

	)

5750 
	#TC_IMPL_TC_CORBA_Sequí˚Def_4
 'a'

	)

5751 
	#TC_IMPL_TC_CORBA_Sequí˚Def_5
 '_'

	)

5752 
	#TC_IMPL_TC_CORBA_Sequí˚Def_6
 'd'

	)

5753 
	#TC_IMPL_TC_CORBA_Sequí˚Def_7
 'e'

	)

5754 
	#TC_IMPL_TC_CORBA_Sequí˚Def_8
 'f'

	)

5755 
	#TC_IMPL_TC_CORBA_Sequí˚Def_9
 's'

	)

5756 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5761 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sequí˚Def_°ru˘
;

5762 
	#TC_CORBA_Sequí˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sequí˚Def_°ru˘
)

	)

5765 #i‡!
deföed
(
ORBIT_DECL_CORBA_AºayDef
Ë&& !deföed(
_CORBA_AºayDef_deföed
)

5766 
	#ORBIT_DECL_CORBA_AºayDef
 1

	)

5767 
	#_CORBA_AºayDef_deföed
 1

	)

5768 
	#CORBA_AºayDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5769 
CORBA_Obje˘
 
	tCORBA_AºayDef
;

5770 
CORBA_unsig√d_l⁄g
 
CORBA_AºayDef__˛assid
;

5771 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AºayDef_0
)

5772 
	#TC_IMPL_TC_CORBA_AºayDef_0
 'c'

	)

5773 
	#TC_IMPL_TC_CORBA_AºayDef_1
 'o'

	)

5774 
	#TC_IMPL_TC_CORBA_AºayDef_2
 'r'

	)

5775 
	#TC_IMPL_TC_CORBA_AºayDef_3
 'b'

	)

5776 
	#TC_IMPL_TC_CORBA_AºayDef_4
 'a'

	)

5777 
	#TC_IMPL_TC_CORBA_AºayDef_5
 '_'

	)

5778 
	#TC_IMPL_TC_CORBA_AºayDef_6
 'd'

	)

5779 
	#TC_IMPL_TC_CORBA_AºayDef_7
 'e'

	)

5780 
	#TC_IMPL_TC_CORBA_AºayDef_8
 'f'

	)

5781 
	#TC_IMPL_TC_CORBA_AºayDef_9
 's'

	)

5782 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5787 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AºayDef_°ru˘
;

5788 
	#TC_CORBA_AºayDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AºayDef_°ru˘
)

	)

5791 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ex˚±i⁄Def
Ë&& !deföed(
_CORBA_Ex˚±i⁄Def_deföed
)

5792 
	#ORBIT_DECL_CORBA_Ex˚±i⁄Def
 1

	)

5793 
	#_CORBA_Ex˚±i⁄Def_deföed
 1

	)

5794 
	#CORBA_Ex˚±i⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5795 
CORBA_Obje˘
 
	tCORBA_Ex˚±i⁄Def
;

5796 
CORBA_unsig√d_l⁄g
 
CORBA_Ex˚±i⁄Def__˛assid
;

5797 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ex˚±i⁄Def_0
)

5798 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_0
 'c'

	)

5799 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_1
 'o'

	)

5800 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_2
 'r'

	)

5801 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_3
 'b'

	)

5802 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_4
 'a'

	)

5803 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_5
 '_'

	)

5804 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_6
 'd'

	)

5805 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_7
 'e'

	)

5806 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_8
 'f'

	)

5807 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄Def_9
 's'

	)

5808 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5813 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ex˚±i⁄Def_°ru˘
;

5814 
	#TC_CORBA_Ex˚±i⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ex˚±i⁄Def_°ru˘
)

	)

5817 #i‡!
deföed
(
_CORBA_AâribuãMode_deföed
)

5818 
	#_CORBA_AâribuãMode_deföed
 1

	)

5820 
	gCORBA_ATTR_NORMAL
,

5821 
	gCORBA_ATTR_READONLY


5822 } 
	tCORBA_AâribuãMode
;

5823 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AâribuãMode_0
)

5824 
	#TC_IMPL_TC_CORBA_AâribuãMode_0
 'c'

	)

5825 
	#TC_IMPL_TC_CORBA_AâribuãMode_1
 'o'

	)

5826 
	#TC_IMPL_TC_CORBA_AâribuãMode_2
 'r'

	)

5827 
	#TC_IMPL_TC_CORBA_AâribuãMode_3
 'b'

	)

5828 
	#TC_IMPL_TC_CORBA_AâribuãMode_4
 'a'

	)

5829 
	#TC_IMPL_TC_CORBA_AâribuãMode_5
 '_'

	)

5830 
	#TC_IMPL_TC_CORBA_AâribuãMode_6
 'd'

	)

5831 
	#TC_IMPL_TC_CORBA_AâribuãMode_7
 'e'

	)

5832 
	#TC_IMPL_TC_CORBA_AâribuãMode_8
 'f'

	)

5833 
	#TC_IMPL_TC_CORBA_AâribuãMode_9
 's'

	)

5834 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5839 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AâribuãMode_°ru˘
;

5840 
	#TC_CORBA_AâribuãMode
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AâribuãMode_°ru˘
)

	)

5843 #i‡!
deföed
(
ORBIT_DECL_CORBA_AâribuãDef
Ë&& !deföed(
_CORBA_AâribuãDef_deföed
)

5844 
	#ORBIT_DECL_CORBA_AâribuãDef
 1

	)

5845 
	#_CORBA_AâribuãDef_deföed
 1

	)

5846 
	#CORBA_AâribuãDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5847 
CORBA_Obje˘
 
	tCORBA_AâribuãDef
;

5848 
CORBA_unsig√d_l⁄g
 
CORBA_AâribuãDef__˛assid
;

5849 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AâribuãDef_0
)

5850 
	#TC_IMPL_TC_CORBA_AâribuãDef_0
 'c'

	)

5851 
	#TC_IMPL_TC_CORBA_AâribuãDef_1
 'o'

	)

5852 
	#TC_IMPL_TC_CORBA_AâribuãDef_2
 'r'

	)

5853 
	#TC_IMPL_TC_CORBA_AâribuãDef_3
 'b'

	)

5854 
	#TC_IMPL_TC_CORBA_AâribuãDef_4
 'a'

	)

5855 
	#TC_IMPL_TC_CORBA_AâribuãDef_5
 '_'

	)

5856 
	#TC_IMPL_TC_CORBA_AâribuãDef_6
 'd'

	)

5857 
	#TC_IMPL_TC_CORBA_AâribuãDef_7
 'e'

	)

5858 
	#TC_IMPL_TC_CORBA_AâribuãDef_8
 'f'

	)

5859 
	#TC_IMPL_TC_CORBA_AâribuãDef_9
 's'

	)

5860 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5865 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AâribuãDef_°ru˘
;

5866 
	#TC_CORBA_AâribuãDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AâribuãDef_°ru˘
)

	)

5869 #i‡!
deföed
(
_CORBA_AâribuãDes¸ùti⁄_deföed
)

5870 
	#_CORBA_AâribuãDes¸ùti⁄_deföed
 1

	)

5871 
CORBA_AâribuãDes¸ùti⁄_ty≥
 
	tCORBA_AâribuãDes¸ùti⁄
;

5872 
	sCORBA_AâribuãDes¸ùti⁄_ty≥
 {

5873 
CORBA_Idítifõr
 
	g«me
;

5874 
CORBA_Rïosô‹yId
 
	gid
;

5875 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

5876 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

5877 
CORBA_Ty≥Code
 
	gty≥
;

5878 
CORBA_AâribuãMode
 
	gmode
;

5881 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_0
)

5882 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_0
 'c'

	)

5883 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_1
 'o'

	)

5884 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_2
 'r'

	)

5885 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_3
 'b'

	)

5886 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_4
 'a'

	)

5887 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_5
 '_'

	)

5888 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_6
 'd'

	)

5889 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_7
 'e'

	)

5890 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_8
 'f'

	)

5891 
	#TC_IMPL_TC_CORBA_AâribuãDes¸ùti⁄_9
 's'

	)

5892 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5897 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AâribuãDes¸ùti⁄_°ru˘
;

5898 
	#TC_CORBA_AâribuãDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AâribuãDes¸ùti⁄_°ru˘
)

	)

5900 
	#CORBA_AâribuãDes¸ùti⁄__Æloc
(Ë((
CORBA_AâribuãDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_AâribuãDes¸ùti⁄
))

	)

5901 
	#CORBA_AâribuãDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_AâribuãDes¸ùti⁄
,(m),(d))

	)

5903 #i‡!
deföed
(
_CORBA_ExtAâribuãDes¸ùti⁄_deföed
)

5904 
	#_CORBA_ExtAâribuãDes¸ùti⁄_deföed
 1

	)

5905 
CORBA_ExtAâribuãDes¸ùti⁄_ty≥
 
	tCORBA_ExtAâribuãDes¸ùti⁄
;

5906 
	sCORBA_ExtAâribuãDes¸ùti⁄_ty≥
 {

5907 
CORBA_Idítifõr
 
	g«me
;

5908 
CORBA_Rïosô‹yId
 
	gid
;

5909 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

5910 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

5911 
CORBA_Ty≥Code
 
	gty≥
;

5912 
CORBA_AâribuãMode
 
	gmode
;

5913 
CORBA_ExcDes¸ùti⁄Seq
 
	ggë_ex˚±i⁄s
;

5914 
CORBA_ExcDes¸ùti⁄Seq
 
	gput_ex˚±i⁄s
;

5917 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_0
)

5918 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_0
 'c'

	)

5919 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_1
 'o'

	)

5920 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_2
 'r'

	)

5921 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_3
 'b'

	)

5922 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_4
 'a'

	)

5923 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_5
 '_'

	)

5924 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_6
 'd'

	)

5925 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_7
 'e'

	)

5926 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_8
 'f'

	)

5927 
	#TC_IMPL_TC_CORBA_ExtAâribuãDes¸ùti⁄_9
 's'

	)

5928 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5933 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAâribuãDes¸ùti⁄_°ru˘
;

5934 
	#TC_CORBA_ExtAâribuãDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAâribuãDes¸ùti⁄_°ru˘
)

	)

5936 
	#CORBA_ExtAâribuãDes¸ùti⁄__Æloc
(Ë((
CORBA_ExtAâribuãDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_ExtAâribuãDes¸ùti⁄
))

	)

5937 
	#CORBA_ExtAâribuãDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_ExtAâribuãDes¸ùti⁄
,(m),(d))

	)

5939 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtAâribuãDef
Ë&& !deföed(
_CORBA_ExtAâribuãDef_deföed
)

5940 
	#ORBIT_DECL_CORBA_ExtAâribuãDef
 1

	)

5941 
	#_CORBA_ExtAâribuãDef_deföed
 1

	)

5942 
	#CORBA_ExtAâribuãDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

5943 
CORBA_Obje˘
 
	tCORBA_ExtAâribuãDef
;

5944 
CORBA_unsig√d_l⁄g
 
CORBA_ExtAâribuãDef__˛assid
;

5945 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAâribuãDef_0
)

5946 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_0
 'c'

	)

5947 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_1
 'o'

	)

5948 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_2
 'r'

	)

5949 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_3
 'b'

	)

5950 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_4
 'a'

	)

5951 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_5
 '_'

	)

5952 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_6
 'd'

	)

5953 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_7
 'e'

	)

5954 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_8
 'f'

	)

5955 
	#TC_IMPL_TC_CORBA_ExtAâribuãDef_9
 's'

	)

5956 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5961 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAâribuãDef_°ru˘
;

5962 
	#TC_CORBA_ExtAâribuãDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAâribuãDef_°ru˘
)

	)

5965 #i‡!
deföed
(
_CORBA_O≥øti⁄Mode_deföed
)

5966 
	#_CORBA_O≥øti⁄Mode_deföed
 1

	)

5968 
	gCORBA_OP_NORMAL
,

5969 
	gCORBA_OP_ONEWAY


5970 } 
	tCORBA_O≥øti⁄Mode
;

5971 #i‡!
deföed
(
TC_IMPL_TC_CORBA_O≥øti⁄Mode_0
)

5972 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_0
 'c'

	)

5973 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_1
 'o'

	)

5974 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_2
 'r'

	)

5975 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_3
 'b'

	)

5976 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_4
 'a'

	)

5977 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_5
 '_'

	)

5978 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_6
 'd'

	)

5979 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_7
 'e'

	)

5980 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_8
 'f'

	)

5981 
	#TC_IMPL_TC_CORBA_O≥øti⁄Mode_9
 's'

	)

5982 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


5987 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_O≥øti⁄Mode_°ru˘
;

5988 
	#TC_CORBA_O≥øti⁄Mode
 ((
CORBA_Ty≥Code
)&
TC_CORBA_O≥øti⁄Mode_°ru˘
)

	)

5991 #i‡!
deföed
(
_CORBA_P¨amëîMode_deföed
)

5992 
	#_CORBA_P¨amëîMode_deföed
 1

	)

5994 
	gCORBA_PARAM_IN
,

5995 
	gCORBA_PARAM_OUT
,

5996 
	gCORBA_PARAM_INOUT


5997 } 
	tCORBA_P¨amëîMode
;

5998 #i‡!
deföed
(
TC_IMPL_TC_CORBA_P¨amëîMode_0
)

5999 
	#TC_IMPL_TC_CORBA_P¨amëîMode_0
 'c'

	)

6000 
	#TC_IMPL_TC_CORBA_P¨amëîMode_1
 'o'

	)

6001 
	#TC_IMPL_TC_CORBA_P¨amëîMode_2
 'r'

	)

6002 
	#TC_IMPL_TC_CORBA_P¨amëîMode_3
 'b'

	)

6003 
	#TC_IMPL_TC_CORBA_P¨amëîMode_4
 'a'

	)

6004 
	#TC_IMPL_TC_CORBA_P¨amëîMode_5
 '_'

	)

6005 
	#TC_IMPL_TC_CORBA_P¨amëîMode_6
 'd'

	)

6006 
	#TC_IMPL_TC_CORBA_P¨amëîMode_7
 'e'

	)

6007 
	#TC_IMPL_TC_CORBA_P¨amëîMode_8
 'f'

	)

6008 
	#TC_IMPL_TC_CORBA_P¨amëîMode_9
 's'

	)

6009 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6014 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_P¨amëîMode_°ru˘
;

6015 
	#TC_CORBA_P¨amëîMode
 ((
CORBA_Ty≥Code
)&
TC_CORBA_P¨amëîMode_°ru˘
)

	)

6018 #i‡!
deföed
(
_CORBA_P¨amëîDes¸ùti⁄_deföed
)

6019 
	#_CORBA_P¨amëîDes¸ùti⁄_deföed
 1

	)

6020 
CORBA_P¨amëîDes¸ùti⁄_ty≥
 
	tCORBA_P¨amëîDes¸ùti⁄
;

6021 
	sCORBA_P¨amëîDes¸ùti⁄_ty≥
 {

6022 
CORBA_Idítifõr
 
	g«me
;

6023 
CORBA_Ty≥Code
 
	gty≥
;

6024 
CORBA_IDLTy≥
 
	gty≥_def
;

6025 
CORBA_P¨amëîMode
 
	gmode
;

6028 #i‡!
deföed
(
TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_0
)

6029 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_0
 'c'

	)

6030 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_1
 'o'

	)

6031 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_2
 'r'

	)

6032 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_3
 'b'

	)

6033 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_4
 'a'

	)

6034 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_5
 '_'

	)

6035 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_6
 'd'

	)

6036 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_7
 'e'

	)

6037 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_8
 'f'

	)

6038 
	#TC_IMPL_TC_CORBA_P¨amëîDes¸ùti⁄_9
 's'

	)

6039 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6044 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_P¨amëîDes¸ùti⁄_°ru˘
;

6045 
	#TC_CORBA_P¨amëîDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_P¨amëîDes¸ùti⁄_°ru˘
)

	)

6047 
	#CORBA_P¨amëîDes¸ùti⁄__Æloc
(Ë((
CORBA_P¨amëîDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_P¨amëîDes¸ùti⁄
))

	)

6048 
	#CORBA_P¨amëîDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_P¨amëîDes¸ùti⁄
,(m),(d))

	)

6050 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
)

6051 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
 1

	)

6052 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_0
 'c'

	)

6053 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_1
 'o'

	)

6054 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_2
 'r'

	)

6055 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_3
 'b'

	)

6056 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_4
 'a'

	)

6057 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_5
 '_'

	)

6058 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_6
 'd'

	)

6059 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_7
 'e'

	)

6060 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_8
 'f'

	)

6061 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_9
 's'

	)

6062 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_deföed
)

6063 
	#_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_deföed
 1

	)

6064 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_P¨amëîDes¸ùti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
;

6066 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_0
)

6067 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_0
 'c'

	)

6068 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_1
 'o'

	)

6069 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_2
 'r'

	)

6070 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_3
 'b'

	)

6071 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_4
 'a'

	)

6072 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_5
 '_'

	)

6073 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_6
 'd'

	)

6074 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_7
 'e'

	)

6075 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_8
 'f'

	)

6076 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_9
 's'

	)

6077 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6082 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_°ru˘
;

6083 
	#TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_°ru˘
)

	)

6085 
	#CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄__Æloc
(Ë((
CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
))

	)

6086 
	#CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
,(m),(d))

	)

6087 
	#CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_P¨amëîDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
, (l)))

	)

6088 
	#CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_P¨amëîDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
, (l)))

	)

6090 #i‡!
deföed
(
_CORBA_P¨Des¸ùti⁄Seq_deföed
)

6091 
	#_CORBA_P¨Des¸ùti⁄Seq_deföed
 1

	)

6092 
CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
 
	tCORBA_P¨Des¸ùti⁄Seq
;

6093 
	#CORBA_P¨Des¸ùti⁄Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_m¨shÆ
((x),(y),(z))

	)

6094 
	#CORBA_P¨Des¸ùti⁄Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

6095 #i‡!
deföed
(
TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_0
)

6096 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_0
 'c'

	)

6097 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_1
 'o'

	)

6098 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_2
 'r'

	)

6099 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_3
 'b'

	)

6100 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_4
 'a'

	)

6101 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_5
 '_'

	)

6102 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_6
 'd'

	)

6103 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_7
 'e'

	)

6104 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_8
 'f'

	)

6105 
	#TC_IMPL_TC_CORBA_P¨Des¸ùti⁄Seq_9
 's'

	)

6106 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6111 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_P¨Des¸ùti⁄Seq_°ru˘
;

6112 
	#TC_CORBA_P¨Des¸ùti⁄Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_P¨Des¸ùti⁄Seq_°ru˘
)

	)

6114 
	#CORBA_P¨Des¸ùti⁄Seq__Æloc
(Ë((
CORBA_P¨Des¸ùti⁄Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
))

	)

6115 
	#CORBA_P¨Des¸ùti⁄Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
,(m),(d))

	)

6116 
	#CORBA_P¨Des¸ùti⁄Seq_Ælocbuf
(
l
Ë((
CORBA_P¨amëîDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_P¨amëîDes¸ùti⁄
, (l)))

	)

6118 #i‡!
deföed
(
_CORBA_C⁄ãxtIdítifõr_deföed
)

6119 
	#_CORBA_C⁄ãxtIdítifõr_deföed
 1

	)

6120 
CORBA_Idítifõr
 
	tCORBA_C⁄ãxtIdítifõr
;

6121 
	#CORBA_C⁄ãxtIdítifõr_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_Idítifõr_m¨shÆ
((x),(y),(z))

	)

6122 
	#CORBA_C⁄ãxtIdítifõr_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_Idítifõr_dem¨shÆ
((x),(y),(z),(i))

	)

6123 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_0
)

6124 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_0
 'c'

	)

6125 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_1
 'o'

	)

6126 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_2
 'r'

	)

6127 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_3
 'b'

	)

6128 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_4
 'a'

	)

6129 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_5
 '_'

	)

6130 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_6
 'd'

	)

6131 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_7
 'e'

	)

6132 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_8
 'f'

	)

6133 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdítifõr_9
 's'

	)

6134 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6139 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄ãxtIdítifõr_°ru˘
;

6140 
	#TC_CORBA_C⁄ãxtIdítifõr
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄ãxtIdítifõr_°ru˘
)

	)

6142 
	#CORBA_C⁄ãxtIdítifõr__Æloc
(Ë((
CORBA_C⁄ãxtIdítifõr
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

6143 
	#CORBA_C⁄ãxtIdítifõr__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

6145 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

6146 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

6147 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

6148 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

6149 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

6150 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

6151 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

6152 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

6153 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

6154 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

6155 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

6156 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

6157 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

6158 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

6159 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

6161 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

6162 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

6163 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

6164 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

6165 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

6166 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

6167 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

6168 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

6169 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

6170 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

6171 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

6172 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6177 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

6178 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

6180 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

6181 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

6182 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

6183 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

6185 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
)

6186 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
 1

	)

6187 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_0
 'c'

	)

6188 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_1
 'o'

	)

6189 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_2
 'r'

	)

6190 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_3
 'b'

	)

6191 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_4
 'a'

	)

6192 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_5
 '_'

	)

6193 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_6
 'd'

	)

6194 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_7
 'e'

	)

6195 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_8
 'f'

	)

6196 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_9
 's'

	)

6197 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_deföed
)

6198 
	#_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_deföed
 1

	)

6199 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
;

6201 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_0
)

6202 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_0
 'c'

	)

6203 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_1
 'o'

	)

6204 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_2
 'r'

	)

6205 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_3
 'b'

	)

6206 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_4
 'a'

	)

6207 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_5
 '_'

	)

6208 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_6
 'd'

	)

6209 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_7
 'e'

	)

6210 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_8
 'f'

	)

6211 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_9
 's'

	)

6212 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6217 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_°ru˘
;

6218 
	#TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_°ru˘
)

	)

6220 
	#CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr__Æloc
 
CORBA_£quí˚_CORBA_°rög__Æloc


	)

6221 
	#CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr__‰ìkids
 
CORBA_£quí˚_CORBA_°rög__‰ìkids


	)

6222 
	#CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_Ælocbuf
 
CORBA_£quí˚_CORBA_°rög_Ælocbuf


	)

6223 
	#CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

6224 
	#CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

6226 #i‡!
deföed
(
_CORBA_C⁄ãxtIdSeq_deföed
)

6227 
	#_CORBA_C⁄ãxtIdSeq_deföed
 1

	)

6228 
CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
 
	tCORBA_C⁄ãxtIdSeq
;

6229 
	#CORBA_C⁄ãxtIdSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_m¨shÆ
((x),(y),(z))

	)

6230 
	#CORBA_C⁄ãxtIdSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr_dem¨shÆ
((x),(y),(z),(i))

	)

6231 #i‡!
deföed
(
TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_0
)

6232 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_0
 'c'

	)

6233 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_1
 'o'

	)

6234 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_2
 'r'

	)

6235 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_3
 'b'

	)

6236 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_4
 'a'

	)

6237 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_5
 '_'

	)

6238 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_6
 'd'

	)

6239 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_7
 'e'

	)

6240 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_8
 'f'

	)

6241 
	#TC_IMPL_TC_CORBA_C⁄ãxtIdSeq_9
 's'

	)

6242 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6247 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_C⁄ãxtIdSeq_°ru˘
;

6248 
	#TC_CORBA_C⁄ãxtIdSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_C⁄ãxtIdSeq_°ru˘
)

	)

6250 
	#CORBA_C⁄ãxtIdSeq__Æloc
(Ë((
CORBA_C⁄ãxtIdSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
))

	)

6251 
	#CORBA_C⁄ãxtIdSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
,(m),(d))

	)

6252 
	#CORBA_C⁄ãxtIdSeq_Ælocbuf
(
l
Ë((
CORBA_C⁄ãxtIdítifõr
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_C⁄ãxtIdítifõr
, (l)))

	)

6254 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

6255 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

6256 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

6257 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

6258 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

6259 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

6260 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

6261 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

6262 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

6263 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

6264 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

6265 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

6266 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

6267 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

6268 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

6270 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

6271 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

6272 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

6273 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

6274 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

6275 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

6276 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

6277 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

6278 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

6279 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

6280 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

6281 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6286 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

6287 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

6289 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

6290 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

6291 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

6292 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

6294 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def
)

6295 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def
 1

	)

6296 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_0
 'c'

	)

6297 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_1
 'o'

	)

6298 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_2
 'r'

	)

6299 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_3
 'b'

	)

6300 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_4
 'a'

	)

6301 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_5
 '_'

	)

6302 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_6
 'd'

	)

6303 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_7
 'e'

	)

6304 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_8
 'f'

	)

6305 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_9
 's'

	)

6306 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_deföed
)

6307 
	#_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_deföed
 1

	)

6308 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_Ex˚±i⁄Def
;

6310 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_0
)

6311 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_0
 'c'

	)

6312 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_1
 'o'

	)

6313 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_2
 'r'

	)

6314 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_3
 'b'

	)

6315 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_4
 'a'

	)

6316 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_5
 '_'

	)

6317 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_6
 'd'

	)

6318 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_7
 'e'

	)

6319 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_8
 'f'

	)

6320 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_9
 's'

	)

6321 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6326 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_°ru˘
;

6327 
	#TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def_°ru˘
)

	)

6329 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Def__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

6330 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Def__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

6331 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Def_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

6332 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Def_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

6333 
	#CORBA_£quí˚_CORBA_Ex˚±i⁄Def_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

6335 #i‡!
deföed
(
_CORBA_Ex˚±i⁄DefSeq_deföed
)

6336 
	#_CORBA_Ex˚±i⁄DefSeq_deföed
 1

	)

6337 
CORBA_£quí˚_CORBA_Ex˚±i⁄Def
 
	tCORBA_Ex˚±i⁄DefSeq
;

6338 
	#CORBA_Ex˚±i⁄DefSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Ex˚±i⁄Def_m¨shÆ
((x),(y),(z))

	)

6339 
	#CORBA_Ex˚±i⁄DefSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Ex˚±i⁄Def_dem¨shÆ
((x),(y),(z),(i))

	)

6340 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_0
)

6341 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_0
 'c'

	)

6342 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_1
 'o'

	)

6343 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_2
 'r'

	)

6344 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_3
 'b'

	)

6345 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_4
 'a'

	)

6346 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_5
 '_'

	)

6347 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_6
 'd'

	)

6348 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_7
 'e'

	)

6349 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_8
 'f'

	)

6350 
	#TC_IMPL_TC_CORBA_Ex˚±i⁄DefSeq_9
 's'

	)

6351 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6356 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ex˚±i⁄DefSeq_°ru˘
;

6357 
	#TC_CORBA_Ex˚±i⁄DefSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ex˚±i⁄DefSeq_°ru˘
)

	)

6359 
	#CORBA_Ex˚±i⁄DefSeq__Æloc
(Ë((
CORBA_Ex˚±i⁄DefSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def
))

	)

6360 
	#CORBA_Ex˚±i⁄DefSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def
,(m),(d))

	)

6361 
	#CORBA_Ex˚±i⁄DefSeq_Ælocbuf
(
l
Ë((
CORBA_Ex˚±i⁄Def
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Ex˚±i⁄Def
, (l)))

	)

6363 #i‡!
deföed
(
ORBIT_DECL_CORBA_O≥øti⁄Def
Ë&& !deföed(
_CORBA_O≥øti⁄Def_deföed
)

6364 
	#ORBIT_DECL_CORBA_O≥øti⁄Def
 1

	)

6365 
	#_CORBA_O≥øti⁄Def_deföed
 1

	)

6366 
	#CORBA_O≥øti⁄Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

6367 
CORBA_Obje˘
 
	tCORBA_O≥øti⁄Def
;

6368 
CORBA_unsig√d_l⁄g
 
CORBA_O≥øti⁄Def__˛assid
;

6369 #i‡!
deföed
(
TC_IMPL_TC_CORBA_O≥øti⁄Def_0
)

6370 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_0
 'c'

	)

6371 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_1
 'o'

	)

6372 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_2
 'r'

	)

6373 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_3
 'b'

	)

6374 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_4
 'a'

	)

6375 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_5
 '_'

	)

6376 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_6
 'd'

	)

6377 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_7
 'e'

	)

6378 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_8
 'f'

	)

6379 
	#TC_IMPL_TC_CORBA_O≥øti⁄Def_9
 's'

	)

6380 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6385 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_O≥øti⁄Def_°ru˘
;

6386 
	#TC_CORBA_O≥øti⁄Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_O≥øti⁄Def_°ru˘
)

	)

6389 #i‡!
deföed
(
_CORBA_O≥øti⁄Des¸ùti⁄_deföed
)

6390 
	#_CORBA_O≥øti⁄Des¸ùti⁄_deföed
 1

	)

6391 
CORBA_O≥øti⁄Des¸ùti⁄_ty≥
 
	tCORBA_O≥øti⁄Des¸ùti⁄
;

6392 
	sCORBA_O≥øti⁄Des¸ùti⁄_ty≥
 {

6393 
CORBA_Idítifõr
 
	g«me
;

6394 
CORBA_Rïosô‹yId
 
	gid
;

6395 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

6396 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

6397 
CORBA_Ty≥Code
 
	gªsu…
;

6398 
CORBA_O≥øti⁄Mode
 
	gmode
;

6399 
CORBA_C⁄ãxtIdSeq
 
	gc⁄ãxts
;

6400 
CORBA_P¨Des¸ùti⁄Seq
 
	g∑ømëîs
;

6401 
CORBA_ExcDes¸ùti⁄Seq
 
	gex˚±i⁄s
;

6404 #i‡!
deföed
(
TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_0
)

6405 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_0
 'c'

	)

6406 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_1
 'o'

	)

6407 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_2
 'r'

	)

6408 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_3
 'b'

	)

6409 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_4
 'a'

	)

6410 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_5
 '_'

	)

6411 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_6
 'd'

	)

6412 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_7
 'e'

	)

6413 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_8
 'f'

	)

6414 
	#TC_IMPL_TC_CORBA_O≥øti⁄Des¸ùti⁄_9
 's'

	)

6415 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6420 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_O≥øti⁄Des¸ùti⁄_°ru˘
;

6421 
	#TC_CORBA_O≥øti⁄Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_O≥øti⁄Des¸ùti⁄_°ru˘
)

	)

6423 
	#CORBA_O≥øti⁄Des¸ùti⁄__Æloc
(Ë((
CORBA_O≥øti⁄Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_O≥øti⁄Des¸ùti⁄
))

	)

6424 
	#CORBA_O≥øti⁄Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_O≥øti⁄Des¸ùti⁄
,(m),(d))

	)

6426 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

6427 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

6428 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

6429 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

6430 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

6431 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

6432 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

6433 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

6434 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

6435 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

6436 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

6437 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

6438 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

6439 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

6440 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

6442 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

6443 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

6444 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

6445 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

6446 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

6447 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

6448 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

6449 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

6450 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

6451 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

6452 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

6453 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6458 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

6459 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

6461 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

6462 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

6463 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

6464 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

6466 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Rïosô‹yId
)

6467 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Rïosô‹yId
 1

	)

6468 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_0
 'c'

	)

6469 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_1
 'o'

	)

6470 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_2
 'r'

	)

6471 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_3
 'b'

	)

6472 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_4
 'a'

	)

6473 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_5
 '_'

	)

6474 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_6
 'd'

	)

6475 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_7
 'e'

	)

6476 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_8
 'f'

	)

6477 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Rïosô‹yId_9
 's'

	)

6478 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Rïosô‹yId_deföed
)

6479 
	#_CORBA_£quí˚_CORBA_Rïosô‹yId_deföed
 1

	)

6481 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_£quí˚_CORBA_Rïosô‹yId
;

6483 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_0
)

6484 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_0
 'c'

	)

6485 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_1
 'o'

	)

6486 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_2
 'r'

	)

6487 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_3
 'b'

	)

6488 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_4
 'a'

	)

6489 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_5
 '_'

	)

6490 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_6
 'd'

	)

6491 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_7
 'e'

	)

6492 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_8
 'f'

	)

6493 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Rïosô‹yId_9
 's'

	)

6494 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6499 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Rïosô‹yId_°ru˘
;

6500 
	#TC_CORBA_£quí˚_CORBA_Rïosô‹yId
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Rïosô‹yId_°ru˘
)

	)

6502 
	#CORBA_£quí˚_CORBA_Rïosô‹yId__Æloc
 
CORBA_£quí˚_CORBA_°rög__Æloc


	)

6503 
	#CORBA_£quí˚_CORBA_Rïosô‹yId__‰ìkids
 
CORBA_£quí˚_CORBA_°rög__‰ìkids


	)

6504 
	#CORBA_£quí˚_CORBA_Rïosô‹yId_Ælocbuf
 
CORBA_£quí˚_CORBA_°rög_Ælocbuf


	)

6505 
	#CORBA_£quí˚_CORBA_Rïosô‹yId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

6506 
	#CORBA_£quí˚_CORBA_Rïosô‹yId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

6508 #i‡!
deföed
(
_CORBA_Rïosô‹yIdSeq_deföed
)

6509 
	#_CORBA_Rïosô‹yIdSeq_deföed
 1

	)

6510 
CORBA_£quí˚_CORBA_Rïosô‹yId
 
	tCORBA_Rïosô‹yIdSeq
;

6511 
	#CORBA_Rïosô‹yIdSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Rïosô‹yId_m¨shÆ
((x),(y),(z))

	)

6512 
	#CORBA_Rïosô‹yIdSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Rïosô‹yId_dem¨shÆ
((x),(y),(z),(i))

	)

6513 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_0
)

6514 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_0
 'c'

	)

6515 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_1
 'o'

	)

6516 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_2
 'r'

	)

6517 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_3
 'b'

	)

6518 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_4
 'a'

	)

6519 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_5
 '_'

	)

6520 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_6
 'd'

	)

6521 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_7
 'e'

	)

6522 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_8
 'f'

	)

6523 
	#TC_IMPL_TC_CORBA_Rïosô‹yIdSeq_9
 's'

	)

6524 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6529 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Rïosô‹yIdSeq_°ru˘
;

6530 
	#TC_CORBA_Rïosô‹yIdSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Rïosô‹yIdSeq_°ru˘
)

	)

6532 
	#CORBA_Rïosô‹yIdSeq__Æloc
(Ë((
CORBA_Rïosô‹yIdSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Rïosô‹yId
))

	)

6533 
	#CORBA_Rïosô‹yIdSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Rïosô‹yId
,(m),(d))

	)

6534 
	#CORBA_Rïosô‹yIdSeq_Ælocbuf
(
l
Ë((
CORBA_Rïosô‹yId
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Rïosô‹yId
, (l)))

	)

6536 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
)

6537 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
 1

	)

6538 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_0
 'c'

	)

6539 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_1
 'o'

	)

6540 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_2
 'r'

	)

6541 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_3
 'b'

	)

6542 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_4
 'a'

	)

6543 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_5
 '_'

	)

6544 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_6
 'd'

	)

6545 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_7
 'e'

	)

6546 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_8
 'f'

	)

6547 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_9
 's'

	)

6548 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_deföed
)

6549 
	#_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_deföed
 1

	)

6550 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_O≥øti⁄Des¸ùti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
;

6552 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_0
)

6553 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_0
 'c'

	)

6554 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_1
 'o'

	)

6555 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_2
 'r'

	)

6556 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_3
 'b'

	)

6557 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_4
 'a'

	)

6558 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_5
 '_'

	)

6559 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_6
 'd'

	)

6560 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_7
 'e'

	)

6561 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_8
 'f'

	)

6562 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_9
 's'

	)

6563 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6568 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_°ru˘
;

6569 
	#TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_°ru˘
)

	)

6571 
	#CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄__Æloc
(Ë((
CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
))

	)

6572 
	#CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
,(m),(d))

	)

6573 
	#CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_O≥øti⁄Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
, (l)))

	)

6574 
	#CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_O≥øti⁄Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
, (l)))

	)

6576 #i‡!
deföed
(
_CORBA_OpDes¸ùti⁄Seq_deföed
)

6577 
	#_CORBA_OpDes¸ùti⁄Seq_deföed
 1

	)

6578 
CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
 
	tCORBA_OpDes¸ùti⁄Seq
;

6579 
	#CORBA_OpDes¸ùti⁄Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_m¨shÆ
((x),(y),(z))

	)

6580 
	#CORBA_OpDes¸ùti⁄Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

6581 #i‡!
deföed
(
TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_0
)

6582 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_0
 'c'

	)

6583 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_1
 'o'

	)

6584 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_2
 'r'

	)

6585 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_3
 'b'

	)

6586 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_4
 'a'

	)

6587 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_5
 '_'

	)

6588 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_6
 'd'

	)

6589 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_7
 'e'

	)

6590 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_8
 'f'

	)

6591 
	#TC_IMPL_TC_CORBA_OpDes¸ùti⁄Seq_9
 's'

	)

6592 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6597 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_OpDes¸ùti⁄Seq_°ru˘
;

6598 
	#TC_CORBA_OpDes¸ùti⁄Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_OpDes¸ùti⁄Seq_°ru˘
)

	)

6600 
	#CORBA_OpDes¸ùti⁄Seq__Æloc
(Ë((
CORBA_OpDes¸ùti⁄Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
))

	)

6601 
	#CORBA_OpDes¸ùti⁄Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
,(m),(d))

	)

6602 
	#CORBA_OpDes¸ùti⁄Seq_Ælocbuf
(
l
Ë((
CORBA_O≥øti⁄Des¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_O≥øti⁄Des¸ùti⁄
, (l)))

	)

6604 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
)

6605 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
 1

	)

6606 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_0
 'c'

	)

6607 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_1
 'o'

	)

6608 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_2
 'r'

	)

6609 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_3
 'b'

	)

6610 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_4
 'a'

	)

6611 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_5
 '_'

	)

6612 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_6
 'd'

	)

6613 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_7
 'e'

	)

6614 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_8
 'f'

	)

6615 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_9
 's'

	)

6616 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_deföed
)

6617 
	#_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_deföed
 1

	)

6618 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_AâribuãDes¸ùti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
;

6620 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_0
)

6621 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_0
 'c'

	)

6622 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_1
 'o'

	)

6623 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_2
 'r'

	)

6624 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_3
 'b'

	)

6625 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_4
 'a'

	)

6626 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_5
 '_'

	)

6627 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_6
 'd'

	)

6628 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_7
 'e'

	)

6629 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_8
 'f'

	)

6630 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_9
 's'

	)

6631 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6636 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_°ru˘
;

6637 
	#TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_°ru˘
)

	)

6639 
	#CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄__Æloc
(Ë((
CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
))

	)

6640 
	#CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
,(m),(d))

	)

6641 
	#CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_AâribuãDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
, (l)))

	)

6642 
	#CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_AâribuãDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
, (l)))

	)

6644 #i‡!
deföed
(
_CORBA_AârDes¸ùti⁄Seq_deföed
)

6645 
	#_CORBA_AârDes¸ùti⁄Seq_deföed
 1

	)

6646 
CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
 
	tCORBA_AârDes¸ùti⁄Seq
;

6647 
	#CORBA_AârDes¸ùti⁄Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_m¨shÆ
((x),(y),(z))

	)

6648 
	#CORBA_AârDes¸ùti⁄Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

6649 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_0
)

6650 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_0
 'c'

	)

6651 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_1
 'o'

	)

6652 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_2
 'r'

	)

6653 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_3
 'b'

	)

6654 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_4
 'a'

	)

6655 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_5
 '_'

	)

6656 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_6
 'd'

	)

6657 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_7
 'e'

	)

6658 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_8
 'f'

	)

6659 
	#TC_IMPL_TC_CORBA_AârDes¸ùti⁄Seq_9
 's'

	)

6660 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6665 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AârDes¸ùti⁄Seq_°ru˘
;

6666 
	#TC_CORBA_AârDes¸ùti⁄Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AârDes¸ùti⁄Seq_°ru˘
)

	)

6668 
	#CORBA_AârDes¸ùti⁄Seq__Æloc
(Ë((
CORBA_AârDes¸ùti⁄Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
))

	)

6669 
	#CORBA_AârDes¸ùti⁄Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
,(m),(d))

	)

6670 
	#CORBA_AârDes¸ùti⁄Seq_Ælocbuf
(
l
Ë((
CORBA_AâribuãDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_AâribuãDes¸ùti⁄
, (l)))

	)

6672 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
)

6673 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
 1

	)

6674 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_0
 'c'

	)

6675 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_1
 'o'

	)

6676 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_2
 'r'

	)

6677 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_3
 'b'

	)

6678 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_4
 'a'

	)

6679 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_5
 '_'

	)

6680 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_6
 'd'

	)

6681 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_7
 'e'

	)

6682 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_8
 'f'

	)

6683 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_9
 's'

	)

6684 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_deföed
)

6685 
	#_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_deföed
 1

	)

6686 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_ExtAâribuãDes¸ùti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
;

6688 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_0
)

6689 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_0
 'c'

	)

6690 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_1
 'o'

	)

6691 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_2
 'r'

	)

6692 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_3
 'b'

	)

6693 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_4
 'a'

	)

6694 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_5
 '_'

	)

6695 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_6
 'd'

	)

6696 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_7
 'e'

	)

6697 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_8
 'f'

	)

6698 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_9
 's'

	)

6699 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6704 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_°ru˘
;

6705 
	#TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_°ru˘
)

	)

6707 
	#CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄__Æloc
(Ë((
CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
))

	)

6708 
	#CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
,(m),(d))

	)

6709 
	#CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_ExtAâribuãDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
, (l)))

	)

6710 
	#CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_Ælocbuf
(
l
Ë((
CORBA_ExtAâribuãDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
, (l)))

	)

6712 #i‡!
deföed
(
_CORBA_ExtAârDes¸ùti⁄Seq_deföed
)

6713 
	#_CORBA_ExtAârDes¸ùti⁄Seq_deföed
 1

	)

6714 
CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
 
	tCORBA_ExtAârDes¸ùti⁄Seq
;

6715 
	#CORBA_ExtAârDes¸ùti⁄Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_m¨shÆ
((x),(y),(z))

	)

6716 
	#CORBA_ExtAârDes¸ùti⁄Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

6717 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_0
)

6718 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_0
 'c'

	)

6719 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_1
 'o'

	)

6720 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_2
 'r'

	)

6721 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_3
 'b'

	)

6722 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_4
 'a'

	)

6723 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_5
 '_'

	)

6724 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_6
 'd'

	)

6725 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_7
 'e'

	)

6726 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_8
 'f'

	)

6727 
	#TC_IMPL_TC_CORBA_ExtAârDes¸ùti⁄Seq_9
 's'

	)

6728 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6733 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAârDes¸ùti⁄Seq_°ru˘
;

6734 
	#TC_CORBA_ExtAârDes¸ùti⁄Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAârDes¸ùti⁄Seq_°ru˘
)

	)

6736 
	#CORBA_ExtAârDes¸ùti⁄Seq__Æloc
(Ë((
CORBA_ExtAârDes¸ùti⁄Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
))

	)

6737 
	#CORBA_ExtAârDes¸ùti⁄Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
,(m),(d))

	)

6738 
	#CORBA_ExtAârDes¸ùti⁄Seq_Ælocbuf
(
l
Ë((
CORBA_ExtAâribuãDes¸ùti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ExtAâribuãDes¸ùti⁄
, (l)))

	)

6740 #i‡!
deföed
(
ORBIT_DECL_CORBA_I¡îÁ˚Def
Ë&& !deföed(
_CORBA_I¡îÁ˚Def_deföed
)

6741 
	#ORBIT_DECL_CORBA_I¡îÁ˚Def
 1

	)

6742 
	#_CORBA_I¡îÁ˚Def_deföed
 1

	)

6743 
	#CORBA_I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

6744 
CORBA_Obje˘
 
	tCORBA_I¡îÁ˚Def
;

6745 
CORBA_unsig√d_l⁄g
 
CORBA_I¡îÁ˚Def__˛assid
;

6746 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
)

6747 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
 'c'

	)

6748 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_1
 'o'

	)

6749 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_2
 'r'

	)

6750 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_3
 'b'

	)

6751 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_4
 'a'

	)

6752 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_5
 '_'

	)

6753 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_6
 'd'

	)

6754 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_7
 'e'

	)

6755 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_8
 'f'

	)

6756 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_9
 's'

	)

6757 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6762 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚Def_°ru˘
;

6763 
	#TC_CORBA_I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚Def_°ru˘
)

	)

6766 #i‡!
deföed
(
_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_deföed
)

6767 
	#_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_deföed
 1

	)

6768 
CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_ty≥
 
	tCORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄
;

6769 
	sCORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_ty≥
 {

6770 
CORBA_Idítifõr
 
	g«me
;

6771 
CORBA_Rïosô‹yId
 
	gid
;

6772 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

6773 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

6774 
CORBA_OpDes¸ùti⁄Seq
 
	g›î©i⁄s
;

6775 
CORBA_AârDes¸ùti⁄Seq
 
	g©åibuãs
;

6776 
CORBA_Rïosô‹yIdSeq
 
	gba£_öãrÁ˚s
;

6777 
CORBA_Ty≥Code
 
	gty≥
;

6778 
CORBA_boﬁón
 
	gis_ab°ø˘
;

6781 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_0
)

6782 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_0
 'c'

	)

6783 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_1
 'o'

	)

6784 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_2
 'r'

	)

6785 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_3
 'b'

	)

6786 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_4
 'a'

	)

6787 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_5
 '_'

	)

6788 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_6
 'd'

	)

6789 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_7
 'e'

	)

6790 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_8
 'f'

	)

6791 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_9
 's'

	)

6792 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6797 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_°ru˘
;

6798 
	#TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄_°ru˘
)

	)

6800 
	#CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄__Æloc
(Ë((
CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄
))

	)

6801 
	#CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄
,(m),(d))

	)

6803 #i‡!
deföed
(
_CORBA_I¡îÁ˚Des¸ùti⁄_deföed
)

6804 
	#_CORBA_I¡îÁ˚Des¸ùti⁄_deföed
 1

	)

6805 
CORBA_I¡îÁ˚Des¸ùti⁄_ty≥
 
	tCORBA_I¡îÁ˚Des¸ùti⁄
;

6806 
	sCORBA_I¡îÁ˚Des¸ùti⁄_ty≥
 {

6807 
CORBA_Idítifõr
 
	g«me
;

6808 
CORBA_Rïosô‹yId
 
	gid
;

6809 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

6810 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

6811 
CORBA_Rïosô‹yIdSeq
 
	gba£_öãrÁ˚s
;

6812 
CORBA_boﬁón
 
	gis_ab°ø˘
;

6815 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_0
)

6816 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_0
 'c'

	)

6817 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_1
 'o'

	)

6818 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_2
 'r'

	)

6819 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_3
 'b'

	)

6820 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_4
 'a'

	)

6821 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_5
 '_'

	)

6822 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_6
 'd'

	)

6823 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_7
 'e'

	)

6824 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_8
 'f'

	)

6825 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Des¸ùti⁄_9
 's'

	)

6826 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6831 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚Des¸ùti⁄_°ru˘
;

6832 
	#TC_CORBA_I¡îÁ˚Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚Des¸ùti⁄_°ru˘
)

	)

6834 
	#CORBA_I¡îÁ˚Des¸ùti⁄__Æloc
(Ë((
CORBA_I¡îÁ˚Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_I¡îÁ˚Des¸ùti⁄
))

	)

6835 
	#CORBA_I¡îÁ˚Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_I¡îÁ˚Des¸ùti⁄
,(m),(d))

	)

6837 #i‡!
deföed
(
ORBIT_DECL_CORBA_I¡îÁ˚AârExãnsi⁄
Ë&& !deföed(
_CORBA_I¡îÁ˚AârExãnsi⁄_deföed
)

6838 
	#ORBIT_DECL_CORBA_I¡îÁ˚AârExãnsi⁄
 1

	)

6839 
	#_CORBA_I¡îÁ˚AârExãnsi⁄_deföed
 1

	)

6840 
	#CORBA_I¡îÁ˚AârExãnsi⁄__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

6841 
CORBA_Obje˘
 
	tCORBA_I¡îÁ˚AârExãnsi⁄
;

6842 
CORBA_unsig√d_l⁄g
 
CORBA_I¡îÁ˚AârExãnsi⁄__˛assid
;

6843 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_0
)

6844 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_0
 'c'

	)

6845 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_1
 'o'

	)

6846 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_2
 'r'

	)

6847 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_3
 'b'

	)

6848 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_4
 'a'

	)

6849 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_5
 '_'

	)

6850 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_6
 'd'

	)

6851 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_7
 'e'

	)

6852 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_8
 'f'

	)

6853 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_9
 's'

	)

6854 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6859 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚AârExãnsi⁄_°ru˘
;

6860 
	#TC_CORBA_I¡îÁ˚AârExãnsi⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚AârExãnsi⁄_°ru˘
)

	)

6863 #i‡!
deföed
(
_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_deföed
)

6864 
	#_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_deföed
 1

	)

6865 
CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_ty≥
 
	tCORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄
;

6866 
	sCORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_ty≥
 {

6867 
CORBA_Idítifõr
 
	g«me
;

6868 
CORBA_Rïosô‹yId
 
	gid
;

6869 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

6870 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

6871 
CORBA_OpDes¸ùti⁄Seq
 
	g›î©i⁄s
;

6872 
CORBA_ExtAârDes¸ùti⁄Seq
 
	g©åibuãs
;

6873 
CORBA_Rïosô‹yIdSeq
 
	gba£_öãrÁ˚s
;

6874 
CORBA_Ty≥Code
 
	gty≥
;

6877 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_0
)

6878 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_0
 'c'

	)

6879 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_1
 'o'

	)

6880 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_2
 'r'

	)

6881 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_3
 'b'

	)

6882 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_4
 'a'

	)

6883 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_5
 '_'

	)

6884 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_6
 'd'

	)

6885 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_7
 'e'

	)

6886 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_8
 'f'

	)

6887 
	#TC_IMPL_TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_9
 's'

	)

6888 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6893 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_°ru˘
;

6894 
	#TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄_°ru˘
)

	)

6896 
	#CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄__Æloc
(Ë((
CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄
))

	)

6897 
	#CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄
,(m),(d))

	)

6899 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtI¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtI¡îÁ˚Def_deföed
)

6900 
	#ORBIT_DECL_CORBA_ExtI¡îÁ˚Def
 1

	)

6901 
	#_CORBA_ExtI¡îÁ˚Def_deföed
 1

	)

6902 
	#CORBA_ExtI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

6903 
CORBA_Obje˘
 
	tCORBA_ExtI¡îÁ˚Def
;

6904 
CORBA_unsig√d_l⁄g
 
CORBA_ExtI¡îÁ˚Def__˛assid
;

6905 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_0
)

6906 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_0
 'c'

	)

6907 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_1
 'o'

	)

6908 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_2
 'r'

	)

6909 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_3
 'b'

	)

6910 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_4
 'a'

	)

6911 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_5
 '_'

	)

6912 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_6
 'd'

	)

6913 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_7
 'e'

	)

6914 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_8
 'f'

	)

6915 
	#TC_IMPL_TC_CORBA_ExtI¡îÁ˚Def_9
 's'

	)

6916 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6921 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtI¡îÁ˚Def_°ru˘
;

6922 
	#TC_CORBA_ExtI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtI¡îÁ˚Def_°ru˘
)

	)

6925 #i‡!
deföed
(
_CORBA_Visibûôy_deföed
)

6926 
	#_CORBA_Visibûôy_deföed
 1

	)

6927 
CORBA_sh‹t
 
	tCORBA_Visibûôy
;

6928 
	#CORBA_Visibûôy_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

6929 
	#CORBA_Visibûôy_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

6930 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Visibûôy_0
)

6931 
	#TC_IMPL_TC_CORBA_Visibûôy_0
 'c'

	)

6932 
	#TC_IMPL_TC_CORBA_Visibûôy_1
 'o'

	)

6933 
	#TC_IMPL_TC_CORBA_Visibûôy_2
 'r'

	)

6934 
	#TC_IMPL_TC_CORBA_Visibûôy_3
 'b'

	)

6935 
	#TC_IMPL_TC_CORBA_Visibûôy_4
 'a'

	)

6936 
	#TC_IMPL_TC_CORBA_Visibûôy_5
 '_'

	)

6937 
	#TC_IMPL_TC_CORBA_Visibûôy_6
 'd'

	)

6938 
	#TC_IMPL_TC_CORBA_Visibûôy_7
 'e'

	)

6939 
	#TC_IMPL_TC_CORBA_Visibûôy_8
 'f'

	)

6940 
	#TC_IMPL_TC_CORBA_Visibûôy_9
 's'

	)

6941 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6946 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Visibûôy_°ru˘
;

6947 
	#TC_CORBA_Visibûôy
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Visibûôy_°ru˘
)

	)

6949 
	#CORBA_Visibûôy__Æloc
(Ë((
CORBA_Visibûôy
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_sh‹t
))

	)

6950 
	#CORBA_Visibûôy__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_sh‹t
,(m),(d))

	)

6952 #i‚de‡
CORBA_PRIVATE_MEMBER


6953 
	#CORBA_PRIVATE_MEMBER
 0

	)

6956 #i‚de‡
CORBA_PUBLIC_MEMBER


6957 
	#CORBA_PUBLIC_MEMBER
 1

	)

6960 #i‡!
deföed
(
_CORBA_VÆueMembî_deföed
)

6961 
	#_CORBA_VÆueMembî_deföed
 1

	)

6962 
CORBA_VÆueMembî_ty≥
 
	tCORBA_VÆueMembî
;

6963 
	sCORBA_VÆueMembî_ty≥
 {

6964 
CORBA_Idítifõr
 
	g«me
;

6965 
CORBA_Rïosô‹yId
 
	gid
;

6966 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

6967 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

6968 
CORBA_Ty≥Code
 
	gty≥
;

6969 
CORBA_IDLTy≥
 
	gty≥_def
;

6970 
CORBA_Visibûôy
 
	gac˚ss
;

6973 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueMembî_0
)

6974 
	#TC_IMPL_TC_CORBA_VÆueMembî_0
 'c'

	)

6975 
	#TC_IMPL_TC_CORBA_VÆueMembî_1
 'o'

	)

6976 
	#TC_IMPL_TC_CORBA_VÆueMembî_2
 'r'

	)

6977 
	#TC_IMPL_TC_CORBA_VÆueMembî_3
 'b'

	)

6978 
	#TC_IMPL_TC_CORBA_VÆueMembî_4
 'a'

	)

6979 
	#TC_IMPL_TC_CORBA_VÆueMembî_5
 '_'

	)

6980 
	#TC_IMPL_TC_CORBA_VÆueMembî_6
 'd'

	)

6981 
	#TC_IMPL_TC_CORBA_VÆueMembî_7
 'e'

	)

6982 
	#TC_IMPL_TC_CORBA_VÆueMembî_8
 'f'

	)

6983 
	#TC_IMPL_TC_CORBA_VÆueMembî_9
 's'

	)

6984 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


6989 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueMembî_°ru˘
;

6990 
	#TC_CORBA_VÆueMembî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueMembî_°ru˘
)

	)

6992 
	#CORBA_VÆueMembî__Æloc
(Ë((
CORBA_VÆueMembî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_VÆueMembî
))

	)

6993 
	#CORBA_VÆueMembî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_VÆueMembî
,(m),(d))

	)

6995 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_VÆueMembî
)

6996 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_VÆueMembî
 1

	)

6997 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_0
 'c'

	)

6998 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_1
 'o'

	)

6999 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_2
 'r'

	)

7000 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_3
 'b'

	)

7001 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_4
 'a'

	)

7002 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_5
 '_'

	)

7003 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_6
 'd'

	)

7004 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_7
 'e'

	)

7005 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_8
 'f'

	)

7006 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_VÆueMembî_9
 's'

	)

7007 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_VÆueMembî_deföed
)

7008 
	#_CORBA_£quí˚_CORBA_VÆueMembî_deföed
 1

	)

7009 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_VÆueMembî
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_VÆueMembî
;

7011 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_0
)

7012 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_0
 'c'

	)

7013 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_1
 'o'

	)

7014 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_2
 'r'

	)

7015 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_3
 'b'

	)

7016 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_4
 'a'

	)

7017 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_5
 '_'

	)

7018 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_6
 'd'

	)

7019 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_7
 'e'

	)

7020 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_8
 'f'

	)

7021 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_VÆueMembî_9
 's'

	)

7022 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7027 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_VÆueMembî_°ru˘
;

7028 
	#TC_CORBA_£quí˚_CORBA_VÆueMembî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_VÆueMembî_°ru˘
)

	)

7030 
	#CORBA_£quí˚_CORBA_VÆueMembî__Æloc
(Ë((
CORBA_£quí˚_CORBA_VÆueMembî
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
))

	)

7031 
	#CORBA_£quí˚_CORBA_VÆueMembî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
,(m),(d))

	)

7032 
	#CORBA_£quí˚_CORBA_VÆueMembî_Ælocbuf
(
l
Ë((
CORBA_VÆueMembî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
, (l)))

	)

7033 
	#CORBA_£quí˚_CORBA_VÆueMembî_Ælocbuf
(
l
Ë((
CORBA_VÆueMembî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
, (l)))

	)

7035 #i‡!
deföed
(
_CORBA_VÆueMembîSeq_deföed
)

7036 
	#_CORBA_VÆueMembîSeq_deföed
 1

	)

7037 
CORBA_£quí˚_CORBA_VÆueMembî
 
	tCORBA_VÆueMembîSeq
;

7038 
	#CORBA_VÆueMembîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_VÆueMembî_m¨shÆ
((x),(y),(z))

	)

7039 
	#CORBA_VÆueMembîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_VÆueMembî_dem¨shÆ
((x),(y),(z),(i))

	)

7040 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueMembîSeq_0
)

7041 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_0
 'c'

	)

7042 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_1
 'o'

	)

7043 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_2
 'r'

	)

7044 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_3
 'b'

	)

7045 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_4
 'a'

	)

7046 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_5
 '_'

	)

7047 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_6
 'd'

	)

7048 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_7
 'e'

	)

7049 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_8
 'f'

	)

7050 
	#TC_IMPL_TC_CORBA_VÆueMembîSeq_9
 's'

	)

7051 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7056 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueMembîSeq_°ru˘
;

7057 
	#TC_CORBA_VÆueMembîSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueMembîSeq_°ru˘
)

	)

7059 
	#CORBA_VÆueMembîSeq__Æloc
(Ë((
CORBA_VÆueMembîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
))

	)

7060 
	#CORBA_VÆueMembîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
,(m),(d))

	)

7061 
	#CORBA_VÆueMembîSeq_Ælocbuf
(
l
Ë((
CORBA_VÆueMembî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_VÆueMembî
, (l)))

	)

7063 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueMembîDef
Ë&& !deföed(
_CORBA_VÆueMembîDef_deföed
)

7064 
	#ORBIT_DECL_CORBA_VÆueMembîDef
 1

	)

7065 
	#_CORBA_VÆueMembîDef_deföed
 1

	)

7066 
	#CORBA_VÆueMembîDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7067 
CORBA_Obje˘
 
	tCORBA_VÆueMembîDef
;

7068 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueMembîDef__˛assid
;

7069 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueMembîDef_0
)

7070 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_0
 'c'

	)

7071 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_1
 'o'

	)

7072 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_2
 'r'

	)

7073 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_3
 'b'

	)

7074 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_4
 'a'

	)

7075 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_5
 '_'

	)

7076 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_6
 'd'

	)

7077 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_7
 'e'

	)

7078 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_8
 'f'

	)

7079 
	#TC_IMPL_TC_CORBA_VÆueMembîDef_9
 's'

	)

7080 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7085 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueMembîDef_°ru˘
;

7086 
	#TC_CORBA_VÆueMembîDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueMembîDef_°ru˘
)

	)

7089 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueDef
Ë&& !deföed(
_CORBA_VÆueDef_deföed
)

7090 
	#ORBIT_DECL_CORBA_VÆueDef
 1

	)

7091 
	#_CORBA_VÆueDef_deföed
 1

	)

7092 
	#CORBA_VÆueDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7093 
CORBA_Obje˘
 
	tCORBA_VÆueDef
;

7094 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueDef__˛assid
;

7095 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueDef_0
)

7096 
	#TC_IMPL_TC_CORBA_VÆueDef_0
 'c'

	)

7097 
	#TC_IMPL_TC_CORBA_VÆueDef_1
 'o'

	)

7098 
	#TC_IMPL_TC_CORBA_VÆueDef_2
 'r'

	)

7099 
	#TC_IMPL_TC_CORBA_VÆueDef_3
 'b'

	)

7100 
	#TC_IMPL_TC_CORBA_VÆueDef_4
 'a'

	)

7101 
	#TC_IMPL_TC_CORBA_VÆueDef_5
 '_'

	)

7102 
	#TC_IMPL_TC_CORBA_VÆueDef_6
 'd'

	)

7103 
	#TC_IMPL_TC_CORBA_VÆueDef_7
 'e'

	)

7104 
	#TC_IMPL_TC_CORBA_VÆueDef_8
 'f'

	)

7105 
	#TC_IMPL_TC_CORBA_VÆueDef_9
 's'

	)

7106 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7111 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueDef_°ru˘
;

7112 
	#TC_CORBA_VÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueDef_°ru˘
)

	)

7115 #i‡!
deföed
(
_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_deföed
)

7116 
	#_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_deföed
 1

	)

7117 
CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_ty≥
 
	tCORBA_VÆueDef_FuŒVÆueDes¸ùti⁄
;

7118 
	sCORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_ty≥
 {

7119 
CORBA_Idítifõr
 
	g«me
;

7120 
CORBA_Rïosô‹yId
 
	gid
;

7121 
CORBA_boﬁón
 
	gis_ab°ø˘
;

7122 
CORBA_boﬁón
 
	gis_cu°om
;

7123 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

7124 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

7125 
CORBA_OpDes¸ùti⁄Seq
 
	g›î©i⁄s
;

7126 
CORBA_AârDes¸ùti⁄Seq
 
	g©åibuãs
;

7127 
CORBA_VÆueMembîSeq
 
	gmembîs
;

7128 
CORBA_InôülizîSeq
 
	göôülizîs
;

7129 
CORBA_Rïosô‹yIdSeq
 
	gsuµ‹ãd_öãrÁ˚s
;

7130 
CORBA_Rïosô‹yIdSeq
 
	gab°ø˘_ba£_vÆues
;

7131 
CORBA_boﬁón
 
	gis_åunˇèbÀ
;

7132 
CORBA_Rïosô‹yId
 
	gba£_vÆue
;

7133 
CORBA_Ty≥Code
 
	gty≥
;

7136 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_0
)

7137 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_0
 'c'

	)

7138 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_1
 'o'

	)

7139 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_2
 'r'

	)

7140 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_3
 'b'

	)

7141 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_4
 'a'

	)

7142 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_5
 '_'

	)

7143 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_6
 'd'

	)

7144 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_7
 'e'

	)

7145 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_8
 'f'

	)

7146 
	#TC_IMPL_TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_9
 's'

	)

7147 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7152 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_°ru˘
;

7153 
	#TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄_°ru˘
)

	)

7155 
	#CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄__Æloc
(Ë((
CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄
))

	)

7156 
	#CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄
,(m),(d))

	)

7158 #i‡!
deföed
(
_CORBA_VÆueDes¸ùti⁄_deföed
)

7159 
	#_CORBA_VÆueDes¸ùti⁄_deföed
 1

	)

7160 
CORBA_VÆueDes¸ùti⁄_ty≥
 
	tCORBA_VÆueDes¸ùti⁄
;

7161 
	sCORBA_VÆueDes¸ùti⁄_ty≥
 {

7162 
CORBA_Idítifõr
 
	g«me
;

7163 
CORBA_Rïosô‹yId
 
	gid
;

7164 
CORBA_boﬁón
 
	gis_ab°ø˘
;

7165 
CORBA_boﬁón
 
	gis_cu°om
;

7166 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

7167 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

7168 
CORBA_Rïosô‹yIdSeq
 
	gsuµ‹ãd_öãrÁ˚s
;

7169 
CORBA_Rïosô‹yIdSeq
 
	gab°ø˘_ba£_vÆues
;

7170 
CORBA_boﬁón
 
	gis_åunˇèbÀ
;

7171 
CORBA_Rïosô‹yId
 
	gba£_vÆue
;

7174 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_0
)

7175 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_0
 'c'

	)

7176 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_1
 'o'

	)

7177 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_2
 'r'

	)

7178 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_3
 'b'

	)

7179 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_4
 'a'

	)

7180 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_5
 '_'

	)

7181 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_6
 'd'

	)

7182 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_7
 'e'

	)

7183 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_8
 'f'

	)

7184 
	#TC_IMPL_TC_CORBA_VÆueDes¸ùti⁄_9
 's'

	)

7185 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7190 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueDes¸ùti⁄_°ru˘
;

7191 
	#TC_CORBA_VÆueDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueDes¸ùti⁄_°ru˘
)

	)

7193 
	#CORBA_VÆueDes¸ùti⁄__Æloc
(Ë((
CORBA_VÆueDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_VÆueDes¸ùti⁄
))

	)

7194 
	#CORBA_VÆueDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_VÆueDes¸ùti⁄
,(m),(d))

	)

7196 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtVÆueDef
Ë&& !deföed(
_CORBA_ExtVÆueDef_deföed
)

7197 
	#ORBIT_DECL_CORBA_ExtVÆueDef
 1

	)

7198 
	#_CORBA_ExtVÆueDef_deföed
 1

	)

7199 
	#CORBA_ExtVÆueDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7200 
CORBA_Obje˘
 
	tCORBA_ExtVÆueDef
;

7201 
CORBA_unsig√d_l⁄g
 
CORBA_ExtVÆueDef__˛assid
;

7202 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtVÆueDef_0
)

7203 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_0
 'c'

	)

7204 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_1
 'o'

	)

7205 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_2
 'r'

	)

7206 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_3
 'b'

	)

7207 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_4
 'a'

	)

7208 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_5
 '_'

	)

7209 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_6
 'd'

	)

7210 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_7
 'e'

	)

7211 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_8
 'f'

	)

7212 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_9
 's'

	)

7213 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7218 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtVÆueDef_°ru˘
;

7219 
	#TC_CORBA_ExtVÆueDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtVÆueDef_°ru˘
)

	)

7222 #i‡!
deföed
(
_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_deföed
)

7223 
	#_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_deföed
 1

	)

7224 
CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_ty≥
 
	tCORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄
;

7225 
	sCORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_ty≥
 {

7226 
CORBA_Idítifõr
 
	g«me
;

7227 
CORBA_Rïosô‹yId
 
	gid
;

7228 
CORBA_boﬁón
 
	gis_ab°ø˘
;

7229 
CORBA_boﬁón
 
	gis_cu°om
;

7230 
CORBA_Rïosô‹yId
 
	gdeföed_ö
;

7231 
CORBA_Vîsi⁄S≥c
 
	gvîsi⁄
;

7232 
CORBA_OpDes¸ùti⁄Seq
 
	g›î©i⁄s
;

7233 
CORBA_ExtAârDes¸ùti⁄Seq
 
	g©åibuãs
;

7234 
CORBA_VÆueMembîSeq
 
	gmembîs
;

7235 
CORBA_ExtInôülizîSeq
 
	göôülizîs
;

7236 
CORBA_Rïosô‹yIdSeq
 
	gsuµ‹ãd_öãrÁ˚s
;

7237 
CORBA_Rïosô‹yIdSeq
 
	gab°ø˘_ba£_vÆues
;

7238 
CORBA_boﬁón
 
	gis_åunˇèbÀ
;

7239 
CORBA_Rïosô‹yId
 
	gba£_vÆue
;

7240 
CORBA_Ty≥Code
 
	gty≥
;

7243 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_0
)

7244 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_0
 'c'

	)

7245 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_1
 'o'

	)

7246 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_2
 'r'

	)

7247 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_3
 'b'

	)

7248 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_4
 'a'

	)

7249 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_5
 '_'

	)

7250 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_6
 'd'

	)

7251 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_7
 'e'

	)

7252 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_8
 'f'

	)

7253 
	#TC_IMPL_TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_9
 's'

	)

7254 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7259 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_°ru˘
;

7260 
	#TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄_°ru˘
)

	)

7262 
	#CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄__Æloc
(Ë((
CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄
))

	)

7263 
	#CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄
,(m),(d))

	)

7265 #i‡!
deföed
(
ORBIT_DECL_CORBA_VÆueBoxDef
Ë&& !deföed(
_CORBA_VÆueBoxDef_deföed
)

7266 
	#ORBIT_DECL_CORBA_VÆueBoxDef
 1

	)

7267 
	#_CORBA_VÆueBoxDef_deföed
 1

	)

7268 
	#CORBA_VÆueBoxDef__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7269 
CORBA_Obje˘
 
	tCORBA_VÆueBoxDef
;

7270 
CORBA_unsig√d_l⁄g
 
CORBA_VÆueBoxDef__˛assid
;

7271 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueBoxDef_0
)

7272 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_0
 'c'

	)

7273 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_1
 'o'

	)

7274 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_2
 'r'

	)

7275 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_3
 'b'

	)

7276 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_4
 'a'

	)

7277 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_5
 '_'

	)

7278 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_6
 'd'

	)

7279 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_7
 'e'

	)

7280 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_8
 'f'

	)

7281 
	#TC_IMPL_TC_CORBA_VÆueBoxDef_9
 's'

	)

7282 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7287 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueBoxDef_°ru˘
;

7288 
	#TC_CORBA_VÆueBoxDef
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueBoxDef_°ru˘
)

	)

7291 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ab°ø˘I¡îÁ˚Def
Ë&& !deföed(
_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
)

7292 
	#ORBIT_DECL_CORBA_Ab°ø˘I¡îÁ˚Def
 1

	)

7293 
	#_CORBA_Ab°ø˘I¡îÁ˚Def_deföed
 1

	)

7294 
	#CORBA_Ab°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7295 
CORBA_Obje˘
 
	tCORBA_Ab°ø˘I¡îÁ˚Def
;

7296 
CORBA_unsig√d_l⁄g
 
CORBA_Ab°ø˘I¡îÁ˚Def__˛assid
;

7297 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_0
)

7298 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_0
 'c'

	)

7299 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_1
 'o'

	)

7300 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_2
 'r'

	)

7301 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_3
 'b'

	)

7302 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_4
 'a'

	)

7303 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_5
 '_'

	)

7304 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_6
 'd'

	)

7305 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_7
 'e'

	)

7306 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_8
 'f'

	)

7307 
	#TC_IMPL_TC_CORBA_Ab°ø˘I¡îÁ˚Def_9
 's'

	)

7308 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7313 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
;

7314 
	#TC_CORBA_Ab°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ab°ø˘I¡îÁ˚Def_°ru˘
)

	)

7317 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtAb°ø˘I¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
)

7318 
	#ORBIT_DECL_CORBA_ExtAb°ø˘I¡îÁ˚Def
 1

	)

7319 
	#_CORBA_ExtAb°ø˘I¡îÁ˚Def_deföed
 1

	)

7320 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7321 
CORBA_Obje˘
 
	tCORBA_ExtAb°ø˘I¡îÁ˚Def
;

7322 
CORBA_unsig√d_l⁄g
 
CORBA_ExtAb°ø˘I¡îÁ˚Def__˛assid
;

7323 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
)

7324 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_0
 'c'

	)

7325 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_1
 'o'

	)

7326 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_2
 'r'

	)

7327 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_3
 'b'

	)

7328 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_4
 'a'

	)

7329 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_5
 '_'

	)

7330 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_6
 'd'

	)

7331 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_7
 'e'

	)

7332 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_8
 'f'

	)

7333 
	#TC_IMPL_TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_9
 's'

	)

7334 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7339 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
;

7340 
	#TC_CORBA_ExtAb°ø˘I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtAb°ø˘I¡îÁ˚Def_°ru˘
)

	)

7343 #i‡!
deföed
(
ORBIT_DECL_CORBA_LoˇlI¡îÁ˚Def
Ë&& !deföed(
_CORBA_LoˇlI¡îÁ˚Def_deföed
)

7344 
	#ORBIT_DECL_CORBA_LoˇlI¡îÁ˚Def
 1

	)

7345 
	#_CORBA_LoˇlI¡îÁ˚Def_deföed
 1

	)

7346 
	#CORBA_LoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7347 
CORBA_Obje˘
 
	tCORBA_LoˇlI¡îÁ˚Def
;

7348 
CORBA_unsig√d_l⁄g
 
CORBA_LoˇlI¡îÁ˚Def__˛assid
;

7349 #i‡!
deföed
(
TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_0
)

7350 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_0
 'c'

	)

7351 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_1
 'o'

	)

7352 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_2
 'r'

	)

7353 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_3
 'b'

	)

7354 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_4
 'a'

	)

7355 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_5
 '_'

	)

7356 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_6
 'd'

	)

7357 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_7
 'e'

	)

7358 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_8
 'f'

	)

7359 
	#TC_IMPL_TC_CORBA_LoˇlI¡îÁ˚Def_9
 's'

	)

7360 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7365 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_LoˇlI¡îÁ˚Def_°ru˘
;

7366 
	#TC_CORBA_LoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_LoˇlI¡îÁ˚Def_°ru˘
)

	)

7369 #i‡!
deföed
(
ORBIT_DECL_CORBA_ExtLoˇlI¡îÁ˚Def
Ë&& !deföed(
_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
)

7370 
	#ORBIT_DECL_CORBA_ExtLoˇlI¡îÁ˚Def
 1

	)

7371 
	#_CORBA_ExtLoˇlI¡îÁ˚Def_deföed
 1

	)

7372 
	#CORBA_ExtLoˇlI¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7373 
CORBA_Obje˘
 
	tCORBA_ExtLoˇlI¡îÁ˚Def
;

7374 
CORBA_unsig√d_l⁄g
 
CORBA_ExtLoˇlI¡îÁ˚Def__˛assid
;

7375 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_0
)

7376 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_0
 'c'

	)

7377 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_1
 'o'

	)

7378 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_2
 'r'

	)

7379 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_3
 'b'

	)

7380 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_4
 'a'

	)

7381 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_5
 '_'

	)

7382 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_6
 'd'

	)

7383 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_7
 'e'

	)

7384 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_8
 'f'

	)

7385 
	#TC_IMPL_TC_CORBA_ExtLoˇlI¡îÁ˚Def_9
 's'

	)

7386 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7391 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
;

7392 
	#TC_CORBA_ExtLoˇlI¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ExtLoˇlI¡îÁ˚Def_°ru˘
)

	)

7395 #i‡!
deföed
(
_CORBA_TCKöd_deföed
)

7396 
	#_CORBA_TCKöd_deföed
 1

	)

7398 
	gCORBA_tk_nuŒ
,

7399 
	gCORBA_tk_void
,

7400 
	gCORBA_tk_sh‹t
,

7401 
	gCORBA_tk_l⁄g
,

7402 
	gCORBA_tk_ush‹t
,

7403 
	gCORBA_tk_ul⁄g
,

7404 
	gCORBA_tk_Êﬂt
,

7405 
	gCORBA_tk_doubÀ
,

7406 
	gCORBA_tk_boﬁón
,

7407 
	gCORBA_tk_ch¨
,

7408 
	gCORBA_tk_o˘ë
,

7409 
	gCORBA_tk_™y
,

7410 
	gCORBA_tk_Ty≥Code
,

7411 
	gCORBA_tk_PröcùÆ
,

7412 
	gCORBA_tk_objªf
,

7413 
	gCORBA_tk_°ru˘
,

7414 
	gCORBA_tk_uni⁄
,

7415 
	gCORBA_tk_íum
,

7416 
	gCORBA_tk_°rög
,

7417 
	gCORBA_tk_£quí˚
,

7418 
	gCORBA_tk_¨øy
,

7419 
	gCORBA_tk_Æüs
,

7420 
	gCORBA_tk_ex˚±
,

7421 
	gCORBA_tk_l⁄gl⁄g
,

7422 
	gCORBA_tk_ul⁄gl⁄g
,

7423 
	gCORBA_tk_l⁄gdoubÀ
,

7424 
	gCORBA_tk_wch¨
,

7425 
	gCORBA_tk_w°rög
,

7426 
	gCORBA_tk_fixed
,

7427 
	gCORBA_tk_vÆue
,

7428 
	gCORBA_tk_vÆue_box
,

7429 
	gCORBA_tk_«tive
,

7430 
	gCORBA_tk_ab°ø˘_öãrÁ˚
,

7431 
	gCORBA_tk_loˇl_öãrÁ˚
,

7432 
	gCORBA_tk_comp⁄ít
,

7433 
	gCORBA_tk_home
,

7434 
	gCORBA_tk_evít


7435 } 
	tCORBA_TCKöd
;

7436 #i‡!
deföed
(
TC_IMPL_TC_CORBA_TCKöd_0
)

7437 
	#TC_IMPL_TC_CORBA_TCKöd_0
 'c'

	)

7438 
	#TC_IMPL_TC_CORBA_TCKöd_1
 'o'

	)

7439 
	#TC_IMPL_TC_CORBA_TCKöd_2
 'r'

	)

7440 
	#TC_IMPL_TC_CORBA_TCKöd_3
 'b'

	)

7441 
	#TC_IMPL_TC_CORBA_TCKöd_4
 'a'

	)

7442 
	#TC_IMPL_TC_CORBA_TCKöd_5
 '_'

	)

7443 
	#TC_IMPL_TC_CORBA_TCKöd_6
 'd'

	)

7444 
	#TC_IMPL_TC_CORBA_TCKöd_7
 'e'

	)

7445 
	#TC_IMPL_TC_CORBA_TCKöd_8
 'f'

	)

7446 
	#TC_IMPL_TC_CORBA_TCKöd_9
 's'

	)

7447 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7452 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_TCKöd_°ru˘
;

7453 
	#TC_CORBA_TCKöd
 ((
CORBA_Ty≥Code
)&
TC_CORBA_TCKöd_°ru˘
)

	)

7456 #i‡!
deföed
(
_CORBA_VÆueModifõr_deföed
)

7457 
	#_CORBA_VÆueModifõr_deföed
 1

	)

7458 
CORBA_sh‹t
 
	tCORBA_VÆueModifõr
;

7459 
	#CORBA_VÆueModifõr_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

7460 
	#CORBA_VÆueModifõr_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

7461 #i‡!
deföed
(
TC_IMPL_TC_CORBA_VÆueModifõr_0
)

7462 
	#TC_IMPL_TC_CORBA_VÆueModifõr_0
 'c'

	)

7463 
	#TC_IMPL_TC_CORBA_VÆueModifõr_1
 'o'

	)

7464 
	#TC_IMPL_TC_CORBA_VÆueModifõr_2
 'r'

	)

7465 
	#TC_IMPL_TC_CORBA_VÆueModifõr_3
 'b'

	)

7466 
	#TC_IMPL_TC_CORBA_VÆueModifõr_4
 'a'

	)

7467 
	#TC_IMPL_TC_CORBA_VÆueModifõr_5
 '_'

	)

7468 
	#TC_IMPL_TC_CORBA_VÆueModifõr_6
 'd'

	)

7469 
	#TC_IMPL_TC_CORBA_VÆueModifõr_7
 'e'

	)

7470 
	#TC_IMPL_TC_CORBA_VÆueModifõr_8
 'f'

	)

7471 
	#TC_IMPL_TC_CORBA_VÆueModifõr_9
 's'

	)

7472 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7477 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_VÆueModifõr_°ru˘
;

7478 
	#TC_CORBA_VÆueModifõr
 ((
CORBA_Ty≥Code
)&
TC_CORBA_VÆueModifõr_°ru˘
)

	)

7480 
	#CORBA_VÆueModifõr__Æloc
(Ë((
CORBA_VÆueModifõr
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_sh‹t
))

	)

7481 
	#CORBA_VÆueModifõr__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_sh‹t
,(m),(d))

	)

7483 #i‚de‡
CORBA_VM_NONE


7484 
	#CORBA_VM_NONE
 0

	)

7487 #i‚de‡
CORBA_VM_CUSTOM


7488 
	#CORBA_VM_CUSTOM
 1

	)

7491 #i‚de‡
CORBA_VM_ABSTRACT


7492 
	#CORBA_VM_ABSTRACT
 2

	)

7495 #i‚de‡
CORBA_VM_TRUNCATABLE


7496 
	#CORBA_VM_TRUNCATABLE
 3

	)

7499 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ty≥Code
Ë&& !deföed(
_CORBA_Ty≥Code_deföed
)

7500 
	#ORBIT_DECL_CORBA_Ty≥Code
 1

	)

7501 
	#_CORBA_Ty≥Code_deföed
 1

	)

7502 
	#CORBA_Ty≥Code__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

7503 
CORBA_Obje˘
 
	tCORBA_Ty≥Code
;

7504 
CORBA_unsig√d_l⁄g
 
CORBA_Ty≥Code__˛assid
;

7505 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥Code_0
)

7506 
	#TC_IMPL_TC_CORBA_Ty≥Code_0
 'c'

	)

7507 
	#TC_IMPL_TC_CORBA_Ty≥Code_1
 'o'

	)

7508 
	#TC_IMPL_TC_CORBA_Ty≥Code_2
 'r'

	)

7509 
	#TC_IMPL_TC_CORBA_Ty≥Code_3
 'b'

	)

7510 
	#TC_IMPL_TC_CORBA_Ty≥Code_4
 'a'

	)

7511 
	#TC_IMPL_TC_CORBA_Ty≥Code_5
 '_'

	)

7512 
	#TC_IMPL_TC_CORBA_Ty≥Code_6
 'd'

	)

7513 
	#TC_IMPL_TC_CORBA_Ty≥Code_7
 'e'

	)

7514 
	#TC_IMPL_TC_CORBA_Ty≥Code_8
 'f'

	)

7515 
	#TC_IMPL_TC_CORBA_Ty≥Code_9
 's'

	)

7516 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7521 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥Code_°ru˘
;

7522 
	#TC_CORBA_Ty≥Code
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥Code_°ru˘
)

	)

7525 #unde‡
ex_CORBA_Ty≥Code_Bounds


7526 
	#ex_CORBA_Ty≥Code_Bounds
 "IDL:omg.‹g/CORBA/Ty≥Code/Bounds:1.0"

	)

7527 #i‡!
deföed
(
_CORBA_Ty≥Code_Bounds_deföed
)

7528 
	#_CORBA_Ty≥Code_Bounds_deföed
 1

	)

7529 
CORBA_Ty≥Code_Bounds_ty≥
 
	tCORBA_Ty≥Code_Bounds
;

7530 
	sCORBA_Ty≥Code_Bounds_ty≥
 {

7531 
	gdummy
;

7534 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥Code_Bounds_0
)

7535 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_0
 'c'

	)

7536 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_1
 'o'

	)

7537 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_2
 'r'

	)

7538 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_3
 'b'

	)

7539 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_4
 'a'

	)

7540 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_5
 '_'

	)

7541 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_6
 'd'

	)

7542 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_7
 'e'

	)

7543 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_8
 'f'

	)

7544 
	#TC_IMPL_TC_CORBA_Ty≥Code_Bounds_9
 's'

	)

7545 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7550 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥Code_Bounds_°ru˘
;

7551 
	#TC_CORBA_Ty≥Code_Bounds
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥Code_Bounds_°ru˘
)

	)

7553 
	#CORBA_Ty≥Code_Bounds__Æloc
(Ë((
CORBA_Ty≥Code_Bounds
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Ty≥Code_Bounds
))

	)

7554 
	#CORBA_Ty≥Code_Bounds__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Ty≥Code_Bounds
,(m),(d))

	)

7556 #unde‡
ex_CORBA_Ty≥Code_BadKöd


7557 
	#ex_CORBA_Ty≥Code_BadKöd
 "IDL:omg.‹g/CORBA/Ty≥Code/BadKöd:1.0"

	)

7558 #i‡!
deföed
(
_CORBA_Ty≥Code_BadKöd_deföed
)

7559 
	#_CORBA_Ty≥Code_BadKöd_deföed
 1

	)

7560 
CORBA_Ty≥Code_BadKöd_ty≥
 
	tCORBA_Ty≥Code_BadKöd
;

7561 
	sCORBA_Ty≥Code_BadKöd_ty≥
 {

7562 
	gdummy
;

7565 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_0
)

7566 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_0
 'c'

	)

7567 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_1
 'o'

	)

7568 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_2
 'r'

	)

7569 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_3
 'b'

	)

7570 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_4
 'a'

	)

7571 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_5
 '_'

	)

7572 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_6
 'd'

	)

7573 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_7
 'e'

	)

7574 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_8
 'f'

	)

7575 
	#TC_IMPL_TC_CORBA_Ty≥Code_BadKöd_9
 's'

	)

7576 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7581 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥Code_BadKöd_°ru˘
;

7582 
	#TC_CORBA_Ty≥Code_BadKöd
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥Code_BadKöd_°ru˘
)

	)

7584 
	#CORBA_Ty≥Code_BadKöd__Æloc
(Ë((
CORBA_Ty≥Code_BadKöd
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Ty≥Code_BadKöd
))

	)

7585 
	#CORBA_Ty≥Code_BadKöd__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Ty≥Code_BadKöd
,(m),(d))

	)

7587 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_™y
)

7588 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_™y
 1

	)

7589 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_0
 'c'

	)

7590 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_1
 'o'

	)

7591 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_2
 'r'

	)

7592 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_3
 'b'

	)

7593 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_4
 'a'

	)

7594 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_5
 '_'

	)

7595 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_6
 'd'

	)

7596 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_7
 'e'

	)

7597 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_8
 'f'

	)

7598 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_™y_9
 's'

	)

7599 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_™y_deföed
)

7600 
	#_CORBA_£quí˚_CORBA_™y_deföed
 1

	)

7601 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_™y
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_™y
;

7603 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_0
)

7604 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_0
 'c'

	)

7605 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_1
 'o'

	)

7606 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_2
 'r'

	)

7607 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_3
 'b'

	)

7608 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_4
 'a'

	)

7609 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_5
 '_'

	)

7610 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_6
 'd'

	)

7611 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_7
 'e'

	)

7612 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_8
 'f'

	)

7613 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_™y_9
 's'

	)

7614 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7619 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_™y_°ru˘
;

7620 
	#TC_CORBA_£quí˚_CORBA_™y
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_™y_°ru˘
)

	)

7622 
	#CORBA_£quí˚_CORBA_™y__Æloc
(Ë((
CORBA_£quí˚_CORBA_™y
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_™y
))

	)

7623 
	#CORBA_£quí˚_CORBA_™y__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_™y
,(m),(d))

	)

7624 
	#CORBA_£quí˚_CORBA_™y_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

7625 
	#CORBA_£quí˚_CORBA_™y_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

7627 #i‡!
deföed
(
_CORBA_AnySeq_deföed
)

7628 
	#_CORBA_AnySeq_deföed
 1

	)

7629 
CORBA_£quí˚_CORBA_™y
 
	tCORBA_AnySeq
;

7630 
	#CORBA_AnySeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_™y_m¨shÆ
((x),(y),(z))

	)

7631 
	#CORBA_AnySeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_™y_dem¨shÆ
((x),(y),(z),(i))

	)

7632 #i‡!
deföed
(
TC_IMPL_TC_CORBA_AnySeq_0
)

7633 
	#TC_IMPL_TC_CORBA_AnySeq_0
 'c'

	)

7634 
	#TC_IMPL_TC_CORBA_AnySeq_1
 'o'

	)

7635 
	#TC_IMPL_TC_CORBA_AnySeq_2
 'r'

	)

7636 
	#TC_IMPL_TC_CORBA_AnySeq_3
 'b'

	)

7637 
	#TC_IMPL_TC_CORBA_AnySeq_4
 'a'

	)

7638 
	#TC_IMPL_TC_CORBA_AnySeq_5
 '_'

	)

7639 
	#TC_IMPL_TC_CORBA_AnySeq_6
 'd'

	)

7640 
	#TC_IMPL_TC_CORBA_AnySeq_7
 'e'

	)

7641 
	#TC_IMPL_TC_CORBA_AnySeq_8
 'f'

	)

7642 
	#TC_IMPL_TC_CORBA_AnySeq_9
 's'

	)

7643 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7648 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_AnySeq_°ru˘
;

7649 
	#TC_CORBA_AnySeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_AnySeq_°ru˘
)

	)

7651 
	#CORBA_AnySeq__Æloc
(Ë((
CORBA_AnySeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_™y
))

	)

7652 
	#CORBA_AnySeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_™y
,(m),(d))

	)

7653 
	#CORBA_AnySeq_Ælocbuf
(
l
Ë((
CORBA_™y
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_™y
, (l)))

	)

7655 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_boﬁón
)

7656 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_boﬁón
 1

	)

7657 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_0
 'c'

	)

7658 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_1
 'o'

	)

7659 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_2
 'r'

	)

7660 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_3
 'b'

	)

7661 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_4
 'a'

	)

7662 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_5
 '_'

	)

7663 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_6
 'd'

	)

7664 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_7
 'e'

	)

7665 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_8
 'f'

	)

7666 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_boﬁón_9
 's'

	)

7667 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_boﬁón_deföed
)

7668 
	#_CORBA_£quí˚_CORBA_boﬁón_deföed
 1

	)

7669 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_boﬁón
* 
	g_buf„r
; CORBA_boﬁó¿
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_boﬁón
;

7671 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_0
)

7672 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_0
 'c'

	)

7673 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_1
 'o'

	)

7674 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_2
 'r'

	)

7675 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_3
 'b'

	)

7676 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_4
 'a'

	)

7677 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_5
 '_'

	)

7678 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_6
 'd'

	)

7679 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_7
 'e'

	)

7680 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_8
 'f'

	)

7681 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_boﬁón_9
 's'

	)

7682 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7687 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_boﬁón_°ru˘
;

7688 
	#TC_CORBA_£quí˚_CORBA_boﬁón
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_boﬁón_°ru˘
)

	)

7690 
	#CORBA_£quí˚_CORBA_boﬁón__Æloc
(Ë((
CORBA_£quí˚_CORBA_boﬁón
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_boﬁón
))

	)

7691 
	#CORBA_£quí˚_CORBA_boﬁón__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_boﬁón
,(m),(d))

	)

7692 
	#CORBA_£quí˚_CORBA_boﬁón_Ælocbuf
(
l
Ë((
CORBA_boﬁón
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_boﬁón
, (l)))

	)

7693 
	#CORBA_£quí˚_CORBA_boﬁón_Ælocbuf
(
l
Ë((
CORBA_boﬁón
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_boﬁón
, (l)))

	)

7695 #i‡!
deföed
(
_CORBA_BoﬁónSeq_deföed
)

7696 
	#_CORBA_BoﬁónSeq_deföed
 1

	)

7697 
CORBA_£quí˚_CORBA_boﬁón
 
	tCORBA_BoﬁónSeq
;

7698 
	#CORBA_BoﬁónSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_boﬁón_m¨shÆ
((x),(y),(z))

	)

7699 
	#CORBA_BoﬁónSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_boﬁón_dem¨shÆ
((x),(y),(z),(i))

	)

7700 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BoﬁónSeq_0
)

7701 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_0
 'c'

	)

7702 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_1
 'o'

	)

7703 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_2
 'r'

	)

7704 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_3
 'b'

	)

7705 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_4
 'a'

	)

7706 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_5
 '_'

	)

7707 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_6
 'd'

	)

7708 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_7
 'e'

	)

7709 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_8
 'f'

	)

7710 
	#TC_IMPL_TC_CORBA_BoﬁónSeq_9
 's'

	)

7711 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7716 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BoﬁónSeq_°ru˘
;

7717 
	#TC_CORBA_BoﬁónSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BoﬁónSeq_°ru˘
)

	)

7719 
	#CORBA_BoﬁónSeq__Æloc
(Ë((
CORBA_BoﬁónSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_boﬁón
))

	)

7720 
	#CORBA_BoﬁónSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_boﬁón
,(m),(d))

	)

7721 
	#CORBA_BoﬁónSeq_Ælocbuf
(
l
Ë((
CORBA_boﬁón
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_boﬁón
, (l)))

	)

7723 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ch¨
)

7724 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ch¨
 1

	)

7725 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_0
 'c'

	)

7726 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_1
 'o'

	)

7727 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_2
 'r'

	)

7728 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_3
 'b'

	)

7729 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_4
 'a'

	)

7730 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_5
 '_'

	)

7731 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_6
 'd'

	)

7732 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_7
 'e'

	)

7733 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_8
 'f'

	)

7734 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ch¨_9
 's'

	)

7735 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ch¨_deföed
)

7736 
	#_CORBA_£quí˚_CORBA_ch¨_deföed
 1

	)

7737 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_ch¨
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_ch¨
;

7739 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_0
)

7740 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_0
 'c'

	)

7741 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_1
 'o'

	)

7742 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_2
 'r'

	)

7743 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_3
 'b'

	)

7744 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_4
 'a'

	)

7745 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_5
 '_'

	)

7746 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_6
 'd'

	)

7747 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_7
 'e'

	)

7748 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_8
 'f'

	)

7749 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ch¨_9
 's'

	)

7750 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7755 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ch¨_°ru˘
;

7756 
	#TC_CORBA_£quí˚_CORBA_ch¨
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ch¨_°ru˘
)

	)

7758 
	#CORBA_£quí˚_CORBA_ch¨__Æloc
(Ë((
CORBA_£quí˚_CORBA_ch¨
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ch¨
))

	)

7759 
	#CORBA_£quí˚_CORBA_ch¨__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ch¨
,(m),(d))

	)

7760 
	#CORBA_£quí˚_CORBA_ch¨_Ælocbuf
(
l
Ë((
CORBA_ch¨
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ch¨
, (l)))

	)

7761 
	#CORBA_£quí˚_CORBA_ch¨_Ælocbuf
(
l
Ë((
CORBA_ch¨
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ch¨
, (l)))

	)

7763 #i‡!
deföed
(
_CORBA_Ch¨Seq_deföed
)

7764 
	#_CORBA_Ch¨Seq_deföed
 1

	)

7765 
CORBA_£quí˚_CORBA_ch¨
 
	tCORBA_Ch¨Seq
;

7766 
	#CORBA_Ch¨Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ch¨_m¨shÆ
((x),(y),(z))

	)

7767 
	#CORBA_Ch¨Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ch¨_dem¨shÆ
((x),(y),(z),(i))

	)

7768 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Ch¨Seq_0
)

7769 
	#TC_IMPL_TC_CORBA_Ch¨Seq_0
 'c'

	)

7770 
	#TC_IMPL_TC_CORBA_Ch¨Seq_1
 'o'

	)

7771 
	#TC_IMPL_TC_CORBA_Ch¨Seq_2
 'r'

	)

7772 
	#TC_IMPL_TC_CORBA_Ch¨Seq_3
 'b'

	)

7773 
	#TC_IMPL_TC_CORBA_Ch¨Seq_4
 'a'

	)

7774 
	#TC_IMPL_TC_CORBA_Ch¨Seq_5
 '_'

	)

7775 
	#TC_IMPL_TC_CORBA_Ch¨Seq_6
 'd'

	)

7776 
	#TC_IMPL_TC_CORBA_Ch¨Seq_7
 'e'

	)

7777 
	#TC_IMPL_TC_CORBA_Ch¨Seq_8
 'f'

	)

7778 
	#TC_IMPL_TC_CORBA_Ch¨Seq_9
 's'

	)

7779 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7784 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ch¨Seq_°ru˘
;

7785 
	#TC_CORBA_Ch¨Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ch¨Seq_°ru˘
)

	)

7787 
	#CORBA_Ch¨Seq__Æloc
(Ë((
CORBA_Ch¨Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ch¨
))

	)

7788 
	#CORBA_Ch¨Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ch¨
,(m),(d))

	)

7789 
	#CORBA_Ch¨Seq_Ælocbuf
(
l
Ë((
CORBA_ch¨
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ch¨
, (l)))

	)

7791 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_wch¨
)

7792 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_wch¨
 1

	)

7793 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_0
 'c'

	)

7794 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_1
 'o'

	)

7795 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_2
 'r'

	)

7796 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_3
 'b'

	)

7797 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_4
 'a'

	)

7798 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_5
 '_'

	)

7799 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_6
 'd'

	)

7800 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_7
 'e'

	)

7801 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_8
 'f'

	)

7802 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_wch¨_9
 's'

	)

7803 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_wch¨_deföed
)

7804 
	#_CORBA_£quí˚_CORBA_wch¨_deföed
 1

	)

7805 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_wch¨
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_wch¨
;

7807 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_0
)

7808 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_0
 'c'

	)

7809 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_1
 'o'

	)

7810 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_2
 'r'

	)

7811 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_3
 'b'

	)

7812 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_4
 'a'

	)

7813 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_5
 '_'

	)

7814 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_6
 'd'

	)

7815 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_7
 'e'

	)

7816 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_8
 'f'

	)

7817 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_wch¨_9
 's'

	)

7818 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7823 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_wch¨_°ru˘
;

7824 
	#TC_CORBA_£quí˚_CORBA_wch¨
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_wch¨_°ru˘
)

	)

7826 
	#CORBA_£quí˚_CORBA_wch¨__Æloc
(Ë((
CORBA_£quí˚_CORBA_wch¨
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_wch¨
))

	)

7827 
	#CORBA_£quí˚_CORBA_wch¨__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_wch¨
,(m),(d))

	)

7828 
	#CORBA_£quí˚_CORBA_wch¨_Ælocbuf
(
l
Ë((
CORBA_wch¨
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_wch¨
, (l)))

	)

7829 
	#CORBA_£quí˚_CORBA_wch¨_Ælocbuf
(
l
Ë((
CORBA_wch¨
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_wch¨
, (l)))

	)

7831 #i‡!
deföed
(
_CORBA_WCh¨Seq_deföed
)

7832 
	#_CORBA_WCh¨Seq_deföed
 1

	)

7833 
CORBA_£quí˚_CORBA_wch¨
 
	tCORBA_WCh¨Seq
;

7834 
	#CORBA_WCh¨Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_wch¨_m¨shÆ
((x),(y),(z))

	)

7835 
	#CORBA_WCh¨Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_wch¨_dem¨shÆ
((x),(y),(z),(i))

	)

7836 #i‡!
deföed
(
TC_IMPL_TC_CORBA_WCh¨Seq_0
)

7837 
	#TC_IMPL_TC_CORBA_WCh¨Seq_0
 'c'

	)

7838 
	#TC_IMPL_TC_CORBA_WCh¨Seq_1
 'o'

	)

7839 
	#TC_IMPL_TC_CORBA_WCh¨Seq_2
 'r'

	)

7840 
	#TC_IMPL_TC_CORBA_WCh¨Seq_3
 'b'

	)

7841 
	#TC_IMPL_TC_CORBA_WCh¨Seq_4
 'a'

	)

7842 
	#TC_IMPL_TC_CORBA_WCh¨Seq_5
 '_'

	)

7843 
	#TC_IMPL_TC_CORBA_WCh¨Seq_6
 'd'

	)

7844 
	#TC_IMPL_TC_CORBA_WCh¨Seq_7
 'e'

	)

7845 
	#TC_IMPL_TC_CORBA_WCh¨Seq_8
 'f'

	)

7846 
	#TC_IMPL_TC_CORBA_WCh¨Seq_9
 's'

	)

7847 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7852 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_WCh¨Seq_°ru˘
;

7853 
	#TC_CORBA_WCh¨Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_WCh¨Seq_°ru˘
)

	)

7855 
	#CORBA_WCh¨Seq__Æloc
(Ë((
CORBA_WCh¨Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_wch¨
))

	)

7856 
	#CORBA_WCh¨Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_wch¨
,(m),(d))

	)

7857 
	#CORBA_WCh¨Seq_Ælocbuf
(
l
Ë((
CORBA_wch¨
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_wch¨
, (l)))

	)

7859 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

7860 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

7861 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'c'

	)

7862 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

7863 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'r'

	)

7864 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 'b'

	)

7865 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'a'

	)

7866 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 '_'

	)

7867 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'd'

	)

7868 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 'e'

	)

7869 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_8
 'f'

	)

7870 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_9
 's'

	)

7871 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

7872 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

7873 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

7875 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

7876 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'c'

	)

7877 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

7878 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'r'

	)

7879 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 'b'

	)

7880 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'a'

	)

7881 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 '_'

	)

7882 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'd'

	)

7883 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 'e'

	)

7884 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_8
 'f'

	)

7885 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_9
 's'

	)

7886 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7891 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

7892 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

7894 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

7895 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

7896 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

7897 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

7899 #i‡!
deföed
(
_CORBA_O˘ëSeq_deföed
)

7900 
	#_CORBA_O˘ëSeq_deföed
 1

	)

7901 
CORBA_£quí˚_CORBA_o˘ë
 
	tCORBA_O˘ëSeq
;

7902 
	#CORBA_O˘ëSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

7903 
	#CORBA_O˘ëSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

7904 #i‡!
deföed
(
TC_IMPL_TC_CORBA_O˘ëSeq_0
)

7905 
	#TC_IMPL_TC_CORBA_O˘ëSeq_0
 'c'

	)

7906 
	#TC_IMPL_TC_CORBA_O˘ëSeq_1
 'o'

	)

7907 
	#TC_IMPL_TC_CORBA_O˘ëSeq_2
 'r'

	)

7908 
	#TC_IMPL_TC_CORBA_O˘ëSeq_3
 'b'

	)

7909 
	#TC_IMPL_TC_CORBA_O˘ëSeq_4
 'a'

	)

7910 
	#TC_IMPL_TC_CORBA_O˘ëSeq_5
 '_'

	)

7911 
	#TC_IMPL_TC_CORBA_O˘ëSeq_6
 'd'

	)

7912 
	#TC_IMPL_TC_CORBA_O˘ëSeq_7
 'e'

	)

7913 
	#TC_IMPL_TC_CORBA_O˘ëSeq_8
 'f'

	)

7914 
	#TC_IMPL_TC_CORBA_O˘ëSeq_9
 's'

	)

7915 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7920 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_O˘ëSeq_°ru˘
;

7921 
	#TC_CORBA_O˘ëSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_O˘ëSeq_°ru˘
)

	)

7923 
	#CORBA_O˘ëSeq__Æloc
(Ë((
CORBA_O˘ëSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

7924 
	#CORBA_O˘ëSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

7925 
	#CORBA_O˘ëSeq_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

7927 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_sh‹t
)

7928 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_sh‹t
 1

	)

7929 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_0
 'c'

	)

7930 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_1
 'o'

	)

7931 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_2
 'r'

	)

7932 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_3
 'b'

	)

7933 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_4
 'a'

	)

7934 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_5
 '_'

	)

7935 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_6
 'd'

	)

7936 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_7
 'e'

	)

7937 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_8
 'f'

	)

7938 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_sh‹t_9
 's'

	)

7939 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_sh‹t_deföed
)

7940 
	#_CORBA_£quí˚_CORBA_sh‹t_deföed
 1

	)

7941 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_sh‹t
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_sh‹t
;

7943 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_0
)

7944 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_0
 'c'

	)

7945 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_1
 'o'

	)

7946 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_2
 'r'

	)

7947 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_3
 'b'

	)

7948 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_4
 'a'

	)

7949 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_5
 '_'

	)

7950 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_6
 'd'

	)

7951 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_7
 'e'

	)

7952 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_8
 'f'

	)

7953 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_sh‹t_9
 's'

	)

7954 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7959 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_sh‹t_°ru˘
;

7960 
	#TC_CORBA_£quí˚_CORBA_sh‹t
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_sh‹t_°ru˘
)

	)

7962 
	#CORBA_£quí˚_CORBA_sh‹t__Æloc
(Ë((
CORBA_£quí˚_CORBA_sh‹t
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_sh‹t
))

	)

7963 
	#CORBA_£quí˚_CORBA_sh‹t__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_sh‹t
,(m),(d))

	)

7964 
	#CORBA_£quí˚_CORBA_sh‹t_Ælocbuf
(
l
Ë((
CORBA_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_sh‹t
, (l)))

	)

7965 
	#CORBA_£quí˚_CORBA_sh‹t_Ælocbuf
(
l
Ë((
CORBA_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_sh‹t
, (l)))

	)

7967 #i‡!
deföed
(
_CORBA_Sh‹tSeq_deföed
)

7968 
	#_CORBA_Sh‹tSeq_deföed
 1

	)

7969 
CORBA_£quí˚_CORBA_sh‹t
 
	tCORBA_Sh‹tSeq
;

7970 
	#CORBA_Sh‹tSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

7971 
	#CORBA_Sh‹tSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

7972 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sh‹tSeq_0
)

7973 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_0
 'c'

	)

7974 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_1
 'o'

	)

7975 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_2
 'r'

	)

7976 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_3
 'b'

	)

7977 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_4
 'a'

	)

7978 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_5
 '_'

	)

7979 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_6
 'd'

	)

7980 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_7
 'e'

	)

7981 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_8
 'f'

	)

7982 
	#TC_IMPL_TC_CORBA_Sh‹tSeq_9
 's'

	)

7983 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


7988 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sh‹tSeq_°ru˘
;

7989 
	#TC_CORBA_Sh‹tSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sh‹tSeq_°ru˘
)

	)

7991 
	#CORBA_Sh‹tSeq__Æloc
(Ë((
CORBA_Sh‹tSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_sh‹t
))

	)

7992 
	#CORBA_Sh‹tSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_sh‹t
,(m),(d))

	)

7993 
	#CORBA_Sh‹tSeq_Ælocbuf
(
l
Ë((
CORBA_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_sh‹t
, (l)))

	)

7995 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_sh‹t
)

7996 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_sh‹t
 1

	)

7997 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_0
 'c'

	)

7998 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_1
 'o'

	)

7999 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_2
 'r'

	)

8000 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_3
 'b'

	)

8001 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_4
 'a'

	)

8002 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_5
 '_'

	)

8003 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_6
 'd'

	)

8004 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_7
 'e'

	)

8005 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_8
 'f'

	)

8006 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_sh‹t_9
 's'

	)

8007 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_sh‹t_deföed
)

8008 
	#_CORBA_£quí˚_CORBA_unsig√d_sh‹t_deföed
 1

	)

8009 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_unsig√d_sh‹t
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_sh‹t
;

8011 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_0
)

8012 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_0
 'c'

	)

8013 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_1
 'o'

	)

8014 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_2
 'r'

	)

8015 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_3
 'b'

	)

8016 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_4
 'a'

	)

8017 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_5
 '_'

	)

8018 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_6
 'd'

	)

8019 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_7
 'e'

	)

8020 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_8
 'f'

	)

8021 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_9
 's'

	)

8022 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8027 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_°ru˘
;

8028 
	#TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t_°ru˘
)

	)

8030 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_sh‹t
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
))

	)

8031 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
,(m),(d))

	)

8032 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t_Ælocbuf
(
l
Ë((
CORBA_unsig√d_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
, (l)))

	)

8033 
	#CORBA_£quí˚_CORBA_unsig√d_sh‹t_Ælocbuf
(
l
Ë((
CORBA_unsig√d_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
, (l)))

	)

8035 #i‡!
deföed
(
_CORBA_USh‹tSeq_deföed
)

8036 
	#_CORBA_USh‹tSeq_deföed
 1

	)

8037 
CORBA_£quí˚_CORBA_unsig√d_sh‹t
 
	tCORBA_USh‹tSeq
;

8038 
	#CORBA_USh‹tSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_unsig√d_sh‹t_m¨shÆ
((x),(y),(z))

	)

8039 
	#CORBA_USh‹tSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_unsig√d_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

8040 #i‡!
deföed
(
TC_IMPL_TC_CORBA_USh‹tSeq_0
)

8041 
	#TC_IMPL_TC_CORBA_USh‹tSeq_0
 'c'

	)

8042 
	#TC_IMPL_TC_CORBA_USh‹tSeq_1
 'o'

	)

8043 
	#TC_IMPL_TC_CORBA_USh‹tSeq_2
 'r'

	)

8044 
	#TC_IMPL_TC_CORBA_USh‹tSeq_3
 'b'

	)

8045 
	#TC_IMPL_TC_CORBA_USh‹tSeq_4
 'a'

	)

8046 
	#TC_IMPL_TC_CORBA_USh‹tSeq_5
 '_'

	)

8047 
	#TC_IMPL_TC_CORBA_USh‹tSeq_6
 'd'

	)

8048 
	#TC_IMPL_TC_CORBA_USh‹tSeq_7
 'e'

	)

8049 
	#TC_IMPL_TC_CORBA_USh‹tSeq_8
 'f'

	)

8050 
	#TC_IMPL_TC_CORBA_USh‹tSeq_9
 's'

	)

8051 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8056 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_USh‹tSeq_°ru˘
;

8057 
	#TC_CORBA_USh‹tSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_USh‹tSeq_°ru˘
)

	)

8059 
	#CORBA_USh‹tSeq__Æloc
(Ë((
CORBA_USh‹tSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
))

	)

8060 
	#CORBA_USh‹tSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
,(m),(d))

	)

8061 
	#CORBA_USh‹tSeq_Ælocbuf
(
l
Ë((
CORBA_unsig√d_sh‹t
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_sh‹t
, (l)))

	)

8063 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g
)

8064 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g
 1

	)

8065 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_0
 'c'

	)

8066 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_1
 'o'

	)

8067 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_2
 'r'

	)

8068 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_3
 'b'

	)

8069 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_4
 'a'

	)

8070 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_5
 '_'

	)

8071 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_6
 'd'

	)

8072 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_7
 'e'

	)

8073 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_8
 'f'

	)

8074 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_9
 's'

	)

8075 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_l⁄g_deföed
)

8076 
	#_CORBA_£quí˚_CORBA_l⁄g_deföed
 1

	)

8077 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_l⁄g
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_l⁄g
;

8079 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_0
)

8080 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_0
 'c'

	)

8081 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_1
 'o'

	)

8082 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_2
 'r'

	)

8083 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_3
 'b'

	)

8084 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_4
 'a'

	)

8085 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_5
 '_'

	)

8086 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_6
 'd'

	)

8087 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_7
 'e'

	)

8088 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_8
 'f'

	)

8089 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_9
 's'

	)

8090 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8095 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_l⁄g_°ru˘
;

8096 
	#TC_CORBA_£quí˚_CORBA_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_l⁄g_°ru˘
)

	)

8098 
	#CORBA_£quí˚_CORBA_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g
))

	)

8099 
	#CORBA_£quí˚_CORBA_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g
,(m),(d))

	)

8100 
	#CORBA_£quí˚_CORBA_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

8101 
	#CORBA_£quí˚_CORBA_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

8103 #i‡!
deföed
(
_CORBA_L⁄gSeq_deföed
)

8104 
	#_CORBA_L⁄gSeq_deföed
 1

	)

8105 
CORBA_£quí˚_CORBA_l⁄g
 
	tCORBA_L⁄gSeq
;

8106 
	#CORBA_L⁄gSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_l⁄g_m¨shÆ
((x),(y),(z))

	)

8107 
	#CORBA_L⁄gSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

8108 #i‡!
deföed
(
TC_IMPL_TC_CORBA_L⁄gSeq_0
)

8109 
	#TC_IMPL_TC_CORBA_L⁄gSeq_0
 'c'

	)

8110 
	#TC_IMPL_TC_CORBA_L⁄gSeq_1
 'o'

	)

8111 
	#TC_IMPL_TC_CORBA_L⁄gSeq_2
 'r'

	)

8112 
	#TC_IMPL_TC_CORBA_L⁄gSeq_3
 'b'

	)

8113 
	#TC_IMPL_TC_CORBA_L⁄gSeq_4
 'a'

	)

8114 
	#TC_IMPL_TC_CORBA_L⁄gSeq_5
 '_'

	)

8115 
	#TC_IMPL_TC_CORBA_L⁄gSeq_6
 'd'

	)

8116 
	#TC_IMPL_TC_CORBA_L⁄gSeq_7
 'e'

	)

8117 
	#TC_IMPL_TC_CORBA_L⁄gSeq_8
 'f'

	)

8118 
	#TC_IMPL_TC_CORBA_L⁄gSeq_9
 's'

	)

8119 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8124 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_L⁄gSeq_°ru˘
;

8125 
	#TC_CORBA_L⁄gSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_L⁄gSeq_°ru˘
)

	)

8127 
	#CORBA_L⁄gSeq__Æloc
(Ë((
CORBA_L⁄gSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g
))

	)

8128 
	#CORBA_L⁄gSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g
,(m),(d))

	)

8129 
	#CORBA_L⁄gSeq_Ælocbuf
(
l
Ë((
CORBA_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g
, (l)))

	)

8131 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
)

8132 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 1

	)

8133 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'c'

	)

8134 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

8135 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'r'

	)

8136 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 'b'

	)

8137 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'a'

	)

8138 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 '_'

	)

8139 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'd'

	)

8140 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 'e'

	)

8141 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_8
 'f'

	)

8142 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_9
 's'

	)

8143 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
)

8144 
	#_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
 1

	)

8145 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; CORBA_unsig√d_l⁄g* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_l⁄g
;

8147 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
)

8148 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'c'

	)

8149 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

8150 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'r'

	)

8151 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 'b'

	)

8152 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'a'

	)

8153 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 '_'

	)

8154 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'd'

	)

8155 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 'e'

	)

8156 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_8
 'f'

	)

8157 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_9
 's'

	)

8158 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8163 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
;

8164 
	#TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
)

	)

8166 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
))

	)

8167 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
,(m),(d))

	)

8168 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

8169 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

8171 #i‡!
deföed
(
_CORBA_UL⁄gSeq_deföed
)

8172 
	#_CORBA_UL⁄gSeq_deföed
 1

	)

8173 
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 
	tCORBA_UL⁄gSeq
;

8174 
	#CORBA_UL⁄gSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

8175 
	#CORBA_UL⁄gSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

8176 #i‡!
deföed
(
TC_IMPL_TC_CORBA_UL⁄gSeq_0
)

8177 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_0
 'c'

	)

8178 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_1
 'o'

	)

8179 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_2
 'r'

	)

8180 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_3
 'b'

	)

8181 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_4
 'a'

	)

8182 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_5
 '_'

	)

8183 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_6
 'd'

	)

8184 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_7
 'e'

	)

8185 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_8
 'f'

	)

8186 
	#TC_IMPL_TC_CORBA_UL⁄gSeq_9
 's'

	)

8187 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8192 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_UL⁄gSeq_°ru˘
;

8193 
	#TC_CORBA_UL⁄gSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_UL⁄gSeq_°ru˘
)

	)

8195 
	#CORBA_UL⁄gSeq__Æloc
(Ë((
CORBA_UL⁄gSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
))

	)

8196 
	#CORBA_UL⁄gSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
,(m),(d))

	)

8197 
	#CORBA_UL⁄gSeq_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

8199 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g_l⁄g
)

8200 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g_l⁄g
 1

	)

8201 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_0
 'c'

	)

8202 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_1
 'o'

	)

8203 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_2
 'r'

	)

8204 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_3
 'b'

	)

8205 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_4
 'a'

	)

8206 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_5
 '_'

	)

8207 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_6
 'd'

	)

8208 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_7
 'e'

	)

8209 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_8
 'f'

	)

8210 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_l⁄g_9
 's'

	)

8211 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_l⁄g_l⁄g_deföed
)

8212 
	#_CORBA_£quí˚_CORBA_l⁄g_l⁄g_deföed
 1

	)

8213 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_l⁄g_l⁄g
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_l⁄g_l⁄g
;

8215 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_0
)

8216 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_0
 'c'

	)

8217 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_1
 'o'

	)

8218 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_2
 'r'

	)

8219 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_3
 'b'

	)

8220 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_4
 'a'

	)

8221 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_5
 '_'

	)

8222 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_6
 'd'

	)

8223 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_7
 'e'

	)

8224 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_8
 'f'

	)

8225 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_9
 's'

	)

8226 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8231 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_°ru˘
;

8232 
	#TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g_°ru˘
)

	)

8234 
	#CORBA_£quí˚_CORBA_l⁄g_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_l⁄g_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
))

	)

8235 
	#CORBA_£quí˚_CORBA_l⁄g_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
,(m),(d))

	)

8236 
	#CORBA_£quí˚_CORBA_l⁄g_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
, (l)))

	)

8237 
	#CORBA_£quí˚_CORBA_l⁄g_l⁄g_Ælocbuf
(
l
Ë((
CORBA_l⁄g_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
, (l)))

	)

8239 #i‡!
deföed
(
_CORBA_L⁄gL⁄gSeq_deföed
)

8240 
	#_CORBA_L⁄gL⁄gSeq_deföed
 1

	)

8241 
CORBA_£quí˚_CORBA_l⁄g_l⁄g
 
	tCORBA_L⁄gL⁄gSeq
;

8242 
	#CORBA_L⁄gL⁄gSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_l⁄g_l⁄g_m¨shÆ
((x),(y),(z))

	)

8243 
	#CORBA_L⁄gL⁄gSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_l⁄g_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

8244 #i‡!
deföed
(
TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_0
)

8245 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_0
 'c'

	)

8246 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_1
 'o'

	)

8247 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_2
 'r'

	)

8248 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_3
 'b'

	)

8249 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_4
 'a'

	)

8250 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_5
 '_'

	)

8251 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_6
 'd'

	)

8252 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_7
 'e'

	)

8253 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_8
 'f'

	)

8254 
	#TC_IMPL_TC_CORBA_L⁄gL⁄gSeq_9
 's'

	)

8255 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8260 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_L⁄gL⁄gSeq_°ru˘
;

8261 
	#TC_CORBA_L⁄gL⁄gSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_L⁄gL⁄gSeq_°ru˘
)

	)

8263 
	#CORBA_L⁄gL⁄gSeq__Æloc
(Ë((
CORBA_L⁄gL⁄gSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
))

	)

8264 
	#CORBA_L⁄gL⁄gSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
,(m),(d))

	)

8265 
	#CORBA_L⁄gL⁄gSeq_Ælocbuf
(
l
Ë((
CORBA_l⁄g_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g_l⁄g
, (l)))

	)

8267 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
)

8268 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
 1

	)

8269 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_0
 'c'

	)

8270 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_1
 'o'

	)

8271 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_2
 'r'

	)

8272 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_3
 'b'

	)

8273 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_4
 'a'

	)

8274 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_5
 '_'

	)

8275 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_6
 'd'

	)

8276 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_7
 'e'

	)

8277 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_8
 'f'

	)

8278 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_9
 's'

	)

8279 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_deföed
)

8280 
	#_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_deföed
 1

	)

8281 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_unsig√d_l⁄g_l⁄g
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
;

8283 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_0
)

8284 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_0
 'c'

	)

8285 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_1
 'o'

	)

8286 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_2
 'r'

	)

8287 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_3
 'b'

	)

8288 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_4
 'a'

	)

8289 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_5
 '_'

	)

8290 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_6
 'd'

	)

8291 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_7
 'e'

	)

8292 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_8
 'f'

	)

8293 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_9
 's'

	)

8294 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8299 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_°ru˘
;

8300 
	#TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_°ru˘
)

	)

8302 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
))

	)

8303 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
,(m),(d))

	)

8304 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
, (l)))

	)

8305 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
, (l)))

	)

8307 #i‡!
deföed
(
_CORBA_UL⁄gL⁄gSeq_deföed
)

8308 
	#_CORBA_UL⁄gL⁄gSeq_deföed
 1

	)

8309 
CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
 
	tCORBA_UL⁄gL⁄gSeq
;

8310 
	#CORBA_UL⁄gL⁄gSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_m¨shÆ
((x),(y),(z))

	)

8311 
	#CORBA_UL⁄gL⁄gSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

8312 #i‡!
deföed
(
TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_0
)

8313 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_0
 'c'

	)

8314 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_1
 'o'

	)

8315 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_2
 'r'

	)

8316 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_3
 'b'

	)

8317 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_4
 'a'

	)

8318 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_5
 '_'

	)

8319 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_6
 'd'

	)

8320 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_7
 'e'

	)

8321 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_8
 'f'

	)

8322 
	#TC_IMPL_TC_CORBA_UL⁄gL⁄gSeq_9
 's'

	)

8323 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8328 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_UL⁄gL⁄gSeq_°ru˘
;

8329 
	#TC_CORBA_UL⁄gL⁄gSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_UL⁄gL⁄gSeq_°ru˘
)

	)

8331 
	#CORBA_UL⁄gL⁄gSeq__Æloc
(Ë((
CORBA_UL⁄gL⁄gSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
))

	)

8332 
	#CORBA_UL⁄gL⁄gSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
,(m),(d))

	)

8333 
	#CORBA_UL⁄gL⁄gSeq_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_l⁄g
, (l)))

	)

8335 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Êﬂt
)

8336 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Êﬂt
 1

	)

8337 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_0
 'c'

	)

8338 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_1
 'o'

	)

8339 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_2
 'r'

	)

8340 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_3
 'b'

	)

8341 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_4
 'a'

	)

8342 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_5
 '_'

	)

8343 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_6
 'd'

	)

8344 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_7
 'e'

	)

8345 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_8
 'f'

	)

8346 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Êﬂt_9
 's'

	)

8347 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Êﬂt_deföed
)

8348 
	#_CORBA_£quí˚_CORBA_Êﬂt_deföed
 1

	)

8349 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Êﬂt
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Êﬂt
;

8351 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_0
)

8352 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_0
 'c'

	)

8353 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_1
 'o'

	)

8354 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_2
 'r'

	)

8355 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_3
 'b'

	)

8356 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_4
 'a'

	)

8357 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_5
 '_'

	)

8358 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_6
 'd'

	)

8359 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_7
 'e'

	)

8360 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_8
 'f'

	)

8361 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Êﬂt_9
 's'

	)

8362 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8367 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Êﬂt_°ru˘
;

8368 
	#TC_CORBA_£quí˚_CORBA_Êﬂt
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Êﬂt_°ru˘
)

	)

8370 
	#CORBA_£quí˚_CORBA_Êﬂt__Æloc
(Ë((
CORBA_£quí˚_CORBA_Êﬂt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
))

	)

8371 
	#CORBA_£quí˚_CORBA_Êﬂt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
,(m),(d))

	)

8372 
	#CORBA_£quí˚_CORBA_Êﬂt_Ælocbuf
(
l
Ë((
CORBA_Êﬂt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
, (l)))

	)

8373 
	#CORBA_£quí˚_CORBA_Êﬂt_Ælocbuf
(
l
Ë((
CORBA_Êﬂt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
, (l)))

	)

8375 #i‡!
deföed
(
_CORBA_FlﬂtSeq_deföed
)

8376 
	#_CORBA_FlﬂtSeq_deföed
 1

	)

8377 
CORBA_£quí˚_CORBA_Êﬂt
 
	tCORBA_FlﬂtSeq
;

8378 
	#CORBA_FlﬂtSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Êﬂt_m¨shÆ
((x),(y),(z))

	)

8379 
	#CORBA_FlﬂtSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Êﬂt_dem¨shÆ
((x),(y),(z),(i))

	)

8380 #i‡!
deföed
(
TC_IMPL_TC_CORBA_FlﬂtSeq_0
)

8381 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_0
 'c'

	)

8382 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_1
 'o'

	)

8383 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_2
 'r'

	)

8384 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_3
 'b'

	)

8385 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_4
 'a'

	)

8386 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_5
 '_'

	)

8387 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_6
 'd'

	)

8388 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_7
 'e'

	)

8389 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_8
 'f'

	)

8390 
	#TC_IMPL_TC_CORBA_FlﬂtSeq_9
 's'

	)

8391 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8396 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_FlﬂtSeq_°ru˘
;

8397 
	#TC_CORBA_FlﬂtSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_FlﬂtSeq_°ru˘
)

	)

8399 
	#CORBA_FlﬂtSeq__Æloc
(Ë((
CORBA_FlﬂtSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
))

	)

8400 
	#CORBA_FlﬂtSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
,(m),(d))

	)

8401 
	#CORBA_FlﬂtSeq_Ælocbuf
(
l
Ë((
CORBA_Êﬂt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Êﬂt
, (l)))

	)

8403 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_doubÀ
)

8404 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_doubÀ
 1

	)

8405 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_0
 'c'

	)

8406 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_1
 'o'

	)

8407 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_2
 'r'

	)

8408 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_3
 'b'

	)

8409 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_4
 'a'

	)

8410 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_5
 '_'

	)

8411 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_6
 'd'

	)

8412 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_7
 'e'

	)

8413 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_8
 'f'

	)

8414 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_doubÀ_9
 's'

	)

8415 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_doubÀ_deföed
)

8416 
	#_CORBA_£quí˚_CORBA_doubÀ_deföed
 1

	)

8417 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_doubÀ
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_doubÀ
;

8419 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_0
)

8420 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_0
 'c'

	)

8421 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_1
 'o'

	)

8422 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_2
 'r'

	)

8423 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_3
 'b'

	)

8424 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_4
 'a'

	)

8425 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_5
 '_'

	)

8426 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_6
 'd'

	)

8427 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_7
 'e'

	)

8428 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_8
 'f'

	)

8429 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_doubÀ_9
 's'

	)

8430 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8435 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_doubÀ_°ru˘
;

8436 
	#TC_CORBA_£quí˚_CORBA_doubÀ
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_doubÀ_°ru˘
)

	)

8438 
	#CORBA_£quí˚_CORBA_doubÀ__Æloc
(Ë((
CORBA_£quí˚_CORBA_doubÀ
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_doubÀ
))

	)

8439 
	#CORBA_£quí˚_CORBA_doubÀ__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_doubÀ
,(m),(d))

	)

8440 
	#CORBA_£quí˚_CORBA_doubÀ_Ælocbuf
(
l
Ë((
CORBA_doubÀ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_doubÀ
, (l)))

	)

8441 
	#CORBA_£quí˚_CORBA_doubÀ_Ælocbuf
(
l
Ë((
CORBA_doubÀ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_doubÀ
, (l)))

	)

8443 #i‡!
deföed
(
_CORBA_DoubÀSeq_deföed
)

8444 
	#_CORBA_DoubÀSeq_deföed
 1

	)

8445 
CORBA_£quí˚_CORBA_doubÀ
 
	tCORBA_DoubÀSeq
;

8446 
	#CORBA_DoubÀSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_doubÀ_m¨shÆ
((x),(y),(z))

	)

8447 
	#CORBA_DoubÀSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_doubÀ_dem¨shÆ
((x),(y),(z),(i))

	)

8448 #i‡!
deföed
(
TC_IMPL_TC_CORBA_DoubÀSeq_0
)

8449 
	#TC_IMPL_TC_CORBA_DoubÀSeq_0
 'c'

	)

8450 
	#TC_IMPL_TC_CORBA_DoubÀSeq_1
 'o'

	)

8451 
	#TC_IMPL_TC_CORBA_DoubÀSeq_2
 'r'

	)

8452 
	#TC_IMPL_TC_CORBA_DoubÀSeq_3
 'b'

	)

8453 
	#TC_IMPL_TC_CORBA_DoubÀSeq_4
 'a'

	)

8454 
	#TC_IMPL_TC_CORBA_DoubÀSeq_5
 '_'

	)

8455 
	#TC_IMPL_TC_CORBA_DoubÀSeq_6
 'd'

	)

8456 
	#TC_IMPL_TC_CORBA_DoubÀSeq_7
 'e'

	)

8457 
	#TC_IMPL_TC_CORBA_DoubÀSeq_8
 'f'

	)

8458 
	#TC_IMPL_TC_CORBA_DoubÀSeq_9
 's'

	)

8459 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8464 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_DoubÀSeq_°ru˘
;

8465 
	#TC_CORBA_DoubÀSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_DoubÀSeq_°ru˘
)

	)

8467 
	#CORBA_DoubÀSeq__Æloc
(Ë((
CORBA_DoubÀSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_doubÀ
))

	)

8468 
	#CORBA_DoubÀSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_doubÀ
,(m),(d))

	)

8469 
	#CORBA_DoubÀSeq_Ælocbuf
(
l
Ë((
CORBA_doubÀ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_doubÀ
, (l)))

	)

8471 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g_doubÀ
)

8472 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_l⁄g_doubÀ
 1

	)

8473 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_0
 'c'

	)

8474 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_1
 'o'

	)

8475 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_2
 'r'

	)

8476 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_3
 'b'

	)

8477 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_4
 'a'

	)

8478 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_5
 '_'

	)

8479 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_6
 'd'

	)

8480 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_7
 'e'

	)

8481 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_8
 'f'

	)

8482 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_l⁄g_doubÀ_9
 's'

	)

8483 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_l⁄g_doubÀ_deföed
)

8484 
	#_CORBA_£quí˚_CORBA_l⁄g_doubÀ_deföed
 1

	)

8485 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_l⁄g_doubÀ
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_l⁄g_doubÀ
;

8487 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_0
)

8488 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_0
 'c'

	)

8489 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_1
 'o'

	)

8490 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_2
 'r'

	)

8491 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_3
 'b'

	)

8492 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_4
 'a'

	)

8493 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_5
 '_'

	)

8494 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_6
 'd'

	)

8495 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_7
 'e'

	)

8496 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_8
 'f'

	)

8497 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_9
 's'

	)

8498 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8503 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_°ru˘
;

8504 
	#TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ_°ru˘
)

	)

8506 
	#CORBA_£quí˚_CORBA_l⁄g_doubÀ__Æloc
(Ë((
CORBA_£quí˚_CORBA_l⁄g_doubÀ
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
))

	)

8507 
	#CORBA_£quí˚_CORBA_l⁄g_doubÀ__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
,(m),(d))

	)

8508 
	#CORBA_£quí˚_CORBA_l⁄g_doubÀ_Ælocbuf
(
l
Ë((
CORBA_l⁄g_doubÀ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
, (l)))

	)

8509 
	#CORBA_£quí˚_CORBA_l⁄g_doubÀ_Ælocbuf
(
l
Ë((
CORBA_l⁄g_doubÀ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
, (l)))

	)

8511 #i‡!
deföed
(
_CORBA_L⁄gDoubÀSeq_deföed
)

8512 
	#_CORBA_L⁄gDoubÀSeq_deföed
 1

	)

8513 
CORBA_£quí˚_CORBA_l⁄g_doubÀ
 
	tCORBA_L⁄gDoubÀSeq
;

8514 
	#CORBA_L⁄gDoubÀSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_l⁄g_doubÀ_m¨shÆ
((x),(y),(z))

	)

8515 
	#CORBA_L⁄gDoubÀSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_l⁄g_doubÀ_dem¨shÆ
((x),(y),(z),(i))

	)

8516 #i‡!
deföed
(
TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_0
)

8517 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_0
 'c'

	)

8518 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_1
 'o'

	)

8519 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_2
 'r'

	)

8520 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_3
 'b'

	)

8521 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_4
 'a'

	)

8522 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_5
 '_'

	)

8523 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_6
 'd'

	)

8524 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_7
 'e'

	)

8525 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_8
 'f'

	)

8526 
	#TC_IMPL_TC_CORBA_L⁄gDoubÀSeq_9
 's'

	)

8527 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8532 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_L⁄gDoubÀSeq_°ru˘
;

8533 
	#TC_CORBA_L⁄gDoubÀSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_L⁄gDoubÀSeq_°ru˘
)

	)

8535 
	#CORBA_L⁄gDoubÀSeq__Æloc
(Ë((
CORBA_L⁄gDoubÀSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
))

	)

8536 
	#CORBA_L⁄gDoubÀSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
,(m),(d))

	)

8537 
	#CORBA_L⁄gDoubÀSeq_Ælocbuf
(
l
Ë((
CORBA_l⁄g_doubÀ
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_l⁄g_doubÀ
, (l)))

	)

8539 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

8540 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

8541 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

8542 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

8543 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

8544 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

8545 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

8546 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

8547 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

8548 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

8549 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

8550 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

8551 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

8552 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

8553 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

8555 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

8556 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

8557 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

8558 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

8559 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

8560 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

8561 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

8562 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

8563 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

8564 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

8565 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

8566 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8571 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

8572 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

8574 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

8575 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

8576 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

8577 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

8579 #i‡!
deföed
(
_CORBA_SåögSeq_deföed
)

8580 
	#_CORBA_SåögSeq_deföed
 1

	)

8581 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_SåögSeq
;

8582 
	#CORBA_SåögSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

8583 
	#CORBA_SåögSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

8584 #i‡!
deföed
(
TC_IMPL_TC_CORBA_SåögSeq_0
)

8585 
	#TC_IMPL_TC_CORBA_SåögSeq_0
 'c'

	)

8586 
	#TC_IMPL_TC_CORBA_SåögSeq_1
 'o'

	)

8587 
	#TC_IMPL_TC_CORBA_SåögSeq_2
 'r'

	)

8588 
	#TC_IMPL_TC_CORBA_SåögSeq_3
 'b'

	)

8589 
	#TC_IMPL_TC_CORBA_SåögSeq_4
 'a'

	)

8590 
	#TC_IMPL_TC_CORBA_SåögSeq_5
 '_'

	)

8591 
	#TC_IMPL_TC_CORBA_SåögSeq_6
 'd'

	)

8592 
	#TC_IMPL_TC_CORBA_SåögSeq_7
 'e'

	)

8593 
	#TC_IMPL_TC_CORBA_SåögSeq_8
 'f'

	)

8594 
	#TC_IMPL_TC_CORBA_SåögSeq_9
 's'

	)

8595 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8600 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_SåögSeq_°ru˘
;

8601 
	#TC_CORBA_SåögSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_SåögSeq_°ru˘
)

	)

8603 
	#CORBA_SåögSeq__Æloc
(Ë((
CORBA_SåögSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

8604 
	#CORBA_SåögSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

8605 
	#CORBA_SåögSeq_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

8607 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_w°rög
)

8608 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_w°rög
 1

	)

8609 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_0
 'c'

	)

8610 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_1
 'o'

	)

8611 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_2
 'r'

	)

8612 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_3
 'b'

	)

8613 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_4
 'a'

	)

8614 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_5
 '_'

	)

8615 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_6
 'd'

	)

8616 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_7
 'e'

	)

8617 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_8
 'f'

	)

8618 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_w°rög_9
 's'

	)

8619 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_w°rög_deföed
)

8620 
	#_CORBA_£quí˚_CORBA_w°rög_deföed
 1

	)

8621 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_w°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_w°rög
;

8623 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_0
)

8624 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_0
 'c'

	)

8625 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_1
 'o'

	)

8626 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_2
 'r'

	)

8627 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_3
 'b'

	)

8628 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_4
 'a'

	)

8629 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_5
 '_'

	)

8630 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_6
 'd'

	)

8631 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_7
 'e'

	)

8632 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_8
 'f'

	)

8633 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_w°rög_9
 's'

	)

8634 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8639 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_w°rög_°ru˘
;

8640 
	#TC_CORBA_£quí˚_CORBA_w°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_w°rög_°ru˘
)

	)

8642 
	#CORBA_£quí˚_CORBA_w°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_w°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_w°rög
))

	)

8643 
	#CORBA_£quí˚_CORBA_w°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_w°rög
,(m),(d))

	)

8644 
	#CORBA_£quí˚_CORBA_w°rög_Ælocbuf
(
l
Ë((
CORBA_w°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_w°rög
, (l)))

	)

8645 
	#CORBA_£quí˚_CORBA_w°rög_Ælocbuf
(
l
Ë((
CORBA_w°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_w°rög
, (l)))

	)

8647 #i‡!
deföed
(
_CORBA_WSåögSeq_deföed
)

8648 
	#_CORBA_WSåögSeq_deföed
 1

	)

8649 
CORBA_£quí˚_CORBA_w°rög
 
	tCORBA_WSåögSeq
;

8650 
	#CORBA_WSåögSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_w°rög_m¨shÆ
((x),(y),(z))

	)

8651 
	#CORBA_WSåögSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_w°rög_dem¨shÆ
((x),(y),(z),(i))

	)

8652 #i‡!
deföed
(
TC_IMPL_TC_CORBA_WSåögSeq_0
)

8653 
	#TC_IMPL_TC_CORBA_WSåögSeq_0
 'c'

	)

8654 
	#TC_IMPL_TC_CORBA_WSåögSeq_1
 'o'

	)

8655 
	#TC_IMPL_TC_CORBA_WSåögSeq_2
 'r'

	)

8656 
	#TC_IMPL_TC_CORBA_WSåögSeq_3
 'b'

	)

8657 
	#TC_IMPL_TC_CORBA_WSåögSeq_4
 'a'

	)

8658 
	#TC_IMPL_TC_CORBA_WSåögSeq_5
 '_'

	)

8659 
	#TC_IMPL_TC_CORBA_WSåögSeq_6
 'd'

	)

8660 
	#TC_IMPL_TC_CORBA_WSåögSeq_7
 'e'

	)

8661 
	#TC_IMPL_TC_CORBA_WSåögSeq_8
 'f'

	)

8662 
	#TC_IMPL_TC_CORBA_WSåögSeq_9
 's'

	)

8663 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8668 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_WSåögSeq_°ru˘
;

8669 
	#TC_CORBA_WSåögSeq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_WSåögSeq_°ru˘
)

	)

8671 
	#CORBA_WSåögSeq__Æloc
(Ë((
CORBA_WSåögSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_w°rög
))

	)

8672 
	#CORBA_WSåögSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_w°rög
,(m),(d))

	)

8673 
	#CORBA_WSåögSeq_Ælocbuf
(
l
Ë((
CORBA_w°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_w°rög
, (l)))

	)

8675 #unde‡
ex_CORBA_BadFixedVÆue


8676 
	#ex_CORBA_BadFixedVÆue
 "IDL:omg.‹g/CORBA/BadFixedVÆue:1.0"

	)

8677 #i‡!
deföed
(
_CORBA_BadFixedVÆue_deföed
)

8678 
	#_CORBA_BadFixedVÆue_deföed
 1

	)

8679 
CORBA_BadFixedVÆue_ty≥
 
	tCORBA_BadFixedVÆue
;

8680 
	sCORBA_BadFixedVÆue_ty≥
 {

8681 
CORBA_unsig√d_l⁄g
 
	goff£t
;

8684 #i‡!
deföed
(
TC_IMPL_TC_CORBA_BadFixedVÆue_0
)

8685 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_0
 'c'

	)

8686 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_1
 'o'

	)

8687 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_2
 'r'

	)

8688 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_3
 'b'

	)

8689 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_4
 'a'

	)

8690 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_5
 '_'

	)

8691 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_6
 'd'

	)

8692 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_7
 'e'

	)

8693 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_8
 'f'

	)

8694 
	#TC_IMPL_TC_CORBA_BadFixedVÆue_9
 's'

	)

8695 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8700 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_BadFixedVÆue_°ru˘
;

8701 
	#TC_CORBA_BadFixedVÆue
 ((
CORBA_Ty≥Code
)&
TC_CORBA_BadFixedVÆue_°ru˘
)

	)

8703 
	#CORBA_BadFixedVÆue__Æloc
(Ë((
CORBA_BadFixedVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_BadFixedVÆue
))

	)

8704 
	#CORBA_BadFixedVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_BadFixedVÆue
,(m),(d))

	)

8706 #i‚de‡
CORBA_VMCID_OMG


8707 
	#CORBA_VMCID_OMG
 1330446336U

	)

8710 #i‚de‡
CORBA_VMCID_ORBô0


8711 
	#CORBA_VMCID_ORBô0
 1330905088U

	)

8714 #i‚de‡
CORBA_VPVID_OMG


8715 
	#CORBA_VPVID_OMG
 1330446336U

	)

8718 #i‚de‡
CORBA_VPVID_ORBô0


8719 
	#CORBA_VPVID_ORBô0
 1330905088U

	)

8722 #i‡!
deföed
(
_CORBA_Sy°emEx˚±i⁄_deföed
)

8723 
	#_CORBA_Sy°emEx˚±i⁄_deföed
 1

	)

8724 
CORBA_Sy°emEx˚±i⁄_ty≥
 
	tCORBA_Sy°emEx˚±i⁄
;

8725 
	sCORBA_Sy°emEx˚±i⁄_ty≥
 {

8726 
CORBA_unsig√d_l⁄g
 
	gmö‹
;

8727 
CORBA_com∂ëi⁄_°©us
 
	gcom∂ëed
;

8730 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_0
)

8731 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_0
 'c'

	)

8732 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_1
 'o'

	)

8733 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_2
 'r'

	)

8734 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_3
 'b'

	)

8735 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_4
 'a'

	)

8736 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_5
 '_'

	)

8737 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_6
 'd'

	)

8738 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_7
 'e'

	)

8739 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_8
 'f'

	)

8740 
	#TC_IMPL_TC_CORBA_Sy°emEx˚±i⁄_9
 's'

	)

8741 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8746 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sy°emEx˚±i⁄_°ru˘
;

8747 
	#TC_CORBA_Sy°emEx˚±i⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sy°emEx˚±i⁄_°ru˘
)

	)

8749 
	#CORBA_Sy°emEx˚±i⁄__Æloc
(Ë((
CORBA_Sy°emEx˚±i⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Sy°emEx˚±i⁄
))

	)

8750 
	#CORBA_Sy°emEx˚±i⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Sy°emEx˚±i⁄
,(m),(d))

	)

8752 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄ãxt
Ë&& !deföed(
_CORBA_C⁄ãxt_deföed
)

8753 
	#ORBIT_DECL_CORBA_C⁄ãxt
 1

	)

8754 
	#_CORBA_C⁄ãxt_deföed
 1

	)

8755 
CORBA_C⁄ãxt_ty≥
 *
	tCORBA_C⁄ãxt
;

8756 #i‚de‡
TC_CORBA_C⁄ãxt


8757 
	#TC_CORBA_C⁄ãxt
 
TC_CORBA_Obje˘


	)

8760 #i‡!
deföed
(
ORBIT_DECL_CORBA_NVLi°
Ë&& !deföed(
_CORBA_NVLi°_deföed
)

8761 
	#ORBIT_DECL_CORBA_NVLi°
 1

	)

8762 
	#_CORBA_NVLi°_deföed
 1

	)

8763 
CORBA_NVLi°_ty≥
 *
	tCORBA_NVLi°
;

8764 #i‚de‡
TC_CORBA_NVLi°


8765 
	#TC_CORBA_NVLi°
 
TC_CORBA_Obje˘


	)

8768 #i‡!
deföed
(
ORBIT_DECL_CORBA_Obje˘
Ë&& !deföed(
_CORBA_Obje˘_deföed
)

8769 
	#ORBIT_DECL_CORBA_Obje˘
 1

	)

8770 
	#_CORBA_Obje˘_deföed
 1

	)

8771 
CORBA_Obje˘_ty≥
 *
	tCORBA_Obje˘
;

8772 #i‚de‡
TC_CORBA_Obje˘


8773 
	#TC_CORBA_Obje˘
 
TC_CORBA_Obje˘


	)

8776 #i‡!
deföed
(
ORBIT_DECL_CORBA_ORB
Ë&& !deföed(
_CORBA_ORB_deföed
)

8777 
	#ORBIT_DECL_CORBA_ORB
 1

	)

8778 
	#_CORBA_ORB_deföed
 1

	)

8779 
CORBA_ORB_ty≥
 *
	tCORBA_ORB
;

8780 #i‚de‡
TC_CORBA_ORB


8781 
	#TC_CORBA_ORB
 
TC_CORBA_Obje˘


	)

8784 #i‡!
deföed
(
ORBIT_DECL_CORBA_Reque°
Ë&& !deföed(
_CORBA_Reque°_deföed
)

8785 
	#ORBIT_DECL_CORBA_Reque°
 1

	)

8786 
	#_CORBA_Reque°_deföed
 1

	)

8787 
CORBA_Reque°_ty≥
 *
	tCORBA_Reque°
;

8788 #i‚de‡
TC_CORBA_Reque°


8789 
	#TC_CORBA_Reque°
 
TC_CORBA_Obje˘


	)

8792 #i‡!
deföed
(
ORBIT_DECL_CORBA_SîvîReque°
Ë&& !deföed(
_CORBA_SîvîReque°_deföed
)

8793 
	#ORBIT_DECL_CORBA_SîvîReque°
 1

	)

8794 
	#_CORBA_SîvîReque°_deföed
 1

	)

8795 
CORBA_SîvîReque°_ty≥
 *
	tCORBA_SîvîReque°
;

8796 #i‚de‡
TC_CORBA_SîvîReque°


8797 
	#TC_CORBA_SîvîReque°
 
TC_CORBA_Obje˘


	)

8800 #i‡!
deföed
(
_CORBA_Fœgs_deföed
)

8801 
	#_CORBA_Fœgs_deföed
 1

	)

8802 
CORBA_unsig√d_l⁄g
 
	tCORBA_Fœgs
;

8803 
	#CORBA_Fœgs_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

8804 
	#CORBA_Fœgs_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

8805 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Fœgs_0
)

8806 
	#TC_IMPL_TC_CORBA_Fœgs_0
 'c'

	)

8807 
	#TC_IMPL_TC_CORBA_Fœgs_1
 'o'

	)

8808 
	#TC_IMPL_TC_CORBA_Fœgs_2
 'r'

	)

8809 
	#TC_IMPL_TC_CORBA_Fœgs_3
 'b'

	)

8810 
	#TC_IMPL_TC_CORBA_Fœgs_4
 'a'

	)

8811 
	#TC_IMPL_TC_CORBA_Fœgs_5
 '_'

	)

8812 
	#TC_IMPL_TC_CORBA_Fœgs_6
 'd'

	)

8813 
	#TC_IMPL_TC_CORBA_Fœgs_7
 'e'

	)

8814 
	#TC_IMPL_TC_CORBA_Fœgs_8
 'f'

	)

8815 
	#TC_IMPL_TC_CORBA_Fœgs_9
 's'

	)

8816 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8821 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Fœgs_°ru˘
;

8822 
	#TC_CORBA_Fœgs
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Fœgs_°ru˘
)

	)

8824 
	#CORBA_Fœgs__Æloc
(Ë((
CORBA_Fœgs
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

8825 
	#CORBA_Fœgs__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

8827 #i‡!
deföed
(
_CORBA_NamedVÆue_deföed
)

8828 
	#_CORBA_NamedVÆue_deföed
 1

	)

8829 
CORBA_NamedVÆue_ty≥
 
	tCORBA_NamedVÆue
;

8830 
	sCORBA_NamedVÆue_ty≥
 {

8831 
CORBA_Idítifõr
 
	g«me
;

8832 
CORBA_™y
 
	g¨gumít
;

8833 
CORBA_l⁄g
 
	gÀn
;

8834 
CORBA_Fœgs
 
	g¨g_modes
;

8837 #i‡!
deföed
(
TC_IMPL_TC_CORBA_NamedVÆue_0
)

8838 
	#TC_IMPL_TC_CORBA_NamedVÆue_0
 'c'

	)

8839 
	#TC_IMPL_TC_CORBA_NamedVÆue_1
 'o'

	)

8840 
	#TC_IMPL_TC_CORBA_NamedVÆue_2
 'r'

	)

8841 
	#TC_IMPL_TC_CORBA_NamedVÆue_3
 'b'

	)

8842 
	#TC_IMPL_TC_CORBA_NamedVÆue_4
 'a'

	)

8843 
	#TC_IMPL_TC_CORBA_NamedVÆue_5
 '_'

	)

8844 
	#TC_IMPL_TC_CORBA_NamedVÆue_6
 'd'

	)

8845 
	#TC_IMPL_TC_CORBA_NamedVÆue_7
 'e'

	)

8846 
	#TC_IMPL_TC_CORBA_NamedVÆue_8
 'f'

	)

8847 
	#TC_IMPL_TC_CORBA_NamedVÆue_9
 's'

	)

8848 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8853 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_NamedVÆue_°ru˘
;

8854 
	#TC_CORBA_NamedVÆue
 ((
CORBA_Ty≥Code
)&
TC_CORBA_NamedVÆue_°ru˘
)

	)

8856 
	#CORBA_NamedVÆue__Æloc
(Ë((
CORBA_NamedVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_NamedVÆue
))

	)

8857 
	#CORBA_NamedVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_NamedVÆue
,(m),(d))

	)

8859 #i‡!
deföed
(
_CORBA_SëOvîrideTy≥_deföed
)

8860 
	#_CORBA_SëOvîrideTy≥_deföed
 1

	)

8862 
	gCORBA_SET_OVERRIDE
,

8863 
	gCORBA_ADD_OVERRIDE


8864 } 
	tCORBA_SëOvîrideTy≥
;

8865 #i‡!
deföed
(
TC_IMPL_TC_CORBA_SëOvîrideTy≥_0
)

8866 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_0
 'c'

	)

8867 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_1
 'o'

	)

8868 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_2
 'r'

	)

8869 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_3
 'b'

	)

8870 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_4
 'a'

	)

8871 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_5
 '_'

	)

8872 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_6
 'd'

	)

8873 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_7
 'e'

	)

8874 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_8
 'f'

	)

8875 
	#TC_IMPL_TC_CORBA_SëOvîrideTy≥_9
 's'

	)

8876 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8881 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_SëOvîrideTy≥_°ru˘
;

8882 
	#TC_CORBA_SëOvîrideTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_SëOvîrideTy≥_°ru˘
)

	)

8885 #i‡!
deföed
(
ORBIT_DECL_CORBA_Obje˘
Ë&& !deföed(
_CORBA_Obje˘_deföed
)

8886 
	#ORBIT_DECL_CORBA_Obje˘
 1

	)

8887 
	#_CORBA_Obje˘_deföed
 1

	)

8888 
CORBA_Obje˘_ty≥
 *
	tCORBA_Obje˘
;

8889 #i‚de‡
TC_CORBA_Obje˘


8890 
	#TC_CORBA_Obje˘
 
TC_CORBA_Obje˘


	)

8893 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

8894 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

8895 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

8896 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

8897 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

8898 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

8899 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

8900 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

8901 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

8902 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

8903 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

8904 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

8905 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

8906 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

8907 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

8909 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

8910 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'c'

	)

8911 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

8912 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'r'

	)

8913 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 'b'

	)

8914 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'a'

	)

8915 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 '_'

	)

8916 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'd'

	)

8917 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 'e'

	)

8918 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_8
 'f'

	)

8919 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_9
 's'

	)

8920 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8925 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

8926 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

8928 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

8929 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

8930 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

8931 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

8933 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Reque°
)

8934 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Reque°
 1

	)

8935 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_0
 'c'

	)

8936 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_1
 'o'

	)

8937 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_2
 'r'

	)

8938 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_3
 'b'

	)

8939 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_4
 'a'

	)

8940 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_5
 '_'

	)

8941 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_6
 'd'

	)

8942 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_7
 'e'

	)

8943 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_8
 'f'

	)

8944 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Reque°_9
 's'

	)

8945 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Reque°_deföed
)

8946 
	#_CORBA_£quí˚_CORBA_Reque°_deföed
 1

	)

8947 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_CORBA_Reque°
;

8949 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_0
)

8950 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_0
 'c'

	)

8951 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_1
 'o'

	)

8952 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_2
 'r'

	)

8953 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_3
 'b'

	)

8954 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_4
 'a'

	)

8955 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_5
 '_'

	)

8956 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_6
 'd'

	)

8957 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_7
 'e'

	)

8958 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_8
 'f'

	)

8959 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Reque°_9
 's'

	)

8960 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8965 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Reque°_°ru˘
;

8966 
	#TC_CORBA_£quí˚_CORBA_Reque°
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Reque°_°ru˘
)

	)

8968 
	#CORBA_£quí˚_CORBA_Reque°__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

8969 
	#CORBA_£quí˚_CORBA_Reque°__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

8970 
	#CORBA_£quí˚_CORBA_Reque°_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

8971 
	#CORBA_£quí˚_CORBA_Reque°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

8972 
	#CORBA_£quí˚_CORBA_Reque°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

8974 #i‡!
deföed
(
_CORBA_Reque°Seq_deföed
)

8975 
	#_CORBA_Reque°Seq_deföed
 1

	)

8976 
CORBA_£quí˚_CORBA_Reque°
 
	tCORBA_Reque°Seq
;

8977 
	#CORBA_Reque°Seq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Reque°_m¨shÆ
((x),(y),(z))

	)

8978 
	#CORBA_Reque°Seq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Reque°_dem¨shÆ
((x),(y),(z),(i))

	)

8979 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Reque°Seq_0
)

8980 
	#TC_IMPL_TC_CORBA_Reque°Seq_0
 'c'

	)

8981 
	#TC_IMPL_TC_CORBA_Reque°Seq_1
 'o'

	)

8982 
	#TC_IMPL_TC_CORBA_Reque°Seq_2
 'r'

	)

8983 
	#TC_IMPL_TC_CORBA_Reque°Seq_3
 'b'

	)

8984 
	#TC_IMPL_TC_CORBA_Reque°Seq_4
 'a'

	)

8985 
	#TC_IMPL_TC_CORBA_Reque°Seq_5
 '_'

	)

8986 
	#TC_IMPL_TC_CORBA_Reque°Seq_6
 'd'

	)

8987 
	#TC_IMPL_TC_CORBA_Reque°Seq_7
 'e'

	)

8988 
	#TC_IMPL_TC_CORBA_Reque°Seq_8
 'f'

	)

8989 
	#TC_IMPL_TC_CORBA_Reque°Seq_9
 's'

	)

8990 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


8995 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Reque°Seq_°ru˘
;

8996 
	#TC_CORBA_Reque°Seq
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Reque°Seq_°ru˘
)

	)

8998 
	#CORBA_Reque°Seq__Æloc
(Ë((
CORBA_Reque°Seq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Reque°
))

	)

8999 
	#CORBA_Reque°Seq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Reque°
,(m),(d))

	)

9000 
	#CORBA_Reque°Seq_Ælocbuf
(
l
Ë((
CORBA_Reque°
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Reque°
, (l)))

	)

9002 #i‡!
deföed
(
_CORBA_Ab°ø˘Ba£_deföed
)

9003 
	#_CORBA_Ab°ø˘Ba£_deföed
 1

	)

9004 
CORBA_Ab°ø˘Ba£_ty≥
 *
	tCORBA_Ab°ø˘Ba£
;

9006 #i‡!
deföed
(
_CORBA_Sîvi˚Ty≥_deföed
)

9007 
	#_CORBA_Sîvi˚Ty≥_deföed
 1

	)

9008 
CORBA_unsig√d_sh‹t
 
	tCORBA_Sîvi˚Ty≥
;

9009 
	#CORBA_Sîvi˚Ty≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_sh‹t_m¨shÆ
((x),(y),(z))

	)

9010 
	#CORBA_Sîvi˚Ty≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

9011 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sîvi˚Ty≥_0
)

9012 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_0
 'c'

	)

9013 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_1
 'o'

	)

9014 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_2
 'r'

	)

9015 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_3
 'b'

	)

9016 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_4
 'a'

	)

9017 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_5
 '_'

	)

9018 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_6
 'd'

	)

9019 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_7
 'e'

	)

9020 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_8
 'f'

	)

9021 
	#TC_IMPL_TC_CORBA_Sîvi˚Ty≥_9
 's'

	)

9022 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9027 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sîvi˚Ty≥_°ru˘
;

9028 
	#TC_CORBA_Sîvi˚Ty≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sîvi˚Ty≥_°ru˘
)

	)

9030 
	#CORBA_Sîvi˚Ty≥__Æloc
(Ë((
CORBA_Sîvi˚Ty≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_sh‹t
))

	)

9031 
	#CORBA_Sîvi˚Ty≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_sh‹t
,(m),(d))

	)

9033 #i‡!
deföed
(
_CORBA_Sîvi˚O±i⁄_deföed
)

9034 
	#_CORBA_Sîvi˚O±i⁄_deföed
 1

	)

9035 
CORBA_unsig√d_l⁄g
 
	tCORBA_Sîvi˚O±i⁄
;

9036 
	#CORBA_Sîvi˚O±i⁄_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

9037 
	#CORBA_Sîvi˚O±i⁄_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

9038 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_0
)

9039 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_0
 'c'

	)

9040 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_1
 'o'

	)

9041 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_2
 'r'

	)

9042 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_3
 'b'

	)

9043 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_4
 'a'

	)

9044 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_5
 '_'

	)

9045 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_6
 'd'

	)

9046 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_7
 'e'

	)

9047 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_8
 'f'

	)

9048 
	#TC_IMPL_TC_CORBA_Sîvi˚O±i⁄_9
 's'

	)

9049 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9054 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sîvi˚O±i⁄_°ru˘
;

9055 
	#TC_CORBA_Sîvi˚O±i⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sîvi˚O±i⁄_°ru˘
)

	)

9057 
	#CORBA_Sîvi˚O±i⁄__Æloc
(Ë((
CORBA_Sîvi˚O±i⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

9058 
	#CORBA_Sîvi˚O±i⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

9060 #i‡!
deföed
(
_CORBA_Sîvi˚DëaûTy≥_deföed
)

9061 
	#_CORBA_Sîvi˚DëaûTy≥_deföed
 1

	)

9062 
CORBA_unsig√d_l⁄g
 
	tCORBA_Sîvi˚DëaûTy≥
;

9063 
	#CORBA_Sîvi˚DëaûTy≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

9064 
	#CORBA_Sîvi˚DëaûTy≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

9065 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_0
)

9066 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_0
 'c'

	)

9067 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_1
 'o'

	)

9068 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_2
 'r'

	)

9069 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_3
 'b'

	)

9070 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_4
 'a'

	)

9071 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_5
 '_'

	)

9072 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_6
 'd'

	)

9073 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_7
 'e'

	)

9074 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_8
 'f'

	)

9075 
	#TC_IMPL_TC_CORBA_Sîvi˚DëaûTy≥_9
 's'

	)

9076 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9081 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sîvi˚DëaûTy≥_°ru˘
;

9082 
	#TC_CORBA_Sîvi˚DëaûTy≥
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sîvi˚DëaûTy≥_°ru˘
)

	)

9084 
	#CORBA_Sîvi˚DëaûTy≥__Æloc
(Ë((
CORBA_Sîvi˚DëaûTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

9085 
	#CORBA_Sîvi˚DëaûTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

9087 #i‚de‡
CORBA_Securôy


9088 
	#CORBA_Securôy
 1U

	)

9091 #i‡!
deföed
(
_CORBA_Sîvi˚Dëaû_deföed
)

9092 
	#_CORBA_Sîvi˚Dëaû_deföed
 1

	)

9093 
CORBA_Sîvi˚Dëaû_ty≥
 
	tCORBA_Sîvi˚Dëaû
;

9094 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

9095 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

9096 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'c'

	)

9097 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

9098 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'r'

	)

9099 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 'b'

	)

9100 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'a'

	)

9101 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 '_'

	)

9102 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'd'

	)

9103 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 'e'

	)

9104 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_8
 'f'

	)

9105 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_9
 's'

	)

9106 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

9107 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

9108 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

9110 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

9111 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'c'

	)

9112 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

9113 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'r'

	)

9114 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 'b'

	)

9115 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'a'

	)

9116 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 '_'

	)

9117 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'd'

	)

9118 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 'e'

	)

9119 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_8
 'f'

	)

9120 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_9
 's'

	)

9121 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9126 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

9127 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

9129 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

9130 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

9131 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

9132 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

9134 
	sCORBA_Sîvi˚Dëaû_ty≥
 {

9135 
CORBA_Sîvi˚DëaûTy≥
 
	g£rvi˚_dëaû_ty≥
;

9136 
CORBA_£quí˚_CORBA_o˘ë
 
	g£rvi˚_dëaû
;

9139 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sîvi˚Dëaû_0
)

9140 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_0
 'c'

	)

9141 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_1
 'o'

	)

9142 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_2
 'r'

	)

9143 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_3
 'b'

	)

9144 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_4
 'a'

	)

9145 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_5
 '_'

	)

9146 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_6
 'd'

	)

9147 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_7
 'e'

	)

9148 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_8
 'f'

	)

9149 
	#TC_IMPL_TC_CORBA_Sîvi˚Dëaû_9
 's'

	)

9150 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9155 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sîvi˚Dëaû_°ru˘
;

9156 
	#TC_CORBA_Sîvi˚Dëaû
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sîvi˚Dëaû_°ru˘
)

	)

9158 
	#CORBA_Sîvi˚Dëaû__Æloc
(Ë((
CORBA_Sîvi˚Dëaû
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Sîvi˚Dëaû
))

	)

9159 
	#CORBA_Sîvi˚Dëaû__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Sîvi˚Dëaû
,(m),(d))

	)

9161 #i‡!
deföed
(
_CORBA_Sîvi˚Inf‹m©i⁄_deföed
)

9162 
	#_CORBA_Sîvi˚Inf‹m©i⁄_deföed
 1

	)

9163 
CORBA_Sîvi˚Inf‹m©i⁄_ty≥
 
	tCORBA_Sîvi˚Inf‹m©i⁄
;

9164 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
)

9165 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 1

	)

9166 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'c'

	)

9167 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

9168 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'r'

	)

9169 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 'b'

	)

9170 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'a'

	)

9171 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 '_'

	)

9172 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'd'

	)

9173 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 'e'

	)

9174 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_8
 'f'

	)

9175 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_9
 's'

	)

9176 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
)

9177 
	#_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
 1

	)

9178 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; CORBA_unsig√d_l⁄g* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_l⁄g
;

9180 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
)

9181 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'c'

	)

9182 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

9183 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'r'

	)

9184 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 'b'

	)

9185 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'a'

	)

9186 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 '_'

	)

9187 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'd'

	)

9188 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 'e'

	)

9189 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_8
 'f'

	)

9190 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_9
 's'

	)

9191 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9196 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
;

9197 
	#TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
)

	)

9199 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
))

	)

9200 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
,(m),(d))

	)

9201 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

9202 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

9204 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄
)

9205 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄
 1

	)

9206 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_0
 'c'

	)

9207 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_1
 'o'

	)

9208 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_2
 'r'

	)

9209 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_3
 'b'

	)

9210 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_4
 'a'

	)

9211 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_5
 '_'

	)

9212 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_6
 'd'

	)

9213 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_7
 'e'

	)

9214 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_8
 'f'

	)

9215 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_9
 's'

	)

9216 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_deföed
)

9217 
	#_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_deföed
 1

	)

9218 
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 
	tCORBA_£quí˚_CORBA_Sîvi˚O±i⁄
;

9220 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_0
)

9221 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_0
 'c'

	)

9222 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_1
 'o'

	)

9223 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_2
 'r'

	)

9224 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_3
 'b'

	)

9225 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_4
 'a'

	)

9226 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_5
 '_'

	)

9227 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_6
 'd'

	)

9228 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_7
 'e'

	)

9229 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_8
 'f'

	)

9230 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_9
 's'

	)

9231 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9236 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_°ru˘
;

9237 
	#TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_°ru˘
)

	)

9239 
	#CORBA_£quí˚_CORBA_Sîvi˚O±i⁄__Æloc
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc


	)

9240 
	#CORBA_£quí˚_CORBA_Sîvi˚O±i⁄__‰ìkids
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids


	)

9241 
	#CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_Ælocbuf
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf


	)

9242 
	#CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

9243 
	#CORBA_£quí˚_CORBA_Sîvi˚O±i⁄_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

9245 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
)

9246 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
 1

	)

9247 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_0
 'c'

	)

9248 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_1
 'o'

	)

9249 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_2
 'r'

	)

9250 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_3
 'b'

	)

9251 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_4
 'a'

	)

9252 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_5
 '_'

	)

9253 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_6
 'd'

	)

9254 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_7
 'e'

	)

9255 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_8
 'f'

	)

9256 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_9
 's'

	)

9257 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_deföed
)

9258 
	#_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_deföed
 1

	)

9259 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Sîvi˚Dëaû
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Sîvi˚Dëaû
;

9261 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_0
)

9262 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_0
 'c'

	)

9263 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_1
 'o'

	)

9264 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_2
 'r'

	)

9265 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_3
 'b'

	)

9266 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_4
 'a'

	)

9267 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_5
 '_'

	)

9268 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_6
 'd'

	)

9269 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_7
 'e'

	)

9270 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_8
 'f'

	)

9271 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_9
 's'

	)

9272 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9277 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_°ru˘
;

9278 
	#TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû_°ru˘
)

	)

9280 
	#CORBA_£quí˚_CORBA_Sîvi˚Dëaû__Æloc
(Ë((
CORBA_£quí˚_CORBA_Sîvi˚Dëaû
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
))

	)

9281 
	#CORBA_£quí˚_CORBA_Sîvi˚Dëaû__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
,(m),(d))

	)

9282 
	#CORBA_£quí˚_CORBA_Sîvi˚Dëaû_Ælocbuf
(
l
Ë((
CORBA_Sîvi˚Dëaû
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
, (l)))

	)

9283 
	#CORBA_£quí˚_CORBA_Sîvi˚Dëaû_Ælocbuf
(
l
Ë((
CORBA_Sîvi˚Dëaû
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Sîvi˚Dëaû
, (l)))

	)

9285 
	sCORBA_Sîvi˚Inf‹m©i⁄_ty≥
 {

9286 
CORBA_£quí˚_CORBA_Sîvi˚O±i⁄
 
	g£rvi˚_›ti⁄s
;

9287 
CORBA_£quí˚_CORBA_Sîvi˚Dëaû
 
	g£rvi˚_dëaûs
;

9290 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_0
)

9291 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_0
 'c'

	)

9292 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_1
 'o'

	)

9293 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_2
 'r'

	)

9294 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_3
 'b'

	)

9295 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_4
 'a'

	)

9296 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_5
 '_'

	)

9297 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_6
 'd'

	)

9298 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_7
 'e'

	)

9299 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_8
 'f'

	)

9300 
	#TC_IMPL_TC_CORBA_Sîvi˚Inf‹m©i⁄_9
 's'

	)

9301 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9306 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Sîvi˚Inf‹m©i⁄_°ru˘
;

9307 
	#TC_CORBA_Sîvi˚Inf‹m©i⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Sîvi˚Inf‹m©i⁄_°ru˘
)

	)

9309 
	#CORBA_Sîvi˚Inf‹m©i⁄__Æloc
(Ë((
CORBA_Sîvi˚Inf‹m©i⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Sîvi˚Inf‹m©i⁄
))

	)

9310 
	#CORBA_Sîvi˚Inf‹m©i⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Sîvi˚Inf‹m©i⁄
,(m),(d))

	)

9312 #i‡!
deföed
(
_CORBA_VÆueFa˘‹y_deföed
)

9313 
	#_CORBA_VÆueFa˘‹y_deföed
 1

	)

9314 
CORBA_VÆueFa˘‹y_ty≥
 *
	tCORBA_VÆueFa˘‹y
;

9316 #i‡!
deföed
(
_CORBA_ORBid_deföed
)

9317 
	#_CORBA_ORBid_deföed
 1

	)

9318 
CORBA_°rög
 
	tCORBA_ORBid
;

9319 
	#CORBA_ORBid_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

9320 
	#CORBA_ORBid_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

9321 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ORBid_0
)

9322 
	#TC_IMPL_TC_CORBA_ORBid_0
 'c'

	)

9323 
	#TC_IMPL_TC_CORBA_ORBid_1
 'o'

	)

9324 
	#TC_IMPL_TC_CORBA_ORBid_2
 'r'

	)

9325 
	#TC_IMPL_TC_CORBA_ORBid_3
 'b'

	)

9326 
	#TC_IMPL_TC_CORBA_ORBid_4
 'a'

	)

9327 
	#TC_IMPL_TC_CORBA_ORBid_5
 '_'

	)

9328 
	#TC_IMPL_TC_CORBA_ORBid_6
 'd'

	)

9329 
	#TC_IMPL_TC_CORBA_ORBid_7
 'e'

	)

9330 
	#TC_IMPL_TC_CORBA_ORBid_8
 'f'

	)

9331 
	#TC_IMPL_TC_CORBA_ORBid_9
 's'

	)

9332 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9337 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ORBid_°ru˘
;

9338 
	#TC_CORBA_ORBid
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ORBid_°ru˘
)

	)

9340 
	#CORBA_ORBid__Æloc
(Ë((
CORBA_ORBid
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

9341 
	#CORBA_ORBid__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

9343 #unde‡
ex_CORBA_Wr⁄gTønß˘i⁄


9344 
	#ex_CORBA_Wr⁄gTønß˘i⁄
 "IDL:omg.‹g/CORBA/Wr⁄gTønß˘i⁄:1.0"

	)

9345 #i‡!
deföed
(
_CORBA_Wr⁄gTønß˘i⁄_deföed
)

9346 
	#_CORBA_Wr⁄gTønß˘i⁄_deföed
 1

	)

9347 
CORBA_Wr⁄gTønß˘i⁄_ty≥
 
	tCORBA_Wr⁄gTønß˘i⁄
;

9348 
	sCORBA_Wr⁄gTønß˘i⁄_ty≥
 {

9349 
	gdummy
;

9352 #i‡!
deföed
(
TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_0
)

9353 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_0
 'c'

	)

9354 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_1
 'o'

	)

9355 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_2
 'r'

	)

9356 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_3
 'b'

	)

9357 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_4
 'a'

	)

9358 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_5
 '_'

	)

9359 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_6
 'd'

	)

9360 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_7
 'e'

	)

9361 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_8
 'f'

	)

9362 
	#TC_IMPL_TC_CORBA_Wr⁄gTønß˘i⁄_9
 's'

	)

9363 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9368 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Wr⁄gTønß˘i⁄_°ru˘
;

9369 
	#TC_CORBA_Wr⁄gTønß˘i⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Wr⁄gTønß˘i⁄_°ru˘
)

	)

9371 
	#CORBA_Wr⁄gTønß˘i⁄__Æloc
(Ë((
CORBA_Wr⁄gTønß˘i⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_Wr⁄gTønß˘i⁄
))

	)

9372 
	#CORBA_Wr⁄gTønß˘i⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_Wr⁄gTønß˘i⁄
,(m),(d))

	)

9374 #i‡!
deföed
(
ORBIT_DECL_CORBA_ORB
Ë&& !deföed(
_CORBA_ORB_deföed
)

9375 
	#ORBIT_DECL_CORBA_ORB
 1

	)

9376 
	#_CORBA_ORB_deföed
 1

	)

9377 
CORBA_ORB_ty≥
 *
	tCORBA_ORB
;

9378 #i‚de‡
TC_CORBA_ORB


9379 
	#TC_CORBA_ORB
 
TC_CORBA_Obje˘


	)

9382 #i‡!
deföed
(
_CORBA_ORB_Obje˘Id_deföed
)

9383 
	#_CORBA_ORB_Obje˘Id_deföed
 1

	)

9384 
CORBA_°rög
 
	tCORBA_ORB_Obje˘Id
;

9385 
	#CORBA_ORB_Obje˘Id_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

9386 
	#CORBA_ORB_Obje˘Id_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

9387 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ORB_Obje˘Id_0
)

9388 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_0
 'c'

	)

9389 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_1
 'o'

	)

9390 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_2
 'r'

	)

9391 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_3
 'b'

	)

9392 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_4
 'a'

	)

9393 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_5
 '_'

	)

9394 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_6
 'd'

	)

9395 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_7
 'e'

	)

9396 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_8
 'f'

	)

9397 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_9
 's'

	)

9398 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9403 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ORB_Obje˘Id_°ru˘
;

9404 
	#TC_CORBA_ORB_Obje˘Id
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ORB_Obje˘Id_°ru˘
)

	)

9406 
	#CORBA_ORB_Obje˘Id__Æloc
(Ë((
CORBA_ORB_Obje˘Id
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

9407 
	#CORBA_ORB_Obje˘Id__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

9409 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
)

9410 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_°rög
 1

	)

9411 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

9412 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

9413 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

9414 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

9415 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

9416 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

9417 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

9418 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

9419 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

9420 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

9421 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_°rög_deföed
)

9422 
	#_CORBA_£quí˚_CORBA_°rög_deföed
 1

	)

9423 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_°rög
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_°rög
;

9425 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
)

9426 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_0
 'c'

	)

9427 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_1
 'o'

	)

9428 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_2
 'r'

	)

9429 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_3
 'b'

	)

9430 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_4
 'a'

	)

9431 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_5
 '_'

	)

9432 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_6
 'd'

	)

9433 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_7
 'e'

	)

9434 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_8
 'f'

	)

9435 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_°rög_9
 's'

	)

9436 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9441 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
;

9442 
	#TC_CORBA_£quí˚_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_°rög_°ru˘
)

	)

9444 
	#CORBA_£quí˚_CORBA_°rög__Æloc
(Ë((
CORBA_£quí˚_CORBA_°rög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_°rög
))

	)

9445 
	#CORBA_£quí˚_CORBA_°rög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_°rög
,(m),(d))

	)

9446 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

9447 
	#CORBA_£quí˚_CORBA_°rög_Ælocbuf
(
l
Ë((
CORBA_°rög
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_°rög
, (l)))

	)

9449 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_ORB_Obje˘Id
)

9450 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_ORB_Obje˘Id
 1

	)

9451 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_0
 'c'

	)

9452 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_1
 'o'

	)

9453 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_2
 'r'

	)

9454 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_3
 'b'

	)

9455 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_4
 'a'

	)

9456 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_5
 '_'

	)

9457 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_6
 'd'

	)

9458 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_7
 'e'

	)

9459 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_8
 'f'

	)

9460 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_ORB_Obje˘Id_9
 's'

	)

9461 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_ORB_Obje˘Id_deföed
)

9462 
	#_CORBA_£quí˚_CORBA_ORB_Obje˘Id_deföed
 1

	)

9463 
CORBA_£quí˚_CORBA_°rög
 
	tCORBA_£quí˚_CORBA_ORB_Obje˘Id
;

9465 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_0
)

9466 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_0
 'c'

	)

9467 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_1
 'o'

	)

9468 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_2
 'r'

	)

9469 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_3
 'b'

	)

9470 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_4
 'a'

	)

9471 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_5
 '_'

	)

9472 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_6
 'd'

	)

9473 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_7
 'e'

	)

9474 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_8
 'f'

	)

9475 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_9
 's'

	)

9476 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9481 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_°ru˘
;

9482 
	#TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id_°ru˘
)

	)

9484 
	#CORBA_£quí˚_CORBA_ORB_Obje˘Id__Æloc
 
CORBA_£quí˚_CORBA_°rög__Æloc


	)

9485 
	#CORBA_£quí˚_CORBA_ORB_Obje˘Id__‰ìkids
 
CORBA_£quí˚_CORBA_°rög__‰ìkids


	)

9486 
	#CORBA_£quí˚_CORBA_ORB_Obje˘Id_Ælocbuf
 
CORBA_£quí˚_CORBA_°rög_Ælocbuf


	)

9487 
	#CORBA_£quí˚_CORBA_ORB_Obje˘Id_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

9488 
	#CORBA_£quí˚_CORBA_ORB_Obje˘Id_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

9490 #i‡!
deföed
(
_CORBA_ORB_Obje˘IdLi°_deföed
)

9491 
	#_CORBA_ORB_Obje˘IdLi°_deföed
 1

	)

9492 
CORBA_£quí˚_CORBA_ORB_Obje˘Id
 
	tCORBA_ORB_Obje˘IdLi°
;

9493 
	#CORBA_ORB_Obje˘IdLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_ORB_Obje˘Id_m¨shÆ
((x),(y),(z))

	)

9494 
	#CORBA_ORB_Obje˘IdLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_ORB_Obje˘Id_dem¨shÆ
((x),(y),(z),(i))

	)

9495 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_0
)

9496 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_0
 'c'

	)

9497 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_1
 'o'

	)

9498 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_2
 'r'

	)

9499 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_3
 'b'

	)

9500 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_4
 'a'

	)

9501 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_5
 '_'

	)

9502 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_6
 'd'

	)

9503 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_7
 'e'

	)

9504 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_8
 'f'

	)

9505 
	#TC_IMPL_TC_CORBA_ORB_Obje˘IdLi°_9
 's'

	)

9506 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9511 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ORB_Obje˘IdLi°_°ru˘
;

9512 
	#TC_CORBA_ORB_Obje˘IdLi°
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ORB_Obje˘IdLi°_°ru˘
)

	)

9514 
	#CORBA_ORB_Obje˘IdLi°__Æloc
(Ë((
CORBA_ORB_Obje˘IdLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id
))

	)

9515 
	#CORBA_ORB_Obje˘IdLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id
,(m),(d))

	)

9516 
	#CORBA_ORB_Obje˘IdLi°_Ælocbuf
(
l
Ë((
CORBA_ORB_Obje˘Id
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_ORB_Obje˘Id
, (l)))

	)

9518 #unde‡
ex_CORBA_ORB_InvÆidName


9519 
	#ex_CORBA_ORB_InvÆidName
 "IDL:omg.‹g/CORBA/ORB/InvÆidName:1.0"

	)

9520 #i‡!
deföed
(
_CORBA_ORB_InvÆidName_deföed
)

9521 
	#_CORBA_ORB_InvÆidName_deföed
 1

	)

9522 
CORBA_ORB_InvÆidName_ty≥
 
	tCORBA_ORB_InvÆidName
;

9523 
	sCORBA_ORB_InvÆidName_ty≥
 {

9524 
	gdummy
;

9527 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ORB_InvÆidName_0
)

9528 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_0
 'c'

	)

9529 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_1
 'o'

	)

9530 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_2
 'r'

	)

9531 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_3
 'b'

	)

9532 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_4
 'a'

	)

9533 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_5
 '_'

	)

9534 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_6
 'd'

	)

9535 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_7
 'e'

	)

9536 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_8
 'f'

	)

9537 
	#TC_IMPL_TC_CORBA_ORB_InvÆidName_9
 's'

	)

9538 #ifde‡
ORBIT_IDL_C_IMODULE_c‹ba_defs


9543 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ORB_InvÆidName_°ru˘
;

9544 
	#TC_CORBA_ORB_InvÆidName
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ORB_InvÆidName_°ru˘
)

	)

9546 
	#CORBA_ORB_InvÆidName__Æloc
(Ë((
CORBA_ORB_InvÆidName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_ORB_InvÆidName
))

	)

9547 
	#CORBA_ORB_InvÆidName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_ORB_InvÆidName
,(m),(d))

	)

9549 #i‡!
deföed
(
_CORBA_O∑queVÆue_deföed
)

9550 
	#_CORBA_O∑queVÆue_deföed
 1

	)

9551 
CORBA_O∑queVÆue_ty≥
 *
	tCORBA_O∑queVÆue
;

9553 #i‡!
deföed
(
ORBIT_DECL_CORBA_Reque°
Ë&& !deföed(
_CORBA_Reque°_deföed
)

9554 
	#ORBIT_DECL_CORBA_Reque°
 1

	)

9555 
	#_CORBA_Reque°_deföed
 1

	)

9556 
CORBA_Reque°_ty≥
 *
	tCORBA_Reque°
;

9557 #i‚de‡
TC_CORBA_Reque°


9558 
	#TC_CORBA_Reque°
 
TC_CORBA_Obje˘


	)

9561 #i‡!
deföed
(
ORBIT_DECL_CORBA_C⁄ãxt
Ë&& !deföed(
_CORBA_C⁄ãxt_deföed
)

9562 
	#ORBIT_DECL_CORBA_C⁄ãxt
 1

	)

9563 
	#_CORBA_C⁄ãxt_deföed
 1

	)

9564 
CORBA_C⁄ãxt_ty≥
 *
	tCORBA_C⁄ãxt
;

9565 #i‚de‡
TC_CORBA_C⁄ãxt


9566 
	#TC_CORBA_C⁄ãxt
 
TC_CORBA_Obje˘


	)

9569 #i‡!
deföed
(
ORBIT_DECL_CORBA_NVLi°
Ë&& !deföed(
_CORBA_NVLi°_deföed
)

9570 
	#ORBIT_DECL_CORBA_NVLi°
 1

	)

9571 
	#_CORBA_NVLi°_deföed
 1

	)

9572 
CORBA_NVLi°_ty≥
 *
	tCORBA_NVLi°
;

9573 #i‚de‡
TC_CORBA_NVLi°


9574 
	#TC_CORBA_NVLi°
 
TC_CORBA_Obje˘


	)

9577 #i‡!
deföed
(
ORBIT_DECL_CORBA_SîvîReque°
Ë&& !deföed(
_CORBA_SîvîReque°_deföed
)

9578 
	#ORBIT_DECL_CORBA_SîvîReque°
 1

	)

9579 
	#_CORBA_SîvîReque°_deföed
 1

	)

9580 
CORBA_SîvîReque°_ty≥
 *
	tCORBA_SîvîReque°
;

9581 #i‚de‡
TC_CORBA_SîvîReque°


9582 
	#TC_CORBA_SîvîReque°
 
TC_CORBA_Obje˘


	)

9587 
CORBA_PﬁicyTy≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥
(
CORBA_Pﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9588 
CORBA_Pﬁicy
 
CORBA_Pﬁicy_c›y
(CORBA_Pﬁicy 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9589 
CORBA_Pﬁicy_de°roy
(
CORBA_Pﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9590 
CORBA_Pﬁicy
 
CORBA_DomaöM™agî_gë_domaö_pﬁicy
(
CORBA_DomaöM™agî
 
_obj
, c⁄° 
CORBA_PﬁicyTy≥
 
pﬁicy_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

9591 
	#CORBA_C⁄°ru˘i⁄Pﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

9592 
	#CORBA_C⁄°ru˘i⁄Pﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

9593 
	#CORBA_C⁄°ru˘i⁄Pﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

9594 
CORBA_C⁄°ru˘i⁄Pﬁicy_make_domaö_m™agî
(
CORBA_C⁄°ru˘i⁄Pﬁicy
 
_obj
, c⁄° 
CORBA_I¡îÁ˚Def
 
obje˘_ty≥
, c⁄° 
CORBA_boﬁón
 
c⁄°r_pﬁicy
, 
CORBA_Envú⁄mít
 *
ev
);

9595 
CORBA_Deföôi⁄Köd
 
CORBA_IRObje˘__gë_def_köd
(
CORBA_IRObje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9596 
CORBA_IRObje˘_de°roy
(
CORBA_IRObje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9597 
	#CORBA_C⁄èöed__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9598 
	#CORBA_C⁄èöed_de°roy
 
CORBA_IRObje˘_de°roy


	)

9599 
CORBA_Rïosô‹yId
 
CORBA_C⁄èöed__gë_id
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9600 
CORBA_C⁄èöed__£t_id
(
CORBA_C⁄èöed
 
_obj
, c⁄° 
CORBA_ch¨
 * 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9601 
CORBA_Idítifõr
 
CORBA_C⁄èöed__gë_«me
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9602 
CORBA_C⁄èöed__£t_«me
(
CORBA_C⁄èöed
 
_obj
, c⁄° 
CORBA_ch¨
 * 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9603 
CORBA_Vîsi⁄S≥c
 
CORBA_C⁄èöed__gë_vîsi⁄
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9604 
CORBA_C⁄èöed__£t_vîsi⁄
(
CORBA_C⁄èöed
 
_obj
, c⁄° 
CORBA_ch¨
 * 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9605 
CORBA_C⁄èöî
 
CORBA_C⁄èöed__gë_deföed_ö
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9606 
CORBA_Sc›edName
 
CORBA_C⁄èöed__gë_absﬁuã_«me
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9607 
CORBA_Rïosô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9608 
CORBA_C⁄èöed_Des¸ùti⁄
* 
CORBA_C⁄èöed_des¸ibe
(
CORBA_C⁄èöed
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9609 
CORBA_C⁄èöed_move
(
CORBA_C⁄èöed
 
_obj
, c⁄° 
CORBA_C⁄èöî
 
√w_c⁄èöî
, c⁄° 
CORBA_ch¨
 * 
√w_«me
, c⁄° CORBA_ch¨ * 
√w_vîsi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

9610 
	#CORBA_C⁄èöî__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9611 
	#CORBA_C⁄èöî_de°roy
 
CORBA_IRObje˘_de°roy


	)

9612 
CORBA_C⁄èöed
 
CORBA_C⁄èöî_lookup
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
£¨ch_«me
, 
CORBA_Envú⁄mít
 *
ev
);

9613 
CORBA_C⁄èöedSeq
* 
CORBA_C⁄èöî_c⁄ã¡s
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_Deföôi⁄Köd
 
limô_ty≥
, c⁄° 
CORBA_boﬁón
 
ex˛ude_öhîôed
, 
CORBA_Envú⁄mít
 *
ev
);

9614 
CORBA_C⁄èöedSeq
* 
CORBA_C⁄èöî_lookup_«me
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
£¨ch_«me
, c⁄° 
CORBA_l⁄g
 
Àvñs_to_£¨ch
, c⁄° 
CORBA_Deföôi⁄Köd
 
limô_ty≥
, c⁄° 
CORBA_boﬁón
 
ex˛ude_öhîôed
, 
CORBA_Envú⁄mít
 *
ev
);

9615 
CORBA_C⁄èöî_Des¸ùti⁄Seq
* 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_Deföôi⁄Köd
 
limô_ty≥
, c⁄° 
CORBA_boﬁón
 
ex˛ude_öhîôed
, c⁄° 
CORBA_l⁄g
 
max_ªtu∫ed_objs
, 
CORBA_Envú⁄mít
 *
ev
);

9616 
CORBA_ModuÀDef
 
CORBA_C⁄èöî_¸óã_moduÀ
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

9617 
CORBA_C⁄°™tDef
 
CORBA_C⁄èöî_¸óã_c⁄°™t
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ty≥
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9618 
CORBA_Såu˘Def
 
CORBA_C⁄èöî_¸óã_°ru˘
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_Såu˘MembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

9619 
CORBA_Uni⁄Def
 
CORBA_C⁄èöî_¸óã_uni⁄
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
dis¸imö©‹_ty≥
, c⁄° 
CORBA_Uni⁄MembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

9620 
CORBA_EnumDef
 
CORBA_C⁄èöî_¸óã_íum
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_EnumMembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

9621 
CORBA_AlüsDef
 
CORBA_C⁄èöî_¸óã_Æüs
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
‹igöÆ_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

9622 
CORBA_I¡îÁ˚Def
 
CORBA_C⁄èöî_¸óã_öãrÁ˚
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_I¡îÁ˚DefSeq
* 
ba£_öãrÁ˚s
, c⁄° 
CORBA_boﬁón
 
is_ab°ø˘
, 
CORBA_Envú⁄mít
 *
ev
);

9623 
CORBA_VÆueDef
 
CORBA_C⁄èöî_¸óã_vÆue
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_boﬁón
 
is_cu°om
, c⁄° CORBA_boﬁó¿
is_ab°ø˘
, c⁄° CORBA_VÆueDe‡
ba£_vÆue
, c⁄° CORBA_boﬁó¿
is_åunˇèbÀ
, c⁄° 
CORBA_VÆueDefSeq
* 
ab°ø˘_ba£_vÆues
, c⁄° 
CORBA_I¡îÁ˚DefSeq
* 
suµ‹ãd_öãrÁ˚s
, c⁄° 
CORBA_InôülizîSeq
* 
öôülizîs
, 
CORBA_Envú⁄mít
 *
ev
);

9624 
CORBA_VÆueBoxDef
 
CORBA_C⁄èöî_¸óã_vÆue_box
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
‹igöÆ_ty≥_def
, 
CORBA_Envú⁄mít
 *
ev
);

9625 
CORBA_Ex˚±i⁄Def
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_Såu˘MembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

9626 
CORBA_N©iveDef
 
CORBA_C⁄èöî_¸óã_«tive
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

9627 
CORBA_Ab°ø˘I¡îÁ˚Def
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_Ab°ø˘I¡îÁ˚DefSeq
* 
ba£_öãrÁ˚s
, 
CORBA_Envú⁄mít
 *
ev
);

9628 
CORBA_LoˇlI¡îÁ˚Def
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_I¡îÁ˚DefSeq
* 
ba£_öãrÁ˚s
, 
CORBA_Envú⁄mít
 *
ev
);

9629 
CORBA_ExtVÆueDef
 
CORBA_C⁄èöî_¸óã_ext_vÆue
(
CORBA_C⁄èöî
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_boﬁón
 
is_cu°om
, c⁄° CORBA_boﬁó¿
is_ab°ø˘
, c⁄° 
CORBA_VÆueDef
 
ba£_vÆue
, c⁄° CORBA_boﬁó¿
is_åunˇèbÀ
, c⁄° 
CORBA_VÆueDefSeq
* 
ab°ø˘_ba£_vÆues
, c⁄° 
CORBA_I¡îÁ˚DefSeq
* 
suµ‹ãd_öãrÁ˚s
, c⁄° 
CORBA_ExtInôülizîSeq
* 
öôülizîs
, 
CORBA_Envú⁄mít
 *
ev
);

9630 
	#CORBA_IDLTy≥__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9631 
	#CORBA_IDLTy≥_de°roy
 
CORBA_IRObje˘_de°roy


	)

9632 
CORBA_Ty≥Code
 
CORBA_IDLTy≥__gë_ty≥
(
CORBA_IDLTy≥
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9633 
	#CORBA_Rïosô‹y__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9634 
	#CORBA_Rïosô‹y_de°roy
 
CORBA_IRObje˘_de°roy


	)

9635 
	#CORBA_Rïosô‹y_lookup
 
CORBA_C⁄èöî_lookup


	)

9636 
	#CORBA_Rïosô‹y_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

9637 
	#CORBA_Rïosô‹y_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

9638 
	#CORBA_Rïosô‹y_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

9639 
	#CORBA_Rïosô‹y_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

9640 
	#CORBA_Rïosô‹y_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

9641 
	#CORBA_Rïosô‹y_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

9642 
	#CORBA_Rïosô‹y_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

9643 
	#CORBA_Rïosô‹y_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

9644 
	#CORBA_Rïosô‹y_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

9645 
	#CORBA_Rïosô‹y_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

9646 
	#CORBA_Rïosô‹y_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

9647 
	#CORBA_Rïosô‹y_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

9648 
	#CORBA_Rïosô‹y_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

9649 
	#CORBA_Rïosô‹y_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

9650 
	#CORBA_Rïosô‹y_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

9651 
	#CORBA_Rïosô‹y_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

9652 
	#CORBA_Rïosô‹y_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

9653 
CORBA_C⁄èöed
 
CORBA_Rïosô‹y_lookup_id
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_ch¨
 * 
£¨ch_id
, 
CORBA_Envú⁄mít
 *
ev
);

9654 
CORBA_Ty≥Code
 
CORBA_Rïosô‹y_gë_ˇn⁄iˇl_ty≥code
(
CORBA_Rïosô‹y
 
_obj
, c⁄° CORBA_Ty≥Codê
tc
, 
CORBA_Envú⁄mít
 *
ev
);

9655 
CORBA_PrimôiveDef
 
CORBA_Rïosô‹y_gë_¥imôive
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_PrimôiveKöd
 
köd
, 
CORBA_Envú⁄mít
 *
ev
);

9656 
CORBA_SåögDef
 
CORBA_Rïosô‹y_¸óã_°rög
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, 
CORBA_Envú⁄mít
 *
ev
);

9657 
CORBA_W°rögDef
 
CORBA_Rïosô‹y_¸óã_w°rög
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, 
CORBA_Envú⁄mít
 *
ev
);

9658 
CORBA_Sequí˚Def
 
CORBA_Rïosô‹y_¸óã_£quí˚
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, c⁄° 
CORBA_IDLTy≥
 
ñemít_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

9659 
CORBA_AºayDef
 
CORBA_Rïosô‹y_¸óã_¨øy
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
Àngth
, c⁄° 
CORBA_IDLTy≥
 
ñemít_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

9660 
CORBA_FixedDef
 
CORBA_Rïosô‹y_¸óã_fixed
(
CORBA_Rïosô‹y
 
_obj
, c⁄° 
CORBA_unsig√d_sh‹t
 
digôs
, c⁄° 
CORBA_sh‹t
 
sˇÀ
, 
CORBA_Envú⁄mít
 *
ev
);

9661 
	#CORBA_ModuÀDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9662 
	#CORBA_ModuÀDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9663 
	#CORBA_ModuÀDef_lookup
 
CORBA_C⁄èöî_lookup


	)

9664 
	#CORBA_ModuÀDef_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

9665 
	#CORBA_ModuÀDef_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

9666 
	#CORBA_ModuÀDef_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

9667 
	#CORBA_ModuÀDef_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

9668 
	#CORBA_ModuÀDef_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

9669 
	#CORBA_ModuÀDef_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

9670 
	#CORBA_ModuÀDef_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

9671 
	#CORBA_ModuÀDef_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

9672 
	#CORBA_ModuÀDef_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

9673 
	#CORBA_ModuÀDef_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

9674 
	#CORBA_ModuÀDef_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

9675 
	#CORBA_ModuÀDef_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

9676 
	#CORBA_ModuÀDef_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

9677 
	#CORBA_ModuÀDef_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

9678 
	#CORBA_ModuÀDef_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

9679 
	#CORBA_ModuÀDef_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

9680 
	#CORBA_ModuÀDef_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

9681 
	#CORBA_ModuÀDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9682 
	#CORBA_ModuÀDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9683 
	#CORBA_ModuÀDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9684 
	#CORBA_ModuÀDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9685 
	#CORBA_ModuÀDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9686 
	#CORBA_ModuÀDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9687 
	#CORBA_ModuÀDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9688 
	#CORBA_ModuÀDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9689 
	#CORBA_ModuÀDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9690 
	#CORBA_ModuÀDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9691 
	#CORBA_ModuÀDef_move
 
CORBA_C⁄èöed_move


	)

9692 
	#CORBA_C⁄°™tDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9693 
	#CORBA_C⁄°™tDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9694 
	#CORBA_C⁄°™tDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9695 
	#CORBA_C⁄°™tDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9696 
	#CORBA_C⁄°™tDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9697 
	#CORBA_C⁄°™tDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9698 
	#CORBA_C⁄°™tDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9699 
	#CORBA_C⁄°™tDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9700 
	#CORBA_C⁄°™tDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9701 
	#CORBA_C⁄°™tDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9702 
	#CORBA_C⁄°™tDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9703 
	#CORBA_C⁄°™tDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9704 
	#CORBA_C⁄°™tDef_move
 
CORBA_C⁄èöed_move


	)

9705 
CORBA_Ty≥Code
 
CORBA_C⁄°™tDef__gë_ty≥
(
CORBA_C⁄°™tDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9706 
CORBA_IDLTy≥
 
CORBA_C⁄°™tDef__gë_ty≥_def
(
CORBA_C⁄°™tDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9707 
CORBA_C⁄°™tDef__£t_ty≥_def
(
CORBA_C⁄°™tDef
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9708 
CORBA_™y
* 
CORBA_C⁄°™tDef__gë_vÆue
(
CORBA_C⁄°™tDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9709 
CORBA_C⁄°™tDef__£t_vÆue
(
CORBA_C⁄°™tDef
 
_obj
, c⁄° 
CORBA_™y
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9710 
	#CORBA_Ty≥defDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9711 
	#CORBA_Ty≥defDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9712 
	#CORBA_Ty≥defDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9713 
	#CORBA_Ty≥defDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9714 
	#CORBA_Ty≥defDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9715 
	#CORBA_Ty≥defDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9716 
	#CORBA_Ty≥defDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9717 
	#CORBA_Ty≥defDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9718 
	#CORBA_Ty≥defDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9719 
	#CORBA_Ty≥defDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9720 
	#CORBA_Ty≥defDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9721 
	#CORBA_Ty≥defDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9722 
	#CORBA_Ty≥defDef_move
 
CORBA_C⁄èöed_move


	)

9723 
	#CORBA_Ty≥defDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9724 
	#CORBA_Såu˘Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9725 
	#CORBA_Såu˘Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

9726 
	#CORBA_Såu˘Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9727 
	#CORBA_Såu˘Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9728 
	#CORBA_Såu˘Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9729 
	#CORBA_Såu˘Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9730 
	#CORBA_Såu˘Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9731 
	#CORBA_Såu˘Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9732 
	#CORBA_Såu˘Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9733 
	#CORBA_Såu˘Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9734 
	#CORBA_Såu˘Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9735 
	#CORBA_Såu˘Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9736 
	#CORBA_Såu˘Def_move
 
CORBA_C⁄èöed_move


	)

9737 
	#CORBA_Såu˘Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9738 
	#CORBA_Såu˘Def_lookup
 
CORBA_C⁄èöî_lookup


	)

9739 
	#CORBA_Såu˘Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

9740 
	#CORBA_Såu˘Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

9741 
	#CORBA_Såu˘Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

9742 
	#CORBA_Såu˘Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

9743 
	#CORBA_Såu˘Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

9744 
	#CORBA_Såu˘Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

9745 
	#CORBA_Såu˘Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

9746 
	#CORBA_Såu˘Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

9747 
	#CORBA_Såu˘Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

9748 
	#CORBA_Såu˘Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

9749 
	#CORBA_Såu˘Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

9750 
	#CORBA_Såu˘Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

9751 
	#CORBA_Såu˘Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

9752 
	#CORBA_Såu˘Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

9753 
	#CORBA_Såu˘Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

9754 
	#CORBA_Såu˘Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

9755 
	#CORBA_Såu˘Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

9756 
CORBA_Såu˘MembîSeq
* 
CORBA_Såu˘Def__gë_membîs
(
CORBA_Såu˘Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9757 
CORBA_Såu˘Def__£t_membîs
(
CORBA_Såu˘Def
 
_obj
, c⁄° 
CORBA_Såu˘MembîSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9758 
	#CORBA_Uni⁄Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9759 
	#CORBA_Uni⁄Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

9760 
	#CORBA_Uni⁄Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9761 
	#CORBA_Uni⁄Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9762 
	#CORBA_Uni⁄Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9763 
	#CORBA_Uni⁄Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9764 
	#CORBA_Uni⁄Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9765 
	#CORBA_Uni⁄Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9766 
	#CORBA_Uni⁄Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9767 
	#CORBA_Uni⁄Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9768 
	#CORBA_Uni⁄Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9769 
	#CORBA_Uni⁄Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9770 
	#CORBA_Uni⁄Def_move
 
CORBA_C⁄èöed_move


	)

9771 
	#CORBA_Uni⁄Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9772 
	#CORBA_Uni⁄Def_lookup
 
CORBA_C⁄èöî_lookup


	)

9773 
	#CORBA_Uni⁄Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

9774 
	#CORBA_Uni⁄Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

9775 
	#CORBA_Uni⁄Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

9776 
	#CORBA_Uni⁄Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

9777 
	#CORBA_Uni⁄Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

9778 
	#CORBA_Uni⁄Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

9779 
	#CORBA_Uni⁄Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

9780 
	#CORBA_Uni⁄Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

9781 
	#CORBA_Uni⁄Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

9782 
	#CORBA_Uni⁄Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

9783 
	#CORBA_Uni⁄Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

9784 
	#CORBA_Uni⁄Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

9785 
	#CORBA_Uni⁄Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

9786 
	#CORBA_Uni⁄Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

9787 
	#CORBA_Uni⁄Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

9788 
	#CORBA_Uni⁄Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

9789 
	#CORBA_Uni⁄Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

9790 
CORBA_Ty≥Code
 
CORBA_Uni⁄Def__gë_dis¸imö©‹_ty≥
(
CORBA_Uni⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9791 
CORBA_IDLTy≥
 
CORBA_Uni⁄Def__gë_dis¸imö©‹_ty≥_def
(
CORBA_Uni⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9792 
CORBA_Uni⁄Def__£t_dis¸imö©‹_ty≥_def
(
CORBA_Uni⁄Def
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9793 
CORBA_Uni⁄MembîSeq
* 
CORBA_Uni⁄Def__gë_membîs
(
CORBA_Uni⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9794 
CORBA_Uni⁄Def__£t_membîs
(
CORBA_Uni⁄Def
 
_obj
, c⁄° 
CORBA_Uni⁄MembîSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9795 
	#CORBA_EnumDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9796 
	#CORBA_EnumDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9797 
	#CORBA_EnumDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9798 
	#CORBA_EnumDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9799 
	#CORBA_EnumDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9800 
	#CORBA_EnumDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9801 
	#CORBA_EnumDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9802 
	#CORBA_EnumDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9803 
	#CORBA_EnumDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9804 
	#CORBA_EnumDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9805 
	#CORBA_EnumDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9806 
	#CORBA_EnumDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9807 
	#CORBA_EnumDef_move
 
CORBA_C⁄èöed_move


	)

9808 
	#CORBA_EnumDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9809 
CORBA_EnumMembîSeq
* 
CORBA_EnumDef__gë_membîs
(
CORBA_EnumDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9810 
CORBA_EnumDef__£t_membîs
(
CORBA_EnumDef
 
_obj
, c⁄° 
CORBA_EnumMembîSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9811 
	#CORBA_AlüsDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9812 
	#CORBA_AlüsDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9813 
	#CORBA_AlüsDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9814 
	#CORBA_AlüsDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9815 
	#CORBA_AlüsDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9816 
	#CORBA_AlüsDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9817 
	#CORBA_AlüsDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9818 
	#CORBA_AlüsDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9819 
	#CORBA_AlüsDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9820 
	#CORBA_AlüsDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9821 
	#CORBA_AlüsDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9822 
	#CORBA_AlüsDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9823 
	#CORBA_AlüsDef_move
 
CORBA_C⁄èöed_move


	)

9824 
	#CORBA_AlüsDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9825 
CORBA_IDLTy≥
 
CORBA_AlüsDef__gë_‹igöÆ_ty≥_def
(
CORBA_AlüsDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9826 
CORBA_AlüsDef__£t_‹igöÆ_ty≥_def
(
CORBA_AlüsDef
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9827 
	#CORBA_N©iveDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9828 
	#CORBA_N©iveDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9829 
	#CORBA_N©iveDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9830 
	#CORBA_N©iveDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9831 
	#CORBA_N©iveDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9832 
	#CORBA_N©iveDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9833 
	#CORBA_N©iveDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9834 
	#CORBA_N©iveDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9835 
	#CORBA_N©iveDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9836 
	#CORBA_N©iveDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9837 
	#CORBA_N©iveDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9838 
	#CORBA_N©iveDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9839 
	#CORBA_N©iveDef_move
 
CORBA_C⁄èöed_move


	)

9840 
	#CORBA_N©iveDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9841 
	#CORBA_PrimôiveDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9842 
	#CORBA_PrimôiveDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9843 
	#CORBA_PrimôiveDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9844 
CORBA_PrimôiveKöd
 
CORBA_PrimôiveDef__gë_köd
(
CORBA_PrimôiveDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9845 
	#CORBA_SåögDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9846 
	#CORBA_SåögDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9847 
	#CORBA_SåögDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9848 
CORBA_unsig√d_l⁄g
 
CORBA_SåögDef__gë_bound
(
CORBA_SåögDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9849 
CORBA_SåögDef__£t_bound
(
CORBA_SåögDef
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9850 
	#CORBA_W°rögDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9851 
	#CORBA_W°rögDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9852 
	#CORBA_W°rögDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9853 
CORBA_unsig√d_l⁄g
 
CORBA_W°rögDef__gë_bound
(
CORBA_W°rögDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9854 
CORBA_W°rögDef__£t_bound
(
CORBA_W°rögDef
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9855 
	#CORBA_FixedDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9856 
	#CORBA_FixedDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9857 
	#CORBA_FixedDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9858 
CORBA_unsig√d_sh‹t
 
CORBA_FixedDef__gë_digôs
(
CORBA_FixedDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9859 
CORBA_FixedDef__£t_digôs
(
CORBA_FixedDef
 
_obj
, c⁄° 
CORBA_unsig√d_sh‹t
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9860 
CORBA_sh‹t
 
CORBA_FixedDef__gë_sˇÀ
(
CORBA_FixedDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9861 
CORBA_FixedDef__£t_sˇÀ
(
CORBA_FixedDef
 
_obj
, c⁄° 
CORBA_sh‹t
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9862 
	#CORBA_Sequí˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9863 
	#CORBA_Sequí˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

9864 
	#CORBA_Sequí˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9865 
CORBA_unsig√d_l⁄g
 
CORBA_Sequí˚Def__gë_bound
(
CORBA_Sequí˚Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9866 
CORBA_Sequí˚Def__£t_bound
(
CORBA_Sequí˚Def
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9867 
CORBA_Ty≥Code
 
CORBA_Sequí˚Def__gë_ñemít_ty≥
(
CORBA_Sequí˚Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9868 
CORBA_IDLTy≥
 
CORBA_Sequí˚Def__gë_ñemít_ty≥_def
(
CORBA_Sequí˚Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9869 
CORBA_Sequí˚Def__£t_ñemít_ty≥_def
(
CORBA_Sequí˚Def
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9870 
	#CORBA_AºayDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9871 
	#CORBA_AºayDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9872 
	#CORBA_AºayDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

9873 
CORBA_unsig√d_l⁄g
 
CORBA_AºayDef__gë_Àngth
(
CORBA_AºayDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9874 
CORBA_AºayDef__£t_Àngth
(
CORBA_AºayDef
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9875 
CORBA_Ty≥Code
 
CORBA_AºayDef__gë_ñemít_ty≥
(
CORBA_AºayDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9876 
CORBA_IDLTy≥
 
CORBA_AºayDef__gë_ñemít_ty≥_def
(
CORBA_AºayDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9877 
CORBA_AºayDef__£t_ñemít_ty≥_def
(
CORBA_AºayDef
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9878 
	#CORBA_Ex˚±i⁄Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9879 
	#CORBA_Ex˚±i⁄Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

9880 
	#CORBA_Ex˚±i⁄Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9881 
	#CORBA_Ex˚±i⁄Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9882 
	#CORBA_Ex˚±i⁄Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9883 
	#CORBA_Ex˚±i⁄Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9884 
	#CORBA_Ex˚±i⁄Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9885 
	#CORBA_Ex˚±i⁄Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9886 
	#CORBA_Ex˚±i⁄Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9887 
	#CORBA_Ex˚±i⁄Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9888 
	#CORBA_Ex˚±i⁄Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9889 
	#CORBA_Ex˚±i⁄Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9890 
	#CORBA_Ex˚±i⁄Def_move
 
CORBA_C⁄èöed_move


	)

9891 
	#CORBA_Ex˚±i⁄Def_lookup
 
CORBA_C⁄èöî_lookup


	)

9892 
	#CORBA_Ex˚±i⁄Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

9893 
	#CORBA_Ex˚±i⁄Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

9894 
	#CORBA_Ex˚±i⁄Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

9895 
	#CORBA_Ex˚±i⁄Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

9896 
	#CORBA_Ex˚±i⁄Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

9897 
	#CORBA_Ex˚±i⁄Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

9898 
	#CORBA_Ex˚±i⁄Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

9899 
	#CORBA_Ex˚±i⁄Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

9900 
	#CORBA_Ex˚±i⁄Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

9901 
	#CORBA_Ex˚±i⁄Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

9902 
	#CORBA_Ex˚±i⁄Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

9903 
	#CORBA_Ex˚±i⁄Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

9904 
	#CORBA_Ex˚±i⁄Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

9905 
	#CORBA_Ex˚±i⁄Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

9906 
	#CORBA_Ex˚±i⁄Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

9907 
	#CORBA_Ex˚±i⁄Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

9908 
	#CORBA_Ex˚±i⁄Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

9909 
CORBA_Ty≥Code
 
CORBA_Ex˚±i⁄Def__gë_ty≥
(
CORBA_Ex˚±i⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9910 
CORBA_Såu˘MembîSeq
* 
CORBA_Ex˚±i⁄Def__gë_membîs
(
CORBA_Ex˚±i⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9911 
CORBA_Ex˚±i⁄Def__£t_membîs
(
CORBA_Ex˚±i⁄Def
 
_obj
, c⁄° 
CORBA_Såu˘MembîSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9912 
	#CORBA_AâribuãDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9913 
	#CORBA_AâribuãDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9914 
	#CORBA_AâribuãDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9915 
	#CORBA_AâribuãDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9916 
	#CORBA_AâribuãDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9917 
	#CORBA_AâribuãDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9918 
	#CORBA_AâribuãDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9919 
	#CORBA_AâribuãDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9920 
	#CORBA_AâribuãDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9921 
	#CORBA_AâribuãDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9922 
	#CORBA_AâribuãDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9923 
	#CORBA_AâribuãDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9924 
	#CORBA_AâribuãDef_move
 
CORBA_C⁄èöed_move


	)

9925 
CORBA_Ty≥Code
 
CORBA_AâribuãDef__gë_ty≥
(
CORBA_AâribuãDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9926 
CORBA_IDLTy≥
 
CORBA_AâribuãDef__gë_ty≥_def
(
CORBA_AâribuãDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9927 
CORBA_AâribuãDef__£t_ty≥_def
(
CORBA_AâribuãDef
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9928 
CORBA_AâribuãMode
 
CORBA_AâribuãDef__gë_mode
(
CORBA_AâribuãDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9929 
CORBA_AâribuãDef__£t_mode
(
CORBA_AâribuãDef
 
_obj
, c⁄° 
CORBA_AâribuãMode
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9930 
	#CORBA_ExtAâribuãDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9931 
	#CORBA_ExtAâribuãDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

9932 
	#CORBA_ExtAâribuãDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9933 
	#CORBA_ExtAâribuãDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9934 
	#CORBA_ExtAâribuãDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9935 
	#CORBA_ExtAâribuãDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9936 
	#CORBA_ExtAâribuãDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9937 
	#CORBA_ExtAâribuãDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9938 
	#CORBA_ExtAâribuãDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9939 
	#CORBA_ExtAâribuãDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9940 
	#CORBA_ExtAâribuãDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9941 
	#CORBA_ExtAâribuãDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9942 
	#CORBA_ExtAâribuãDef_move
 
CORBA_C⁄èöed_move


	)

9943 
	#CORBA_ExtAâribuãDef__gë_ty≥
 
CORBA_AâribuãDef__gë_ty≥


	)

9944 
	#CORBA_ExtAâribuãDef__gë_ty≥_def
 
CORBA_AâribuãDef__gë_ty≥_def


	)

9945 
	#CORBA_ExtAâribuãDef__£t_ty≥_def
 
CORBA_AâribuãDef__£t_ty≥_def


	)

9946 
	#CORBA_ExtAâribuãDef__gë_mode
 
CORBA_AâribuãDef__gë_mode


	)

9947 
	#CORBA_ExtAâribuãDef__£t_mode
 
CORBA_AâribuãDef__£t_mode


	)

9948 
CORBA_ExcDes¸ùti⁄Seq
* 
CORBA_ExtAâribuãDef__gë_gë_ex˚±i⁄s
(
CORBA_ExtAâribuãDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9949 
CORBA_ExtAâribuãDef__£t_gë_ex˚±i⁄s
(
CORBA_ExtAâribuãDef
 
_obj
, c⁄° 
CORBA_ExcDes¸ùti⁄Seq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9950 
CORBA_ExcDes¸ùti⁄Seq
* 
CORBA_ExtAâribuãDef__gë_£t_ex˚±i⁄s
(
CORBA_ExtAâribuãDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9951 
CORBA_ExtAâribuãDef__£t_£t_ex˚±i⁄s
(
CORBA_ExtAâribuãDef
 
_obj
, c⁄° 
CORBA_ExcDes¸ùti⁄Seq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9952 
CORBA_ExtAâribuãDes¸ùti⁄
* 
CORBA_ExtAâribuãDef_des¸ibe_©åibuã
(
CORBA_ExtAâribuãDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9953 
	#CORBA_O≥øti⁄Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9954 
	#CORBA_O≥øti⁄Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

9955 
	#CORBA_O≥øti⁄Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9956 
	#CORBA_O≥øti⁄Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9957 
	#CORBA_O≥øti⁄Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

9958 
	#CORBA_O≥øti⁄Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

9959 
	#CORBA_O≥øti⁄Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

9960 
	#CORBA_O≥øti⁄Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

9961 
	#CORBA_O≥øti⁄Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

9962 
	#CORBA_O≥øti⁄Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

9963 
	#CORBA_O≥øti⁄Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

9964 
	#CORBA_O≥øti⁄Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

9965 
	#CORBA_O≥øti⁄Def_move
 
CORBA_C⁄èöed_move


	)

9966 
CORBA_Ty≥Code
 
CORBA_O≥øti⁄Def__gë_ªsu…
(
CORBA_O≥øti⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9967 
CORBA_IDLTy≥
 
CORBA_O≥øti⁄Def__gë_ªsu…_def
(
CORBA_O≥øti⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9968 
CORBA_O≥øti⁄Def__£t_ªsu…_def
(
CORBA_O≥øti⁄Def
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9969 
CORBA_P¨Des¸ùti⁄Seq
* 
CORBA_O≥øti⁄Def__gë_∑øms
(
CORBA_O≥øti⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9970 
CORBA_O≥øti⁄Def__£t_∑øms
(
CORBA_O≥øti⁄Def
 
_obj
, c⁄° 
CORBA_P¨Des¸ùti⁄Seq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9971 
CORBA_O≥øti⁄Mode
 
CORBA_O≥øti⁄Def__gë_mode
(
CORBA_O≥øti⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9972 
CORBA_O≥øti⁄Def__£t_mode
(
CORBA_O≥øti⁄Def
 
_obj
, c⁄° 
CORBA_O≥øti⁄Mode
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9973 
CORBA_C⁄ãxtIdSeq
* 
CORBA_O≥øti⁄Def__gë_c⁄ãxts
(
CORBA_O≥øti⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9974 
CORBA_O≥øti⁄Def__£t_c⁄ãxts
(
CORBA_O≥øti⁄Def
 
_obj
, c⁄° 
CORBA_C⁄ãxtIdSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9975 
CORBA_Ex˚±i⁄DefSeq
* 
CORBA_O≥øti⁄Def__gë_ex˚±i⁄s
(
CORBA_O≥øti⁄Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

9976 
CORBA_O≥øti⁄Def__£t_ex˚±i⁄s
(
CORBA_O≥øti⁄Def
 
_obj
, c⁄° 
CORBA_Ex˚±i⁄DefSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

9977 
	#CORBA_I¡îÁ˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

9978 
	#CORBA_I¡îÁ˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

9979 
	#CORBA_I¡îÁ˚Def_lookup
 
CORBA_C⁄èöî_lookup


	)

9980 
	#CORBA_I¡îÁ˚Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

9981 
	#CORBA_I¡îÁ˚Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

9982 
	#CORBA_I¡îÁ˚Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

9983 
	#CORBA_I¡îÁ˚Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

9984 
	#CORBA_I¡îÁ˚Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

9985 
	#CORBA_I¡îÁ˚Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

9986 
	#CORBA_I¡îÁ˚Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

9987 
	#CORBA_I¡îÁ˚Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

9988 
	#CORBA_I¡îÁ˚Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

9989 
	#CORBA_I¡îÁ˚Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

9990 
	#CORBA_I¡îÁ˚Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

9991 
	#CORBA_I¡îÁ˚Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

9992 
	#CORBA_I¡îÁ˚Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

9993 
	#CORBA_I¡îÁ˚Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

9994 
	#CORBA_I¡îÁ˚Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

9995 
	#CORBA_I¡îÁ˚Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

9996 
	#CORBA_I¡îÁ˚Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

9997 
	#CORBA_I¡îÁ˚Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

9998 
	#CORBA_I¡îÁ˚Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

9999 
	#CORBA_I¡îÁ˚Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10000 
	#CORBA_I¡îÁ˚Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10001 
	#CORBA_I¡îÁ˚Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10002 
	#CORBA_I¡îÁ˚Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10003 
	#CORBA_I¡îÁ˚Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10004 
	#CORBA_I¡îÁ˚Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10005 
	#CORBA_I¡îÁ˚Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10006 
	#CORBA_I¡îÁ˚Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10007 
	#CORBA_I¡îÁ˚Def_move
 
CORBA_C⁄èöed_move


	)

10008 
	#CORBA_I¡îÁ˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10009 
CORBA_I¡îÁ˚DefSeq
* 
CORBA_I¡îÁ˚Def__gë_ba£_öãrÁ˚s
(
CORBA_I¡îÁ˚Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10010 
CORBA_I¡îÁ˚Def__£t_ba£_öãrÁ˚s
(
CORBA_I¡îÁ˚Def
 
_obj
, c⁄° 
CORBA_I¡îÁ˚DefSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10011 
CORBA_boﬁón
 
CORBA_I¡îÁ˚Def__gë_is_ab°ø˘
(
CORBA_I¡îÁ˚Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10012 
CORBA_I¡îÁ˚Def__£t_is_ab°ø˘
(
CORBA_I¡îÁ˚Def
 
_obj
, c⁄° 
CORBA_boﬁón
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10013 
CORBA_boﬁón
 
CORBA_I¡îÁ˚Def_is_a
(
CORBA_I¡îÁ˚Def
 
_obj
, c⁄° 
CORBA_ch¨
 * 
öãrÁ˚_id
, 
CORBA_Envú⁄mít
 *
ev
);

10014 
CORBA_I¡îÁ˚Def_FuŒI¡îÁ˚Des¸ùti⁄
* 
CORBA_I¡îÁ˚Def_des¸ibe_öãrÁ˚
(
CORBA_I¡îÁ˚Def
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10015 
CORBA_AâribuãDef
 
CORBA_I¡îÁ˚Def_¸óã_©åibuã
(
CORBA_I¡îÁ˚Def
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ty≥
, c⁄° 
CORBA_AâribuãMode
 
mode
, 
CORBA_Envú⁄mít
 *
ev
);

10016 
CORBA_O≥øti⁄Def
 
CORBA_I¡îÁ˚Def_¸óã_›î©i⁄
(
CORBA_I¡îÁ˚Def
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ªsu…
, c⁄° 
CORBA_O≥øti⁄Mode
 
mode
, c⁄° 
CORBA_P¨Des¸ùti⁄Seq
* 
∑øms
, c⁄° 
CORBA_Ex˚±i⁄DefSeq
* 
ex˚±i⁄s
, c⁄° 
CORBA_C⁄ãxtIdSeq
* 
c⁄ãxts
, 
CORBA_Envú⁄mít
 *
ev
);

10017 
CORBA_I¡îÁ˚AârExãnsi⁄_ExtFuŒI¡îÁ˚Des¸ùti⁄
* 
CORBA_I¡îÁ˚AârExãnsi⁄_des¸ibe_ext_öãrÁ˚
(
CORBA_I¡îÁ˚AârExãnsi⁄
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10018 
CORBA_ExtAâribuãDef
 
CORBA_I¡îÁ˚AârExãnsi⁄_¸óã_ext_©åibuã
(
CORBA_I¡îÁ˚AârExãnsi⁄
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ty≥
, c⁄° 
CORBA_AâribuãMode
 
mode
, c⁄° 
CORBA_Ex˚±i⁄DefSeq
* 
gë_ex˚±i⁄s
, c⁄° CORBA_Ex˚±i⁄DefSeq* 
£t_ex˚±i⁄s
, 
CORBA_Envú⁄mít
 *
ev
);

10019 
	#CORBA_ExtI¡îÁ˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10020 
	#CORBA_ExtI¡îÁ˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

10021 
	#CORBA_ExtI¡îÁ˚Def_lookup
 
CORBA_C⁄èöî_lookup


	)

10022 
	#CORBA_ExtI¡îÁ˚Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10023 
	#CORBA_ExtI¡îÁ˚Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10024 
	#CORBA_ExtI¡îÁ˚Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10025 
	#CORBA_ExtI¡îÁ˚Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10026 
	#CORBA_ExtI¡îÁ˚Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10027 
	#CORBA_ExtI¡îÁ˚Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10028 
	#CORBA_ExtI¡îÁ˚Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10029 
	#CORBA_ExtI¡îÁ˚Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10030 
	#CORBA_ExtI¡îÁ˚Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10031 
	#CORBA_ExtI¡îÁ˚Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10032 
	#CORBA_ExtI¡îÁ˚Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10033 
	#CORBA_ExtI¡îÁ˚Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10034 
	#CORBA_ExtI¡îÁ˚Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10035 
	#CORBA_ExtI¡îÁ˚Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10036 
	#CORBA_ExtI¡îÁ˚Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10037 
	#CORBA_ExtI¡îÁ˚Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10038 
	#CORBA_ExtI¡îÁ˚Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10039 
	#CORBA_ExtI¡îÁ˚Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10040 
	#CORBA_ExtI¡îÁ˚Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10041 
	#CORBA_ExtI¡îÁ˚Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10042 
	#CORBA_ExtI¡îÁ˚Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10043 
	#CORBA_ExtI¡îÁ˚Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10044 
	#CORBA_ExtI¡îÁ˚Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10045 
	#CORBA_ExtI¡îÁ˚Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10046 
	#CORBA_ExtI¡îÁ˚Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10047 
	#CORBA_ExtI¡îÁ˚Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10048 
	#CORBA_ExtI¡îÁ˚Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10049 
	#CORBA_ExtI¡îÁ˚Def_move
 
CORBA_C⁄èöed_move


	)

10050 
	#CORBA_ExtI¡îÁ˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10051 
	#CORBA_ExtI¡îÁ˚Def__gë_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__gë_ba£_öãrÁ˚s


	)

10052 
	#CORBA_ExtI¡îÁ˚Def__£t_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__£t_ba£_öãrÁ˚s


	)

10053 
	#CORBA_ExtI¡îÁ˚Def__gë_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__gë_is_ab°ø˘


	)

10054 
	#CORBA_ExtI¡îÁ˚Def__£t_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__£t_is_ab°ø˘


	)

10055 
	#CORBA_ExtI¡îÁ˚Def_is_a
 
CORBA_I¡îÁ˚Def_is_a


	)

10056 
	#CORBA_ExtI¡îÁ˚Def_des¸ibe_öãrÁ˚
 
CORBA_I¡îÁ˚Def_des¸ibe_öãrÁ˚


	)

10057 
	#CORBA_ExtI¡îÁ˚Def_¸óã_©åibuã
 
CORBA_I¡îÁ˚Def_¸óã_©åibuã


	)

10058 
	#CORBA_ExtI¡îÁ˚Def_¸óã_›î©i⁄
 
CORBA_I¡îÁ˚Def_¸óã_›î©i⁄


	)

10059 
	#CORBA_ExtI¡îÁ˚Def_des¸ibe_ext_öãrÁ˚
 
CORBA_I¡îÁ˚AârExãnsi⁄_des¸ibe_ext_öãrÁ˚


	)

10060 
	#CORBA_ExtI¡îÁ˚Def_¸óã_ext_©åibuã
 
CORBA_I¡îÁ˚AârExãnsi⁄_¸óã_ext_©åibuã


	)

10061 
	#CORBA_VÆueMembîDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10062 
	#CORBA_VÆueMembîDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

10063 
	#CORBA_VÆueMembîDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10064 
	#CORBA_VÆueMembîDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10065 
	#CORBA_VÆueMembîDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10066 
	#CORBA_VÆueMembîDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10067 
	#CORBA_VÆueMembîDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10068 
	#CORBA_VÆueMembîDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10069 
	#CORBA_VÆueMembîDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10070 
	#CORBA_VÆueMembîDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10071 
	#CORBA_VÆueMembîDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10072 
	#CORBA_VÆueMembîDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10073 
	#CORBA_VÆueMembîDef_move
 
CORBA_C⁄èöed_move


	)

10074 
CORBA_Ty≥Code
 
CORBA_VÆueMembîDef__gë_ty≥
(
CORBA_VÆueMembîDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10075 
CORBA_IDLTy≥
 
CORBA_VÆueMembîDef__gë_ty≥_def
(
CORBA_VÆueMembîDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10076 
CORBA_VÆueMembîDef__£t_ty≥_def
(
CORBA_VÆueMembîDef
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10077 
CORBA_Visibûôy
 
CORBA_VÆueMembîDef__gë_ac˚ss
(
CORBA_VÆueMembîDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10078 
CORBA_VÆueMembîDef__£t_ac˚ss
(
CORBA_VÆueMembîDef
 
_obj
, c⁄° 
CORBA_Visibûôy
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10079 
	#CORBA_VÆueDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10080 
	#CORBA_VÆueDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

10081 
	#CORBA_VÆueDef_lookup
 
CORBA_C⁄èöî_lookup


	)

10082 
	#CORBA_VÆueDef_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10083 
	#CORBA_VÆueDef_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10084 
	#CORBA_VÆueDef_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10085 
	#CORBA_VÆueDef_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10086 
	#CORBA_VÆueDef_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10087 
	#CORBA_VÆueDef_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10088 
	#CORBA_VÆueDef_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10089 
	#CORBA_VÆueDef_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10090 
	#CORBA_VÆueDef_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10091 
	#CORBA_VÆueDef_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10092 
	#CORBA_VÆueDef_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10093 
	#CORBA_VÆueDef_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10094 
	#CORBA_VÆueDef_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10095 
	#CORBA_VÆueDef_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10096 
	#CORBA_VÆueDef_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10097 
	#CORBA_VÆueDef_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10098 
	#CORBA_VÆueDef_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10099 
	#CORBA_VÆueDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10100 
	#CORBA_VÆueDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10101 
	#CORBA_VÆueDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10102 
	#CORBA_VÆueDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10103 
	#CORBA_VÆueDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10104 
	#CORBA_VÆueDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10105 
	#CORBA_VÆueDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10106 
	#CORBA_VÆueDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10107 
	#CORBA_VÆueDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10108 
	#CORBA_VÆueDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10109 
	#CORBA_VÆueDef_move
 
CORBA_C⁄èöed_move


	)

10110 
	#CORBA_VÆueDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10111 
CORBA_I¡îÁ˚DefSeq
* 
CORBA_VÆueDef__gë_suµ‹ãd_öãrÁ˚s
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10112 
CORBA_VÆueDef__£t_suµ‹ãd_öãrÁ˚s
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_I¡îÁ˚DefSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10113 
CORBA_InôülizîSeq
* 
CORBA_VÆueDef__gë_öôülizîs
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10114 
CORBA_VÆueDef__£t_öôülizîs
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_InôülizîSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10115 
CORBA_VÆueDef
 
CORBA_VÆueDef__gë_ba£_vÆue
(CORBA_VÆueDe‡
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10116 
CORBA_VÆueDef__£t_ba£_vÆue
(
CORBA_VÆueDef
 
_obj
, c⁄° CORBA_VÆueDe‡
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10117 
CORBA_VÆueDefSeq
* 
CORBA_VÆueDef__gë_ab°ø˘_ba£_vÆues
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10118 
CORBA_VÆueDef__£t_ab°ø˘_ba£_vÆues
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_VÆueDefSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10119 
CORBA_boﬁón
 
CORBA_VÆueDef__gë_is_ab°ø˘
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10120 
CORBA_VÆueDef__£t_is_ab°ø˘
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_boﬁón
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10121 
CORBA_boﬁón
 
CORBA_VÆueDef__gë_is_cu°om
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10122 
CORBA_VÆueDef__£t_is_cu°om
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_boﬁón
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10123 
CORBA_boﬁón
 
CORBA_VÆueDef__gë_is_åunˇèbÀ
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10124 
CORBA_VÆueDef__£t_is_åunˇèbÀ
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_boﬁón
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10125 
CORBA_boﬁón
 
CORBA_VÆueDef_is_a
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, 
CORBA_Envú⁄mít
 *
ev
);

10126 
CORBA_VÆueDef_FuŒVÆueDes¸ùti⁄
* 
CORBA_VÆueDef_des¸ibe_vÆue
(
CORBA_VÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10127 
CORBA_VÆueMembîDef
 
CORBA_VÆueDef_¸óã_vÆue_membî
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ty≥
, c⁄° 
CORBA_Visibûôy
 
ac˚ss
, 
CORBA_Envú⁄mít
 *
ev
);

10128 
CORBA_AâribuãDef
 
CORBA_VÆueDef_¸óã_©åibuã
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ty≥
, c⁄° 
CORBA_AâribuãMode
 
mode
, 
CORBA_Envú⁄mít
 *
ev
);

10129 
CORBA_O≥øti⁄Def
 
CORBA_VÆueDef_¸óã_›î©i⁄
(
CORBA_VÆueDef
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ªsu…
, c⁄° 
CORBA_O≥øti⁄Mode
 
mode
, c⁄° 
CORBA_P¨Des¸ùti⁄Seq
* 
∑øms
, c⁄° 
CORBA_Ex˚±i⁄DefSeq
* 
ex˚±i⁄s
, c⁄° 
CORBA_C⁄ãxtIdSeq
* 
c⁄ãxts
, 
CORBA_Envú⁄mít
 *
ev
);

10130 
	#CORBA_ExtVÆueDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10131 
	#CORBA_ExtVÆueDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

10132 
	#CORBA_ExtVÆueDef_lookup
 
CORBA_C⁄èöî_lookup


	)

10133 
	#CORBA_ExtVÆueDef_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10134 
	#CORBA_ExtVÆueDef_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10135 
	#CORBA_ExtVÆueDef_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10136 
	#CORBA_ExtVÆueDef_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10137 
	#CORBA_ExtVÆueDef_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10138 
	#CORBA_ExtVÆueDef_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10139 
	#CORBA_ExtVÆueDef_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10140 
	#CORBA_ExtVÆueDef_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10141 
	#CORBA_ExtVÆueDef_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10142 
	#CORBA_ExtVÆueDef_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10143 
	#CORBA_ExtVÆueDef_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10144 
	#CORBA_ExtVÆueDef_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10145 
	#CORBA_ExtVÆueDef_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10146 
	#CORBA_ExtVÆueDef_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10147 
	#CORBA_ExtVÆueDef_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10148 
	#CORBA_ExtVÆueDef_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10149 
	#CORBA_ExtVÆueDef_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10150 
	#CORBA_ExtVÆueDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10151 
	#CORBA_ExtVÆueDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10152 
	#CORBA_ExtVÆueDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10153 
	#CORBA_ExtVÆueDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10154 
	#CORBA_ExtVÆueDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10155 
	#CORBA_ExtVÆueDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10156 
	#CORBA_ExtVÆueDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10157 
	#CORBA_ExtVÆueDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10158 
	#CORBA_ExtVÆueDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10159 
	#CORBA_ExtVÆueDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10160 
	#CORBA_ExtVÆueDef_move
 
CORBA_C⁄èöed_move


	)

10161 
	#CORBA_ExtVÆueDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10162 
	#CORBA_ExtVÆueDef__gë_suµ‹ãd_öãrÁ˚s
 
CORBA_VÆueDef__gë_suµ‹ãd_öãrÁ˚s


	)

10163 
	#CORBA_ExtVÆueDef__£t_suµ‹ãd_öãrÁ˚s
 
CORBA_VÆueDef__£t_suµ‹ãd_öãrÁ˚s


	)

10164 
	#CORBA_ExtVÆueDef__gë_öôülizîs
 
CORBA_VÆueDef__gë_öôülizîs


	)

10165 
	#CORBA_ExtVÆueDef__£t_öôülizîs
 
CORBA_VÆueDef__£t_öôülizîs


	)

10166 
	#CORBA_ExtVÆueDef__gë_ba£_vÆue
 
CORBA_VÆueDef__gë_ba£_vÆue


	)

10167 
	#CORBA_ExtVÆueDef__£t_ba£_vÆue
 
CORBA_VÆueDef__£t_ba£_vÆue


	)

10168 
	#CORBA_ExtVÆueDef__gë_ab°ø˘_ba£_vÆues
 
CORBA_VÆueDef__gë_ab°ø˘_ba£_vÆues


	)

10169 
	#CORBA_ExtVÆueDef__£t_ab°ø˘_ba£_vÆues
 
CORBA_VÆueDef__£t_ab°ø˘_ba£_vÆues


	)

10170 
	#CORBA_ExtVÆueDef__gë_is_ab°ø˘
 
CORBA_VÆueDef__gë_is_ab°ø˘


	)

10171 
	#CORBA_ExtVÆueDef__£t_is_ab°ø˘
 
CORBA_VÆueDef__£t_is_ab°ø˘


	)

10172 
	#CORBA_ExtVÆueDef__gë_is_cu°om
 
CORBA_VÆueDef__gë_is_cu°om


	)

10173 
	#CORBA_ExtVÆueDef__£t_is_cu°om
 
CORBA_VÆueDef__£t_is_cu°om


	)

10174 
	#CORBA_ExtVÆueDef__gë_is_åunˇèbÀ
 
CORBA_VÆueDef__gë_is_åunˇèbÀ


	)

10175 
	#CORBA_ExtVÆueDef__£t_is_åunˇèbÀ
 
CORBA_VÆueDef__£t_is_åunˇèbÀ


	)

10176 
	#CORBA_ExtVÆueDef_is_a
 
CORBA_VÆueDef_is_a


	)

10177 
	#CORBA_ExtVÆueDef_des¸ibe_vÆue
 
CORBA_VÆueDef_des¸ibe_vÆue


	)

10178 
	#CORBA_ExtVÆueDef_¸óã_vÆue_membî
 
CORBA_VÆueDef_¸óã_vÆue_membî


	)

10179 
	#CORBA_ExtVÆueDef_¸óã_©åibuã
 
CORBA_VÆueDef_¸óã_©åibuã


	)

10180 
	#CORBA_ExtVÆueDef_¸óã_›î©i⁄
 
CORBA_VÆueDef_¸óã_›î©i⁄


	)

10181 
CORBA_ExtInôülizîSeq
* 
CORBA_ExtVÆueDef__gë_ext_öôülizîs
(
CORBA_ExtVÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10182 
CORBA_ExtVÆueDef__£t_ext_öôülizîs
(
CORBA_ExtVÆueDef
 
_obj
, c⁄° 
CORBA_ExtInôülizîSeq
* 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10183 
CORBA_ExtVÆueDef_ExtFuŒVÆueDes¸ùti⁄
* 
CORBA_ExtVÆueDef_des¸ibe_ext_vÆue
(
CORBA_ExtVÆueDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10184 
CORBA_ExtAâribuãDef
 
CORBA_ExtVÆueDef_¸óã_ext_©åibuã
(
CORBA_ExtVÆueDef
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_ch¨ * 
vîsi⁄
, c⁄° 
CORBA_IDLTy≥
 
ty≥
, c⁄° 
CORBA_AâribuãMode
 
mode
, c⁄° 
CORBA_Ex˚±i⁄DefSeq
* 
gë_ex˚±i⁄s
, c⁄° CORBA_Ex˚±i⁄DefSeq* 
£t_ex˚±i⁄s
, 
CORBA_Envú⁄mít
 *
ev
);

10185 
	#CORBA_VÆueBoxDef__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10186 
	#CORBA_VÆueBoxDef_de°roy
 
CORBA_IRObje˘_de°roy


	)

10187 
	#CORBA_VÆueBoxDef__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10188 
	#CORBA_VÆueBoxDef__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10189 
	#CORBA_VÆueBoxDef__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10190 
	#CORBA_VÆueBoxDef__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10191 
	#CORBA_VÆueBoxDef__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10192 
	#CORBA_VÆueBoxDef__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10193 
	#CORBA_VÆueBoxDef__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10194 
	#CORBA_VÆueBoxDef__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10195 
	#CORBA_VÆueBoxDef__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10196 
	#CORBA_VÆueBoxDef_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10197 
	#CORBA_VÆueBoxDef_move
 
CORBA_C⁄èöed_move


	)

10198 
	#CORBA_VÆueBoxDef__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10199 
CORBA_IDLTy≥
 
CORBA_VÆueBoxDef__gë_‹igöÆ_ty≥_def
(
CORBA_VÆueBoxDef
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10200 
CORBA_VÆueBoxDef__£t_‹igöÆ_ty≥_def
(
CORBA_VÆueBoxDef
 
_obj
, c⁄° 
CORBA_IDLTy≥
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10201 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10202 
	#CORBA_Ab°ø˘I¡îÁ˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

10203 
	#CORBA_Ab°ø˘I¡îÁ˚Def_lookup
 
CORBA_C⁄èöî_lookup


	)

10204 
	#CORBA_Ab°ø˘I¡îÁ˚Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10205 
	#CORBA_Ab°ø˘I¡îÁ˚Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10206 
	#CORBA_Ab°ø˘I¡îÁ˚Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10207 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10208 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10209 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10210 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10211 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10212 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10213 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10214 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10215 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10216 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10217 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10218 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10219 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10220 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10221 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10222 
	#CORBA_Ab°ø˘I¡îÁ˚Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10223 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10224 
	#CORBA_Ab°ø˘I¡îÁ˚Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10225 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10226 
	#CORBA_Ab°ø˘I¡îÁ˚Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10227 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10228 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10229 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10230 
	#CORBA_Ab°ø˘I¡îÁ˚Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10231 
	#CORBA_Ab°ø˘I¡îÁ˚Def_move
 
CORBA_C⁄èöed_move


	)

10232 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10233 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__gë_ba£_öãrÁ˚s


	)

10234 
	#CORBA_Ab°ø˘I¡îÁ˚Def__£t_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__£t_ba£_öãrÁ˚s


	)

10235 
	#CORBA_Ab°ø˘I¡îÁ˚Def__gë_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__gë_is_ab°ø˘


	)

10236 
	#CORBA_Ab°ø˘I¡îÁ˚Def__£t_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__£t_is_ab°ø˘


	)

10237 
	#CORBA_Ab°ø˘I¡îÁ˚Def_is_a
 
CORBA_I¡îÁ˚Def_is_a


	)

10238 
	#CORBA_Ab°ø˘I¡îÁ˚Def_des¸ibe_öãrÁ˚
 
CORBA_I¡îÁ˚Def_des¸ibe_öãrÁ˚


	)

10239 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_©åibuã
 
CORBA_I¡îÁ˚Def_¸óã_©åibuã


	)

10240 
	#CORBA_Ab°ø˘I¡îÁ˚Def_¸óã_›î©i⁄
 
CORBA_I¡îÁ˚Def_¸óã_›î©i⁄


	)

10241 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10242 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

10243 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_lookup
 
CORBA_C⁄èöî_lookup


	)

10244 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10245 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10246 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10247 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10248 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10249 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10250 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10251 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10252 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10253 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10254 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10255 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10256 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10257 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10258 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10259 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10260 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10261 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10262 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10263 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10264 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10265 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10266 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10267 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10268 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10269 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10270 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10271 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_move
 
CORBA_C⁄èöed_move


	)

10272 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10273 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__gë_ba£_öãrÁ˚s


	)

10274 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__£t_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__£t_ba£_öãrÁ˚s


	)

10275 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__gë_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__gë_is_ab°ø˘


	)

10276 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def__£t_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__£t_is_ab°ø˘


	)

10277 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_is_a
 
CORBA_I¡îÁ˚Def_is_a


	)

10278 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_des¸ibe_öãrÁ˚
 
CORBA_I¡îÁ˚Def_des¸ibe_öãrÁ˚


	)

10279 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_©åibuã
 
CORBA_I¡îÁ˚Def_¸óã_©åibuã


	)

10280 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_›î©i⁄
 
CORBA_I¡îÁ˚Def_¸óã_›î©i⁄


	)

10281 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_des¸ibe_ext_öãrÁ˚
 
CORBA_I¡îÁ˚AârExãnsi⁄_des¸ibe_ext_öãrÁ˚


	)

10282 
	#CORBA_ExtAb°ø˘I¡îÁ˚Def_¸óã_ext_©åibuã
 
CORBA_I¡îÁ˚AârExãnsi⁄_¸óã_ext_©åibuã


	)

10283 
	#CORBA_LoˇlI¡îÁ˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10284 
	#CORBA_LoˇlI¡îÁ˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

10285 
	#CORBA_LoˇlI¡îÁ˚Def_lookup
 
CORBA_C⁄èöî_lookup


	)

10286 
	#CORBA_LoˇlI¡îÁ˚Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10287 
	#CORBA_LoˇlI¡îÁ˚Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10288 
	#CORBA_LoˇlI¡îÁ˚Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10289 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10290 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10291 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10292 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10293 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10294 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10295 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10296 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10297 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10298 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10299 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10300 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10301 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10302 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10303 
	#CORBA_LoˇlI¡îÁ˚Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10304 
	#CORBA_LoˇlI¡îÁ˚Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10305 
	#CORBA_LoˇlI¡îÁ˚Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10306 
	#CORBA_LoˇlI¡îÁ˚Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10307 
	#CORBA_LoˇlI¡îÁ˚Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10308 
	#CORBA_LoˇlI¡îÁ˚Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10309 
	#CORBA_LoˇlI¡îÁ˚Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10310 
	#CORBA_LoˇlI¡îÁ˚Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10311 
	#CORBA_LoˇlI¡îÁ˚Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10312 
	#CORBA_LoˇlI¡îÁ˚Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10313 
	#CORBA_LoˇlI¡îÁ˚Def_move
 
CORBA_C⁄èöed_move


	)

10314 
	#CORBA_LoˇlI¡îÁ˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10315 
	#CORBA_LoˇlI¡îÁ˚Def__gë_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__gë_ba£_öãrÁ˚s


	)

10316 
	#CORBA_LoˇlI¡îÁ˚Def__£t_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__£t_ba£_öãrÁ˚s


	)

10317 
	#CORBA_LoˇlI¡îÁ˚Def__gë_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__gë_is_ab°ø˘


	)

10318 
	#CORBA_LoˇlI¡îÁ˚Def__£t_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__£t_is_ab°ø˘


	)

10319 
	#CORBA_LoˇlI¡îÁ˚Def_is_a
 
CORBA_I¡îÁ˚Def_is_a


	)

10320 
	#CORBA_LoˇlI¡îÁ˚Def_des¸ibe_öãrÁ˚
 
CORBA_I¡îÁ˚Def_des¸ibe_öãrÁ˚


	)

10321 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_©åibuã
 
CORBA_I¡îÁ˚Def_¸óã_©åibuã


	)

10322 
	#CORBA_LoˇlI¡îÁ˚Def_¸óã_›î©i⁄
 
CORBA_I¡îÁ˚Def_¸óã_›î©i⁄


	)

10323 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_def_köd
 
CORBA_IRObje˘__gë_def_köd


	)

10324 
	#CORBA_ExtLoˇlI¡îÁ˚Def_de°roy
 
CORBA_IRObje˘_de°roy


	)

10325 
	#CORBA_ExtLoˇlI¡îÁ˚Def_lookup
 
CORBA_C⁄èöî_lookup


	)

10326 
	#CORBA_ExtLoˇlI¡îÁ˚Def_c⁄ã¡s
 
CORBA_C⁄èöî_c⁄ã¡s


	)

10327 
	#CORBA_ExtLoˇlI¡îÁ˚Def_lookup_«me
 
CORBA_C⁄èöî_lookup_«me


	)

10328 
	#CORBA_ExtLoˇlI¡îÁ˚Def_des¸ibe_c⁄ã¡s
 
CORBA_C⁄èöî_des¸ibe_c⁄ã¡s


	)

10329 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_moduÀ
 
CORBA_C⁄èöî_¸óã_moduÀ


	)

10330 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_c⁄°™t
 
CORBA_C⁄èöî_¸óã_c⁄°™t


	)

10331 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_°ru˘
 
CORBA_C⁄èöî_¸óã_°ru˘


	)

10332 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_uni⁄
 
CORBA_C⁄èöî_¸óã_uni⁄


	)

10333 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_íum
 
CORBA_C⁄èöî_¸óã_íum


	)

10334 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_Æüs
 
CORBA_C⁄èöî_¸óã_Æüs


	)

10335 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_öãrÁ˚


	)

10336 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_vÆue
 
CORBA_C⁄èöî_¸óã_vÆue


	)

10337 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_vÆue_box
 
CORBA_C⁄èöî_¸óã_vÆue_box


	)

10338 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_ex˚±i⁄
 
CORBA_C⁄èöî_¸óã_ex˚±i⁄


	)

10339 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_«tive
 
CORBA_C⁄èöî_¸óã_«tive


	)

10340 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_ab°ø˘_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_ab°ø˘_öãrÁ˚


	)

10341 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_loˇl_öãrÁ˚
 
CORBA_C⁄èöî_¸óã_loˇl_öãrÁ˚


	)

10342 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_ext_vÆue
 
CORBA_C⁄èöî_¸óã_ext_vÆue


	)

10343 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_id
 
CORBA_C⁄èöed__gë_id


	)

10344 
	#CORBA_ExtLoˇlI¡îÁ˚Def__£t_id
 
CORBA_C⁄èöed__£t_id


	)

10345 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_«me
 
CORBA_C⁄èöed__gë_«me


	)

10346 
	#CORBA_ExtLoˇlI¡îÁ˚Def__£t_«me
 
CORBA_C⁄èöed__£t_«me


	)

10347 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_vîsi⁄
 
CORBA_C⁄èöed__gë_vîsi⁄


	)

10348 
	#CORBA_ExtLoˇlI¡îÁ˚Def__£t_vîsi⁄
 
CORBA_C⁄èöed__£t_vîsi⁄


	)

10349 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_deföed_ö
 
CORBA_C⁄èöed__gë_deföed_ö


	)

10350 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_absﬁuã_«me
 
CORBA_C⁄èöed__gë_absﬁuã_«me


	)

10351 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_c⁄èöög_ªposô‹y
 
CORBA_C⁄èöed__gë_c⁄èöög_ªposô‹y


	)

10352 
	#CORBA_ExtLoˇlI¡îÁ˚Def_des¸ibe
 
CORBA_C⁄èöed_des¸ibe


	)

10353 
	#CORBA_ExtLoˇlI¡îÁ˚Def_move
 
CORBA_C⁄èöed_move


	)

10354 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_ty≥
 
CORBA_IDLTy≥__gë_ty≥


	)

10355 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__gë_ba£_öãrÁ˚s


	)

10356 
	#CORBA_ExtLoˇlI¡îÁ˚Def__£t_ba£_öãrÁ˚s
 
CORBA_I¡îÁ˚Def__£t_ba£_öãrÁ˚s


	)

10357 
	#CORBA_ExtLoˇlI¡îÁ˚Def__gë_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__gë_is_ab°ø˘


	)

10358 
	#CORBA_ExtLoˇlI¡îÁ˚Def__£t_is_ab°ø˘
 
CORBA_I¡îÁ˚Def__£t_is_ab°ø˘


	)

10359 
	#CORBA_ExtLoˇlI¡îÁ˚Def_is_a
 
CORBA_I¡îÁ˚Def_is_a


	)

10360 
	#CORBA_ExtLoˇlI¡îÁ˚Def_des¸ibe_öãrÁ˚
 
CORBA_I¡îÁ˚Def_des¸ibe_öãrÁ˚


	)

10361 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_©åibuã
 
CORBA_I¡îÁ˚Def_¸óã_©åibuã


	)

10362 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_›î©i⁄
 
CORBA_I¡îÁ˚Def_¸óã_›î©i⁄


	)

10363 
	#CORBA_ExtLoˇlI¡îÁ˚Def_des¸ibe_ext_öãrÁ˚
 
CORBA_I¡îÁ˚AârExãnsi⁄_des¸ibe_ext_öãrÁ˚


	)

10364 
	#CORBA_ExtLoˇlI¡îÁ˚Def_¸óã_ext_©åibuã
 
CORBA_I¡îÁ˚AârExãnsi⁄_¸óã_ext_©åibuã


	)

10365 
CORBA_boﬁón
 
CORBA_Ty≥Code_equÆ
(
CORBA_Ty≥Code
 
_obj
, c⁄° CORBA_Ty≥Codê
tc
, 
CORBA_Envú⁄mít
 *
ev
);

10366 
CORBA_boﬁón
 
CORBA_Ty≥Code_equivÆít
(
CORBA_Ty≥Code
 
_obj
, c⁄° CORBA_Ty≥Codê
tc
, 
CORBA_Envú⁄mít
 *
ev
);

10367 
CORBA_Ty≥Code
 
CORBA_Ty≥Code_gë_com∑˘_ty≥code
(CORBA_Ty≥Codê
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10368 
CORBA_TCKöd
 
CORBA_Ty≥Code_köd
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10369 
CORBA_Rïosô‹yId
 
CORBA_Ty≥Code_id
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10370 
CORBA_Idítifõr
 
CORBA_Ty≥Code_«me
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10371 
CORBA_unsig√d_l⁄g
 
CORBA_Ty≥Code_membî_cou¡
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10372 
CORBA_Idítifõr
 
CORBA_Ty≥Code_membî_«me
(
CORBA_Ty≥Code
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
ödex
, 
CORBA_Envú⁄mít
 *
ev
);

10373 
CORBA_Ty≥Code
 
CORBA_Ty≥Code_membî_ty≥
(CORBA_Ty≥Codê
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
ödex
, 
CORBA_Envú⁄mít
 *
ev
);

10374 
CORBA_™y
* 
CORBA_Ty≥Code_membî_œbñ
(
CORBA_Ty≥Code
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
ödex
, 
CORBA_Envú⁄mít
 *
ev
);

10375 
CORBA_Ty≥Code
 
CORBA_Ty≥Code_dis¸imö©‹_ty≥
(CORBA_Ty≥Codê
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10376 
CORBA_l⁄g
 
CORBA_Ty≥Code_deÁu…_ödex
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10377 
CORBA_unsig√d_l⁄g
 
CORBA_Ty≥Code_Àngth
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10378 
CORBA_Ty≥Code
 
CORBA_Ty≥Code_c⁄ã¡_ty≥
(CORBA_Ty≥Codê
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10379 
CORBA_unsig√d_sh‹t
 
CORBA_Ty≥Code_fixed_digôs
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10380 
CORBA_sh‹t
 
CORBA_Ty≥Code_fixed_sˇÀ
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10381 
CORBA_Visibûôy
 
CORBA_Ty≥Code_membî_visibûôy
(
CORBA_Ty≥Code
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
ödex
, 
CORBA_Envú⁄mít
 *
ev
);

10382 
CORBA_VÆueModifõr
 
CORBA_Ty≥Code_ty≥_modifõr
(
CORBA_Ty≥Code
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10383 
CORBA_Ty≥Code
 
CORBA_Ty≥Code_c⁄¸ëe_ba£_ty≥
(CORBA_Ty≥Codê
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10384 
CORBA_I¡îÁ˚Def
 
CORBA_Obje˘_gë_öãrÁ˚
(
CORBA_Obje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10385 
CORBA_boﬁón
 
CORBA_Obje˘_is_nû
(
CORBA_Obje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10386 
CORBA_Obje˘
 
CORBA_Obje˘_du∂iˇã
(CORBA_Obje˘ 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10387 
CORBA_Obje˘_ªÀa£
(
CORBA_Obje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10388 
CORBA_boﬁón
 
CORBA_Obje˘_is_a
(
CORBA_Obje˘
 
_obj
, c⁄° 
CORBA_ch¨
 * 
logiˇl_ty≥_id
, 
CORBA_Envú⁄mít
 *
ev
);

10389 
CORBA_boﬁón
 
CORBA_Obje˘_n⁄_exi°ít
(
CORBA_Obje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10390 
CORBA_boﬁón
 
CORBA_Obje˘_is_equivÆít
(
CORBA_Obje˘
 
_obj
, c⁄° CORBA_Obje˘ 
Ÿhî_obje˘
, 
CORBA_Envú⁄mít
 *
ev
);

10391 
CORBA_unsig√d_l⁄g
 
CORBA_Obje˘_hash
(
CORBA_Obje˘
 
_obj
, c⁄° CORBA_unsig√d_l⁄g 
maximum
, 
CORBA_Envú⁄mít
 *
ev
);

10392 
CORBA_Obje˘_¸óã_ªque°
(
CORBA_Obje˘
 
_obj
, c⁄° 
CORBA_C⁄ãxt
 
˘x
, c⁄° 
CORBA_ch¨
 * 
›î©i⁄
, c⁄° 
CORBA_NVLi°
 
¨g_li°
, 
CORBA_NamedVÆue
* 
ªsu…
, 
CORBA_Reque°
* 
ªque°
, c⁄° 
CORBA_Fœgs
 
ªq_Êag
, 
CORBA_Envú⁄mít
 *
ev
);

10393 
CORBA_Pﬁicy
 
CORBA_Obje˘_gë_pﬁicy
(
CORBA_Obje˘
 
_obj
, c⁄° 
CORBA_PﬁicyTy≥
 
pﬁicy_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

10394 
CORBA_DomaöM™agîsLi°
* 
CORBA_Obje˘_gë_domaö_m™agîs
(
CORBA_Obje˘
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10395 
CORBA_Obje˘
 
CORBA_Obje˘_£t_pﬁicy_ovîrides
(CORBA_Obje˘ 
_obj
, c⁄° 
CORBA_PﬁicyLi°
* 
pﬁicõs
, c⁄° 
CORBA_SëOvîrideTy≥
 
£t_add
, 
CORBA_Envú⁄mít
 *
ev
);

10396 
CORBA_Pﬁicy
 
CORBA_Obje˘_gë_˛õ¡_pﬁicy
(
CORBA_Obje˘
 
_obj
, c⁄° 
CORBA_PﬁicyTy≥
 
ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

10397 
CORBA_PﬁicyLi°
* 
CORBA_Obje˘_gë_pﬁicy_ovîrides
(
CORBA_Obje˘
 
_obj
, c⁄° 
CORBA_PﬁicyTy≥Seq
* 
ty≥s
, 
CORBA_Envú⁄mít
 *
ev
);

10398 
CORBA_boﬁón
 
CORBA_Obje˘_vÆid©e_c⁄√˘i⁄
(
CORBA_Obje˘
 
_obj
, 
CORBA_PﬁicyLi°
** 
öc⁄si°ít_pﬁicõs
, 
CORBA_Envú⁄mít
 *
ev
);

10399 
CORBA_Obje˘
 
CORBA_Obje˘_gë_comp⁄ít
(CORBA_Obje˘ 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10400 
CORBA_ORBid
 
CORBA_ORB_id
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10401 
CORBA_°rög
 
CORBA_ORB_obje˘_to_°rög
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_Obje˘
 
obj
, 
CORBA_Envú⁄mít
 *
ev
);

10402 
CORBA_Obje˘
 
CORBA_ORB_°rög_to_obje˘
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
°r
, 
CORBA_Envú⁄mít
 *
ev
);

10403 
CORBA_ORB_¸óã_li°
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_l⁄g
 
cou¡
, 
CORBA_NVLi°
* 
√w_li°
, 
CORBA_Envú⁄mít
 *
ev
);

10404 
CORBA_ORB_¸óã_›î©i⁄_li°
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_O≥øti⁄Def
 
›î
, 
CORBA_NVLi°
* 
√w_li°
, 
CORBA_Envú⁄mít
 *
ev
);

10405 
CORBA_ORB_gë_deÁu…_c⁄ãxt
(
CORBA_ORB
 
_obj
, 
CORBA_C⁄ãxt
* 
˘x
, 
CORBA_Envú⁄mít
 *
ev
);

10406 
CORBA_ORB_£nd_mu…ùÀ_ªque°s_⁄eway
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_Reque°Seq
* 
ªq
, 
CORBA_Envú⁄mít
 *
ev
);

10407 
CORBA_ORB_£nd_mu…ùÀ_ªque°s_de„ºed
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_Reque°Seq
* 
ªq
, 
CORBA_Envú⁄mít
 *
ev
);

10408 
CORBA_boﬁón
 
CORBA_ORB_pﬁl_√xt_ª•⁄£
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10409 
CORBA_ORB_gë_√xt_ª•⁄£
(
CORBA_ORB
 
_obj
, 
CORBA_Reque°
* 
ªq
, 
CORBA_Envú⁄mít
 *
ev
);

10410 
CORBA_boﬁón
 
CORBA_ORB_gë_£rvi˚_öf‹m©i⁄
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_Sîvi˚Ty≥
 
£rvi˚_ty≥
, 
CORBA_Sîvi˚Inf‹m©i⁄
** 
£rvi˚_öf‹m©i⁄
, 
CORBA_Envú⁄mít
 *
ev
);

10411 
CORBA_ORB_Obje˘IdLi°
* 
CORBA_ORB_li°_öôül_£rvi˚s
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10412 
CORBA_Obje˘
 
CORBA_ORB_ªsﬁve_öôül_ª„ªn˚s
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
idítifõr
, 
CORBA_Envú⁄mít
 *
ev
);

10413 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_°ru˘_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° 
CORBA_Såu˘MembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

10414 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_uni⁄_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_Ty≥Codê
dis¸imö©‹_ty≥
, c⁄° 
CORBA_Uni⁄MembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

10415 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_íum_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° 
CORBA_EnumMembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

10416 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_Æüs_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_Ty≥Codê
‹igöÆ_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

10417 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_ex˚±i⁄_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° 
CORBA_Såu˘MembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

10418 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_öãrÁ˚_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

10419 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_°rög_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, 
CORBA_Envú⁄mít
 *
ev
);

10420 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_w°rög_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, 
CORBA_Envú⁄mít
 *
ev
);

10421 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_fixed_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_unsig√d_sh‹t
 
digôs
, c⁄° 
CORBA_sh‹t
 
sˇÀ
, 
CORBA_Envú⁄mít
 *
ev
);

10422 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_£quí˚_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, c⁄° CORBA_Ty≥Codê
ñemít_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

10423 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_ªcursive_£quí˚_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
bound
, c⁄° CORBA_unsig√d_l⁄g 
off£t
, 
CORBA_Envú⁄mít
 *
ev
);

10424 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_¨øy_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_unsig√d_l⁄g
 
Àngth
, c⁄° CORBA_Ty≥Codê
ñemít_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

10425 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_vÆue_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° 
CORBA_VÆueModifõr
 
ty≥_modifõr
, c⁄° CORBA_Ty≥Codê
c⁄¸ëe_ba£
, c⁄° 
CORBA_VÆueMembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

10426 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_vÆue_box_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° CORBA_Ty≥Codê
boxed_ty≥
, 
CORBA_Envú⁄mít
 *
ev
);

10427 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_«tive_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

10428 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_ªcursive_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, 
CORBA_Envú⁄mít
 *
ev
);

10429 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_ab°ø˘_öãrÁ˚_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

10430 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_loˇl_öãrÁ˚_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

10431 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_comp⁄ít_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

10432 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_home_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

10433 
CORBA_Ty≥Code
 
CORBA_ORB_¸óã_evít_tc
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_ch¨ * 
«me
, c⁄° 
CORBA_VÆueModifõr
 
ty≥_modifõr
, c⁄° CORBA_Ty≥Codê
c⁄¸ëe_ba£
, c⁄° 
CORBA_VÆueMembîSeq
* 
membîs
, 
CORBA_Envú⁄mít
 *
ev
);

10434 
CORBA_boﬁón
 
CORBA_ORB_w‹k_≥ndög
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10435 
CORBA_ORB_≥rf‹m_w‹k
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10436 
CORBA_ORB_run
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10437 
CORBA_ORB_shutdown
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_boﬁón
 
waô_f‹_com∂ëi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

10438 
CORBA_ORB_de°roy
(
CORBA_ORB
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10439 
CORBA_Pﬁicy
 
CORBA_ORB_¸óã_pﬁicy
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_PﬁicyTy≥
 
ty≥
, c⁄° 
CORBA_™y
* 
vÆ
, 
CORBA_Envú⁄mít
 *
ev
);

10440 
CORBA_VÆueFa˘‹y
 
CORBA_ORB_ªgi°î_vÆue_Á˘‹y
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° CORBA_VÆueFa˘‹y 
Á˘‹y
, 
CORBA_Envú⁄mít
 *
ev
);

10441 
CORBA_ORB_uƒegi°î_vÆue_Á˘‹y
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, 
CORBA_Envú⁄mít
 *
ev
);

10442 
CORBA_VÆueFa˘‹y
 
CORBA_ORB_lookup_vÆue_Á˘‹y
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, 
CORBA_Envú⁄mít
 *
ev
);

10443 
CORBA_ORB_ªgi°î_öôül_ª„ªn˚
(
CORBA_ORB
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° 
CORBA_Obje˘
 
obj
, 
CORBA_Envú⁄mít
 *
ev
);

10444 
CORBA_Reque°_add_¨g
(
CORBA_Reque°
 
_obj
, c⁄° 
CORBA_ch¨
 * 
«me
, c⁄° 
CORBA_Ty≥Code
 
¨g_ty≥
, c⁄° 
CORBA_O∑queVÆue
 
vÆue
, c⁄° 
CORBA_l⁄g
 
Àn
, c⁄° 
CORBA_Fœgs
 
¨g_Êags
, 
CORBA_Envú⁄mít
 *
ev
);

10445 
CORBA_Reque°_övoke
(
CORBA_Reque°
 
_obj
, c⁄° 
CORBA_Fœgs
 
övoke_Êags
, 
CORBA_Envú⁄mít
 *
ev
);

10446 
CORBA_Reque°_dñëe
(
CORBA_Reque°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10447 
CORBA_Reque°_£nd
(
CORBA_Reque°
 
_obj
, c⁄° 
CORBA_Fœgs
 
övoke_Êags
, 
CORBA_Envú⁄mít
 *
ev
);

10448 
CORBA_Reque°_gë_ª•⁄£
(
CORBA_Reque°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10449 
CORBA_boﬁón
 
CORBA_Reque°_pﬁl_ª•⁄£
(
CORBA_Reque°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10450 
CORBA_Obje˘
 
CORBA_Reque°_£ndp
(
CORBA_Reque°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10451 
CORBA_Reque°_¥ï¨e
(
CORBA_Reque°
 
_obj
, c⁄° 
CORBA_Obje˘
 
p
, 
CORBA_Envú⁄mít
 *
ev
);

10452 
CORBA_Reque°_£ndc
(
CORBA_Reque°
 
_obj
, c⁄° 
CORBA_Obje˘
 
h™dÀr
, 
CORBA_Envú⁄mít
 *
ev
);

10453 
CORBA_C⁄ãxt_£t_⁄e_vÆue
(
CORBA_C⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
¥›_«me
, c⁄° CORBA_ch¨ * 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

10454 
CORBA_C⁄ãxt_£t_vÆues
(
CORBA_C⁄ãxt
 
_obj
, c⁄° 
CORBA_NVLi°
 
vÆues
, 
CORBA_Envú⁄mít
 *
ev
);

10455 
CORBA_C⁄ãxt_gë_vÆues
(
CORBA_C⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
°¨t_sc›e
, c⁄° 
CORBA_Fœgs
 
›_Êags
, c⁄° CORBA_ch¨ * 
¥›_«me
, 
CORBA_NVLi°
* 
vÆues
, 
CORBA_Envú⁄mít
 *
ev
);

10456 
CORBA_C⁄ãxt_dñëe_vÆues
(
CORBA_C⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
¥›_«me
, 
CORBA_Envú⁄mít
 *
ev
);

10457 
CORBA_C⁄ãxt_¸óã_chûd
(
CORBA_C⁄ãxt
 
_obj
, c⁄° 
CORBA_ch¨
 * 
˘x_«me
, CORBA_C⁄ãxt* 
chûd_˘x
, 
CORBA_Envú⁄mít
 *
ev
);

10458 
CORBA_C⁄ãxt_dñëe
(
CORBA_C⁄ãxt
 
_obj
, c⁄° 
CORBA_Fœgs
 
dñ_Êags
, 
CORBA_Envú⁄mít
 *
ev
);

10459 
CORBA_NVLi°_add_ôem
(
CORBA_NVLi°
 
_obj
, c⁄° 
CORBA_ch¨
 * 
ôem_«me
, c⁄° 
CORBA_Ty≥Code
 
ôem_ty≥
, c⁄° 
CORBA_O∑queVÆue
 
vÆue
, c⁄° 
CORBA_l⁄g
 
vÆue_Àn
, c⁄° 
CORBA_Fœgs
 
ôem_Êags
, 
CORBA_Envú⁄mít
 *
ev
);

10460 
CORBA_NVLi°_‰ì
(
CORBA_NVLi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10461 
CORBA_NVLi°_‰ì_mem‹y
(
CORBA_NVLi°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10462 
CORBA_NVLi°_gë_cou¡
(
CORBA_NVLi°
 
_obj
, 
CORBA_l⁄g
* 
cou¡
, 
CORBA_Envú⁄mít
 *
ev
);

10463 
CORBA_Idítifõr
 
CORBA_SîvîReque°__gë_›î©i⁄
(
CORBA_SîvîReque°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10464 
CORBA_SîvîReque°_¨gumíts
(
CORBA_SîvîReque°
 
_obj
, 
CORBA_NVLi°
* 
nv
, 
CORBA_Envú⁄mít
 *
ev
);

10465 
CORBA_C⁄ãxt
 
CORBA_SîvîReque°_˘x
(
CORBA_SîvîReque°
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

10466 
CORBA_SîvîReque°_£t_ªsu…
(
CORBA_SîvîReque°
 
_obj
, c⁄° 
CORBA_™y
* 
vÆ
, 
CORBA_Envú⁄mít
 *
ev
);

10467 
CORBA_SîvîReque°_£t_ex˚±i⁄
(
CORBA_SîvîReque°
 
_obj
, c⁄° 
CORBA_™y
* 
vÆ
, 
CORBA_Envú⁄mít
 *
ev
);

10468 #i‚de‡
__ORBIT_IMETHODS_INDEX


10469 
	#__ORBIT_IMETHODS_INDEX


	)

10470 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

10473 #ifde‡
__˝lu•lus


10477 #i‚de‡
EXCLUDE_ORBIT_H


10478 
	~<‹bô/‹bô.h
>

10482 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/orbit-2.0/orbit/orb-core/corba-environment-type.h

1 #i‚de‡
CORBA_ENVIRONMENT_TYPE_H


2 
	#CORBA_ENVIRONMENT_TYPE_H
 1

	)

4 
	~<‹bô/‹b-c‹e/‹b-ty≥s.h
>

5 
	~<‹bô/‹b-c‹e/c‹ba-™y-ty≥.h
>

7 
	gG_BEGIN_DECLS


9 #i‡!
deföed
(
_CORBA_Envú⁄mít_deföed
)

10 
	#_CORBA_Envú⁄mít_deföed
 1

	)

11 
CORBA_Envú⁄mít_ty≥
 
	tCORBA_Envú⁄mít
;

14 
	sCORBA_Envú⁄mít_ty≥
 {

15 
CORBA_ch¨
 *
	m_id
;

16 
CORBA_unsig√d_l⁄g
 
	m_maj‹
;

17 
CORBA_™y
 
	m_™y
;

20 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-environment.h

1 #i‚de‡
CORBA_ENVIRONMENT_H


2 
	#CORBA_ENVIRONMENT_H
 1

	)

4 
	~<glib.h
>

6 
G_BEGIN_DECLS


8 
CORBA_Envú⁄mít
 *
CORBA_ex˚±i⁄__Æloc
 ();

9 
CORBA_Envú⁄mít
 *
CORBA_ex˚±i⁄__c›y
 (c⁄° CORBA_Envú⁄míà*
ev
);

11 
CORBA_ex˚±i⁄_£t
 (
CORBA_Envú⁄mít
 *
ev
,

12 
CORBA_ex˚±i⁄_ty≥
 
maj‹
,

13 c⁄° 
CORBA_ch¨
 *
ex˚±_ªpos_id
,

14 *
∑øm
);

16 
CORBA_ch¨
 *
CORBA_ex˚±i⁄_id
 (
CORBA_Envú⁄mít
 *
ev
);

17 *
CORBA_ex˚±i⁄_vÆue
 (
CORBA_Envú⁄mít
 *
ev
);

18 
CORBA_ex˚±i⁄_öô
 (
CORBA_Envú⁄mít
 *
ev
);

19 
CORBA_ex˚±i⁄_‰ì
 (
CORBA_Envú⁄mít
 *
ev
);

20 
CORBA_™y
 *
CORBA_ex˚±i⁄_as_™y
 (
CORBA_Envú⁄mít
 *
ev
);

22 
CORBA_ex˚±i⁄_£t_sy°em
 (
CORBA_Envú⁄mít
 *
ev
,

23 c⁄° 
CORBA_ch¨
 *
ex˚±_ªpos_id
,

24 
CORBA_com∂ëi⁄_°©us
 
com∂ëed
);

26 #ifde‡
ORBIT2_INTERNAL_API


29 c⁄° 
CORBA_Ty≥Code
 
	mtc
;

31 (*
	mm¨shÆ
Ë(
	mGIOPSídBuf„r
 *, 
	mCORBA_Envú⁄mít
 *);

32 } 
	tORBô_ex˚±i⁄_m¨shÆ_öfo
;

35 c⁄° 
CORBA_Ty≥Code
 
	mtc
;

37 (*
	mdem¨shÆ
Ë(
	mGIOPRecvBuf„r
 *, 
	mCORBA_Envú⁄mít
 *);

38 } 
	tORBô_ex˚±i⁄_dem¨shÆ_öfo
;

40 
ORBô_h™dÀ_sy°em_ex˚±i⁄
 (
CORBA_Envú⁄mít
 *
ev
,

41 c⁄° 
CORBA_ch¨
 *
nom
,

42 
CORBA_com∂ëi⁄_°©us
 
°©us
,

43 
GIOPRecvBuf„r
 *
buf
,

44 
GIOPSídBuf„r
 *
£ndbuf
);

46 
ORBô_h™dÀ_ex˚±i⁄
 (
GIOPRecvBuf„r
 *
buf
,

47 
CORBA_Envú⁄mít
 *
ev
,

48 c⁄° 
ORBô_ex˚±i⁄_dem¨shÆ_öfo
 *
ex_öfo
,

49 
CORBA_ORB
 
‹b
);

50 
GIOPC⁄√˘i⁄
 *

51 
ORBô_h™dÀ_loˇti⁄_f‹w¨d
 (
GIOPRecvBuf„r
 *
buf
,

52 
CORBA_Obje˘
 
obj
);

54 
ORBô_£nd_sy°em_ex˚±i⁄
 (
GIOPSídBuf„r
 *
buf
,

55 
CORBA_Envú⁄mít
 *
ev
);

57 
ORBô_£nd_u£r_ex˚±i⁄
 (
GIOPSídBuf„r
 *
£nd_buf„r
,

58 
CORBA_Envú⁄mít
 *
ev
,

59 c⁄° 
ORBô_ex˚±i⁄_m¨shÆ_öfo
 *
u£r_ex˚±i⁄s
);

63 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-object-type.h

1 #i‚de‡
CORBA_OBJECT_TYPE_H


2 
	#CORBA_OBJECT_TYPE_H
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #i‡
deföed
(
ORBIT2_INTERNAL_API
)

12 
CORBA_£quí˚_CORBA_o˘ë
 
	tORBô_Obje˘Key
;

14 
	sCORBA_Obje˘_ty≥
 {

15 
ORBô_RoŸObje˘_°ru˘
 
	m∑ª¡
;

17 
GIOPC⁄√˘i⁄
 *
	mc⁄√˘i⁄
;

18 
GQu¨k
 
	mty≥_qid
;

19 
GSLi°
 *
	m¥ofûe_li°
;

20 
GSLi°
 *
	mf‹w¨d_loˇti⁄s
;

21 
ORBô_Obje˘Key
 *
	mobje˘_key
;

22 
_ORBôPﬁicy
 *
	mövoke_pﬁicy
;

24 
CORBA_ORB
 
	m‹b
;

25 
ORBô_OAObje˘
 
	mad≠t‹_obj
;

30 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-object.h

1 #i‚de‡
CORBA_OBJECT_H


2 
	#CORBA_OBJECT_H
 1

	)

4 
	~<glib-obje˘.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


10 
GIOPC⁄√˘i⁄
 *
ORBô_obje˘_gë_c⁄√˘i⁄
 (
CORBA_Obje˘
 
obj
);

11 
GIOPC⁄√˘i⁄
 *
ORBô_obje˘_≥ek_c⁄√˘i⁄
 (
CORBA_Obje˘
 
obj
);

14 
ORBô_m¨shÆ_obje˘
 (
GIOPSídBuf„r
 *
buf
,

15 
CORBA_Obje˘
 
obj
);

16 
gboﬁón
 
ORBô_dem¨shÆ_obje˘
 (
CORBA_Obje˘
 *
obj
,

17 
GIOPRecvBuf„r
 *
buf
,

18 
CORBA_ORB
 
‹b
);

20 
CORBA_Obje˘
 
ORBô_objªf_√w
 (
CORBA_ORB
 
‹b
,

21 
ORBô_OAObje˘
 
ad≠t‹_obj
,

22 
GQu¨k
 
ty≥_id
);

29 
_ORBôPﬁicy
 
	tORBôPﬁicy
;

32 
	#ORBIT_TYPE_POLICY_EX
 (
	`ORBô_pﬁicy_ex_gë_ty≥
 ())

	)

34 
GTy≥
 
	$ORBô_pﬁicy_ex_gë_ty≥
 (Ë
G_GNUC_CONST
;

35 
ORBôPﬁicy
 *
	`ORBô_pﬁicy_√w
 (
GTy≥
 
ty≥
,

36 c⁄° *
fú°_¥›
,

38 
ORBôPﬁicy
 *
	`ORBô_pﬁicy_ªf
 (ORBôPﬁicy *
p
);

39 
	`ORBô_pﬁicy_uƒef
 (
ORBôPﬁicy
 *
p
);

40 
	`ORBô_obje˘_£t_pﬁicy
 (
CORBA_Obje˘
 
obj
,

41 
ORBôPﬁicy
 *
p
);

42 
ORBôPﬁicy
 *
	`ORBô_obje˘_gë_pﬁicy
 (
CORBA_Obje˘
 
obj
);

43 
	`ORBô_pﬁicy_push
 (
ORBôPﬁicy
 *
p
);

44 
	`ORBô_pﬁicy_p›
 ();

49 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

51 
	#CORBA_OBJECT_SMALL_GET_TYPE_ID
 12

	)

52 
	#CORBA_OBJECT_SMALL_GET_IINTERFACE
 13

	)

54 
ORBô_II¡îÁ˚
 
CORBA_Obje˘__iöãrÁ˚
;

55 
ORBô_IMëhod
 
CORBA_Obje˘__imëhods
[];

57 
	#CORBA_Obje˘_IMETHODS_LEN
 12

	)

59 
G_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-orb-type.h

1 #i‚de‡
CORBA_ORB_TYPE


2 
	#CORBA_ORB_TYPE
 1

	)

4 
	~<‹bô/‹b-c‹e/‹b-ty≥s.h
>

5 
	~<‹bô/‹b-c‹e/‹bô-obje˘.h
>

7 
	gG_BEGIN_DECLS


9 #i‡!
deföed
(
ORBIT_DECL_CORBA_ORB
Ë&& !deföed(
_CORBA_ORB_deföed
)

10 
	#ORBIT_DECL_CORBA_ORB
 1

	)

11 
	#_CORBA_ORB_deföed
 1

	)

12 
CORBA_ORB_ty≥
 *
	tCORBA_ORB
;

15 #i‡!
deföed
(
_CORBA_ORB_Obje˘Id_deföed
)

16 
	#_CORBA_ORB_Obje˘Id_deföed
 1

	)

17 
CORBA_°rög
 
	tCORBA_ORB_Obje˘Id
;

18 
	#CORBA_ORB_Obje˘Id_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

19 
	#CORBA_ORB_Obje˘Id_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

20 #i‡!
deföed
(
TC_IMPL_TC_CORBA_ORB_Obje˘Id_0
)

21 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_0
 'c'

	)

22 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_1
 'o'

	)

23 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_2
 'r'

	)

24 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_3
 'b'

	)

25 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_4
 'a'

	)

26 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_5
 '_'

	)

27 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_6
 'd'

	)

28 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_7
 'e'

	)

29 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_8
 'f'

	)

30 
	#TC_IMPL_TC_CORBA_ORB_Obje˘Id_9
 's'

	)

31 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ORB_Obje˘Id_°ru˘
;

32 
	#TC_CORBA_ORB_Obje˘Id
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ORB_Obje˘Id_°ru˘
)

	)

34 
	#CORBA_ORB_Obje˘Id__‰ìkids
 
CORBA_°rög__‰ìkids


	)

37 #i‡!
deföed
(
_CORBA_I¡îÁ˚Def_deföed
)

38 
	#_CORBA_I¡îÁ˚Def_deföed
 1

	)

39 
	#CORBA_I¡îÁ˚Def__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

40 
CORBA_Obje˘
 
	tCORBA_I¡îÁ˚Def
;

41 
CORBA_unsig√d_l⁄g
 
CORBA_I¡îÁ˚Def__˛assid
;

42 #i‡!
deföed
(
TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
)

43 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_0
 'c'

	)

44 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_1
 'o'

	)

45 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_2
 'r'

	)

46 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_3
 'b'

	)

47 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_4
 'a'

	)

48 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_5
 '_'

	)

49 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_6
 'd'

	)

50 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_7
 'e'

	)

51 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_8
 'f'

	)

52 
	#TC_IMPL_TC_CORBA_I¡îÁ˚Def_9
 's'

	)

53 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_I¡îÁ˚Def_°ru˘
;

54 
	#TC_CORBA_I¡îÁ˚Def
 ((
CORBA_Ty≥Code
)&
TC_CORBA_I¡îÁ˚Def_°ru˘
)

	)

58 #ifde‡
ORBIT2_INTERNAL_API


60 
	sCORBA_ORB_ty≥
 {

61 
ORBô_RoŸObje˘_°ru˘
 
	mroŸ_obje˘
;

63 
GMuãx
 *
	mlock
;

65 
GIOPVîsi⁄
 
	mdeÁu…_gi›_vîsi⁄
;

67 
GSLi°
 *
	m£rvîs
;

68 
GSLi°
 *
	m¥ofûes
;

69 
GPåAºay
 *
	mad≠t‹s
;

70 
GHashTabÀ
 *
	mf‹w_böds
;

71 
GSLi°
 *
	mcuºít_övoˇti⁄s
;

72 
gpoöãr
 
	mdeÁu…_˘x
;

73 
GHashTabÀ
 *
	möôül_ªfs
;

74 
guöt
 
	mli„_Êags
;

80 
GHashTabÀ
 *
	mobjªfs
;

85 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-orb.h

1 #i‚de‡
CORBA_ORB_H


2 
	#CORBA_ORB_H
 1

	)

4 
	~<‹bô/‹b-c‹e/‹b-ty≥s.h
>

5 
	~<‹bô/‹b-c‹e/c‹ba-‹b-ty≥.h
>

6 
	~<‹bô/‹b-c‹e/c‹ba-ty≥code-ty≥.h
>

8 
G_BEGIN_DECLS


10 
CORBA_ORB
 
CORBA_ORB_öô
 (*
¨gc
,

11 **
¨gv
,

12 
CORBA_ORBid
 
‹b_idítifõr
,

13 
CORBA_Envú⁄mít
 *
ev
);

26 
gboﬁón
 
ORBô_¥Ÿo_u£
 (c⁄° *
«me
);

33 
gl⁄g
 
ORBô_gë_gi›_ªcv_limô
 ();

35 #ifde‡
ORBIT2_INTERNAL_API


37 
ORBô_ORB_f‹w_böd
 (
CORBA_ORB
 
‹b
,

38 
CORBA_£quí˚_CORBA_o˘ë
 *
okey
,

39 
CORBA_Obje˘
 
‹ef
,

40 
CORBA_Envú⁄mít
 *
ev
);

42 
guöt
 
ORBô_ORB_idÀ_öô
 (
CORBA_ORB
 
‹b
);

44 
ORBô_ORB_°¨t_£rvîs
 (
CORBA_ORB
 
‹b
);

48 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-policy-type.h

1 #i‚de‡
CORBA_POLICY_TYPE_H


2 
	#CORBA_POLICY_TYPE_H
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


10 
	sCORBA_Pﬁicy_ty≥
 {

11 
ORBô_RoŸObje˘_°ru˘
 
	m∑ª¡
;

13 
CORBA_unsig√d_l⁄g
 
	mty≥
;

14 
CORBA_unsig√d_l⁄g
 
	mvÆue
;

17 
CORBA_Pﬁicy
 
ORBô_Pﬁicy_√w
 (
CORBA_unsig√d_l⁄g
 
ty≥
,

18 
CORBA_unsig√d_l⁄g
 
vÆue
);

22 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-string.h

1 #i‚de‡
CORBA_STRING_H


2 
	#CORBA_STRING_H
 1

	)

4 
	~<glib.h
>

6 
G_BEGIN_DECLS


8 
CORBA_ch¨
 *
CORBA_°rög_Æloc
 (
CORBA_unsig√d_l⁄g
 
Àn
);

9 
CORBA_wch¨
 *
CORBA_w°rög_Æloc
 (
CORBA_unsig√d_l⁄g
 
Àn
);

14 
CORBA_ch¨
 *
CORBA_°rög_dup
 (c⁄° CORBA_ch¨ *
°r
);

16 
CORBA_unsig√d_l⁄g
 
CORBA_w°rög_Àn
 (
CORBA_wch¨
 *
ws
);

18 #ifde‡
ORBIT2_INTERNAL_API


20 
gpoöãr
 
CORBA_°rög__‰ìkids
 (gpoöã∏
mem
,

21 
gpoöãr
 
d©a
);

23 
CORBA_£quí˚_CORBA_o˘ë
 *

24 
ORBô_£quí˚_CORBA_o˘ë_dup
 (c⁄° 
CORBA_£quí˚_CORBA_o˘ë
 *
£q
);

28 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-typecode-type.h

1 #i‚de‡
CORBA_TYPECODE_TYPE_H


2 
	#CORBA_TYPECODE_TYPE_H
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #i‡!
deföed
(
ORBIT_DECL_CORBA_Ty≥Code
Ë&& !deföed(
_CORBA_Ty≥Code_deföed
)

9 
	#ORBIT_DECL_CORBA_Ty≥Code
 1

	)

10 
	#_CORBA_Ty≥Code_deföed
 1

	)

11 
CORBA_Ty≥Code_°ru˘
 *
	tCORBA_Ty≥Code
;

14 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-typecode.h

1 #i‚de‡
CORBA_TYPECODE_H


2 
	#CORBA_TYPECODE_H
 1

	)

4 
	~<‹bô/‹b-c‹e/c‹ba-ty≥code-ty≥.h
>

5 
	~<‹bô/‹b-c‹e/c‹ba-™y-ty≥.h
>

6 
	~<‹bô/‹b-c‹e/‹bô-obje˘.h
>

8 
	gG_BEGIN_DECLS


10 
	#CORBA_tk_ªcursive
 0xffffffff

	)

11 
	#CORBA_tk_œ°
 (
CORBA_tk_ab°ø˘_öãrÁ˚
 + 1)

	)

13 
	sCORBA_Ty≥Code_°ru˘
 {

14 
ORBô_RoŸObje˘_°ru˘
 
	m∑ª¡
;

15 
CORBA_unsig√d_l⁄g
 
	mköd
;

16 
CORBA_unsig√d_l⁄g
 
	mÊags
;

17 
CORBA_sh‹t
 
	mc_Àngth
;

18 
CORBA_sh‹t
 
	mc_Æign
;

19 
CORBA_unsig√d_l⁄g
 
	mÀngth
;

20 
CORBA_unsig√d_l⁄g
 
	msub_∑πs
;

21 
CORBA_Ty≥Code
 *
	msubty≥s
;

22 
CORBA_Ty≥Code
 
	mdis¸imö©‹
;

23 *
	m«me
;

24 *
	mªpo_id
;

25 **
	msub«mes
;

26 
CORBA_l⁄g
 *
	msubœbñs
;

27 
CORBA_l⁄g
 
	mdeÁu…_ödex
;

28 
CORBA_unsig√d_l⁄g
 
	mªcur£_dïth
;

29 
CORBA_unsig√d_sh‹t
 
	mdigôs
;

30 
CORBA_sh‹t
 
	msˇÀ
;

33 
ORBIT2_MAYBE_CONST
 
ORBô_RoŸObje˘_I¡îÁ˚
 
ORBô_Ty≥Code_ïv
;

35 
	#TC_nuŒ
 ((
CORBA_Ty≥Code
)&
TC_nuŒ_°ru˘
)

	)

36 
	#TC_void
 ((
CORBA_Ty≥Code
)&
TC_void_°ru˘
)

	)

37 
	#TC_CORBA_sh‹t
 ((
CORBA_Ty≥Code
)&
TC_CORBA_sh‹t_°ru˘
)

	)

38 
	#TC_CORBA_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_l⁄g_°ru˘
)

	)

39 
	#TC_CORBA_l⁄g_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_l⁄g_l⁄g_°ru˘
)

	)

40 
	#TC_CORBA_unsig√d_sh‹t
 ((
CORBA_Ty≥Code
)&
TC_CORBA_unsig√d_sh‹t_°ru˘
)

	)

41 
	#TC_CORBA_unsig√d_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_unsig√d_l⁄g_°ru˘
)

	)

42 
	#TC_CORBA_unsig√d_l⁄g_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_unsig√d_l⁄g_l⁄g_°ru˘
)

	)

43 
	#TC_CORBA_Êﬂt
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Êﬂt_°ru˘
)

	)

44 
	#TC_CORBA_doubÀ
 ((
CORBA_Ty≥Code
)&
TC_CORBA_doubÀ_°ru˘
)

	)

45 
	#TC_CORBA_l⁄g_doubÀ
 ((
CORBA_Ty≥Code
)&
TC_CORBA_l⁄g_doubÀ_°ru˘
)

	)

46 
	#TC_CORBA_boﬁón
 ((
CORBA_Ty≥Code
)&
TC_CORBA_boﬁón_°ru˘
)

	)

47 
	#TC_CORBA_ch¨
 ((
CORBA_Ty≥Code
)&
TC_CORBA_ch¨_°ru˘
)

	)

48 
	#TC_CORBA_wch¨
 ((
CORBA_Ty≥Code
)&
TC_CORBA_wch¨_°ru˘
)

	)

49 
	#TC_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_o˘ë_°ru˘
)

	)

50 
	#TC_CORBA_™y
 ((
CORBA_Ty≥Code
)&
TC_CORBA_™y_°ru˘
)

	)

51 
	#TC_CORBA_Ty≥Code
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Ty≥Code_°ru˘
)

	)

52 
	#TC_CORBA_PröcùÆ
 ((
CORBA_Ty≥Code
)&
TC_CORBA_PröcùÆ_°ru˘
)

	)

53 
	#TC_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_Obje˘_°ru˘
)

	)

54 
	#TC_CORBA_°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_°rög_°ru˘
)

	)

55 
	#TC_CORBA_w°rög
 ((
CORBA_Ty≥Code
)&
TC_CORBA_w°rög_°ru˘
)

	)

57 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_nuŒ_°ru˘
;

58 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_void_°ru˘
;

59 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_ch¨_°ru˘
;

60 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_wch¨_°ru˘
;

61 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_°rög_°ru˘
;

62 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_w°rög_°ru˘
;

63 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_l⁄g_°ru˘
;

64 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_unsig√d_l⁄g_°ru˘
;

65 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_sh‹t_°ru˘
;

66 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_unsig√d_sh‹t_°ru˘
;

67 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_o˘ë_°ru˘
;

68 
	#TC_Obje˘_°ru˘
 
TC_CORBA_Obje˘_°ru˘


	)

69 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Obje˘_°ru˘
;

70 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_™y_°ru˘
;

71 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Ty≥Code_°ru˘
;

72 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_boﬁón_°ru˘
;

73 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_Êﬂt_°ru˘
;

74 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_doubÀ_°ru˘
;

75 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_l⁄g_doubÀ_°ru˘
;

76 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_l⁄g_l⁄g_°ru˘
;

77 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_unsig√d_l⁄g_l⁄g_°ru˘
;

79 #ifde‡
ORBIT2_INTERNAL_API


81 
	~<‹bô/GIOP/gi›-basics.h
>

83 
ORBô_ícode_CORBA_Ty≥Code
 (
CORBA_Ty≥Code
 
tc
,

84 
GIOPSídBuf„r
 *
buf
);

85 
gboﬁón
 
ORBô_decode_CORBA_Ty≥Code
 (
CORBA_Ty≥Code
 *
tc
,

86 
GIOPRecvBuf„r
 *
buf
);

88 c⁄° *
ORBô_tk_to_«me
 (
CORBA_unsig√d_l⁄g
 
tk
);

92 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/iop-defs.h

5 #i‚de‡
i›_defs_H


6 
	#i›_defs_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
_IOP_ProfûeId_deföed
)

18 
	#_IOP_ProfûeId_deföed
 1

	)

19 
CORBA_unsig√d_l⁄g
 
	tIOP_ProfûeId
;

20 
	#IOP_ProfûeId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

21 
	#IOP_ProfûeId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

22 #i‡!
deföed
(
TC_IMPL_TC_IOP_ProfûeId_0
)

23 
	#TC_IMPL_TC_IOP_ProfûeId_0
 'i'

	)

24 
	#TC_IMPL_TC_IOP_ProfûeId_1
 'o'

	)

25 
	#TC_IMPL_TC_IOP_ProfûeId_2
 'p'

	)

26 
	#TC_IMPL_TC_IOP_ProfûeId_3
 '_'

	)

27 
	#TC_IMPL_TC_IOP_ProfûeId_4
 'd'

	)

28 
	#TC_IMPL_TC_IOP_ProfûeId_5
 'e'

	)

29 
	#TC_IMPL_TC_IOP_ProfûeId_6
 'f'

	)

30 
	#TC_IMPL_TC_IOP_ProfûeId_7
 's'

	)

31 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


36 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_ProfûeId_°ru˘
;

37 
	#TC_IOP_ProfûeId
 ((
CORBA_Ty≥Code
)&
TC_IOP_ProfûeId_°ru˘
)

	)

39 
	#IOP_ProfûeId__Æloc
(Ë((
IOP_ProfûeId
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

40 
	#IOP_ProfûeId__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

42 #i‚de‡
IOP_TAG_INTERNET_IOP


43 
	#IOP_TAG_INTERNET_IOP
 0U

	)

46 #i‚de‡
IOP_TAG_MULTIPLE_COMPONENTS


47 
	#IOP_TAG_MULTIPLE_COMPONENTS
 1U

	)

50 #i‚de‡
IOP_TAG_SCCP_IOP


51 
	#IOP_TAG_SCCP_IOP
 2U

	)

54 #i‡!
deföed
(
_IOP_TaggedProfûe_deföed
)

55 
	#_IOP_TaggedProfûe_deföed
 1

	)

56 
IOP_TaggedProfûe_ty≥
 
	tIOP_TaggedProfûe
;

57 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

58 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

59 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

60 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

61 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

62 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

63 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

64 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

65 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

66 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

67 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

68 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

69 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

71 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

72 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

73 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

74 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

75 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

76 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

77 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

78 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

79 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

80 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


85 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

86 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

88 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

89 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

90 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

91 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

93 
	sIOP_TaggedProfûe_ty≥
 {

94 
IOP_ProfûeId
 
	gèg
;

95 
CORBA_£quí˚_CORBA_o˘ë
 
	g¥ofûe_d©a
;

98 #i‡!
deföed
(
TC_IMPL_TC_IOP_TaggedProfûe_0
)

99 
	#TC_IMPL_TC_IOP_TaggedProfûe_0
 'i'

	)

100 
	#TC_IMPL_TC_IOP_TaggedProfûe_1
 'o'

	)

101 
	#TC_IMPL_TC_IOP_TaggedProfûe_2
 'p'

	)

102 
	#TC_IMPL_TC_IOP_TaggedProfûe_3
 '_'

	)

103 
	#TC_IMPL_TC_IOP_TaggedProfûe_4
 'd'

	)

104 
	#TC_IMPL_TC_IOP_TaggedProfûe_5
 'e'

	)

105 
	#TC_IMPL_TC_IOP_TaggedProfûe_6
 'f'

	)

106 
	#TC_IMPL_TC_IOP_TaggedProfûe_7
 's'

	)

107 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


112 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_TaggedProfûe_°ru˘
;

113 
	#TC_IOP_TaggedProfûe
 ((
CORBA_Ty≥Code
)&
TC_IOP_TaggedProfûe_°ru˘
)

	)

115 
	#IOP_TaggedProfûe__Æloc
(Ë((
IOP_TaggedProfûe
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_TaggedProfûe
))

	)

116 
	#IOP_TaggedProfûe__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_TaggedProfûe
,(m),(d))

	)

118 #i‡!
deföed
(
_IOP_IOR_deföed
)

119 
	#_IOP_IOR_deföed
 1

	)

120 
IOP_IOR_ty≥
 
	tIOP_IOR
;

121 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_IOP_TaggedProfûe
)

122 
	#ORBIT_DECL_CORBA_£quí˚_IOP_TaggedProfûe
 1

	)

123 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_0
 'i'

	)

124 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_1
 'o'

	)

125 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_2
 'p'

	)

126 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_3
 '_'

	)

127 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_4
 'd'

	)

128 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_5
 'e'

	)

129 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_6
 'f'

	)

130 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedProfûe_7
 's'

	)

131 #i‡!
deföed
(
_CORBA_£quí˚_IOP_TaggedProfûe_deföed
)

132 
	#_CORBA_£quí˚_IOP_TaggedProfûe_deföed
 1

	)

133 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
IOP_TaggedProfûe
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_IOP_TaggedProfûe
;

135 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_0
)

136 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_0
 'i'

	)

137 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_1
 'o'

	)

138 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_2
 'p'

	)

139 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_3
 '_'

	)

140 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_4
 'd'

	)

141 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_5
 'e'

	)

142 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_6
 'f'

	)

143 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedProfûe_7
 's'

	)

144 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


149 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_IOP_TaggedProfûe_°ru˘
;

150 
	#TC_CORBA_£quí˚_IOP_TaggedProfûe
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_IOP_TaggedProfûe_°ru˘
)

	)

152 
	#CORBA_£quí˚_IOP_TaggedProfûe__Æloc
(Ë((
CORBA_£quí˚_IOP_TaggedProfûe
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_TaggedProfûe
))

	)

153 
	#CORBA_£quí˚_IOP_TaggedProfûe__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_TaggedProfûe
,(m),(d))

	)

154 
	#CORBA_£quí˚_IOP_TaggedProfûe_Ælocbuf
(
l
Ë((
IOP_TaggedProfûe
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedProfûe
, (l)))

	)

155 
	#CORBA_£quí˚_IOP_TaggedProfûe_Ælocbuf
(
l
Ë((
IOP_TaggedProfûe
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedProfûe
, (l)))

	)

157 
	sIOP_IOR_ty≥
 {

158 
CORBA_°rög
 
	gty≥_id
;

159 
CORBA_£quí˚_IOP_TaggedProfûe
 
	g¥ofûes
;

162 #i‡!
deföed
(
TC_IMPL_TC_IOP_IOR_0
)

163 
	#TC_IMPL_TC_IOP_IOR_0
 'i'

	)

164 
	#TC_IMPL_TC_IOP_IOR_1
 'o'

	)

165 
	#TC_IMPL_TC_IOP_IOR_2
 'p'

	)

166 
	#TC_IMPL_TC_IOP_IOR_3
 '_'

	)

167 
	#TC_IMPL_TC_IOP_IOR_4
 'd'

	)

168 
	#TC_IMPL_TC_IOP_IOR_5
 'e'

	)

169 
	#TC_IMPL_TC_IOP_IOR_6
 'f'

	)

170 
	#TC_IMPL_TC_IOP_IOR_7
 's'

	)

171 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


176 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_IOR_°ru˘
;

177 
	#TC_IOP_IOR
 ((
CORBA_Ty≥Code
)&
TC_IOP_IOR_°ru˘
)

	)

179 
	#IOP_IOR__Æloc
(Ë((
IOP_IOR
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_IOR
))

	)

180 
	#IOP_IOR__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_IOR
,(m),(d))

	)

182 #i‡!
deföed
(
_IOP_Comp⁄ítId_deföed
)

183 
	#_IOP_Comp⁄ítId_deföed
 1

	)

184 
CORBA_unsig√d_l⁄g
 
	tIOP_Comp⁄ítId
;

185 
	#IOP_Comp⁄ítId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

186 
	#IOP_Comp⁄ítId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

187 #i‡!
deföed
(
TC_IMPL_TC_IOP_Comp⁄ítId_0
)

188 
	#TC_IMPL_TC_IOP_Comp⁄ítId_0
 'i'

	)

189 
	#TC_IMPL_TC_IOP_Comp⁄ítId_1
 'o'

	)

190 
	#TC_IMPL_TC_IOP_Comp⁄ítId_2
 'p'

	)

191 
	#TC_IMPL_TC_IOP_Comp⁄ítId_3
 '_'

	)

192 
	#TC_IMPL_TC_IOP_Comp⁄ítId_4
 'd'

	)

193 
	#TC_IMPL_TC_IOP_Comp⁄ítId_5
 'e'

	)

194 
	#TC_IMPL_TC_IOP_Comp⁄ítId_6
 'f'

	)

195 
	#TC_IMPL_TC_IOP_Comp⁄ítId_7
 's'

	)

196 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


201 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Comp⁄ítId_°ru˘
;

202 
	#TC_IOP_Comp⁄ítId
 ((
CORBA_Ty≥Code
)&
TC_IOP_Comp⁄ítId_°ru˘
)

	)

204 
	#IOP_Comp⁄ítId__Æloc
(Ë((
IOP_Comp⁄ítId
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

205 
	#IOP_Comp⁄ítId__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

207 #i‡!
deföed
(
_IOP_TaggedComp⁄ít_deföed
)

208 
	#_IOP_TaggedComp⁄ít_deföed
 1

	)

209 
IOP_TaggedComp⁄ít_ty≥
 
	tIOP_TaggedComp⁄ít
;

210 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

211 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

212 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

213 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

214 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

215 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

216 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

217 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

218 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

219 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

220 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

221 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

222 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

224 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

225 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

226 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

227 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

228 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

229 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

230 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

231 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

232 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

233 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


238 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

239 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

241 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

242 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

243 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

244 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

246 
	sIOP_TaggedComp⁄ít_ty≥
 {

247 
IOP_Comp⁄ítId
 
	gèg
;

248 
CORBA_£quí˚_CORBA_o˘ë
 
	gcomp⁄ít_d©a
;

251 #i‡!
deföed
(
TC_IMPL_TC_IOP_TaggedComp⁄ít_0
)

252 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_0
 'i'

	)

253 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_1
 'o'

	)

254 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_2
 'p'

	)

255 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_3
 '_'

	)

256 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_4
 'd'

	)

257 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_5
 'e'

	)

258 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_6
 'f'

	)

259 
	#TC_IMPL_TC_IOP_TaggedComp⁄ít_7
 's'

	)

260 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


265 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_TaggedComp⁄ít_°ru˘
;

266 
	#TC_IOP_TaggedComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_IOP_TaggedComp⁄ít_°ru˘
)

	)

268 
	#IOP_TaggedComp⁄ít__Æloc
(Ë((
IOP_TaggedComp⁄ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_TaggedComp⁄ít
))

	)

269 
	#IOP_TaggedComp⁄ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_TaggedComp⁄ít
,(m),(d))

	)

271 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_IOP_TaggedComp⁄ít
)

272 
	#ORBIT_DECL_CORBA_£quí˚_IOP_TaggedComp⁄ít
 1

	)

273 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
 'i'

	)

274 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_1
 'o'

	)

275 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_2
 'p'

	)

276 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_3
 '_'

	)

277 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_4
 'd'

	)

278 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_5
 'e'

	)

279 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_6
 'f'

	)

280 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_7
 's'

	)

281 #i‡!
deföed
(
_CORBA_£quí˚_IOP_TaggedComp⁄ít_deföed
)

282 
	#_CORBA_£quí˚_IOP_TaggedComp⁄ít_deföed
 1

	)

283 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
IOP_TaggedComp⁄ít
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_IOP_TaggedComp⁄ít
;

285 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
)

286 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
 'i'

	)

287 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_1
 'o'

	)

288 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_2
 'p'

	)

289 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_3
 '_'

	)

290 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_4
 'd'

	)

291 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_5
 'e'

	)

292 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_6
 'f'

	)

293 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_7
 's'

	)

294 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


299 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_°ru˘
;

300 
	#TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_°ru˘
)

	)

302 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít__Æloc
(Ë((
CORBA_£quí˚_IOP_TaggedComp⁄ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
))

	)

303 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
,(m),(d))

	)

304 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

305 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

307 #i‡!
deföed
(
_IOP_Mu…ùÀComp⁄ítProfûe_deföed
)

308 
	#_IOP_Mu…ùÀComp⁄ítProfûe_deföed
 1

	)

309 
CORBA_£quí˚_IOP_TaggedComp⁄ít
 
	tIOP_Mu…ùÀComp⁄ítProfûe
;

310 
	#IOP_Mu…ùÀComp⁄ítProfûe_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_IOP_TaggedComp⁄ít_m¨shÆ
((x),(y),(z))

	)

311 
	#IOP_Mu…ùÀComp⁄ítProfûe_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_IOP_TaggedComp⁄ít_dem¨shÆ
((x),(y),(z),(i))

	)

312 #i‡!
deföed
(
TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_0
)

313 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_0
 'i'

	)

314 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_1
 'o'

	)

315 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_2
 'p'

	)

316 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_3
 '_'

	)

317 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_4
 'd'

	)

318 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_5
 'e'

	)

319 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_6
 'f'

	)

320 
	#TC_IMPL_TC_IOP_Mu…ùÀComp⁄ítProfûe_7
 's'

	)

321 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


326 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Mu…ùÀComp⁄ítProfûe_°ru˘
;

327 
	#TC_IOP_Mu…ùÀComp⁄ítProfûe
 ((
CORBA_Ty≥Code
)&
TC_IOP_Mu…ùÀComp⁄ítProfûe_°ru˘
)

	)

329 
	#IOP_Mu…ùÀComp⁄ítProfûe__Æloc
(Ë((
IOP_Mu…ùÀComp⁄ítProfûe
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
))

	)

330 
	#IOP_Mu…ùÀComp⁄ítProfûe__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
,(m),(d))

	)

331 
	#IOP_Mu…ùÀComp⁄ítProfûe_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

333 #i‚de‡
IOP_TAG_ORB_TYPE


334 
	#IOP_TAG_ORB_TYPE
 0U

	)

337 #i‚de‡
IOP_TAG_CODE_SETS


338 
	#IOP_TAG_CODE_SETS
 1U

	)

341 #i‚de‡
IOP_TAG_POLICIES


342 
	#IOP_TAG_POLICIES
 2U

	)

345 #i‚de‡
IOP_TAG_ALTERNATE_IIOP_ADDRESS


346 
	#IOP_TAG_ALTERNATE_IIOP_ADDRESS
 3U

	)

349 #i‚de‡
IOP_TAG_ASSOCIATION_OPTIONS


350 
	#IOP_TAG_ASSOCIATION_OPTIONS
 13U

	)

353 #i‚de‡
IOP_TAG_SEC_NAME


354 
	#IOP_TAG_SEC_NAME
 14U

	)

357 #i‚de‡
IOP_TAG_SPKM_1_SEC_MECH


358 
	#IOP_TAG_SPKM_1_SEC_MECH
 15U

	)

361 #i‚de‡
IOP_TAG_SPKM_2_SEC_MECH


362 
	#IOP_TAG_SPKM_2_SEC_MECH
 16U

	)

365 #i‚de‡
IOP_TAG_KîbîosV5_SEC_MECH


366 
	#IOP_TAG_KîbîosV5_SEC_MECH
 17U

	)

369 #i‚de‡
IOP_TAG_CSI_ECMA_Se¸ë_SEC_MECH


370 
	#IOP_TAG_CSI_ECMA_Se¸ë_SEC_MECH
 18U

	)

373 #i‚de‡
IOP_TAG_CSI_ECMA_Hybrid_SEC_MECH


374 
	#IOP_TAG_CSI_ECMA_Hybrid_SEC_MECH
 19U

	)

377 #i‚de‡
IOP_TAG_SSL_SEC_TRANS


378 
	#IOP_TAG_SSL_SEC_TRANS
 20U

	)

381 #i‚de‡
IOP_TAG_CSI_ECMA_Public_SEC_MECH


382 
	#IOP_TAG_CSI_ECMA_Public_SEC_MECH
 21U

	)

385 #i‚de‡
IOP_TAG_GENERIC_SEC_MECH


386 
	#IOP_TAG_GENERIC_SEC_MECH
 22U

	)

389 #i‚de‡
IOP_TAG_FIREWALL_TRANS


390 
	#IOP_TAG_FIREWALL_TRANS
 23U

	)

393 #i‚de‡
IOP_TAG_SCCP_CONTACT_INFO


394 
	#IOP_TAG_SCCP_CONTACT_INFO
 24U

	)

397 #i‚de‡
IOP_TAG_JAVA_CODEBASE


398 
	#IOP_TAG_JAVA_CODEBASE
 25U

	)

401 #i‚de‡
IOP_TAG_TRANSACTION_POLICY


402 
	#IOP_TAG_TRANSACTION_POLICY
 26U

	)

405 #i‚de‡
IOP_TAG_MESSAGE_ROUTER


406 
	#IOP_TAG_MESSAGE_ROUTER
 30U

	)

409 #i‚de‡
IOP_TAG_OTS_POLICY


410 
	#IOP_TAG_OTS_POLICY
 31U

	)

413 #i‚de‡
IOP_TAG_INV_POLICY


414 
	#IOP_TAG_INV_POLICY
 32U

	)

417 #i‚de‡
IOP_TAG_CSI_SEC_MECH_LIST


418 
	#IOP_TAG_CSI_SEC_MECH_LIST
 33U

	)

421 #i‚de‡
IOP_TAG_NULL_TAG


422 
	#IOP_TAG_NULL_TAG
 34U

	)

425 #i‚de‡
IOP_TAG_SECIOP_SEC_TRANS


426 
	#IOP_TAG_SECIOP_SEC_TRANS
 35U

	)

429 #i‚de‡
IOP_TAG_TLS_SEC_TRANS


430 
	#IOP_TAG_TLS_SEC_TRANS
 36U

	)

433 #i‚de‡
IOP_TAG_ACTIVITY_POLICY


434 
	#IOP_TAG_ACTIVITY_POLICY
 37U

	)

437 #i‚de‡
IOP_TAG_COMPLETE_OBJECT_KEY


438 
	#IOP_TAG_COMPLETE_OBJECT_KEY
 5U

	)

441 #i‚de‡
IOP_TAG_ENDPOINT_ID_POSITION


442 
	#IOP_TAG_ENDPOINT_ID_POSITION
 6U

	)

445 #i‚de‡
IOP_TAG_LOCATION_POLICY


446 
	#IOP_TAG_LOCATION_POLICY
 12U

	)

449 #i‚de‡
IOP_TAG_DCE_STRING_BINDING


450 
	#IOP_TAG_DCE_STRING_BINDING
 100U

	)

453 #i‚de‡
IOP_TAG_DCE_BINDING_NAME


454 
	#IOP_TAG_DCE_BINDING_NAME
 101U

	)

457 #i‚de‡
IOP_TAG_DCE_NO_PIPES


458 
	#IOP_TAG_DCE_NO_PIPES
 102U

	)

461 #i‚de‡
IOP_TAG_DCE_SEC_MECH


462 
	#IOP_TAG_DCE_SEC_MECH
 103U

	)

465 #i‚de‡
IOP_TAG_INET_SEC_TRANS


466 
	#IOP_TAG_INET_SEC_TRANS
 123U

	)

469 #i‡!
deföed
(
_IOP_Sîvi˚Id_deföed
)

470 
	#_IOP_Sîvi˚Id_deföed
 1

	)

471 
CORBA_unsig√d_l⁄g
 
	tIOP_Sîvi˚Id
;

472 
	#IOP_Sîvi˚Id_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

473 
	#IOP_Sîvi˚Id_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

474 #i‡!
deföed
(
TC_IMPL_TC_IOP_Sîvi˚Id_0
)

475 
	#TC_IMPL_TC_IOP_Sîvi˚Id_0
 'i'

	)

476 
	#TC_IMPL_TC_IOP_Sîvi˚Id_1
 'o'

	)

477 
	#TC_IMPL_TC_IOP_Sîvi˚Id_2
 'p'

	)

478 
	#TC_IMPL_TC_IOP_Sîvi˚Id_3
 '_'

	)

479 
	#TC_IMPL_TC_IOP_Sîvi˚Id_4
 'd'

	)

480 
	#TC_IMPL_TC_IOP_Sîvi˚Id_5
 'e'

	)

481 
	#TC_IMPL_TC_IOP_Sîvi˚Id_6
 'f'

	)

482 
	#TC_IMPL_TC_IOP_Sîvi˚Id_7
 's'

	)

483 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


488 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Sîvi˚Id_°ru˘
;

489 
	#TC_IOP_Sîvi˚Id
 ((
CORBA_Ty≥Code
)&
TC_IOP_Sîvi˚Id_°ru˘
)

	)

491 
	#IOP_Sîvi˚Id__Æloc
(Ë((
IOP_Sîvi˚Id
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

492 
	#IOP_Sîvi˚Id__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

494 #i‡!
deföed
(
_IOP_Sîvi˚C⁄ãxt_deföed
)

495 
	#_IOP_Sîvi˚C⁄ãxt_deföed
 1

	)

496 
IOP_Sîvi˚C⁄ãxt_ty≥
 
	tIOP_Sîvi˚C⁄ãxt
;

497 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

498 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

499 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

500 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

501 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

502 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

503 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

504 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

505 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

506 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

507 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

508 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

509 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

511 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

512 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

513 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

514 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

515 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

516 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

517 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

518 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

519 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

520 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


525 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

526 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

528 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

529 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

530 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

531 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

533 
	sIOP_Sîvi˚C⁄ãxt_ty≥
 {

534 
IOP_Sîvi˚Id
 
	gc⁄ãxt_id
;

535 
CORBA_£quí˚_CORBA_o˘ë
 
	gc⁄ãxt_d©a
;

538 #i‡!
deföed
(
TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_0
)

539 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_0
 'i'

	)

540 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_1
 'o'

	)

541 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_2
 'p'

	)

542 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_3
 '_'

	)

543 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_4
 'd'

	)

544 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_5
 'e'

	)

545 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_6
 'f'

	)

546 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxt_7
 's'

	)

547 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


552 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Sîvi˚C⁄ãxt_°ru˘
;

553 
	#TC_IOP_Sîvi˚C⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_IOP_Sîvi˚C⁄ãxt_°ru˘
)

	)

555 
	#IOP_Sîvi˚C⁄ãxt__Æloc
(Ë((
IOP_Sîvi˚C⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_Sîvi˚C⁄ãxt
))

	)

556 
	#IOP_Sîvi˚C⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_Sîvi˚C⁄ãxt
,(m),(d))

	)

558 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
)

559 
	#ORBIT_DECL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
 1

	)

560 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_0
 'i'

	)

561 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_1
 'o'

	)

562 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_2
 'p'

	)

563 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_3
 '_'

	)

564 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_4
 'd'

	)

565 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_5
 'e'

	)

566 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_6
 'f'

	)

567 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_7
 's'

	)

568 #i‡!
deföed
(
_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_deföed
)

569 
	#_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_deföed
 1

	)

570 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
IOP_Sîvi˚C⁄ãxt
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
;

572 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_0
)

573 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_0
 'i'

	)

574 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_1
 'o'

	)

575 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_2
 'p'

	)

576 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_3
 '_'

	)

577 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_4
 'd'

	)

578 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_5
 'e'

	)

579 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_6
 'f'

	)

580 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_7
 's'

	)

581 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


586 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_°ru˘
;

587 
	#TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_°ru˘
)

	)

589 
	#CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt__Æloc
(Ë((
CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
))

	)

590 
	#CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
,(m),(d))

	)

591 
	#CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_Ælocbuf
(
l
Ë((
IOP_Sîvi˚C⁄ãxt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
, (l)))

	)

592 
	#CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_Ælocbuf
(
l
Ë((
IOP_Sîvi˚C⁄ãxt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
, (l)))

	)

594 #i‡!
deföed
(
_IOP_Sîvi˚C⁄ãxtLi°_deföed
)

595 
	#_IOP_Sîvi˚C⁄ãxtLi°_deföed
 1

	)

596 
CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
 
	tIOP_Sîvi˚C⁄ãxtLi°
;

597 
	#IOP_Sîvi˚C⁄ãxtLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_m¨shÆ
((x),(y),(z))

	)

598 
	#IOP_Sîvi˚C⁄ãxtLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt_dem¨shÆ
((x),(y),(z),(i))

	)

599 #i‡!
deföed
(
TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_0
)

600 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_0
 'i'

	)

601 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_1
 'o'

	)

602 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_2
 'p'

	)

603 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_3
 '_'

	)

604 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_4
 'd'

	)

605 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_5
 'e'

	)

606 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_6
 'f'

	)

607 
	#TC_IMPL_TC_IOP_Sîvi˚C⁄ãxtLi°_7
 's'

	)

608 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


613 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Sîvi˚C⁄ãxtLi°_°ru˘
;

614 
	#TC_IOP_Sîvi˚C⁄ãxtLi°
 ((
CORBA_Ty≥Code
)&
TC_IOP_Sîvi˚C⁄ãxtLi°_°ru˘
)

	)

616 
	#IOP_Sîvi˚C⁄ãxtLi°__Æloc
(Ë((
IOP_Sîvi˚C⁄ãxtLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
))

	)

617 
	#IOP_Sîvi˚C⁄ãxtLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
,(m),(d))

	)

618 
	#IOP_Sîvi˚C⁄ãxtLi°_Ælocbuf
(
l
Ë((
IOP_Sîvi˚C⁄ãxt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_Sîvi˚C⁄ãxt
, (l)))

	)

620 #i‚de‡
IOP_Tønß˘i⁄Sîvi˚


621 
	#IOP_Tønß˘i⁄Sîvi˚
 0U

	)

624 #i‚de‡
IOP_CodeSës


625 
	#IOP_CodeSës
 1U

	)

628 #i‚de‡
IOP_ChaöBy∑ssCheck


629 
	#IOP_ChaöBy∑ssCheck
 2U

	)

632 #i‚de‡
IOP_ChaöBy∑ssInfo


633 
	#IOP_ChaöBy∑ssInfo
 3U

	)

636 #i‚de‡
IOP_LogiˇlThªadId


637 
	#IOP_LogiˇlThªadId
 4U

	)

640 #i‚de‡
IOP_BI_DIR_IIOP


641 
	#IOP_BI_DIR_IIOP
 5U

	)

644 #i‚de‡
IOP_SídögC⁄ãxtRunTime


645 
	#IOP_SídögC⁄ãxtRunTime
 6U

	)

648 #i‚de‡
IOP_INVOCATION_POLICIES


649 
	#IOP_INVOCATION_POLICIES
 7U

	)

652 #i‚de‡
IOP_FORWARDED_IDENTITY


653 
	#IOP_FORWARDED_IDENTITY
 8U

	)

656 #i‚de‡
IOP_UnknownEx˚±i⁄Info


657 
	#IOP_UnknownEx˚±i⁄Info
 9U

	)

660 #i‚de‡
IOP_RTC‹baPri‹ôy


661 
	#IOP_RTC‹baPri‹ôy
 10U

	)

664 #i‚de‡
IOP_RTC‹baPri‹ôyR™ge


665 
	#IOP_RTC‹baPri‹ôyR™ge
 11U

	)

668 #i‚de‡
IOP_FT_GROUP_VERSION


669 
	#IOP_FT_GROUP_VERSION
 12U

	)

672 #i‚de‡
IOP_FT_REQUEST


673 
	#IOP_FT_REQUEST
 13U

	)

676 #i‚de‡
IOP_Ex˚±i⁄DëaûMesßge


677 
	#IOP_Ex˚±i⁄DëaûMesßge
 14U

	)

680 #i‚de‡
IOP_SecurôyAâribuãSîvi˚


681 
	#IOP_SecurôyAâribuãSîvi˚
 15U

	)

684 #i‚de‡
IOP_A˘ivôySîvi˚


685 
	#IOP_A˘ivôySîvi˚
 16U

	)

688 #i‡!
deföed
(
ORBIT_DECL_IOP_Codec
Ë&& !deföed(
_IOP_Codec_deföed
)

689 
	#ORBIT_DECL_IOP_Codec
 1

	)

690 
	#_IOP_Codec_deföed
 1

	)

691 
	#IOP_Codec__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

692 
CORBA_Obje˘
 
	tIOP_Codec
;

693 
CORBA_unsig√d_l⁄g
 
IOP_Codec__˛assid
;

694 #i‡!
deföed
(
TC_IMPL_TC_IOP_Codec_0
)

695 
	#TC_IMPL_TC_IOP_Codec_0
 'i'

	)

696 
	#TC_IMPL_TC_IOP_Codec_1
 'o'

	)

697 
	#TC_IMPL_TC_IOP_Codec_2
 'p'

	)

698 
	#TC_IMPL_TC_IOP_Codec_3
 '_'

	)

699 
	#TC_IMPL_TC_IOP_Codec_4
 'd'

	)

700 
	#TC_IMPL_TC_IOP_Codec_5
 'e'

	)

701 
	#TC_IMPL_TC_IOP_Codec_6
 'f'

	)

702 
	#TC_IMPL_TC_IOP_Codec_7
 's'

	)

703 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


708 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Codec_°ru˘
;

709 
	#TC_IOP_Codec
 ((
CORBA_Ty≥Code
)&
TC_IOP_Codec_°ru˘
)

	)

712 #unde‡
ex_IOP_Codec_InvÆidTy≥F‹Encodög


713 
	#ex_IOP_Codec_InvÆidTy≥F‹Encodög
 "IDL:omg.‹g/IOP/Codec/InvÆidTy≥F‹Encodög:1.0"

	)

714 #i‡!
deföed
(
_IOP_Codec_InvÆidTy≥F‹Encodög_deföed
)

715 
	#_IOP_Codec_InvÆidTy≥F‹Encodög_deföed
 1

	)

716 
IOP_Codec_InvÆidTy≥F‹Encodög_ty≥
 
	tIOP_Codec_InvÆidTy≥F‹Encodög
;

717 
	sIOP_Codec_InvÆidTy≥F‹Encodög_ty≥
 {

718 
	gdummy
;

721 #i‡!
deföed
(
TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_0
)

722 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_0
 'i'

	)

723 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_1
 'o'

	)

724 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_2
 'p'

	)

725 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_3
 '_'

	)

726 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_4
 'd'

	)

727 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_5
 'e'

	)

728 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_6
 'f'

	)

729 
	#TC_IMPL_TC_IOP_Codec_InvÆidTy≥F‹Encodög_7
 's'

	)

730 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


735 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Codec_InvÆidTy≥F‹Encodög_°ru˘
;

736 
	#TC_IOP_Codec_InvÆidTy≥F‹Encodög
 ((
CORBA_Ty≥Code
)&
TC_IOP_Codec_InvÆidTy≥F‹Encodög_°ru˘
)

	)

738 
	#IOP_Codec_InvÆidTy≥F‹Encodög__Æloc
(Ë((
IOP_Codec_InvÆidTy≥F‹Encodög
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_Codec_InvÆidTy≥F‹Encodög
))

	)

739 
	#IOP_Codec_InvÆidTy≥F‹Encodög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_Codec_InvÆidTy≥F‹Encodög
,(m),(d))

	)

741 #unde‡
ex_IOP_Codec_F‹m©Mism©ch


742 
	#ex_IOP_Codec_F‹m©Mism©ch
 "IDL:omg.‹g/IOP/Codec/F‹m©Mism©ch:1.0"

	)

743 #i‡!
deföed
(
_IOP_Codec_F‹m©Mism©ch_deföed
)

744 
	#_IOP_Codec_F‹m©Mism©ch_deföed
 1

	)

745 
IOP_Codec_F‹m©Mism©ch_ty≥
 
	tIOP_Codec_F‹m©Mism©ch
;

746 
	sIOP_Codec_F‹m©Mism©ch_ty≥
 {

747 
	gdummy
;

750 #i‡!
deföed
(
TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_0
)

751 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_0
 'i'

	)

752 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_1
 'o'

	)

753 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_2
 'p'

	)

754 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_3
 '_'

	)

755 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_4
 'd'

	)

756 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_5
 'e'

	)

757 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_6
 'f'

	)

758 
	#TC_IMPL_TC_IOP_Codec_F‹m©Mism©ch_7
 's'

	)

759 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


764 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Codec_F‹m©Mism©ch_°ru˘
;

765 
	#TC_IOP_Codec_F‹m©Mism©ch
 ((
CORBA_Ty≥Code
)&
TC_IOP_Codec_F‹m©Mism©ch_°ru˘
)

	)

767 
	#IOP_Codec_F‹m©Mism©ch__Æloc
(Ë((
IOP_Codec_F‹m©Mism©ch
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_Codec_F‹m©Mism©ch
))

	)

768 
	#IOP_Codec_F‹m©Mism©ch__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_Codec_F‹m©Mism©ch
,(m),(d))

	)

770 #unde‡
ex_IOP_Codec_Ty≥Mism©ch


771 
	#ex_IOP_Codec_Ty≥Mism©ch
 "IDL:omg.‹g/IOP/Codec/Ty≥Mism©ch:1.0"

	)

772 #i‡!
deföed
(
_IOP_Codec_Ty≥Mism©ch_deföed
)

773 
	#_IOP_Codec_Ty≥Mism©ch_deföed
 1

	)

774 
IOP_Codec_Ty≥Mism©ch_ty≥
 
	tIOP_Codec_Ty≥Mism©ch
;

775 
	sIOP_Codec_Ty≥Mism©ch_ty≥
 {

776 
	gdummy
;

779 #i‡!
deföed
(
TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_0
)

780 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_0
 'i'

	)

781 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_1
 'o'

	)

782 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_2
 'p'

	)

783 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_3
 '_'

	)

784 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_4
 'd'

	)

785 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_5
 'e'

	)

786 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_6
 'f'

	)

787 
	#TC_IMPL_TC_IOP_Codec_Ty≥Mism©ch_7
 's'

	)

788 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


793 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Codec_Ty≥Mism©ch_°ru˘
;

794 
	#TC_IOP_Codec_Ty≥Mism©ch
 ((
CORBA_Ty≥Code
)&
TC_IOP_Codec_Ty≥Mism©ch_°ru˘
)

	)

796 
	#IOP_Codec_Ty≥Mism©ch__Æloc
(Ë((
IOP_Codec_Ty≥Mism©ch
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_Codec_Ty≥Mism©ch
))

	)

797 
	#IOP_Codec_Ty≥Mism©ch__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_Codec_Ty≥Mism©ch
,(m),(d))

	)

799 #i‡!
deföed
(
_IOP_EncodögF‹m©_deföed
)

800 
	#_IOP_EncodögF‹m©_deföed
 1

	)

801 
CORBA_sh‹t
 
	tIOP_EncodögF‹m©
;

802 
	#IOP_EncodögF‹m©_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

803 
	#IOP_EncodögF‹m©_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

804 #i‡!
deföed
(
TC_IMPL_TC_IOP_EncodögF‹m©_0
)

805 
	#TC_IMPL_TC_IOP_EncodögF‹m©_0
 'i'

	)

806 
	#TC_IMPL_TC_IOP_EncodögF‹m©_1
 'o'

	)

807 
	#TC_IMPL_TC_IOP_EncodögF‹m©_2
 'p'

	)

808 
	#TC_IMPL_TC_IOP_EncodögF‹m©_3
 '_'

	)

809 
	#TC_IMPL_TC_IOP_EncodögF‹m©_4
 'd'

	)

810 
	#TC_IMPL_TC_IOP_EncodögF‹m©_5
 'e'

	)

811 
	#TC_IMPL_TC_IOP_EncodögF‹m©_6
 'f'

	)

812 
	#TC_IMPL_TC_IOP_EncodögF‹m©_7
 's'

	)

813 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


818 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_EncodögF‹m©_°ru˘
;

819 
	#TC_IOP_EncodögF‹m©
 ((
CORBA_Ty≥Code
)&
TC_IOP_EncodögF‹m©_°ru˘
)

	)

821 
	#IOP_EncodögF‹m©__Æloc
(Ë((
IOP_EncodögF‹m©
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_sh‹t
))

	)

822 
	#IOP_EncodögF‹m©__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_sh‹t
,(m),(d))

	)

824 #i‚de‡
IOP_ENCODING_CDR_ENCAPS


825 
	#IOP_ENCODING_CDR_ENCAPS
 0

	)

828 #i‡!
deföed
(
_IOP_Encodög_deföed
)

829 
	#_IOP_Encodög_deföed
 1

	)

830 
IOP_Encodög_ty≥
 
	tIOP_Encodög
;

831 
	sIOP_Encodög_ty≥
 {

832 
IOP_EncodögF‹m©
 
	gf‹m©
;

833 
CORBA_o˘ë
 
	gmaj‹_vîsi⁄
;

834 
CORBA_o˘ë
 
	gmö‹_vîsi⁄
;

837 #i‡!
deföed
(
TC_IMPL_TC_IOP_Encodög_0
)

838 
	#TC_IMPL_TC_IOP_Encodög_0
 'i'

	)

839 
	#TC_IMPL_TC_IOP_Encodög_1
 'o'

	)

840 
	#TC_IMPL_TC_IOP_Encodög_2
 'p'

	)

841 
	#TC_IMPL_TC_IOP_Encodög_3
 '_'

	)

842 
	#TC_IMPL_TC_IOP_Encodög_4
 'd'

	)

843 
	#TC_IMPL_TC_IOP_Encodög_5
 'e'

	)

844 
	#TC_IMPL_TC_IOP_Encodög_6
 'f'

	)

845 
	#TC_IMPL_TC_IOP_Encodög_7
 's'

	)

846 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


851 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_Encodög_°ru˘
;

852 
	#TC_IOP_Encodög
 ((
CORBA_Ty≥Code
)&
TC_IOP_Encodög_°ru˘
)

	)

854 
	#IOP_Encodög__Æloc
(Ë((
IOP_Encodög
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_Encodög
))

	)

855 
	#IOP_Encodög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_Encodög
,(m),(d))

	)

857 #i‡!
deföed
(
ORBIT_DECL_IOP_CodecFa˘‹y
Ë&& !deföed(
_IOP_CodecFa˘‹y_deföed
)

858 
	#ORBIT_DECL_IOP_CodecFa˘‹y
 1

	)

859 
	#_IOP_CodecFa˘‹y_deföed
 1

	)

860 
	#IOP_CodecFa˘‹y__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

861 
CORBA_Obje˘
 
	tIOP_CodecFa˘‹y
;

862 
CORBA_unsig√d_l⁄g
 
IOP_CodecFa˘‹y__˛assid
;

863 #i‡!
deföed
(
TC_IMPL_TC_IOP_CodecFa˘‹y_0
)

864 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_0
 'i'

	)

865 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_1
 'o'

	)

866 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_2
 'p'

	)

867 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_3
 '_'

	)

868 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_4
 'd'

	)

869 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_5
 'e'

	)

870 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_6
 'f'

	)

871 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_7
 's'

	)

872 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


877 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_CodecFa˘‹y_°ru˘
;

878 
	#TC_IOP_CodecFa˘‹y
 ((
CORBA_Ty≥Code
)&
TC_IOP_CodecFa˘‹y_°ru˘
)

	)

881 #unde‡
ex_IOP_CodecFa˘‹y_UnknownEncodög


882 
	#ex_IOP_CodecFa˘‹y_UnknownEncodög
 "IDL:omg.‹g/IOP/CodecFa˘‹y/UnknownEncodög:1.0"

	)

883 #i‡!
deföed
(
_IOP_CodecFa˘‹y_UnknownEncodög_deföed
)

884 
	#_IOP_CodecFa˘‹y_UnknownEncodög_deföed
 1

	)

885 
IOP_CodecFa˘‹y_UnknownEncodög_ty≥
 
	tIOP_CodecFa˘‹y_UnknownEncodög
;

886 
	sIOP_CodecFa˘‹y_UnknownEncodög_ty≥
 {

887 
	gdummy
;

890 #i‡!
deföed
(
TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_0
)

891 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_0
 'i'

	)

892 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_1
 'o'

	)

893 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_2
 'p'

	)

894 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_3
 '_'

	)

895 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_4
 'd'

	)

896 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_5
 'e'

	)

897 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_6
 'f'

	)

898 
	#TC_IMPL_TC_IOP_CodecFa˘‹y_UnknownEncodög_7
 's'

	)

899 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


904 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_CodecFa˘‹y_UnknownEncodög_°ru˘
;

905 
	#TC_IOP_CodecFa˘‹y_UnknownEncodög
 ((
CORBA_Ty≥Code
)&
TC_IOP_CodecFa˘‹y_UnknownEncodög_°ru˘
)

	)

907 
	#IOP_CodecFa˘‹y_UnknownEncodög__Æloc
(Ë((
IOP_CodecFa˘‹y_UnknownEncodög
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_CodecFa˘‹y_UnknownEncodög
))

	)

908 
	#IOP_CodecFa˘‹y_UnknownEncodög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_CodecFa˘‹y_UnknownEncodög
,(m),(d))

	)

910 #i‡!
deföed
(
_IIOP_Vîsi⁄_deföed
)

911 
	#_IIOP_Vîsi⁄_deföed
 1

	)

912 
IIOP_Vîsi⁄_ty≥
 
	tIIOP_Vîsi⁄
;

913 
	sIIOP_Vîsi⁄_ty≥
 {

914 
CORBA_o˘ë
 
	gmaj‹
;

915 
CORBA_o˘ë
 
	gmö‹
;

918 #i‡!
deföed
(
TC_IMPL_TC_IIOP_Vîsi⁄_0
)

919 
	#TC_IMPL_TC_IIOP_Vîsi⁄_0
 'i'

	)

920 
	#TC_IMPL_TC_IIOP_Vîsi⁄_1
 'o'

	)

921 
	#TC_IMPL_TC_IIOP_Vîsi⁄_2
 'p'

	)

922 
	#TC_IMPL_TC_IIOP_Vîsi⁄_3
 '_'

	)

923 
	#TC_IMPL_TC_IIOP_Vîsi⁄_4
 'd'

	)

924 
	#TC_IMPL_TC_IIOP_Vîsi⁄_5
 'e'

	)

925 
	#TC_IMPL_TC_IIOP_Vîsi⁄_6
 'f'

	)

926 
	#TC_IMPL_TC_IIOP_Vîsi⁄_7
 's'

	)

927 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


932 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IIOP_Vîsi⁄_°ru˘
;

933 
	#TC_IIOP_Vîsi⁄
 ((
CORBA_Ty≥Code
)&
TC_IIOP_Vîsi⁄_°ru˘
)

	)

935 
	#IIOP_Vîsi⁄__Æloc
(Ë((
IIOP_Vîsi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_IIOP_Vîsi⁄
))

	)

936 
	#IIOP_Vîsi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IIOP_Vîsi⁄
,(m),(d))

	)

938 #i‡!
deföed
(
_IIOP_ProfûeBody_1_0_deföed
)

939 
	#_IIOP_ProfûeBody_1_0_deföed
 1

	)

940 
IIOP_ProfûeBody_1_0_ty≥
 
	tIIOP_ProfûeBody_1_0
;

941 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

942 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

943 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

944 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

945 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

946 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

947 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

948 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

949 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

950 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

951 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

952 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

953 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

955 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

956 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

957 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

958 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

959 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

960 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

961 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

962 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

963 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

964 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


969 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

970 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

972 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

973 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

974 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

975 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

977 
	sIIOP_ProfûeBody_1_0_ty≥
 {

978 
IIOP_Vîsi⁄
 
	gii›_vîsi⁄
;

979 
CORBA_°rög
 
	gho°
;

980 
CORBA_unsig√d_sh‹t
 
	gp‹t
;

981 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

984 #i‡!
deföed
(
TC_IMPL_TC_IIOP_ProfûeBody_1_0_0
)

985 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_0
 'i'

	)

986 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_1
 'o'

	)

987 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_2
 'p'

	)

988 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_3
 '_'

	)

989 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_4
 'd'

	)

990 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_5
 'e'

	)

991 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_6
 'f'

	)

992 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_0_7
 's'

	)

993 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


998 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IIOP_ProfûeBody_1_0_°ru˘
;

999 
	#TC_IIOP_ProfûeBody_1_0
 ((
CORBA_Ty≥Code
)&
TC_IIOP_ProfûeBody_1_0_°ru˘
)

	)

1001 
	#IIOP_ProfûeBody_1_0__Æloc
(Ë((
IIOP_ProfûeBody_1_0
 *)
	`ORBô_smÆl_Æloc
 (
TC_IIOP_ProfûeBody_1_0
))

	)

1002 
	#IIOP_ProfûeBody_1_0__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IIOP_ProfûeBody_1_0
,(m),(d))

	)

1004 #i‡!
deföed
(
_IIOP_ProfûeBody_1_1_deföed
)

1005 
	#_IIOP_ProfûeBody_1_1_deföed
 1

	)

1006 
IIOP_ProfûeBody_1_1_ty≥
 
	tIIOP_ProfûeBody_1_1
;

1007 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

1008 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

1009 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1010 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1011 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1012 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1013 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1014 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1015 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1016 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1017 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

1018 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

1019 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

1021 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

1022 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1023 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1024 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1025 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1026 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1027 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1028 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1029 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1030 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1035 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

1036 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

1038 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

1039 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

1040 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1041 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1043 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_IOP_TaggedComp⁄ít
)

1044 
	#ORBIT_DECL_CORBA_£quí˚_IOP_TaggedComp⁄ít
 1

	)

1045 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
 'i'

	)

1046 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_1
 'o'

	)

1047 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_2
 'p'

	)

1048 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_3
 '_'

	)

1049 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_4
 'd'

	)

1050 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_5
 'e'

	)

1051 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_6
 'f'

	)

1052 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_7
 's'

	)

1053 #i‡!
deföed
(
_CORBA_£quí˚_IOP_TaggedComp⁄ít_deföed
)

1054 
	#_CORBA_£quí˚_IOP_TaggedComp⁄ít_deföed
 1

	)

1055 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
IOP_TaggedComp⁄ít
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_IOP_TaggedComp⁄ít
;

1057 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
)

1058 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
 'i'

	)

1059 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_1
 'o'

	)

1060 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_2
 'p'

	)

1061 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_3
 '_'

	)

1062 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_4
 'd'

	)

1063 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_5
 'e'

	)

1064 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_6
 'f'

	)

1065 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_7
 's'

	)

1066 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1071 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_°ru˘
;

1072 
	#TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_°ru˘
)

	)

1074 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít__Æloc
(Ë((
CORBA_£quí˚_IOP_TaggedComp⁄ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
))

	)

1075 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
,(m),(d))

	)

1076 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

1077 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

1079 
	sIIOP_ProfûeBody_1_1_ty≥
 {

1080 
IIOP_Vîsi⁄
 
	gii›_vîsi⁄
;

1081 
CORBA_°rög
 
	gho°
;

1082 
CORBA_unsig√d_sh‹t
 
	gp‹t
;

1083 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

1084 
CORBA_£quí˚_IOP_TaggedComp⁄ít
 
	gcomp⁄íts
;

1087 #i‡!
deföed
(
TC_IMPL_TC_IIOP_ProfûeBody_1_1_0
)

1088 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_0
 'i'

	)

1089 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_1
 'o'

	)

1090 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_2
 'p'

	)

1091 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_3
 '_'

	)

1092 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_4
 'd'

	)

1093 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_5
 'e'

	)

1094 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_6
 'f'

	)

1095 
	#TC_IMPL_TC_IIOP_ProfûeBody_1_1_7
 's'

	)

1096 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1101 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IIOP_ProfûeBody_1_1_°ru˘
;

1102 
	#TC_IIOP_ProfûeBody_1_1
 ((
CORBA_Ty≥Code
)&
TC_IIOP_ProfûeBody_1_1_°ru˘
)

	)

1104 
	#IIOP_ProfûeBody_1_1__Æloc
(Ë((
IIOP_ProfûeBody_1_1
 *)
	`ORBô_smÆl_Æloc
 (
TC_IIOP_ProfûeBody_1_1
))

	)

1105 
	#IIOP_ProfûeBody_1_1__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IIOP_ProfûeBody_1_1
,(m),(d))

	)

1107 #i‡!
deföed
(
_IIOP_Li°íPoöt_deföed
)

1108 
	#_IIOP_Li°íPoöt_deföed
 1

	)

1109 
IIOP_Li°íPoöt_ty≥
 
	tIIOP_Li°íPoöt
;

1110 
	sIIOP_Li°íPoöt_ty≥
 {

1111 
CORBA_°rög
 
	gho°
;

1112 
CORBA_unsig√d_sh‹t
 
	gp‹t
;

1115 #i‡!
deföed
(
TC_IMPL_TC_IIOP_Li°íPoöt_0
)

1116 
	#TC_IMPL_TC_IIOP_Li°íPoöt_0
 'i'

	)

1117 
	#TC_IMPL_TC_IIOP_Li°íPoöt_1
 'o'

	)

1118 
	#TC_IMPL_TC_IIOP_Li°íPoöt_2
 'p'

	)

1119 
	#TC_IMPL_TC_IIOP_Li°íPoöt_3
 '_'

	)

1120 
	#TC_IMPL_TC_IIOP_Li°íPoöt_4
 'd'

	)

1121 
	#TC_IMPL_TC_IIOP_Li°íPoöt_5
 'e'

	)

1122 
	#TC_IMPL_TC_IIOP_Li°íPoöt_6
 'f'

	)

1123 
	#TC_IMPL_TC_IIOP_Li°íPoöt_7
 's'

	)

1124 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1129 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IIOP_Li°íPoöt_°ru˘
;

1130 
	#TC_IIOP_Li°íPoöt
 ((
CORBA_Ty≥Code
)&
TC_IIOP_Li°íPoöt_°ru˘
)

	)

1132 
	#IIOP_Li°íPoöt__Æloc
(Ë((
IIOP_Li°íPoöt
 *)
	`ORBô_smÆl_Æloc
 (
TC_IIOP_Li°íPoöt
))

	)

1133 
	#IIOP_Li°íPoöt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IIOP_Li°íPoöt
,(m),(d))

	)

1135 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_IIOP_Li°íPoöt
)

1136 
	#ORBIT_DECL_CORBA_£quí˚_IIOP_Li°íPoöt
 1

	)

1137 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_0
 'i'

	)

1138 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_1
 'o'

	)

1139 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_2
 'p'

	)

1140 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_3
 '_'

	)

1141 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_4
 'd'

	)

1142 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_5
 'e'

	)

1143 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_6
 'f'

	)

1144 
	#ORBIT_IMPL_CORBA_£quí˚_IIOP_Li°íPoöt_7
 's'

	)

1145 #i‡!
deföed
(
_CORBA_£quí˚_IIOP_Li°íPoöt_deföed
)

1146 
	#_CORBA_£quí˚_IIOP_Li°íPoöt_deföed
 1

	)

1147 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
IIOP_Li°íPoöt
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_IIOP_Li°íPoöt
;

1149 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_0
)

1150 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_0
 'i'

	)

1151 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_1
 'o'

	)

1152 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_2
 'p'

	)

1153 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_3
 '_'

	)

1154 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_4
 'd'

	)

1155 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_5
 'e'

	)

1156 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_6
 'f'

	)

1157 
	#TC_IMPL_TC_CORBA_£quí˚_IIOP_Li°íPoöt_7
 's'

	)

1158 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1163 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_IIOP_Li°íPoöt_°ru˘
;

1164 
	#TC_CORBA_£quí˚_IIOP_Li°íPoöt
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_IIOP_Li°íPoöt_°ru˘
)

	)

1166 
	#CORBA_£quí˚_IIOP_Li°íPoöt__Æloc
(Ë((
CORBA_£quí˚_IIOP_Li°íPoöt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
))

	)

1167 
	#CORBA_£quí˚_IIOP_Li°íPoöt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
,(m),(d))

	)

1168 
	#CORBA_£quí˚_IIOP_Li°íPoöt_Ælocbuf
(
l
Ë((
IIOP_Li°íPoöt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
, (l)))

	)

1169 
	#CORBA_£quí˚_IIOP_Li°íPoöt_Ælocbuf
(
l
Ë((
IIOP_Li°íPoöt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
, (l)))

	)

1171 #i‡!
deföed
(
_IIOP_Li°íPoötLi°_deföed
)

1172 
	#_IIOP_Li°íPoötLi°_deföed
 1

	)

1173 
CORBA_£quí˚_IIOP_Li°íPoöt
 
	tIIOP_Li°íPoötLi°
;

1174 
	#IIOP_Li°íPoötLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_IIOP_Li°íPoöt_m¨shÆ
((x),(y),(z))

	)

1175 
	#IIOP_Li°íPoötLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_IIOP_Li°íPoöt_dem¨shÆ
((x),(y),(z),(i))

	)

1176 #i‡!
deföed
(
TC_IMPL_TC_IIOP_Li°íPoötLi°_0
)

1177 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_0
 'i'

	)

1178 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_1
 'o'

	)

1179 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_2
 'p'

	)

1180 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_3
 '_'

	)

1181 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_4
 'd'

	)

1182 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_5
 'e'

	)

1183 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_6
 'f'

	)

1184 
	#TC_IMPL_TC_IIOP_Li°íPoötLi°_7
 's'

	)

1185 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1190 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IIOP_Li°íPoötLi°_°ru˘
;

1191 
	#TC_IIOP_Li°íPoötLi°
 ((
CORBA_Ty≥Code
)&
TC_IIOP_Li°íPoötLi°_°ru˘
)

	)

1193 
	#IIOP_Li°íPoötLi°__Æloc
(Ë((
IIOP_Li°íPoötLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
))

	)

1194 
	#IIOP_Li°íPoötLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
,(m),(d))

	)

1195 
	#IIOP_Li°íPoötLi°_Ælocbuf
(
l
Ë((
IIOP_Li°íPoöt
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IIOP_Li°íPoöt
, (l)))

	)

1197 #i‡!
deföed
(
_IIOP_BiDúIIOPSîvi˚C⁄ãxt_deföed
)

1198 
	#_IIOP_BiDúIIOPSîvi˚C⁄ãxt_deföed
 1

	)

1199 
IIOP_BiDúIIOPSîvi˚C⁄ãxt_ty≥
 
	tIIOP_BiDúIIOPSîvi˚C⁄ãxt
;

1200 
	sIIOP_BiDúIIOPSîvi˚C⁄ãxt_ty≥
 {

1201 
IIOP_Li°íPoötLi°
 
	gli°í_poöts
;

1204 #i‡!
deföed
(
TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_0
)

1205 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_0
 'i'

	)

1206 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_1
 'o'

	)

1207 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_2
 'p'

	)

1208 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_3
 '_'

	)

1209 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_4
 'd'

	)

1210 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_5
 'e'

	)

1211 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_6
 'f'

	)

1212 
	#TC_IMPL_TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_7
 's'

	)

1213 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1218 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_°ru˘
;

1219 
	#TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt_°ru˘
)

	)

1221 
	#IIOP_BiDúIIOPSîvi˚C⁄ãxt__Æloc
(Ë((
IIOP_BiDúIIOPSîvi˚C⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt
))

	)

1222 
	#IIOP_BiDúIIOPSîvi˚C⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IIOP_BiDúIIOPSîvi˚C⁄ãxt
,(m),(d))

	)

1224 #i‡!
deföed
(
_GIOP_Vîsi⁄_deföed
)

1225 
	#_GIOP_Vîsi⁄_deföed
 1

	)

1226 
GIOP_Vîsi⁄_ty≥
 
	tGIOP_Vîsi⁄
;

1227 
	sGIOP_Vîsi⁄_ty≥
 {

1228 
CORBA_o˘ë
 
	gmaj‹
;

1229 
CORBA_o˘ë
 
	gmö‹
;

1232 #i‡!
deföed
(
TC_IMPL_TC_GIOP_Vîsi⁄_0
)

1233 
	#TC_IMPL_TC_GIOP_Vîsi⁄_0
 'i'

	)

1234 
	#TC_IMPL_TC_GIOP_Vîsi⁄_1
 'o'

	)

1235 
	#TC_IMPL_TC_GIOP_Vîsi⁄_2
 'p'

	)

1236 
	#TC_IMPL_TC_GIOP_Vîsi⁄_3
 '_'

	)

1237 
	#TC_IMPL_TC_GIOP_Vîsi⁄_4
 'd'

	)

1238 
	#TC_IMPL_TC_GIOP_Vîsi⁄_5
 'e'

	)

1239 
	#TC_IMPL_TC_GIOP_Vîsi⁄_6
 'f'

	)

1240 
	#TC_IMPL_TC_GIOP_Vîsi⁄_7
 's'

	)

1241 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1246 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_Vîsi⁄_°ru˘
;

1247 
	#TC_GIOP_Vîsi⁄
 ((
CORBA_Ty≥Code
)&
TC_GIOP_Vîsi⁄_°ru˘
)

	)

1249 
	#GIOP_Vîsi⁄__Æloc
(Ë((
GIOP_Vîsi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_Vîsi⁄
))

	)

1250 
	#GIOP_Vîsi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_Vîsi⁄
,(m),(d))

	)

1252 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

1253 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

1254 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1255 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1256 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1257 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1258 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1259 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1260 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1261 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1262 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

1263 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

1264 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

1266 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

1267 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1268 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1269 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1270 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1271 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1272 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1273 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1274 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1275 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1280 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

1281 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

1283 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

1284 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

1285 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1286 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1288 #i‡!
deföed
(
_GIOP_PröcùÆ_deföed
)

1289 
	#_GIOP_PröcùÆ_deföed
 1

	)

1290 
CORBA_£quí˚_CORBA_o˘ë
 
	tGIOP_PröcùÆ
;

1291 
	#GIOP_PröcùÆ_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

1292 
	#GIOP_PröcùÆ_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

1293 #i‡!
deföed
(
TC_IMPL_TC_GIOP_PröcùÆ_0
)

1294 
	#TC_IMPL_TC_GIOP_PröcùÆ_0
 'i'

	)

1295 
	#TC_IMPL_TC_GIOP_PröcùÆ_1
 'o'

	)

1296 
	#TC_IMPL_TC_GIOP_PröcùÆ_2
 'p'

	)

1297 
	#TC_IMPL_TC_GIOP_PröcùÆ_3
 '_'

	)

1298 
	#TC_IMPL_TC_GIOP_PröcùÆ_4
 'd'

	)

1299 
	#TC_IMPL_TC_GIOP_PröcùÆ_5
 'e'

	)

1300 
	#TC_IMPL_TC_GIOP_PröcùÆ_6
 'f'

	)

1301 
	#TC_IMPL_TC_GIOP_PröcùÆ_7
 's'

	)

1302 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1307 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_PröcùÆ_°ru˘
;

1308 
	#TC_GIOP_PröcùÆ
 ((
CORBA_Ty≥Code
)&
TC_GIOP_PröcùÆ_°ru˘
)

	)

1310 
	#GIOP_PröcùÆ__Æloc
(Ë((
GIOP_PröcùÆ
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

1311 
	#GIOP_PröcùÆ__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

1312 
	#GIOP_PröcùÆ_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1314 #i‡!
deföed
(
_GIOP_MsgTy≥_1_1_deföed
)

1315 
	#_GIOP_MsgTy≥_1_1_deföed
 1

	)

1317 
	gGIOP_Reque°
,

1318 
	gGIOP_Rïly
,

1319 
	gGIOP_C™˚lReque°
,

1320 
	gGIOP_LoˇãReque°
,

1321 
	gGIOP_LoˇãRïly
,

1322 
	gGIOP_Clo£C⁄√˘i⁄
,

1323 
	gGIOP_MesßgeEº‹
,

1324 
	gGIOP_Føgmít


1325 } 
	tGIOP_MsgTy≥_1_1
;

1326 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MsgTy≥_1_1_0
)

1327 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_0
 'i'

	)

1328 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_1
 'o'

	)

1329 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_2
 'p'

	)

1330 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_3
 '_'

	)

1331 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_4
 'd'

	)

1332 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_5
 'e'

	)

1333 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_6
 'f'

	)

1334 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_1_7
 's'

	)

1335 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1340 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MsgTy≥_1_1_°ru˘
;

1341 
	#TC_GIOP_MsgTy≥_1_1
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MsgTy≥_1_1_°ru˘
)

	)

1344 #i‡!
deföed
(
_GIOP_MsgTy≥_1_2_deföed
)

1345 
	#_GIOP_MsgTy≥_1_2_deföed
 1

	)

1346 
GIOP_MsgTy≥_1_1
 
	tGIOP_MsgTy≥_1_2
;

1347 
	#GIOP_MsgTy≥_1_2_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_MsgTy≥_1_1_m¨shÆ
((x),(y),(z))

	)

1348 
	#GIOP_MsgTy≥_1_2_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_MsgTy≥_1_1_dem¨shÆ
((x),(y),(z),(i))

	)

1349 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MsgTy≥_1_2_0
)

1350 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_0
 'i'

	)

1351 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_1
 'o'

	)

1352 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_2
 'p'

	)

1353 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_3
 '_'

	)

1354 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_4
 'd'

	)

1355 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_5
 'e'

	)

1356 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_6
 'f'

	)

1357 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_2_7
 's'

	)

1358 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1363 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MsgTy≥_1_2_°ru˘
;

1364 
	#TC_GIOP_MsgTy≥_1_2
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MsgTy≥_1_2_°ru˘
)

	)

1366 
	#GIOP_MsgTy≥_1_2__Æloc
(Ë((
GIOP_MsgTy≥_1_2
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_MsgTy≥_1_1
))

	)

1367 
	#GIOP_MsgTy≥_1_2__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_MsgTy≥_1_1
,(m),(d))

	)

1369 #i‡!
deföed
(
_GIOP_MsgTy≥_1_3_deföed
)

1370 
	#_GIOP_MsgTy≥_1_3_deföed
 1

	)

1371 
GIOP_MsgTy≥_1_1
 
	tGIOP_MsgTy≥_1_3
;

1372 
	#GIOP_MsgTy≥_1_3_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_MsgTy≥_1_1_m¨shÆ
((x),(y),(z))

	)

1373 
	#GIOP_MsgTy≥_1_3_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_MsgTy≥_1_1_dem¨shÆ
((x),(y),(z),(i))

	)

1374 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MsgTy≥_1_3_0
)

1375 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_0
 'i'

	)

1376 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_1
 'o'

	)

1377 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_2
 'p'

	)

1378 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_3
 '_'

	)

1379 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_4
 'd'

	)

1380 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_5
 'e'

	)

1381 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_6
 'f'

	)

1382 
	#TC_IMPL_TC_GIOP_MsgTy≥_1_3_7
 's'

	)

1383 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1388 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MsgTy≥_1_3_°ru˘
;

1389 
	#TC_GIOP_MsgTy≥_1_3
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MsgTy≥_1_3_°ru˘
)

	)

1391 
	#GIOP_MsgTy≥_1_3__Æloc
(Ë((
GIOP_MsgTy≥_1_3
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_MsgTy≥_1_1
))

	)

1392 
	#GIOP_MsgTy≥_1_3__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_MsgTy≥_1_1
,(m),(d))

	)

1394 #i‡!
deföed
(
_GIOP_MesßgeHódî_1_0_deföed
)

1395 
	#_GIOP_MesßgeHódî_1_0_deföed
 1

	)

1396 
GIOP_MesßgeHódî_1_0_ty≥
 
	tGIOP_MesßgeHódî_1_0
;

1397 
	sGIOP_MesßgeHódî_1_0_ty≥
 {

1398 
CORBA_ch¨
 
	gmagic
[4];

1399 
GIOP_Vîsi⁄
 
	gGIOP_vîsi⁄
;

1400 
CORBA_boﬁón
 
	gbyã_‹dî
;

1401 
CORBA_o˘ë
 
	gmesßge_ty≥
;

1402 
CORBA_unsig√d_l⁄g
 
	gmesßge_size
;

1405 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MesßgeHódî_1_0_0
)

1406 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_0
 'i'

	)

1407 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_1
 'o'

	)

1408 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_2
 'p'

	)

1409 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_3
 '_'

	)

1410 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_4
 'd'

	)

1411 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_5
 'e'

	)

1412 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_6
 'f'

	)

1413 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_0_7
 's'

	)

1414 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1419 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MesßgeHódî_1_0_°ru˘
;

1420 
	#TC_GIOP_MesßgeHódî_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MesßgeHódî_1_0_°ru˘
)

	)

1422 
	#GIOP_MesßgeHódî_1_0__Æloc
(Ë((
GIOP_MesßgeHódî_1_0
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_MesßgeHódî_1_0
))

	)

1423 
	#GIOP_MesßgeHódî_1_0__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_MesßgeHódî_1_0
,(m),(d))

	)

1425 #i‡!
deföed
(
_GIOP_MesßgeHódî_1_1_deföed
)

1426 
	#_GIOP_MesßgeHódî_1_1_deföed
 1

	)

1427 
GIOP_MesßgeHódî_1_1_ty≥
 
	tGIOP_MesßgeHódî_1_1
;

1428 
	sGIOP_MesßgeHódî_1_1_ty≥
 {

1429 
CORBA_ch¨
 
	gmagic
[4];

1430 
GIOP_Vîsi⁄
 
	gGIOP_vîsi⁄
;

1431 
CORBA_o˘ë
 
	gÊags
;

1432 
CORBA_o˘ë
 
	gmesßge_ty≥
;

1433 
CORBA_unsig√d_l⁄g
 
	gmesßge_size
;

1436 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MesßgeHódî_1_1_0
)

1437 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_0
 'i'

	)

1438 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_1
 'o'

	)

1439 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_2
 'p'

	)

1440 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_3
 '_'

	)

1441 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_4
 'd'

	)

1442 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_5
 'e'

	)

1443 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_6
 'f'

	)

1444 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_1_7
 's'

	)

1445 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1450 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MesßgeHódî_1_1_°ru˘
;

1451 
	#TC_GIOP_MesßgeHódî_1_1
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MesßgeHódî_1_1_°ru˘
)

	)

1453 
	#GIOP_MesßgeHódî_1_1__Æloc
(Ë((
GIOP_MesßgeHódî_1_1
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_MesßgeHódî_1_1
))

	)

1454 
	#GIOP_MesßgeHódî_1_1__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_MesßgeHódî_1_1
,(m),(d))

	)

1456 #i‡!
deföed
(
_GIOP_MesßgeHódî_1_2_deföed
)

1457 
	#_GIOP_MesßgeHódî_1_2_deföed
 1

	)

1458 
GIOP_MesßgeHódî_1_1
 
	tGIOP_MesßgeHódî_1_2
;

1459 
	#GIOP_MesßgeHódî_1_2_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_MesßgeHódî_1_1_m¨shÆ
((x),(y),(z))

	)

1460 
	#GIOP_MesßgeHódî_1_2_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_MesßgeHódî_1_1_dem¨shÆ
((x),(y),(z),(i))

	)

1461 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MesßgeHódî_1_2_0
)

1462 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_0
 'i'

	)

1463 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_1
 'o'

	)

1464 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_2
 'p'

	)

1465 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_3
 '_'

	)

1466 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_4
 'd'

	)

1467 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_5
 'e'

	)

1468 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_6
 'f'

	)

1469 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_2_7
 's'

	)

1470 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1475 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MesßgeHódî_1_2_°ru˘
;

1476 
	#TC_GIOP_MesßgeHódî_1_2
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MesßgeHódî_1_2_°ru˘
)

	)

1478 
	#GIOP_MesßgeHódî_1_2__Æloc
(Ë((
GIOP_MesßgeHódî_1_2
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_MesßgeHódî_1_1
))

	)

1479 
	#GIOP_MesßgeHódî_1_2__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_MesßgeHódî_1_1
,(m),(d))

	)

1481 #i‡!
deföed
(
_GIOP_MesßgeHódî_1_3_deföed
)

1482 
	#_GIOP_MesßgeHódî_1_3_deföed
 1

	)

1483 
GIOP_MesßgeHódî_1_1
 
	tGIOP_MesßgeHódî_1_3
;

1484 
	#GIOP_MesßgeHódî_1_3_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_MesßgeHódî_1_1_m¨shÆ
((x),(y),(z))

	)

1485 
	#GIOP_MesßgeHódî_1_3_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_MesßgeHódî_1_1_dem¨shÆ
((x),(y),(z),(i))

	)

1486 #i‡!
deföed
(
TC_IMPL_TC_GIOP_MesßgeHódî_1_3_0
)

1487 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_0
 'i'

	)

1488 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_1
 'o'

	)

1489 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_2
 'p'

	)

1490 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_3
 '_'

	)

1491 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_4
 'd'

	)

1492 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_5
 'e'

	)

1493 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_6
 'f'

	)

1494 
	#TC_IMPL_TC_GIOP_MesßgeHódî_1_3_7
 's'

	)

1495 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1500 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_MesßgeHódî_1_3_°ru˘
;

1501 
	#TC_GIOP_MesßgeHódî_1_3
 ((
CORBA_Ty≥Code
)&
TC_GIOP_MesßgeHódî_1_3_°ru˘
)

	)

1503 
	#GIOP_MesßgeHódî_1_3__Æloc
(Ë((
GIOP_MesßgeHódî_1_3
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_MesßgeHódî_1_1
))

	)

1504 
	#GIOP_MesßgeHódî_1_3__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_MesßgeHódî_1_1
,(m),(d))

	)

1506 #i‡!
deföed
(
_GIOP_Reque°Hódî_1_0_deföed
)

1507 
	#_GIOP_Reque°Hódî_1_0_deföed
 1

	)

1508 
GIOP_Reque°Hódî_1_0_ty≥
 
	tGIOP_Reque°Hódî_1_0
;

1509 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

1510 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

1511 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1512 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1513 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1514 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1515 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1516 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1517 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1518 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1519 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

1520 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

1521 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

1523 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

1524 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1525 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1526 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1527 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1528 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1529 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1530 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1531 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1532 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1537 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

1538 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

1540 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

1541 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

1542 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1543 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1545 
	sGIOP_Reque°Hódî_1_0_ty≥
 {

1546 
IOP_Sîvi˚C⁄ãxtLi°
 
	g£rvi˚_c⁄ãxt
;

1547 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

1548 
CORBA_boﬁón
 
	gª•⁄£_ex≥˘ed
;

1549 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

1550 
CORBA_°rög
 
	g›î©i⁄
;

1551 
GIOP_PröcùÆ
 
	gªque°ög_¥öcùÆ
;

1554 #i‡!
deföed
(
TC_IMPL_TC_GIOP_Reque°Hódî_1_0_0
)

1555 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_0
 'i'

	)

1556 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_1
 'o'

	)

1557 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_2
 'p'

	)

1558 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_3
 '_'

	)

1559 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_4
 'd'

	)

1560 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_5
 'e'

	)

1561 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_6
 'f'

	)

1562 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_0_7
 's'

	)

1563 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1568 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_Reque°Hódî_1_0_°ru˘
;

1569 
	#TC_GIOP_Reque°Hódî_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_Reque°Hódî_1_0_°ru˘
)

	)

1571 
	#GIOP_Reque°Hódî_1_0__Æloc
(Ë((
GIOP_Reque°Hódî_1_0
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_Reque°Hódî_1_0
))

	)

1572 
	#GIOP_Reque°Hódî_1_0__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_Reque°Hódî_1_0
,(m),(d))

	)

1574 #i‡!
deföed
(
_GIOP_Reque°Hódî_1_1_deföed
)

1575 
	#_GIOP_Reque°Hódî_1_1_deföed
 1

	)

1576 
GIOP_Reque°Hódî_1_1_ty≥
 
	tGIOP_Reque°Hódî_1_1
;

1577 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

1578 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

1579 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1580 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1581 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1582 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1583 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1584 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1585 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1586 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1587 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

1588 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

1589 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

1591 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

1592 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1593 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1594 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1595 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1596 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1597 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1598 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1599 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1600 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1605 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

1606 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

1608 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

1609 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

1610 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1611 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1613 
	sGIOP_Reque°Hódî_1_1_ty≥
 {

1614 
IOP_Sîvi˚C⁄ãxtLi°
 
	g£rvi˚_c⁄ãxt
;

1615 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

1616 
CORBA_boﬁón
 
	gª•⁄£_ex≥˘ed
;

1617 
CORBA_o˘ë
 
	gª£rved
[3];

1618 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

1619 
CORBA_°rög
 
	g›î©i⁄
;

1620 
GIOP_PröcùÆ
 
	gªque°ög_¥öcùÆ
;

1623 #i‡!
deföed
(
TC_IMPL_TC_GIOP_Reque°Hódî_1_1_0
)

1624 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_0
 'i'

	)

1625 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_1
 'o'

	)

1626 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_2
 'p'

	)

1627 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_3
 '_'

	)

1628 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_4
 'd'

	)

1629 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_5
 'e'

	)

1630 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_6
 'f'

	)

1631 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_1_7
 's'

	)

1632 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1637 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_Reque°Hódî_1_1_°ru˘
;

1638 
	#TC_GIOP_Reque°Hódî_1_1
 ((
CORBA_Ty≥Code
)&
TC_GIOP_Reque°Hódî_1_1_°ru˘
)

	)

1640 
	#GIOP_Reque°Hódî_1_1__Æloc
(Ë((
GIOP_Reque°Hódî_1_1
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_Reque°Hódî_1_1
))

	)

1641 
	#GIOP_Reque°Hódî_1_1__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_Reque°Hódî_1_1
,(m),(d))

	)

1643 #i‡!
deföed
(
_GIOP_AddªssögDi•osôi⁄_deföed
)

1644 
	#_GIOP_AddªssögDi•osôi⁄_deföed
 1

	)

1645 
CORBA_sh‹t
 
	tGIOP_AddªssögDi•osôi⁄
;

1646 
	#GIOP_AddªssögDi•osôi⁄_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

1647 
	#GIOP_AddªssögDi•osôi⁄_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

1648 #i‡!
deföed
(
TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_0
)

1649 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_0
 'i'

	)

1650 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_1
 'o'

	)

1651 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_2
 'p'

	)

1652 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_3
 '_'

	)

1653 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_4
 'd'

	)

1654 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_5
 'e'

	)

1655 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_6
 'f'

	)

1656 
	#TC_IMPL_TC_GIOP_AddªssögDi•osôi⁄_7
 's'

	)

1657 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1662 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_AddªssögDi•osôi⁄_°ru˘
;

1663 
	#TC_GIOP_AddªssögDi•osôi⁄
 ((
CORBA_Ty≥Code
)&
TC_GIOP_AddªssögDi•osôi⁄_°ru˘
)

	)

1665 
	#GIOP_AddªssögDi•osôi⁄__Æloc
(Ë((
GIOP_AddªssögDi•osôi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_sh‹t
))

	)

1666 
	#GIOP_AddªssögDi•osôi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_sh‹t
,(m),(d))

	)

1668 #i‚de‡
GIOP_KeyAddr


1669 
	#GIOP_KeyAddr
 0

	)

1672 #i‚de‡
GIOP_ProfûeAddr


1673 
	#GIOP_ProfûeAddr
 1

	)

1676 #i‚de‡
GIOP_Re„ªn˚Addr


1677 
	#GIOP_Re„ªn˚Addr
 2

	)

1680 #i‡!
deföed
(
_GIOP_IORAddªssögInfo_deföed
)

1681 
	#_GIOP_IORAddªssögInfo_deföed
 1

	)

1682 
GIOP_IORAddªssögInfo_ty≥
 
	tGIOP_IORAddªssögInfo
;

1683 
	sGIOP_IORAddªssögInfo_ty≥
 {

1684 
CORBA_unsig√d_l⁄g
 
	g£À˘ed_¥ofûe_ödex
;

1685 
IOP_IOR
 
	gi‹
;

1688 #i‡!
deföed
(
TC_IMPL_TC_GIOP_IORAddªssögInfo_0
)

1689 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_0
 'i'

	)

1690 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_1
 'o'

	)

1691 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_2
 'p'

	)

1692 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_3
 '_'

	)

1693 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_4
 'd'

	)

1694 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_5
 'e'

	)

1695 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_6
 'f'

	)

1696 
	#TC_IMPL_TC_GIOP_IORAddªssögInfo_7
 's'

	)

1697 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1702 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_IORAddªssögInfo_°ru˘
;

1703 
	#TC_GIOP_IORAddªssögInfo
 ((
CORBA_Ty≥Code
)&
TC_GIOP_IORAddªssögInfo_°ru˘
)

	)

1705 
	#GIOP_IORAddªssögInfo__Æloc
(Ë((
GIOP_IORAddªssögInfo
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_IORAddªssögInfo
))

	)

1706 
	#GIOP_IORAddªssögInfo__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_IORAddªssögInfo
,(m),(d))

	)

1708 #i‡!
deföed
(
_GIOP_T¨gëAddªss_deföed
)

1709 
	#_GIOP_T¨gëAddªss_deföed
 1

	)

1710 
GIOP_T¨gëAddªss_ty≥
 
	tGIOP_T¨gëAddªss
;

1711 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

1712 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

1713 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1714 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1715 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1716 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1717 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1718 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1719 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1720 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1721 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

1722 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

1723 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

1725 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

1726 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1727 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1728 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1729 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1730 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1731 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1732 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1733 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1734 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1739 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

1740 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

1742 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

1743 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

1744 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1745 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

1747 
	sGIOP_T¨gëAddªss_ty≥
 {

1748 
GIOP_AddªssögDi•osôi⁄
 
	g_d
;

1750 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

1751 
IOP_TaggedProfûe
 
	g¥ofûe
;

1752 
GIOP_IORAddªssögInfo
 
	gi‹
;

1753 } 
	g_u
;

1755 #i‡!
deföed
(
TC_IMPL_TC_GIOP_T¨gëAddªss_0
)

1756 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_0
 'i'

	)

1757 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_1
 'o'

	)

1758 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_2
 'p'

	)

1759 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_3
 '_'

	)

1760 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_4
 'd'

	)

1761 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_5
 'e'

	)

1762 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_6
 'f'

	)

1763 
	#TC_IMPL_TC_GIOP_T¨gëAddªss_7
 's'

	)

1764 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1769 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_T¨gëAddªss_°ru˘
;

1770 
	#TC_GIOP_T¨gëAddªss
 ((
CORBA_Ty≥Code
)&
TC_GIOP_T¨gëAddªss_°ru˘
)

	)

1772 
	#GIOP_T¨gëAddªss__Æloc
(Ë((
GIOP_T¨gëAddªss
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_T¨gëAddªss
))

	)

1773 
	#GIOP_T¨gëAddªss__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_T¨gëAddªss
,(m),(d))

	)

1775 #i‡!
deföed
(
_GIOP_Reque°Hódî_1_2_deföed
)

1776 
	#_GIOP_Reque°Hódî_1_2_deföed
 1

	)

1777 
GIOP_Reque°Hódî_1_2_ty≥
 
	tGIOP_Reque°Hódî_1_2
;

1778 
	sGIOP_Reque°Hódî_1_2_ty≥
 {

1779 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

1780 
CORBA_o˘ë
 
	gª•⁄£_Êags
;

1781 
CORBA_o˘ë
 
	gª£rved
[3];

1782 
GIOP_T¨gëAddªss
 
	gèrgë
;

1783 
CORBA_°rög
 
	g›î©i⁄
;

1784 
IOP_Sîvi˚C⁄ãxtLi°
 
	g£rvi˚_c⁄ãxt
;

1787 #i‡!
deföed
(
TC_IMPL_TC_GIOP_Reque°Hódî_1_2_0
)

1788 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_0
 'i'

	)

1789 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_1
 'o'

	)

1790 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_2
 'p'

	)

1791 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_3
 '_'

	)

1792 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_4
 'd'

	)

1793 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_5
 'e'

	)

1794 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_6
 'f'

	)

1795 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_2_7
 's'

	)

1796 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1801 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_Reque°Hódî_1_2_°ru˘
;

1802 
	#TC_GIOP_Reque°Hódî_1_2
 ((
CORBA_Ty≥Code
)&
TC_GIOP_Reque°Hódî_1_2_°ru˘
)

	)

1804 
	#GIOP_Reque°Hódî_1_2__Æloc
(Ë((
GIOP_Reque°Hódî_1_2
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_Reque°Hódî_1_2
))

	)

1805 
	#GIOP_Reque°Hódî_1_2__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_Reque°Hódî_1_2
,(m),(d))

	)

1807 #i‡!
deföed
(
_GIOP_Reque°Hódî_1_3_deföed
)

1808 
	#_GIOP_Reque°Hódî_1_3_deföed
 1

	)

1809 
GIOP_Reque°Hódî_1_2
 
	tGIOP_Reque°Hódî_1_3
;

1810 
	#GIOP_Reque°Hódî_1_3_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_Reque°Hódî_1_2_m¨shÆ
((x),(y),(z))

	)

1811 
	#GIOP_Reque°Hódî_1_3_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_Reque°Hódî_1_2_dem¨shÆ
((x),(y),(z),(i))

	)

1812 #i‡!
deföed
(
TC_IMPL_TC_GIOP_Reque°Hódî_1_3_0
)

1813 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_0
 'i'

	)

1814 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_1
 'o'

	)

1815 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_2
 'p'

	)

1816 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_3
 '_'

	)

1817 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_4
 'd'

	)

1818 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_5
 'e'

	)

1819 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_6
 'f'

	)

1820 
	#TC_IMPL_TC_GIOP_Reque°Hódî_1_3_7
 's'

	)

1821 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1826 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_Reque°Hódî_1_3_°ru˘
;

1827 
	#TC_GIOP_Reque°Hódî_1_3
 ((
CORBA_Ty≥Code
)&
TC_GIOP_Reque°Hódî_1_3_°ru˘
)

	)

1829 
	#GIOP_Reque°Hódî_1_3__Æloc
(Ë((
GIOP_Reque°Hódî_1_3
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_Reque°Hódî_1_2
))

	)

1830 
	#GIOP_Reque°Hódî_1_3__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_Reque°Hódî_1_2
,(m),(d))

	)

1832 #i‡!
deföed
(
_GIOP_RïlySètusTy≥_1_0_deföed
)

1833 
	#_GIOP_RïlySètusTy≥_1_0_deföed
 1

	)

1835 
	gGIOP_NO_EXCEPTION
,

1836 
	gGIOP_USER_EXCEPTION
,

1837 
	gGIOP_SYSTEM_EXCEPTION
,

1838 
	gGIOP_LOCATION_FORWARD


1839 } 
	tGIOP_RïlySètusTy≥_1_0
;

1840 #i‡!
deföed
(
TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_0
)

1841 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_0
 'i'

	)

1842 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_1
 'o'

	)

1843 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_2
 'p'

	)

1844 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_3
 '_'

	)

1845 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_4
 'd'

	)

1846 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_5
 'e'

	)

1847 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_6
 'f'

	)

1848 
	#TC_IMPL_TC_GIOP_RïlySètusTy≥_1_0_7
 's'

	)

1849 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1854 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_RïlySètusTy≥_1_0_°ru˘
;

1855 
	#TC_GIOP_RïlySètusTy≥_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_RïlySètusTy≥_1_0_°ru˘
)

	)

1858 #i‡!
deföed
(
_GIOP_RïlyHódî_1_0_deföed
)

1859 
	#_GIOP_RïlyHódî_1_0_deföed
 1

	)

1860 
GIOP_RïlyHódî_1_0_ty≥
 
	tGIOP_RïlyHódî_1_0
;

1861 
	sGIOP_RïlyHódî_1_0_ty≥
 {

1862 
IOP_Sîvi˚C⁄ãxtLi°
 
	g£rvi˚_c⁄ãxt
;

1863 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

1864 
GIOP_RïlySètusTy≥_1_0
 
	gª∂y_°©us
;

1867 #i‡!
deföed
(
TC_IMPL_TC_GIOP_RïlyHódî_1_0_0
)

1868 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_0
 'i'

	)

1869 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_1
 'o'

	)

1870 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_2
 'p'

	)

1871 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_3
 '_'

	)

1872 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_4
 'd'

	)

1873 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_5
 'e'

	)

1874 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_6
 'f'

	)

1875 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_0_7
 's'

	)

1876 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1881 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_RïlyHódî_1_0_°ru˘
;

1882 
	#TC_GIOP_RïlyHódî_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_RïlyHódî_1_0_°ru˘
)

	)

1884 
	#GIOP_RïlyHódî_1_0__Æloc
(Ë((
GIOP_RïlyHódî_1_0
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_RïlyHódî_1_0
))

	)

1885 
	#GIOP_RïlyHódî_1_0__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_RïlyHódî_1_0
,(m),(d))

	)

1887 #i‡!
deföed
(
_GIOP_RïlyHódî_1_1_deföed
)

1888 
	#_GIOP_RïlyHódî_1_1_deföed
 1

	)

1889 
GIOP_RïlyHódî_1_0
 
	tGIOP_RïlyHódî_1_1
;

1890 
	#GIOP_RïlyHódî_1_1_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_RïlyHódî_1_0_m¨shÆ
((x),(y),(z))

	)

1891 
	#GIOP_RïlyHódî_1_1_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_RïlyHódî_1_0_dem¨shÆ
((x),(y),(z),(i))

	)

1892 #i‡!
deföed
(
TC_IMPL_TC_GIOP_RïlyHódî_1_1_0
)

1893 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_0
 'i'

	)

1894 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_1
 'o'

	)

1895 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_2
 'p'

	)

1896 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_3
 '_'

	)

1897 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_4
 'd'

	)

1898 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_5
 'e'

	)

1899 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_6
 'f'

	)

1900 
	#TC_IMPL_TC_GIOP_RïlyHódî_1_1_7
 's'

	)

1901 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1906 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_RïlyHódî_1_1_°ru˘
;

1907 
	#TC_GIOP_RïlyHódî_1_1
 ((
CORBA_Ty≥Code
)&
TC_GIOP_RïlyHódî_1_1_°ru˘
)

	)

1909 
	#GIOP_RïlyHódî_1_1__Æloc
(Ë((
GIOP_RïlyHódî_1_1
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_RïlyHódî_1_0
))

	)

1910 
	#GIOP_RïlyHódî_1_1__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_RïlyHódî_1_0
,(m),(d))

	)

1912 #i‡!
deföed
(
_GIOP_Sy°emEx˚±i⁄RïlyBody_deföed
)

1913 
	#_GIOP_Sy°emEx˚±i⁄RïlyBody_deföed
 1

	)

1914 
GIOP_Sy°emEx˚±i⁄RïlyBody_ty≥
 
	tGIOP_Sy°emEx˚±i⁄RïlyBody
;

1915 
	sGIOP_Sy°emEx˚±i⁄RïlyBody_ty≥
 {

1916 
CORBA_°rög
 
	gex˚±i⁄_id
;

1917 
CORBA_unsig√d_l⁄g
 
	gmö‹_code_vÆue
;

1918 
CORBA_unsig√d_l⁄g
 
	gcom∂ëi⁄_°©us
;

1921 #i‡!
deföed
(
TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_0
)

1922 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_0
 'i'

	)

1923 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_1
 'o'

	)

1924 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_2
 'p'

	)

1925 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_3
 '_'

	)

1926 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_4
 'd'

	)

1927 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_5
 'e'

	)

1928 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_6
 'f'

	)

1929 
	#TC_IMPL_TC_GIOP_Sy°emEx˚±i⁄RïlyBody_7
 's'

	)

1930 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1935 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_Sy°emEx˚±i⁄RïlyBody_°ru˘
;

1936 
	#TC_GIOP_Sy°emEx˚±i⁄RïlyBody
 ((
CORBA_Ty≥Code
)&
TC_GIOP_Sy°emEx˚±i⁄RïlyBody_°ru˘
)

	)

1938 
	#GIOP_Sy°emEx˚±i⁄RïlyBody__Æloc
(Ë((
GIOP_Sy°emEx˚±i⁄RïlyBody
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_Sy°emEx˚±i⁄RïlyBody
))

	)

1939 
	#GIOP_Sy°emEx˚±i⁄RïlyBody__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_Sy°emEx˚±i⁄RïlyBody
,(m),(d))

	)

1941 #i‡!
deföed
(
_GIOP_C™˚lReque°Hódî_deföed
)

1942 
	#_GIOP_C™˚lReque°Hódî_deföed
 1

	)

1943 
GIOP_C™˚lReque°Hódî_ty≥
 
	tGIOP_C™˚lReque°Hódî
;

1944 
	sGIOP_C™˚lReque°Hódî_ty≥
 {

1945 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

1948 #i‡!
deföed
(
TC_IMPL_TC_GIOP_C™˚lReque°Hódî_0
)

1949 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_0
 'i'

	)

1950 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_1
 'o'

	)

1951 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_2
 'p'

	)

1952 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_3
 '_'

	)

1953 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_4
 'd'

	)

1954 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_5
 'e'

	)

1955 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_6
 'f'

	)

1956 
	#TC_IMPL_TC_GIOP_C™˚lReque°Hódî_7
 's'

	)

1957 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1962 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_C™˚lReque°Hódî_°ru˘
;

1963 
	#TC_GIOP_C™˚lReque°Hódî
 ((
CORBA_Ty≥Code
)&
TC_GIOP_C™˚lReque°Hódî_°ru˘
)

	)

1965 
	#GIOP_C™˚lReque°Hódî__Æloc
(Ë((
GIOP_C™˚lReque°Hódî
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_C™˚lReque°Hódî
))

	)

1966 
	#GIOP_C™˚lReque°Hódî__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_C™˚lReque°Hódî
,(m),(d))

	)

1968 #i‡!
deföed
(
_GIOP_LoˇãReque°Hódî_1_0_deföed
)

1969 
	#_GIOP_LoˇãReque°Hódî_1_0_deföed
 1

	)

1970 
GIOP_LoˇãReque°Hódî_1_0_ty≥
 
	tGIOP_LoˇãReque°Hódî_1_0
;

1971 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

1972 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

1973 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1974 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1975 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1976 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1977 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1978 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1979 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1980 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1981 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

1982 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

1983 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

1985 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

1986 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

1987 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

1988 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

1989 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

1990 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

1991 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

1992 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

1993 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

1994 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


1999 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2000 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2002 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2003 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2004 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2005 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2007 
	sGIOP_LoˇãReque°Hódî_1_0_ty≥
 {

2008 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

2009 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

2012 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_0
)

2013 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_0
 'i'

	)

2014 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_1
 'o'

	)

2015 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_2
 'p'

	)

2016 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_3
 '_'

	)

2017 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_4
 'd'

	)

2018 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_5
 'e'

	)

2019 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_6
 'f'

	)

2020 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_0_7
 's'

	)

2021 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2026 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãReque°Hódî_1_0_°ru˘
;

2027 
	#TC_GIOP_LoˇãReque°Hódî_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãReque°Hódî_1_0_°ru˘
)

	)

2029 
	#GIOP_LoˇãReque°Hódî_1_0__Æloc
(Ë((
GIOP_LoˇãReque°Hódî_1_0
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_LoˇãReque°Hódî_1_0
))

	)

2030 
	#GIOP_LoˇãReque°Hódî_1_0__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_LoˇãReque°Hódî_1_0
,(m),(d))

	)

2032 #i‡!
deföed
(
_GIOP_LoˇãReque°Hódî_1_1_deföed
)

2033 
	#_GIOP_LoˇãReque°Hódî_1_1_deföed
 1

	)

2034 
GIOP_LoˇãReque°Hódî_1_0
 
	tGIOP_LoˇãReque°Hódî_1_1
;

2035 
	#GIOP_LoˇãReque°Hódî_1_1_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_LoˇãReque°Hódî_1_0_m¨shÆ
((x),(y),(z))

	)

2036 
	#GIOP_LoˇãReque°Hódî_1_1_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_LoˇãReque°Hódî_1_0_dem¨shÆ
((x),(y),(z),(i))

	)

2037 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_0
)

2038 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_0
 'i'

	)

2039 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_1
 'o'

	)

2040 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_2
 'p'

	)

2041 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_3
 '_'

	)

2042 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_4
 'd'

	)

2043 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_5
 'e'

	)

2044 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_6
 'f'

	)

2045 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_1_7
 's'

	)

2046 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2051 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãReque°Hódî_1_1_°ru˘
;

2052 
	#TC_GIOP_LoˇãReque°Hódî_1_1
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãReque°Hódî_1_1_°ru˘
)

	)

2054 
	#GIOP_LoˇãReque°Hódî_1_1__Æloc
(Ë((
GIOP_LoˇãReque°Hódî_1_1
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_LoˇãReque°Hódî_1_0
))

	)

2055 
	#GIOP_LoˇãReque°Hódî_1_1__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_LoˇãReque°Hódî_1_0
,(m),(d))

	)

2057 #i‡!
deföed
(
_GIOP_LoˇãReque°Hódî_1_2_deföed
)

2058 
	#_GIOP_LoˇãReque°Hódî_1_2_deföed
 1

	)

2059 
GIOP_LoˇãReque°Hódî_1_2_ty≥
 
	tGIOP_LoˇãReque°Hódî_1_2
;

2060 
	sGIOP_LoˇãReque°Hódî_1_2_ty≥
 {

2061 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

2062 
GIOP_T¨gëAddªss
 
	gèrgë
;

2065 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_0
)

2066 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_0
 'i'

	)

2067 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_1
 'o'

	)

2068 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_2
 'p'

	)

2069 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_3
 '_'

	)

2070 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_4
 'd'

	)

2071 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_5
 'e'

	)

2072 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_6
 'f'

	)

2073 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_2_7
 's'

	)

2074 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2079 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãReque°Hódî_1_2_°ru˘
;

2080 
	#TC_GIOP_LoˇãReque°Hódî_1_2
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãReque°Hódî_1_2_°ru˘
)

	)

2082 
	#GIOP_LoˇãReque°Hódî_1_2__Æloc
(Ë((
GIOP_LoˇãReque°Hódî_1_2
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_LoˇãReque°Hódî_1_2
))

	)

2083 
	#GIOP_LoˇãReque°Hódî_1_2__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_LoˇãReque°Hódî_1_2
,(m),(d))

	)

2085 #i‡!
deföed
(
_GIOP_LoˇãReque°Hódî_1_3_deföed
)

2086 
	#_GIOP_LoˇãReque°Hódî_1_3_deföed
 1

	)

2087 
GIOP_LoˇãReque°Hódî_1_2
 
	tGIOP_LoˇãReque°Hódî_1_3
;

2088 
	#GIOP_LoˇãReque°Hódî_1_3_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_LoˇãReque°Hódî_1_2_m¨shÆ
((x),(y),(z))

	)

2089 
	#GIOP_LoˇãReque°Hódî_1_3_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_LoˇãReque°Hódî_1_2_dem¨shÆ
((x),(y),(z),(i))

	)

2090 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_0
)

2091 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_0
 'i'

	)

2092 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_1
 'o'

	)

2093 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_2
 'p'

	)

2094 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_3
 '_'

	)

2095 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_4
 'd'

	)

2096 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_5
 'e'

	)

2097 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_6
 'f'

	)

2098 
	#TC_IMPL_TC_GIOP_LoˇãReque°Hódî_1_3_7
 's'

	)

2099 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2104 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãReque°Hódî_1_3_°ru˘
;

2105 
	#TC_GIOP_LoˇãReque°Hódî_1_3
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãReque°Hódî_1_3_°ru˘
)

	)

2107 
	#GIOP_LoˇãReque°Hódî_1_3__Æloc
(Ë((
GIOP_LoˇãReque°Hódî_1_3
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_LoˇãReque°Hódî_1_2
))

	)

2108 
	#GIOP_LoˇãReque°Hódî_1_3__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_LoˇãReque°Hódî_1_2
,(m),(d))

	)

2110 #i‡!
deföed
(
_GIOP_LoˇãSètusTy≥_1_0_deföed
)

2111 
	#_GIOP_LoˇãSètusTy≥_1_0_deföed
 1

	)

2113 
	gGIOP_UNKNOWN_OBJECT
,

2114 
	gGIOP_OBJECT_HERE
,

2115 
	gGIOP_OBJECT_FORWARD


2116 } 
	tGIOP_LoˇãSètusTy≥_1_0
;

2117 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_0
)

2118 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_0
 'i'

	)

2119 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_1
 'o'

	)

2120 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_2
 'p'

	)

2121 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_3
 '_'

	)

2122 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_4
 'd'

	)

2123 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_5
 'e'

	)

2124 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_6
 'f'

	)

2125 
	#TC_IMPL_TC_GIOP_LoˇãSètusTy≥_1_0_7
 's'

	)

2126 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2131 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãSètusTy≥_1_0_°ru˘
;

2132 
	#TC_GIOP_LoˇãSètusTy≥_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãSètusTy≥_1_0_°ru˘
)

	)

2135 #i‡!
deföed
(
_GIOP_LoˇãRïlyHódî_1_0_deföed
)

2136 
	#_GIOP_LoˇãRïlyHódî_1_0_deföed
 1

	)

2137 
GIOP_LoˇãRïlyHódî_1_0_ty≥
 
	tGIOP_LoˇãRïlyHódî_1_0
;

2138 
	sGIOP_LoˇãRïlyHódî_1_0_ty≥
 {

2139 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

2140 
GIOP_LoˇãSètusTy≥_1_0
 
	gloˇã_°©us
;

2143 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_0
)

2144 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_0
 'i'

	)

2145 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_1
 'o'

	)

2146 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_2
 'p'

	)

2147 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_3
 '_'

	)

2148 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_4
 'd'

	)

2149 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_5
 'e'

	)

2150 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_6
 'f'

	)

2151 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_0_7
 's'

	)

2152 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2157 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãRïlyHódî_1_0_°ru˘
;

2158 
	#TC_GIOP_LoˇãRïlyHódî_1_0
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãRïlyHódî_1_0_°ru˘
)

	)

2160 
	#GIOP_LoˇãRïlyHódî_1_0__Æloc
(Ë((
GIOP_LoˇãRïlyHódî_1_0
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_LoˇãRïlyHódî_1_0
))

	)

2161 
	#GIOP_LoˇãRïlyHódî_1_0__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_LoˇãRïlyHódî_1_0
,(m),(d))

	)

2163 #i‡!
deföed
(
_GIOP_LoˇãRïlyHódî_1_1_deföed
)

2164 
	#_GIOP_LoˇãRïlyHódî_1_1_deföed
 1

	)

2165 
GIOP_LoˇãRïlyHódî_1_0
 
	tGIOP_LoˇãRïlyHódî_1_1
;

2166 
	#GIOP_LoˇãRïlyHódî_1_1_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_LoˇãRïlyHódî_1_0_m¨shÆ
((x),(y),(z))

	)

2167 
	#GIOP_LoˇãRïlyHódî_1_1_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_LoˇãRïlyHódî_1_0_dem¨shÆ
((x),(y),(z),(i))

	)

2168 #i‡!
deföed
(
TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_0
)

2169 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_0
 'i'

	)

2170 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_1
 'o'

	)

2171 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_2
 'p'

	)

2172 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_3
 '_'

	)

2173 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_4
 'd'

	)

2174 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_5
 'e'

	)

2175 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_6
 'f'

	)

2176 
	#TC_IMPL_TC_GIOP_LoˇãRïlyHódî_1_1_7
 's'

	)

2177 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2182 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_LoˇãRïlyHódî_1_1_°ru˘
;

2183 
	#TC_GIOP_LoˇãRïlyHódî_1_1
 ((
CORBA_Ty≥Code
)&
TC_GIOP_LoˇãRïlyHódî_1_1_°ru˘
)

	)

2185 
	#GIOP_LoˇãRïlyHódî_1_1__Æloc
(Ë((
GIOP_LoˇãRïlyHódî_1_1
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_LoˇãRïlyHódî_1_0
))

	)

2186 
	#GIOP_LoˇãRïlyHódî_1_1__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_LoˇãRïlyHódî_1_0
,(m),(d))

	)

2188 #i‡!
deföed
(
_GIOP_FøgmítHódî_1_2_deföed
)

2189 
	#_GIOP_FøgmítHódî_1_2_deföed
 1

	)

2190 
GIOP_FøgmítHódî_1_2_ty≥
 
	tGIOP_FøgmítHódî_1_2
;

2191 
	sGIOP_FøgmítHódî_1_2_ty≥
 {

2192 
CORBA_unsig√d_l⁄g
 
	gªque°_id
;

2195 #i‡!
deföed
(
TC_IMPL_TC_GIOP_FøgmítHódî_1_2_0
)

2196 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_0
 'i'

	)

2197 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_1
 'o'

	)

2198 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_2
 'p'

	)

2199 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_3
 '_'

	)

2200 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_4
 'd'

	)

2201 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_5
 'e'

	)

2202 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_6
 'f'

	)

2203 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_2_7
 's'

	)

2204 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2209 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_FøgmítHódî_1_2_°ru˘
;

2210 
	#TC_GIOP_FøgmítHódî_1_2
 ((
CORBA_Ty≥Code
)&
TC_GIOP_FøgmítHódî_1_2_°ru˘
)

	)

2212 
	#GIOP_FøgmítHódî_1_2__Æloc
(Ë((
GIOP_FøgmítHódî_1_2
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_FøgmítHódî_1_2
))

	)

2213 
	#GIOP_FøgmítHódî_1_2__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_FøgmítHódî_1_2
,(m),(d))

	)

2215 #i‡!
deföed
(
_GIOP_FøgmítHódî_1_3_deföed
)

2216 
	#_GIOP_FøgmítHódî_1_3_deföed
 1

	)

2217 
GIOP_FøgmítHódî_1_2
 
	tGIOP_FøgmítHódî_1_3
;

2218 
	#GIOP_FøgmítHódî_1_3_m¨shÆ
(
x
,
y
,
z
Ë
	`GIOP_FøgmítHódî_1_2_m¨shÆ
((x),(y),(z))

	)

2219 
	#GIOP_FøgmítHódî_1_3_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`GIOP_FøgmítHódî_1_2_dem¨shÆ
((x),(y),(z),(i))

	)

2220 #i‡!
deföed
(
TC_IMPL_TC_GIOP_FøgmítHódî_1_3_0
)

2221 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_0
 'i'

	)

2222 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_1
 'o'

	)

2223 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_2
 'p'

	)

2224 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_3
 '_'

	)

2225 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_4
 'd'

	)

2226 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_5
 'e'

	)

2227 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_6
 'f'

	)

2228 
	#TC_IMPL_TC_GIOP_FøgmítHódî_1_3_7
 's'

	)

2229 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2234 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_GIOP_FøgmítHódî_1_3_°ru˘
;

2235 
	#TC_GIOP_FøgmítHódî_1_3
 ((
CORBA_Ty≥Code
)&
TC_GIOP_FøgmítHódî_1_3_°ru˘
)

	)

2237 
	#GIOP_FøgmítHódî_1_3__Æloc
(Ë((
GIOP_FøgmítHódî_1_3
 *)
	`ORBô_smÆl_Æloc
 (
TC_GIOP_FøgmítHódî_1_2
))

	)

2238 
	#GIOP_FøgmítHódî_1_3__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_GIOP_FøgmítHódî_1_2
,(m),(d))

	)

2240 #i‚de‡
CSI_OMGVMCID


2241 
	#CSI_OMGVMCID
 324816U

	)

2244 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2245 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2246 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2247 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2248 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2249 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2250 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2251 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2252 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2253 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2254 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2255 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2256 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2258 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2259 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2260 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2261 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2262 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2263 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2264 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2265 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2266 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2267 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2272 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2273 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2275 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2276 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2277 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2278 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2280 #i‡!
deföed
(
_CSI_X509CîtifiˇãChaö_deföed
)

2281 
	#_CSI_X509CîtifiˇãChaö_deföed
 1

	)

2282 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_X509CîtifiˇãChaö
;

2283 
	#CSI_X509CîtifiˇãChaö_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2284 
	#CSI_X509CîtifiˇãChaö_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2285 #i‡!
deföed
(
TC_IMPL_TC_CSI_X509CîtifiˇãChaö_0
)

2286 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_0
 'i'

	)

2287 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_1
 'o'

	)

2288 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_2
 'p'

	)

2289 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_3
 '_'

	)

2290 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_4
 'd'

	)

2291 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_5
 'e'

	)

2292 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_6
 'f'

	)

2293 
	#TC_IMPL_TC_CSI_X509CîtifiˇãChaö_7
 's'

	)

2294 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2299 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_X509CîtifiˇãChaö_°ru˘
;

2300 
	#TC_CSI_X509CîtifiˇãChaö
 ((
CORBA_Ty≥Code
)&
TC_CSI_X509CîtifiˇãChaö_°ru˘
)

	)

2302 
	#CSI_X509CîtifiˇãChaö__Æloc
(Ë((
CSI_X509CîtifiˇãChaö
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2303 
	#CSI_X509CîtifiˇãChaö__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2304 
	#CSI_X509CîtifiˇãChaö_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2306 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2307 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2308 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2309 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2310 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2311 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2312 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2313 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2314 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2315 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2316 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2317 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2318 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2320 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2321 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2322 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2323 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2324 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2325 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2326 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2327 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2328 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2329 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2334 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2335 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2337 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2338 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2339 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2340 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2342 #i‡!
deföed
(
_CSI_X501Di°öguishedName_deföed
)

2343 
	#_CSI_X501Di°öguishedName_deföed
 1

	)

2344 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_X501Di°öguishedName
;

2345 
	#CSI_X501Di°öguishedName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2346 
	#CSI_X501Di°öguishedName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2347 #i‡!
deföed
(
TC_IMPL_TC_CSI_X501Di°öguishedName_0
)

2348 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_0
 'i'

	)

2349 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_1
 'o'

	)

2350 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_2
 'p'

	)

2351 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_3
 '_'

	)

2352 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_4
 'd'

	)

2353 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_5
 'e'

	)

2354 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_6
 'f'

	)

2355 
	#TC_IMPL_TC_CSI_X501Di°öguishedName_7
 's'

	)

2356 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2361 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_X501Di°öguishedName_°ru˘
;

2362 
	#TC_CSI_X501Di°öguishedName
 ((
CORBA_Ty≥Code
)&
TC_CSI_X501Di°öguishedName_°ru˘
)

	)

2364 
	#CSI_X501Di°öguishedName__Æloc
(Ë((
CSI_X501Di°öguishedName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2365 
	#CSI_X501Di°öguishedName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2366 
	#CSI_X501Di°öguishedName_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2368 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2369 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2370 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2371 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2372 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2373 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2374 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2375 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2376 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2377 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2378 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2379 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2380 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2382 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2383 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2384 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2385 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2386 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2387 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2388 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2389 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2390 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2391 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2396 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2397 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2399 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2400 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2401 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2402 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2404 #i‡!
deföed
(
_CSI_UTF8Såög_deföed
)

2405 
	#_CSI_UTF8Såög_deföed
 1

	)

2406 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_UTF8Såög
;

2407 
	#CSI_UTF8Såög_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2408 
	#CSI_UTF8Såög_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2409 #i‡!
deföed
(
TC_IMPL_TC_CSI_UTF8Såög_0
)

2410 
	#TC_IMPL_TC_CSI_UTF8Såög_0
 'i'

	)

2411 
	#TC_IMPL_TC_CSI_UTF8Såög_1
 'o'

	)

2412 
	#TC_IMPL_TC_CSI_UTF8Såög_2
 'p'

	)

2413 
	#TC_IMPL_TC_CSI_UTF8Såög_3
 '_'

	)

2414 
	#TC_IMPL_TC_CSI_UTF8Såög_4
 'd'

	)

2415 
	#TC_IMPL_TC_CSI_UTF8Såög_5
 'e'

	)

2416 
	#TC_IMPL_TC_CSI_UTF8Såög_6
 'f'

	)

2417 
	#TC_IMPL_TC_CSI_UTF8Såög_7
 's'

	)

2418 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2423 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_UTF8Såög_°ru˘
;

2424 
	#TC_CSI_UTF8Såög
 ((
CORBA_Ty≥Code
)&
TC_CSI_UTF8Såög_°ru˘
)

	)

2426 
	#CSI_UTF8Såög__Æloc
(Ë((
CSI_UTF8Såög
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2427 
	#CSI_UTF8Såög__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2428 
	#CSI_UTF8Såög_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2430 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2431 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2432 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2433 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2434 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2435 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2436 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2437 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2438 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2439 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2440 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2441 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2442 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2444 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2445 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2446 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2447 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2448 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2449 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2450 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2451 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2452 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2453 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2458 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2459 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2461 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2462 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2463 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2464 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2466 #i‡!
deföed
(
_CSI_OID_deföed
)

2467 
	#_CSI_OID_deföed
 1

	)

2468 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_OID
;

2469 
	#CSI_OID_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2470 
	#CSI_OID_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2471 #i‡!
deföed
(
TC_IMPL_TC_CSI_OID_0
)

2472 
	#TC_IMPL_TC_CSI_OID_0
 'i'

	)

2473 
	#TC_IMPL_TC_CSI_OID_1
 'o'

	)

2474 
	#TC_IMPL_TC_CSI_OID_2
 'p'

	)

2475 
	#TC_IMPL_TC_CSI_OID_3
 '_'

	)

2476 
	#TC_IMPL_TC_CSI_OID_4
 'd'

	)

2477 
	#TC_IMPL_TC_CSI_OID_5
 'e'

	)

2478 
	#TC_IMPL_TC_CSI_OID_6
 'f'

	)

2479 
	#TC_IMPL_TC_CSI_OID_7
 's'

	)

2480 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2485 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_OID_°ru˘
;

2486 
	#TC_CSI_OID
 ((
CORBA_Ty≥Code
)&
TC_CSI_OID_°ru˘
)

	)

2488 
	#CSI_OID__Æloc
(Ë((
CSI_OID
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2489 
	#CSI_OID__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2490 
	#CSI_OID_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2492 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2493 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2494 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2495 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2496 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2497 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2498 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2499 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2500 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2501 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2502 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2503 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2504 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2506 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2507 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2508 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2509 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2510 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2511 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2512 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2513 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2514 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2515 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2520 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2521 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2523 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2524 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2525 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2526 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2528 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
)

2529 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2530 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2531 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2532 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2533 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2534 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2535 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2536 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2537 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2538 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2539 
	#_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2540 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_£quí˚_CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
;

2542 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_0
)

2543 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2544 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2545 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2546 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2547 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2548 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2549 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2550 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2551 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2556 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2557 
	#TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2559 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
))

	)

2560 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2561 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_£quí˚_CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2562 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_£quí˚_CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2564 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CSI_OID
)

2565 
	#ORBIT_DECL_CORBA_£quí˚_CSI_OID
 1

	)

2566 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_0
 'i'

	)

2567 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_1
 'o'

	)

2568 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_2
 'p'

	)

2569 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_3
 '_'

	)

2570 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_4
 'd'

	)

2571 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_5
 'e'

	)

2572 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_6
 'f'

	)

2573 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_OID_7
 's'

	)

2574 #i‡!
deföed
(
_CORBA_£quí˚_CSI_OID_deföed
)

2575 
	#_CORBA_£quí˚_CSI_OID_deföed
 1

	)

2576 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 
	tCORBA_£quí˚_CSI_OID
;

2578 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CSI_OID_0
)

2579 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_0
 'i'

	)

2580 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_1
 'o'

	)

2581 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_2
 'p'

	)

2582 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_3
 '_'

	)

2583 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_4
 'd'

	)

2584 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_5
 'e'

	)

2585 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_6
 'f'

	)

2586 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_OID_7
 's'

	)

2587 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2592 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CSI_OID_°ru˘
;

2593 
	#TC_CORBA_£quí˚_CSI_OID
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CSI_OID_°ru˘
)

	)

2595 
	#CORBA_£quí˚_CSI_OID__Æloc
 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__Æloc


	)

2596 
	#CORBA_£quí˚_CSI_OID__‰ìkids
 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__‰ìkids


	)

2597 
	#CORBA_£quí˚_CSI_OID_Ælocbuf
 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_Ælocbuf


	)

2598 
	#CORBA_£quí˚_CSI_OID_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2599 
	#CORBA_£quí˚_CSI_OID_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2601 #i‡!
deföed
(
_CSI_OIDLi°_deföed
)

2602 
	#_CSI_OIDLi°_deföed
 1

	)

2603 
CORBA_£quí˚_CSI_OID
 
	tCSI_OIDLi°
;

2604 
	#CSI_OIDLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CSI_OID_m¨shÆ
((x),(y),(z))

	)

2605 
	#CSI_OIDLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CSI_OID_dem¨shÆ
((x),(y),(z),(i))

	)

2606 #i‡!
deföed
(
TC_IMPL_TC_CSI_OIDLi°_0
)

2607 
	#TC_IMPL_TC_CSI_OIDLi°_0
 'i'

	)

2608 
	#TC_IMPL_TC_CSI_OIDLi°_1
 'o'

	)

2609 
	#TC_IMPL_TC_CSI_OIDLi°_2
 'p'

	)

2610 
	#TC_IMPL_TC_CSI_OIDLi°_3
 '_'

	)

2611 
	#TC_IMPL_TC_CSI_OIDLi°_4
 'd'

	)

2612 
	#TC_IMPL_TC_CSI_OIDLi°_5
 'e'

	)

2613 
	#TC_IMPL_TC_CSI_OIDLi°_6
 'f'

	)

2614 
	#TC_IMPL_TC_CSI_OIDLi°_7
 's'

	)

2615 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2620 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_OIDLi°_°ru˘
;

2621 
	#TC_CSI_OIDLi°
 ((
CORBA_Ty≥Code
)&
TC_CSI_OIDLi°_°ru˘
)

	)

2623 
	#CSI_OIDLi°__Æloc
(Ë((
CSI_OIDLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSI_OID
))

	)

2624 
	#CSI_OIDLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSI_OID
,(m),(d))

	)

2625 
	#CSI_OIDLi°_Ælocbuf
(
l
Ë((
CSI_OID
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSI_OID
, (l)))

	)

2627 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2628 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2629 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2630 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2631 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2632 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2633 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2634 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2635 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2636 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2637 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2638 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2639 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2641 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2642 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2643 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2644 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2645 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2646 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2647 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2648 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2649 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2650 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2655 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2656 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2658 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2659 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2660 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2661 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2663 #i‡!
deföed
(
_CSI_GSSTokí_deföed
)

2664 
	#_CSI_GSSTokí_deföed
 1

	)

2665 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_GSSTokí
;

2666 
	#CSI_GSSTokí_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2667 
	#CSI_GSSTokí_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2668 #i‡!
deföed
(
TC_IMPL_TC_CSI_GSSTokí_0
)

2669 
	#TC_IMPL_TC_CSI_GSSTokí_0
 'i'

	)

2670 
	#TC_IMPL_TC_CSI_GSSTokí_1
 'o'

	)

2671 
	#TC_IMPL_TC_CSI_GSSTokí_2
 'p'

	)

2672 
	#TC_IMPL_TC_CSI_GSSTokí_3
 '_'

	)

2673 
	#TC_IMPL_TC_CSI_GSSTokí_4
 'd'

	)

2674 
	#TC_IMPL_TC_CSI_GSSTokí_5
 'e'

	)

2675 
	#TC_IMPL_TC_CSI_GSSTokí_6
 'f'

	)

2676 
	#TC_IMPL_TC_CSI_GSSTokí_7
 's'

	)

2677 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2682 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_GSSTokí_°ru˘
;

2683 
	#TC_CSI_GSSTokí
 ((
CORBA_Ty≥Code
)&
TC_CSI_GSSTokí_°ru˘
)

	)

2685 
	#CSI_GSSTokí__Æloc
(Ë((
CSI_GSSTokí
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2686 
	#CSI_GSSTokí__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2687 
	#CSI_GSSTokí_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2689 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2690 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2691 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2692 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2693 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2694 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2695 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2696 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2697 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2698 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2699 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2700 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2701 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2703 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2704 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2705 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2706 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2707 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2708 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2709 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2710 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2711 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2712 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2717 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2718 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2720 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2721 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2722 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2723 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2725 #i‡!
deföed
(
_CSI_GSS_NT_Exp‹ãdName_deföed
)

2726 
	#_CSI_GSS_NT_Exp‹ãdName_deföed
 1

	)

2727 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_GSS_NT_Exp‹ãdName
;

2728 
	#CSI_GSS_NT_Exp‹ãdName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2729 
	#CSI_GSS_NT_Exp‹ãdName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2730 #i‡!
deföed
(
TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_0
)

2731 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_0
 'i'

	)

2732 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_1
 'o'

	)

2733 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_2
 'p'

	)

2734 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_3
 '_'

	)

2735 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_4
 'd'

	)

2736 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_5
 'e'

	)

2737 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_6
 'f'

	)

2738 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdName_7
 's'

	)

2739 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2744 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_GSS_NT_Exp‹ãdName_°ru˘
;

2745 
	#TC_CSI_GSS_NT_Exp‹ãdName
 ((
CORBA_Ty≥Code
)&
TC_CSI_GSS_NT_Exp‹ãdName_°ru˘
)

	)

2747 
	#CSI_GSS_NT_Exp‹ãdName__Æloc
(Ë((
CSI_GSS_NT_Exp‹ãdName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2748 
	#CSI_GSS_NT_Exp‹ãdName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2749 
	#CSI_GSS_NT_Exp‹ãdName_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2751 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2752 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2753 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2754 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2755 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2756 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2757 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2758 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2759 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2760 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2761 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2762 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2763 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2765 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2766 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2767 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2768 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2769 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2770 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2771 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2772 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2773 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2774 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2779 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2780 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2782 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

2783 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2784 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2785 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2787 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
)

2788 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2789 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2790 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2791 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2792 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2793 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2794 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2795 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2796 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2797 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2798 
	#_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2799 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_£quí˚_CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
;

2801 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_0
)

2802 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2803 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2804 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2805 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2806 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2807 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2808 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2809 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2810 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2815 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

2816 
	#TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

2818 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
))

	)

2819 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

2820 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_£quí˚_CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2821 
	#CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_£quí˚_CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

2823 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
)

2824 
	#ORBIT_DECL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
 1

	)

2825 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_0
 'i'

	)

2826 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_1
 'o'

	)

2827 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_2
 'p'

	)

2828 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_3
 '_'

	)

2829 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_4
 'd'

	)

2830 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_5
 'e'

	)

2831 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_6
 'f'

	)

2832 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_7
 's'

	)

2833 #i‡!
deföed
(
_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_deföed
)

2834 
	#_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_deföed
 1

	)

2835 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë
 
	tCORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
;

2837 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_0
)

2838 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_0
 'i'

	)

2839 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_1
 'o'

	)

2840 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_2
 'p'

	)

2841 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_3
 '_'

	)

2842 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_4
 'd'

	)

2843 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_5
 'e'

	)

2844 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_6
 'f'

	)

2845 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_7
 's'

	)

2846 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2851 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_°ru˘
;

2852 
	#TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_°ru˘
)

	)

2854 
	#CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName__Æloc
 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__Æloc


	)

2855 
	#CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName__‰ìkids
 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë__‰ìkids


	)

2856 
	#CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_Ælocbuf
 
CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_Ælocbuf


	)

2857 
	#CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

2858 
	#CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

2860 #i‡!
deföed
(
_CSI_GSS_NT_Exp‹ãdNameLi°_deföed
)

2861 
	#_CSI_GSS_NT_Exp‹ãdNameLi°_deföed
 1

	)

2862 
CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
 
	tCSI_GSS_NT_Exp‹ãdNameLi°
;

2863 
	#CSI_GSS_NT_Exp‹ãdNameLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_m¨shÆ
((x),(y),(z))

	)

2864 
	#CSI_GSS_NT_Exp‹ãdNameLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName_dem¨shÆ
((x),(y),(z),(i))

	)

2865 #i‡!
deföed
(
TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_0
)

2866 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_0
 'i'

	)

2867 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_1
 'o'

	)

2868 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_2
 'p'

	)

2869 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_3
 '_'

	)

2870 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_4
 'd'

	)

2871 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_5
 'e'

	)

2872 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_6
 'f'

	)

2873 
	#TC_IMPL_TC_CSI_GSS_NT_Exp‹ãdNameLi°_7
 's'

	)

2874 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2879 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_GSS_NT_Exp‹ãdNameLi°_°ru˘
;

2880 
	#TC_CSI_GSS_NT_Exp‹ãdNameLi°
 ((
CORBA_Ty≥Code
)&
TC_CSI_GSS_NT_Exp‹ãdNameLi°_°ru˘
)

	)

2882 
	#CSI_GSS_NT_Exp‹ãdNameLi°__Æloc
(Ë((
CSI_GSS_NT_Exp‹ãdNameLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
))

	)

2883 
	#CSI_GSS_NT_Exp‹ãdNameLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
,(m),(d))

	)

2884 
	#CSI_GSS_NT_Exp‹ãdNameLi°_Ælocbuf
(
l
Ë((
CSI_GSS_NT_Exp‹ãdName
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSI_GSS_NT_Exp‹ãdName
, (l)))

	)

2886 #i‡!
deföed
(
_CSI_MsgTy≥_deföed
)

2887 
	#_CSI_MsgTy≥_deföed
 1

	)

2888 
CORBA_sh‹t
 
	tCSI_MsgTy≥
;

2889 
	#CSI_MsgTy≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_sh‹t_m¨shÆ
((x),(y),(z))

	)

2890 
	#CSI_MsgTy≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

2891 #i‡!
deföed
(
TC_IMPL_TC_CSI_MsgTy≥_0
)

2892 
	#TC_IMPL_TC_CSI_MsgTy≥_0
 'i'

	)

2893 
	#TC_IMPL_TC_CSI_MsgTy≥_1
 'o'

	)

2894 
	#TC_IMPL_TC_CSI_MsgTy≥_2
 'p'

	)

2895 
	#TC_IMPL_TC_CSI_MsgTy≥_3
 '_'

	)

2896 
	#TC_IMPL_TC_CSI_MsgTy≥_4
 'd'

	)

2897 
	#TC_IMPL_TC_CSI_MsgTy≥_5
 'e'

	)

2898 
	#TC_IMPL_TC_CSI_MsgTy≥_6
 'f'

	)

2899 
	#TC_IMPL_TC_CSI_MsgTy≥_7
 's'

	)

2900 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2905 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_MsgTy≥_°ru˘
;

2906 
	#TC_CSI_MsgTy≥
 ((
CORBA_Ty≥Code
)&
TC_CSI_MsgTy≥_°ru˘
)

	)

2908 
	#CSI_MsgTy≥__Æloc
(Ë((
CSI_MsgTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_sh‹t
))

	)

2909 
	#CSI_MsgTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_sh‹t
,(m),(d))

	)

2911 #i‚de‡
CSI_MTE°ablishC⁄ãxt


2912 
	#CSI_MTE°ablishC⁄ãxt
 0

	)

2915 #i‚de‡
CSI_MTCom∂ëeE°ablishC⁄ãxt


2916 
	#CSI_MTCom∂ëeE°ablishC⁄ãxt
 1

	)

2919 #i‚de‡
CSI_MTC⁄ãxtEº‹


2920 
	#CSI_MTC⁄ãxtEº‹
 4

	)

2923 #i‚de‡
CSI_MTMesßgeInC⁄ãxt


2924 
	#CSI_MTMesßgeInC⁄ãxt
 5

	)

2927 #i‡!
deföed
(
_CSI_C⁄ãxtId_deföed
)

2928 
	#_CSI_C⁄ãxtId_deföed
 1

	)

2929 
CORBA_unsig√d_l⁄g_l⁄g
 
	tCSI_C⁄ãxtId
;

2930 
	#CSI_C⁄ãxtId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_l⁄g_m¨shÆ
((x),(y),(z))

	)

2931 
	#CSI_C⁄ãxtId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

2932 #i‡!
deföed
(
TC_IMPL_TC_CSI_C⁄ãxtId_0
)

2933 
	#TC_IMPL_TC_CSI_C⁄ãxtId_0
 'i'

	)

2934 
	#TC_IMPL_TC_CSI_C⁄ãxtId_1
 'o'

	)

2935 
	#TC_IMPL_TC_CSI_C⁄ãxtId_2
 'p'

	)

2936 
	#TC_IMPL_TC_CSI_C⁄ãxtId_3
 '_'

	)

2937 
	#TC_IMPL_TC_CSI_C⁄ãxtId_4
 'd'

	)

2938 
	#TC_IMPL_TC_CSI_C⁄ãxtId_5
 'e'

	)

2939 
	#TC_IMPL_TC_CSI_C⁄ãxtId_6
 'f'

	)

2940 
	#TC_IMPL_TC_CSI_C⁄ãxtId_7
 's'

	)

2941 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2946 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_C⁄ãxtId_°ru˘
;

2947 
	#TC_CSI_C⁄ãxtId
 ((
CORBA_Ty≥Code
)&
TC_CSI_C⁄ãxtId_°ru˘
)

	)

2949 
	#CSI_C⁄ãxtId__Æloc
(Ë((
CSI_C⁄ãxtId
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g_l⁄g
))

	)

2950 
	#CSI_C⁄ãxtId__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g_l⁄g
,(m),(d))

	)

2952 #i‡!
deföed
(
_CSI_Auth‹iz©i⁄EÀmítTy≥_deföed
)

2953 
	#_CSI_Auth‹iz©i⁄EÀmítTy≥_deföed
 1

	)

2954 
CORBA_unsig√d_l⁄g
 
	tCSI_Auth‹iz©i⁄EÀmítTy≥
;

2955 
	#CSI_Auth‹iz©i⁄EÀmítTy≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

2956 
	#CSI_Auth‹iz©i⁄EÀmítTy≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

2957 #i‡!
deföed
(
TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_0
)

2958 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_0
 'i'

	)

2959 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_1
 'o'

	)

2960 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_2
 'p'

	)

2961 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_3
 '_'

	)

2962 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_4
 'd'

	)

2963 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_5
 'e'

	)

2964 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_6
 'f'

	)

2965 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítTy≥_7
 's'

	)

2966 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


2971 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_Auth‹iz©i⁄EÀmítTy≥_°ru˘
;

2972 
	#TC_CSI_Auth‹iz©i⁄EÀmítTy≥
 ((
CORBA_Ty≥Code
)&
TC_CSI_Auth‹iz©i⁄EÀmítTy≥_°ru˘
)

	)

2974 
	#CSI_Auth‹iz©i⁄EÀmítTy≥__Æloc
(Ë((
CSI_Auth‹iz©i⁄EÀmítTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

2975 
	#CSI_Auth‹iz©i⁄EÀmítTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

2977 #i‚de‡
CSI_X509AâribuãCîtChaö


2978 
	#CSI_X509AâribuãCîtChaö
 324817U

	)

2981 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

2982 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

2983 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2984 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2985 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2986 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

2987 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

2988 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

2989 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

2990 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

2991 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

2992 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

2993 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

2995 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

2996 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

2997 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

2998 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

2999 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

3000 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

3001 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

3002 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

3003 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

3004 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3009 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

3010 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

3012 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3013 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3014 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3015 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3017 #i‡!
deföed
(
_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_deföed
)

3018 
	#_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_deföed
 1

	)

3019 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_Auth‹iz©i⁄EÀmítC⁄ã¡s
;

3020 
	#CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

3021 
	#CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

3022 #i‡!
deföed
(
TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_0
)

3023 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_0
 'i'

	)

3024 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_1
 'o'

	)

3025 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_2
 'p'

	)

3026 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_3
 '_'

	)

3027 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_4
 'd'

	)

3028 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_5
 'e'

	)

3029 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_6
 'f'

	)

3030 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_7
 's'

	)

3031 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3036 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_°ru˘
;

3037 
	#TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s
 ((
CORBA_Ty≥Code
)&
TC_CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_°ru˘
)

	)

3039 
	#CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s__Æloc
(Ë((
CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3040 
	#CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3041 
	#CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3043 #i‡!
deföed
(
_CSI_Auth‹iz©i⁄EÀmít_deföed
)

3044 
	#_CSI_Auth‹iz©i⁄EÀmít_deföed
 1

	)

3045 
CSI_Auth‹iz©i⁄EÀmít_ty≥
 
	tCSI_Auth‹iz©i⁄EÀmít
;

3046 
	sCSI_Auth‹iz©i⁄EÀmít_ty≥
 {

3047 
CSI_Auth‹iz©i⁄EÀmítTy≥
 
	gthe_ty≥
;

3048 
CSI_Auth‹iz©i⁄EÀmítC⁄ã¡s
 
	gthe_ñemít
;

3051 #i‡!
deföed
(
TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_0
)

3052 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_0
 'i'

	)

3053 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_1
 'o'

	)

3054 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_2
 'p'

	)

3055 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_3
 '_'

	)

3056 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_4
 'd'

	)

3057 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_5
 'e'

	)

3058 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_6
 'f'

	)

3059 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄EÀmít_7
 's'

	)

3060 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3065 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_Auth‹iz©i⁄EÀmít_°ru˘
;

3066 
	#TC_CSI_Auth‹iz©i⁄EÀmít
 ((
CORBA_Ty≥Code
)&
TC_CSI_Auth‹iz©i⁄EÀmít_°ru˘
)

	)

3068 
	#CSI_Auth‹iz©i⁄EÀmít__Æloc
(Ë((
CSI_Auth‹iz©i⁄EÀmít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_Auth‹iz©i⁄EÀmít
))

	)

3069 
	#CSI_Auth‹iz©i⁄EÀmít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_Auth‹iz©i⁄EÀmít
,(m),(d))

	)

3071 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
)

3072 
	#ORBIT_DECL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
 1

	)

3073 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_0
 'i'

	)

3074 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_1
 'o'

	)

3075 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_2
 'p'

	)

3076 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_3
 '_'

	)

3077 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_4
 'd'

	)

3078 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_5
 'e'

	)

3079 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_6
 'f'

	)

3080 
	#ORBIT_IMPL_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_7
 's'

	)

3081 #i‡!
deföed
(
_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_deföed
)

3082 
	#_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_deföed
 1

	)

3083 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CSI_Auth‹iz©i⁄EÀmít
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
;

3085 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_0
)

3086 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_0
 'i'

	)

3087 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_1
 'o'

	)

3088 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_2
 'p'

	)

3089 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_3
 '_'

	)

3090 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_4
 'd'

	)

3091 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_5
 'e'

	)

3092 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_6
 'f'

	)

3093 
	#TC_IMPL_TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_7
 's'

	)

3094 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3099 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_°ru˘
;

3100 
	#TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_°ru˘
)

	)

3102 
	#CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít__Æloc
(Ë((
CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
))

	)

3103 
	#CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
,(m),(d))

	)

3104 
	#CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_Ælocbuf
(
l
Ë((
CSI_Auth‹iz©i⁄EÀmít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
, (l)))

	)

3105 
	#CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_Ælocbuf
(
l
Ë((
CSI_Auth‹iz©i⁄EÀmít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
, (l)))

	)

3107 #i‡!
deföed
(
_CSI_Auth‹iz©i⁄Tokí_deföed
)

3108 
	#_CSI_Auth‹iz©i⁄Tokí_deföed
 1

	)

3109 
CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
 
	tCSI_Auth‹iz©i⁄Tokí
;

3110 
	#CSI_Auth‹iz©i⁄Tokí_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_m¨shÆ
((x),(y),(z))

	)

3111 
	#CSI_Auth‹iz©i⁄Tokí_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít_dem¨shÆ
((x),(y),(z),(i))

	)

3112 #i‡!
deföed
(
TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_0
)

3113 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_0
 'i'

	)

3114 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_1
 'o'

	)

3115 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_2
 'p'

	)

3116 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_3
 '_'

	)

3117 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_4
 'd'

	)

3118 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_5
 'e'

	)

3119 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_6
 'f'

	)

3120 
	#TC_IMPL_TC_CSI_Auth‹iz©i⁄Tokí_7
 's'

	)

3121 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3126 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_Auth‹iz©i⁄Tokí_°ru˘
;

3127 
	#TC_CSI_Auth‹iz©i⁄Tokí
 ((
CORBA_Ty≥Code
)&
TC_CSI_Auth‹iz©i⁄Tokí_°ru˘
)

	)

3129 
	#CSI_Auth‹iz©i⁄Tokí__Æloc
(Ë((
CSI_Auth‹iz©i⁄Tokí
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
))

	)

3130 
	#CSI_Auth‹iz©i⁄Tokí__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
,(m),(d))

	)

3131 
	#CSI_Auth‹iz©i⁄Tokí_Ælocbuf
(
l
Ë((
CSI_Auth‹iz©i⁄EÀmít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSI_Auth‹iz©i⁄EÀmít
, (l)))

	)

3133 #i‡!
deföed
(
_CSI_IdítôyTokíTy≥_deföed
)

3134 
	#_CSI_IdítôyTokíTy≥_deföed
 1

	)

3135 
CORBA_unsig√d_l⁄g
 
	tCSI_IdítôyTokíTy≥
;

3136 
	#CSI_IdítôyTokíTy≥_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

3137 
	#CSI_IdítôyTokíTy≥_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

3138 #i‡!
deföed
(
TC_IMPL_TC_CSI_IdítôyTokíTy≥_0
)

3139 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_0
 'i'

	)

3140 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_1
 'o'

	)

3141 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_2
 'p'

	)

3142 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_3
 '_'

	)

3143 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_4
 'd'

	)

3144 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_5
 'e'

	)

3145 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_6
 'f'

	)

3146 
	#TC_IMPL_TC_CSI_IdítôyTokíTy≥_7
 's'

	)

3147 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3152 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_IdítôyTokíTy≥_°ru˘
;

3153 
	#TC_CSI_IdítôyTokíTy≥
 ((
CORBA_Ty≥Code
)&
TC_CSI_IdítôyTokíTy≥_°ru˘
)

	)

3155 
	#CSI_IdítôyTokíTy≥__Æloc
(Ë((
CSI_IdítôyTokíTy≥
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

3156 
	#CSI_IdítôyTokíTy≥__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

3158 #i‚de‡
CSI_ITTAb£¡


3159 
	#CSI_ITTAb£¡
 0U

	)

3162 #i‚de‡
CSI_ITTAn⁄ymous


3163 
	#CSI_ITTAn⁄ymous
 1U

	)

3166 #i‚de‡
CSI_ITTPröcùÆName


3167 
	#CSI_ITTPröcùÆName
 2U

	)

3170 #i‚de‡
CSI_ITTX509CîtChaö


3171 
	#CSI_ITTX509CîtChaö
 4U

	)

3174 #i‚de‡
CSI_ITTDi°öguishedName


3175 
	#CSI_ITTDi°öguishedName
 8U

	)

3178 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

3179 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

3180 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

3181 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

3182 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

3183 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

3184 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

3185 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

3186 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

3187 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

3188 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

3189 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

3190 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

3192 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

3193 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

3194 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

3195 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

3196 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

3197 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

3198 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

3199 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

3200 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

3201 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3206 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

3207 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

3209 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3210 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3211 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3212 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3214 #i‡!
deföed
(
_CSI_IdítôyExãnsi⁄_deföed
)

3215 
	#_CSI_IdítôyExãnsi⁄_deföed
 1

	)

3216 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSI_IdítôyExãnsi⁄
;

3217 
	#CSI_IdítôyExãnsi⁄_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

3218 
	#CSI_IdítôyExãnsi⁄_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

3219 #i‡!
deföed
(
TC_IMPL_TC_CSI_IdítôyExãnsi⁄_0
)

3220 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_0
 'i'

	)

3221 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_1
 'o'

	)

3222 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_2
 'p'

	)

3223 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_3
 '_'

	)

3224 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_4
 'd'

	)

3225 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_5
 'e'

	)

3226 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_6
 'f'

	)

3227 
	#TC_IMPL_TC_CSI_IdítôyExãnsi⁄_7
 's'

	)

3228 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3233 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_IdítôyExãnsi⁄_°ru˘
;

3234 
	#TC_CSI_IdítôyExãnsi⁄
 ((
CORBA_Ty≥Code
)&
TC_CSI_IdítôyExãnsi⁄_°ru˘
)

	)

3236 
	#CSI_IdítôyExãnsi⁄__Æloc
(Ë((
CSI_IdítôyExãnsi⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3237 
	#CSI_IdítôyExãnsi⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3238 
	#CSI_IdítôyExãnsi⁄_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3240 #i‡!
deföed
(
_CSI_IdítôyTokí_deföed
)

3241 
	#_CSI_IdítôyTokí_deföed
 1

	)

3242 
CSI_IdítôyTokí_ty≥
 
	tCSI_IdítôyTokí
;

3243 
	sCSI_IdítôyTokí_ty≥
 {

3244 
CSI_IdítôyTokíTy≥
 
	g_d
;

3246 
CORBA_boﬁón
 
	gab£¡
;

3247 
CORBA_boﬁón
 
	g™⁄ymous
;

3248 
CSI_GSS_NT_Exp‹ãdName
 
	g¥öcùÆ_«me
;

3249 
CSI_X509CîtifiˇãChaö
 
	g˚πifiˇã_chaö
;

3250 
CSI_X501Di°öguishedName
 
	gdn
;

3251 
CSI_IdítôyExãnsi⁄
 
	gid
;

3252 } 
	g_u
;

3254 #i‡!
deföed
(
TC_IMPL_TC_CSI_IdítôyTokí_0
)

3255 
	#TC_IMPL_TC_CSI_IdítôyTokí_0
 'i'

	)

3256 
	#TC_IMPL_TC_CSI_IdítôyTokí_1
 'o'

	)

3257 
	#TC_IMPL_TC_CSI_IdítôyTokí_2
 'p'

	)

3258 
	#TC_IMPL_TC_CSI_IdítôyTokí_3
 '_'

	)

3259 
	#TC_IMPL_TC_CSI_IdítôyTokí_4
 'd'

	)

3260 
	#TC_IMPL_TC_CSI_IdítôyTokí_5
 'e'

	)

3261 
	#TC_IMPL_TC_CSI_IdítôyTokí_6
 'f'

	)

3262 
	#TC_IMPL_TC_CSI_IdítôyTokí_7
 's'

	)

3263 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3268 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_IdítôyTokí_°ru˘
;

3269 
	#TC_CSI_IdítôyTokí
 ((
CORBA_Ty≥Code
)&
TC_CSI_IdítôyTokí_°ru˘
)

	)

3271 
	#CSI_IdítôyTokí__Æloc
(Ë((
CSI_IdítôyTokí
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_IdítôyTokí
))

	)

3272 
	#CSI_IdítôyTokí__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_IdítôyTokí
,(m),(d))

	)

3274 #i‡!
deföed
(
_CSI_E°ablishC⁄ãxt_deföed
)

3275 
	#_CSI_E°ablishC⁄ãxt_deföed
 1

	)

3276 
CSI_E°ablishC⁄ãxt_ty≥
 
	tCSI_E°ablishC⁄ãxt
;

3277 
	sCSI_E°ablishC⁄ãxt_ty≥
 {

3278 
CSI_C⁄ãxtId
 
	g˛õ¡_c⁄ãxt_id
;

3279 
CSI_Auth‹iz©i⁄Tokí
 
	gauth‹iz©i⁄_tokí
;

3280 
CSI_IdítôyTokí
 
	gidítôy_tokí
;

3281 
CSI_GSSTokí
 
	g˛õ¡_authítiˇti⁄_tokí
;

3284 #i‡!
deföed
(
TC_IMPL_TC_CSI_E°ablishC⁄ãxt_0
)

3285 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_0
 'i'

	)

3286 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_1
 'o'

	)

3287 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_2
 'p'

	)

3288 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_3
 '_'

	)

3289 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_4
 'd'

	)

3290 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_5
 'e'

	)

3291 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_6
 'f'

	)

3292 
	#TC_IMPL_TC_CSI_E°ablishC⁄ãxt_7
 's'

	)

3293 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3298 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_E°ablishC⁄ãxt_°ru˘
;

3299 
	#TC_CSI_E°ablishC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_CSI_E°ablishC⁄ãxt_°ru˘
)

	)

3301 
	#CSI_E°ablishC⁄ãxt__Æloc
(Ë((
CSI_E°ablishC⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_E°ablishC⁄ãxt
))

	)

3302 
	#CSI_E°ablishC⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_E°ablishC⁄ãxt
,(m),(d))

	)

3304 #i‡!
deföed
(
_CSI_Com∂ëeE°ablishC⁄ãxt_deföed
)

3305 
	#_CSI_Com∂ëeE°ablishC⁄ãxt_deföed
 1

	)

3306 
CSI_Com∂ëeE°ablishC⁄ãxt_ty≥
 
	tCSI_Com∂ëeE°ablishC⁄ãxt
;

3307 
	sCSI_Com∂ëeE°ablishC⁄ãxt_ty≥
 {

3308 
CSI_C⁄ãxtId
 
	g˛õ¡_c⁄ãxt_id
;

3309 
CORBA_boﬁón
 
	gc⁄ãxt_°©eful
;

3310 
CSI_GSSTokí
 
	gföÆ_c⁄ãxt_tokí
;

3313 #i‡!
deföed
(
TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_0
)

3314 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_0
 'i'

	)

3315 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_1
 'o'

	)

3316 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_2
 'p'

	)

3317 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_3
 '_'

	)

3318 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_4
 'd'

	)

3319 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_5
 'e'

	)

3320 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_6
 'f'

	)

3321 
	#TC_IMPL_TC_CSI_Com∂ëeE°ablishC⁄ãxt_7
 's'

	)

3322 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3327 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_Com∂ëeE°ablishC⁄ãxt_°ru˘
;

3328 
	#TC_CSI_Com∂ëeE°ablishC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_CSI_Com∂ëeE°ablishC⁄ãxt_°ru˘
)

	)

3330 
	#CSI_Com∂ëeE°ablishC⁄ãxt__Æloc
(Ë((
CSI_Com∂ëeE°ablishC⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_Com∂ëeE°ablishC⁄ãxt
))

	)

3331 
	#CSI_Com∂ëeE°ablishC⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_Com∂ëeE°ablishC⁄ãxt
,(m),(d))

	)

3333 #i‡!
deföed
(
_CSI_C⁄ãxtEº‹_deföed
)

3334 
	#_CSI_C⁄ãxtEº‹_deföed
 1

	)

3335 
CSI_C⁄ãxtEº‹_ty≥
 
	tCSI_C⁄ãxtEº‹
;

3336 
	sCSI_C⁄ãxtEº‹_ty≥
 {

3337 
CSI_C⁄ãxtId
 
	g˛õ¡_c⁄ãxt_id
;

3338 
CORBA_l⁄g
 
	gmaj‹_°©us
;

3339 
CORBA_l⁄g
 
	gmö‹_°©us
;

3340 
CSI_GSSTokí
 
	gîr‹_tokí
;

3343 #i‡!
deföed
(
TC_IMPL_TC_CSI_C⁄ãxtEº‹_0
)

3344 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_0
 'i'

	)

3345 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_1
 'o'

	)

3346 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_2
 'p'

	)

3347 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_3
 '_'

	)

3348 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_4
 'd'

	)

3349 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_5
 'e'

	)

3350 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_6
 'f'

	)

3351 
	#TC_IMPL_TC_CSI_C⁄ãxtEº‹_7
 's'

	)

3352 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3357 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_C⁄ãxtEº‹_°ru˘
;

3358 
	#TC_CSI_C⁄ãxtEº‹
 ((
CORBA_Ty≥Code
)&
TC_CSI_C⁄ãxtEº‹_°ru˘
)

	)

3360 
	#CSI_C⁄ãxtEº‹__Æloc
(Ë((
CSI_C⁄ãxtEº‹
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_C⁄ãxtEº‹
))

	)

3361 
	#CSI_C⁄ãxtEº‹__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_C⁄ãxtEº‹
,(m),(d))

	)

3363 #i‡!
deföed
(
_CSI_MesßgeInC⁄ãxt_deföed
)

3364 
	#_CSI_MesßgeInC⁄ãxt_deföed
 1

	)

3365 
CSI_MesßgeInC⁄ãxt_ty≥
 
	tCSI_MesßgeInC⁄ãxt
;

3366 
	sCSI_MesßgeInC⁄ãxt_ty≥
 {

3367 
CSI_C⁄ãxtId
 
	g˛õ¡_c⁄ãxt_id
;

3368 
CORBA_boﬁón
 
	gdisˇrd_c⁄ãxt
;

3371 #i‡!
deföed
(
TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_0
)

3372 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_0
 'i'

	)

3373 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_1
 'o'

	)

3374 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_2
 'p'

	)

3375 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_3
 '_'

	)

3376 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_4
 'd'

	)

3377 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_5
 'e'

	)

3378 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_6
 'f'

	)

3379 
	#TC_IMPL_TC_CSI_MesßgeInC⁄ãxt_7
 's'

	)

3380 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3385 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_MesßgeInC⁄ãxt_°ru˘
;

3386 
	#TC_CSI_MesßgeInC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_CSI_MesßgeInC⁄ãxt_°ru˘
)

	)

3388 
	#CSI_MesßgeInC⁄ãxt__Æloc
(Ë((
CSI_MesßgeInC⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_MesßgeInC⁄ãxt
))

	)

3389 
	#CSI_MesßgeInC⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_MesßgeInC⁄ãxt
,(m),(d))

	)

3391 #i‡!
deföed
(
_CSI_SASC⁄ãxtBody_deföed
)

3392 
	#_CSI_SASC⁄ãxtBody_deföed
 1

	)

3393 
CSI_SASC⁄ãxtBody_ty≥
 
	tCSI_SASC⁄ãxtBody
;

3394 
	sCSI_SASC⁄ãxtBody_ty≥
 {

3395 
CSI_MsgTy≥
 
	g_d
;

3397 
CSI_E°ablishC⁄ãxt
 
	ge°ablish_msg
;

3398 
CSI_Com∂ëeE°ablishC⁄ãxt
 
	gcom∂ëe_msg
;

3399 
CSI_C⁄ãxtEº‹
 
	gîr‹_msg
;

3400 
CSI_MesßgeInC⁄ãxt
 
	gö_c⁄ãxt_msg
;

3401 } 
	g_u
;

3403 #i‡!
deföed
(
TC_IMPL_TC_CSI_SASC⁄ãxtBody_0
)

3404 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_0
 'i'

	)

3405 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_1
 'o'

	)

3406 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_2
 'p'

	)

3407 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_3
 '_'

	)

3408 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_4
 'd'

	)

3409 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_5
 'e'

	)

3410 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_6
 'f'

	)

3411 
	#TC_IMPL_TC_CSI_SASC⁄ãxtBody_7
 's'

	)

3412 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3417 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_SASC⁄ãxtBody_°ru˘
;

3418 
	#TC_CSI_SASC⁄ãxtBody
 ((
CORBA_Ty≥Code
)&
TC_CSI_SASC⁄ãxtBody_°ru˘
)

	)

3420 
	#CSI_SASC⁄ãxtBody__Æloc
(Ë((
CSI_SASC⁄ãxtBody
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSI_SASC⁄ãxtBody
))

	)

3421 
	#CSI_SASC⁄ãxtBody__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSI_SASC⁄ãxtBody
,(m),(d))

	)

3423 #i‡!
deföed
(
_CSI_SåögOID_deföed
)

3424 
	#_CSI_SåögOID_deföed
 1

	)

3425 
CORBA_°rög
 
	tCSI_SåögOID
;

3426 
	#CSI_SåögOID_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_°rög_m¨shÆ
((x),(y),(z))

	)

3427 
	#CSI_SåögOID_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_°rög_dem¨shÆ
((x),(y),(z),(i))

	)

3428 #i‡!
deföed
(
TC_IMPL_TC_CSI_SåögOID_0
)

3429 
	#TC_IMPL_TC_CSI_SåögOID_0
 'i'

	)

3430 
	#TC_IMPL_TC_CSI_SåögOID_1
 'o'

	)

3431 
	#TC_IMPL_TC_CSI_SåögOID_2
 'p'

	)

3432 
	#TC_IMPL_TC_CSI_SåögOID_3
 '_'

	)

3433 
	#TC_IMPL_TC_CSI_SåögOID_4
 'd'

	)

3434 
	#TC_IMPL_TC_CSI_SåögOID_5
 'e'

	)

3435 
	#TC_IMPL_TC_CSI_SåögOID_6
 'f'

	)

3436 
	#TC_IMPL_TC_CSI_SåögOID_7
 's'

	)

3437 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3442 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSI_SåögOID_°ru˘
;

3443 
	#TC_CSI_SåögOID
 ((
CORBA_Ty≥Code
)&
TC_CSI_SåögOID_°ru˘
)

	)

3445 
	#CSI_SåögOID__Æloc
(Ë((
CSI_SåögOID
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_°rög
))

	)

3446 
	#CSI_SåögOID__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_°rög
,(m),(d))

	)

3448 #i‚de‡
CSI_KRB5MechOID


3449 
	#CSI_KRB5MechOID
 "oid:1.2.840.113554.1.2.2"

	)

3452 #i‚de‡
CSI_GSS_NT_Exp‹t_Name_OID


3453 
	#CSI_GSS_NT_Exp‹t_Name_OID
 "oid:1.3.6.1.5.6.4"

	)

3456 #i‚de‡
CSI_GSS_NT_Sc›ed_U£∫ame_OID


3457 
	#CSI_GSS_NT_Sc›ed_U£∫ame_OID
 "oid:2.23.130.1.2.1"

	)

3460 #i‡!
deföed
(
_CSIIOP_Assocüti⁄O±i⁄s_deföed
)

3461 
	#_CSIIOP_Assocüti⁄O±i⁄s_deföed
 1

	)

3462 
CORBA_unsig√d_sh‹t
 
	tCSIIOP_Assocüti⁄O±i⁄s
;

3463 
	#CSIIOP_Assocüti⁄O±i⁄s_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_sh‹t_m¨shÆ
((x),(y),(z))

	)

3464 
	#CSIIOP_Assocüti⁄O±i⁄s_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

3465 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_0
)

3466 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_0
 'i'

	)

3467 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_1
 'o'

	)

3468 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_2
 'p'

	)

3469 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_3
 '_'

	)

3470 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_4
 'd'

	)

3471 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_5
 'e'

	)

3472 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_6
 'f'

	)

3473 
	#TC_IMPL_TC_CSIIOP_Assocüti⁄O±i⁄s_7
 's'

	)

3474 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3479 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Assocüti⁄O±i⁄s_°ru˘
;

3480 
	#TC_CSIIOP_Assocüti⁄O±i⁄s
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Assocüti⁄O±i⁄s_°ru˘
)

	)

3482 
	#CSIIOP_Assocüti⁄O±i⁄s__Æloc
(Ë((
CSIIOP_Assocüti⁄O±i⁄s
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_sh‹t
))

	)

3483 
	#CSIIOP_Assocüti⁄O±i⁄s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_sh‹t
,(m),(d))

	)

3485 #i‚de‡
CSIIOP_NoPrŸe˘i⁄


3486 
	#CSIIOP_NoPrŸe˘i⁄
 1U

	)

3489 #i‚de‡
CSIIOP_I¡egrôy


3490 
	#CSIIOP_I¡egrôy
 2U

	)

3493 #i‚de‡
CSIIOP_C⁄fidítülôy


3494 
	#CSIIOP_C⁄fidítülôy
 4U

	)

3497 #i‚de‡
CSIIOP_Dëe˘Rïœy


3498 
	#CSIIOP_Dëe˘Rïœy
 8U

	)

3501 #i‚de‡
CSIIOP_Dëe˘Mis‹dîög


3502 
	#CSIIOP_Dëe˘Mis‹dîög
 16U

	)

3505 #i‚de‡
CSIIOP_E°ablishTru°InT¨gë


3506 
	#CSIIOP_E°ablishTru°InT¨gë
 32U

	)

3509 #i‚de‡
CSIIOP_E°ablishTru°InClõ¡


3510 
	#CSIIOP_E°ablishTru°InClõ¡
 64U

	)

3513 #i‚de‡
CSIIOP_NoDñeg©i⁄


3514 
	#CSIIOP_NoDñeg©i⁄
 128U

	)

3517 #i‚de‡
CSIIOP_Sim∂eDñeg©i⁄


3518 
	#CSIIOP_Sim∂eDñeg©i⁄
 256U

	)

3521 #i‚de‡
CSIIOP_ComposôeDñeg©i⁄


3522 
	#CSIIOP_ComposôeDñeg©i⁄
 512U

	)

3525 #i‚de‡
CSIIOP_IdítôyAs£πi⁄


3526 
	#CSIIOP_IdítôyAs£πi⁄
 1024U

	)

3529 #i‚de‡
CSIIOP_Dñeg©i⁄ByClõ¡


3530 
	#CSIIOP_Dñeg©i⁄ByClõ¡
 2048U

	)

3533 #i‡!
deföed
(
_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_deföed
)

3534 
	#_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_deföed
 1

	)

3535 
CORBA_unsig√d_l⁄g
 
	tCSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax
;

3536 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

3537 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

3538 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_0
)

3539 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_0
 'i'

	)

3540 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_1
 'o'

	)

3541 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_2
 'p'

	)

3542 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_3
 '_'

	)

3543 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_4
 'd'

	)

3544 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_5
 'e'

	)

3545 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_6
 'f'

	)

3546 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_7
 's'

	)

3547 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3552 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_°ru˘
;

3553 
	#TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax_°ru˘
)

	)

3555 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax__Æloc
(Ë((
CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

3556 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

3558 #i‚de‡
CSIIOP_SCS_GíîÆNames


3559 
	#CSIIOP_SCS_GíîÆNames
 324816U

	)

3562 #i‚de‡
CSIIOP_SCS_GSSExp‹ãdName


3563 
	#CSIIOP_SCS_GSSExp‹ãdName
 324817U

	)

3566 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

3567 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

3568 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

3569 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

3570 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

3571 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

3572 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

3573 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

3574 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

3575 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

3576 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

3577 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

3578 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

3580 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

3581 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

3582 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

3583 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

3584 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

3585 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

3586 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

3587 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

3588 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

3589 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3594 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

3595 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

3597 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3598 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3599 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3600 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3602 #i‡!
deföed
(
_CSIIOP_Sîvi˚S≥cificName_deföed
)

3603 
	#_CSIIOP_Sîvi˚S≥cificName_deföed
 1

	)

3604 
CORBA_£quí˚_CORBA_o˘ë
 
	tCSIIOP_Sîvi˚S≥cificName
;

3605 
	#CSIIOP_Sîvi˚S≥cificName_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_o˘ë_m¨shÆ
((x),(y),(z))

	)

3606 
	#CSIIOP_Sîvi˚S≥cificName_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_o˘ë_dem¨shÆ
((x),(y),(z),(i))

	)

3607 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_0
)

3608 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_0
 'i'

	)

3609 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_1
 'o'

	)

3610 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_2
 'p'

	)

3611 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_3
 '_'

	)

3612 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_4
 'd'

	)

3613 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_5
 'e'

	)

3614 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_6
 'f'

	)

3615 
	#TC_IMPL_TC_CSIIOP_Sîvi˚S≥cificName_7
 's'

	)

3616 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3621 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Sîvi˚S≥cificName_°ru˘
;

3622 
	#TC_CSIIOP_Sîvi˚S≥cificName
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Sîvi˚S≥cificName_°ru˘
)

	)

3624 
	#CSIIOP_Sîvi˚S≥cificName__Æloc
(Ë((
CSIIOP_Sîvi˚S≥cificName
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

3625 
	#CSIIOP_Sîvi˚S≥cificName__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

3626 
	#CSIIOP_Sîvi˚S≥cificName_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

3628 #i‡!
deföed
(
_CSIIOP_Sîvi˚C⁄figuøti⁄_deföed
)

3629 
	#_CSIIOP_Sîvi˚C⁄figuøti⁄_deföed
 1

	)

3630 
CSIIOP_Sîvi˚C⁄figuøti⁄_ty≥
 
	tCSIIOP_Sîvi˚C⁄figuøti⁄
;

3631 
	sCSIIOP_Sîvi˚C⁄figuøti⁄_ty≥
 {

3632 
CSIIOP_Sîvi˚C⁄figuøti⁄Sy¡ax
 
	gsy¡ax
;

3633 
CSIIOP_Sîvi˚S≥cificName
 
	g«me
;

3636 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_0
)

3637 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_0
 'i'

	)

3638 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_1
 'o'

	)

3639 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_2
 'p'

	)

3640 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_3
 '_'

	)

3641 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_4
 'd'

	)

3642 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_5
 'e'

	)

3643 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_6
 'f'

	)

3644 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄_7
 's'

	)

3645 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3650 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Sîvi˚C⁄figuøti⁄_°ru˘
;

3651 
	#TC_CSIIOP_Sîvi˚C⁄figuøti⁄
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Sîvi˚C⁄figuøti⁄_°ru˘
)

	)

3653 
	#CSIIOP_Sîvi˚C⁄figuøti⁄__Æloc
(Ë((
CSIIOP_Sîvi˚C⁄figuøti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_Sîvi˚C⁄figuøti⁄
))

	)

3654 
	#CSIIOP_Sîvi˚C⁄figuøti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_Sîvi˚C⁄figuøti⁄
,(m),(d))

	)

3656 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
)

3657 
	#ORBIT_DECL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
 1

	)

3658 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_0
 'i'

	)

3659 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_1
 'o'

	)

3660 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_2
 'p'

	)

3661 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_3
 '_'

	)

3662 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_4
 'd'

	)

3663 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_5
 'e'

	)

3664 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_6
 'f'

	)

3665 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_7
 's'

	)

3666 #i‡!
deföed
(
_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_deföed
)

3667 
	#_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_deföed
 1

	)

3668 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CSIIOP_Sîvi˚C⁄figuøti⁄
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
;

3670 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_0
)

3671 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_0
 'i'

	)

3672 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_1
 'o'

	)

3673 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_2
 'p'

	)

3674 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_3
 '_'

	)

3675 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_4
 'd'

	)

3676 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_5
 'e'

	)

3677 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_6
 'f'

	)

3678 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_7
 's'

	)

3679 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3684 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_°ru˘
;

3685 
	#TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_°ru˘
)

	)

3687 
	#CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄__Æloc
(Ë((
CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
))

	)

3688 
	#CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
,(m),(d))

	)

3689 
	#CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_Ælocbuf
(
l
Ë((
CSIIOP_Sîvi˚C⁄figuøti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
, (l)))

	)

3690 
	#CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_Ælocbuf
(
l
Ë((
CSIIOP_Sîvi˚C⁄figuøti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
, (l)))

	)

3692 #i‡!
deföed
(
_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_deföed
)

3693 
	#_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_deföed
 1

	)

3694 
CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
 
	tCSIIOP_Sîvi˚C⁄figuøti⁄Li°
;

3695 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Li°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_m¨shÆ
((x),(y),(z))

	)

3696 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Li°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄_dem¨shÆ
((x),(y),(z),(i))

	)

3697 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_0
)

3698 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_0
 'i'

	)

3699 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_1
 'o'

	)

3700 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_2
 'p'

	)

3701 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_3
 '_'

	)

3702 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_4
 'd'

	)

3703 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_5
 'e'

	)

3704 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_6
 'f'

	)

3705 
	#TC_IMPL_TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_7
 's'

	)

3706 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3711 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_°ru˘
;

3712 
	#TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Sîvi˚C⁄figuøti⁄Li°_°ru˘
)

	)

3714 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Li°__Æloc
(Ë((
CSIIOP_Sîvi˚C⁄figuøti⁄Li°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
))

	)

3715 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Li°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
,(m),(d))

	)

3716 
	#CSIIOP_Sîvi˚C⁄figuøti⁄Li°_Ælocbuf
(
l
Ë((
CSIIOP_Sîvi˚C⁄figuøti⁄
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_Sîvi˚C⁄figuøti⁄
, (l)))

	)

3718 #i‡!
deföed
(
_CSIIOP_AS_C⁄ãxtSec_deföed
)

3719 
	#_CSIIOP_AS_C⁄ãxtSec_deföed
 1

	)

3720 
CSIIOP_AS_C⁄ãxtSec_ty≥
 
	tCSIIOP_AS_C⁄ãxtSec
;

3721 
	sCSIIOP_AS_C⁄ãxtSec_ty≥
 {

3722 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_suµ‹ts
;

3723 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_ªquúes
;

3724 
CSI_OID
 
	g˛õ¡_authítiˇti⁄_mech
;

3725 
CSI_GSS_NT_Exp‹ãdName
 
	gèrgë_«me
;

3728 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_0
)

3729 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_0
 'i'

	)

3730 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_1
 'o'

	)

3731 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_2
 'p'

	)

3732 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_3
 '_'

	)

3733 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_4
 'd'

	)

3734 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_5
 'e'

	)

3735 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_6
 'f'

	)

3736 
	#TC_IMPL_TC_CSIIOP_AS_C⁄ãxtSec_7
 's'

	)

3737 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3742 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_AS_C⁄ãxtSec_°ru˘
;

3743 
	#TC_CSIIOP_AS_C⁄ãxtSec
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_AS_C⁄ãxtSec_°ru˘
)

	)

3745 
	#CSIIOP_AS_C⁄ãxtSec__Æloc
(Ë((
CSIIOP_AS_C⁄ãxtSec
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_AS_C⁄ãxtSec
))

	)

3746 
	#CSIIOP_AS_C⁄ãxtSec__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_AS_C⁄ãxtSec
,(m),(d))

	)

3748 #i‡!
deföed
(
_CSIIOP_SAS_C⁄ãxtSec_deföed
)

3749 
	#_CSIIOP_SAS_C⁄ãxtSec_deföed
 1

	)

3750 
CSIIOP_SAS_C⁄ãxtSec_ty≥
 
	tCSIIOP_SAS_C⁄ãxtSec
;

3751 
	sCSIIOP_SAS_C⁄ãxtSec_ty≥
 {

3752 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_suµ‹ts
;

3753 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_ªquúes
;

3754 
CSIIOP_Sîvi˚C⁄figuøti⁄Li°
 
	g¥ivûege_auth‹ôõs
;

3755 
CSI_OIDLi°
 
	gsuµ‹ãd_«mög_mech™isms
;

3756 
CSI_IdítôyTokíTy≥
 
	gsuµ‹ãd_idítôy_ty≥s
;

3759 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_0
)

3760 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_0
 'i'

	)

3761 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_1
 'o'

	)

3762 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_2
 'p'

	)

3763 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_3
 '_'

	)

3764 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_4
 'd'

	)

3765 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_5
 'e'

	)

3766 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_6
 'f'

	)

3767 
	#TC_IMPL_TC_CSIIOP_SAS_C⁄ãxtSec_7
 's'

	)

3768 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3773 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_SAS_C⁄ãxtSec_°ru˘
;

3774 
	#TC_CSIIOP_SAS_C⁄ãxtSec
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_SAS_C⁄ãxtSec_°ru˘
)

	)

3776 
	#CSIIOP_SAS_C⁄ãxtSec__Æloc
(Ë((
CSIIOP_SAS_C⁄ãxtSec
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_SAS_C⁄ãxtSec
))

	)

3777 
	#CSIIOP_SAS_C⁄ãxtSec__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_SAS_C⁄ãxtSec
,(m),(d))

	)

3779 #i‡!
deföed
(
_CSIIOP_CompoundSecMech_deföed
)

3780 
	#_CSIIOP_CompoundSecMech_deföed
 1

	)

3781 
CSIIOP_CompoundSecMech_ty≥
 
	tCSIIOP_CompoundSecMech
;

3782 
	sCSIIOP_CompoundSecMech_ty≥
 {

3783 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_ªquúes
;

3784 
IOP_TaggedComp⁄ít
 
	gå™•‹t_mech
;

3785 
CSIIOP_AS_C⁄ãxtSec
 
	gas_c⁄ãxt_mech
;

3786 
CSIIOP_SAS_C⁄ãxtSec
 
	gßs_c⁄ãxt_mech
;

3789 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_CompoundSecMech_0
)

3790 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_0
 'i'

	)

3791 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_1
 'o'

	)

3792 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_2
 'p'

	)

3793 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_3
 '_'

	)

3794 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_4
 'd'

	)

3795 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_5
 'e'

	)

3796 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_6
 'f'

	)

3797 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech_7
 's'

	)

3798 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3803 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_CompoundSecMech_°ru˘
;

3804 
	#TC_CSIIOP_CompoundSecMech
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_CompoundSecMech_°ru˘
)

	)

3806 
	#CSIIOP_CompoundSecMech__Æloc
(Ë((
CSIIOP_CompoundSecMech
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_CompoundSecMech
))

	)

3807 
	#CSIIOP_CompoundSecMech__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_CompoundSecMech
,(m),(d))

	)

3809 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CSIIOP_CompoundSecMech
)

3810 
	#ORBIT_DECL_CORBA_£quí˚_CSIIOP_CompoundSecMech
 1

	)

3811 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_0
 'i'

	)

3812 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_1
 'o'

	)

3813 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_2
 'p'

	)

3814 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_3
 '_'

	)

3815 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_4
 'd'

	)

3816 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_5
 'e'

	)

3817 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_6
 'f'

	)

3818 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_CompoundSecMech_7
 's'

	)

3819 #i‡!
deföed
(
_CORBA_£quí˚_CSIIOP_CompoundSecMech_deföed
)

3820 
	#_CORBA_£quí˚_CSIIOP_CompoundSecMech_deföed
 1

	)

3821 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CSIIOP_CompoundSecMech
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CSIIOP_CompoundSecMech
;

3823 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_0
)

3824 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_0
 'i'

	)

3825 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_1
 'o'

	)

3826 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_2
 'p'

	)

3827 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_3
 '_'

	)

3828 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_4
 'd'

	)

3829 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_5
 'e'

	)

3830 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_6
 'f'

	)

3831 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_7
 's'

	)

3832 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3837 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_°ru˘
;

3838 
	#TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech_°ru˘
)

	)

3840 
	#CORBA_£quí˚_CSIIOP_CompoundSecMech__Æloc
(Ë((
CORBA_£quí˚_CSIIOP_CompoundSecMech
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
))

	)

3841 
	#CORBA_£quí˚_CSIIOP_CompoundSecMech__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
,(m),(d))

	)

3842 
	#CORBA_£quí˚_CSIIOP_CompoundSecMech_Ælocbuf
(
l
Ë((
CSIIOP_CompoundSecMech
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
, (l)))

	)

3843 
	#CORBA_£quí˚_CSIIOP_CompoundSecMech_Ælocbuf
(
l
Ë((
CSIIOP_CompoundSecMech
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
, (l)))

	)

3845 #i‡!
deföed
(
_CSIIOP_CompoundSecMech™isms_deföed
)

3846 
	#_CSIIOP_CompoundSecMech™isms_deföed
 1

	)

3847 
CORBA_£quí˚_CSIIOP_CompoundSecMech
 
	tCSIIOP_CompoundSecMech™isms
;

3848 
	#CSIIOP_CompoundSecMech™isms_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CSIIOP_CompoundSecMech_m¨shÆ
((x),(y),(z))

	)

3849 
	#CSIIOP_CompoundSecMech™isms_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CSIIOP_CompoundSecMech_dem¨shÆ
((x),(y),(z),(i))

	)

3850 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_0
)

3851 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_0
 'i'

	)

3852 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_1
 'o'

	)

3853 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_2
 'p'

	)

3854 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_3
 '_'

	)

3855 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_4
 'd'

	)

3856 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_5
 'e'

	)

3857 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_6
 'f'

	)

3858 
	#TC_IMPL_TC_CSIIOP_CompoundSecMech™isms_7
 's'

	)

3859 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3864 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_CompoundSecMech™isms_°ru˘
;

3865 
	#TC_CSIIOP_CompoundSecMech™isms
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_CompoundSecMech™isms_°ru˘
)

	)

3867 
	#CSIIOP_CompoundSecMech™isms__Æloc
(Ë((
CSIIOP_CompoundSecMech™isms
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
))

	)

3868 
	#CSIIOP_CompoundSecMech™isms__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
,(m),(d))

	)

3869 
	#CSIIOP_CompoundSecMech™isms_Ælocbuf
(
l
Ë((
CSIIOP_CompoundSecMech
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_CompoundSecMech
, (l)))

	)

3871 #i‡!
deföed
(
_CSIIOP_CompoundSecMechLi°_deföed
)

3872 
	#_CSIIOP_CompoundSecMechLi°_deföed
 1

	)

3873 
CSIIOP_CompoundSecMechLi°_ty≥
 
	tCSIIOP_CompoundSecMechLi°
;

3874 
	sCSIIOP_CompoundSecMechLi°_ty≥
 {

3875 
CORBA_boﬁón
 
	g°©eful
;

3876 
CSIIOP_CompoundSecMech™isms
 
	gmech™ism_li°
;

3879 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_0
)

3880 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_0
 'i'

	)

3881 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_1
 'o'

	)

3882 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_2
 'p'

	)

3883 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_3
 '_'

	)

3884 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_4
 'd'

	)

3885 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_5
 'e'

	)

3886 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_6
 'f'

	)

3887 
	#TC_IMPL_TC_CSIIOP_CompoundSecMechLi°_7
 's'

	)

3888 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3893 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_CompoundSecMechLi°_°ru˘
;

3894 
	#TC_CSIIOP_CompoundSecMechLi°
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_CompoundSecMechLi°_°ru˘
)

	)

3896 
	#CSIIOP_CompoundSecMechLi°__Æloc
(Ë((
CSIIOP_CompoundSecMechLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_CompoundSecMechLi°
))

	)

3897 
	#CSIIOP_CompoundSecMechLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_CompoundSecMechLi°
,(m),(d))

	)

3899 #i‡!
deföed
(
_CSIIOP_Tøn•‹tAddªss_deföed
)

3900 
	#_CSIIOP_Tøn•‹tAddªss_deföed
 1

	)

3901 
CSIIOP_Tøn•‹tAddªss_ty≥
 
	tCSIIOP_Tøn•‹tAddªss
;

3902 
	sCSIIOP_Tøn•‹tAddªss_ty≥
 {

3903 
CORBA_°rög
 
	gho°_«me
;

3904 
CORBA_unsig√d_sh‹t
 
	gp‹t
;

3907 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_0
)

3908 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_0
 'i'

	)

3909 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_1
 'o'

	)

3910 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_2
 'p'

	)

3911 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_3
 '_'

	)

3912 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_4
 'd'

	)

3913 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_5
 'e'

	)

3914 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_6
 'f'

	)

3915 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªss_7
 's'

	)

3916 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3921 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Tøn•‹tAddªss_°ru˘
;

3922 
	#TC_CSIIOP_Tøn•‹tAddªss
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Tøn•‹tAddªss_°ru˘
)

	)

3924 
	#CSIIOP_Tøn•‹tAddªss__Æloc
(Ë((
CSIIOP_Tøn•‹tAddªss
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_Tøn•‹tAddªss
))

	)

3925 
	#CSIIOP_Tøn•‹tAddªss__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_Tøn•‹tAddªss
,(m),(d))

	)

3927 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
)

3928 
	#ORBIT_DECL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
 1

	)

3929 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_0
 'i'

	)

3930 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_1
 'o'

	)

3931 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_2
 'p'

	)

3932 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_3
 '_'

	)

3933 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_4
 'd'

	)

3934 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_5
 'e'

	)

3935 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_6
 'f'

	)

3936 
	#ORBIT_IMPL_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_7
 's'

	)

3937 #i‡!
deföed
(
_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_deföed
)

3938 
	#_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_deföed
 1

	)

3939 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CSIIOP_Tøn•‹tAddªss
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
;

3941 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_0
)

3942 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_0
 'i'

	)

3943 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_1
 'o'

	)

3944 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_2
 'p'

	)

3945 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_3
 '_'

	)

3946 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_4
 'd'

	)

3947 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_5
 'e'

	)

3948 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_6
 'f'

	)

3949 
	#TC_IMPL_TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_7
 's'

	)

3950 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3955 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_°ru˘
;

3956 
	#TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_°ru˘
)

	)

3958 
	#CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss__Æloc
(Ë((
CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
))

	)

3959 
	#CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
,(m),(d))

	)

3960 
	#CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_Ælocbuf
(
l
Ë((
CSIIOP_Tøn•‹tAddªss
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
, (l)))

	)

3961 
	#CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_Ælocbuf
(
l
Ë((
CSIIOP_Tøn•‹tAddªss
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
, (l)))

	)

3963 #i‡!
deföed
(
_CSIIOP_Tøn•‹tAddªssLi°_deföed
)

3964 
	#_CSIIOP_Tøn•‹tAddªssLi°_deföed
 1

	)

3965 
CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
 
	tCSIIOP_Tøn•‹tAddªssLi°
;

3966 
	#CSIIOP_Tøn•‹tAddªssLi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_m¨shÆ
((x),(y),(z))

	)

3967 
	#CSIIOP_Tøn•‹tAddªssLi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss_dem¨shÆ
((x),(y),(z),(i))

	)

3968 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_0
)

3969 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_0
 'i'

	)

3970 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_1
 'o'

	)

3971 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_2
 'p'

	)

3972 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_3
 '_'

	)

3973 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_4
 'd'

	)

3974 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_5
 'e'

	)

3975 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_6
 'f'

	)

3976 
	#TC_IMPL_TC_CSIIOP_Tøn•‹tAddªssLi°_7
 's'

	)

3977 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


3982 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_Tøn•‹tAddªssLi°_°ru˘
;

3983 
	#TC_CSIIOP_Tøn•‹tAddªssLi°
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_Tøn•‹tAddªssLi°_°ru˘
)

	)

3985 
	#CSIIOP_Tøn•‹tAddªssLi°__Æloc
(Ë((
CSIIOP_Tøn•‹tAddªssLi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
))

	)

3986 
	#CSIIOP_Tøn•‹tAddªssLi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
,(m),(d))

	)

3987 
	#CSIIOP_Tøn•‹tAddªssLi°_Ælocbuf
(
l
Ë((
CSIIOP_Tøn•‹tAddªss
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CSIIOP_Tøn•‹tAddªss
, (l)))

	)

3989 #i‚de‡
CSIIOP_TAG_SECIOP_SEC_TRANS


3990 
	#CSIIOP_TAG_SECIOP_SEC_TRANS
 35U

	)

3993 #i‡!
deföed
(
_CSIIOP_SECIOP_SEC_TRANS_deföed
)

3994 
	#_CSIIOP_SECIOP_SEC_TRANS_deföed
 1

	)

3995 
CSIIOP_SECIOP_SEC_TRANS_ty≥
 
	tCSIIOP_SECIOP_SEC_TRANS
;

3996 
	sCSIIOP_SECIOP_SEC_TRANS_ty≥
 {

3997 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_suµ‹ts
;

3998 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_ªquúes
;

3999 
CSI_OID
 
	gmech_oid
;

4000 
CSI_GSS_NT_Exp‹ãdName
 
	gèrgë_«me
;

4001 
CSIIOP_Tøn•‹tAddªssLi°
 
	gaddªs£s
;

4004 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_0
)

4005 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_0
 'i'

	)

4006 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_1
 'o'

	)

4007 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_2
 'p'

	)

4008 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_3
 '_'

	)

4009 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_4
 'd'

	)

4010 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_5
 'e'

	)

4011 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_6
 'f'

	)

4012 
	#TC_IMPL_TC_CSIIOP_SECIOP_SEC_TRANS_7
 's'

	)

4013 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4018 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_SECIOP_SEC_TRANS_°ru˘
;

4019 
	#TC_CSIIOP_SECIOP_SEC_TRANS
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_SECIOP_SEC_TRANS_°ru˘
)

	)

4021 
	#CSIIOP_SECIOP_SEC_TRANS__Æloc
(Ë((
CSIIOP_SECIOP_SEC_TRANS
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_SECIOP_SEC_TRANS
))

	)

4022 
	#CSIIOP_SECIOP_SEC_TRANS__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_SECIOP_SEC_TRANS
,(m),(d))

	)

4024 #i‚de‡
CSIIOP_TAG_TLS_SEC_TRANS


4025 
	#CSIIOP_TAG_TLS_SEC_TRANS
 36U

	)

4028 #i‡!
deföed
(
_CSIIOP_TLS_SEC_TRANS_deföed
)

4029 
	#_CSIIOP_TLS_SEC_TRANS_deföed
 1

	)

4030 
CSIIOP_TLS_SEC_TRANS_ty≥
 
	tCSIIOP_TLS_SEC_TRANS
;

4031 
	sCSIIOP_TLS_SEC_TRANS_ty≥
 {

4032 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_suµ‹ts
;

4033 
CSIIOP_Assocüti⁄O±i⁄s
 
	gèrgë_ªquúes
;

4034 
CSIIOP_Tøn•‹tAddªssLi°
 
	gaddªs£s
;

4037 #i‡!
deföed
(
TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_0
)

4038 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_0
 'i'

	)

4039 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_1
 'o'

	)

4040 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_2
 'p'

	)

4041 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_3
 '_'

	)

4042 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_4
 'd'

	)

4043 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_5
 'e'

	)

4044 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_6
 'f'

	)

4045 
	#TC_IMPL_TC_CSIIOP_TLS_SEC_TRANS_7
 's'

	)

4046 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4051 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CSIIOP_TLS_SEC_TRANS_°ru˘
;

4052 
	#TC_CSIIOP_TLS_SEC_TRANS
 ((
CORBA_Ty≥Code
)&
TC_CSIIOP_TLS_SEC_TRANS_°ru˘
)

	)

4054 
	#CSIIOP_TLS_SEC_TRANS__Æloc
(Ë((
CSIIOP_TLS_SEC_TRANS
 *)
	`ORBô_smÆl_Æloc
 (
TC_CSIIOP_TLS_SEC_TRANS
))

	)

4055 
	#CSIIOP_TLS_SEC_TRANS__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CSIIOP_TLS_SEC_TRANS
,(m),(d))

	)

4057 #i‡!
deföed
(
_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_deföed
)

4058 
	#_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_deföed
 1

	)

4059 
CORBA_unsig√d_sh‹t
 
	tBiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue
;

4060 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_sh‹t_m¨shÆ
((x),(y),(z))

	)

4061 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_sh‹t_dem¨shÆ
((x),(y),(z),(i))

	)

4062 #i‡!
deföed
(
TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_0
)

4063 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_0
 'i'

	)

4064 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_1
 'o'

	)

4065 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_2
 'p'

	)

4066 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_3
 '_'

	)

4067 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_4
 'd'

	)

4068 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_5
 'e'

	)

4069 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_6
 'f'

	)

4070 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_7
 's'

	)

4071 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4076 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_°ru˘
;

4077 
	#TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue_°ru˘
)

	)

4079 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue__Æloc
(Ë((
BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_sh‹t
))

	)

4080 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_sh‹t
,(m),(d))

	)

4082 #i‚de‡
BiDúPﬁicy_NORMAL


4083 
	#BiDúPﬁicy_NORMAL
 0U

	)

4086 #i‚de‡
BiDúPﬁicy_BOTH


4087 
	#BiDúPﬁicy_BOTH
 1U

	)

4090 #i‚de‡
BiDúPﬁicy_BIDIRECTIONAL_POLICY_TYPE


4091 
	#BiDúPﬁicy_BIDIRECTIONAL_POLICY_TYPE
 37U

	)

4094 #i‡!
deföed
(
ORBIT_DECL_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy
Ë&& !deföed(
_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_deföed
)

4095 
	#ORBIT_DECL_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy
 1

	)

4096 
	#_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_deföed
 1

	)

4097 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy__‰ìkids
 
CORBA_Obje˘__‰ìkids


	)

4098 
CORBA_Obje˘
 
	tBiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy
;

4099 
CORBA_unsig√d_l⁄g
 
BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy__˛assid
;

4100 #i‡!
deföed
(
TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_0
)

4101 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_0
 'i'

	)

4102 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_1
 'o'

	)

4103 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_2
 'p'

	)

4104 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_3
 '_'

	)

4105 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_4
 'd'

	)

4106 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_5
 'e'

	)

4107 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_6
 'f'

	)

4108 
	#TC_IMPL_TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_7
 's'

	)

4109 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4114 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_°ru˘
;

4115 
	#TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy
 ((
CORBA_Ty≥Code
)&
TC_BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_°ru˘
)

	)

4118 #i‡!
deföed
(
_CONV_FRAME_CodeSëId_deföed
)

4119 
	#_CONV_FRAME_CodeSëId_deföed
 1

	)

4120 
CORBA_unsig√d_l⁄g
 
	tCONV_FRAME_CodeSëId
;

4121 
	#CONV_FRAME_CodeSëId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

4122 
	#CONV_FRAME_CodeSëId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

4123 #i‡!
deföed
(
TC_IMPL_TC_CONV_FRAME_CodeSëId_0
)

4124 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_0
 'i'

	)

4125 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_1
 'o'

	)

4126 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_2
 'p'

	)

4127 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_3
 '_'

	)

4128 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_4
 'd'

	)

4129 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_5
 'e'

	)

4130 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_6
 'f'

	)

4131 
	#TC_IMPL_TC_CONV_FRAME_CodeSëId_7
 's'

	)

4132 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4137 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CONV_FRAME_CodeSëId_°ru˘
;

4138 
	#TC_CONV_FRAME_CodeSëId
 ((
CORBA_Ty≥Code
)&
TC_CONV_FRAME_CodeSëId_°ru˘
)

	)

4140 
	#CONV_FRAME_CodeSëId__Æloc
(Ë((
CONV_FRAME_CodeSëId
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_unsig√d_l⁄g
))

	)

4141 
	#CONV_FRAME_CodeSëId__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_unsig√d_l⁄g
,(m),(d))

	)

4143 #i‡!
deföed
(
_CONV_FRAME_CodeSëComp⁄ít_deföed
)

4144 
	#_CONV_FRAME_CodeSëComp⁄ít_deföed
 1

	)

4145 
CONV_FRAME_CodeSëComp⁄ít_ty≥
 
	tCONV_FRAME_CodeSëComp⁄ít
;

4146 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
)

4147 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 1

	)

4148 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'i'

	)

4149 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

4150 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'p'

	)

4151 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 '_'

	)

4152 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'd'

	)

4153 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 'e'

	)

4154 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'f'

	)

4155 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 's'

	)

4156 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
)

4157 
	#_CORBA_£quí˚_CORBA_unsig√d_l⁄g_deföed
 1

	)

4158 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; CORBA_unsig√d_l⁄g* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_unsig√d_l⁄g
;

4160 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
)

4161 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_0
 'i'

	)

4162 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_1
 'o'

	)

4163 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_2
 'p'

	)

4164 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_3
 '_'

	)

4165 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_4
 'd'

	)

4166 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_5
 'e'

	)

4167 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_6
 'f'

	)

4168 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_7
 's'

	)

4169 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4174 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
;

4175 
	#TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g_°ru˘
)

	)

4177 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc
(Ë((
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
))

	)

4178 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
,(m),(d))

	)

4179 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

4180 
	#CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf
(
l
Ë((
CORBA_unsig√d_l⁄g
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_unsig√d_l⁄g
, (l)))

	)

4182 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CONV_FRAME_CodeSëId
)

4183 
	#ORBIT_DECL_CORBA_£quí˚_CONV_FRAME_CodeSëId
 1

	)

4184 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_0
 'i'

	)

4185 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_1
 'o'

	)

4186 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_2
 'p'

	)

4187 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_3
 '_'

	)

4188 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_4
 'd'

	)

4189 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_5
 'e'

	)

4190 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_6
 'f'

	)

4191 
	#ORBIT_IMPL_CORBA_£quí˚_CONV_FRAME_CodeSëId_7
 's'

	)

4192 #i‡!
deföed
(
_CORBA_£quí˚_CONV_FRAME_CodeSëId_deföed
)

4193 
	#_CORBA_£quí˚_CONV_FRAME_CodeSëId_deföed
 1

	)

4194 
CORBA_£quí˚_CORBA_unsig√d_l⁄g
 
	tCORBA_£quí˚_CONV_FRAME_CodeSëId
;

4196 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_0
)

4197 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_0
 'i'

	)

4198 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_1
 'o'

	)

4199 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_2
 'p'

	)

4200 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_3
 '_'

	)

4201 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_4
 'd'

	)

4202 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_5
 'e'

	)

4203 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_6
 'f'

	)

4204 
	#TC_IMPL_TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_7
 's'

	)

4205 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4210 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_°ru˘
;

4211 
	#TC_CORBA_£quí˚_CONV_FRAME_CodeSëId
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CONV_FRAME_CodeSëId_°ru˘
)

	)

4213 
	#CORBA_£quí˚_CONV_FRAME_CodeSëId__Æloc
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g__Æloc


	)

4214 
	#CORBA_£quí˚_CONV_FRAME_CodeSëId__‰ìkids
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g__‰ìkids


	)

4215 
	#CORBA_£quí˚_CONV_FRAME_CodeSëId_Ælocbuf
 
CORBA_£quí˚_CORBA_unsig√d_l⁄g_Ælocbuf


	)

4216 
	#CORBA_£quí˚_CONV_FRAME_CodeSëId_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_m¨shÆ
((x),(y),(z))

	)

4217 
	#CORBA_£quí˚_CONV_FRAME_CodeSëId_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_unsig√d_l⁄g_dem¨shÆ
((x),(y),(z),(i))

	)

4219 
	sCONV_FRAME_CodeSëComp⁄ít_ty≥
 {

4220 
CONV_FRAME_CodeSëId
 
	g«tive_code_£t
;

4221 
CORBA_£quí˚_CONV_FRAME_CodeSëId
 
	gc⁄vîsi⁄_code_£ts
;

4224 #i‡!
deföed
(
TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_0
)

4225 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_0
 'i'

	)

4226 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_1
 'o'

	)

4227 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_2
 'p'

	)

4228 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_3
 '_'

	)

4229 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_4
 'd'

	)

4230 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_5
 'e'

	)

4231 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_6
 'f'

	)

4232 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ít_7
 's'

	)

4233 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4238 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CONV_FRAME_CodeSëComp⁄ít_°ru˘
;

4239 
	#TC_CONV_FRAME_CodeSëComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_CONV_FRAME_CodeSëComp⁄ít_°ru˘
)

	)

4241 
	#CONV_FRAME_CodeSëComp⁄ít__Æloc
(Ë((
CONV_FRAME_CodeSëComp⁄ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CONV_FRAME_CodeSëComp⁄ít
))

	)

4242 
	#CONV_FRAME_CodeSëComp⁄ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CONV_FRAME_CodeSëComp⁄ít
,(m),(d))

	)

4244 #i‡!
deföed
(
_CONV_FRAME_CodeSëComp⁄ítInfo_deföed
)

4245 
	#_CONV_FRAME_CodeSëComp⁄ítInfo_deföed
 1

	)

4246 
CONV_FRAME_CodeSëComp⁄ítInfo_ty≥
 
	tCONV_FRAME_CodeSëComp⁄ítInfo
;

4247 
	sCONV_FRAME_CodeSëComp⁄ítInfo_ty≥
 {

4248 
CONV_FRAME_CodeSëComp⁄ít
 
	gF‹Ch¨D©a
;

4249 
CONV_FRAME_CodeSëComp⁄ít
 
	gF‹Wch¨D©a
;

4252 #i‡!
deföed
(
TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_0
)

4253 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_0
 'i'

	)

4254 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_1
 'o'

	)

4255 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_2
 'p'

	)

4256 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_3
 '_'

	)

4257 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_4
 'd'

	)

4258 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_5
 'e'

	)

4259 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_6
 'f'

	)

4260 
	#TC_IMPL_TC_CONV_FRAME_CodeSëComp⁄ítInfo_7
 's'

	)

4261 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4266 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CONV_FRAME_CodeSëComp⁄ítInfo_°ru˘
;

4267 
	#TC_CONV_FRAME_CodeSëComp⁄ítInfo
 ((
CORBA_Ty≥Code
)&
TC_CONV_FRAME_CodeSëComp⁄ítInfo_°ru˘
)

	)

4269 
	#CONV_FRAME_CodeSëComp⁄ítInfo__Æloc
(Ë((
CONV_FRAME_CodeSëComp⁄ítInfo
 *)
	`ORBô_smÆl_Æloc
 (
TC_CONV_FRAME_CodeSëComp⁄ítInfo
))

	)

4270 
	#CONV_FRAME_CodeSëComp⁄ítInfo__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CONV_FRAME_CodeSëComp⁄ítInfo
,(m),(d))

	)

4272 #i‡!
deföed
(
_CONV_FRAME_CodeSëC⁄ãxt_deföed
)

4273 
	#_CONV_FRAME_CodeSëC⁄ãxt_deföed
 1

	)

4274 
CONV_FRAME_CodeSëC⁄ãxt_ty≥
 
	tCONV_FRAME_CodeSëC⁄ãxt
;

4275 
	sCONV_FRAME_CodeSëC⁄ãxt_ty≥
 {

4276 
CONV_FRAME_CodeSëId
 
	gch¨_d©a
;

4277 
CONV_FRAME_CodeSëId
 
	gwch¨_d©a
;

4280 #i‡!
deföed
(
TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_0
)

4281 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_0
 'i'

	)

4282 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_1
 'o'

	)

4283 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_2
 'p'

	)

4284 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_3
 '_'

	)

4285 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_4
 'd'

	)

4286 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_5
 'e'

	)

4287 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_6
 'f'

	)

4288 
	#TC_IMPL_TC_CONV_FRAME_CodeSëC⁄ãxt_7
 's'

	)

4289 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4294 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CONV_FRAME_CodeSëC⁄ãxt_°ru˘
;

4295 
	#TC_CONV_FRAME_CodeSëC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_CONV_FRAME_CodeSëC⁄ãxt_°ru˘
)

	)

4297 
	#CONV_FRAME_CodeSëC⁄ãxt__Æloc
(Ë((
CONV_FRAME_CodeSëC⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_CONV_FRAME_CodeSëC⁄ãxt
))

	)

4298 
	#CONV_FRAME_CodeSëC⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CONV_FRAME_CodeSëC⁄ãxt
,(m),(d))

	)

4300 #i‚de‡
IOP_TAG_ORBIT_SPECIFIC


4301 
	#IOP_TAG_ORBIT_SPECIFIC
 3135221450U

	)

4304 #i‚de‡
IOP_TAG_GENERIC_IOP


4305 
	#IOP_TAG_GENERIC_IOP
 1329746944U

	)

4308 #i‚de‡
IOP_TAG_GENERIC_SSL_SEC_TRANS


4309 
	#IOP_TAG_GENERIC_SSL_SEC_TRANS
 1329746944U

	)

4312 #i‡!
deföed
(
_IOP_ORBôS≥cificProfûeBody_deföed
)

4313 
	#_IOP_ORBôS≥cificProfûeBody_deföed
 1

	)

4314 
IOP_ORBôS≥cificProfûeBody_ty≥
 
	tIOP_ORBôS≥cificProfûeBody
;

4315 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
)

4316 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_o˘ë
 1

	)

4317 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

4318 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

4319 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

4320 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

4321 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

4322 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

4323 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

4324 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

4325 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_o˘ë_deföed
)

4326 
	#_CORBA_£quí˚_CORBA_o˘ë_deföed
 1

	)

4327 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_o˘ë
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_o˘ë
;

4329 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
)

4330 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_0
 'i'

	)

4331 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_1
 'o'

	)

4332 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_2
 'p'

	)

4333 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_3
 '_'

	)

4334 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_4
 'd'

	)

4335 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_5
 'e'

	)

4336 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_6
 'f'

	)

4337 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_o˘ë_7
 's'

	)

4338 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4343 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
;

4344 
	#TC_CORBA_£quí˚_CORBA_o˘ë
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_o˘ë_°ru˘
)

	)

4346 
	#CORBA_£quí˚_CORBA_o˘ë__Æloc
(Ë((
CORBA_£quí˚_CORBA_o˘ë
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

4347 
	#CORBA_£quí˚_CORBA_o˘ë__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

4348 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

4349 
	#CORBA_£quí˚_CORBA_o˘ë_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

4351 
	sIOP_ORBôS≥cificProfûeBody_ty≥
 {

4352 
CORBA_°rög
 
	gunix_sock_∑th
;

4353 
CORBA_unsig√d_sh‹t
 
	gùv6_p‹t
;

4354 
CORBA_£quí˚_CORBA_o˘ë
 
	gobje˘_key
;

4357 #i‡!
deföed
(
TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_0
)

4358 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_0
 'i'

	)

4359 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_1
 'o'

	)

4360 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_2
 'p'

	)

4361 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_3
 '_'

	)

4362 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_4
 'd'

	)

4363 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_5
 'e'

	)

4364 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_6
 'f'

	)

4365 
	#TC_IMPL_TC_IOP_ORBôS≥cificProfûeBody_7
 's'

	)

4366 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4371 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_ORBôS≥cificProfûeBody_°ru˘
;

4372 
	#TC_IOP_ORBôS≥cificProfûeBody
 ((
CORBA_Ty≥Code
)&
TC_IOP_ORBôS≥cificProfûeBody_°ru˘
)

	)

4374 
	#IOP_ORBôS≥cificProfûeBody__Æloc
(Ë((
IOP_ORBôS≥cificProfûeBody
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_ORBôS≥cificProfûeBody
))

	)

4375 
	#IOP_ORBôS≥cificProfûeBody__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_ORBôS≥cificProfûeBody
,(m),(d))

	)

4377 #i‡!
deföed
(
_IOP_GíîicIOPProfûeBody_deföed
)

4378 
	#_IOP_GíîicIOPProfûeBody_deföed
 1

	)

4379 
IOP_GíîicIOPProfûeBody_ty≥
 
	tIOP_GíîicIOPProfûeBody
;

4380 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_IOP_TaggedComp⁄ít
)

4381 
	#ORBIT_DECL_CORBA_£quí˚_IOP_TaggedComp⁄ít
 1

	)

4382 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
 'i'

	)

4383 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_1
 'o'

	)

4384 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_2
 'p'

	)

4385 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_3
 '_'

	)

4386 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_4
 'd'

	)

4387 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_5
 'e'

	)

4388 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_6
 'f'

	)

4389 
	#ORBIT_IMPL_CORBA_£quí˚_IOP_TaggedComp⁄ít_7
 's'

	)

4390 #i‡!
deföed
(
_CORBA_£quí˚_IOP_TaggedComp⁄ít_deföed
)

4391 
	#_CORBA_£quí˚_IOP_TaggedComp⁄ít_deföed
 1

	)

4392 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
IOP_TaggedComp⁄ít
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_IOP_TaggedComp⁄ít
;

4394 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
)

4395 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_0
 'i'

	)

4396 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_1
 'o'

	)

4397 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_2
 'p'

	)

4398 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_3
 '_'

	)

4399 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_4
 'd'

	)

4400 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_5
 'e'

	)

4401 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_6
 'f'

	)

4402 
	#TC_IMPL_TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_7
 's'

	)

4403 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4408 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_°ru˘
;

4409 
	#TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít_°ru˘
)

	)

4411 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít__Æloc
(Ë((
CORBA_£quí˚_IOP_TaggedComp⁄ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
))

	)

4412 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
,(m),(d))

	)

4413 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

4414 
	#CORBA_£quí˚_IOP_TaggedComp⁄ít_Ælocbuf
(
l
Ë((
IOP_TaggedComp⁄ít
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_IOP_TaggedComp⁄ít
, (l)))

	)

4416 
	sIOP_GíîicIOPProfûeBody_ty≥
 {

4417 
IIOP_Vîsi⁄
 
	gii›_vîsi⁄
;

4418 
CORBA_°rög
 
	g¥Ÿocﬁ
;

4419 
CORBA_°rög
 
	gho°
;

4420 
CORBA_°rög
 
	g£rvi˚
;

4421 
CORBA_£quí˚_IOP_TaggedComp⁄ít
 
	gcomp⁄íts
;

4424 #i‡!
deföed
(
TC_IMPL_TC_IOP_GíîicIOPProfûeBody_0
)

4425 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_0
 'i'

	)

4426 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_1
 'o'

	)

4427 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_2
 'p'

	)

4428 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_3
 '_'

	)

4429 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_4
 'd'

	)

4430 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_5
 'e'

	)

4431 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_6
 'f'

	)

4432 
	#TC_IMPL_TC_IOP_GíîicIOPProfûeBody_7
 's'

	)

4433 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4438 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_GíîicIOPProfûeBody_°ru˘
;

4439 
	#TC_IOP_GíîicIOPProfûeBody
 ((
CORBA_Ty≥Code
)&
TC_IOP_GíîicIOPProfûeBody_°ru˘
)

	)

4441 
	#IOP_GíîicIOPProfûeBody__Æloc
(Ë((
IOP_GíîicIOPProfûeBody
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_GíîicIOPProfûeBody
))

	)

4442 
	#IOP_GíîicIOPProfûeBody__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_GíîicIOPProfûeBody
,(m),(d))

	)

4444 #i‡!
deföed
(
_IOP_SSLGíîicComp⁄ít_deföed
)

4445 
	#_IOP_SSLGíîicComp⁄ít_deföed
 1

	)

4446 
IOP_SSLGíîicComp⁄ít_ty≥
 
	tIOP_SSLGíîicComp⁄ít
;

4447 
	sIOP_SSLGíîicComp⁄ít_ty≥
 {

4448 
CORBA_°rög
 
	g£rvi˚
;

4451 #i‡!
deföed
(
TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_0
)

4452 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_0
 'i'

	)

4453 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_1
 'o'

	)

4454 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_2
 'p'

	)

4455 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_3
 '_'

	)

4456 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_4
 'd'

	)

4457 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_5
 'e'

	)

4458 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_6
 'f'

	)

4459 
	#TC_IMPL_TC_IOP_SSLGíîicComp⁄ít_7
 's'

	)

4460 #ifde‡
ORBIT_IDL_C_IMODULE_i›_defs


4465 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_IOP_SSLGíîicComp⁄ít_°ru˘
;

4466 
	#TC_IOP_SSLGíîicComp⁄ít
 ((
CORBA_Ty≥Code
)&
TC_IOP_SSLGíîicComp⁄ít_°ru˘
)

	)

4468 
	#IOP_SSLGíîicComp⁄ít__Æloc
(Ë((
IOP_SSLGíîicComp⁄ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_IOP_SSLGíîicComp⁄ít
))

	)

4469 
	#IOP_SSLGíîicComp⁄ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_IOP_SSLGíîicComp⁄ít
,(m),(d))

	)

4473 
CORBA_O˘ëSeq
* 
IOP_Codec_ícode
(
IOP_Codec
 
_obj
, c⁄° 
CORBA_™y
* 
d©a
, 
CORBA_Envú⁄mít
 *
ev
);

4474 
CORBA_™y
* 
IOP_Codec_decode
(
IOP_Codec
 
_obj
, c⁄° 
CORBA_O˘ëSeq
* 
d©a
, 
CORBA_Envú⁄mít
 *
ev
);

4475 
CORBA_O˘ëSeq
* 
IOP_Codec_ícode_vÆue
(
IOP_Codec
 
_obj
, c⁄° 
CORBA_™y
* 
d©a
, 
CORBA_Envú⁄mít
 *
ev
);

4476 
CORBA_™y
* 
IOP_Codec_decode_vÆue
(
IOP_Codec
 
_obj
, c⁄° 
CORBA_O˘ëSeq
* 
d©a
, c⁄° 
CORBA_Ty≥Code
 
tc
, 
CORBA_Envú⁄mít
 *
ev
);

4477 
IOP_Codec
 
IOP_CodecFa˘‹y_¸óã_codec
(
IOP_CodecFa˘‹y
 
_obj
, c⁄° 
IOP_Encodög
* 
íc
, 
CORBA_Envú⁄mít
 *
ev
);

4478 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

4479 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

4480 
	#BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

4481 
BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicyVÆue
 
BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy__gë_vÆue
(
BiDúPﬁicy_Bidúe˘i⁄ÆPﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

4482 #i‚de‡
__ORBIT_IMETHODS_INDEX


4483 
	#__ORBIT_IMETHODS_INDEX


	)

4484 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

4487 #ifde‡
__˝lu•lus


4491 #i‚de‡
EXCLUDE_ORBIT_H


4492 
	~<‹bô/‹bô.h
>

4496 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/orbit-2.0/orbit/orb-core/orb-types.h

1 #i‚de‡
ORB_TYPES_H


2 
	#ORB_TYPES_H
 1

	)

4 
	~<‹bô/‹bô-c⁄fig.h
>

6 
	gG_BEGIN_DECLS


16 
	#ORBIT_ALIGNOF_CORBA_ANY
 
	`MAX
–
ORBIT_ALIGNOF_CORBA_STRUCT
, \

17 
ORBIT_ALIGNOF_CORBA_POINTER
)

	)

20 
	#ORBIT_ALIGNOF_CORBA_TCVAL
 
	`MAX
(MAX–
ORBIT_ALIGNOF_CORBA_LONG
, \

21 
ORBIT_ALIGNOF_CORBA_STRUCT
), \

22 
ORBIT_ALIGNOF_CORBA_POINTER
)

	)

24 
	#ORBIT_ALIGNOF_CORBA_SEQ
 
	`MAX
(MAX–
ORBIT_ALIGNOF_CORBA_STRUCT
, \

25 
ORBIT_ALIGNOF_CORBA_LONG
), \

26 
ORBIT_ALIGNOF_CORBA_POINTER
)

	)

29 
	#ORBIT_ALIGNOF_CORBA_FIXED
 
	`MAX
 ( 
ORBIT_ALIGNOF_CORBA_SHORT
, \

30 
ORBIT_ALIGNOF_CORBA_STRUCT
);

	)

33 
CORBA_™y_°ru˘
 
	tCORBA_™y
;

36 
CORBA_unsig√d_sh‹t
 
	m_digôs
;

37 
CORBA_sh‹t
 
	m_sˇÀ
;

38 sig√d 
	m_sign
;

39 sig√d 
	m_vÆue
[1];

40 } 
	tCORBA_fixed_d_s
;

42 
	sCORBA_NVLi°_ty≥
 {

43 
CORBA_unsig√d_l⁄g
 
	mÊags
;

44 
GAºay
 *
	mli°
;

47 
	#CORBA_OBJECT_NIL
 
NULL


	)

49 
	#CORBA_ARG_IN
 (1<<0)

	)

50 
	#CORBA_ARG_OUT
 (1<<1)

	)

51 
	#CORBA_ARG_INOUT
 (1<<2)

	)

52 
	#CORBA_CTX_RESTRICT_SCOPE
 (1<<3)

	)

53 
	#CORBA_CTX_DELETE_DESCENDENTS
 (1<<4)

	)

54 
	#CORBA_OUT_LIST_MEMORY
 (1<<5)

	)

55 
	#CORBA_IN_COPY_VALUE
 (1<<6)

	)

56 
	#CORBA_DEPENDENT_LIST
 (1<<7)

	)

57 
	#CORBA_INV_NO_RESPONSE
 (1<<8)

	)

58 
	#CORBA_INV_TERM_ON_ERROR
 (1<<9)

	)

59 
	#CORBA_RESP_NO_WAIT
 (1<<10)

	)

61 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/orbit-object.h

1 #i‚de‡
ORBIT_OBJECT_H


2 
	#ORBIT_OBJECT_H
 1

	)

4 
	~<glib.h
>

6 #ifde‡
G_PLATFORM_WIN32


7 
	#ORBIT2_MAYBE_CONST


	)

9 
	#ORBIT2_MAYBE_CONST
 c⁄°

	)

12 
G_BEGIN_DECLS


15 
	mORBIT_ROT_NULL
,

16 
	mORBIT_ROT_OBJREF
,

18 
	mORBIT_ROT_ORB
,

19 
	mORBIT_ROT_ADAPTOR
,

20 
	mORBIT_ROT_POAMANAGER
,

21 
	mORBIT_ROT_POLICY
,

22 
	mORBIT_ROT_TYPECODE
,

23 
	mORBIT_ROT_REQUEST
,

24 
	mORBIT_ROT_SERVERREQUEST
,

25 
	mORBIT_ROT_CONTEXT
,

26 
	mORBIT_ROT_DYNANY
,

27 
	mORBIT_ROT_OAOBJECT
,

28 
	mORBIT_ROT_ORBGROUP
,

29 
	mORBIT_ROT_POACURRENT
,

30 
	mORBIT_ROT_CLIENT_POLICY


31 } 
	tORBô_RoŸObje˘_Ty≥
;

33 
ORBô_RoŸObje˘_°ru˘
 *
	tORBô_RoŸObje˘
;

35 (* 
	tORBô_RoŸObje˘_De°royFunc
Ë(
	tORBô_RoŸObje˘
 
	tobj
);

37 
	s_ORBô_RoŸObje˘_I¡îÁ˚
 {

38 
ORBô_RoŸObje˘_Ty≥
 
ty≥
;

39 
ORBô_RoŸObje˘_De°royFunc
 
de°roy
;

40 } 
	tORBô_RoŸObje˘_I¡îÁ˚
;

42 
	sORBô_RoŸObje˘_°ru˘
 {

43 c⁄° 
ORBô_RoŸObje˘_I¡îÁ˚
 *
öãrÁ˚
;

44 
ªfs
;

47 
	#ORBIT_REFCOUNT_STATIC
 -10

	)

49 
	`ORBô_RoŸObje˘_öô
 (
ORBô_RoŸObje˘
 
obj
,

50 c⁄° 
ORBô_RoŸObje˘_I¡îÁ˚
 *
öãrÁ˚
);

52 #ifde‡
ORBIT2_INTERNAL_API


55 
	#ORBIT_REFCOUNT_MAX
 (1<<20)

	)

57 
	#ORBIT_ROOT_OBJECT
(
obj
Ë((
ORBô_RoŸObje˘
)(obj))

	)

58 
	#ORBIT_ROOT_OBJECT_TYPE
(
obj
Ë(((
ORBô_RoŸObje˘
)(obj))->
öãrÁ˚
->
ty≥
)

	)

61 
gpoöãr
 
	`ORBô_RoŸObje˘_du∂iˇã
 (gpoöã∏
obj
);

62 
gpoöãr
 
	`ORBô_RoŸObje˘_du∂iˇã_T
 (gpoöã∏
obj
);

63 
	`ORBô_RoŸObje˘_ªÀa£
 (
gpoöãr
 
obj
);

64 
	`ORBô_RoŸObje˘_ªÀa£_T
 (
gpoöãr
 
obj
);

66 
GMuãx
 *
ORBô_RoŸObje˘_li„cy˛e_lock
;

70 
G_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/orbit-small.h

4 #i‚de‡
CORBA_SMALL_H


5 
	#CORBA_SMALL_H
 1

	)

7 
	~<glib-obje˘.h
>

8 
	~<‹bô/‹b-c‹e/‹bô-öãrÁ˚.h
>

10 
G_BEGIN_DECLS


13 
CORBA_unsig√d_l⁄g
 
	mvîsi⁄
;

14 
ORBô_II¡îÁ˚
 **
	möãrÁ˚s
;

15 
CORBA_£quí˚_CORBA_Ty≥Code
 
	mty≥s
;

16 } 
	tORBô_IModuÀ
;

18 c⁄° *
ORBô_gë_ß„_tmp
 ();

21 
gpoöãr
 
ORBô_smÆl_Æloc
 (
CORBA_Ty≥Code
 
tc
);

22 
gpoöãr
 
ORBô_smÆl_Ælocbuf
 (
CORBA_Ty≥Code
 
tc
,

23 
CORBA_unsig√d_l⁄g
 
Àngth
);

24 
ORBô_smÆl_‰ìkids
 (
CORBA_Ty≥Code
 
tc
,

25 
gpoöãr
 
p
,

26 
gpoöãr
 
d
);

29 
gpoöãr
 
ORBô_£quí˚_Æloc
 (
CORBA_Ty≥Code
 
£quí˚_tc
,

30 
CORBA_unsig√d_l⁄g
 
Àngth
);

31 
ORBô_£quí˚_≠≥nd
 (
gpoöãr
 
£quí˚
,

32 
gc⁄°poöãr
 
ñemít
);

33 
ORBô_£quí˚_£t_size
 (
gpoöãr
 
£quí˚
,

34 
CORBA_unsig√d_l⁄g
 
Àngth
);

35 
	#ORBô_£quí˚_ödex
(
£quí˚
,
idx
Ë(£quí˚)->
_buf„r
[(idx)]

	)

36 
ORBô_£quí˚_c⁄ˇt
 (
gpoöãr
 
£quí˚
,

37 
gc⁄°poöãr
 
≠≥nd
);

38 
ORBô_£quí˚_ªmove
 (
gpoöãr
 
£quí˚
,

39 
guöt
 
idx
);

42 
	mORBIT_CONNECTION_CONNECTED
,

43 
	mORBIT_CONNECTION_CONNECTING
,

44 
	mORBIT_CONNECTION_DISCONNECTED
,

45 
	mORBIT_CONNECTION_IN_PROC


46 } 
	tORBôC⁄√˘i⁄Sètus
;

48 
gpoöãr
 
ORBô_smÆl_gë_£rv™t
 (
CORBA_Obje˘
 
obj
);

49 
ORBôC⁄√˘i⁄Sètus
 
ORBô_smÆl_gë_c⁄√˘i⁄_°©us
 (
CORBA_Obje˘
 
obj
);

50 
ORBôC⁄√˘i⁄Sètus
 
ORBô_smÆl_li°í_f‹_brokí
 (
CORBA_Obje˘
 
obj
,

51 
GCÆlback
 
‚
,

52 
gpoöãr
 
u£r_d©a
);

53 
ORBôC⁄√˘i⁄Sètus
 
ORBô_smÆl_u∆i°í_f‹_brokí_fuŒ
 (
CORBA_Obje˘
 
obj
,

54 
GCÆlback
 
‚
,

55 
gpoöãr
 
u£r_d©a
);

57 
ORBôC⁄√˘i⁄Sètus
 
ORBô_smÆl_u∆i°í_f‹_brokí
 (
CORBA_Obje˘
 
obj
,

58 
GCÆlback
 
‚
);

60 
_ORBôC⁄√˘i⁄
 
	tORBôC⁄√˘i⁄
;

62 
ORBôC⁄√˘i⁄
 *
ORBô_smÆl_gë_c⁄√˘i⁄
 (
CORBA_Obje˘
 
obj
);

63 
ORBôC⁄√˘i⁄
 *
ORBô_smÆl_gë_c⁄√˘i⁄_ªf
 (
CORBA_Obje˘
 
obj
);

64 
ORBô_smÆl_c⁄√˘i⁄_uƒef
 (
ORBôC⁄√˘i⁄
 *
˙x
);

65 
ORBô_c⁄√˘i⁄_£t_max_buf„r
 (
ORBôC⁄√˘i⁄
 *
˙x
,

66 
gul⁄g
 
max_buf„r_byãs
);

68 #i‡
deföed
(
ORBIT2_INTERNAL_API
Ë|| deföed (
ORBIT2_STUBS_API
)

70 
	#ORBIT_SMALL_FAST_LOCALS
 1

	)

71 
	#ORBIT_SMALL_FORCE_GENERIC_MARSHAL
 2

	)

73 
ORBô_smÆl_Êags
;

76 
ORBô_smÆl_övoke_°ub
 (
CORBA_Obje˘
 
obje˘
,

77 
ORBô_IMëhod
 *
m_d©a
,

78 
gpoöãr
 
ªt
,

79 
gpoöãr
 *
¨gs
,

80 
CORBA_C⁄ãxt
 
˘x
,

81 
CORBA_Envú⁄mít
 *
ev
);

84 
ORBô_smÆl_övoke_°ub_n
 (
CORBA_Obje˘
 
obje˘
,

85 
ORBô_IMëhods
 *
mëhods
,

86 
gl⁄g
 
ödex
,

87 
gpoöãr
 
ªt
,

88 
gpoöãr
 *
¨gs
,

89 
CORBA_C⁄ãxt
 
˘x
,

90 
CORBA_Envú⁄mít
 *
ev
);

94 #ifde‡
ORBIT2_INTERNAL_API


96 
	~<‹bô/GIOP/gi›.h
>

98 
ORBô_smÆl_övoke_ad≠t‹
 (
ORBô_OAObje˘
 
ad≠t‹_obj
,

99 
GIOPRecvBuf„r
 *
ªcv_buf„r
,

100 
ORBô_IMëhod
 *
m_d©a
,

101 
gpoöãr
 
d©a
,

102 
CORBA_Envú⁄mít
 *
ev
);

107 
CORBA_ch¨
 *
ORBô_smÆl_gë_ty≥_id
 (
CORBA_Obje˘
 
obje˘
,

108 
CORBA_Envú⁄mít
 *
ev
);

109 
ORBô_II¡îÁ˚
 *
ORBô_smÆl_gë_iöãrÁ˚
 (
CORBA_Obje˘
 
›t_obje˘
,

110 c⁄° 
CORBA_ch¨
 *
ªpo_id
,

111 
CORBA_Envú⁄mít
 *
ev
);

112 
gboﬁón
 
ORBô_smÆl_lﬂd_ty≥lib
 (c⁄° *
lib«me
);

113 
CORBA_£quí˚_CORBA_Ty≥Code
 *

114 
ORBô_smÆl_gë_ty≥s
 (c⁄° *
«me
);

115 
CORBA_£quí˚_ORBô_II¡îÁ˚
 *

116 
ORBô_smÆl_gë_iöãrÁ˚s
 (c⁄° *
«me
);

118 
_ORBôAsyncQueueE¡ry
 
	tORBôAsyncQueueE¡ry
;

120 (*
	tORBôAsyncInvokeFunc
Ë(
	tCORBA_Obje˘
 
	tobje˘
,

121 
	tORBô_IMëhod
 *
	tm_d©a
,

122 
	tORBôAsyncQueueE¡ry
 *
	taqe
,

123 
	tgpoöãr
 
	tu£r_d©a
,

124 
	tCORBA_Envú⁄mít
 *
	tev
);

127 
	`ORBô_smÆl_övoke_async
 (
CORBA_Obje˘
 
obj
,

128 
ORBô_IMëhod
 *
m_d©a
,

129 
ORBôAsyncInvokeFunc
 
‚
,

130 
gpoöãr
 
u£r_d©a
,

131 
gpoöãr
 *
¨gs
,

132 
CORBA_C⁄ãxt
 
˘x
,

133 
CORBA_Envú⁄mít
 *
ev
);

135 
	`ORBô_smÆl_dem¨shÆ_async
 (
ORBôAsyncQueueE¡ry
 *
aqe
,

136 
gpoöãr
 
ªt
,

137 
gpoöãr
 *
¨gs
,

138 
CORBA_Envú⁄mít
 *
ev
);

140 
G_END_DECLS


	@/usr/include/orbit-2.0/orbit/poa/poa-defs.h

5 #i‚de‡
pﬂ_defs_H


6 
	#pﬂ_defs_H
 1

	)

7 
	~<glib.h
>

8 
	#ORBIT_IDL_SERIAL
 20

	)

9 
	~<‹bô/‹bô-ty≥s.h
>

11 #ifde‡
__˝lu•lus


17 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_POA
Ë&& !deföed(
_P‹èbÀSîvî_POA_deföed
)

18 
	#ORBIT_DECL_P‹èbÀSîvî_POA
 1

	)

19 
	#_P‹èbÀSîvî_POA_deföed
 1

	)

20 
P‹èbÀSîvî_POA_ty≥
 *
	tP‹èbÀSîvî_POA
;

21 #i‚de‡
TC_P‹èbÀSîvî_POA


22 
	#TC_P‹èbÀSîvî_POA
 
TC_CORBA_Obje˘


	)

25 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

26 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

27 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'p'

	)

28 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

29 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'a'

	)

30 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 '_'

	)

31 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'd'

	)

32 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 'e'

	)

33 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'f'

	)

34 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 's'

	)

35 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

36 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

37 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	m_maximum
, 
	m_Àngth
; 
CORBA_Obje˘
* 
	m_buf„r
; 
CORBA_boﬁón
 
	m_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

39 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

40 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'p'

	)

41 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

42 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'a'

	)

43 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 '_'

	)

44 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'd'

	)

45 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 'e'

	)

46 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'f'

	)

47 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 's'

	)

48 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


53 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

54 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

56 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

57 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

58 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

59 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

61 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_P‹èbÀSîvî_POA
)

62 
	#ORBIT_DECL_CORBA_£quí˚_P‹èbÀSîvî_POA
 1

	)

63 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_0
 'p'

	)

64 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_1
 'o'

	)

65 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_2
 'a'

	)

66 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_3
 '_'

	)

67 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_4
 'd'

	)

68 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_5
 'e'

	)

69 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_6
 'f'

	)

70 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POA_7
 's'

	)

71 #i‡!
deföed
(
_CORBA_£quí˚_P‹èbÀSîvî_POA_deföed
)

72 
	#_CORBA_£quí˚_P‹èbÀSîvî_POA_deföed
 1

	)

73 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_P‹èbÀSîvî_POA
;

75 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_0
)

76 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_0
 'p'

	)

77 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_1
 'o'

	)

78 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_2
 'a'

	)

79 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_3
 '_'

	)

80 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_4
 'd'

	)

81 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_5
 'e'

	)

82 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_6
 'f'

	)

83 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POA_7
 's'

	)

84 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


89 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_P‹èbÀSîvî_POA_°ru˘
;

90 
	#TC_CORBA_£quí˚_P‹èbÀSîvî_POA
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_P‹èbÀSîvî_POA_°ru˘
)

	)

92 
	#CORBA_£quí˚_P‹èbÀSîvî_POA__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

93 
	#CORBA_£quí˚_P‹èbÀSîvî_POA__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

94 
	#CORBA_£quí˚_P‹èbÀSîvî_POA_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

95 
	#CORBA_£quí˚_P‹èbÀSîvî_POA_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

96 
	#CORBA_£quí˚_P‹èbÀSîvî_POA_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

98 #i‡!
deföed
(
_P‹èbÀSîvî_POALi°_deföed
)

99 
	#_P‹èbÀSîvî_POALi°_deföed
 1

	)

100 
CORBA_£quí˚_P‹èbÀSîvî_POA
 
	tP‹èbÀSîvî_POALi°
;

101 
	#P‹èbÀSîvî_POALi°_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_P‹èbÀSîvî_POA_m¨shÆ
((x),(y),(z))

	)

102 
	#P‹èbÀSîvî_POALi°_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_P‹èbÀSîvî_POA_dem¨shÆ
((x),(y),(z),(i))

	)

103 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POALi°_0
)

104 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_0
 'p'

	)

105 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_1
 'o'

	)

106 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_2
 'a'

	)

107 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_3
 '_'

	)

108 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_4
 'd'

	)

109 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_5
 'e'

	)

110 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_6
 'f'

	)

111 
	#TC_IMPL_TC_P‹èbÀSîvî_POALi°_7
 's'

	)

112 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


117 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POALi°_°ru˘
;

118 
	#TC_P‹èbÀSîvî_POALi°
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POALi°_°ru˘
)

	)

120 
	#P‹èbÀSîvî_POALi°__Æloc
(Ë((
P‹èbÀSîvî_POALi°
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_P‹èbÀSîvî_POA
))

	)

121 
	#P‹èbÀSîvî_POALi°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_P‹èbÀSîvî_POA
,(m),(d))

	)

122 
	#P‹èbÀSîvî_POALi°_Ælocbuf
(
l
Ë((
P‹èbÀSîvî_POA
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_P‹èbÀSîvî_POA
, (l)))

	)

124 #i‡!
deföed
(
_P‹èbÀSîvî_Sîv™t_deföed
)

125 
	#_P‹èbÀSîvî_Sîv™t_deföed
 1

	)

126 
P‹èbÀSîvî_Sîv™t_ty≥
 *
	tP‹èbÀSîvî_Sîv™t
;

128 #i‡!
deföed
(
_P‹èbÀSîvî_Obje˘Id_deföed
)

129 
	#_P‹èbÀSîvî_Obje˘Id_deföed
 1

	)

130 
CORBA_O˘ëSeq
 
	tP‹èbÀSîvî_Obje˘Id
;

131 
	#P‹èbÀSîvî_Obje˘Id_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_O˘ëSeq_m¨shÆ
((x),(y),(z))

	)

132 
	#P‹èbÀSîvî_Obje˘Id_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_O˘ëSeq_dem¨shÆ
((x),(y),(z),(i))

	)

133 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_0
)

134 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_0
 'p'

	)

135 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_1
 'o'

	)

136 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_2
 'a'

	)

137 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_3
 '_'

	)

138 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_4
 'd'

	)

139 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_5
 'e'

	)

140 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_6
 'f'

	)

141 
	#TC_IMPL_TC_P‹èbÀSîvî_Obje˘Id_7
 's'

	)

142 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


147 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_Obje˘Id_°ru˘
;

148 
	#TC_P‹èbÀSîvî_Obje˘Id
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_Obje˘Id_°ru˘
)

	)

150 
	#P‹èbÀSîvî_Obje˘Id__Æloc
(Ë((
P‹èbÀSîvî_Obje˘Id
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_o˘ë
))

	)

151 
	#P‹èbÀSîvî_Obje˘Id__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_o˘ë
,(m),(d))

	)

152 
	#P‹èbÀSîvî_Obje˘Id_Ælocbuf
(
l
Ë((
CORBA_o˘ë
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_o˘ë
, (l)))

	)

154 #unde‡
ex_P‹èbÀSîvî_F‹w¨dReque°


155 
	#ex_P‹èbÀSîvî_F‹w¨dReque°
 "IDL:omg.‹g/P‹èbÀSîvî/F‹w¨dReque°:1.0"

	)

156 #i‡!
deföed
(
_P‹èbÀSîvî_F‹w¨dReque°_deföed
)

157 
	#_P‹èbÀSîvî_F‹w¨dReque°_deföed
 1

	)

158 
P‹èbÀSîvî_F‹w¨dReque°_ty≥
 
	tP‹èbÀSîvî_F‹w¨dReque°
;

159 
	sP‹èbÀSîvî_F‹w¨dReque°_ty≥
 {

160 
CORBA_Obje˘
 
	gf‹w¨d_ª„ªn˚
;

163 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_0
)

164 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_0
 'p'

	)

165 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_1
 'o'

	)

166 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_2
 'a'

	)

167 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_3
 '_'

	)

168 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_4
 'd'

	)

169 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_5
 'e'

	)

170 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_6
 'f'

	)

171 
	#TC_IMPL_TC_P‹èbÀSîvî_F‹w¨dReque°_7
 's'

	)

172 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


177 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_F‹w¨dReque°_°ru˘
;

178 
	#TC_P‹èbÀSîvî_F‹w¨dReque°
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_F‹w¨dReque°_°ru˘
)

	)

180 
	#P‹èbÀSîvî_F‹w¨dReque°__Æloc
(Ë((
P‹èbÀSîvî_F‹w¨dReque°
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_F‹w¨dReque°
))

	)

181 
	#P‹èbÀSîvî_F‹w¨dReque°__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_F‹w¨dReque°
,(m),(d))

	)

183 #i‚de‡
P‹èbÀSîvî_THREAD_POLICY_ID


184 
	#P‹èbÀSîvî_THREAD_POLICY_ID
 16U

	)

187 #i‚de‡
P‹èbÀSîvî_LIFESPAN_POLICY_ID


188 
	#P‹èbÀSîvî_LIFESPAN_POLICY_ID
 17U

	)

191 #i‚de‡
P‹èbÀSîvî_ID_UNIQUENESS_POLICY_ID


192 
	#P‹èbÀSîvî_ID_UNIQUENESS_POLICY_ID
 18U

	)

195 #i‚de‡
P‹èbÀSîvî_ID_ASSIGNMENT_POLICY_ID


196 
	#P‹èbÀSîvî_ID_ASSIGNMENT_POLICY_ID
 19U

	)

199 #i‚de‡
P‹èbÀSîvî_IMPLICIT_ACTIVATION_POLICY_ID


200 
	#P‹èbÀSîvî_IMPLICIT_ACTIVATION_POLICY_ID
 20U

	)

203 #i‚de‡
P‹èbÀSîvî_SERVANT_RETENTION_POLICY_ID


204 
	#P‹èbÀSîvî_SERVANT_RETENTION_POLICY_ID
 21U

	)

207 #i‚de‡
P‹èbÀSîvî_REQUEST_PROCESSING_POLICY_ID


208 
	#P‹èbÀSîvî_REQUEST_PROCESSING_POLICY_ID
 22U

	)

211 #i‡!
deföed
(
_P‹èbÀSîvî_ThªadPﬁicyVÆue_deföed
)

212 
	#_P‹èbÀSîvî_ThªadPﬁicyVÆue_deföed
 1

	)

214 
	gP‹èbÀSîvî_ORB_CTRL_MODEL
,

215 
	gP‹èbÀSîvî_SINGLE_THREAD_MODEL
,

216 
	gP‹èbÀSîvî_MAIN_THREAD_MODEL


217 } 
	tP‹èbÀSîvî_ThªadPﬁicyVÆue
;

218 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_0
)

219 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_0
 'p'

	)

220 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_1
 'o'

	)

221 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_2
 'a'

	)

222 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_3
 '_'

	)

223 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_4
 'd'

	)

224 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_5
 'e'

	)

225 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_6
 'f'

	)

226 
	#TC_IMPL_TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_7
 's'

	)

227 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


232 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_°ru˘
;

233 
	#TC_P‹èbÀSîvî_ThªadPﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_ThªadPﬁicyVÆue_°ru˘
)

	)

236 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_ThªadPﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_ThªadPﬁicy_deföed
)

237 
	#ORBIT_DECL_P‹èbÀSîvî_ThªadPﬁicy
 1

	)

238 
	#_P‹èbÀSîvî_ThªadPﬁicy_deföed
 1

	)

239 
P‹èbÀSîvî_ThªadPﬁicy_ty≥
 *
	tP‹èbÀSîvî_ThªadPﬁicy
;

240 #i‚de‡
TC_P‹èbÀSîvî_ThªadPﬁicy


241 
	#TC_P‹èbÀSîvî_ThªadPﬁicy
 
TC_CORBA_Obje˘


	)

244 #i‡!
deföed
(
_P‹èbÀSîvî_Li„•™PﬁicyVÆue_deföed
)

245 
	#_P‹èbÀSîvî_Li„•™PﬁicyVÆue_deföed
 1

	)

247 
	gP‹èbÀSîvî_TRANSIENT
,

248 
	gP‹èbÀSîvî_PERSISTENT


249 } 
	tP‹èbÀSîvî_Li„•™PﬁicyVÆue
;

250 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_0
)

251 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_0
 'p'

	)

252 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_1
 'o'

	)

253 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_2
 'a'

	)

254 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_3
 '_'

	)

255 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_4
 'd'

	)

256 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_5
 'e'

	)

257 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_6
 'f'

	)

258 
	#TC_IMPL_TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_7
 's'

	)

259 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


264 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_°ru˘
;

265 
	#TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_Li„•™PﬁicyVÆue_°ru˘
)

	)

268 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Li„•™Pﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_Li„•™Pﬁicy_deföed
)

269 
	#ORBIT_DECL_P‹èbÀSîvî_Li„•™Pﬁicy
 1

	)

270 
	#_P‹èbÀSîvî_Li„•™Pﬁicy_deföed
 1

	)

271 
P‹èbÀSîvî_Li„•™Pﬁicy_ty≥
 *
	tP‹èbÀSîvî_Li„•™Pﬁicy
;

272 #i‚de‡
TC_P‹èbÀSîvî_Li„•™Pﬁicy


273 
	#TC_P‹èbÀSîvî_Li„•™Pﬁicy
 
TC_CORBA_Obje˘


	)

276 #i‡!
deföed
(
_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_deföed
)

277 
	#_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_deföed
 1

	)

279 
	gP‹èbÀSîvî_UNIQUE_ID
,

280 
	gP‹èbÀSîvî_MULTIPLE_ID


281 } 
	tP‹èbÀSîvî_IdUniquíessPﬁicyVÆue
;

282 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_0
)

283 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_0
 'p'

	)

284 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_1
 'o'

	)

285 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_2
 'a'

	)

286 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_3
 '_'

	)

287 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_4
 'd'

	)

288 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_5
 'e'

	)

289 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_6
 'f'

	)

290 
	#TC_IMPL_TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_7
 's'

	)

291 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


296 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_°ru˘
;

297 
	#TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_IdUniquíessPﬁicyVÆue_°ru˘
)

	)

300 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_IdUniquíessPﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_IdUniquíessPﬁicy_deföed
)

301 
	#ORBIT_DECL_P‹èbÀSîvî_IdUniquíessPﬁicy
 1

	)

302 
	#_P‹èbÀSîvî_IdUniquíessPﬁicy_deföed
 1

	)

303 
P‹èbÀSîvî_IdUniquíessPﬁicy_ty≥
 *
	tP‹èbÀSîvî_IdUniquíessPﬁicy
;

304 #i‚de‡
TC_P‹èbÀSîvî_IdUniquíessPﬁicy


305 
	#TC_P‹èbÀSîvî_IdUniquíessPﬁicy
 
TC_CORBA_Obje˘


	)

308 #i‡!
deföed
(
_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_deföed
)

309 
	#_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_deföed
 1

	)

311 
	gP‹èbÀSîvî_USER_ID
,

312 
	gP‹èbÀSîvî_SYSTEM_ID


313 } 
	tP‹èbÀSîvî_IdAssignmítPﬁicyVÆue
;

314 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_0
)

315 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_0
 'p'

	)

316 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_1
 'o'

	)

317 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_2
 'a'

	)

318 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_3
 '_'

	)

319 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_4
 'd'

	)

320 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_5
 'e'

	)

321 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_6
 'f'

	)

322 
	#TC_IMPL_TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_7
 's'

	)

323 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


328 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_°ru˘
;

329 
	#TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_IdAssignmítPﬁicyVÆue_°ru˘
)

	)

332 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_IdAssignmítPﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_IdAssignmítPﬁicy_deföed
)

333 
	#ORBIT_DECL_P‹èbÀSîvî_IdAssignmítPﬁicy
 1

	)

334 
	#_P‹èbÀSîvî_IdAssignmítPﬁicy_deföed
 1

	)

335 
P‹èbÀSîvî_IdAssignmítPﬁicy_ty≥
 *
	tP‹èbÀSîvî_IdAssignmítPﬁicy
;

336 #i‚de‡
TC_P‹èbÀSîvî_IdAssignmítPﬁicy


337 
	#TC_P‹èbÀSîvî_IdAssignmítPﬁicy
 
TC_CORBA_Obje˘


	)

340 #i‡!
deföed
(
_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_deföed
)

341 
	#_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_deföed
 1

	)

343 
	gP‹èbÀSîvî_IMPLICIT_ACTIVATION
,

344 
	gP‹èbÀSîvî_NO_IMPLICIT_ACTIVATION


345 } 
	tP‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue
;

346 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_0
)

347 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_0
 'p'

	)

348 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_1
 'o'

	)

349 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_2
 'a'

	)

350 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_3
 '_'

	)

351 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_4
 'd'

	)

352 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_5
 'e'

	)

353 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_6
 'f'

	)

354 
	#TC_IMPL_TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_7
 's'

	)

355 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


360 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_°ru˘
;

361 
	#TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue_°ru˘
)

	)

364 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy_deföed
)

365 
	#ORBIT_DECL_P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy
 1

	)

366 
	#_P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy_deföed
 1

	)

367 
P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy_ty≥
 *
	tP‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy
;

368 #i‚de‡
TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy


369 
	#TC_P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy
 
TC_CORBA_Obje˘


	)

372 #i‡!
deföed
(
_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_deföed
)

373 
	#_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_deföed
 1

	)

375 
	gP‹èbÀSîvî_RETAIN
,

376 
	gP‹èbÀSîvî_NON_RETAIN


377 } 
	tP‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue
;

378 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_0
)

379 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_0
 'p'

	)

380 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_1
 'o'

	)

381 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_2
 'a'

	)

382 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_3
 '_'

	)

383 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_4
 'd'

	)

384 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_5
 'e'

	)

385 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_6
 'f'

	)

386 
	#TC_IMPL_TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_7
 's'

	)

387 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


392 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_°ru˘
;

393 
	#TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue_°ru˘
)

	)

396 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy_deföed
)

397 
	#ORBIT_DECL_P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy
 1

	)

398 
	#_P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy_deföed
 1

	)

399 
P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy_ty≥
 *
	tP‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy
;

400 #i‚de‡
TC_P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy


401 
	#TC_P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy
 
TC_CORBA_Obje˘


	)

404 #i‡!
deföed
(
_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_deföed
)

405 
	#_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_deföed
 1

	)

407 
	gP‹èbÀSîvî_USE_ACTIVE_OBJECT_MAP_ONLY
,

408 
	gP‹èbÀSîvî_USE_DEFAULT_SERVANT
,

409 
	gP‹èbÀSîvî_USE_SERVANT_MANAGER


410 } 
	tP‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue
;

411 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_0
)

412 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_0
 'p'

	)

413 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_1
 'o'

	)

414 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_2
 'a'

	)

415 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_3
 '_'

	)

416 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_4
 'd'

	)

417 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_5
 'e'

	)

418 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_6
 'f'

	)

419 
	#TC_IMPL_TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_7
 's'

	)

420 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


425 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_°ru˘
;

426 
	#TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue_°ru˘
)

	)

429 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy
Ë&& !deföed(
_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy_deföed
)

430 
	#ORBIT_DECL_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy
 1

	)

431 
	#_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy_deföed
 1

	)

432 
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy_ty≥
 *
	tP‹èbÀSîvî_Reque°Pro˚ssögPﬁicy
;

433 #i‚de‡
TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy


434 
	#TC_P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy
 
TC_CORBA_Obje˘


	)

437 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_POAM™agî
Ë&& !deföed(
_P‹èbÀSîvî_POAM™agî_deföed
)

438 
	#ORBIT_DECL_P‹èbÀSîvî_POAM™agî
 1

	)

439 
	#_P‹èbÀSîvî_POAM™agî_deföed
 1

	)

440 
P‹èbÀSîvî_POAM™agî_ty≥
 *
	tP‹èbÀSîvî_POAM™agî
;

441 #i‚de‡
TC_P‹èbÀSîvî_POAM™agî


442 
	#TC_P‹èbÀSîvî_POAM™agî
 
TC_CORBA_Obje˘


	)

445 #unde‡
ex_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive


446 
	#ex_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive
 "IDL:omg.‹g/P‹èbÀSîvî/POAM™agî/Ad≠ãrI«˘ive:1.0"

	)

447 #i‡!
deföed
(
_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_deföed
)

448 
	#_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_deföed
 1

	)

449 
P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_ty≥
 
	tP‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive
;

450 
	sP‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_ty≥
 {

451 
	gdummy
;

454 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_0
)

455 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_0
 'p'

	)

456 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_1
 'o'

	)

457 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_2
 'a'

	)

458 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_3
 '_'

	)

459 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_4
 'd'

	)

460 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_5
 'e'

	)

461 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_6
 'f'

	)

462 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_7
 's'

	)

463 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


468 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_°ru˘
;

469 
	#TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive_°ru˘
)

	)

471 
	#P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive__Æloc
(Ë((
P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive
))

	)

472 
	#P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POAM™agî_Ad≠ãrI«˘ive
,(m),(d))

	)

474 #i‡!
deföed
(
_P‹èbÀSîvî_POAM™agî_Sèã_deföed
)

475 
	#_P‹èbÀSîvî_POAM™agî_Sèã_deföed
 1

	)

477 
	gP‹èbÀSîvî_POAM™agî_HOLDING
,

478 
	gP‹èbÀSîvî_POAM™agî_ACTIVE
,

479 
	gP‹èbÀSîvî_POAM™agî_DISCARDING
,

480 
	gP‹èbÀSîvî_POAM™agî_INACTIVE


481 } 
	tP‹èbÀSîvî_POAM™agî_Sèã
;

482 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_0
)

483 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_0
 'p'

	)

484 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_1
 'o'

	)

485 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_2
 'a'

	)

486 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_3
 '_'

	)

487 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_4
 'd'

	)

488 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_5
 'e'

	)

489 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_6
 'f'

	)

490 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agî_Sèã_7
 's'

	)

491 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


496 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POAM™agî_Sèã_°ru˘
;

497 
	#TC_P‹èbÀSîvî_POAM™agî_Sèã
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POAM™agî_Sèã_°ru˘
)

	)

500 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_POAM™agîFa˘‹y
Ë&& !deföed(
_P‹èbÀSîvî_POAM™agîFa˘‹y_deföed
)

501 
	#ORBIT_DECL_P‹èbÀSîvî_POAM™agîFa˘‹y
 1

	)

502 
	#_P‹èbÀSîvî_POAM™agîFa˘‹y_deföed
 1

	)

503 
P‹èbÀSîvî_POAM™agîFa˘‹y_ty≥
 *
	tP‹èbÀSîvî_POAM™agîFa˘‹y
;

504 #i‚de‡
TC_P‹èbÀSîvî_POAM™agîFa˘‹y


505 
	#TC_P‹èbÀSîvî_POAM™agîFa˘‹y
 
TC_CORBA_Obje˘


	)

508 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
)

509 
	#ORBIT_DECL_CORBA_£quí˚_CORBA_Obje˘
 1

	)

510 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_0
 'p'

	)

511 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

512 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_2
 'a'

	)

513 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_3
 '_'

	)

514 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_4
 'd'

	)

515 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_5
 'e'

	)

516 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_6
 'f'

	)

517 
	#ORBIT_IMPL_CORBA_£quí˚_CORBA_Obje˘_7
 's'

	)

518 #i‡!
deföed
(
_CORBA_£quí˚_CORBA_Obje˘_deföed
)

519 
	#_CORBA_£quí˚_CORBA_Obje˘_deföed
 1

	)

520 °ru˘ { 
CORBA_unsig√d_l⁄g
 
	g_maximum
, 
	g_Àngth
; 
CORBA_Obje˘
* 
	g_buf„r
; 
CORBA_boﬁón
 
	g_ªÀa£
; } 
	tCORBA_£quí˚_CORBA_Obje˘
;

522 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
)

523 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_0
 'p'

	)

524 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_1
 'o'

	)

525 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_2
 'a'

	)

526 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_3
 '_'

	)

527 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_4
 'd'

	)

528 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_5
 'e'

	)

529 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_6
 'f'

	)

530 
	#TC_IMPL_TC_CORBA_£quí˚_CORBA_Obje˘_7
 's'

	)

531 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


536 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
;

537 
	#TC_CORBA_£quí˚_CORBA_Obje˘
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_CORBA_Obje˘_°ru˘
)

	)

539 
	#CORBA_£quí˚_CORBA_Obje˘__Æloc
(Ë((
CORBA_£quí˚_CORBA_Obje˘
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_CORBA_Obje˘
))

	)

540 
	#CORBA_£quí˚_CORBA_Obje˘__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_CORBA_Obje˘
,(m),(d))

	)

541 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

542 
	#CORBA_£quí˚_CORBA_Obje˘_Ælocbuf
(
l
Ë((
CORBA_Obje˘
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_CORBA_Obje˘
, (l)))

	)

544 #i‡!
deföed
(
ORBIT_DECL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
)

545 
	#ORBIT_DECL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
 1

	)

546 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_0
 'p'

	)

547 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_1
 'o'

	)

548 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_2
 'a'

	)

549 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_3
 '_'

	)

550 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_4
 'd'

	)

551 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_5
 'e'

	)

552 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_6
 'f'

	)

553 
	#ORBIT_IMPL_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_7
 's'

	)

554 #i‡!
deföed
(
_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_deföed
)

555 
	#_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_deföed
 1

	)

556 
CORBA_£quí˚_CORBA_Obje˘
 
	tCORBA_£quí˚_P‹èbÀSîvî_POAM™agî
;

558 #i‡!
deföed
(
TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_0
)

559 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_0
 'p'

	)

560 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_1
 'o'

	)

561 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_2
 'a'

	)

562 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_3
 '_'

	)

563 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_4
 'd'

	)

564 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_5
 'e'

	)

565 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_6
 'f'

	)

566 
	#TC_IMPL_TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_7
 's'

	)

567 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


572 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_°ru˘
;

573 
	#TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
 ((
CORBA_Ty≥Code
)&
TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_°ru˘
)

	)

575 
	#CORBA_£quí˚_P‹èbÀSîvî_POAM™agî__Æloc
 
CORBA_£quí˚_CORBA_Obje˘__Æloc


	)

576 
	#CORBA_£quí˚_P‹èbÀSîvî_POAM™agî__‰ìkids
 
CORBA_£quí˚_CORBA_Obje˘__‰ìkids


	)

577 
	#CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_Ælocbuf
 
CORBA_£quí˚_CORBA_Obje˘_Ælocbuf


	)

578 
	#CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_CORBA_Obje˘_m¨shÆ
((x),(y),(z))

	)

579 
	#CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_CORBA_Obje˘_dem¨shÆ
((x),(y),(z),(i))

	)

581 #i‡!
deföed
(
_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_deföed
)

582 
	#_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_deföed
 1

	)

583 
CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
 
	tP‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq
;

584 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_m¨shÆ
(
x
,
y
,
z
Ë
	`CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_m¨shÆ
((x),(y),(z))

	)

585 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_dem¨shÆ
(
x
,
y
,
z
,
i
Ë
	`CORBA_£quí˚_P‹èbÀSîvî_POAM™agî_dem¨shÆ
((x),(y),(z),(i))

	)

586 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_0
)

587 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_0
 'p'

	)

588 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_1
 'o'

	)

589 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_2
 'a'

	)

590 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_3
 '_'

	)

591 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_4
 'd'

	)

592 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_5
 'e'

	)

593 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_6
 'f'

	)

594 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_7
 's'

	)

595 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


600 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_°ru˘
;

601 
	#TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_°ru˘
)

	)

603 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq__Æloc
(Ë((
P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq
 *)
	`ORBô_smÆl_Æloc
 (
TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
))

	)

604 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
,(m),(d))

	)

605 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq_Ælocbuf
(
l
Ë((
P‹èbÀSîvî_POAM™agî
*)
	`ORBô_smÆl_Ælocbuf
 (
TC_CORBA_£quí˚_P‹èbÀSîvî_POAM™agî
, (l)))

	)

607 #unde‡
ex_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s


608 
	#ex_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s
 "IDL:omg.‹g/P‹èbÀSîvî/POAM™agîFa˘‹y/M™agîAÃódyExi°s:1.0"

	)

609 #i‡!
deföed
(
_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_deföed
)

610 
	#_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_deföed
 1

	)

611 
P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_ty≥
 
	tP‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s
;

612 
	sP‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_ty≥
 {

613 
	gdummy
;

616 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_0
)

617 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_0
 'p'

	)

618 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_1
 'o'

	)

619 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_2
 'a'

	)

620 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_3
 '_'

	)

621 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_4
 'd'

	)

622 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_5
 'e'

	)

623 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_6
 'f'

	)

624 
	#TC_IMPL_TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_7
 's'

	)

625 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


630 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_°ru˘
;

631 
	#TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s_°ru˘
)

	)

633 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s__Æloc
(Ë((
P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s
))

	)

634 
	#P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POAM™agîFa˘‹y_M™agîAÃódyExi°s
,(m),(d))

	)

636 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Ad≠ãrA˘iv©‹
Ë&& !deföed(
_P‹èbÀSîvî_Ad≠ãrA˘iv©‹_deföed
)

637 
	#ORBIT_DECL_P‹èbÀSîvî_Ad≠ãrA˘iv©‹
 1

	)

638 
	#_P‹èbÀSîvî_Ad≠ãrA˘iv©‹_deföed
 1

	)

639 
P‹èbÀSîvî_Ad≠ãrA˘iv©‹_ty≥
 *
	tP‹èbÀSîvî_Ad≠ãrA˘iv©‹
;

640 #i‚de‡
TC_P‹èbÀSîvî_Ad≠ãrA˘iv©‹


641 
	#TC_P‹èbÀSîvî_Ad≠ãrA˘iv©‹
 
TC_CORBA_Obje˘


	)

644 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Sîv™tM™agî
Ë&& !deföed(
_P‹èbÀSîvî_Sîv™tM™agî_deföed
)

645 
	#ORBIT_DECL_P‹èbÀSîvî_Sîv™tM™agî
 1

	)

646 
	#_P‹èbÀSîvî_Sîv™tM™agî_deföed
 1

	)

647 
P‹èbÀSîvî_Sîv™tM™agî_ty≥
 *
	tP‹èbÀSîvî_Sîv™tM™agî
;

648 #i‚de‡
TC_P‹èbÀSîvî_Sîv™tM™agî


649 
	#TC_P‹èbÀSîvî_Sîv™tM™agî
 
TC_CORBA_Obje˘


	)

652 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Sîv™tA˘iv©‹
Ë&& !deföed(
_P‹èbÀSîvî_Sîv™tA˘iv©‹_deföed
)

653 
	#ORBIT_DECL_P‹èbÀSîvî_Sîv™tA˘iv©‹
 1

	)

654 
	#_P‹èbÀSîvî_Sîv™tA˘iv©‹_deföed
 1

	)

655 
P‹èbÀSîvî_Sîv™tA˘iv©‹_ty≥
 *
	tP‹èbÀSîvî_Sîv™tA˘iv©‹
;

656 #i‚de‡
TC_P‹èbÀSîvî_Sîv™tA˘iv©‹


657 
	#TC_P‹èbÀSîvî_Sîv™tA˘iv©‹
 
TC_CORBA_Obje˘


	)

660 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Sîv™tLoˇt‹
Ë&& !deföed(
_P‹èbÀSîvî_Sîv™tLoˇt‹_deföed
)

661 
	#ORBIT_DECL_P‹èbÀSîvî_Sîv™tLoˇt‹
 1

	)

662 
	#_P‹èbÀSîvî_Sîv™tLoˇt‹_deföed
 1

	)

663 
P‹èbÀSîvî_Sîv™tLoˇt‹_ty≥
 *
	tP‹èbÀSîvî_Sîv™tLoˇt‹
;

664 #i‚de‡
TC_P‹èbÀSîvî_Sîv™tLoˇt‹


665 
	#TC_P‹èbÀSîvî_Sîv™tLoˇt‹
 
TC_CORBA_Obje˘


	)

668 #i‡!
deföed
(
_P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ_deföed
)

669 
	#_P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ_deföed
 1

	)

670 
P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ_ty≥
 *
	tP‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ
;

672 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_POA
Ë&& !deföed(
_P‹èbÀSîvî_POA_deföed
)

673 
	#ORBIT_DECL_P‹èbÀSîvî_POA
 1

	)

674 
	#_P‹èbÀSîvî_POA_deföed
 1

	)

675 
P‹èbÀSîvî_POA_ty≥
 *
	tP‹èbÀSîvî_POA
;

676 #i‚de‡
TC_P‹èbÀSîvî_POA


677 
	#TC_P‹èbÀSîvî_POA
 
TC_CORBA_Obje˘


	)

680 #unde‡
ex_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s


681 
	#ex_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Ad≠ãrAÃódyExi°s:1.0"

	)

682 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_deföed
)

683 
	#_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_deföed
 1

	)

684 
P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_ty≥
 
	tP‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s
;

685 
	sP‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_ty≥
 {

686 
	gdummy
;

689 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_0
)

690 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_0
 'p'

	)

691 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_1
 'o'

	)

692 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_2
 'a'

	)

693 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_3
 '_'

	)

694 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_4
 'd'

	)

695 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_5
 'e'

	)

696 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_6
 'f'

	)

697 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_7
 's'

	)

698 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


703 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_°ru˘
;

704 
	#TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s_°ru˘
)

	)

706 
	#P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s__Æloc
(Ë((
P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s
))

	)

707 
	#P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Ad≠ãrAÃódyExi°s
,(m),(d))

	)

709 #unde‡
ex_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít


710 
	#ex_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Ad≠ãrN⁄Exi°ít:1.0"

	)

711 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_deföed
)

712 
	#_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_deföed
 1

	)

713 
P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_ty≥
 
	tP‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít
;

714 
	sP‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_ty≥
 {

715 
	gdummy
;

718 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_0
)

719 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_0
 'p'

	)

720 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_1
 'o'

	)

721 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_2
 'a'

	)

722 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_3
 '_'

	)

723 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_4
 'd'

	)

724 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_5
 'e'

	)

725 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_6
 'f'

	)

726 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_7
 's'

	)

727 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


732 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_°ru˘
;

733 
	#TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít_°ru˘
)

	)

735 
	#P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít__Æloc
(Ë((
P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít
))

	)

736 
	#P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Ad≠ãrN⁄Exi°ít
,(m),(d))

	)

738 #unde‡
ex_P‹èbÀSîvî_POA_InvÆidPﬁicy


739 
	#ex_P‹èbÀSîvî_POA_InvÆidPﬁicy
 "IDL:omg.‹g/P‹èbÀSîvî/POA/InvÆidPﬁicy:1.0"

	)

740 #i‡!
deföed
(
_P‹èbÀSîvî_POA_InvÆidPﬁicy_deföed
)

741 
	#_P‹èbÀSîvî_POA_InvÆidPﬁicy_deföed
 1

	)

742 
P‹èbÀSîvî_POA_InvÆidPﬁicy_ty≥
 
	tP‹èbÀSîvî_POA_InvÆidPﬁicy
;

743 
	sP‹èbÀSîvî_POA_InvÆidPﬁicy_ty≥
 {

744 
CORBA_unsig√d_sh‹t
 
	gödex
;

747 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_0
)

748 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_0
 'p'

	)

749 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_1
 'o'

	)

750 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_2
 'a'

	)

751 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_3
 '_'

	)

752 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_4
 'd'

	)

753 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_5
 'e'

	)

754 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_6
 'f'

	)

755 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_7
 's'

	)

756 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


761 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_°ru˘
;

762 
	#TC_P‹èbÀSîvî_POA_InvÆidPﬁicy
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_InvÆidPﬁicy_°ru˘
)

	)

764 
	#P‹èbÀSîvî_POA_InvÆidPﬁicy__Æloc
(Ë((
P‹èbÀSîvî_POA_InvÆidPﬁicy
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_InvÆidPﬁicy
))

	)

765 
	#P‹èbÀSîvî_POA_InvÆidPﬁicy__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_InvÆidPﬁicy
,(m),(d))

	)

767 #unde‡
ex_P‹èbÀSîvî_POA_NoSîv™t


768 
	#ex_P‹èbÀSîvî_POA_NoSîv™t
 "IDL:omg.‹g/P‹èbÀSîvî/POA/NoSîv™t:1.0"

	)

769 #i‡!
deföed
(
_P‹èbÀSîvî_POA_NoSîv™t_deföed
)

770 
	#_P‹èbÀSîvî_POA_NoSîv™t_deföed
 1

	)

771 
P‹èbÀSîvî_POA_NoSîv™t_ty≥
 
	tP‹èbÀSîvî_POA_NoSîv™t
;

772 
	sP‹èbÀSîvî_POA_NoSîv™t_ty≥
 {

773 
	gdummy
;

776 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_0
)

777 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_0
 'p'

	)

778 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_1
 'o'

	)

779 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_2
 'a'

	)

780 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_3
 '_'

	)

781 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_4
 'd'

	)

782 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_5
 'e'

	)

783 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_6
 'f'

	)

784 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_NoSîv™t_7
 's'

	)

785 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


790 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_NoSîv™t_°ru˘
;

791 
	#TC_P‹èbÀSîvî_POA_NoSîv™t
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_NoSîv™t_°ru˘
)

	)

793 
	#P‹èbÀSîvî_POA_NoSîv™t__Æloc
(Ë((
P‹èbÀSîvî_POA_NoSîv™t
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_NoSîv™t
))

	)

794 
	#P‹èbÀSîvî_POA_NoSîv™t__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_NoSîv™t
,(m),(d))

	)

796 #unde‡
ex_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive


797 
	#ex_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Obje˘AÃódyA˘ive:1.0"

	)

798 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_deföed
)

799 
	#_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_deföed
 1

	)

800 
P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_ty≥
 
	tP‹èbÀSîvî_POA_Obje˘AÃódyA˘ive
;

801 
	sP‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_ty≥
 {

802 
	gdummy
;

805 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_0
)

806 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_0
 'p'

	)

807 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_1
 'o'

	)

808 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_2
 'a'

	)

809 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_3
 '_'

	)

810 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_4
 'd'

	)

811 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_5
 'e'

	)

812 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_6
 'f'

	)

813 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_7
 's'

	)

814 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


819 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_°ru˘
;

820 
	#TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive_°ru˘
)

	)

822 
	#P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive__Æloc
(Ë((
P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive
))

	)

823 
	#P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Obje˘AÃódyA˘ive
,(m),(d))

	)

825 #unde‡
ex_P‹èbÀSîvî_POA_Obje˘NŸA˘ive


826 
	#ex_P‹èbÀSîvî_POA_Obje˘NŸA˘ive
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Obje˘NŸA˘ive:1.0"

	)

827 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_deföed
)

828 
	#_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_deföed
 1

	)

829 
P‹èbÀSîvî_POA_Obje˘NŸA˘ive_ty≥
 
	tP‹èbÀSîvî_POA_Obje˘NŸA˘ive
;

830 
	sP‹èbÀSîvî_POA_Obje˘NŸA˘ive_ty≥
 {

831 
	gdummy
;

834 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_0
)

835 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_0
 'p'

	)

836 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_1
 'o'

	)

837 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_2
 'a'

	)

838 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_3
 '_'

	)

839 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_4
 'd'

	)

840 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_5
 'e'

	)

841 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_6
 'f'

	)

842 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_7
 's'

	)

843 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


848 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_°ru˘
;

849 
	#TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive_°ru˘
)

	)

851 
	#P‹èbÀSîvî_POA_Obje˘NŸA˘ive__Æloc
(Ë((
P‹èbÀSîvî_POA_Obje˘NŸA˘ive
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive
))

	)

852 
	#P‹èbÀSîvî_POA_Obje˘NŸA˘ive__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Obje˘NŸA˘ive
,(m),(d))

	)

854 #unde‡
ex_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive


855 
	#ex_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Sîv™tAÃódyA˘ive:1.0"

	)

856 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_deföed
)

857 
	#_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_deföed
 1

	)

858 
P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_ty≥
 
	tP‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive
;

859 
	sP‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_ty≥
 {

860 
	gdummy
;

863 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_0
)

864 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_0
 'p'

	)

865 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_1
 'o'

	)

866 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_2
 'a'

	)

867 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_3
 '_'

	)

868 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_4
 'd'

	)

869 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_5
 'e'

	)

870 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_6
 'f'

	)

871 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_7
 's'

	)

872 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


877 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_°ru˘
;

878 
	#TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive_°ru˘
)

	)

880 
	#P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive__Æloc
(Ë((
P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive
))

	)

881 
	#P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Sîv™tAÃódyA˘ive
,(m),(d))

	)

883 #unde‡
ex_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive


884 
	#ex_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Sîv™tNŸA˘ive:1.0"

	)

885 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_deföed
)

886 
	#_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_deföed
 1

	)

887 
P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_ty≥
 
	tP‹èbÀSîvî_POA_Sîv™tNŸA˘ive
;

888 
	sP‹èbÀSîvî_POA_Sîv™tNŸA˘ive_ty≥
 {

889 
	gdummy
;

892 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_0
)

893 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_0
 'p'

	)

894 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_1
 'o'

	)

895 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_2
 'a'

	)

896 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_3
 '_'

	)

897 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_4
 'd'

	)

898 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_5
 'e'

	)

899 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_6
 'f'

	)

900 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_7
 's'

	)

901 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


906 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_°ru˘
;

907 
	#TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive_°ru˘
)

	)

909 
	#P‹èbÀSîvî_POA_Sîv™tNŸA˘ive__Æloc
(Ë((
P‹èbÀSîvî_POA_Sîv™tNŸA˘ive
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive
))

	)

910 
	#P‹èbÀSîvî_POA_Sîv™tNŸA˘ive__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Sîv™tNŸA˘ive
,(m),(d))

	)

912 #unde‡
ex_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr


913 
	#ex_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Wr⁄gAd≠ãr:1.0"

	)

914 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_deföed
)

915 
	#_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_deföed
 1

	)

916 
P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_ty≥
 
	tP‹èbÀSîvî_POA_Wr⁄gAd≠ãr
;

917 
	sP‹èbÀSîvî_POA_Wr⁄gAd≠ãr_ty≥
 {

918 
	gdummy
;

921 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_0
)

922 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_0
 'p'

	)

923 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_1
 'o'

	)

924 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_2
 'a'

	)

925 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_3
 '_'

	)

926 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_4
 'd'

	)

927 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_5
 'e'

	)

928 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_6
 'f'

	)

929 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_7
 's'

	)

930 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


935 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_°ru˘
;

936 
	#TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr_°ru˘
)

	)

938 
	#P‹èbÀSîvî_POA_Wr⁄gAd≠ãr__Æloc
(Ë((
P‹èbÀSîvî_POA_Wr⁄gAd≠ãr
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr
))

	)

939 
	#P‹èbÀSîvî_POA_Wr⁄gAd≠ãr__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Wr⁄gAd≠ãr
,(m),(d))

	)

941 #unde‡
ex_P‹èbÀSîvî_POA_Wr⁄gPﬁicy


942 
	#ex_P‹èbÀSîvî_POA_Wr⁄gPﬁicy
 "IDL:omg.‹g/P‹èbÀSîvî/POA/Wr⁄gPﬁicy:1.0"

	)

943 #i‡!
deföed
(
_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_deföed
)

944 
	#_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_deföed
 1

	)

945 
P‹èbÀSîvî_POA_Wr⁄gPﬁicy_ty≥
 
	tP‹èbÀSîvî_POA_Wr⁄gPﬁicy
;

946 
	sP‹èbÀSîvî_POA_Wr⁄gPﬁicy_ty≥
 {

947 
	gdummy
;

950 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_0
)

951 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_0
 'p'

	)

952 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_1
 'o'

	)

953 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_2
 'a'

	)

954 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_3
 '_'

	)

955 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_4
 'd'

	)

956 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_5
 'e'

	)

957 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_6
 'f'

	)

958 
	#TC_IMPL_TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_7
 's'

	)

959 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


964 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_°ru˘
;

965 
	#TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy_°ru˘
)

	)

967 
	#P‹èbÀSîvî_POA_Wr⁄gPﬁicy__Æloc
(Ë((
P‹èbÀSîvî_POA_Wr⁄gPﬁicy
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy
))

	)

968 
	#P‹èbÀSîvî_POA_Wr⁄gPﬁicy__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_POA_Wr⁄gPﬁicy
,(m),(d))

	)

970 #i‡!
deföed
(
ORBIT_DECL_P‹èbÀSîvî_Cuºít
Ë&& !deföed(
_P‹èbÀSîvî_Cuºít_deföed
)

971 
	#ORBIT_DECL_P‹èbÀSîvî_Cuºít
 1

	)

972 
	#_P‹èbÀSîvî_Cuºít_deföed
 1

	)

973 
P‹èbÀSîvî_Cuºít_ty≥
 *
	tP‹èbÀSîvî_Cuºít
;

974 #i‚de‡
TC_P‹èbÀSîvî_Cuºít


975 
	#TC_P‹èbÀSîvî_Cuºít
 
TC_CORBA_Obje˘


	)

978 #unde‡
ex_P‹èbÀSîvî_Cuºít_NoC⁄ãxt


979 
	#ex_P‹èbÀSîvî_Cuºít_NoC⁄ãxt
 "IDL:omg.‹g/P‹èbÀSîvî/Cuºít/NoC⁄ãxt:1.0"

	)

980 #i‡!
deföed
(
_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_deföed
)

981 
	#_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_deföed
 1

	)

982 
P‹èbÀSîvî_Cuºít_NoC⁄ãxt_ty≥
 
	tP‹èbÀSîvî_Cuºít_NoC⁄ãxt
;

983 
	sP‹èbÀSîvî_Cuºít_NoC⁄ãxt_ty≥
 {

984 
	gdummy
;

987 #i‡!
deföed
(
TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_0
)

988 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_0
 'p'

	)

989 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_1
 'o'

	)

990 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_2
 'a'

	)

991 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_3
 '_'

	)

992 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_4
 'd'

	)

993 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_5
 'e'

	)

994 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_6
 'f'

	)

995 
	#TC_IMPL_TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_7
 's'

	)

996 #ifde‡
ORBIT_IDL_C_IMODULE_pﬂ_defs


1001 
ORBIT2_MAYBE_CONST
 
CORBA_Ty≥Code_°ru˘
 
TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_°ru˘
;

1002 
	#TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt
 ((
CORBA_Ty≥Code
)&
TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt_°ru˘
)

	)

1004 
	#P‹èbÀSîvî_Cuºít_NoC⁄ãxt__Æloc
(Ë((
P‹èbÀSîvî_Cuºít_NoC⁄ãxt
 *)
	`ORBô_smÆl_Æloc
 (
TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt
))

	)

1005 
	#P‹èbÀSîvî_Cuºít_NoC⁄ãxt__‰ìkids
(
m
,
d
Ë
	`ORBô_smÆl_‰ìkids
 (
TC_P‹èbÀSîvî_Cuºít_NoC⁄ãxt
,(m),(d))

	)

1009 
	#P‹èbÀSîvî_ThªadPﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1010 
	#P‹èbÀSîvî_ThªadPﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1011 
	#P‹èbÀSîvî_ThªadPﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1012 
P‹èbÀSîvî_ThªadPﬁicyVÆue
 
P‹èbÀSîvî_ThªadPﬁicy__gë_vÆue
(
P‹èbÀSîvî_ThªadPﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1013 
	#P‹èbÀSîvî_Li„•™Pﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1014 
	#P‹èbÀSîvî_Li„•™Pﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1015 
	#P‹èbÀSîvî_Li„•™Pﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1016 
P‹èbÀSîvî_Li„•™PﬁicyVÆue
 
P‹èbÀSîvî_Li„•™Pﬁicy__gë_vÆue
(
P‹èbÀSîvî_Li„•™Pﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1017 
	#P‹èbÀSîvî_IdUniquíessPﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1018 
	#P‹èbÀSîvî_IdUniquíessPﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1019 
	#P‹èbÀSîvî_IdUniquíessPﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1020 
P‹èbÀSîvî_IdUniquíessPﬁicyVÆue
 
P‹èbÀSîvî_IdUniquíessPﬁicy__gë_vÆue
(
P‹èbÀSîvî_IdUniquíessPﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1021 
	#P‹èbÀSîvî_IdAssignmítPﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1022 
	#P‹èbÀSîvî_IdAssignmítPﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1023 
	#P‹èbÀSîvî_IdAssignmítPﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1024 
P‹èbÀSîvî_IdAssignmítPﬁicyVÆue
 
P‹èbÀSîvî_IdAssignmítPﬁicy__gë_vÆue
(
P‹èbÀSîvî_IdAssignmítPﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1025 
	#P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1026 
	#P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1027 
	#P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1028 
P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue
 
P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy__gë_vÆue
(
P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1029 
	#P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1030 
	#P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1031 
	#P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1032 
P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue
 
P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy__gë_vÆue
(
P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1033 
	#P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy__gë_pﬁicy_ty≥
 
CORBA_Pﬁicy__gë_pﬁicy_ty≥


	)

1034 
	#P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy_c›y
 
CORBA_Pﬁicy_c›y


	)

1035 
	#P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy_de°roy
 
CORBA_Pﬁicy_de°roy


	)

1036 
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue
 
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy__gë_vÆue
(
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1037 
P‹èbÀSîvî_POAM™agî_a˘iv©e
(
P‹èbÀSîvî_POAM™agî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1038 
P‹èbÀSîvî_POAM™agî_hﬁd_ªque°s
(
P‹èbÀSîvî_POAM™agî
 
_obj
, c⁄° 
CORBA_boﬁón
 
waô_f‹_com∂ëi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

1039 
P‹èbÀSîvî_POAM™agî_disˇrd_ªque°s
(
P‹èbÀSîvî_POAM™agî
 
_obj
, c⁄° 
CORBA_boﬁón
 
waô_f‹_com∂ëi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

1040 
P‹èbÀSîvî_POAM™agî_dó˘iv©e
(
P‹èbÀSîvî_POAM™agî
 
_obj
, c⁄° 
CORBA_boﬁón
 
ëhîólize_obje˘s
, c⁄° CORBA_boﬁó¿
waô_f‹_com∂ëi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

1041 
P‹èbÀSîvî_POAM™agî_Sèã
 
P‹èbÀSîvî_POAM™agî_gë_°©e
(
P‹èbÀSîvî_POAM™agî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1042 
CORBA_°rög
 
P‹èbÀSîvî_POAM™agî_gë_id
(
P‹èbÀSîvî_POAM™agî
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1043 
P‹èbÀSîvî_POAM™agî
 
P‹èbÀSîvî_POAM™agîFa˘‹y_¸óã_POAM™agî
(
P‹èbÀSîvî_POAM™agîFa˘‹y
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, c⁄° 
CORBA_PﬁicyLi°
* 
pﬁicõs
, 
CORBA_Envú⁄mít
 *
ev
);

1044 
P‹èbÀSîvî_POAM™agîFa˘‹y_POAM™agîSeq
* 
P‹èbÀSîvî_POAM™agîFa˘‹y_li°
(
P‹èbÀSîvî_POAM™agîFa˘‹y
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1045 
P‹èbÀSîvî_POAM™agî
 
P‹èbÀSîvî_POAM™agîFa˘‹y_föd
(
P‹èbÀSîvî_POAM™agîFa˘‹y
 
_obj
, c⁄° 
CORBA_ch¨
 * 
id
, 
CORBA_Envú⁄mít
 *
ev
);

1046 
CORBA_boﬁón
 
P‹èbÀSîvî_Ad≠ãrA˘iv©‹_unknown_ad≠ãr
(
P‹èbÀSîvî_Ad≠ãrA˘iv©‹
 
_obj
, c⁄° 
P‹èbÀSîvî_POA
 
∑ª¡
, c⁄° 
CORBA_ch¨
 * 
«me
, 
CORBA_Envú⁄mít
 *
ev
);

1047 
P‹èbÀSîvî_Sîv™t
 
P‹èbÀSîvî_Sîv™tA˘iv©‹_öˇ∫©e
(
P‹èbÀSîvî_Sîv™tA˘iv©‹
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, c⁄° 
P‹èbÀSîvî_POA
 
ad≠ãr
, 
CORBA_Envú⁄mít
 *
ev
);

1048 
P‹èbÀSîvî_Sîv™tA˘iv©‹_ëhîólize
(
P‹èbÀSîvî_Sîv™tA˘iv©‹
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, c⁄° 
P‹èbÀSîvî_POA
 
ad≠ãr
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
£rv
, c⁄° 
CORBA_boﬁón
 
˛ónup_ö_¥ogªss
, c⁄° CORBA_boﬁó¿
ªmaöög_a˘iv©i⁄s
, 
CORBA_Envú⁄mít
 *
ev
);

1049 
P‹èbÀSîvî_Sîv™t
 
P‹èbÀSîvî_Sîv™tLoˇt‹_¥eövoke
(
P‹èbÀSîvî_Sîv™tLoˇt‹
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, c⁄° 
P‹èbÀSîvî_POA
 
ad≠ãr
, c⁄° 
CORBA_ch¨
 * 
›î©i⁄
, 
P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ
 
the_cookõ
, 
CORBA_Envú⁄mít
 *
ev
);

1050 
P‹èbÀSîvî_Sîv™tLoˇt‹_po°övoke
(
P‹èbÀSîvî_Sîv™tLoˇt‹
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, c⁄° 
P‹èbÀSîvî_POA
 
ad≠ãr
, c⁄° 
CORBA_ch¨
 * 
›î©i⁄
, c⁄° 
P‹èbÀSîvî_Sîv™tLoˇt‹_Cookõ
 
the_cookõ
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
the_£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

1051 
P‹èbÀSîvî_POA
 
P‹èbÀSîvî_POA_¸óã_POA
(P‹èbÀSîvî_POA 
_obj
, c⁄° 
CORBA_ch¨
 * 
ad≠ãr_«me
, c⁄° 
P‹èbÀSîvî_POAM™agî
 
a_POAM™agî
, c⁄° 
CORBA_PﬁicyLi°
* 
pﬁicõs
, 
CORBA_Envú⁄mít
 *
ev
);

1052 
P‹èbÀSîvî_POA
 
P‹èbÀSîvî_POA_föd_POA
(P‹èbÀSîvî_POA 
_obj
, c⁄° 
CORBA_ch¨
 * 
ad≠ãr_«me
, c⁄° 
CORBA_boﬁón
 
a˘iv©e_ô
, 
CORBA_Envú⁄mít
 *
ev
);

1053 
P‹èbÀSîvî_POA_de°roy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
CORBA_boﬁón
 
ëhîólize_obje˘s
, c⁄° CORBA_boﬁó¿
waô_f‹_com∂ëi⁄
, 
CORBA_Envú⁄mít
 *
ev
);

1054 
P‹èbÀSîvî_ThªadPﬁicy
 
P‹èbÀSîvî_POA_¸óã_thªad_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_ThªadPﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1055 
P‹èbÀSîvî_Li„•™Pﬁicy
 
P‹èbÀSîvî_POA_¸óã_li„•™_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Li„•™PﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1056 
P‹èbÀSîvî_IdUniquíessPﬁicy
 
P‹èbÀSîvî_POA_¸óã_id_uniquíess_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_IdUniquíessPﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1057 
P‹èbÀSîvî_IdAssignmítPﬁicy
 
P‹èbÀSîvî_POA_¸óã_id_assignmít_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_IdAssignmítPﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1058 
P‹èbÀSîvî_Im∂icôA˘iv©i⁄Pﬁicy
 
P‹èbÀSîvî_POA_¸óã_im∂icô_a˘iv©i⁄_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1059 
P‹èbÀSîvî_Sîv™tRëíti⁄Pﬁicy
 
P‹èbÀSîvî_POA_¸óã_£rv™t_ªã¡i⁄_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1060 
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicy
 
P‹èbÀSîvî_POA_¸óã_ªque°_¥o˚ssög_pﬁicy
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1061 
CORBA_°rög
 
P‹èbÀSîvî_POA__gë_the_«me
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1062 
P‹èbÀSîvî_POA
 
P‹èbÀSîvî_POA__gë_the_∑ª¡
(P‹èbÀSîvî_POA 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1063 
P‹èbÀSîvî_POALi°
* 
P‹èbÀSîvî_POA__gë_the_chûdªn
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1064 
P‹èbÀSîvî_POAM™agî
 
P‹èbÀSîvî_POA__gë_the_POAM™agî
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1065 
P‹èbÀSîvî_Ad≠ãrA˘iv©‹
 
P‹èbÀSîvî_POA__gë_the_a˘iv©‹
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1066 
P‹èbÀSîvî_POA__£t_the_a˘iv©‹
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Ad≠ãrA˘iv©‹
 
vÆue
, 
CORBA_Envú⁄mít
 *
ev
);

1067 
P‹èbÀSîvî_Sîv™tM™agî
 
P‹èbÀSîvî_POA_gë_£rv™t_m™agî
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1068 
P‹èbÀSîvî_POA_£t_£rv™t_m™agî
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Sîv™tM™agî
 
imgr
, 
CORBA_Envú⁄mít
 *
ev
);

1069 
P‹èbÀSîvî_Sîv™t
 
P‹èbÀSîvî_POA_gë_£rv™t
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1070 
P‹èbÀSîvî_POA_£t_£rv™t
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
p_£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

1071 
P‹èbÀSîvî_Obje˘Id
* 
P‹èbÀSîvî_POA_a˘iv©e_obje˘
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
p_£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

1072 
P‹èbÀSîvî_POA_a˘iv©e_obje˘_wôh_id
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
id
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
p_£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

1073 
P‹èbÀSîvî_POA_dó˘iv©e_obje˘
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, 
CORBA_Envú⁄mít
 *
ev
);

1074 
CORBA_Obje˘
 
P‹èbÀSîvî_POA_¸óã_ª„ªn˚
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
CORBA_ch¨
 * 
ötf
, 
CORBA_Envú⁄mít
 *
ev
);

1075 
CORBA_Obje˘
 
P‹èbÀSîvî_POA_¸óã_ª„ªn˚_wôh_id
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, c⁄° 
CORBA_ch¨
 * 
ötf
, 
CORBA_Envú⁄mít
 *
ev
);

1076 
P‹èbÀSîvî_Obje˘Id
* 
P‹èbÀSîvî_POA_£rv™t_to_id
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
p_£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

1077 
CORBA_Obje˘
 
P‹èbÀSîvî_POA_£rv™t_to_ª„ªn˚
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Sîv™t
 
p_£rv™t
, 
CORBA_Envú⁄mít
 *
ev
);

1078 
P‹èbÀSîvî_Sîv™t
 
P‹èbÀSîvî_POA_ª„ªn˚_to_£rv™t
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
CORBA_Obje˘
 
ª„ªn˚
, 
CORBA_Envú⁄mít
 *
ev
);

1079 
P‹èbÀSîvî_Obje˘Id
* 
P‹èbÀSîvî_POA_ª„ªn˚_to_id
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
CORBA_Obje˘
 
ª„ªn˚
, 
CORBA_Envú⁄mít
 *
ev
);

1080 
P‹èbÀSîvî_Sîv™t
 
P‹èbÀSîvî_POA_id_to_£rv™t
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, 
CORBA_Envú⁄mít
 *
ev
);

1081 
CORBA_Obje˘
 
P‹èbÀSîvî_POA_id_to_ª„ªn˚
(
P‹èbÀSîvî_POA
 
_obj
, c⁄° 
P‹èbÀSîvî_Obje˘Id
* 
oid
, 
CORBA_Envú⁄mít
 *
ev
);

1082 
CORBA_O˘ëSeq
* 
P‹èbÀSîvî_POA__gë_id
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1083 
P‹èbÀSîvî_POAM™agîFa˘‹y
 
P‹èbÀSîvî_POA__gë_the_POAM™agîFa˘‹y
(
P‹èbÀSîvî_POA
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1084 
P‹èbÀSîvî_POA
 
P‹èbÀSîvî_Cuºít_gë_POA
(
P‹èbÀSîvî_Cuºít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1085 
P‹èbÀSîvî_Obje˘Id
* 
P‹èbÀSîvî_Cuºít_gë_obje˘_id
(
P‹èbÀSîvî_Cuºít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1086 
CORBA_Obje˘
 
P‹èbÀSîvî_Cuºít_gë_ª„ªn˚
(
P‹èbÀSîvî_Cuºít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1087 
P‹èbÀSîvî_Sîv™t
 
P‹èbÀSîvî_Cuºít_gë_£rv™t
(
P‹èbÀSîvî_Cuºít
 
_obj
, 
CORBA_Envú⁄mít
 *
ev
);

1088 #i‚de‡
__ORBIT_IMETHODS_INDEX


1089 
	#__ORBIT_IMETHODS_INDEX


	)

1090 
	#ORBIT_IMETHODS_INDEX
(
m
Ë(m ## 
__imëhods_ödex
)

	)

1093 #ifde‡
__˝lu•lus


1097 #i‚de‡
EXCLUDE_ORBIT_H


1098 
	~<‹bô/‹bô.h
>

1102 #unde‡
ORBIT_IDL_SERIAL


	@/usr/include/orbit-2.0/orbit/poa/poa-types.h

1 #i‚de‡
POA_TYPES_H


2 
	#POA_TYPES_H
 1

	)

4 
	~<‹bô/pﬂ/‹bô-ad≠t‹.h
>

6 
	gG_BEGIN_DECLS


8 #i‡
deföed
(
ORBIT2_INTERNAL_API
Ë|| deföed (
ORBIT2_STUBS_API
)

11 (*
	mdummy_∑ddög
) ();

12 
ORBô_im∂_födî
 
	mim∂_födî
;

13 c⁄° *
	m˛ass_«me
;

14 
CORBA_unsig√d_l⁄g
 *
	m˛ass_id
;

15 
ORBô_VïvIdx
 *
	mvïvm≠
;

16 
ORBô_II¡îÁ˚
 *
	mid©a
;

17 } 
	tP‹èbÀSîvî_CœssInfo
;

21 #ifde‡
ORBIT2_INTERNAL_API


23 
	sORBô_POAObje˘_ty≥
 {

24 
ORBô_OAObje˘_ty≥
 
	mba£
;

26 
P‹èbÀSîvî_Sîv™t
 
	m£rv™t
;

27 
P‹èbÀSîvî_POA
 
	mpﬂ
;

28 
P‹èbÀSîvî_Obje˘Id
 *
	mobje˘_id
;

30 
ORBô_VïvIdx
 *
	mvïvm≠_ˇche
;

32 
guöt16
 
	mli„_Êags
;

33 
guöt16
 
	mu£_˙t
;

35 
ORBô_POAObje˘
 
	m√xt
;

38 
	#ORBô_Li„F_NìdPo°Invoke
 (1<<0)

	)

39 
	#ORBô_Li„F_DoEthîólize
 (1<<1)

	)

40 
	#ORBô_Li„F_IsCÀ™up
 (1<<2)

	)

41 
	#ORBô_Li„F_Dó˘iv©eDo
 (1<<4)

	)

42 
	#ORBô_Li„F_Dó˘iv©ög
 (1<<5)

	)

43 
	#ORBô_Li„F_Dó˘iv©ed
 (1<<6)

	)

44 
	#ORBô_Li„F_De°royDo
 (1<<8)

	)

45 
	#ORBô_Li„F_De°royög
 (1<<9)

	)

46 
	#ORBô_Li„F_De°royed
 (1<<10)

	)

48 
	#ORBIT_SERVANT_TO_CLASSINFO
(
£rv™t
) ( \

49 (
P‹èbÀSîvî_CœssInfo
*) \

50 –((
P‹èbÀSîvî_Sîv™tBa£
 *)(
£rv™t
))->
vïv
[0]->
_¥iv©e
 ) \

51 )

	)

55 #i‡
deföed
(
ORBIT2_INTERNAL_API
Ë|| deföed (
ORBIT2_STUBS_API
)

58 
ORBô_c_°ub_övoke
 (
CORBA_Obje˘
 
obj
,

59 
ORBô_IMëhods
 *
mëhods
,

60 
gl⁄g
 
mëhod_ödex
,

61 
gpoöãr
 
ªt
,

62 
gpoöãr
 
¨gs
,

63 
CORBA_C⁄ãxt
 
˘x
,

64 
CORBA_Envú⁄mít
 *
ev
,

65 
gl⁄g
 
˛ass_id
,

66 
gl⁄g
 
mëhod_off£t
,

67 
ORBôSmÆlSkñë⁄
 
skñ_im∂
);

69 
	#ORBIT_VEPV_OFFSET
(
vïv_ty≥
,
ïv_membî
) \

70 ((
CORBA_unsig√d_l⁄g
Ë(
	`G_STRUCT_OFFSET
 (
vïv_ty≥
, 
ïv_membî
)Ë/  (
GFunc
))

	)

79 
	#ORBIT_STUB_IsBy∑ss
(
obj
, 
˛assid
Ë
FALSE


	)

80 
	#ORBIT_STUB_GëEpv
(
obj
, 
˛sid
Ë
NULL


	)

81 
	#ORBIT_STUB_PªCÆl
(
x
)

	)

82 
	#ORBIT_STUB_Po°CÆl
(
x
)

	)

86 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/poa/portableserver-current-type.h

1 #i‚de‡
PORTABLESERVER_CURRENT_TYPE_H


2 
	#PORTABLESERVER_CURRENT_TYPE_H
 1

	)

4 
	~<glib.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


10 
	sP‹èbÀSîvî_Cuºít_ty≥
 {

11 
ORBô_RoŸObje˘_°ru˘
 
	m∑ª¡
;

13 
CORBA_ORB
 
	m‹b
;

18 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/poa/portableserver-poa-type.h

1 #i‚de‡
PORTABLESERVER_POA_TYPE_H


2 
	#PORTABLESERVER_POA_TYPE_H
 1

	)

4 
	~<‹bô/pﬂ/‹bô-ad≠t‹.h
>

6 
	gG_BEGIN_DECLS


8 #ifde‡
ORBIT2_INTERNAL_API


10 
	sP‹èbÀSîvî_POAM™agî_ty≥
 {

11 
ORBô_RoŸObje˘_°ru˘
 
	m∑ª¡
;

13 
GSLi°
 *
	mpﬂ_cﬁÀ˘i⁄
;

14 
P‹èbÀSîvî_POAM™agî_Sèã
 
	m°©e
;

15 
CORBA_ORB
 
	m‹b
;

18 
	sP‹èbÀSîvî_POA_ty≥
 {

19 
ORBô_Obje˘Ad≠t‹_ty≥
 
	mba£
;

21 
guöt16
 
	mu£_˙t
;

22 
guöt16
 
	mli„_Êags
;

23 
	mpﬂ_id
;

24 
	m√xt_sysid
;

25 *
	m«me
;

26 
CORBA_ORB
 
	m‹b
;

27 
P‹èbÀSîvî_POA
 
	m∑ª¡_pﬂ
;

28 
P‹èbÀSîvî_POAM™agî
 
	mpﬂ_m™agî
;

29 
P‹èbÀSîvî_Ad≠ãrA˘iv©‹
 
	mthe_a˘iv©‹
;

30 
P‹èbÀSîvî_Sîv™tM™agî
 
	m£rv™t_m™agî
;

31 
P‹èbÀSîvî_Sîv™t
 
	mdeÁu…_£rv™t
;

33 
GHashTabÀ
 *
	moid_to_obj_m≠
;

34 
CORBA_unsig√d_l⁄g
 
	m√xt_id
;

36 
GSLi°
 *
	mhñd_ªque°s
;

37 
GHashTabÀ
 *
	mchûd_pﬂs
;

39 
P‹èbÀSîvî_ThªadPﬁicyVÆue
 
	mp_thªad
;

40 
P‹èbÀSîvî_Li„•™PﬁicyVÆue
 
	mp_li„•™
;

41 
P‹èbÀSîvî_IdUniquíessPﬁicyVÆue
 
	mp_id_uniquíess
;

42 
P‹èbÀSîvî_IdAssignmítPﬁicyVÆue
 
	mp_id_assignmít
;

43 
P‹èbÀSîvî_Im∂icôA˘iv©i⁄PﬁicyVÆue
 
	mp_im∂icô_a˘iv©i⁄
;

44 
P‹èbÀSîvî_Sîv™tRëíti⁄PﬁicyVÆue
 
	mp_£rv™t_ªã¡i⁄
;

45 
P‹èbÀSîvî_Reque°Pro˚ssögPﬁicyVÆue
 
	mp_ªque°_¥o˚ssög
;

50 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/util/basic_types.h

1 #i‚de‡
BASIC_TYPES_H


2 
	#BASIC_TYPES_H
 1

	)

4 
	~<glib.h
>

6 
G_BEGIN_DECLS


9 
	mCORBA_FALSE
 = 
FALSE
,

10 
	mCORBA_TRUE
 = 
TRUE


13 
göt16
 
	tCORBA_sh‹t
;

14 
göt32
 
	tCORBA_l⁄g
;

15 
guöt16
 
	tCORBA_unsig√d_sh‹t
;

16 
guöt32
 
	tCORBA_unsig√d_l⁄g
;

17 
gÊﬂt
 
	tCORBA_Êﬂt
;

18 
gdoubÀ
 
	tCORBA_doubÀ
;

19 
	tCORBA_ch¨
;

20 
gunich¨2
 
	tCORBA_wch¨
;

21 
guch¨
 
	tCORBA_boﬁón
;

22 
guch¨
 
	tCORBA_o˘ë
;

23 
gdoubÀ
 
	tCORBA_l⁄g_doubÀ
;

28 
CORBA_ch¨
 *
	tCORBA_°rög
;

29 
CORBA_wch¨
 *
	tCORBA_w°rög
;

31 #i‡!
deföed
(
ORBIT_DECL_CORBA_Obje˘
Ë&& !deföed(
_CORBA_Obje˘_deföed
)

32 
	#ORBIT_DECL_CORBA_Obje˘
 1

	)

33 
	#_CORBA_Obje˘_deföed
 1

	)

34 
CORBA_Obje˘_ty≥
 *
	tCORBA_Obje˘
;

37 #ifde‡
G_HAVE_GINT64


38 
	#HAVE_CORBA_LONG_LONG


	)

44 
göt64
 
	tCORBA_l⁄g_l⁄g
;

45 
guöt64
 
	tCORBA_unsig√d_l⁄g_l⁄g
;

54 
	gG_END_DECLS


	@/usr/include/orbit-2.0/orbit/util/orbit-genrand.h

2 #i‚de‡
ORBIT_GENRAND_H


3 
	#ORBIT_GENRAND_H
 1

	)

5 
	~<glib.h
>

7 
	gG_BEGIN_DECLS


9 #ifde‡
ORBIT2_INTERNAL_API


12 
	mORBIT_GENUID_STRONG
,

13 
	mORBIT_GENUID_SIMPLE


14 } 
	tORBôGíUidTy≥
;

17 
	mORBIT_GENUID_COOKIE
,

18 
	mORBIT_GENUID_OBJECT_ID


19 } 
	tORBôGíUidRﬁe
;

21 
gboﬁón
 
ORBô_gíuid_öô
 (
ORBôGíUidTy≥
 
ty≥
);

22 
ORBô_gíuid_föi
 ();

23 
ORBô_gíuid_buf„r
 (
guöt8
 *
buf„r
,

24 
Àngth
,

25 
ORBôGíUidRﬁe
 
rﬁe
);

29 
	gG_END_DECLS


	@/usr/include/pango-1.0/pango/pango-attributes.h

22 #i‚de‡
__PANGO_ATTRIBUTES_H__


23 
	#__PANGO_ATTRIBUTES_H__


	)

25 
	~<∑ngo/∑ngo-f⁄t.h
>

26 
	~<glib-obje˘.h
>

28 
G_BEGIN_DECLS


32 
_P™goCﬁ‹
 
	tP™goCﬁ‹
;

34 
	s_P™goCﬁ‹


36 
guöt16
 
	mªd
;

37 
guöt16
 
	mgªí
;

38 
guöt16
 
	mblue
;

41 
	#PANGO_TYPE_COLOR
 
	`∑ngo_cﬁ‹_gë_ty≥
 ()

	)

42 
GTy≥
 
	$∑ngo_cﬁ‹_gë_ty≥
 (Ë
G_GNUC_CONST
;

44 
P™goCﬁ‹
 *
	`∑ngo_cﬁ‹_c›y
 (c⁄° P™goCﬁ‹ *
§c
);

45 
	`∑ngo_cﬁ‹_‰ì
 (
P™goCﬁ‹
 *
cﬁ‹
);

46 
gboﬁón
 
	`∑ngo_cﬁ‹_∑r£
 (
P™goCﬁ‹
 *
cﬁ‹
,

47 c⁄° *
•ec
);

48 
gch¨
 *
	`∑ngo_cﬁ‹_to_°rög
(c⁄° 
P™goCﬁ‹
 *
cﬁ‹
);

53 
_P™goAâribuã
 
	tP™goAâribuã
;

54 
_P™goAârCœss
 
	tP™goAârCœss
;

56 
_P™goAârSåög
 
	tP™goAârSåög
;

57 
_P™goAârL™guage
 
	tP™goAârL™guage
;

58 
_P™goAârI¡
 
	tP™goAârI¡
;

59 
_P™goAârSize
 
	tP™goAârSize
;

60 
_P™goAârFlﬂt
 
	tP™goAârFlﬂt
;

61 
_P™goAârCﬁ‹
 
	tP™goAârCﬁ‹
;

62 
_P™goAârF⁄tDesc
 
	tP™goAârF⁄tDesc
;

63 
_P™goAârSh≠e
 
	tP™goAârSh≠e
;

65 
	#PANGO_TYPE_ATTR_LIST
 
	`∑ngo_©å_li°_gë_ty≥
 ()

	)

66 
_P™goAârLi°
 
	tP™goAârLi°
;

67 
_P™goAârIãøt‹
 
	tP™goAârIãøt‹
;

71 
PANGO_ATTR_INVALID
,

72 
PANGO_ATTR_LANGUAGE
,

73 
PANGO_ATTR_FAMILY
,

74 
PANGO_ATTR_STYLE
,

75 
PANGO_ATTR_WEIGHT
,

76 
PANGO_ATTR_VARIANT
,

77 
PANGO_ATTR_STRETCH
,

78 
PANGO_ATTR_SIZE
,

79 
PANGO_ATTR_FONT_DESC
,

80 
PANGO_ATTR_FOREGROUND
,

81 
PANGO_ATTR_BACKGROUND
,

82 
PANGO_ATTR_UNDERLINE
,

83 
PANGO_ATTR_STRIKETHROUGH
,

84 
PANGO_ATTR_RISE
,

85 
PANGO_ATTR_SHAPE
,

86 
PANGO_ATTR_SCALE
,

87 
PANGO_ATTR_FALLBACK
,

88 
PANGO_ATTR_LETTER_SPACING
,

89 
PANGO_ATTR_UNDERLINE_COLOR
,

90 
PANGO_ATTR_STRIKETHROUGH_COLOR
,

91 
PANGO_ATTR_ABSOLUTE_SIZE
,

92 
PANGO_ATTR_GRAVITY
,

93 
PANGO_ATTR_GRAVITY_HINT


94 } 
	tP™goAârTy≥
;

97 
PANGO_UNDERLINE_NONE
,

98 
PANGO_UNDERLINE_SINGLE
,

99 
PANGO_UNDERLINE_DOUBLE
,

100 
PANGO_UNDERLINE_LOW
,

101 
PANGO_UNDERLINE_ERROR


102 } 
	tP™goUndîlöe
;

104 
	#PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING
 0

	)

105 
	#PANGO_ATTR_INDEX_TO_TEXT_END
 
G_MAXUINT


	)

107 
	s_P™goAâribuã


109 c⁄° 
P™goAârCœss
 *
kœss
;

110 
guöt
 
°¨t_ödex
;

111 
guöt
 
íd_ödex
;

114 
	$gboﬁón
 (*
	tP™goAârFûãrFunc
Ë(
	tP™goAâribuã
 *
	t©åibuã
,

115 
	tgpoöãr
 
	td©a
);

117 
	$gpoöãr
 (*
	tP™goAârD©aC›yFunc
Ë(
	tgc⁄°poöãr
 
	td©a
);

119 
	s_P™goAârCœss


122 
P™goAârTy≥
 
ty≥
;

123 
P™goAâribuã
 * (*
c›y
Ë(c⁄° P™goAâribuã *
©å
);

124 (*
de°roy
Ë(
P™goAâribuã
 *
©å
);

125 
	`gboﬁón
 (*
equÆ
Ë(c⁄° 
P™goAâribuã
 *
©å1
, c⁄° P™goAâribuã *
©å2
);

128 
	s_P™goAârSåög


130 
P™goAâribuã
 
©å
;

131 *
vÆue
;

134 
	s_P™goAârL™guage


136 
P™goAâribuã
 
©å
;

137 
P™goL™guage
 *
vÆue
;

140 
	s_P™goAârI¡


142 
P™goAâribuã
 
©å
;

143 
vÆue
;

146 
	s_P™goAârFlﬂt


148 
P™goAâribuã
 
©å
;

149 
vÆue
;

152 
	s_P™goAârCﬁ‹


154 
P™goAâribuã
 
©å
;

155 
P™goCﬁ‹
 
cﬁ‹
;

158 
	s_P™goAârSize


160 
P™goAâribuã
 
©å
;

161 
size
;

162 
guöt
 
absﬁuã
 : 1;

165 
	s_P™goAârSh≠e


167 
P™goAâribuã
 
©å
;

168 
P™goRe˘™gÀ
 
ök_ª˘
;

169 
P™goRe˘™gÀ
 
logiˇl_ª˘
;

171 
gpoöãr
 
d©a
;

172 
P™goAârD©aC›yFunc
 
c›y_func
;

173 
GDe°royNŸify
 
de°roy_func
;

176 
	s_P™goAârF⁄tDesc


178 
P™goAâribuã
 
©å
;

179 
P™goF⁄tDes¸ùti⁄
 *
desc
;

182 
P™goAârTy≥
 
	`∑ngo_©å_ty≥_ªgi°î
 (c⁄° 
gch¨
 *
«me
);

183 
G_CONST_RETURN
 * 
	$∑ngo_©å_ty≥_gë_«me
 (
P™goAârTy≥
 
ty≥
Ë
G_GNUC_CONST
;

185 
	`∑ngo_©åibuã_öô
 (
P™goAâribuã
 *
©å
,

186 c⁄° 
P™goAârCœss
 *
kœss
);

187 
P™goAâribuã
 * 
	`∑ngo_©åibuã_c›y
 (c⁄° P™goAâribuã *
©å
);

188 
	`∑ngo_©åibuã_de°roy
 (
P™goAâribuã
 *
©å
);

189 
gboﬁón
 
	$∑ngo_©åibuã_equÆ
 (c⁄° 
P™goAâribuã
 *
©å1
,

190 c⁄° 
P™goAâribuã
 *
©å2
Ë
G_GNUC_PURE
;

192 
P™goAâribuã
 *
	`∑ngo_©å_œnguage_√w
 (
P™goL™guage
 *
œnguage
);

193 
P™goAâribuã
 *
	`∑ngo_©å_Ámûy_√w
 (c⁄° *
Ámûy
);

194 
P™goAâribuã
 *
	`∑ngo_©å_f‹eground_√w
 (
guöt16
 
ªd
,

195 
guöt16
 
gªí
,

196 
guöt16
 
blue
);

197 
P™goAâribuã
 *
	`∑ngo_©å_background_√w
 (
guöt16
 
ªd
,

198 
guöt16
 
gªí
,

199 
guöt16
 
blue
);

200 
P™goAâribuã
 *
	`∑ngo_©å_size_√w
 (
size
);

201 
P™goAâribuã
 *
	`∑ngo_©å_size_√w_absﬁuã
 (
size
);

202 
P™goAâribuã
 *
	`∑ngo_©å_°yÀ_√w
 (
P™goStyÀ
 
°yÀ
);

203 
P™goAâribuã
 *
	`∑ngo_©å_weight_√w
 (
P™goWeight
 
weight
);

204 
P™goAâribuã
 *
	`∑ngo_©å_v¨ü¡_√w
 (
P™goV¨ü¡
 
v¨ü¡
);

205 
P™goAâribuã
 *
	`∑ngo_©å_°ªtch_√w
 (
P™goSåëch
 
°ªtch
);

206 
P™goAâribuã
 *
	`∑ngo_©å_f⁄t_desc_√w
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

208 
P™goAâribuã
 *
	`∑ngo_©å_undîlöe_√w
 (
P™goUndîlöe
 
undîlöe
);

209 
P™goAâribuã
 *
	`∑ngo_©å_undîlöe_cﬁ‹_√w
 (
guöt16
 
ªd
,

210 
guöt16
 
gªí
,

211 
guöt16
 
blue
);

212 
P™goAâribuã
 *
	`∑ngo_©å_°rikëhrough_√w
 (
gboﬁón
 
°rikëhrough
);

213 
P™goAâribuã
 *
	`∑ngo_©å_°rikëhrough_cﬁ‹_√w
 (
guöt16
 
ªd
,

214 
guöt16
 
gªí
,

215 
guöt16
 
blue
);

217 
P™goAâribuã
 *
	`∑ngo_©å_ri£_√w
 (
ri£
);

218 
P™goAâribuã
 *
	`∑ngo_©å_sˇÀ_√w
 (
sˇÀ_Á˘‹
);

219 
P™goAâribuã
 *
	`∑ngo_©å_ÁŒback_√w
 (
gboﬁón
 
íabÀ_ÁŒback
);

220 
P™goAâribuã
 *
	`∑ngo_©å_Àâî_•acög_√w
 (
Àâî_•acög
);

222 
P™goAâribuã
 *
	`∑ngo_©å_sh≠e_√w
 (c⁄° 
P™goRe˘™gÀ
 *
ök_ª˘
,

223 c⁄° 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

224 
P™goAâribuã
 *
	`∑ngo_©å_sh≠e_√w_wôh_d©a
 (c⁄° 
P™goRe˘™gÀ
 *
ök_ª˘
,

225 c⁄° 
P™goRe˘™gÀ
 *
logiˇl_ª˘
,

226 
gpoöãr
 
d©a
,

227 
P™goAârD©aC›yFunc
 
c›y_func
,

228 
GDe°royNŸify
 
de°roy_func
);

230 
P™goAâribuã
 *
	`∑ngo_©å_gøvôy_√w
 (
P™goGøvôy
 
gøvôy
);

231 
P™goAâribuã
 *
	`∑ngo_©å_gøvôy_höt_√w
 (
P™goGøvôyHöt
 
höt
);

233 
GTy≥
 
	$∑ngo_©å_li°_gë_ty≥
 (Ë
G_GNUC_CONST
;

234 
P™goAârLi°
 * 
	`∑ngo_©å_li°_√w
 ();

235 
P™goAârLi°
 * 
	`∑ngo_©å_li°_ªf
 (P™goAârLi° *
li°
);

236 
	`∑ngo_©å_li°_uƒef
 (
P™goAârLi°
 *
li°
);

237 
P™goAârLi°
 * 
	`∑ngo_©å_li°_c›y
 (P™goAârLi° *
li°
);

238 
	`∑ngo_©å_li°_ö£π
 (
P™goAârLi°
 *
li°
,

239 
P™goAâribuã
 *
©å
);

240 
	`∑ngo_©å_li°_ö£π_bef‹e
 (
P™goAârLi°
 *
li°
,

241 
P™goAâribuã
 *
©å
);

242 
	`∑ngo_©å_li°_ch™ge
 (
P™goAârLi°
 *
li°
,

243 
P™goAâribuã
 *
©å
);

244 
	`∑ngo_©å_li°_•li˚
 (
P™goAârLi°
 *
li°
,

245 
P™goAârLi°
 *
Ÿhî
,

246 
göt
 
pos
,

247 
göt
 
Àn
);

249 
P™goAârLi°
 *
	`∑ngo_©å_li°_fûãr
 (P™goAârLi° *
li°
,

250 
P™goAârFûãrFunc
 
func
,

251 
gpoöãr
 
d©a
);

253 
P™goAârIãøt‹
 *
	`∑ngo_©å_li°_gë_ôî©‹
 (
P™goAârLi°
 *
li°
);

255 
	`∑ngo_©å_ôî©‹_ønge
 (
P™goAârIãøt‹
 *
ôî©‹
,

256 
göt
 *
°¨t
,

257 
göt
 *
íd
);

258 
gboﬁón
 
	`∑ngo_©å_ôî©‹_√xt
 (
P™goAârIãøt‹
 *
ôî©‹
);

259 
P™goAârIãøt‹
 *
	`∑ngo_©å_ôî©‹_c›y
 (P™goAârIãøt‹ *
ôî©‹
);

260 
	`∑ngo_©å_ôî©‹_de°roy
 (
P™goAârIãøt‹
 *
ôî©‹
);

261 
P™goAâribuã
 * 
	`∑ngo_©å_ôî©‹_gë
 (
P™goAârIãøt‹
 *
ôî©‹
,

262 
P™goAârTy≥
 
ty≥
);

263 
	`∑ngo_©å_ôî©‹_gë_f⁄t
 (
P™goAârIãøt‹
 *
ôî©‹
,

264 
P™goF⁄tDes¸ùti⁄
 *
desc
,

265 
P™goL™guage
 **
œnguage
,

266 
GSLi°
 **
exåa_©ås
);

267 
GSLi°
 * 
	`∑ngo_©å_ôî©‹_gë_©ås
 (
P™goAârIãøt‹
 *
ôî©‹
);

270 
gboﬁón
 
	`∑ngo_∑r£_m¨kup
 (c⁄° *
m¨kup_ãxt
,

271 
Àngth
,

272 
gunich¨
 
ac˚l_m¨kî
,

273 
P™goAârLi°
 **
©å_li°
,

274 **
ãxt
,

275 
gunich¨
 *
ac˚l_ch¨
,

276 
GEº‹
 **
îr‹
);

278 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-bidi-type.h

22 #i‚de‡
__PANGO_BIDI_TYPE_H__


23 
	#__PANGO_BIDI_TYPE_H__


	)

25 
	~<glib.h
>

27 
G_BEGIN_DECLS


59 
	mPANGO_BIDI_TYPE_L
,

60 
	mPANGO_BIDI_TYPE_LRE
,

61 
	mPANGO_BIDI_TYPE_LRO
,

62 
	mPANGO_BIDI_TYPE_R
,

63 
	mPANGO_BIDI_TYPE_AL
,

64 
	mPANGO_BIDI_TYPE_RLE
,

65 
	mPANGO_BIDI_TYPE_RLO
,

68 
	mPANGO_BIDI_TYPE_PDF
,

69 
	mPANGO_BIDI_TYPE_EN
,

70 
	mPANGO_BIDI_TYPE_ES
,

71 
	mPANGO_BIDI_TYPE_ET
,

72 
	mPANGO_BIDI_TYPE_AN
,

73 
	mPANGO_BIDI_TYPE_CS
,

74 
	mPANGO_BIDI_TYPE_NSM
,

75 
	mPANGO_BIDI_TYPE_BN
,

78 
	mPANGO_BIDI_TYPE_B
,

79 
	mPANGO_BIDI_TYPE_S
,

80 
	mPANGO_BIDI_TYPE_WS
,

81 
	mPANGO_BIDI_TYPE_ON


82 } 
	tP™goBidiTy≥
;

84 
P™goBidiTy≥
 
	$∑ngo_bidi_ty≥_f‹_unich¨
 (
gunich¨
 
ch
Ë
G_GNUC_CONST
;

115 
PANGO_DIRECTION_LTR
,

116 
PANGO_DIRECTION_RTL
,

117 
PANGO_DIRECTION_TTB_LTR
,

118 
PANGO_DIRECTION_TTB_RTL
,

119 
PANGO_DIRECTION_WEAK_LTR
,

120 
PANGO_DIRECTION_WEAK_RTL
,

121 
PANGO_DIRECTION_NEUTRAL


122 } 
	tP™goDúe˘i⁄
;

124 
P™goDúe˘i⁄
 
	$∑ngo_unich¨_dúe˘i⁄
 (
gunich¨
 
ch
Ë
G_GNUC_CONST
;

125 
P™goDúe˘i⁄
 
	`∑ngo_föd_ba£_dú
 (c⁄° 
gch¨
 *
ãxt
,

126 
göt
 
Àngth
);

128 #i‚de‡
PANGO_DISABLE_DEPRECATED


129 
gboﬁón
 
	`∑ngo_gë_múr‹_ch¨
 (
gunich¨
 
ch
,

130 
gunich¨
 *
múr‹ed_ch
);

133 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-break.h

22 #i‚de‡
__PANGO_BREAK_H__


23 
	#__PANGO_BREAK_H__


	)

25 
	~<glib.h
>

27 
	gG_BEGIN_DECLS


29 
	~<∑ngo/∑ngo-ôem.h
>

33 
	s_P™goLogAâr


35 
guöt
 
	mis_löe_bªak
 : 1;

37 
guöt
 
	mis_m™d©‹y_bªak
 : 1;

39 
guöt
 
	mis_ch¨_bªak
 : 1;

41 
guöt
 
	mis_whôe
 : 1;

46 
guöt
 
	mis_curs‹_posôi⁄
 : 1;

53 
guöt
 
	mis_w‹d_°¨t
 : 1;

54 
guöt
 
	mis_w‹d_íd
 : 1;

64 
guöt
 
	mis_£¡í˚_bound¨y
 : 1;

65 
guöt
 
	mis_£¡í˚_°¨t
 : 1;

66 
guöt
 
	mis_£¡í˚_íd
 : 1;

71 
guöt
 
	mback•a˚_dñëes_ch¨a˘î
 : 1;

76 
guöt
 
	mis_ex∑ndabÀ_•a˚
 : 1;

79 
guöt
 
	mis_w‹d_bound¨y
 : 1;

85 
∑ngo_bªak
 (c⁄° 
gch¨
 *
ãxt
,

86 
Àngth
,

87 
P™goA«lysis
 *
™Æysis
,

88 
P™goLogAâr
 *
©ås
,

89 
©ås_Àn
);

91 
∑ngo_föd_∑øgøph_bound¨y
 (c⁄° 
gch¨
 *
ãxt
,

92 
göt
 
Àngth
,

93 
göt
 *
∑øgøph_dñimôî_ödex
,

94 
göt
 *
√xt_∑øgøph_°¨t
);

96 
∑ngo_gë_log_©ås
 (c⁄° *
ãxt
,

97 
Àngth
,

98 
Àvñ
,

99 
P™goL™guage
 *
œnguage
,

100 
P™goLogAâr
 *
log_©ås
,

101 
©ås_Àn
);

103 #ifde‡
PANGO_ENABLE_ENGINE


110 
∑ngo_deÁu…_bªak
 (c⁄° 
gch¨
 *
ãxt
,

111 
Àngth
,

112 
P™goA«lysis
 *
™Æysis
,

113 
P™goLogAâr
 *
©ås
,

114 
©ås_Àn
);

118 
	gG_END_DECLS


	@/usr/include/pango-1.0/pango/pango-context.h

22 #i‚de‡
__PANGO_CONTEXT_H__


23 
	#__PANGO_CONTEXT_H__


	)

25 
	~<∑ngo/∑ngo-f⁄t.h
>

26 
	~<∑ngo/∑ngo-f⁄tm≠.h
>

27 
	~<∑ngo/∑ngo-©åibuãs.h
>

29 
G_BEGIN_DECLS


36 
_P™goC⁄ãxtCœss
 
	tP™goC⁄ãxtCœss
;

38 
	#PANGO_TYPE_CONTEXT
 (
	`∑ngo_c⁄ãxt_gë_ty≥
 ())

	)

39 
	#PANGO_CONTEXT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_CONTEXT
, 
P™goC⁄ãxt
))

	)

40 
	#PANGO_CONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_CONTEXT
, 
P™goC⁄ãxtCœss
))

	)

41 
	#PANGO_IS_CONTEXT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_CONTEXT
))

	)

42 
	#PANGO_IS_CONTEXT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_CONTEXT
))

	)

43 
	#PANGO_CONTEXT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_CONTEXT
, 
P™goC⁄ãxtCœss
))

	)

50 
GTy≥
 
	$∑ngo_c⁄ãxt_gë_ty≥
 (Ë
G_GNUC_CONST
;

52 
P™goC⁄ãxt
 *
	`∑ngo_c⁄ãxt_√w
 ();

53 
	`∑ngo_c⁄ãxt_£t_f⁄t_m≠
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

54 
P™goF⁄tM≠
 *
f⁄t_m≠
);

55 
P™goF⁄tM≠
 *
	`∑ngo_c⁄ãxt_gë_f⁄t_m≠
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

57 
	`∑ngo_c⁄ãxt_li°_Ámûõs
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

58 
P™goF⁄tFamûy
 ***
Ámûõs
,

59 *
n_Ámûõs
);

60 
P™goF⁄t
 * 
	`∑ngo_c⁄ãxt_lﬂd_f⁄t
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

61 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

62 
P™goF⁄t£t
 *
	`∑ngo_c⁄ãxt_lﬂd_f⁄t£t
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

63 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
,

64 
P™goL™guage
 *
œnguage
);

66 
P™goF⁄tMërics
 *
	`∑ngo_c⁄ãxt_gë_mërics
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

67 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
,

68 
P™goL™guage
 *
œnguage
);

70 
	`∑ngo_c⁄ãxt_£t_f⁄t_des¸ùti⁄
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

71 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

72 
P™goF⁄tDes¸ùti⁄
 * 
	`∑ngo_c⁄ãxt_gë_f⁄t_des¸ùti⁄
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

73 
P™goL™guage
 *
	`∑ngo_c⁄ãxt_gë_œnguage
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

74 
	`∑ngo_c⁄ãxt_£t_œnguage
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

75 
P™goL™guage
 *
œnguage
);

76 
	`∑ngo_c⁄ãxt_£t_ba£_dú
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

77 
P™goDúe˘i⁄
 
dúe˘i⁄
);

78 
P™goDúe˘i⁄
 
	`∑ngo_c⁄ãxt_gë_ba£_dú
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

79 
	`∑ngo_c⁄ãxt_£t_ba£_gøvôy
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

80 
P™goGøvôy
 
gøvôy
);

81 
P™goGøvôy
 
	`∑ngo_c⁄ãxt_gë_ba£_gøvôy
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

82 
P™goGøvôy
 
	`∑ngo_c⁄ãxt_gë_gøvôy
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

83 
	`∑ngo_c⁄ãxt_£t_gøvôy_höt
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

84 
P™goGøvôyHöt
 
höt
);

85 
P™goGøvôyHöt
 
	`∑ngo_c⁄ãxt_gë_gøvôy_höt
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

87 
	`∑ngo_c⁄ãxt_£t_m©rix
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

88 c⁄° 
P™goM©rix
 *
m©rix
);

89 
G_CONST_RETURN
 
P™goM©rix
 *
	`∑ngo_c⁄ãxt_gë_m©rix
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

95 
GLi°
 *
	`∑ngo_ôemize
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

96 c⁄° *
ãxt
,

97 
°¨t_ödex
,

98 
Àngth
,

99 
P™goAârLi°
 *
©ås
,

100 
P™goAârIãøt‹
 *
ˇched_ôî
);

101 
GLi°
 *
	`∑ngo_ôemize_wôh_ba£_dú
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

102 
P™goDúe˘i⁄
 
ba£_dú
,

103 c⁄° *
ãxt
,

104 
°¨t_ödex
,

105 
Àngth
,

106 
P™goAârLi°
 *
©ås
,

107 
P™goAârIãøt‹
 *
ˇched_ôî
);

109 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-coverage.h

22 #i‚de‡
__PANGO_COVERAGE_H__


23 
	#__PANGO_COVERAGE_H__


	)

25 
	~<glib.h
>

27 
G_BEGIN_DECLS


29 
_P™goCovîage
 
	tP™goCovîage
;

32 
	mPANGO_COVERAGE_NONE
,

33 
	mPANGO_COVERAGE_FALLBACK
,

34 
	mPANGO_COVERAGE_APPROXIMATE
,

35 
	mPANGO_COVERAGE_EXACT


36 } 
	tP™goCovîageLevñ
;

38 
P™goCovîage
 * 
∑ngo_covîage_√w
 ();

39 
P™goCovîage
 * 
∑ngo_covîage_ªf
 (P™goCovîagê*
covîage
);

40 
∑ngo_covîage_uƒef
 (
P™goCovîage
 *
covîage
);

41 
P™goCovîage
 * 
∑ngo_covîage_c›y
 (P™goCovîagê*
covîage
);

42 
P™goCovîageLevñ
 
∑ngo_covîage_gë
 (
P™goCovîage
 *
covîage
,

43 
ödex_
);

44 
∑ngo_covîage_£t
 (
P™goCovîage
 *
covîage
,

45 
ödex_
,

46 
P™goCovîageLevñ
 
Àvñ
);

47 
∑ngo_covîage_max
 (
P™goCovîage
 *
covîage
,

48 
P™goCovîage
 *
Ÿhî
);

50 
∑ngo_covîage_to_byãs
 (
P™goCovîage
 *
covîage
,

51 
guch¨
 **
byãs
,

52 *
n_byãs
);

53 
P™goCovîage
 *
∑ngo_covîage_‰om_byãs
 (
guch¨
 *
byãs
,

54 
n_byãs
);

56 
	gG_END_DECLS


	@/usr/include/pango-1.0/pango/pango-engine.h

22 #i‚de‡
__PANGO_ENGINE_H__


23 
	#__PANGO_ENGINE_H__


	)

25 
	~<∑ngo/∑ngo-ty≥s.h
>

26 
	~<∑ngo/∑ngo-ôem.h
>

27 
	~<∑ngo/∑ngo-f⁄t.h
>

28 
	~<∑ngo/∑ngo-glyph.h
>

29 
	~<∑ngo/∑ngo-s¸ùt.h
>

31 
	gG_BEGIN_DECLS


33 #ifde‡
PANGO_ENABLE_ENGINE


37 
	~<gmoduÀ.h
>

39 
	#PANGO_RENDER_TYPE_NONE
 "P™goRídîN⁄e"

	)

41 
	#PANGO_TYPE_ENGINE
 (
	`∑ngo_ígöe_gë_ty≥
 ())

	)

42 
	#PANGO_ENGINE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_ENGINE
, 
P™goEngöe
))

	)

43 
	#PANGO_IS_ENGINE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_ENGINE
))

	)

44 
	#PANGO_ENGINE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_ENGINE
, 
P™goEngöeCœss
))

	)

45 
	#PANGO_IS_ENGINE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_ENGINE
))

	)

46 
	#PANGO_ENGINE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_ENGINE
, 
P™goEngöeCœss
))

	)

48 
_P™goEngöe
 
	tP™goEngöe
;

49 
_P™goEngöeCœss
 
	tP™goEngöeCœss
;

57 
	s_P™goEngöe


60 
GObje˘
 
	m∑ª¡_ö°™˚
;

68 
	s_P™goEngöeCœss


71 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

74 
GTy≥
 
	$∑ngo_ígöe_gë_ty≥
 (Ë
G_GNUC_CONST
;

76 
	#PANGO_ENGINE_TYPE_LANG
 "P™goEngöeL™g"

	)

78 
	#PANGO_TYPE_ENGINE_LANG
 (
	`∑ngo_ígöe_œng_gë_ty≥
 ())

	)

79 
	#PANGO_ENGINE_LANG
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_ENGINE_LANG
, 
P™goEngöeL™g
))

	)

80 
	#PANGO_IS_ENGINE_LANG
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_ENGINE_LANG
))

	)

81 
	#PANGO_ENGINE_LANG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_ENGINE_LANG
, 
P™goEngöeL™gCœss
))

	)

82 
	#PANGO_IS_ENGINE_LANG_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_ENGINE_LANG
))

	)

83 
	#PANGO_ENGINE_LANG_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_ENGINE_LANG
, 
P™goEngöeL™gCœss
))

	)

85 
_P™goEngöeL™gCœss
 
	tP™goEngöeL™gCœss
;

97 
	s_P™goEngöeL™g


100 
P™goEngöe
 
∑ª¡_ö°™˚
;

114 
	s_P™goEngöeL™gCœss


117 
P™goEngöeCœss
 
∑ª¡_˛ass
;

120 (*
s¸ùt_bªak
Ë(
P™goEngöeL™g
 *
ígöe
,

121 c⁄° *
ãxt
,

122 
Àn
,

123 
P™goA«lysis
 *
™Æysis
,

124 
P™goLogAâr
 *
©ås
,

125 
©ås_Àn
);

128 
GTy≥
 
	$∑ngo_ígöe_œng_gë_ty≥
 (Ë
G_GNUC_CONST
;

130 
	#PANGO_ENGINE_TYPE_SHAPE
 "P™goEngöeSh≠e"

	)

132 
	#PANGO_TYPE_ENGINE_SHAPE
 (
	`∑ngo_ígöe_sh≠e_gë_ty≥
 ())

	)

133 
	#PANGO_ENGINE_SHAPE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_ENGINE_SHAPE
, 
P™goEngöeSh≠e
))

	)

134 
	#PANGO_IS_ENGINE_SHAPE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_ENGINE_SHAPE
))

	)

135 
	#PANGO_ENGINE_SHAPE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_ENGINE_SHAPE
, 
P™goEngöe_Sh≠eCœss
))

	)

136 
	#PANGO_IS_ENGINE_SHAPE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_ENGINE_SHAPE
))

	)

137 
	#PANGO_ENGINE_SHAPE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_ENGINE_SHAPE
, 
P™goEngöeSh≠eCœss
))

	)

139 
_P™goEngöeSh≠eCœss
 
	tP™goEngöeSh≠eCœss
;

153 
	s_P™goEngöeSh≠e


155 
P™goEngöe
 
∑ª¡_ö°™˚
;

183 
	s_P™goEngöeSh≠eCœss


186 
P™goEngöeCœss
 
∑ª¡_˛ass
;

189 (*
s¸ùt_sh≠e
Ë(
P™goEngöeSh≠e
 *
ígöe
,

190 
P™goF⁄t
 *
f⁄t
,

191 c⁄° *
ãxt
,

192 
Àngth
,

193 c⁄° 
P™goA«lysis
 *
™Æysis
,

194 
P™goGlyphSåög
 *
glyphs
);

195 
	`P™goCovîageLevñ
 (*
covîs
Ë(
P™goEngöeSh≠e
 *
ígöe
,

196 
P™goF⁄t
 *
f⁄t
,

197 
P™goL™guage
 *
œnguage
,

198 
gunich¨
 
wc
);

201 
GTy≥
 
	$∑ngo_ígöe_sh≠e_gë_ty≥
 (Ë
G_GNUC_CONST
;

203 
_P™goEngöeInfo
 
	tP™goEngöeInfo
;

204 
_P™goEngöeS¸ùtInfo
 
	tP™goEngöeS¸ùtInfo
;

206 
	s_P™goEngöeS¸ùtInfo


208 
P™goS¸ùt
 
s¸ùt
;

209 c⁄° 
gch¨
 *
œngs
;

212 
	s_P™goEngöeInfo


214 c⁄° 
gch¨
 *
id
;

215 c⁄° 
gch¨
 *
ígöe_ty≥
;

216 c⁄° 
gch¨
 *
ªndî_ty≥
;

217 
P™goEngöeS¸ùtInfo
 *
s¸ùts
;

218 
göt
 
n_s¸ùts
;

234 
	`s¸ùt_ígöe_li°
 (
P™goEngöeInfo
 **
ígöes
,

235 *
n_ígöes
);

245 
	`s¸ùt_ígöe_öô
 (
GTy≥ModuÀ
 *
moduÀ
);

254 
	`s¸ùt_ígöe_exô
 ();

269 
P™goEngöe
 *
	`s¸ùt_ígöe_¸óã
 (c⁄° *
id
);

274 
	#PANGO_ENGINE_DEFINE_TYPE
(
«me
, 
¥efix
, 
˛ass_öô
, 
ö°™˚_öô
, 
∑ª¡_ty≥
) \

275 
GTy≥
 
¥efix
 ## 
_ty≥
; \

277 
¥efix
 ## 
	`_ªgi°î_ty≥
 (
GTy≥ModuÀ
 *
moduÀ
) \

279 c⁄° 
GTy≥Info
 
obje˘_öfo
 = \

281  (
«me
 ## 
Cœss
), \

282 (
GBa£InôFunc
Ë
NULL
, \

283 (
GBa£FöÆizeFunc
Ë
NULL
, \

284 (
GCœssInôFunc
Ë
˛ass_öô
, \

285 (
GCœssFöÆizeFunc
Ë
NULL
, \

286 
NULL
, \

287  (
«me
), \

289 (
GIn°™˚InôFunc
Ë
ö°™˚_öô
, \

290 
NULL
 \

293 
¥efix
 ## 
_ty≥
 = 
	`g_ty≥_moduÀ_ªgi°î_ty≥
 (
moduÀ
, 
∑ª¡_ty≥
, \

295 &
obje˘_öfo
, 0); \

296 
	}

	)
}

323 
	#PANGO_ENGINE_LANG_DEFINE_TYPE
(
«me
, 
¥efix
, 
˛ass_öô
, 
ö°™˚_öô
) \

324 
	`PANGO_ENGINE_DEFINE_TYPE
 (
«me
, 
¥efix
, \

325 
˛ass_öô
, 
ö°™˚_öô
, \

326 
PANGO_TYPE_ENGINE_LANG
)

	)

353 
	#PANGO_ENGINE_SHAPE_DEFINE_TYPE
(
«me
, 
¥efix
, 
˛ass_öô
, 
ö°™˚_öô
) \

354 
	`PANGO_ENGINE_DEFINE_TYPE
 (
«me
, 
¥efix
, \

355 
˛ass_öô
, 
ö°™˚_öô
, \

356 
PANGO_TYPE_ENGINE_SHAPE
)

	)

369 #ifde‡
PANGO_MODULE_PREFIX


370 
	#PANGO_MODULE_ENTRY
(
func
Ë
	`_PANGO_MODULE_ENTRY2
(
PANGO_MODULE_PREFIX
,func)

	)

371 
	#_PANGO_MODULE_ENTRY2
(
¥efix
,
func
Ë
	`_PANGO_MODULE_ENTRY3
’ªfix,func)

	)

372 
	#_PANGO_MODULE_ENTRY3
(
¥efix
,
func
Ë¥efix##
_s¸ùt_ígöe_
##
	)
func

374 
	#PANGO_MODULE_ENTRY
(
func
Ë
s¸ùt_ígöe_
##
	)
func

379 
	gG_END_DECLS


	@/usr/include/pango-1.0/pango/pango-enum-types.h

4 #i‚de‡
__PANGO_ENUM_TYPES_H__


5 
	#__PANGO_ENUM_TYPES_H__


	)

7 
	~<glib-obje˘.h
>

9 
G_BEGIN_DECLS


11 
GTy≥
 
∑ngo_©å_ty≥_gë_ty≥
 ();

12 
	#PANGO_TYPE_ATTR_TYPE
 (
	`∑ngo_©å_ty≥_gë_ty≥
())

	)

13 
GTy≥
 
∑ngo_undîlöe_gë_ty≥
 ();

14 
	#PANGO_TYPE_UNDERLINE
 (
	`∑ngo_undîlöe_gë_ty≥
())

	)

16 
GTy≥
 
∑ngo_bidi_ty≥_gë_ty≥
 ();

17 
	#PANGO_TYPE_BIDI_TYPE
 (
	`∑ngo_bidi_ty≥_gë_ty≥
())

	)

18 
GTy≥
 
∑ngo_dúe˘i⁄_gë_ty≥
 ();

19 
	#PANGO_TYPE_DIRECTION
 (
	`∑ngo_dúe˘i⁄_gë_ty≥
())

	)

21 
GTy≥
 
∑ngo_covîage_Àvñ_gë_ty≥
 ();

22 
	#PANGO_TYPE_COVERAGE_LEVEL
 (
	`∑ngo_covîage_Àvñ_gë_ty≥
())

	)

24 
GTy≥
 
∑ngo_°yÀ_gë_ty≥
 ();

25 
	#PANGO_TYPE_STYLE
 (
	`∑ngo_°yÀ_gë_ty≥
())

	)

26 
GTy≥
 
∑ngo_v¨ü¡_gë_ty≥
 ();

27 
	#PANGO_TYPE_VARIANT
 (
	`∑ngo_v¨ü¡_gë_ty≥
())

	)

28 
GTy≥
 
∑ngo_weight_gë_ty≥
 ();

29 
	#PANGO_TYPE_WEIGHT
 (
	`∑ngo_weight_gë_ty≥
())

	)

30 
GTy≥
 
∑ngo_°ªtch_gë_ty≥
 ();

31 
	#PANGO_TYPE_STRETCH
 (
	`∑ngo_°ªtch_gë_ty≥
())

	)

32 
GTy≥
 
∑ngo_f⁄t_mask_gë_ty≥
 ();

33 
	#PANGO_TYPE_FONT_MASK
 (
	`∑ngo_f⁄t_mask_gë_ty≥
())

	)

35 
GTy≥
 
∑ngo_gøvôy_gë_ty≥
 ();

36 
	#PANGO_TYPE_GRAVITY
 (
	`∑ngo_gøvôy_gë_ty≥
())

	)

37 
GTy≥
 
∑ngo_gøvôy_höt_gë_ty≥
 ();

38 
	#PANGO_TYPE_GRAVITY_HINT
 (
	`∑ngo_gøvôy_höt_gë_ty≥
())

	)

40 
GTy≥
 
∑ngo_Æignmít_gë_ty≥
 ();

41 
	#PANGO_TYPE_ALIGNMENT
 (
	`∑ngo_Æignmít_gë_ty≥
())

	)

42 
GTy≥
 
∑ngo_wøp_mode_gë_ty≥
 ();

43 
	#PANGO_TYPE_WRAP_MODE
 (
	`∑ngo_wøp_mode_gë_ty≥
())

	)

44 
GTy≥
 
∑ngo_ñlùsize_mode_gë_ty≥
 ();

45 
	#PANGO_TYPE_ELLIPSIZE_MODE
 (
	`∑ngo_ñlùsize_mode_gë_ty≥
())

	)

47 
GTy≥
 
∑ngo_ªndî_∑π_gë_ty≥
 ();

48 
	#PANGO_TYPE_RENDER_PART
 (
	`∑ngo_ªndî_∑π_gë_ty≥
())

	)

50 
GTy≥
 
∑ngo_s¸ùt_gë_ty≥
 ();

51 
	#PANGO_TYPE_SCRIPT
 (
	`∑ngo_s¸ùt_gë_ty≥
())

	)

53 
GTy≥
 
∑ngo_èb_Æign_gë_ty≥
 ();

54 
	#PANGO_TYPE_TAB_ALIGN
 (
	`∑ngo_èb_Æign_gë_ty≥
())

	)

55 
	gG_END_DECLS


	@/usr/include/pango-1.0/pango/pango-features.h

2 #i‚de‡
PANGO_FEATURES_H


3 
	#PANGO_FEATURES_H


	)

5 
	#PANGO_VERSION_MAJOR
 1

	)

6 
	#PANGO_VERSION_MINOR
 24

	)

7 
	#PANGO_VERSION_MICRO
 1

	)

9 
	#PANGO_VERSION_STRING
 "1.24.1"

	)

	@/usr/include/pango-1.0/pango/pango-font.h

22 #i‚de‡
__PANGO_FONT_H__


23 
	#__PANGO_FONT_H__


	)

25 
	~<∑ngo/∑ngo-covîage.h
>

26 
	~<∑ngo/∑ngo-ty≥s.h
>

28 
	~<glib-obje˘.h
>

30 
G_BEGIN_DECLS


32 
_P™goF⁄tDes¸ùti⁄
 
	tP™goF⁄tDes¸ùti⁄
;

33 
_P™goF⁄tMërics
 
	tP™goF⁄tMërics
;

44 
	mPANGO_STYLE_NORMAL
,

45 
	mPANGO_STYLE_OBLIQUE
,

46 
	mPANGO_STYLE_ITALIC


47 } 
	tP™goStyÀ
;

50 
	mPANGO_VARIANT_NORMAL
,

51 
	mPANGO_VARIANT_SMALL_CAPS


52 } 
	tP™goV¨ü¡
;

55 
	mPANGO_WEIGHT_THIN
 = 100,

56 
	mPANGO_WEIGHT_ULTRALIGHT
 = 200,

57 
	mPANGO_WEIGHT_LIGHT
 = 300,

58 
	mPANGO_WEIGHT_BOOK
 = 380,

59 
	mPANGO_WEIGHT_NORMAL
 = 400,

60 
	mPANGO_WEIGHT_MEDIUM
 = 500,

61 
	mPANGO_WEIGHT_SEMIBOLD
 = 600,

62 
	mPANGO_WEIGHT_BOLD
 = 700,

63 
	mPANGO_WEIGHT_ULTRABOLD
 = 800,

64 
	mPANGO_WEIGHT_HEAVY
 = 900,

65 
	mPANGO_WEIGHT_ULTRAHEAVY
 = 1000

66 } 
	tP™goWeight
;

69 
	mPANGO_STRETCH_ULTRA_CONDENSED
,

70 
	mPANGO_STRETCH_EXTRA_CONDENSED
,

71 
	mPANGO_STRETCH_CONDENSED
,

72 
	mPANGO_STRETCH_SEMI_CONDENSED
,

73 
	mPANGO_STRETCH_NORMAL
,

74 
	mPANGO_STRETCH_SEMI_EXPANDED
,

75 
	mPANGO_STRETCH_EXPANDED
,

76 
	mPANGO_STRETCH_EXTRA_EXPANDED
,

77 
	mPANGO_STRETCH_ULTRA_EXPANDED


78 } 
	tP™goSåëch
;

81 
	mPANGO_FONT_MASK_FAMILY
 = 1 << 0,

82 
	mPANGO_FONT_MASK_STYLE
 = 1 << 1,

83 
	mPANGO_FONT_MASK_VARIANT
 = 1 << 2,

84 
	mPANGO_FONT_MASK_WEIGHT
 = 1 << 3,

85 
	mPANGO_FONT_MASK_STRETCH
 = 1 << 4,

86 
	mPANGO_FONT_MASK_SIZE
 = 1 << 5,

87 
	mPANGO_FONT_MASK_GRAVITY
 = 1 << 6

88 } 
	tP™goF⁄tMask
;

91 
	#PANGO_SCALE_XX_SMALL
 (()0.5787037037037)

	)

92 
	#PANGO_SCALE_X_SMALL
 (()0.6444444444444)

	)

93 
	#PANGO_SCALE_SMALL
 (()0.8333333333333)

	)

94 
	#PANGO_SCALE_MEDIUM
 (()1.0)

	)

95 
	#PANGO_SCALE_LARGE
 (()1.2)

	)

96 
	#PANGO_SCALE_X_LARGE
 (()1.4399999999999)

	)

97 
	#PANGO_SCALE_XX_LARGE
 (()1.728)

	)

103 
	#PANGO_TYPE_FONT_DESCRIPTION
 (
	`∑ngo_f⁄t_des¸ùti⁄_gë_ty≥
 ())

	)

105 
GTy≥
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_ty≥
 (Ë
G_GNUC_CONST
;

106 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_des¸ùti⁄_√w
 ();

107 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_des¸ùti⁄_c›y
 (c⁄° P™goF⁄tDes¸ùti⁄ *
desc
);

108 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_des¸ùti⁄_c›y_°©ic
 (c⁄° P™goF⁄tDes¸ùti⁄ *
desc
);

109 
guöt
 
	$∑ngo_f⁄t_des¸ùti⁄_hash
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

110 
gboﬁón
 
	$∑ngo_f⁄t_des¸ùti⁄_equÆ
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc1
,

111 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc2
Ë
G_GNUC_PURE
;

112 
	`∑ngo_f⁄t_des¸ùti⁄_‰ì
 (
P™goF⁄tDes¸ùti⁄
 *
desc
);

113 
	`∑ngo_f⁄t_des¸ùti⁄s_‰ì
 (
P™goF⁄tDes¸ùti⁄
 **
descs
,

114 
n_descs
);

116 
	`∑ngo_f⁄t_des¸ùti⁄_£t_Ámûy
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

117 c⁄° *
Ámûy
);

118 
	`∑ngo_f⁄t_des¸ùti⁄_£t_Ámûy_°©ic
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

119 c⁄° *
Ámûy
);

120 
G_CONST_RETURN
 *
	$∑ngo_f⁄t_des¸ùti⁄_gë_Ámûy
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

121 
	`∑ngo_f⁄t_des¸ùti⁄_£t_°yÀ
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

122 
P™goStyÀ
 
°yÀ
);

123 
P™goStyÀ
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_°yÀ
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

124 
	`∑ngo_f⁄t_des¸ùti⁄_£t_v¨ü¡
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

125 
P™goV¨ü¡
 
v¨ü¡
);

126 
P™goV¨ü¡
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_v¨ü¡
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

127 
	`∑ngo_f⁄t_des¸ùti⁄_£t_weight
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

128 
P™goWeight
 
weight
);

129 
P™goWeight
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_weight
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

130 
	`∑ngo_f⁄t_des¸ùti⁄_£t_°ªtch
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

131 
P™goSåëch
 
°ªtch
);

132 
P™goSåëch
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_°ªtch
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

133 
	`∑ngo_f⁄t_des¸ùti⁄_£t_size
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

134 
göt
 
size
);

135 
göt
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_size
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

136 
	`∑ngo_f⁄t_des¸ùti⁄_£t_absﬁuã_size
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

137 
size
);

138 
gboﬁón
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_size_is_absﬁuã
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

139 
	`∑ngo_f⁄t_des¸ùti⁄_£t_gøvôy
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

140 
P™goGøvôy
 
gøvôy
);

141 
P™goGøvôy
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_gøvôy
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

143 
P™goF⁄tMask
 
	$∑ngo_f⁄t_des¸ùti⁄_gë_£t_fõlds
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
Ë
G_GNUC_PURE
;

144 
	`∑ngo_f⁄t_des¸ùti⁄_un£t_fõlds
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

145 
P™goF⁄tMask
 
to_un£t
);

147 
	`∑ngo_f⁄t_des¸ùti⁄_mîge
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

148 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc_to_mîge
,

149 
gboﬁón
 
ª∂a˚_exi°ög
);

150 
	`∑ngo_f⁄t_des¸ùti⁄_mîge_°©ic
 (
P™goF⁄tDes¸ùti⁄
 *
desc
,

151 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc_to_mîge
,

152 
gboﬁón
 
ª∂a˚_exi°ög
);

154 
gboﬁón
 
	$∑ngo_f⁄t_des¸ùti⁄_bëãr_m©ch
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
,

155 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
ﬁd_m©ch
,

156 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
√w_m©ch
Ë
G_GNUC_PURE
;

158 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_des¸ùti⁄_‰om_°rög
 (c⁄° *
°r
);

159 * 
	`∑ngo_f⁄t_des¸ùti⁄_to_°rög
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

160 * 
	`∑ngo_f⁄t_des¸ùti⁄_to_fûíame
 (c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

166 
	#PANGO_TYPE_FONT_METRICS
 (
	`∑ngo_f⁄t_mërics_gë_ty≥
 ())

	)

167 
GTy≥
 
	$∑ngo_f⁄t_mërics_gë_ty≥
 (Ë
G_GNUC_CONST
;

168 
P™goF⁄tMërics
 *
	`∑ngo_f⁄t_mërics_ªf
 (P™goF⁄tMëric†*
mërics
);

169 
	`∑ngo_f⁄t_mërics_uƒef
 (
P™goF⁄tMërics
 *
mërics
);

170 
	$∑ngo_f⁄t_mërics_gë_as˚¡
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

171 
	$∑ngo_f⁄t_mërics_gë_des˚¡
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

172 
	$∑ngo_f⁄t_mërics_gë_≠¥oxim©e_ch¨_width
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

173 
	$∑ngo_f⁄t_mërics_gë_≠¥oxim©e_digô_width
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

174 
	$∑ngo_f⁄t_mërics_gë_undîlöe_posôi⁄
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

175 
	$∑ngo_f⁄t_mërics_gë_undîlöe_thick√ss
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

176 
	$∑ngo_f⁄t_mërics_gë_°rikëhrough_posôi⁄
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

177 
	$∑ngo_f⁄t_mërics_gë_°rikëhrough_thick√ss
 (
P™goF⁄tMërics
 *
mërics
Ë
G_GNUC_PURE
;

179 #ifde‡
PANGO_ENABLE_BACKEND


181 
P™goF⁄tMërics
 *
	`∑ngo_f⁄t_mërics_√w
 ();

183 
	s_P™goF⁄tMërics


185 
guöt
 
ªf_cou¡
;

187 
as˚¡
;

188 
des˚¡
;

189 
≠¥oxim©e_ch¨_width
;

190 
≠¥oxim©e_digô_width
;

191 
undîlöe_posôi⁄
;

192 
undîlöe_thick√ss
;

193 
°rikëhrough_posôi⁄
;

194 
°rikëhrough_thick√ss
;

203 
	#PANGO_TYPE_FONT_FAMILY
 (
	`∑ngo_f⁄t_Ámûy_gë_ty≥
 ())

	)

204 
	#PANGO_FONT_FAMILY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_FONT_FAMILY
, 
P™goF⁄tFamûy
))

	)

205 
	#PANGO_IS_FONT_FAMILY
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_FONT_FAMILY
))

	)

207 
_P™goF⁄tFamûy
 
	tP™goF⁄tFamûy
;

208 
_P™goF⁄tFa˚
 
	tP™goF⁄tFa˚
;

210 
GTy≥
 
	$∑ngo_f⁄t_Ámûy_gë_ty≥
 (Ë
G_GNUC_CONST
;

212 
	`∑ngo_f⁄t_Ámûy_li°_Á˚s
 (
P™goF⁄tFamûy
 *
Ámûy
,

213 
P™goF⁄tFa˚
 ***
Á˚s
,

214 *
n_Á˚s
);

215 
G_CONST_RETURN
 *
	$∑ngo_f⁄t_Ámûy_gë_«me
 (
P™goF⁄tFamûy
 *
Ámûy
Ë
G_GNUC_PURE
;

216 
gboﬁón
 
	$∑ngo_f⁄t_Ámûy_is_m⁄o•a˚
 (
P™goF⁄tFamûy
 *
Ámûy
Ë
G_GNUC_PURE
;

218 #ifde‡
PANGO_ENABLE_BACKEND


220 
	#PANGO_FONT_FAMILY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_FONT_FAMILY
, 
P™goF⁄tFamûyCœss
))

	)

221 
	#PANGO_IS_FONT_FAMILY_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_FONT_FAMILY
))

	)

222 
	#PANGO_FONT_FAMILY_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_FONT_FAMILY
, 
P™goF⁄tFamûyCœss
))

	)

224 
_P™goF⁄tFamûyCœss
 
	tP™goF⁄tFamûyCœss
;

226 
	s_P™goF⁄tFamûy


228 
GObje˘
 
∑ª¡_ö°™˚
;

231 
	s_P™goF⁄tFamûyCœss


233 
GObje˘Cœss
 
∑ª¡_˛ass
;

237 (*
li°_Á˚s
Ë(
P™goF⁄tFamûy
 *
Ámûy
,

238 
P™goF⁄tFa˚
 ***
Á˚s
,

239 *
n_Á˚s
);

240 c⁄° * (*
gë_«me
Ë(
P™goF⁄tFamûy
 *
Ámûy
);

241 
	`gboﬁón
 (*
is_m⁄o•a˚
Ë(
P™goF⁄tFamûy
 *
Ámûy
);

246 (*
_∑ngo_ª£rved2
) ();

247 (*
_∑ngo_ª£rved3
) ();

248 (*
_∑ngo_ª£rved4
) ();

257 
	#PANGO_TYPE_FONT_FACE
 (
	`∑ngo_f⁄t_Á˚_gë_ty≥
 ())

	)

258 
	#PANGO_FONT_FACE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_FONT_FACE
, 
P™goF⁄tFa˚
))

	)

259 
	#PANGO_IS_FONT_FACE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_FONT_FACE
))

	)

261 
GTy≥
 
	$∑ngo_f⁄t_Á˚_gë_ty≥
 (Ë
G_GNUC_CONST
;

263 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_Á˚_des¸ibe
 (
P™goF⁄tFa˚
 *
Á˚
);

264 
G_CONST_RETURN
 *
	$∑ngo_f⁄t_Á˚_gë_Á˚_«me
 (
P™goF⁄tFa˚
 *
Á˚
Ë
G_GNUC_PURE
;

265 
	`∑ngo_f⁄t_Á˚_li°_sizes
 (
P™goF⁄tFa˚
 *
Á˚
,

266 **
sizes
,

267 *
n_sizes
);

268 
gboﬁón
 
	$∑ngo_f⁄t_Á˚_is_sy¡hesized
 (
P™goF⁄tFa˚
 *
Á˚
Ë
G_GNUC_PURE
;

270 #ifde‡
PANGO_ENABLE_BACKEND


272 
	#PANGO_FONT_FACE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_FONT_FACE
, 
P™goF⁄tFa˚Cœss
))

	)

273 
	#PANGO_IS_FONT_FACE_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_FONT_FACE
))

	)

274 
	#PANGO_FONT_FACE_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_FONT_FACE
, 
P™goF⁄tFa˚Cœss
))

	)

276 
_P™goF⁄tFa˚Cœss
 
	tP™goF⁄tFa˚Cœss
;

278 
	s_P™goF⁄tFa˚


280 
GObje˘
 
∑ª¡_ö°™˚
;

283 
	s_P™goF⁄tFa˚Cœss


285 
GObje˘Cœss
 
∑ª¡_˛ass
;

289 c⁄° * (*
gë_Á˚_«me
Ë(
P™goF⁄tFa˚
 *
Á˚
);

290 
P™goF⁄tDes¸ùti⁄
 * (*
des¸ibe
Ë(
P™goF⁄tFa˚
 *
Á˚
);

291 (*
li°_sizes
Ë(
P™goF⁄tFa˚
 *
Á˚
,

292 **
sizes
,

293 *
n_sizes
);

294 
	`gboﬁón
 (*
is_sy¡hesized
Ë(
P™goF⁄tFa˚
 *
Á˚
);

299 (*
_∑ngo_ª£rved3
) ();

300 (*
_∑ngo_ª£rved4
) ();

309 
	#PANGO_TYPE_FONT
 (
	`∑ngo_f⁄t_gë_ty≥
 ())

	)

310 
	#PANGO_FONT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_FONT
, 
P™goF⁄t
))

	)

311 
	#PANGO_IS_FONT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_FONT
))

	)

313 
GTy≥
 
	$∑ngo_f⁄t_gë_ty≥
 (Ë
G_GNUC_CONST
;

315 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_des¸ibe
 (
P™goF⁄t
 *
f⁄t
);

316 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_f⁄t_des¸ibe_wôh_absﬁuã_size
 (
P™goF⁄t
 *
f⁄t
);

317 
P™goCovîage
 * 
	`∑ngo_f⁄t_gë_covîage
 (
P™goF⁄t
 *
f⁄t
,

318 
P™goL™guage
 *
œnguage
);

319 
P™goEngöeSh≠e
 * 
	`∑ngo_f⁄t_föd_sh≠î
 (
P™goF⁄t
 *
f⁄t
,

320 
P™goL™guage
 *
œnguage
,

321 
guöt32
 
ch
);

322 
P™goF⁄tMërics
 * 
	`∑ngo_f⁄t_gë_mërics
 (
P™goF⁄t
 *
f⁄t
,

323 
P™goL™guage
 *
œnguage
);

324 
	`∑ngo_f⁄t_gë_glyph_exã¡s
 (
P™goF⁄t
 *
f⁄t
,

325 
P™goGlyph
 
glyph
,

326 
P™goRe˘™gÀ
 *
ök_ª˘
,

327 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

328 
P™goF⁄tM≠
 *
	`∑ngo_f⁄t_gë_f⁄t_m≠
 (
P™goF⁄t
 *
f⁄t
);

330 #ifde‡
PANGO_ENABLE_BACKEND


332 
	#PANGO_FONT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_FONT
, 
P™goF⁄tCœss
))

	)

333 
	#PANGO_IS_FONT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_FONT
))

	)

334 
	#PANGO_FONT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_FONT
, 
P™goF⁄tCœss
))

	)

336 
_P™goF⁄tCœss
 
	tP™goF⁄tCœss
;

338 
	s_P™goF⁄t


340 
GObje˘
 
∑ª¡_ö°™˚
;

343 
	s_P™goF⁄tCœss


345 
GObje˘Cœss
 
∑ª¡_˛ass
;

349 
P™goF⁄tDes¸ùti⁄
 *(*
des¸ibe
Ë(
P™goF⁄t
 *
f⁄t
);

350 
P™goCovîage
 * (*
gë_covîage
Ë(
P™goF⁄t
 *
f⁄t
,

351 
P™goL™guage
 *
œng
);

352 
P™goEngöeSh≠e
 * (*
föd_sh≠î
Ë(
P™goF⁄t
 *
f⁄t
,

353 
P™goL™guage
 *
œng
,

354 
guöt32
 
ch
);

355 (*
gë_glyph_exã¡s
Ë(
P™goF⁄t
 *
f⁄t
,

356 
P™goGlyph
 
glyph
,

357 
P™goRe˘™gÀ
 *
ök_ª˘
,

358 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

359 
P™goF⁄tMërics
 * (*
gë_mërics
Ë(
P™goF⁄t
 *
f⁄t
,

360 
P™goL™guage
 *
œnguage
);

361 
P™goF⁄tM≠
 * (*
gë_f⁄t_m≠
Ë(
P™goF⁄t
 *
f⁄t
);

362 
P™goF⁄tDes¸ùti⁄
 *(*
des¸ibe_absﬁuã
Ë(
P™goF⁄t
 *
f⁄t
);

366 (*
_∑ngo_ª£rved1
) ();

367 (*
_∑ngo_ª£rved2
) ();

373 
	#PANGO_UNKNOWN_GLYPH_WIDTH
 10

	)

374 
	#PANGO_UNKNOWN_GLYPH_HEIGHT
 14

	)

378 
	#PANGO_GLYPH_EMPTY
 ((
P™goGlyph
)0x0FFFFFFF)

	)

379 
	#PANGO_GLYPH_INVALID_INPUT
 ((
P™goGlyph
)0xFFFFFFFF)

	)

380 
	#PANGO_GLYPH_UNKNOWN_FLAG
 ((
P™goGlyph
)0x10000000)

	)

381 
	#PANGO_GET_UNKNOWN_GLYPH
(
wc
Ë((
P™goGlyph
)(wc)|
PANGO_GLYPH_UNKNOWN_FLAG
)

	)

384 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-fontmap.h

22 #i‚de‡
__PANGO_FONTMAP_H__


23 
	#__PANGO_FONTMAP_H__


	)

25 
	~<∑ngo/∑ngo-f⁄t.h
>

26 
	~<∑ngo/∑ngo-f⁄t£t.h
>

28 
	gG_BEGIN_DECLS


30 
	#PANGO_TYPE_FONT_MAP
 (
	`∑ngo_f⁄t_m≠_gë_ty≥
 ())

	)

31 
	#PANGO_FONT_MAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_FONT_MAP
, 
P™goF⁄tM≠
))

	)

32 
	#PANGO_IS_FONT_MAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_FONT_MAP
))

	)

34 
_P™goC⁄ãxt
 
	tP™goC⁄ãxt
;

36 
GTy≥
 
	$∑ngo_f⁄t_m≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

37 
P™goC⁄ãxt
 * 
	`∑ngo_f⁄t_m≠_¸óã_c⁄ãxt
 (
P™goF⁄tM≠
 *
f⁄tm≠
);

38 
P™goF⁄t
 * 
	`∑ngo_f⁄t_m≠_lﬂd_f⁄t
 (
P™goF⁄tM≠
 *
f⁄tm≠
,

39 
P™goC⁄ãxt
 *
c⁄ãxt
,

40 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

41 
P™goF⁄t£t
 *
	`∑ngo_f⁄t_m≠_lﬂd_f⁄t£t
 (
P™goF⁄tM≠
 *
f⁄tm≠
,

42 
P™goC⁄ãxt
 *
c⁄ãxt
,

43 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
,

44 
P™goL™guage
 *
œnguage
);

45 
	`∑ngo_f⁄t_m≠_li°_Ámûõs
 (
P™goF⁄tM≠
 *
f⁄tm≠
,

46 
P™goF⁄tFamûy
 ***
Ámûõs
,

47 *
n_Ámûõs
);

49 #ifde‡
PANGO_ENABLE_BACKEND


51 
	#PANGO_FONT_MAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_FONT_MAP
, 
P™goF⁄tM≠Cœss
))

	)

52 
	#PANGO_IS_FONT_MAP_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_FONT_MAP
))

	)

53 
	#PANGO_FONT_MAP_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_FONT_MAP
, 
P™goF⁄tM≠Cœss
))

	)

55 
_P™goF⁄tM≠Cœss
 
	tP™goF⁄tM≠Cœss
;

57 
	s_P™goF⁄tM≠


59 
GObje˘
 
∑ª¡_ö°™˚
;

62 
	s_P™goF⁄tM≠Cœss


64 
GObje˘Cœss
 
∑ª¡_˛ass
;

68 
P™goF⁄t
 * (*
lﬂd_f⁄t
Ë(
P™goF⁄tM≠
 *
f⁄tm≠
,

69 
P™goC⁄ãxt
 *
c⁄ãxt
,

70 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

71 (*
li°_Ámûõs
Ë(
P™goF⁄tM≠
 *
f⁄tm≠
,

72 
P™goF⁄tFamûy
 ***
Ámûõs
,

73 *
n_Ámûõs
);

74 
P™goF⁄t£t
 *(*
lﬂd_f⁄t£t
Ë(
P™goF⁄tM≠
 *
f⁄tm≠
,

75 
P™goC⁄ãxt
 *
c⁄ãxt
,

76 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
,

77 
P™goL™guage
 *
œnguage
);

79 c⁄° *
sh≠e_ígöe_ty≥
;

84 (*
_∑ngo_ª£rved1
) ();

85 (*
_∑ngo_ª£rved2
) ();

86 (*
_∑ngo_ª£rved3
) ();

87 (*
_∑ngo_ª£rved4
) ();

90 c⁄° *
	`∑ngo_f⁄t_m≠_gë_sh≠e_ígöe_ty≥
 (
P™goF⁄tM≠
 *
f⁄tm≠
);

94 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-fontset.h

22 #i‚de‡
__PANGO_FONTSET_H__


23 
	#__PANGO_FONTSET_H__


	)

25 
	~<∑ngo/∑ngo-covîage.h
>

26 
	~<∑ngo/∑ngo-ty≥s.h
>

28 
	~<glib-obje˘.h
>

30 
	gG_BEGIN_DECLS


36 
	#PANGO_TYPE_FONTSET
 (
	`∑ngo_f⁄t£t_gë_ty≥
 ())

	)

37 
	#PANGO_FONTSET
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_FONTSET
, 
P™goF⁄t£t
))

	)

38 
	#PANGO_IS_FONTSET
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_FONTSET
))

	)

40 
GTy≥
 
	$∑ngo_f⁄t£t_gë_ty≥
 (Ë
G_GNUC_CONST
;

42 
_P™goF⁄t£t
 
	tP™goF⁄t£t
;

57 
	$gboﬁón
 (*
	tP™goF⁄t£tF‹óchFunc
Ë(
	tP™goF⁄t£t
 *
	tf⁄t£t
,

58 
	tP™goF⁄t
 *
	tf⁄t
,

59 
	tgpoöãr
 
	td©a
);

61 
P™goF⁄t
 * 
	`∑ngo_f⁄t£t_gë_f⁄t
 (
P™goF⁄t£t
 *
f⁄t£t
,

62 
guöt
 
wc
);

63 
P™goF⁄tMërics
 *
	`∑ngo_f⁄t£t_gë_mërics
 (
P™goF⁄t£t
 *
f⁄t£t
);

64 
	`∑ngo_f⁄t£t_f‹óch
 (
P™goF⁄t£t
 *
f⁄t£t
,

65 
P™goF⁄t£tF‹óchFunc
 
func
,

66 
gpoöãr
 
d©a
);

68 #ifde‡
PANGO_ENABLE_BACKEND


70 
_P™goF⁄t£tCœss
 
	tP™goF⁄t£tCœss
;

72 
	#PANGO_FONTSET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_FONTSET
, 
P™goF⁄t£tCœss
))

	)

73 
	#PANGO_IS_FONTSET_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_FONTSET
))

	)

74 
	#PANGO_FONTSET_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_FONTSET
, 
P™goF⁄t£tCœss
))

	)

76 
	s_P™goF⁄t£t


78 
GObje˘
 
∑ª¡_ö°™˚
;

81 
	s_P™goF⁄t£tCœss


83 
GObje˘Cœss
 
∑ª¡_˛ass
;

87 
P™goF⁄t
 * (*
gë_f⁄t
Ë(
P™goF⁄t£t
 *
f⁄t£t
,

88 
guöt
 
wc
);

90 
P™goF⁄tMërics
 *(*
gë_mërics
Ë(
P™goF⁄t£t
 *
f⁄t£t
);

91 
P™goL™guage
 * (*
gë_œnguage
Ë(
P™goF⁄t£t
 *
f⁄t£t
);

92 (*
f‹óch
Ë(
P™goF⁄t£t
 *
f⁄t£t
,

93 
P™goF⁄t£tF‹óchFunc
 
func
,

94 
gpoöãr
 
d©a
);

99 (*
_∑ngo_ª£rved1
) ();

100 (*
_∑ngo_ª£rved2
) ();

101 (*
_∑ngo_ª£rved3
) ();

102 (*
_∑ngo_ª£rved4
) ();

109 
	#PANGO_TYPE_FONTSET_SIMPLE
 (
	`∑ngo_f⁄t£t_sim∂e_gë_ty≥
 ())

	)

110 
	#PANGO_FONTSET_SIMPLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_FONTSET_SIMPLE
, 
P™goF⁄t£tSim∂e
))

	)

111 
	#PANGO_IS_FONTSET_SIMPLE
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_FONTSET_SIMPLE
))

	)

113 
_P™goF⁄t£tSim∂e
 
	tP™goF⁄t£tSim∂e
;

114 
_P™goF⁄t£tSim∂eCœss
 
	tP™goF⁄t£tSim∂eCœss
;

116 
GTy≥
 
	$∑ngo_f⁄t£t_sim∂e_gë_ty≥
 (Ë
G_GNUC_CONST
;

118 
P™goF⁄t£tSim∂e
 * 
	`∑ngo_f⁄t£t_sim∂e_√w
 (
P™goL™guage
 *
œnguage
);

119 
	`∑ngo_f⁄t£t_sim∂e_≠≥nd
 (
P™goF⁄t£tSim∂e
 *
f⁄t£t
,

120 
P™goF⁄t
 *
f⁄t
);

121 
	`∑ngo_f⁄t£t_sim∂e_size
 (
P™goF⁄t£tSim∂e
 *
f⁄t£t
);

125 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-glyph-item.h

22 #i‚de‡
__PANGO_GLYPH_ITEM_H__


23 
	#__PANGO_GLYPH_ITEM_H__


	)

25 
	~<∑ngo/∑ngo-©åibuãs.h
>

26 
	~<∑ngo/∑ngo-bªak.h
>

27 
	~<∑ngo/∑ngo-ôem.h
>

28 
	~<∑ngo/∑ngo-glyph.h
>

30 
G_BEGIN_DECLS


32 
_P™goGlyphIãm
 
	tP™goGlyphIãm
;

34 
	s_P™goGlyphIãm


36 
P™goIãm
 *
	môem
;

37 
P™goGlyphSåög
 *
	mglyphs
;

40 
	#PANGO_TYPE_GLYPH_ITEM
 (
	`∑ngo_glyph_ôem_gë_ty≥
 ())

	)

42 
GTy≥
 
	$∑ngo_glyph_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

44 
P™goGlyphIãm
 *
	`∑ngo_glyph_ôem_•lô
 (P™goGlyphIãm *
‹ig
,

45 c⁄° *
ãxt
,

46 
•lô_ödex
);

47 
P™goGlyphIãm
 *
	`∑ngo_glyph_ôem_c›y
 (P™goGlyphIãm *
‹ig
);

48 
	`∑ngo_glyph_ôem_‰ì
 (
P™goGlyphIãm
 *
glyph_ôem
);

49 
GSLi°
 * 
	`∑ngo_glyph_ôem_≠∂y_©ås
 (
P™goGlyphIãm
 *
glyph_ôem
,

50 c⁄° *
ãxt
,

51 
P™goAârLi°
 *
li°
);

52 
	`∑ngo_glyph_ôem_Àâî_•a˚
 (
P™goGlyphIãm
 *
glyph_ôem
,

53 c⁄° *
ãxt
,

54 
P™goLogAâr
 *
log_©ås
,

55 
Àâî_•acög
);

58 
_P™goGlyphIãmIãr
 
	tP™goGlyphIãmIãr
;

60 
	s_P™goGlyphIãmIãr


62 
P™goGlyphIãm
 *
glyph_ôem
;

63 c⁄° 
gch¨
 *
ãxt
;

65 
°¨t_glyph
;

66 
°¨t_ödex
;

67 
°¨t_ch¨
;

69 
íd_glyph
;

70 
íd_ödex
;

71 
íd_ch¨
;

74 
	#PANGO_TYPE_GLYPH_ITEM_ITER
 (
	`∑ngo_glyph_ôem_ôî_gë_ty≥
 ())

	)

76 
GTy≥
 
	$∑ngo_glyph_ôem_ôî_gë_ty≥
 (Ë
G_GNUC_CONST
;

77 
P™goGlyphIãmIãr
 *
	`∑ngo_glyph_ôem_ôî_c›y
 (P™goGlyphIãmIã∏*
‹ig
);

78 
	`∑ngo_glyph_ôem_ôî_‰ì
 (
P™goGlyphIãmIãr
 *
ôî
);

80 
gboﬁón
 
	`∑ngo_glyph_ôem_ôî_öô_°¨t
 (
P™goGlyphIãmIãr
 *
ôî
,

81 
P™goGlyphIãm
 *
glyph_ôem
,

82 c⁄° *
ãxt
);

83 
gboﬁón
 
	`∑ngo_glyph_ôem_ôî_öô_íd
 (
P™goGlyphIãmIãr
 *
ôî
,

84 
P™goGlyphIãm
 *
glyph_ôem
,

85 c⁄° *
ãxt
);

86 
gboﬁón
 
	`∑ngo_glyph_ôem_ôî_√xt_˛u°î
 (
P™goGlyphIãmIãr
 *
ôî
);

87 
gboﬁón
 
	`∑ngo_glyph_ôem_ôî_¥ev_˛u°î
 (
P™goGlyphIãmIãr
 *
ôî
);

89 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-glyph.h

22 #i‚de‡
__PANGO_GLYPH_H__


23 
	#__PANGO_GLYPH_H__


	)

25 
	~<∑ngo/∑ngo-ty≥s.h
>

26 
	~<∑ngo/∑ngo-ôem.h
>

28 
G_BEGIN_DECLS


30 
_P™goGlyphGeomëry
 
	tP™goGlyphGeomëry
;

31 
_P™goGlyphVisAâr
 
	tP™goGlyphVisAâr
;

32 
_P™goGlyphInfo
 
	tP™goGlyphInfo
;

33 
_P™goGlyphSåög
 
	tP™goGlyphSåög
;

36 
göt32
 
	tP™goGlyphUnô
;

40 
	s_P™goGlyphGeomëry


42 
P™goGlyphUnô
 
	mwidth
;

43 
P™goGlyphUnô
 
	mx_off£t
;

44 
P™goGlyphUnô
 
	my_off£t
;

49 
	s_P™goGlyphVisAâr


51 
guöt
 
	mis_˛u°î_°¨t
 : 1;

56 
	s_P™goGlyphInfo


58 
P™goGlyph
 
	mglyph
;

59 
P™goGlyphGeomëry
 
	mgeomëry
;

60 
P™goGlyphVisAâr
 
	m©å
;

66 
	s_P™goGlyphSåög
 {

67 
göt
 
	mnum_glyphs
;

69 
P™goGlyphInfo
 *
	mglyphs
;

76 
göt
 *
	mlog_˛u°îs
;

79 
göt
 
	m•a˚
;

82 
	#PANGO_TYPE_GLYPH_STRING
 (
	`∑ngo_glyph_°rög_gë_ty≥
 ())

	)

84 
P™goGlyphSåög
 *
∑ngo_glyph_°rög_√w
 ();

85 
∑ngo_glyph_°rög_£t_size
 (
P™goGlyphSåög
 *
°rög
,

86 
göt
 
√w_Àn
);

87 
GTy≥
 
	$∑ngo_glyph_°rög_gë_ty≥
 (Ë
G_GNUC_CONST
;

88 
P™goGlyphSåög
 *
	`∑ngo_glyph_°rög_c›y
 (P™goGlyphSåög *
°rög
);

89 
	`∑ngo_glyph_°rög_‰ì
 (
P™goGlyphSåög
 *
°rög
);

90 
	`∑ngo_glyph_°rög_exã¡s
 (
P™goGlyphSåög
 *
glyphs
,

91 
P™goF⁄t
 *
f⁄t
,

92 
P™goRe˘™gÀ
 *
ök_ª˘
,

93 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

94 
	$∑ngo_glyph_°rög_gë_width
(
P™goGlyphSåög
 *
glyphs
Ë
G_GNUC_PURE
;

96 
	`∑ngo_glyph_°rög_exã¡s_ønge
 (
P™goGlyphSåög
 *
glyphs
,

97 
°¨t
,

98 
íd
,

99 
P™goF⁄t
 *
f⁄t
,

100 
P™goRe˘™gÀ
 *
ök_ª˘
,

101 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

103 
	`∑ngo_glyph_°rög_gë_logiˇl_widths
 (
P™goGlyphSåög
 *
glyphs
,

104 c⁄° *
ãxt
,

105 
Àngth
,

106 
embeddög_Àvñ
,

107 *
logiˇl_widths
);

109 
	`∑ngo_glyph_°rög_ödex_to_x
 (
P™goGlyphSåög
 *
glyphs
,

110 *
ãxt
,

111 
Àngth
,

112 
P™goA«lysis
 *
™Æysis
,

113 
ödex_
,

114 
gboﬁón
 
åaûög
,

115 *
x_pos
);

116 
	`∑ngo_glyph_°rög_x_to_ödex
 (
P™goGlyphSåög
 *
glyphs
,

117 *
ãxt
,

118 
Àngth
,

119 
P™goA«lysis
 *
™Æysis
,

120 
x_pos
,

121 *
ödex_
,

122 *
åaûög
);

126 
	`∑ngo_sh≠e
 (c⁄° 
gch¨
 *
ãxt
,

127 
göt
 
Àngth
,

128 c⁄° 
P™goA«lysis
 *
™Æysis
,

129 
P™goGlyphSåög
 *
glyphs
);

131 
GLi°
 *
	`∑ngo_ª‹dî_ôems
 (GLi° *
logiˇl_ôems
);

133 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-gravity.h

22 #i‚de‡
__PANGO_GRAVITY_H__


23 
	#__PANGO_GRAVITY_H__


	)

25 
	~<glib.h
>

27 
	gG_BEGIN_DECLS


51 
	mPANGO_GRAVITY_SOUTH
,

52 
	mPANGO_GRAVITY_EAST
,

53 
	mPANGO_GRAVITY_NORTH
,

54 
	mPANGO_GRAVITY_WEST
,

55 
	mPANGO_GRAVITY_AUTO


56 } 
	tP™goGøvôy
;

78 
	mPANGO_GRAVITY_HINT_NATURAL
,

79 
	mPANGO_GRAVITY_HINT_STRONG
,

80 
	mPANGO_GRAVITY_HINT_LINE


81 } 
	tP™goGøvôyHöt
;

94 
	#PANGO_GRAVITY_IS_VERTICAL
(
gøvôy
) \

95 ((
gøvôy
Ë=
PANGO_GRAVITY_EAST
 || (gøvôyË=
PANGO_GRAVITY_WEST
)

	)

97 
	~<∑ngo/∑ngo-m©rix.h
>

98 
	~<∑ngo/∑ngo-s¸ùt.h
>

100 
	$∑ngo_gøvôy_to_rŸ©i⁄
 (
P™goGøvôy
 
gøvôy
Ë
G_GNUC_CONST
;

101 
P™goGøvôy
 
	$∑ngo_gøvôy_gë_f‹_m©rix
 (c⁄° 
P™goM©rix
 *
m©rix
Ë
G_GNUC_PURE
;

102 
P™goGøvôy
 
	$∑ngo_gøvôy_gë_f‹_s¸ùt
 (
P™goS¸ùt
 
s¸ùt
,

103 
P™goGøvôy
 
ba£_gøvôy
,

104 
P™goGøvôyHöt
 
höt
Ë
G_GNUC_CONST
;

107 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-item.h

22 #i‚de‡
__PANGO_ITEM_H__


23 
	#__PANGO_ITEM_H__


	)

25 
	~<∑ngo/∑ngo-ty≥s.h
>

27 
G_BEGIN_DECLS


29 
_P™goA«lysis
 
	tP™goA«lysis
;

30 
_P™goIãm
 
	tP™goIãm
;

33 
	#PANGO_ANALYSIS_FLAG_CENTERED_BASELINE
 (1 << 0)

	)

35 
	s_P™goA«lysis


37 
P™goEngöeSh≠e
 *
	msh≠e_ígöe
;

38 
P™goEngöeL™g
 *
	mœng_ígöe
;

39 
P™goF⁄t
 *
	mf⁄t
;

41 
guöt8
 
	mÀvñ
;

42 
guöt8
 
	mgøvôy
;

43 
guöt8
 
	mÊags
;

45 
guöt8
 
	ms¸ùt
;

46 
P™goL™guage
 *
	mœnguage
;

48 
GSLi°
 *
	mexåa_©ås
;

51 
	s_P™goIãm


53 
göt
 
	moff£t
;

54 
göt
 
	mÀngth
;

55 
göt
 
	mnum_ch¨s
;

56 
P™goA«lysis
 
	m™Æysis
;

59 
	#PANGO_TYPE_ITEM
 (
	`∑ngo_ôem_gë_ty≥
 ())

	)

61 
GTy≥
 
	$∑ngo_ôem_gë_ty≥
 (Ë
G_GNUC_CONST
;

63 
P™goIãm
 *
	`∑ngo_ôem_√w
 ();

64 
P™goIãm
 *
	`∑ngo_ôem_c›y
 (P™goIãm *
ôem
);

65 
	`∑ngo_ôem_‰ì
 (
P™goIãm
 *
ôem
);

66 
P™goIãm
 *
	`∑ngo_ôem_•lô
 (P™goIãm *
‹ig
,

67 
•lô_ödex
,

68 
•lô_off£t
);

70 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-layout.h

22 #i‚de‡
__PANGO_LAYOUT_H__


23 
	#__PANGO_LAYOUT_H__


	)

25 
	~<∑ngo/∑ngo-©åibuãs.h
>

26 
	~<∑ngo/∑ngo-c⁄ãxt.h
>

27 
	~<∑ngo/∑ngo-glyph-ôem.h
>

28 
	~<∑ngo/∑ngo-èbs.h
>

30 
G_BEGIN_DECLS


32 
_P™goLayout
 
	tP™goLayout
;

33 
_P™goLayoutCœss
 
	tP™goLayoutCœss
;

34 
_P™goLayoutLöe
 
	tP™goLayoutLöe
;

36 
P™goGlyphIãm
 
	tP™goLayoutRun
;

39 
	mPANGO_ALIGN_LEFT
,

40 
	mPANGO_ALIGN_CENTER
,

41 
	mPANGO_ALIGN_RIGHT


42 } 
	tP™goAlignmít
;

45 
	mPANGO_WRAP_WORD
,

46 
	mPANGO_WRAP_CHAR
,

47 
	mPANGO_WRAP_WORD_CHAR


48 } 
	tP™goWøpMode
;

64 
	mPANGO_ELLIPSIZE_NONE
,

65 
	mPANGO_ELLIPSIZE_START
,

66 
	mPANGO_ELLIPSIZE_MIDDLE
,

67 
	mPANGO_ELLIPSIZE_END


68 } 
	tP™goEŒùsizeMode
;

70 
	s_P™goLayoutLöe


72 
P™goLayout
 *
	mœyout
;

73 
göt
 
	m°¨t_ödex
;

74 
göt
 
	mÀngth
;

75 
GSLi°
 *
	mruns
;

76 
guöt
 
	mis_∑øgøph_°¨t
 : 1;

77 
guöt
 
	mªsﬁved_dú
 : 3;

80 
	#PANGO_TYPE_LAYOUT
 (
	`∑ngo_œyout_gë_ty≥
 ())

	)

81 
	#PANGO_LAYOUT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_LAYOUT
, 
P™goLayout
))

	)

82 
	#PANGO_LAYOUT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_LAYOUT
, 
P™goLayoutCœss
))

	)

83 
	#PANGO_IS_LAYOUT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_LAYOUT
))

	)

84 
	#PANGO_IS_LAYOUT_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_LAYOUT
))

	)

85 
	#PANGO_LAYOUT_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_LAYOUT
, 
P™goLayoutCœss
))

	)

91 
GTy≥
 
	$∑ngo_œyout_gë_ty≥
 (Ë
G_GNUC_CONST
;

92 
P™goLayout
 *
	`∑ngo_œyout_√w
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

93 
P™goLayout
 *
	`∑ngo_œyout_c›y
 (P™goLayouà*
§c
);

95 
P™goC⁄ãxt
 *
	`∑ngo_œyout_gë_c⁄ãxt
 (
P™goLayout
 *
œyout
);

97 
	`∑ngo_œyout_£t_©åibuãs
 (
P™goLayout
 *
œyout
,

98 
P™goAârLi°
 *
©ås
);

99 
P™goAârLi°
 *
	`∑ngo_œyout_gë_©åibuãs
 (
P™goLayout
 *
œyout
);

101 
	`∑ngo_œyout_£t_ãxt
 (
P™goLayout
 *
œyout
,

102 c⁄° *
ãxt
,

103 
Àngth
);

104 c⁄° *
	`∑ngo_œyout_gë_ãxt
 (
P™goLayout
 *
œyout
);

106 
	`∑ngo_œyout_£t_m¨kup
 (
P™goLayout
 *
œyout
,

107 c⁄° *
m¨kup
,

108 
Àngth
);

110 
	`∑ngo_œyout_£t_m¨kup_wôh_ac˚l
 (
P™goLayout
 *
œyout
,

111 c⁄° *
m¨kup
,

112 
Àngth
,

113 
gunich¨
 
ac˚l_m¨kî
,

114 
gunich¨
 *
ac˚l_ch¨
);

116 
	`∑ngo_œyout_£t_f⁄t_des¸ùti⁄
 (
P™goLayout
 *
œyout
,

117 c⁄° 
P™goF⁄tDes¸ùti⁄
 *
desc
);

119 
G_CONST_RETURN
 
P™goF⁄tDes¸ùti⁄
 *
	`∑ngo_œyout_gë_f⁄t_des¸ùti⁄
 (
P™goLayout
 *
œyout
);

121 
	`∑ngo_œyout_£t_width
 (
P™goLayout
 *
œyout
,

122 
width
);

123 
	`∑ngo_œyout_gë_width
 (
P™goLayout
 *
œyout
);

124 
	`∑ngo_œyout_£t_height
 (
P™goLayout
 *
œyout
,

125 
height
);

126 
	`∑ngo_œyout_gë_height
 (
P™goLayout
 *
œyout
);

127 
	`∑ngo_œyout_£t_wøp
 (
P™goLayout
 *
œyout
,

128 
P™goWøpMode
 
wøp
);

129 
P™goWøpMode
 
	`∑ngo_œyout_gë_wøp
 (
P™goLayout
 *
œyout
);

130 
gboﬁón
 
	`∑ngo_œyout_is_wøµed
 (
P™goLayout
 *
œyout
);

131 
	`∑ngo_œyout_£t_ödít
 (
P™goLayout
 *
œyout
,

132 
ödít
);

133 
	`∑ngo_œyout_gë_ödít
 (
P™goLayout
 *
œyout
);

134 
	`∑ngo_œyout_£t_•acög
 (
P™goLayout
 *
œyout
,

135 
•acög
);

136 
	`∑ngo_œyout_gë_•acög
 (
P™goLayout
 *
œyout
);

137 
	`∑ngo_œyout_£t_ju°ify
 (
P™goLayout
 *
œyout
,

138 
gboﬁón
 
ju°ify
);

139 
gboﬁón
 
	`∑ngo_œyout_gë_ju°ify
 (
P™goLayout
 *
œyout
);

140 
	`∑ngo_œyout_£t_auto_dú
 (
P™goLayout
 *
œyout
,

141 
gboﬁón
 
auto_dú
);

142 
gboﬁón
 
	`∑ngo_œyout_gë_auto_dú
 (
P™goLayout
 *
œyout
);

143 
	`∑ngo_œyout_£t_Æignmít
 (
P™goLayout
 *
œyout
,

144 
P™goAlignmít
 
Æignmít
);

145 
P™goAlignmít
 
	`∑ngo_œyout_gë_Æignmít
 (
P™goLayout
 *
œyout
);

147 
	`∑ngo_œyout_£t_èbs
 (
P™goLayout
 *
œyout
,

148 
P™goTabAºay
 *
èbs
);

150 
P™goTabAºay
* 
	`∑ngo_œyout_gë_èbs
 (
P™goLayout
 *
œyout
);

152 
	`∑ngo_œyout_£t_sögÀ_∑øgøph_mode
 (
P™goLayout
 *
œyout
,

153 
gboﬁón
 
£âög
);

154 
gboﬁón
 
	`∑ngo_œyout_gë_sögÀ_∑øgøph_mode
 (
P™goLayout
 *
œyout
);

156 
	`∑ngo_œyout_£t_ñlùsize
 (
P™goLayout
 *
œyout
,

157 
P™goEŒùsizeMode
 
ñlùsize
);

158 
P™goEŒùsizeMode
 
	`∑ngo_œyout_gë_ñlùsize
 (
P™goLayout
 *
œyout
);

159 
gboﬁón
 
	`∑ngo_œyout_is_ñlùsized
 (
P™goLayout
 *
œyout
);

161 
	`∑ngo_œyout_gë_unknown_glyphs_cou¡
 (
P™goLayout
 *
œyout
);

163 
	`∑ngo_œyout_c⁄ãxt_ch™ged
 (
P™goLayout
 *
œyout
);

165 
	`∑ngo_œyout_gë_log_©ås
 (
P™goLayout
 *
œyout
,

166 
P™goLogAâr
 **
©ås
,

167 
göt
 *
n_©ås
);

169 
	`∑ngo_œyout_ödex_to_pos
 (
P™goLayout
 *
œyout
,

170 
ödex_
,

171 
P™goRe˘™gÀ
 *
pos
);

172 
	`∑ngo_œyout_ödex_to_löe_x
 (
P™goLayout
 *
œyout
,

173 
ödex_
,

174 
gboﬁón
 
åaûög
,

175 *
löe
,

176 *
x_pos
);

177 
	`∑ngo_œyout_gë_curs‹_pos
 (
P™goLayout
 *
œyout
,

178 
ödex_
,

179 
P™goRe˘™gÀ
 *
°r⁄g_pos
,

180 
P™goRe˘™gÀ
 *
wók_pos
);

181 
	`∑ngo_œyout_move_curs‹_visuÆly
 (
P™goLayout
 *
œyout
,

182 
gboﬁón
 
°r⁄g
,

183 
ﬁd_ödex
,

184 
ﬁd_åaûög
,

185 
dúe˘i⁄
,

186 *
√w_ödex
,

187 *
√w_åaûög
);

188 
gboﬁón
 
	`∑ngo_œyout_xy_to_ödex
 (
P™goLayout
 *
œyout
,

189 
x
,

190 
y
,

191 *
ödex_
,

192 *
åaûög
);

193 
	`∑ngo_œyout_gë_exã¡s
 (
P™goLayout
 *
œyout
,

194 
P™goRe˘™gÀ
 *
ök_ª˘
,

195 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

196 
	`∑ngo_œyout_gë_pixñ_exã¡s
 (
P™goLayout
 *
œyout
,

197 
P™goRe˘™gÀ
 *
ök_ª˘
,

198 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

199 
	`∑ngo_œyout_gë_size
 (
P™goLayout
 *
œyout
,

200 *
width
,

201 *
height
);

202 
	`∑ngo_œyout_gë_pixñ_size
 (
P™goLayout
 *
œyout
,

203 *
width
,

204 *
height
);

205 
	`∑ngo_œyout_gë_ba£löe
 (
P™goLayout
 *
œyout
);

207 
	`∑ngo_œyout_gë_löe_cou¡
 (
P™goLayout
 *
œyout
);

208 
P™goLayoutLöe
 *
	`∑ngo_œyout_gë_löe
 (
P™goLayout
 *
œyout
,

209 
löe
);

210 
P™goLayoutLöe
 *
	`∑ngo_œyout_gë_löe_ªad⁄ly
 (
P™goLayout
 *
œyout
,

211 
löe
);

212 
GSLi°
 * 
	`∑ngo_œyout_gë_löes
 (
P™goLayout
 *
œyout
);

213 
GSLi°
 * 
	`∑ngo_œyout_gë_löes_ªad⁄ly
 (
P™goLayout
 *
œyout
);

216 
	#PANGO_TYPE_LAYOUT_LINE
 (
	`∑ngo_œyout_löe_gë_ty≥
 ())

	)

218 
GTy≥
 
	$∑ngo_œyout_löe_gë_ty≥
 (Ë
G_GNUC_CONST
;

220 
P™goLayoutLöe
 *
	`∑ngo_œyout_löe_ªf
 (P™goLayoutLöê*
löe
);

221 
	`∑ngo_œyout_löe_uƒef
 (
P™goLayoutLöe
 *
löe
);

223 
gboﬁón
 
	`∑ngo_œyout_löe_x_to_ödex
 (
P™goLayoutLöe
 *
löe
,

224 
x_pos
,

225 *
ödex_
,

226 *
åaûög
);

227 
	`∑ngo_œyout_löe_ödex_to_x
 (
P™goLayoutLöe
 *
löe
,

228 
ödex_
,

229 
gboﬁón
 
åaûög
,

230 *
x_pos
);

231 
	`∑ngo_œyout_löe_gë_x_ønges
 (
P™goLayoutLöe
 *
löe
,

232 
°¨t_ödex
,

233 
íd_ödex
,

234 **
ønges
,

235 *
n_ønges
);

236 
	`∑ngo_œyout_löe_gë_exã¡s
 (
P™goLayoutLöe
 *
löe
,

237 
P™goRe˘™gÀ
 *
ök_ª˘
,

238 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

239 
	`∑ngo_œyout_löe_gë_pixñ_exã¡s
 (
P™goLayoutLöe
 *
œyout_löe
,

240 
P™goRe˘™gÀ
 *
ök_ª˘
,

241 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

243 
_P™goLayoutIãr
 
	tP™goLayoutIãr
;

245 
	#PANGO_TYPE_LAYOUT_ITER
 (
	`∑ngo_œyout_ôî_gë_ty≥
 ())

	)

247 
GTy≥
 
	$∑ngo_œyout_ôî_gë_ty≥
 (Ë
G_GNUC_CONST
;

249 
P™goLayoutIãr
 *
	`∑ngo_œyout_gë_ôî
 (
P™goLayout
 *
œyout
);

250 
P™goLayoutIãr
 *
	`∑ngo_œyout_ôî_c›y
 (P™goLayoutIã∏*
ôî
);

251 
	`∑ngo_œyout_ôî_‰ì
 (
P™goLayoutIãr
 *
ôî
);

253 
	`∑ngo_œyout_ôî_gë_ödex
 (
P™goLayoutIãr
 *
ôî
);

254 
P™goLayoutRun
 *
	`∑ngo_œyout_ôî_gë_run
 (
P™goLayoutIãr
 *
ôî
);

255 
P™goLayoutRun
 *
	`∑ngo_œyout_ôî_gë_run_ªad⁄ly
 (
P™goLayoutIãr
 *
ôî
);

256 
P™goLayoutLöe
 *
	`∑ngo_œyout_ôî_gë_löe
 (
P™goLayoutIãr
 *
ôî
);

257 
P™goLayoutLöe
 *
	`∑ngo_œyout_ôî_gë_löe_ªad⁄ly
 (
P™goLayoutIãr
 *
ôî
);

258 
gboﬁón
 
	`∑ngo_œyout_ôî_©_œ°_löe
 (
P™goLayoutIãr
 *
ôî
);

259 
P™goLayout
 *
	`∑ngo_œyout_ôî_gë_œyout
 (
P™goLayoutIãr
 *
ôî
);

261 
gboﬁón
 
	`∑ngo_œyout_ôî_√xt_ch¨
 (
P™goLayoutIãr
 *
ôî
);

262 
gboﬁón
 
	`∑ngo_œyout_ôî_√xt_˛u°î
 (
P™goLayoutIãr
 *
ôî
);

263 
gboﬁón
 
	`∑ngo_œyout_ôî_√xt_run
 (
P™goLayoutIãr
 *
ôî
);

264 
gboﬁón
 
	`∑ngo_œyout_ôî_√xt_löe
 (
P™goLayoutIãr
 *
ôî
);

266 
	`∑ngo_œyout_ôî_gë_ch¨_exã¡s
 (
P™goLayoutIãr
 *
ôî
,

267 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

268 
	`∑ngo_œyout_ôî_gë_˛u°î_exã¡s
 (
P™goLayoutIãr
 *
ôî
,

269 
P™goRe˘™gÀ
 *
ök_ª˘
,

270 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

271 
	`∑ngo_œyout_ôî_gë_run_exã¡s
 (
P™goLayoutIãr
 *
ôî
,

272 
P™goRe˘™gÀ
 *
ök_ª˘
,

273 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

274 
	`∑ngo_œyout_ôî_gë_löe_exã¡s
 (
P™goLayoutIãr
 *
ôî
,

275 
P™goRe˘™gÀ
 *
ök_ª˘
,

276 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

280 
	`∑ngo_œyout_ôî_gë_löe_yønge
 (
P™goLayoutIãr
 *
ôî
,

281 *
y0_
,

282 *
y1_
);

283 
	`∑ngo_œyout_ôî_gë_œyout_exã¡s
 (
P™goLayoutIãr
 *
ôî
,

284 
P™goRe˘™gÀ
 *
ök_ª˘
,

285 
P™goRe˘™gÀ
 *
logiˇl_ª˘
);

286 
	`∑ngo_œyout_ôî_gë_ba£löe
 (
P™goLayoutIãr
 *
ôî
);

288 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-matrix.h

22 #i‚de‡
__PANGO_MATRIX_H__


23 
	#__PANGO_MATRIX_H__


	)

25 
	~<glib.h
>

26 
	~<glib-obje˘.h
>

28 
G_BEGIN_DECLS


30 
_P™goM©rix
 
	tP™goM©rix
;

52 
	s_P™goM©rix


54 
	mxx
;

55 
	mxy
;

56 
	myx
;

57 
	myy
;

58 
	mx0
;

59 
	my0
;

67 
	#PANGO_TYPE_MATRIX
 (
	`∑ngo_m©rix_gë_ty≥
 ())

	)

82 
	#PANGO_MATRIX_INIT
 { 1., 0., 0., 1., 0., 0. }

	)

85 
	~<∑ngo/∑ngo-ty≥s.h
>

87 
GTy≥
 
	$∑ngo_m©rix_gë_ty≥
 (Ë
G_GNUC_CONST
;

89 
P™goM©rix
 *
	`∑ngo_m©rix_c›y
 (c⁄° P™goM©rix *
m©rix
);

90 
	`∑ngo_m©rix_‰ì
 (
P™goM©rix
 *
m©rix
);

92 
	`∑ngo_m©rix_å™¶©e
 (
P™goM©rix
 *
m©rix
,

93 
tx
,

94 
ty
);

95 
	`∑ngo_m©rix_sˇÀ
 (
P™goM©rix
 *
m©rix
,

96 
sˇÀ_x
,

97 
sˇÀ_y
);

98 
	`∑ngo_m©rix_rŸ©e
 (
P™goM©rix
 *
m©rix
,

99 
degªes
);

100 
	`∑ngo_m©rix_c⁄ˇt
 (
P™goM©rix
 *
m©rix
,

101 c⁄° 
P™goM©rix
 *
√w_m©rix
);

102 
	`∑ngo_m©rix_å™sf‹m_poöt
 (c⁄° 
P™goM©rix
 *
m©rix
,

103 *
x
,

104 *
y
);

105 
	`∑ngo_m©rix_å™sf‹m_di°™˚
 (c⁄° 
P™goM©rix
 *
m©rix
,

106 *
dx
,

107 *
dy
);

108 
	`∑ngo_m©rix_å™sf‹m_ª˘™gÀ
 (c⁄° 
P™goM©rix
 *
m©rix
,

109 
P™goRe˘™gÀ
 *
ª˘
);

110 
	`∑ngo_m©rix_å™sf‹m_pixñ_ª˘™gÀ
 (c⁄° 
P™goM©rix
 *
m©rix
,

111 
P™goRe˘™gÀ
 *
ª˘
);

112 
	$∑ngo_m©rix_gë_f⁄t_sˇÀ_Á˘‹
 (c⁄° 
P™goM©rix
 *
m©rix
Ë
G_GNUC_PURE
;

115 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-renderer.h

21 #i‚de‡
__PANGO_RENDERER_H_


22 
	#__PANGO_RENDERER_H_


	)

24 
	~<∑ngo/∑ngo-œyout.h
>

26 
	gG_BEGIN_DECLS


28 
	#PANGO_TYPE_RENDERER
 (
	`∑ngo_ªndîî_gë_ty≥
())

	)

29 
	#PANGO_RENDERER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_RENDERER
, 
P™goRídîî
))

	)

30 
	#PANGO_IS_RENDERER
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_RENDERER
))

	)

31 
	#PANGO_RENDERER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_CAST
 ((kœss), 
PANGO_TYPE_RENDERER
, 
P™goRídîîCœss
))

	)

32 
	#PANGO_IS_RENDERER_CLASS
(
kœss
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((kœss), 
PANGO_TYPE_RENDERER
))

	)

33 
	#PANGO_RENDERER_GET_CLASS
(
obj
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((obj), 
PANGO_TYPE_RENDERER
, 
P™goRídîîCœss
))

	)

35 
_P™goRídîî
 
	tP™goRídîî
;

36 
_P™goRídîîCœss
 
	tP™goRídîîCœss
;

37 
_P™goRídîîPriv©e
 
	tP™goRídîîPriv©e
;

54 
	mPANGO_RENDER_PART_FOREGROUND
,

55 
	mPANGO_RENDER_PART_BACKGROUND
,

56 
	mPANGO_RENDER_PART_UNDERLINE
,

57 
	mPANGO_RENDER_PART_STRIKETHROUGH


58 } 
	tP™goRídîP¨t
;

71 
	s_P™goRídîî


74 
GObje˘
 
	m∑ª¡_ö°™˚
;

76 
P™goUndîlöe
 
	mundîlöe
;

77 
gboﬁón
 
	m°rikëhrough
;

78 
	ma˘ive_cou¡
;

81 
P™goM©rix
 *
	mm©rix
;

84 
P™goRídîîPriv©e
 *
	m¥iv
;

110 
	s_P™goRídîîCœss


113 
GObje˘Cœss
 
	m∑ª¡_˛ass
;

121 (*
	mdøw_glyphs
Ë(
P™goRídîî
 *
	mªndîî
,

122 
P™goF⁄t
 *
	mf⁄t
,

123 
P™goGlyphSåög
 *
	mglyphs
,

124 
	mx
,

125 
	my
);

126 (*
	mdøw_ª˘™gÀ
Ë(
P™goRídîî
 *
	mªndîî
,

127 
P™goRídîP¨t
 
	m∑π
,

128 
	mx
,

129 
	my
,

130 
	mwidth
,

131 
	mheight
);

132 (*
	mdøw_îr‹_undîlöe
Ë(
P™goRídîî
 *
	mªndîî
,

133 
	mx
,

134 
	my
,

135 
	mwidth
,

136 
	mheight
);

139 (*
	mdøw_sh≠e
Ë(
P™goRídîî
 *
	mªndîî
,

140 
P™goAârSh≠e
 *
	m©å
,

141 
	mx
,

142 
	my
);

147 (*
	mdøw_å≠ezoid
Ë(
P™goRídîî
 *
	mªndîî
,

148 
P™goRídîP¨t
 
	m∑π
,

149 
	my1_
,

150 
	mx11
,

151 
	mx21
,

152 
	my2
,

153 
	mx12
,

154 
	mx22
);

155 (*
	mdøw_glyph
Ë(
P™goRídîî
 *
	mªndîî
,

156 
P™goF⁄t
 *
	mf⁄t
,

157 
P™goGlyph
 
	mglyph
,

158 
	mx
,

159 
	my
);

163 (*
	m∑π_ch™ged
Ë(
P™goRídîî
 *
	mªndîî
,

164 
P™goRídîP¨t
 
	m∑π
);

168 (*
	mbegö
Ë(
P™goRídîî
 *
	mªndîî
);

169 (*
	míd
Ë(
P™goRídîî
 *
	mªndîî
);

173 (*
	m¥ï¨e_run
Ë(
P™goRídîî
 *
	mªndîî
,

174 
P™goLayoutRun
 *
	mrun
);

179 (*
	mdøw_glyph_ôem
Ë(
P™goRídîî
 *
	mªndîî
,

180 c⁄° *
	mãxt
,

181 
P™goGlyphIãm
 *
	mglyph_ôem
,

182 
	mx
,

183 
	my
);

188 (*
	m_∑ngo_ª£rved2
) ();

189 (*
	m_∑ngo_ª£rved3
) ();

190 (*
	m_∑ngo_ª£rved4
) ();

193 
GTy≥
 
	$∑ngo_ªndîî_gë_ty≥
 (Ë
G_GNUC_CONST
;

195 
	`∑ngo_ªndîî_døw_œyout
 (
P™goRídîî
 *
ªndîî
,

196 
P™goLayout
 *
œyout
,

197 
x
,

198 
y
);

199 
	`∑ngo_ªndîî_døw_œyout_löe
 (
P™goRídîî
 *
ªndîî
,

200 
P™goLayoutLöe
 *
löe
,

201 
x
,

202 
y
);

203 
	`∑ngo_ªndîî_døw_glyphs
 (
P™goRídîî
 *
ªndîî
,

204 
P™goF⁄t
 *
f⁄t
,

205 
P™goGlyphSåög
 *
glyphs
,

206 
x
,

207 
y
);

208 
	`∑ngo_ªndîî_døw_glyph_ôem
 (
P™goRídîî
 *
ªndîî
,

209 c⁄° *
ãxt
,

210 
P™goGlyphIãm
 *
glyph_ôem
,

211 
x
,

212 
y
);

213 
	`∑ngo_ªndîî_døw_ª˘™gÀ
 (
P™goRídîî
 *
ªndîî
,

214 
P™goRídîP¨t
 
∑π
,

215 
x
,

216 
y
,

217 
width
,

218 
height
);

219 
	`∑ngo_ªndîî_døw_îr‹_undîlöe
 (
P™goRídîî
 *
ªndîî
,

220 
x
,

221 
y
,

222 
width
,

223 
height
);

224 
	`∑ngo_ªndîî_døw_å≠ezoid
 (
P™goRídîî
 *
ªndîî
,

225 
P™goRídîP¨t
 
∑π
,

226 
y1_
,

227 
x11
,

228 
x21
,

229 
y2
,

230 
x12
,

231 
x22
);

232 
	`∑ngo_ªndîî_døw_glyph
 (
P™goRídîî
 *
ªndîî
,

233 
P™goF⁄t
 *
f⁄t
,

234 
P™goGlyph
 
glyph
,

235 
x
,

236 
y
);

238 
	`∑ngo_ªndîî_a˘iv©e
 (
P™goRídîî
 *
ªndîî
);

239 
	`∑ngo_ªndîî_dó˘iv©e
 (
P™goRídîî
 *
ªndîî
);

241 
	`∑ngo_ªndîî_∑π_ch™ged
 (
P™goRídîî
 *
ªndîî
,

242 
P™goRídîP¨t
 
∑π
);

244 
	`∑ngo_ªndîî_£t_cﬁ‹
 (
P™goRídîî
 *
ªndîî
,

245 
P™goRídîP¨t
 
∑π
,

246 c⁄° 
P™goCﬁ‹
 *
cﬁ‹
);

247 
P™goCﬁ‹
 *
	`∑ngo_ªndîî_gë_cﬁ‹
 (
P™goRídîî
 *
ªndîî
,

248 
P™goRídîP¨t
 
∑π
);

250 
	`∑ngo_ªndîî_£t_m©rix
 (
P™goRídîî
 *
ªndîî
,

251 c⁄° 
P™goM©rix
 *
m©rix
);

252 
G_CONST_RETURN
 
P™goM©rix
 *
	`∑ngo_ªndîî_gë_m©rix
 (
P™goRídîî
 *
ªndîî
);

254 
P™goLayout
 *
	`∑ngo_ªndîî_gë_œyout
 (
P™goRídîî
 *
ªndîî
);

255 
P™goLayoutLöe
 *
	`∑ngo_ªndîî_gë_œyout_löe
 (
P™goRídîî
 *
ªndîî
);

257 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-script.h

22 #i‚de‡
__PANGO_SCRIPT_H__


23 
	#__PANGO_SCRIPT_H__


	)

25 
	~<glib.h
>

27 
G_BEGIN_DECLS


35 
_P™goS¸ùtIãr
 
	tP™goS¸ùtIãr
;

38 
	mPANGO_SCRIPT_INVALID_CODE
 = -1,

39 
	mPANGO_SCRIPT_COMMON
 = 0,

40 
	mPANGO_SCRIPT_INHERITED
,

41 
	mPANGO_SCRIPT_ARABIC
,

42 
	mPANGO_SCRIPT_ARMENIAN
,

43 
	mPANGO_SCRIPT_BENGALI
,

44 
	mPANGO_SCRIPT_BOPOMOFO
,

45 
	mPANGO_SCRIPT_CHEROKEE
,

46 
	mPANGO_SCRIPT_COPTIC
,

47 
	mPANGO_SCRIPT_CYRILLIC
,

48 
	mPANGO_SCRIPT_DESERET
,

49 
	mPANGO_SCRIPT_DEVANAGARI
,

50 
	mPANGO_SCRIPT_ETHIOPIC
,

51 
	mPANGO_SCRIPT_GEORGIAN
,

52 
	mPANGO_SCRIPT_GOTHIC
,

53 
	mPANGO_SCRIPT_GREEK
,

54 
	mPANGO_SCRIPT_GUJARATI
,

55 
	mPANGO_SCRIPT_GURMUKHI
,

56 
	mPANGO_SCRIPT_HAN
,

57 
	mPANGO_SCRIPT_HANGUL
,

58 
	mPANGO_SCRIPT_HEBREW
,

59 
	mPANGO_SCRIPT_HIRAGANA
,

60 
	mPANGO_SCRIPT_KANNADA
,

61 
	mPANGO_SCRIPT_KATAKANA
,

62 
	mPANGO_SCRIPT_KHMER
,

63 
	mPANGO_SCRIPT_LAO
,

64 
	mPANGO_SCRIPT_LATIN
,

65 
	mPANGO_SCRIPT_MALAYALAM
,

66 
	mPANGO_SCRIPT_MONGOLIAN
,

67 
	mPANGO_SCRIPT_MYANMAR
,

68 
	mPANGO_SCRIPT_OGHAM
,

69 
	mPANGO_SCRIPT_OLD_ITALIC
,

70 
	mPANGO_SCRIPT_ORIYA
,

71 
	mPANGO_SCRIPT_RUNIC
,

72 
	mPANGO_SCRIPT_SINHALA
,

73 
	mPANGO_SCRIPT_SYRIAC
,

74 
	mPANGO_SCRIPT_TAMIL
,

75 
	mPANGO_SCRIPT_TELUGU
,

76 
	mPANGO_SCRIPT_THAANA
,

77 
	mPANGO_SCRIPT_THAI
,

78 
	mPANGO_SCRIPT_TIBETAN
,

79 
	mPANGO_SCRIPT_CANADIAN_ABORIGINAL
,

80 
	mPANGO_SCRIPT_YI
,

81 
	mPANGO_SCRIPT_TAGALOG
,

82 
	mPANGO_SCRIPT_HANUNOO
,

83 
	mPANGO_SCRIPT_BUHID
,

84 
	mPANGO_SCRIPT_TAGBANWA
,

87 
	mPANGO_SCRIPT_BRAILLE
,

88 
	mPANGO_SCRIPT_CYPRIOT
,

89 
	mPANGO_SCRIPT_LIMBU
,

90 
	mPANGO_SCRIPT_OSMANYA
,

91 
	mPANGO_SCRIPT_SHAVIAN
,

92 
	mPANGO_SCRIPT_LINEAR_B
,

93 
	mPANGO_SCRIPT_TAI_LE
,

94 
	mPANGO_SCRIPT_UGARITIC
,

97 
	mPANGO_SCRIPT_NEW_TAI_LUE
,

98 
	mPANGO_SCRIPT_BUGINESE
,

99 
	mPANGO_SCRIPT_GLAGOLITIC
,

100 
	mPANGO_SCRIPT_TIFINAGH
,

101 
	mPANGO_SCRIPT_SYLOTI_NAGRI
,

102 
	mPANGO_SCRIPT_OLD_PERSIAN
,

103 
	mPANGO_SCRIPT_KHAROSHTHI
,

106 
	mPANGO_SCRIPT_UNKNOWN
,

107 
	mPANGO_SCRIPT_BALINESE
,

108 
	mPANGO_SCRIPT_CUNEIFORM
,

109 
	mPANGO_SCRIPT_PHOENICIAN
,

110 
	mPANGO_SCRIPT_PHAGS_PA
,

111 
	mPANGO_SCRIPT_NKO
,

114 
	mPANGO_SCRIPT_KAYAH_LI
,

115 
	mPANGO_SCRIPT_LEPCHA
,

116 
	mPANGO_SCRIPT_REJANG
,

117 
	mPANGO_SCRIPT_SUNDANESE
,

118 
	mPANGO_SCRIPT_SAURASHTRA
,

119 
	mPANGO_SCRIPT_CHAM
,

120 
	mPANGO_SCRIPT_OL_CHIKI
,

121 
	mPANGO_SCRIPT_VAI
,

122 
	mPANGO_SCRIPT_CARIAN
,

123 
	mPANGO_SCRIPT_LYCIAN
,

124 
	mPANGO_SCRIPT_LYDIAN


125 } 
	tP™goS¸ùt
;

127 
P™goS¸ùt
 
	$∑ngo_s¸ùt_f‹_unich¨
 (
gunich¨
 
ch
Ë
G_GNUC_CONST
;

129 
P™goS¸ùtIãr
 *
	`∑ngo_s¸ùt_ôî_√w
 (c⁄° *
ãxt
,

130 
Àngth
);

131 
	`∑ngo_s¸ùt_ôî_gë_ønge
 (
P™goS¸ùtIãr
 *
ôî
,

132 
G_CONST_RETURN
 **
°¨t
,

133 
G_CONST_RETURN
 **
íd
,

134 
P™goS¸ùt
 *
s¸ùt
);

135 
gboﬁón
 
	`∑ngo_s¸ùt_ôî_√xt
 (
P™goS¸ùtIãr
 *
ôî
);

136 
	`∑ngo_s¸ùt_ôî_‰ì
 (
P™goS¸ùtIãr
 *
ôî
);

138 
	~<∑ngo/∑ngo-œnguage.h
>

140 
P™goL™guage
 *
	$∑ngo_s¸ùt_gë_ßm∂e_œnguage
 (
P™goS¸ùt
 
s¸ùt
Ë
G_GNUC_PURE
;

142 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-tabs.h

22 #i‚de‡
__PANGO_TABS_H__


23 
	#__PANGO_TABS_H__


	)

25 
	~<∑ngo/∑ngo-ty≥s.h
>

27 
G_BEGIN_DECLS


29 
_P™goTabAºay
 
	tP™goTabAºay
;

33 
	mPANGO_TAB_LEFT


42 } 
	tP™goTabAlign
;

44 
	#PANGO_TYPE_TAB_ARRAY
 (
	`∑ngo_èb_¨øy_gë_ty≥
 ())

	)

46 
P™goTabAºay
 *
∑ngo_èb_¨øy_√w
 (
göt
 
öôül_size
,

47 
gboﬁón
 
posôi⁄s_ö_pixñs
);

48 
P™goTabAºay
 *
∑ngo_èb_¨øy_√w_wôh_posôi⁄s
 (
göt
 
size
,

49 
gboﬁón
 
posôi⁄s_ö_pixñs
,

50 
P™goTabAlign
 
fú°_Æignmít
,

51 
göt
 
fú°_posôi⁄
,

53 
GTy≥
 
	$∑ngo_èb_¨øy_gë_ty≥
 (Ë
G_GNUC_CONST
;

54 
P™goTabAºay
 *
	`∑ngo_èb_¨øy_c›y
 (P™goTabAºay *
§c
);

55 
	`∑ngo_èb_¨øy_‰ì
 (
P™goTabAºay
 *
èb_¨øy
);

56 
göt
 
	`∑ngo_èb_¨øy_gë_size
 (
P™goTabAºay
 *
èb_¨øy
);

57 
	`∑ngo_èb_¨øy_ªsize
 (
P™goTabAºay
 *
èb_¨øy
,

58 
göt
 
√w_size
);

59 
	`∑ngo_èb_¨øy_£t_èb
 (
P™goTabAºay
 *
èb_¨øy
,

60 
göt
 
èb_ödex
,

61 
P™goTabAlign
 
Æignmít
,

62 
göt
 
loˇti⁄
);

63 
	`∑ngo_èb_¨øy_gë_èb
 (
P™goTabAºay
 *
èb_¨øy
,

64 
göt
 
èb_ödex
,

65 
P™goTabAlign
 *
Æignmít
,

66 
göt
 *
loˇti⁄
);

67 
	`∑ngo_èb_¨øy_gë_èbs
 (
P™goTabAºay
 *
èb_¨øy
,

68 
P™goTabAlign
 **
Æignmíts
,

69 
göt
 **
loˇti⁄s
);

71 
gboﬁón
 
	`∑ngo_èb_¨øy_gë_posôi⁄s_ö_pixñs
 (
P™goTabAºay
 *
èb_¨øy
);

74 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-types.h

22 #i‚de‡
__PANGO_TYPES_H__


23 
	#__PANGO_TYPES_H__


	)

25 
	~<glib.h
>

26 
	~<glib-obje˘.h
>

28 
G_BEGIN_DECLS


30 
_P™goLogAâr
 
	tP™goLogAâr
;

32 
_P™goEngöeL™g
 
	tP™goEngöeL™g
;

33 
_P™goEngöeSh≠e
 
	tP™goEngöeSh≠e
;

35 
_P™goF⁄t
 
	tP™goF⁄t
;

36 
_P™goF⁄tM≠
 
	tP™goF⁄tM≠
;

38 
_P™goRe˘™gÀ
 
	tP™goRe˘™gÀ
;

43 
guöt32
 
	tP™goGlyph
;

47 
	#PANGO_SCALE
 1024

	)

48 
	#PANGO_PIXELS
(
d
Ë((()(dË+ 512Ë>> 10)

	)

49 
	#PANGO_PIXELS_FLOOR
(
d
Ë((()(d)Ë>> 10)

	)

50 
	#PANGO_PIXELS_CEIL
(
d
Ë((()(dË+ 1023Ë>> 10)

	)

60 
	#PANGO_UNITS_ROUND
(
d
) \

61 (((
d
Ë+ (
PANGO_SCALE
 >> 1)Ë& ~(PANGO_SCALE - 1))

	)

64 
	$∑ngo_unôs_‰om_doubÀ
 (
d
Ë
G_GNUC_CONST
;

65 
	$∑ngo_unôs_to_doubÀ
 (
i
Ë
G_GNUC_CONST
;

72 
	s_P™goRe˘™gÀ


74 
x
;

75 
y
;

76 
width
;

77 
height
;

82 
	#PANGO_ASCENT
(
ª˘
Ë(-‘e˘).
y
)

	)

83 
	#PANGO_DESCENT
(
ª˘
Ë(‘e˘).
y
 + (ª˘).
height
)

	)

84 
	#PANGO_LBEARING
(
ª˘
Ë(‘e˘).
x
)

	)

85 
	#PANGO_RBEARING
(
ª˘
Ë(‘e˘).
x
 + (ª˘).
width
)

	)

87 
	`∑ngo_exã¡s_to_pixñs
 (
P™goRe˘™gÀ
 *
ö˛usive
,

88 
P™goRe˘™gÀ
 *
√¨e°
);

91 
	~<∑ngo/∑ngo-gøvôy.h
>

92 
	~<∑ngo/∑ngo-œnguage.h
>

93 
	~<∑ngo/∑ngo-m©rix.h
>

94 
	~<∑ngo/∑ngo-s¸ùt.h
>

95 
	~<∑ngo/∑ngo-bidi-ty≥.h
>

98 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-utils.h

22 #i‚de‡
__PANGO_UTILS_H__


23 
	#__PANGO_UTILS_H__


	)

25 
	~<°dio.h
>

26 
	~<glib.h
>

27 
	~<∑ngo/∑ngo-f⁄t.h
>

29 
G_BEGIN_DECLS


31 ** 
∑ngo_•lô_fûe_li°
 (c⁄° *
°r
);

33 *
∑ngo_åim_°rög
 (c⁄° *
°r
);

34 
göt
 
∑ngo_ªad_löe
 (
FILE
 *
°ªam
,

35 
GSåög
 *
°r
);

36 
gboﬁón
 
∑ngo_skù_•a˚
 (c⁄° **
pos
);

37 
gboﬁón
 
∑ngo_sˇn_w‹d
 (c⁄° **
pos
,

38 
GSåög
 *
out
);

39 
gboﬁón
 
∑ngo_sˇn_°rög
 (c⁄° **
pos
,

40 
GSåög
 *
out
);

41 
gboﬁón
 
∑ngo_sˇn_öt
 (c⁄° **
pos
,

42 *
out
);

44 #ifde‡
PANGO_ENABLE_BACKEND


45 * 
∑ngo_c⁄fig_key_gë
 (c⁄° *
key
);

46 
∑ngo_lookup_Æü£s
 (c⁄° *
f⁄äame
,

47 ***
Ámûõs
,

48 *
n_Ámûõs
);

51 
gboﬁón
 
∑ngo_∑r£_íum
 (
GTy≥
 
ty≥
,

52 c⁄° *
°r
,

53 *
vÆue
,

54 
gboﬁón
 
w¨n
,

55 **
possibÀ_vÆues
);

64 
gboﬁón
 
∑ngo_∑r£_°yÀ
 (c⁄° *
°r
,

65 
P™goStyÀ
 *
°yÀ
,

66 
gboﬁón
 
w¨n
);

67 
gboﬁón
 
∑ngo_∑r£_v¨ü¡
 (c⁄° *
°r
,

68 
P™goV¨ü¡
 *
v¨ü¡
,

69 
gboﬁón
 
w¨n
);

70 
gboﬁón
 
∑ngo_∑r£_weight
 (c⁄° *
°r
,

71 
P™goWeight
 *
weight
,

72 
gboﬁón
 
w¨n
);

73 
gboﬁón
 
∑ngo_∑r£_°ªtch
 (c⁄° *
°r
,

74 
P™goSåëch
 *
°ªtch
,

75 
gboﬁón
 
w¨n
);

77 #ifde‡
PANGO_ENABLE_BACKEND


85 
G_CONST_RETURN
 * 
	$∑ngo_gë_sysc⁄f_subdúe˘‹y
 (Ë
G_GNUC_PURE
;

91 
G_CONST_RETURN
 * 
	$∑ngo_gë_lib_subdúe˘‹y
 (Ë
G_GNUC_PURE
;

97 
	`∑ngo_qu™tize_löe_geomëry
 (*
thick√ss
,

98 *
posôi⁄
);

102 
guöt8
 * 
	`∑ngo_log2vis_gë_embeddög_Àvñs
 (c⁄° 
gch¨
 *
ãxt
,

103 
Àngth
,

104 
P™goDúe˘i⁄
 *
pba£_dú
);

109 
gboﬁón
 
	$∑ngo_is_zîo_width
 (
gunich¨
 
ch
Ë
G_GNUC_CONST
;

114 
	#PANGO_VERSION_ENCODE
(
maj‹
, 
mö‹
, 
mi¸o
) ( \

115 ((
maj‹
) * 10000) \

116 + ((
mö‹
) * 100) \

117 + ((
mi¸o
Ë* 1))

	)

120 
	#PANGO_VERSION
 
	`PANGO_VERSION_ENCODE
( \

121 
PANGO_VERSION_MAJOR
, \

122 
PANGO_VERSION_MINOR
, \

123 
PANGO_VERSION_MICRO
)

	)

126 
	#PANGO_VERSION_CHECK
(
maj‹
,
mö‹
,
mi¸o
) \

127 (
PANGO_VERSION
 >
	`PANGO_VERSION_ENCODE
(
maj‹
,
mö‹
,
mi¸o
))

	)

131 
	$∑ngo_vîsi⁄
 (Ë
G_GNUC_CONST
;

134 
G_CONST_RETURN
 * 
	$∑ngo_vîsi⁄_°rög
 (Ë
G_GNUC_CONST
;

137 
G_CONST_RETURN
 * 
	$∑ngo_vîsi⁄_check
 (
ªquúed_maj‹
,

138 
ªquúed_mö‹
,

139 
ªquúed_mi¸o
Ë
G_GNUC_CONST
;

141 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pangocairo.h

22 #i‚de‡
__PANGOCAIRO_H__


23 
	#__PANGOCAIRO_H__


	)

25 
	~<∑ngo/∑ngo.h
>

26 
	~<ˇúo.h
>

28 
G_BEGIN_DECLS


39 
_P™goCaúoF⁄t
 
	tP™goCaúoF⁄t
;

40 
	#PANGO_TYPE_CAIRO_FONT
 (
	`∑ngo_ˇúo_f⁄t_gë_ty≥
 ())

	)

41 
	#PANGO_CAIRO_FONT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_CAIRO_FONT
, 
P™goCaúoF⁄t
))

	)

42 
	#PANGO_IS_CAIRO_FONT
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_CAIRO_FONT
))

	)

53 
_P™goCaúoF⁄tM≠
 
	tP™goCaúoF⁄tM≠
;

54 
	#PANGO_TYPE_CAIRO_FONT_MAP
 (
	`∑ngo_ˇúo_f⁄t_m≠_gë_ty≥
 ())

	)

55 
	#PANGO_CAIRO_FONT_MAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((obje˘), 
PANGO_TYPE_CAIRO_FONT_MAP
, 
P™goCaúoF⁄tM≠
))

	)

56 
	#PANGO_IS_CAIRO_FONT_MAP
(
obje˘
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((obje˘), 
PANGO_TYPE_CAIRO_FONT_MAP
))

	)

58 (* 
	tP™goCaúoSh≠eRídîîFunc
Ë(
	tˇúo_t
 *
	t¸
,

59 
	tP™goAârSh≠e
 *
	t©å
,

60 
	tgboﬁón
 
	tdo_∑th
,

61 
	tgpoöãr
 
	td©a
);

66 
GTy≥
 
	$∑ngo_ˇúo_f⁄t_m≠_gë_ty≥
 (Ë
G_GNUC_CONST
;

68 
P™goF⁄tM≠
 *
	`∑ngo_ˇúo_f⁄t_m≠_√w
 ();

69 
P™goF⁄tM≠
 *
	`∑ngo_ˇúo_f⁄t_m≠_√w_f‹_f⁄t_ty≥
 (
ˇúo_f⁄t_ty≥_t
 
f⁄ây≥
);

70 
P™goF⁄tM≠
 *
	`∑ngo_ˇúo_f⁄t_m≠_gë_deÁu…
 ();

71 
	`∑ngo_ˇúo_f⁄t_m≠_£t_deÁu…
 (
P™goCaúoF⁄tM≠
 *
f⁄tm≠
);

72 
ˇúo_f⁄t_ty≥_t
 
	`∑ngo_ˇúo_f⁄t_m≠_gë_f⁄t_ty≥
 (
P™goCaúoF⁄tM≠
 *
f⁄tm≠
);

74 
	`∑ngo_ˇúo_f⁄t_m≠_£t_ªsﬁuti⁄
 (
P™goCaúoF⁄tM≠
 *
f⁄tm≠
,

75 
dpi
);

76 
	`∑ngo_ˇúo_f⁄t_m≠_gë_ªsﬁuti⁄
 (
P™goCaúoF⁄tM≠
 *
f⁄tm≠
);

77 #i‚de‡
PANGO_DISABLE_DEPRECATED


78 
P™goC⁄ãxt
 *
	`∑ngo_ˇúo_f⁄t_m≠_¸óã_c⁄ãxt
 (
P™goCaúoF⁄tM≠
 *
f⁄tm≠
);

84 
GTy≥
 
	$∑ngo_ˇúo_f⁄t_gë_ty≥
 (Ë
G_GNUC_CONST
;

86 
ˇúo_sˇÀd_f⁄t_t
 *
	`∑ngo_ˇúo_f⁄t_gë_sˇÀd_f⁄t
 (
P™goCaúoF⁄t
 *
f⁄t
);

90 
	`∑ngo_ˇúo_upd©e_c⁄ãxt
 (
ˇúo_t
 *
¸
,

91 
P™goC⁄ãxt
 *
c⁄ãxt
);

93 
	`∑ngo_ˇúo_c⁄ãxt_£t_f⁄t_›ti⁄s
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

94 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
›ti⁄s
);

95 c⁄° 
ˇúo_f⁄t_›ti⁄s_t
 *
	`∑ngo_ˇúo_c⁄ãxt_gë_f⁄t_›ti⁄s
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

97 
	`∑ngo_ˇúo_c⁄ãxt_£t_ªsﬁuti⁄
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

98 
dpi
);

99 
	`∑ngo_ˇúo_c⁄ãxt_gë_ªsﬁuti⁄
 (
P™goC⁄ãxt
 *
c⁄ãxt
);

101 
	`∑ngo_ˇúo_c⁄ãxt_£t_sh≠e_ªndîî
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

102 
P™goCaúoSh≠eRídîîFunc
 
func
,

103 
gpoöãr
 
d©a
,

104 
GDe°royNŸify
 
dnŸify
);

105 
P™goCaúoSh≠eRídîîFunc
 
	`∑ngo_ˇúo_c⁄ãxt_gë_sh≠e_ªndîî
 (
P™goC⁄ãxt
 *
c⁄ãxt
,

106 
gpoöãr
 *
d©a
);

110 
P™goC⁄ãxt
 *
	`∑ngo_ˇúo_¸óã_c⁄ãxt
 (
ˇúo_t
 *
¸
);

111 
P™goLayout
 *
	`∑ngo_ˇúo_¸óã_œyout
 (
ˇúo_t
 *
¸
);

112 
	`∑ngo_ˇúo_upd©e_œyout
 (
ˇúo_t
 *
¸
,

113 
P™goLayout
 *
œyout
);

118 
	`∑ngo_ˇúo_show_glyph_°rög
 (
ˇúo_t
 *
¸
,

119 
P™goF⁄t
 *
f⁄t
,

120 
P™goGlyphSåög
 *
glyphs
);

121 
	`∑ngo_ˇúo_show_glyph_ôem
 (
ˇúo_t
 *
¸
,

122 c⁄° *
ãxt
,

123 
P™goGlyphIãm
 *
glyph_ôem
);

124 
	`∑ngo_ˇúo_show_œyout_löe
 (
ˇúo_t
 *
¸
,

125 
P™goLayoutLöe
 *
löe
);

126 
	`∑ngo_ˇúo_show_œyout
 (
ˇúo_t
 *
¸
,

127 
P™goLayout
 *
œyout
);

129 
	`∑ngo_ˇúo_show_îr‹_undîlöe
 (
ˇúo_t
 *
¸
,

130 
x
,

131 
y
,

132 
width
,

133 
height
);

138 
	`∑ngo_ˇúo_glyph_°rög_∑th
 (
ˇúo_t
 *
¸
,

139 
P™goF⁄t
 *
f⁄t
,

140 
P™goGlyphSåög
 *
glyphs
);

141 
	`∑ngo_ˇúo_œyout_löe_∑th
 (
ˇúo_t
 *
¸
,

142 
P™goLayoutLöe
 *
löe
);

143 
	`∑ngo_ˇúo_œyout_∑th
 (
ˇúo_t
 *
¸
,

144 
P™goLayout
 *
œyout
);

146 
	`∑ngo_ˇúo_îr‹_undîlöe_∑th
 (
ˇúo_t
 *
¸
,

147 
x
,

148 
y
,

149 
width
,

150 
height
);

152 
G_END_DECLS


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_GNU


70 
	mPTHREAD_MUTEX_STALLED_NP
,

71 
	mPTHREAD_MUTEX_ROBUST_NP


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_UNIX98


430 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

433 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

436 #ifde‡
__USE_GNU


441 
	$±hªad_yõld
 (Ë
__THROW
;

446 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

447 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3));

451 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

452 
˝u_£t_t
 *
__˝u£t
)

453 
__THROW
 
	`__n⁄nuŒ
 ((3));

466 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

467 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

478 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

482 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

485 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

490 
	`±hªad_ã°ˇn˚l
 ();

499 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

500 
__mask_was_ßved
;

501 } 
__ˇn˚l_jmp_buf
[1];

502 *
__∑d
[4];

503 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

506 #i‚de‡
__˛ónup_f˘_©åibuã


507 
	#__˛ónup_f˘_©åibuã


	)

512 
	s__±hªad_˛ónup_‰ame


514 (*
__ˇn˚l_routöe
) (*);

515 *
__ˇn˚l_¨g
;

516 
__do_ô
;

517 
__ˇn˚l_ty≥
;

520 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


521 #ifde‡
__˝lu•lus


523 ˛as†
	c__±hªad_˛ónup_˛ass


525 (*
__ˇn˚l_routöe
) (*);

526 *
__ˇn˚l_¨g
;

527 
__do_ô
;

528 
__ˇn˚l_ty≥
;

530 
public
:

531 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

532 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

533 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

534 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

535 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

536 &
__ˇn˚l_ty≥
); 
	}
}

537 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

547 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

549 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

553 
	#±hªad_˛ónup_p›
(
execuã
) \

554 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

555 } 0)

	)

557 #ifde‡
__USE_GNU


561 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

563 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

564 
__˛‰ame
.
	`__de„r
 ()

	)

569 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

570 
__˛‰ame
.
	`__ª°‹e
 (); \

571 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

572 } 0)

	)

579 
__exã∫_ölöe
 

580 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

582 i‡(
__‰ame
->
__do_ô
)

583 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

584 
	}
}

593 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

595 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

596 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

597 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

598 .
__do_ô
 = 1 };

	)

602 
	#±hªad_˛ónup_p›
(
execuã
) \

603 
__˛‰ame
.
__do_ô
 = (
execuã
); \

604 } 0)

	)

606 #ifde‡
__USE_GNU


610 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

612 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

613 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

614 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

615 .
__do_ô
 = 1 }; \

616 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

617 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

622 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

623 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

624 
__˛‰ame
.
__do_ô
 = (
execuã
); \

625 } 0)

	)

636 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

638 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

639 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

640 *
__ˇn˚l_¨g
 = (
¨g
); \

641 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

642 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

643 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

645 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

646 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

650 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

651 dÿ{

	)

652 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

653 
__˛ónup_f˘_©åibuã
;

657 
	#±hªad_˛ónup_p›
(
execuã
) \

660 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

661 i‡(
execuã
) \

662 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

663 } 0)

	)

664 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

667 #ifde‡
__USE_GNU


671 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

673 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

674 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

675 *
__ˇn˚l_¨g
 = (
¨g
); \

676 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

677 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

678 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

680 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

681 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

685 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

686 dÿ{

	)

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

688 
__˛ónup_f˘_©åibuã
;

693 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

696 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

697 i‡(
execuã
) \

698 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

699 
	}
} 0)

	)

700 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

701 
__˛ónup_f˘_©åibuã
;

705 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

706 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

707 #i‚de‡
SHARED


708 
	`__©åibuã__
 ((
__wók__
))

714 
__jmp_buf_èg
;

715 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

721 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

722 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

723 
__THROW
 
	`__n⁄nuŒ
 ((1));

726 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

727 
__THROW
 
	`__n⁄nuŒ
 ((1));

730 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

731 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

737 #ifde‡
__USE_XOPEN2K


739 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

740 
__c⁄°
 
time•ec
 *
__ª°ri˘


741 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

745 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_UNIX98


751 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

752 
__ª°ri˘
 
__muãx
,

753 *
__ª°ri˘
 
__¥io˚ûög
)

754 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

758 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 
__¥io˚ûög
,

760 *
__ª°ri˘
 
__ﬁd_˚ûög
)

761 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

765 #ifde‡
__USE_GNU


767 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

768 
__THROW
 
	`__n⁄nuŒ
 ((1));

776 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1));

780 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

784 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

785 
__ª°ri˘
 
__©å
,

786 *
__ª°ri˘
 
__psh¨ed
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

790 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

791 
__psh¨ed
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_UNIX98


796 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


797 
__©å
, *
__ª°ri˘
 
__köd
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

803 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1));

807 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

808 
__ª°ri˘
 
__©å
,

809 *
__ª°ri˘
 
__¥Ÿocﬁ
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

814 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

815 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1));

819 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

820 
__ª°ri˘
 
__©å
,

821 *
__ª°ri˘
 
__¥io˚ûög
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

825 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

826 
__¥io˚ûög
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_GNU


832 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

833 *
__robu°√ss
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

837 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

838 
__robu°√ss
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1));

843 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


848 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

849 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


850 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

853 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

857 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

864 #ifde‡
__USE_XOPEN2K


866 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

867 
__c⁄°
 
time•ec
 *
__ª°ri˘


868 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

873 
__THROW
 
	`__n⁄nuŒ
 ((1));

876 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

877 
__THROW
 
	`__n⁄nuŒ
 ((1));

879 #ifde‡
__USE_XOPEN2K


881 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

882 
__c⁄°
 
time•ec
 *
__ª°ri˘


883 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

887 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

888 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

895 
__THROW
 
	`__n⁄nuŒ
 ((1));

898 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1));

902 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

903 
__ª°ri˘
 
__©å
,

904 *
__ª°ri˘
 
__psh¨ed
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

908 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

909 
__psh¨ed
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1));

913 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

914 
__ª°ri˘
 
__©å
,

915 *
__ª°ri˘
 
__¥ef
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

919 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

920 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

929 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


930 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

950 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

951 
	`__n⁄nuŒ
 ((1, 2));

960 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

961 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

962 
__c⁄°
 
time•ec
 *
__ª°ri˘


963 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

968 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

969 
__THROW
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1));

976 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

977 
__ª°ri˘
 
__©å
,

978 *
__ª°ri˘
 
__psh¨ed
)

979 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

982 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

983 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

985 #ifde‡
__USE_XOPEN2K


987 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

988 
__ª°ri˘
 
__©å
,

989 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

990 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

993 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

994 
__˛ockid_t
 
__˛ock_id
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1));

999 #ifde‡
__USE_XOPEN2K


1004 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1005 
__THROW
 
	`__n⁄nuŒ
 ((1));

1008 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1017 
__THROW
 
	`__n⁄nuŒ
 ((1));

1020 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1029 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1030 
__©å
, 
__cou¡
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1));

1034 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1038 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1044 
__THROW
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1048 
__THROW
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1052 
__ª°ri˘
 
__©å
,

1053 *
__ª°ri˘
 
__psh¨ed
)

1054 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1057 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1058 
__psh¨ed
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1072 (*
__de°r_fun˘i⁄
) (*))

1073 
__THROW
 
	`__n⁄nuŒ
 ((1));

1076 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1079 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1082 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1083 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1086 #ifde‡
__USE_XOPEN2K


1088 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1089 
__˛ockid_t
 *
__˛ock_id
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((2));

1105 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1106 (*
__∑ª¡
) (),

1107 (*
__chûd
Ë()Ë
__THROW
;

1110 #ifde‡
__USE_EXTERN_INLINES


1112 
__exã∫_ölöe
 

1113 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1115  
__thªad1
 =
__thªad2
;

1116 
	}
}

1119 
	g__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_GNU


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/glib-2.0/gio/gemblem.h

22 #i‡!
deföed
 (
__GIO_GIO_H_INSIDE__
Ë&& !deföed (
GIO_COMPILATION
)

26 #i‚de‡
__G_EMBLEM_H__


27 
	#__G_EMBLEM_H__


	)

29 
	~<gio/gi€nums.h
>

31 
	gG_BEGIN_DECLS


33 
	#G_TYPE_EMBLEM
 (
	`g_embÀm_gë_ty≥
 ())

	)

34 
	#G_EMBLEM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_CAST
 ((o), 
G_TYPE_EMBLEM
, 
GEmbÀm
))

	)

35 
	#G_EMBLEM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_CAST
((k), 
G_TYPE_EMBLEM
, 
GEmbÀmCœss
))

	)

36 
	#G_IS_EMBLEM
(
o
Ë(
	`G_TYPE_CHECK_INSTANCE_TYPE
 ((o), 
G_TYPE_EMBLEM
))

	)

37 
	#G_IS_EMBLEM_CLASS
(
k
Ë(
	`G_TYPE_CHECK_CLASS_TYPE
 ((k), 
G_TYPE_EMBLEM
))

	)

38 
	#G_EMBLEM_GET_CLASS
(
o
Ë(
	`G_TYPE_INSTANCE_GET_CLASS
 ((o), 
G_TYPE_EMBLEM
, 
GEmbÀmCœss
))

	)

45 
_GEmbÀm
 
	tGEmbÀm
;

46 
_GEmbÀmCœss
 
	tGEmbÀmCœss
;

48 
GTy≥
 
	$g_embÀm_gë_ty≥
 (Ë
G_GNUC_CONST
;

50 
GEmbÀm
 *
	`g_embÀm_√w
 (
GIc⁄
 *
ic⁄
);

51 
GEmbÀm
 *
	`g_embÀm_√w_wôh_‹igö
 (
GIc⁄
 *
ic⁄
,

52 
GEmbÀmOrigö
 
‹igö
);

53 
GIc⁄
 *
	`g_embÀm_gë_ic⁄
 (
GEmbÀm
 *
embÀm
);

54 
GEmbÀmOrigö
 
	`g_embÀm_gë_‹igö
 (
GEmbÀm
 *
embÀm
);

56 
G_END_DECLS


	@/usr/include/glib-2.0/gmodule.h

27 #i‚de‡
__GMODULE_H__


28 
	#__GMODULE_H__


	)

30 
	~<glib.h
>

32 
	gG_BEGIN_DECLS


37 
	#G_MODULE_IMPORT
 

	)

38 #ifde‡
G_PLATFORM_WIN32


39 
	#G_MODULE_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

41 
	#G_MODULE_EXPORT


	)

46 
G_MODULE_BIND_LAZY
 = 1 << 0,

47 
G_MODULE_BIND_LOCAL
 = 1 << 1,

48 
G_MODULE_BIND_MASK
 = 0x03

49 } 
	tGModuÀFœgs
;

51 
_GModuÀ
 
	tGModuÀ
;

52 c⁄° 
	tgch¨
* (*
	tGModuÀCheckInô
Ë(
	tGModuÀ
 *
	tmoduÀ
);

53 (*
	tGModuÀU∆ﬂd
Ë(
	tGModuÀ
 *
	tmoduÀ
);

55 #ifde‡
G_OS_WIN32


56 
	#g_moduÀ_›í
 
g_moduÀ_›í_utf8


	)

57 
	#g_moduÀ_«me
 
g_moduÀ_«me_utf8


	)

61 
gboﬁón
 
	$g_moduÀ_suµ‹ãd
 (Ë
G_GNUC_CONST
;

64 
GModuÀ
* 
	`g_moduÀ_›í
 (c⁄° 
gch¨
 *
fûe_«me
,

65 
GModuÀFœgs
 
Êags
);

68 
gboﬁón
 
	`g_moduÀ_˛o£
 (
GModuÀ
 *
moduÀ
);

71 
	`g_moduÀ_make_ªsidít
 (
GModuÀ
 *
moduÀ
);

74 
G_CONST_RETURN
 
gch¨
* 
	`g_moduÀ_îr‹
 ();

77 
gboﬁón
 
	`g_moduÀ_symbﬁ
 (
GModuÀ
 *
moduÀ
,

78 c⁄° 
gch¨
 *
symbﬁ_«me
,

79 
gpoöãr
 *
symbﬁ
);

82 
G_CONST_RETURN
 
gch¨
* 
	`g_moduÀ_«me
 (
GModuÀ
 *
moduÀ
);

95 
gch¨
* 
	`g_moduÀ_buûd_∑th
 (c⁄° gch¨ *
dúe˘‹y
,

96 c⁄° 
gch¨
 *
moduÀ_«me
);

99 
G_END_DECLS


	@/usr/include/orbit-2.0/orbit/orb-core/corba-pobj.h

1 #i‚de‡
CORBA_POBJ_H


2 
	#CORBA_POBJ_H
 1

	)

4 
	~<‹bô/utû/‹bô-utû.h
>

5 
	~<‹bô/‹b-c‹e/c‹ba-ty≥code-ty≥.h
>

	@/usr/include/orbit-2.0/orbit/poa/orbit-adaptor.h

1 #i‚de‡
__ORBIT_ADAPTOR_H__


2 
	#__ORBIT_ADAPTOR_H__


	)

4 
	~<glib.h
>

5 
	~<°d¨g.h
>

7 
G_BEGIN_DECLS


10 
	mORBIT_THREAD_HINT_NONE
 = 0,

11 
	mORBIT_THREAD_HINT_PER_OBJECT
,

12 
	mORBIT_THREAD_HINT_PER_REQUEST
,

13 
	mORBIT_THREAD_HINT_PER_POA
,

14 
	mORBIT_THREAD_HINT_PER_CONNECTION
,

15 
	mORBIT_THREAD_HINT_ONEWAY_AT_IDLE
,

16 
	mORBIT_THREAD_HINT_ALL_AT_IDLE
,

17 
	mORBIT_THREAD_HINT_ON_CONTEXT


18 } 
	tORBôThªadHöt
;

20 
ORBô_Obje˘Ad≠t‹_ty≥
 *
	tORBô_Obje˘Ad≠t‹
;

22 
ORBô_Obje˘Ad≠t‹_£t_thªad_höt
 (
ORBô_Obje˘Ad≠t‹
 
ad≠t‹
,

23 
ORBôThªadHöt
 
thªad_höt
,

25 
ORBô_Obje˘Ad≠t‹_£t_thªad_hötv
 (
ORBô_Obje˘Ad≠t‹
 
ad≠t‹
,

26 
ORBôThªadHöt
 
thªad_höt
,

27 
va_li°
 
¨gs
);

28 
ORBôThªadHöt
 
ORBô_Obje˘Ad≠t‹_gë_thªad_höt
 (
ORBô_Obje˘Ad≠t‹
 
ad≠t‹
);

30 
ORBô_Obje˘Ad≠t‹_obje˘_böd_to_cuºít_thªad
 (
CORBA_Obje˘
 
obj
);

33 #ifde‡
ORBIT2_INTERNAL_API


35 
ORBô_h™dÀ_loˇã_ªque°
 (
CORBA_ORB
 
‹b
,

36 
GIOPRecvBuf„r
 *
ªcv_buf„r
);

38 
ORBô_h™dÀ_ªque°
 (
CORBA_ORB
 
‹b
,

39 
GIOPRecvBuf„r
 *
ªcv_buf„r
);

41 
ORBô_smÆl_h™dÀ_ªque°
 (
ORBô_OAObje˘
 
ad≠t‹_obj
,

42 
CORBA_Idítifõr
 
›«me
,

43 
gpoöãr
 
ªt
,

44 
gpoöãr
 *
¨gs
,

45 
CORBA_C⁄ãxt
 
˘x
,

46 
GIOPRecvBuf„r
 *
ªcv_buf„r
,

47 
CORBA_Envú⁄mít
 *
ev
);

49 
gboﬁón
 
ORBô_OAObje˘_is_a˘ive
 (
ORBô_OAObje˘
 
ad≠t‹_obj
);

51 
ORBô_Obje˘Key
 *
ORBô_OAObje˘_obje˘_to_objkey
 (
ORBô_OAObje˘
 
ad≠t‹_obj
);

53 
ORBô_OAObje˘_övoke
 (
ORBô_OAObje˘
 
ad≠t‹_obj
,

54 
gpoöãr
 
ªt
,

55 
gpoöãr
 *
¨gs
,

56 
CORBA_C⁄ãxt
 
˘x
,

57 
gpoöãr
 
d©a
,

58 
CORBA_Envú⁄mít
 *
ev
);

63 
	$gboﬁón
 (*
	tORBôSèãCheckFunc
Ë(
	tORBô_OAObje˘
 
	tad≠t‹_obj
);

65 
ORBô_Obje˘Key
 *(*
	tORBôKeyGíFunc
Ë(
	tORBô_OAObje˘
 
	tad≠t‹_obj
);

67 (*
	tORBôInvokeFunc
Ë(
	tORBô_OAObje˘
 
	tad≠t‹_obj
,

68 
	tgpoöãr
 
	tªt
,

69 
	tgpoöãr
 *
	t¨gs
,

70 
	tCORBA_C⁄ãxt
 
	t˘x
,

71 
	tgpoöãr
 
	td©a
,

72 
	tCORBA_Envú⁄mít
 *
	tev
);

74 (*
	tORBôReqFunc
Ë(
	tORBô_OAObje˘
 
	tad≠t‹_obj
,

75 
	tCORBA_Idítifõr
 
	t›«me
,

76 
	tgpoöãr
 
	tªt
,

77 
	tgpoöãr
 *
	t¨gs
,

78 
	tCORBA_C⁄ãxt
 
	t˘x
,

79 
	tGIOPRecvBuf„r
 *
	tªcv_buf„r
,

80 
	tCORBA_Envú⁄mít
 *
	tev
);

83 
ORBIT_ADAPTOR_POA
 = 1 << 0

84 } 
	tORBô_Ad≠t‹_ty≥
;

86 
	sORBô_OAObje˘_I¡îÁ˚_ty≥
 {

87 
ORBô_Ad≠t‹_ty≥
 
ad≠t‹_ty≥
;

89 
ORBôSèãCheckFunc
 
is_a˘ive
;

90 
ORBôKeyGíFunc
 
obje˘_to_objkey
;

91 
ORBôInvokeFunc
 
övoke
;

92 
ORBôReqFunc
 
h™dÀ_ªque°
;

95 
ORBô_OAObje˘_I¡îÁ˚_ty≥
 *
	tORBô_OAObje˘_I¡îÁ˚
;

97 
	sORBô_OAObje˘_ty≥
 {

98 
ORBô_RoŸObje˘_°ru˘
 
∑ª¡
;

100 
CORBA_Obje˘
 
objªf
;

102 
ORBô_OAObje˘_I¡îÁ˚
 
öãrÁ˚
;

109 
CORBA_£quí˚_CORBA_o˘ë
 
	tORBô_Ad≠t‹Key
;

111 (*
	tORBôReqH™dÀrFunc
Ë(
	tORBô_Obje˘Ad≠t‹
 
	tad≠t‹
,

112 
	tGIOPRecvBuf„r
 *
	tªcv_buf„r
,

113 
	tORBô_Obje˘Key
 *
	tobjkey
);

115 
	sORBô_Obje˘Ad≠t‹_ty≥
 {

116 
ORBô_RoŸObje˘_°ru˘
 
∑ª¡
;

118 
GMuãx
 *
lock
;

120 
ORBôReqH™dÀrFunc
 
h™dÀ_ªque°
;

122 
ORBô_Ad≠t‹Key
 
ad≠t‹_key
;

124 
ORBôThªadHöt
 
thªad_höt
;

126 
GMaöC⁄ãxt
 *
c⁄ãxt
;

129 
	`ORBô_ad≠t‹_£tup
 (
ORBô_Obje˘Ad≠t‹
 
ad≠t‹
, 
CORBA_ORB
 
‹b
);

133 
G_END_DECLS


	@/usr/include/pango-1.0/pango/pango-language.h

22 #i‚de‡
__PANGO_LANGUAGE_H__


23 
	#__PANGO_LANGUAGE_H__


	)

25 
	~<glib.h
>

26 
	~<glib-obje˘.h
>

28 
G_BEGIN_DECLS


30 
_P™goL™guage
 
	tP™goL™guage
;

32 
	#PANGO_TYPE_LANGUAGE
 (
	`∑ngo_œnguage_gë_ty≥
 ())

	)

34 
GTy≥
 
	$∑ngo_œnguage_gë_ty≥
 (Ë
G_GNUC_CONST
;

35 
P™goL™guage
 *
	`∑ngo_œnguage_‰om_°rög
 (c⁄° *
œnguage
);

37 
G_CONST_RETURN
 *
	$∑ngo_œnguage_to_°rög
 (
P™goL™guage
 *
œnguage
Ë
G_GNUC_CONST
;

39 
	#∑ngo_œnguage_to_°rög
(
œnguage
Ë((c⁄° *Ó™guage)

	)

41 
G_CONST_RETURN
 *
	$∑ngo_œnguage_gë_ßm∂e_°rög
 (
P™goL™guage
 *
œnguage
Ë
G_GNUC_CONST
;

42 
P™goL™guage
 *
	$∑ngo_œnguage_gë_deÁu…
 (Ë
G_GNUC_CONST
;

44 
gboﬁón
 
	$∑ngo_œnguage_m©ches
 (
P™goL™guage
 *
œnguage
,

45 c⁄° *
ønge_li°
Ë
G_GNUC_PURE
;

47 
	~<∑ngo/∑ngo-s¸ùt.h
>

49 
gboﬁón
 
	$∑ngo_œnguage_ö˛udes_s¸ùt
 (
P™goL™guage
 *
œnguage
,

50 
P™goS¸ùt
 
s¸ùt
Ë
G_GNUC_PURE
;

51 
G_CONST_RETURN
 
P™goS¸ùt
 *
	`∑ngo_œnguage_gë_s¸ùts
 (
P™goL™guage
 *
œnguage
,

52 *
num_s¸ùts
);

54 
G_END_DECLS


	@/usr/include/popt.h

9 #i‚de‡
H_POPT


10 
	#H_POPT


	)

12 
	~<°dio.h
>

14 
	#POPT_OPTION_DEPTH
 10

	)

20 
	#POPT_ARG_NONE
 0U

	)

21 
	#POPT_ARG_STRING
 1U

	)

22 
	#POPT_ARG_INT
 2U

	)

23 
	#POPT_ARG_LONG
 3U

	)

24 
	#POPT_ARG_INCLUDE_TABLE
 4U

	)

25 
	#POPT_ARG_CALLBACK
 5U

	)

29 
	#POPT_ARG_INTL_DOMAIN
 6U

	)

33 
	#POPT_ARG_VAL
 7U

	)

34 
	#POPT_ARG_FLOAT
 8U

	)

35 
	#POPT_ARG_DOUBLE
 9U

	)

36 
	#POPT_ARG_LONGLONG
 10U

	)

38 
	#POPT_ARG_MAINCALL
 16U+11U

	)

39 
	#POPT_ARG_ARGV
 12U

	)

41 
	#POPT_ARG_MASK
 0x0000FFFFU

	)

48 
	#POPT_ARGFLAG_ONEDASH
 0x80000000U

	)

49 
	#POPT_ARGFLAG_DOC_HIDDEN
 0x40000000U

	)

50 
	#POPT_ARGFLAG_STRIP
 0x20000000U

	)

51 
	#POPT_ARGFLAG_OPTIONAL
 0x10000000U

	)

53 
	#POPT_ARGFLAG_OR
 0x08000000U

	)

54 
	#POPT_ARGFLAG_NOR
 0x09000000U

	)

55 
	#POPT_ARGFLAG_AND
 0x04000000U

	)

56 
	#POPT_ARGFLAG_NAND
 0x05000000U

	)

57 
	#POPT_ARGFLAG_XOR
 0x02000000U

	)

58 
	#POPT_ARGFLAG_NOT
 0x01000000U

	)

59 
	#POPT_ARGFLAG_LOGICALOPS
 \

60 (
POPT_ARGFLAG_OR
|
POPT_ARGFLAG_AND
|
POPT_ARGFLAG_XOR
)

	)

62 
	#POPT_BIT_SET
 (
POPT_ARG_VAL
|
POPT_ARGFLAG_OR
)

	)

64 
	#POPT_BIT_CLR
 (
POPT_ARG_VAL
|
POPT_ARGFLAG_NAND
)

	)

67 
	#POPT_ARGFLAG_SHOW_DEFAULT
 0x00800000U

	)

68 
	#POPT_ARGFLAG_RANDOM
 0x00400000U

	)

76 
	#POPT_CBFLAG_PRE
 0x80000000U

	)

77 
	#POPT_CBFLAG_POST
 0x40000000U

	)

78 
	#POPT_CBFLAG_INC_DATA
 0x20000000U

	)

80 
	#POPT_CBFLAG_SKIPOPTION
 0x10000000U

	)

81 
	#POPT_CBFLAG_CONTINUE
 0x08000000U

	)

88 
	#POPT_ERROR_NOARG
 -10

	)

89 
	#POPT_ERROR_BADOPT
 -11

	)

90 
	#POPT_ERROR_OPTSTOODEEP
 -13

	)

91 
	#POPT_ERROR_BADQUOTE
 -15

	)

92 
	#POPT_ERROR_ERRNO
 -16

	)

93 
	#POPT_ERROR_BADNUMBER
 -17

	)

94 
	#POPT_ERROR_OVERFLOW
 -18

	)

95 
	#POPT_ERROR_BADOPERATION
 -19

	)

96 
	#POPT_ERROR_NULLARG
 -20

	)

97 
	#POPT_ERROR_MALLOC
 -21

	)

104 
	#POPT_BADOPTION_NOALIAS
 (1U << 0Ë

	)

111 
	#POPT_CONTEXT_NO_EXEC
 (1U << 0Ë

	)

112 
	#POPT_CONTEXT_KEEP_FIRST
 (1U << 1Ë

	)

113 
	#POPT_CONTEXT_POSIXMEHARDER
 (1U << 2Ë

	)

114 
	#POPT_CONTEXT_ARG_OPTS
 (1U << 4Ë

	)

119 
	sp›tO±i⁄
 {

121 c⁄° * 
	ml⁄gName
;

122 
	msh‹tName
;

123 
	m¨gInfo
;

125 * 
	m¨g
;

126 
	mvÆ
;

128 c⁄° * 
	mdes¸ù
;

130 c⁄° * 
	m¨gDes¸ù
;

136 
	sp›tAlüs
 {

138 c⁄° * 
	ml⁄gName
;

139 
	msh‹tName
;

140 
	m¨gc
;

142 c⁄° ** 
	m¨gv
;

149 
	sp›tIãm_s
 {

150 
p›tO±i⁄
 
	m›ti⁄
;

151 
	m¨gc
;

153 c⁄° ** 
	m¨gv
;

154 } * 
	tp›tIãm
;

167 
p›tO±i⁄
 
p›tAlüsO±i⁄s
[];

169 
	#POPT_AUTOALIAS
 { 
NULL
, '\0', 
POPT_ARG_INCLUDE_TABLE
, 
p›tAlüsO±i⁄s
, \

170 0, "O±i⁄†im∂emíãd vüÖ›àÆüs/exec:", 
NULL
 },

	)

177 
p›tO±i⁄
 
p›tHñpO±i⁄s
[];

182 
p›tO±i⁄
 * 
p›tHñpO±i⁄sI18N
;

185 
	#POPT_AUTOHELP
 { 
NULL
, '\0', 
POPT_ARG_INCLUDE_TABLE
, 
p›tHñpO±i⁄s
, \

186 0, "Hñ∞›ti⁄s:", 
NULL
 },

	)

188 
	#POPT_TABLEEND
 { 
NULL
, '\0', 0, NULL, 0, NULL, NULL }

	)

194 
p›tC⁄ãxt_s
 * 
	tp›tC⁄ãxt
;

199 #i‚de‡
__˝lu•lus


201 
p›tO±i⁄
 * 
	tp›tO±i⁄
;

208 
	ep›tCÆlbackRós⁄
 {

209 
	mPOPT_CALLBACK_REASON_PRE
 = 0,

210 
	mPOPT_CALLBACK_REASON_POST
 = 1,

211 
	mPOPT_CALLBACK_REASON_OPTION
 = 2

215 #ifde‡
__˝lu•lus


228 (*
p›tCÆlbackTy≥
Ë(
	tp›tC⁄ãxt
 
	tc⁄
,

229 
	tp›tCÆlbackRós⁄
 
	tªas⁄
,

230  c⁄° 
	tp›tO±i⁄
 * 
	t›t
,

231  c⁄° * 
	t¨g
,

232  c⁄° * 
	td©a
)

246 
p›tC⁄ãxt
 
p›tGëC⁄ãxt
(

247  c⁄° * 
«me
,

248 
¨gc
, c⁄° ** 
¨gv
,

249  c⁄° 
p›tO±i⁄
 * 
›ti⁄s
,

250 
Êags
)

259 
p›tRe£tC⁄ãxt
–
p›tC⁄ãxt
 
c⁄
)

267 
p›tGëNextO±
–
p›tC⁄ãxt
 
c⁄
)

277 * 
p›tGëO±Arg
–
p›tC⁄ãxt
 
c⁄
)

286 c⁄° * 
p›tGëArg
–
p›tC⁄ãxt
 
c⁄
)

295 c⁄° * 
p›tPìkArg
–
p›tC⁄ãxt
 
c⁄
)

304 c⁄° ** 
p›tGëArgs
–
p›tC⁄ãxt
 
c⁄
)

314 c⁄° * 
p›tBadO±i⁄
–
p›tC⁄ãxt
 
c⁄
, 
Êags
)

323 
p›tC⁄ãxt
 
p›tFªeC⁄ãxt
–Ö›tC⁄ãxà
c⁄
)

333 
p›tStuffArgs
(
p›tC⁄ãxt
 
c⁄
, c⁄° ** 
¨gv
)

346 
p›tAddAlüs
(
p›tC⁄ãxt
 
c⁄
, 
p›tAlüs
 
Æüs
, 
Êags
)

356 
p›tAddIãm
(
p›tC⁄ãxt
 
c⁄
, 
p›tIãm
 
√wIãm
, 
Êags
)

365 
p›tRódC⁄figFûe
(
p›tC⁄ãxt
 
c⁄
, c⁄° * 
‚
)

377 
p›tRódDeÁu…C⁄fig
(
p›tC⁄ãxt
 
c⁄
, 
u£Env
)

393 
p›tDupArgv
(
¨gc
, c⁄° **
¨gv
,

394  * 
¨gcPå
,

395  c⁄° *** 
¨gvPå
)

409 
p›tP¨£ArgvSåög
(c⁄° * 
s
,

410  * 
¨gcPå
, c⁄° *** 
¨gvPå
)

460 
p›tC⁄figFûeToSåög
(
FILE
 *
Â
, ** 
¨g°Ω
, 
Êags
)

471 c⁄° * 
p›tSåîr‹
(c⁄° 
îr‹
)

481 
p›tSëExecP©h
(
p›tC⁄ãxt
 
c⁄
, c⁄° * 
∑th
, 
ÆlowAbsﬁuã
)

490 
p›tPrötHñp
(
p›tC⁄ãxt
 
c⁄
, 
FILE
 * 
Â
, 
Êags
)

500 
p›tPrötUßge
(
p›tC⁄ãxt
 
c⁄
, 
FILE
 * 
Â
, 
Êags
)

510 
p›tSëOthîO±i⁄Hñp
(
p›tC⁄ãxt
 
c⁄
, c⁄° * 
ãxt
)

521 c⁄° * 
p›tGëInvoˇti⁄Name
(
p›tC⁄ãxt
 
c⁄
)

533 
p›tSåù≥dArgv
(
p›tC⁄ãxt
 
c⁄
, 
¨gc
, ** 
¨gv
)

545 
p›tSaveSåög
–c⁄° *** 
¨gvp
, 
¨gInfo
,

546 c⁄° * 
vÆ
)

559 
p›tSaveL⁄gL⁄g
–* 
¨g
, 
¨gInfo
,

560 
aL⁄gL⁄g
)

576 
p›tSaveL⁄g
–* 
¨g
, 
¨gInfo
, 
aL⁄g
)

592 
p›tSaveI¡
–* 
¨g
, 
¨gInfo
, 
aL⁄g
)

599 #ifde‡ 
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__¨r
->
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] |
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

144 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 < 8 * (
£tsize
) \

148 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] &~
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

149 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] & 
	`__CPUMASK
 (__cpu))) != 0 \

154 : 0; }))

	)

156 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

157 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

159 #i‡
__GNUC_PREREQ
 (2, 91)

160 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

161 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

163 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

164 (
__exãnsi⁄__
 \

165 ({ 
˝u_£t_t
 *
__¨r1
 = (
˝u£ç1
); \

166 
˝u_£t_t
 *
__¨r2
 = (
˝u£ç2
); \

167 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

168 
size_t
 
__i
; \

169 
__i
 = 0; __ò< 
__imax
; ++__i) \

170 i‡(
__¨r1
->
__bôs
[
__i
] !
__¨r2
->__bits[__i]) \

172 
__i
 =
__imax
; }))

	)

175 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

176 (
__exãnsi⁄__
 \

177 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

178 
˝u_£t_t
 *
__¨r1
 = (
§c£t1
); \

179 
˝u_£t_t
 *
__¨r2
 = (
§c£t2
); \

180 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

181 
size_t
 
__i
; \

182 
__i
 = 0; __ò< 
__imax
; ++__i) \

183 
__de°
->
__bôs
[
__i
] = 
__¨r1
->__bôs[__i] 
›
 
__¨r2
->__bits[__i]; \

184 
__de°
; }))

	)

186 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

187 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

188 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

189 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

191 
__BEGIN_DECLS


193 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

194 
__THROW
;

195 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

196 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

198 
__END_DECLS


	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@
1
.
27
/usr/include/panel-2.0
/usr/include/gconf/2
/usr/include/gtk-2.0
/usr/include/libbonoboui-2.0
/usr/include/orbit-2.0
/usr/include/dbus-1.0
/usr/lib/dbus-1.0/include
/usr/include/glib-2.0
/usr/lib/glib-2.0/include
/usr/lib/gtk-2.0/include
/usr/include/atk-1.0
/usr/include/cairo
/usr/include/pango-1.0
/usr/include/pixman-1
/usr/include/freetype2
/usr/include/directfb
/usr/include/libpng12
/usr/include/libxml2
/usr/include/libbonobo-2.0
/usr/include/libgnomecanvas-2.0
/usr/include/libgnome-2.0
/usr/include/bonobo-activation-2.0
/usr/include/gail-1.0
/usr/include/libart-2.0
/usr/include/gnome-vfs-2.0
/usr/lib/gnome-vfs-2.0/include
/usr/include
559
22356
gtempapplet.cpp
/usr/include/gtk-2.0/gtk/gtklabel.h
/usr/include/panel-2.0/panel-applet.h
/usr/include/stdio.h
/usr/include/string.h
CMainApp.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/glib-2.0/glib.h
/usr/include/gtk-2.0/gtk/gtk.h
/usr/include/gtk-2.0/gtk/gtkmenu.h
/usr/include/gtk-2.0/gtk/gtkmisc.h
/usr/include/gtk-2.0/gtk/gtkwindow.h
/usr/include/libbonobo-2.0/bonobo/bonobo-generic-factory.h
/usr/include/libbonobo-2.0/bonobo/bonobo-main.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-control.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-component.h
/usr/include/libintl.h
/usr/include/libio.h
/usr/include/panel-2.0/GNOME_Panel.h
/usr/include/xlocale.h
CPrefs.h
CTempReader.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/bonobo-activation-2.0/bonobo-activation/Bonobo_Unknown.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/glib-2.0/glib-object.h
/usr/include/glib-2.0/glib/galloca.h
/usr/include/glib-2.0/glib/garray.h
/usr/include/glib-2.0/glib/gasyncqueue.h
/usr/include/glib-2.0/glib/gatomic.h
/usr/include/glib-2.0/glib/gbacktrace.h
/usr/include/glib-2.0/glib/gbase64.h
/usr/include/glib-2.0/glib/gbookmarkfile.h
/usr/include/glib-2.0/glib/gcache.h
/usr/include/glib-2.0/glib/gchecksum.h
/usr/include/glib-2.0/glib/gcompletion.h
/usr/include/glib-2.0/glib/gconvert.h
/usr/include/glib-2.0/glib/gdataset.h
/usr/include/glib-2.0/glib/gdate.h
/usr/include/glib-2.0/glib/gdir.h
/usr/include/glib-2.0/glib/gerror.h
/usr/include/glib-2.0/glib/gfileutils.h
/usr/include/glib-2.0/glib/ghash.h
/usr/include/glib-2.0/glib/ghook.h
/usr/include/glib-2.0/glib/giochannel.h
/usr/include/glib-2.0/glib/gkeyfile.h
/usr/include/glib-2.0/glib/glist.h
/usr/include/glib-2.0/glib/gmacros.h
/usr/include/glib-2.0/glib/gmain.h
/usr/include/glib-2.0/glib/gmappedfile.h
/usr/include/glib-2.0/glib/gmarkup.h
/usr/include/glib-2.0/glib/gmem.h
/usr/include/glib-2.0/glib/gmessages.h
/usr/include/glib-2.0/glib/gnode.h
/usr/include/glib-2.0/glib/goption.h
/usr/include/glib-2.0/glib/gpattern.h
/usr/include/glib-2.0/glib/gpoll.h
/usr/include/glib-2.0/glib/gprimes.h
/usr/include/glib-2.0/glib/gqsort.h
/usr/include/glib-2.0/glib/gquark.h
/usr/include/glib-2.0/glib/gqueue.h
/usr/include/glib-2.0/glib/grand.h
/usr/include/glib-2.0/glib/gregex.h
/usr/include/glib-2.0/glib/grel.h
/usr/include/glib-2.0/glib/gscanner.h
/usr/include/glib-2.0/glib/gsequence.h
/usr/include/glib-2.0/glib/gshell.h
/usr/include/glib-2.0/glib/gslice.h
/usr/include/glib-2.0/glib/gslist.h
/usr/include/glib-2.0/glib/gspawn.h
/usr/include/glib-2.0/glib/gstrfuncs.h
/usr/include/glib-2.0/glib/gstring.h
/usr/include/glib-2.0/glib/gtestutils.h
/usr/include/glib-2.0/glib/gthread.h
/usr/include/glib-2.0/glib/gthreadpool.h
/usr/include/glib-2.0/glib/gtimer.h
/usr/include/glib-2.0/glib/gtree.h
/usr/include/glib-2.0/glib/gtypes.h
/usr/include/glib-2.0/glib/gunicode.h
/usr/include/glib-2.0/glib/gurifuncs.h
/usr/include/glib-2.0/glib/gutils.h
/usr/include/glib-2.0/glib/gwin32.h
/usr/include/gnu/stubs.h
/usr/include/gtk-2.0/gdk/gdk.h
/usr/include/gtk-2.0/gtk/gtkaboutdialog.h
/usr/include/gtk-2.0/gtk/gtkaccelgroup.h
/usr/include/gtk-2.0/gtk/gtkaccellabel.h
/usr/include/gtk-2.0/gtk/gtkaccelmap.h
/usr/include/gtk-2.0/gtk/gtkaccessible.h
/usr/include/gtk-2.0/gtk/gtkaction.h
/usr/include/gtk-2.0/gtk/gtkactiongroup.h
/usr/include/gtk-2.0/gtk/gtkactivatable.h
/usr/include/gtk-2.0/gtk/gtkadjustment.h
/usr/include/gtk-2.0/gtk/gtkalignment.h
/usr/include/gtk-2.0/gtk/gtkarrow.h
/usr/include/gtk-2.0/gtk/gtkaspectframe.h
/usr/include/gtk-2.0/gtk/gtkassistant.h
/usr/include/gtk-2.0/gtk/gtkbbox.h
/usr/include/gtk-2.0/gtk/gtkbin.h
/usr/include/gtk-2.0/gtk/gtkbindings.h
/usr/include/gtk-2.0/gtk/gtkbox.h
/usr/include/gtk-2.0/gtk/gtkbuildable.h
/usr/include/gtk-2.0/gtk/gtkbuilder.h
/usr/include/gtk-2.0/gtk/gtkbutton.h
/usr/include/gtk-2.0/gtk/gtkcalendar.h
/usr/include/gtk-2.0/gtk/gtkcelleditable.h
/usr/include/gtk-2.0/gtk/gtkcelllayout.h
/usr/include/gtk-2.0/gtk/gtkcellrenderer.h
/usr/include/gtk-2.0/gtk/gtkcellrendereraccel.h
/usr/include/gtk-2.0/gtk/gtkcellrenderercombo.h
/usr/include/gtk-2.0/gtk/gtkcellrendererpixbuf.h
/usr/include/gtk-2.0/gtk/gtkcellrendererprogress.h
/usr/include/gtk-2.0/gtk/gtkcellrendererspin.h
/usr/include/gtk-2.0/gtk/gtkcellrenderertext.h
/usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h
/usr/include/gtk-2.0/gtk/gtkcellview.h
/usr/include/gtk-2.0/gtk/gtkcheckbutton.h
/usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h
/usr/include/gtk-2.0/gtk/gtkclipboard.h
/usr/include/gtk-2.0/gtk/gtkclist.h
/usr/include/gtk-2.0/gtk/gtkcolorbutton.h
/usr/include/gtk-2.0/gtk/gtkcolorsel.h
/usr/include/gtk-2.0/gtk/gtkcolorseldialog.h
/usr/include/gtk-2.0/gtk/gtkcombo.h
/usr/include/gtk-2.0/gtk/gtkcombobox.h
/usr/include/gtk-2.0/gtk/gtkcomboboxentry.h
/usr/include/gtk-2.0/gtk/gtkcontainer.h
/usr/include/gtk-2.0/gtk/gtkctree.h
/usr/include/gtk-2.0/gtk/gtkcurve.h
/usr/include/gtk-2.0/gtk/gtkdebug.h
/usr/include/gtk-2.0/gtk/gtkdialog.h
/usr/include/gtk-2.0/gtk/gtkdnd.h
/usr/include/gtk-2.0/gtk/gtkdrawingarea.h
/usr/include/gtk-2.0/gtk/gtkeditable.h
/usr/include/gtk-2.0/gtk/gtkentry.h
/usr/include/gtk-2.0/gtk/gtkentrycompletion.h
/usr/include/gtk-2.0/gtk/gtkenums.h
/usr/include/gtk-2.0/gtk/gtkeventbox.h
/usr/include/gtk-2.0/gtk/gtkexpander.h
/usr/include/gtk-2.0/gtk/gtkfilechooser.h
/usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h
/usr/include/gtk-2.0/gtk/gtkfilechooserdialog.h
/usr/include/gtk-2.0/gtk/gtkfilechooserwidget.h
/usr/include/gtk-2.0/gtk/gtkfilefilter.h
/usr/include/gtk-2.0/gtk/gtkfilesel.h
/usr/include/gtk-2.0/gtk/gtkfixed.h
/usr/include/gtk-2.0/gtk/gtkfontbutton.h
/usr/include/gtk-2.0/gtk/gtkfontsel.h
/usr/include/gtk-2.0/gtk/gtkframe.h
/usr/include/gtk-2.0/gtk/gtkgamma.h
/usr/include/gtk-2.0/gtk/gtkgc.h
/usr/include/gtk-2.0/gtk/gtkhandlebox.h
/usr/include/gtk-2.0/gtk/gtkhbbox.h
/usr/include/gtk-2.0/gtk/gtkhbox.h
/usr/include/gtk-2.0/gtk/gtkhpaned.h
/usr/include/gtk-2.0/gtk/gtkhruler.h
/usr/include/gtk-2.0/gtk/gtkhscale.h
/usr/include/gtk-2.0/gtk/gtkhscrollbar.h
/usr/include/gtk-2.0/gtk/gtkhseparator.h
/usr/include/gtk-2.0/gtk/gtkhsv.h
/usr/include/gtk-2.0/gtk/gtkiconfactory.h
/usr/include/gtk-2.0/gtk/gtkicontheme.h
/usr/include/gtk-2.0/gtk/gtkiconview.h
/usr/include/gtk-2.0/gtk/gtkimage.h
/usr/include/gtk-2.0/gtk/gtkimagemenuitem.h
/usr/include/gtk-2.0/gtk/gtkimcontext.h
/usr/include/gtk-2.0/gtk/gtkimcontextsimple.h
/usr/include/gtk-2.0/gtk/gtkimmulticontext.h
/usr/include/gtk-2.0/gtk/gtkinputdialog.h
/usr/include/gtk-2.0/gtk/gtkinvisible.h
/usr/include/gtk-2.0/gtk/gtkitem.h
/usr/include/gtk-2.0/gtk/gtkitemfactory.h
/usr/include/gtk-2.0/gtk/gtklayout.h
/usr/include/gtk-2.0/gtk/gtklinkbutton.h
/usr/include/gtk-2.0/gtk/gtklist.h
/usr/include/gtk-2.0/gtk/gtklistitem.h
/usr/include/gtk-2.0/gtk/gtkliststore.h
/usr/include/gtk-2.0/gtk/gtkmain.h
/usr/include/gtk-2.0/gtk/gtkmenubar.h
/usr/include/gtk-2.0/gtk/gtkmenuitem.h
/usr/include/gtk-2.0/gtk/gtkmenushell.h
/usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h
/usr/include/gtk-2.0/gtk/gtkmessagedialog.h
/usr/include/gtk-2.0/gtk/gtkmodules.h
/usr/include/gtk-2.0/gtk/gtkmountoperation.h
/usr/include/gtk-2.0/gtk/gtknotebook.h
/usr/include/gtk-2.0/gtk/gtkobject.h
/usr/include/gtk-2.0/gtk/gtkoldeditable.h
/usr/include/gtk-2.0/gtk/gtkoptionmenu.h
/usr/include/gtk-2.0/gtk/gtkorientable.h
/usr/include/gtk-2.0/gtk/gtkpagesetup.h
/usr/include/gtk-2.0/gtk/gtkpaned.h
/usr/include/gtk-2.0/gtk/gtkpapersize.h
/usr/include/gtk-2.0/gtk/gtkpixmap.h
/usr/include/gtk-2.0/gtk/gtkplug.h
/usr/include/gtk-2.0/gtk/gtkpreview.h
/usr/include/gtk-2.0/gtk/gtkprintcontext.h
/usr/include/gtk-2.0/gtk/gtkprintoperation.h
/usr/include/gtk-2.0/gtk/gtkprintoperationpreview.h
/usr/include/gtk-2.0/gtk/gtkprintsettings.h
/usr/include/gtk-2.0/gtk/gtkprogress.h
/usr/include/gtk-2.0/gtk/gtkprogressbar.h
/usr/include/gtk-2.0/gtk/gtkradioaction.h
/usr/include/gtk-2.0/gtk/gtkradiobutton.h
/usr/include/gtk-2.0/gtk/gtkradiomenuitem.h
/usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h
/usr/include/gtk-2.0/gtk/gtkrange.h
/usr/include/gtk-2.0/gtk/gtkrc.h
/usr/include/gtk-2.0/gtk/gtkrecentaction.h
/usr/include/gtk-2.0/gtk/gtkrecentchooser.h
/usr/include/gtk-2.0/gtk/gtkrecentchooserdialog.h
/usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h
/usr/include/gtk-2.0/gtk/gtkrecentchooserwidget.h
/usr/include/gtk-2.0/gtk/gtkrecentfilter.h
/usr/include/gtk-2.0/gtk/gtkrecentmanager.h
/usr/include/gtk-2.0/gtk/gtkruler.h
/usr/include/gtk-2.0/gtk/gtkscale.h
/usr/include/gtk-2.0/gtk/gtkscalebutton.h
/usr/include/gtk-2.0/gtk/gtkscrollbar.h
/usr/include/gtk-2.0/gtk/gtkscrolledwindow.h
/usr/include/gtk-2.0/gtk/gtkselection.h
/usr/include/gtk-2.0/gtk/gtkseparator.h
/usr/include/gtk-2.0/gtk/gtkseparatormenuitem.h
/usr/include/gtk-2.0/gtk/gtkseparatortoolitem.h
/usr/include/gtk-2.0/gtk/gtksettings.h
/usr/include/gtk-2.0/gtk/gtkshow.h
/usr/include/gtk-2.0/gtk/gtksignal.h
/usr/include/gtk-2.0/gtk/gtksizegroup.h
/usr/include/gtk-2.0/gtk/gtksocket.h
/usr/include/gtk-2.0/gtk/gtkspinbutton.h
/usr/include/gtk-2.0/gtk/gtkstatusbar.h
/usr/include/gtk-2.0/gtk/gtkstatusicon.h
/usr/include/gtk-2.0/gtk/gtkstock.h
/usr/include/gtk-2.0/gtk/gtkstyle.h
/usr/include/gtk-2.0/gtk/gtktable.h
/usr/include/gtk-2.0/gtk/gtktearoffmenuitem.h
/usr/include/gtk-2.0/gtk/gtktestutils.h
/usr/include/gtk-2.0/gtk/gtktext.h
/usr/include/gtk-2.0/gtk/gtktextbuffer.h
/usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h
/usr/include/gtk-2.0/gtk/gtktextchild.h
/usr/include/gtk-2.0/gtk/gtktextiter.h
/usr/include/gtk-2.0/gtk/gtktextmark.h
/usr/include/gtk-2.0/gtk/gtktexttag.h
/usr/include/gtk-2.0/gtk/gtktexttagtable.h
/usr/include/gtk-2.0/gtk/gtktextview.h
/usr/include/gtk-2.0/gtk/gtktipsquery.h
/usr/include/gtk-2.0/gtk/gtktoggleaction.h
/usr/include/gtk-2.0/gtk/gtktogglebutton.h
/usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h
/usr/include/gtk-2.0/gtk/gtktoolbar.h
/usr/include/gtk-2.0/gtk/gtktoolbutton.h
/usr/include/gtk-2.0/gtk/gtktoolitem.h
/usr/include/gtk-2.0/gtk/gtktoolshell.h
/usr/include/gtk-2.0/gtk/gtktooltip.h
/usr/include/gtk-2.0/gtk/gtktooltips.h
/usr/include/gtk-2.0/gtk/gtktree.h
/usr/include/gtk-2.0/gtk/gtktreednd.h
/usr/include/gtk-2.0/gtk/gtktreeitem.h
/usr/include/gtk-2.0/gtk/gtktreemodel.h
/usr/include/gtk-2.0/gtk/gtktreemodelfilter.h
/usr/include/gtk-2.0/gtk/gtktreemodelsort.h
/usr/include/gtk-2.0/gtk/gtktreeselection.h
/usr/include/gtk-2.0/gtk/gtktreesortable.h
/usr/include/gtk-2.0/gtk/gtktreestore.h
/usr/include/gtk-2.0/gtk/gtktreeview.h
/usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h
/usr/include/gtk-2.0/gtk/gtktypeutils.h
/usr/include/gtk-2.0/gtk/gtkuimanager.h
/usr/include/gtk-2.0/gtk/gtkvbbox.h
/usr/include/gtk-2.0/gtk/gtkvbox.h
/usr/include/gtk-2.0/gtk/gtkversion.h
/usr/include/gtk-2.0/gtk/gtkviewport.h
/usr/include/gtk-2.0/gtk/gtkvolumebutton.h
/usr/include/gtk-2.0/gtk/gtkvpaned.h
/usr/include/gtk-2.0/gtk/gtkvruler.h
/usr/include/gtk-2.0/gtk/gtkvscale.h
/usr/include/gtk-2.0/gtk/gtkvscrollbar.h
/usr/include/gtk-2.0/gtk/gtkvseparator.h
/usr/include/gtk-2.0/gtk/gtkwidget.h
/usr/include/libbonobo-2.0/bonobo/Bonobo.h
/usr/include/libbonobo-2.0/bonobo/bonobo-i18n.h
/usr/include/libbonobo-2.0/bonobo/bonobo-object.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-plug.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-container.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-node.h
/usr/include/locale.h
/usr/include/orbit-2.0/orbit/orb-core/orbit-interface.h
/usr/include/orbit-2.0/orbit/orbit-types.h
/usr/include/orbit-2.0/orbit/orbit.h
/usr/include/stdlib.h
/usr/include/sys/cdefs.h
/usr/include/alloca.h
/usr/include/atk-1.0/atk/atk.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/locale.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bonobo-activation-2.0/bonobo-activation/Bonobo_GenericFactory.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation.h
/usr/include/cairo/cairo.h
/usr/include/gconv.h
/usr/include/glib-2.0/gio/gio.h
/usr/include/glib-2.0/glib/gi18n-lib.h
/usr/include/glib-2.0/glib/gi18n.h
/usr/include/glib-2.0/gobject/gboxed.h
/usr/include/glib-2.0/gobject/genums.h
/usr/include/glib-2.0/gobject/gobject.h
/usr/include/glib-2.0/gobject/gparam.h
/usr/include/glib-2.0/gobject/gparamspecs.h
/usr/include/glib-2.0/gobject/gsignal.h
/usr/include/glib-2.0/gobject/gsourceclosure.h
/usr/include/glib-2.0/gobject/gtype.h
/usr/include/glib-2.0/gobject/gtypemodule.h
/usr/include/glib-2.0/gobject/gtypeplugin.h
/usr/include/glib-2.0/gobject/gvalue.h
/usr/include/glib-2.0/gobject/gvaluearray.h
/usr/include/glib-2.0/gobject/gvaluetypes.h
/usr/include/gnu/stubs-32.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf.h
/usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h
/usr/include/gtk-2.0/gdk/gdkcairo.h
/usr/include/gtk-2.0/gdk/gdkcolor.h
/usr/include/gtk-2.0/gdk/gdkcursor.h
/usr/include/gtk-2.0/gdk/gdkdisplay.h
/usr/include/gtk-2.0/gdk/gdkdisplaymanager.h
/usr/include/gtk-2.0/gdk/gdkdnd.h
/usr/include/gtk-2.0/gdk/gdkdrawable.h
/usr/include/gtk-2.0/gdk/gdkenumtypes.h
/usr/include/gtk-2.0/gdk/gdkevents.h
/usr/include/gtk-2.0/gdk/gdkfont.h
/usr/include/gtk-2.0/gdk/gdkgc.h
/usr/include/gtk-2.0/gdk/gdkimage.h
/usr/include/gtk-2.0/gdk/gdkinput.h
/usr/include/gtk-2.0/gdk/gdkkeys.h
/usr/include/gtk-2.0/gdk/gdkpango.h
/usr/include/gtk-2.0/gdk/gdkpixbuf.h
/usr/include/gtk-2.0/gdk/gdkpixmap.h
/usr/include/gtk-2.0/gdk/gdkproperty.h
/usr/include/gtk-2.0/gdk/gdkregion.h
/usr/include/gtk-2.0/gdk/gdkrgb.h
/usr/include/gtk-2.0/gdk/gdkscreen.h
/usr/include/gtk-2.0/gdk/gdkselection.h
/usr/include/gtk-2.0/gdk/gdkspawn.h
/usr/include/gtk-2.0/gdk/gdktestutils.h
/usr/include/gtk-2.0/gdk/gdktypes.h
/usr/include/gtk-2.0/gdk/gdkvisual.h
/usr/include/gtk-2.0/gdk/gdkwindow.h
/usr/include/gtk-2.0/gtk/gtkmarshal.h
/usr/include/gtk-2.0/gtk/gtktypebuiltins.h
/usr/include/libbonobo-2.0/bonobo/bonobo-macros.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-engine.h
/usr/include/malloc.h
/usr/include/orbit-2.0/orbit/dynamic/dynamic.h
/usr/include/orbit-2.0/orbit/orb-core/orb-core-types.h
/usr/include/orbit-2.0/orbit/orb-core/orb-core.h
/usr/include/orbit-2.0/orbit/orbit-config.h
/usr/include/orbit-2.0/orbit/poa/poa-basics.h
/usr/include/orbit-2.0/orbit/poa/poa.h
/usr/include/orbit-2.0/orbit/util/orbit-util.h
/usr/include/pango-1.0/pango/pango.h
/usr/include/signal.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/wchar.h
/usr/lib/glib-2.0/include/glibconfig.h
/usr/lib/gtk-2.0/include/gdkconfig.h
/usr/include/atk-1.0/atk/atkaction.h
/usr/include/atk-1.0/atk/atkcomponent.h
/usr/include/atk-1.0/atk/atkdocument.h
/usr/include/atk-1.0/atk/atkeditabletext.h
/usr/include/atk-1.0/atk/atkgobjectaccessible.h
/usr/include/atk-1.0/atk/atkhyperlink.h
/usr/include/atk-1.0/atk/atkhyperlinkimpl.h
/usr/include/atk-1.0/atk/atkhypertext.h
/usr/include/atk-1.0/atk/atkimage.h
/usr/include/atk-1.0/atk/atkmisc.h
/usr/include/atk-1.0/atk/atknoopobject.h
/usr/include/atk-1.0/atk/atknoopobjectfactory.h
/usr/include/atk-1.0/atk/atkobject.h
/usr/include/atk-1.0/atk/atkobjectfactory.h
/usr/include/atk-1.0/atk/atkregistry.h
/usr/include/atk-1.0/atk/atkrelation.h
/usr/include/atk-1.0/atk/atkrelationset.h
/usr/include/atk-1.0/atk/atkrelationtype.h
/usr/include/atk-1.0/atk/atkselection.h
/usr/include/atk-1.0/atk/atkstate.h
/usr/include/atk-1.0/atk/atkstateset.h
/usr/include/atk-1.0/atk/atkstreamablecontent.h
/usr/include/atk-1.0/atk/atktable.h
/usr/include/atk-1.0/atk/atktext.h
/usr/include/atk-1.0/atk/atkutil.h
/usr/include/atk-1.0/atk/atkvalue.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/time.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/bonobo-activation-2.0/bonobo-activation/Bonobo_Activation_types.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-activate.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-async.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-init.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-register.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-server-info.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-shlib.h
/usr/include/bonobo-activation-2.0/bonobo-activation/bonobo-activation-version.h
/usr/include/cairo/cairo-deprecated.h
/usr/include/cairo/cairo-features.h
/usr/include/cairo/cairo-version.h
/usr/include/glib-2.0/gio/gappinfo.h
/usr/include/glib-2.0/gio/gasyncresult.h
/usr/include/glib-2.0/gio/gbufferedinputstream.h
/usr/include/glib-2.0/gio/gbufferedoutputstream.h
/usr/include/glib-2.0/gio/gcancellable.h
/usr/include/glib-2.0/gio/gcontenttype.h
/usr/include/glib-2.0/gio/gdatainputstream.h
/usr/include/glib-2.0/gio/gdataoutputstream.h
/usr/include/glib-2.0/gio/gdrive.h
/usr/include/glib-2.0/gio/gemblemedicon.h
/usr/include/glib-2.0/gio/gfile.h
/usr/include/glib-2.0/gio/gfileattribute.h
/usr/include/glib-2.0/gio/gfileenumerator.h
/usr/include/glib-2.0/gio/gfileicon.h
/usr/include/glib-2.0/gio/gfileinfo.h
/usr/include/glib-2.0/gio/gfileinputstream.h
/usr/include/glib-2.0/gio/gfilemonitor.h
/usr/include/glib-2.0/gio/gfilenamecompleter.h
/usr/include/glib-2.0/gio/gfileoutputstream.h
/usr/include/glib-2.0/gio/gfilterinputstream.h
/usr/include/glib-2.0/gio/gfilteroutputstream.h
/usr/include/glib-2.0/gio/gicon.h
/usr/include/glib-2.0/gio/ginputstream.h
/usr/include/glib-2.0/gio/gioenums.h
/usr/include/glib-2.0/gio/gioenumtypes.h
/usr/include/glib-2.0/gio/gioerror.h
/usr/include/glib-2.0/gio/giomodule.h
/usr/include/glib-2.0/gio/gioscheduler.h
/usr/include/glib-2.0/gio/giotypes.h
/usr/include/glib-2.0/gio/gloadableicon.h
/usr/include/glib-2.0/gio/gmemoryinputstream.h
/usr/include/glib-2.0/gio/gmemoryoutputstream.h
/usr/include/glib-2.0/gio/gmount.h
/usr/include/glib-2.0/gio/gmountoperation.h
/usr/include/glib-2.0/gio/gnativevolumemonitor.h
/usr/include/glib-2.0/gio/goutputstream.h
/usr/include/glib-2.0/gio/gseekable.h
/usr/include/glib-2.0/gio/gsimpleasyncresult.h
/usr/include/glib-2.0/gio/gthemedicon.h
/usr/include/glib-2.0/gio/gvfs.h
/usr/include/glib-2.0/gio/gvolume.h
/usr/include/glib-2.0/gio/gvolumemonitor.h
/usr/include/glib-2.0/gobject/gclosure.h
/usr/include/glib-2.0/gobject/gmarshal.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-animation.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-core.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-features.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-io.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-loader.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h
/usr/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf-transform.h
/usr/include/libbonoboui-2.0/bonobo/bonobo-ui-sync.h
/usr/include/limits.h
/usr/include/orbit-2.0/orbit/dynamic/dynamic-defs.h
/usr/include/orbit-2.0/orbit/orb-core/allocators.h
/usr/include/orbit-2.0/orbit/orb-core/corba-any-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-any.h
/usr/include/orbit-2.0/orbit/orb-core/corba-context-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-context.h
/usr/include/orbit-2.0/orbit/orb-core/corba-defs.h
/usr/include/orbit-2.0/orbit/orb-core/corba-environment-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-environment.h
/usr/include/orbit-2.0/orbit/orb-core/corba-object-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-object.h
/usr/include/orbit-2.0/orbit/orb-core/corba-orb-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-orb.h
/usr/include/orbit-2.0/orbit/orb-core/corba-policy-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-string.h
/usr/include/orbit-2.0/orbit/orb-core/corba-typecode-type.h
/usr/include/orbit-2.0/orbit/orb-core/corba-typecode.h
/usr/include/orbit-2.0/orbit/orb-core/iop-defs.h
/usr/include/orbit-2.0/orbit/orb-core/orb-types.h
/usr/include/orbit-2.0/orbit/orb-core/orbit-object.h
/usr/include/orbit-2.0/orbit/orb-core/orbit-small.h
/usr/include/orbit-2.0/orbit/poa/poa-defs.h
/usr/include/orbit-2.0/orbit/poa/poa-types.h
/usr/include/orbit-2.0/orbit/poa/portableserver-current-type.h
/usr/include/orbit-2.0/orbit/poa/portableserver-poa-type.h
/usr/include/orbit-2.0/orbit/util/basic_types.h
/usr/include/orbit-2.0/orbit/util/orbit-genrand.h
/usr/include/pango-1.0/pango/pango-attributes.h
/usr/include/pango-1.0/pango/pango-bidi-type.h
/usr/include/pango-1.0/pango/pango-break.h
/usr/include/pango-1.0/pango/pango-context.h
/usr/include/pango-1.0/pango/pango-coverage.h
/usr/include/pango-1.0/pango/pango-engine.h
/usr/include/pango-1.0/pango/pango-enum-types.h
/usr/include/pango-1.0/pango/pango-features.h
/usr/include/pango-1.0/pango/pango-font.h
/usr/include/pango-1.0/pango/pango-fontmap.h
/usr/include/pango-1.0/pango/pango-fontset.h
/usr/include/pango-1.0/pango/pango-glyph-item.h
/usr/include/pango-1.0/pango/pango-glyph.h
/usr/include/pango-1.0/pango/pango-gravity.h
/usr/include/pango-1.0/pango/pango-item.h
/usr/include/pango-1.0/pango/pango-layout.h
/usr/include/pango-1.0/pango/pango-matrix.h
/usr/include/pango-1.0/pango/pango-renderer.h
/usr/include/pango-1.0/pango/pango-script.h
/usr/include/pango-1.0/pango/pango-tabs.h
/usr/include/pango-1.0/pango/pango-types.h
/usr/include/pango-1.0/pango/pango-utils.h
/usr/include/pango-1.0/pango/pangocairo.h
/usr/include/pthread.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/wctype.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/select.h
/usr/include/bits/setjmp.h
/usr/include/bits/xopen_lim.h
/usr/include/glib-2.0/gio/gemblem.h
/usr/include/glib-2.0/gmodule.h
/usr/include/orbit-2.0/orbit/orb-core/corba-pobj.h
/usr/include/orbit-2.0/orbit/poa/orbit-adaptor.h
/usr/include/pango-1.0/pango/pango-language.h
/usr/include/popt.h
/usr/include/sched.h
/usr/include/bits/local_lim.h
/usr/include/bits/sched.h
/usr/include/linux/limits.h
